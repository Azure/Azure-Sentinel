{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Isolate-AzVM",
        "description":  "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\" width=\"75px\" height=\"75px\">\n\n**Note:** Please refer to the following before installing the playbook: \n\n• Review the [README](https://github.com/Azure/Azure-Sentinel/blob/master/Playbooks/Isolate-AzVM/readme.md)\n\n • This playbook is intended to be run from a Microsoft Sentinel incident that has one or more Host entity mappings. The playbook will immediately execute against all Host entities in the associated Incident and perform the following (per VM): 1. Query ARG to determine path to the VM Resource Id. 2. Perform network isolation on the VM. 3. Snapshot the VM's disk(s) to the SOC enclave. 4. Shut down the VM to fully commit network isolation. 5. Update the Incident in Sentinel with the status of the automated isolation and VM snapshot.",
		"prerequisites": [
            "To implement, test, and operate the Isolate-AzVM playbook in the context of digital forensics incident response (DFIR), you will need to follow the detailed steps in the [README](https://github.com/Azure/Azure-Sentinel/blob/master/Playbooks/Isolate-AzVM/readme.md)"
        ],
        "postDeployment": [
            "After deployment of the the playbook, edit the parameters and assign RBAC roles as detailed in the [README](https://github.com/Azure/Azure-Sentinel/blob/master/Playbooks/Isolate-AzVM/readme.md)"
        ],        
        "prerequisitesDeployTemplateFile": "",
        "entities": [
            "host"
        ],
        "tags": [ "DFIR" ],
        "support": {
            "tier": "Developer"
        },
        "author": {
            "name": "Aaron Lightle"
        },
		"releaseNotes": [
            {
                "version": "1.0",
                "title": "Isolate-AzVM",
                "notes": [ "Initial version" ]
            }
        ]
    }, 
    "parameters": {
        "PlaybookName": {
            "defaultValue": "SOC-Isolate-AzVM",
            "type": "String"
        },
        "SentinelConnectionName": {
            "defaultValue": "azuresentinel-SOC-Isolate-AzVM",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
			"type": "Microsoft.Logic/workflows",
			"apiVersion": "2017-07-01",
			"name": "[parameters('PlaybookName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('SentinelConnectionName'))]"
            ],
			"identity": {
                "type": "SystemAssigned"
            },
            "properties": {
				"state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "ResourceMgrURL": {
                            "defaultValue": "https://management.azure.com",
                            "type": "String"
                        },
                        "AllowRemoteInboundCIDR": {
                            "defaultValue": "127.0.0.0/8",
                            "type": "String"
                        },
                        "SnapshotSubscriptionId": {
                            "defaultValue": "98765432-10fe-9876-fedc-ba0987654321",
                            "type": "String"
                        },
                        "SnapshotRG": {
                            "defaultValue": "SOC-DFIR-RG",
                            "type": "String"
                        },
                        "SnapshotDiskAccessName": {
                            "defaultValue": "SOC-DFIR-DiskAccess",
                            "type": "String"
                        },
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Entities_-_Get_Hosts": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "path": "/entities/host"
                            }
                        },
                        "Initialize_VMId": {
                            "runAfter": {
                                "Initialize_Analyst": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "vmid",
                                        "type": "string",
                                        "value": "@null"
                                    }
                                ]
                            }
                        },
                        "HTTP_-_Get_Subs": {
                            "runAfter": {
                                "Initialize_Subs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "uri": "@{parameters('ResourceMgrURL')}/subscriptions",
                                "method": "GET",
                                "queries": {
                                    "api-version": "2016-06-01"
                                },
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                }
                            }
                        },
                        "Initialize_Host": {
                            "runAfter": {
                                "Initialize_NSG": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "host",
                                        "type": "string",
                                        "value": "@null"
                                    }
                                ]
                            }
                        },
                        "Initialize_VMName": {
                            "runAfter": {
                                "Initialize_VMId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VMName",
                                        "type": "string",
                                        "value": "@null"
                                    }
                                ]
                            }
                        },
                        "Initialize_NSG": {
                            "runAfter": {
                                "Initialize_VMName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "NSG",
                                        "type": "string",
                                        "value": "@null"
                                    }
                                ]
                            }
                        },
                        "Initialize_Analyst": {
                            "runAfter": {
                                "Entities_-_Get_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Analyst",
                                        "type": "string",
                                        "value": "@split(split(triggerOutputs()?['headers']['Correlation-Context'], 'x-ms-client-object-id=')[1], ',')[0]"
                                    }
                                ]
                            }
                        },
                        "For_each_Sub": {
                            "foreach": "@body('HTTP_-_Get_Subs')?['value']",
                            "actions": {
                                "Append_Subs": {
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "Subs",
                                        "value": "@items('For_each_Sub')?['subscriptionId']"
                                    }
                                }
                            },
                            "runAfter": {
                                "HTTP_-_Get_Subs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_Host": {
                            "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "actions": {
                                "HTTP_-_Query_ARG": {
                                    "runAfter": {
                                        "Set_Host": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "uri": "@{parameters('ResourceMgrURL')}/providers/Microsoft.ResourceGraph/resources",
                                        "method": "POST",
                                        "queries": {
                                            "api-version": "2022-10-01"
                                        },
                                        "body": {
                                            "query": "resources | where type =~ 'microsoft.compute/virtualmachines' | where name contains '@{variables('host')}' | project vmid = id",
                                            "subscriptions": "@variables('Subs')"
                                        },
                                        "authentication": {
                                            "type": "ManagedServiceIdentity"
                                        }
                                    }
                                },
                                "Set_Host": {
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "host",
                                        "value": "@first(split(items('For_each_Host')?['hostName'], '.'))"
                                    }
                                },
                                "Sub_has_VM": {
                                    "actions": {
                                        "For_each_VM": {
                                            "foreach": "@body('HTTP_-_Query_ARG')?['data']",
                                            "actions": {
                                                "Set_VMId": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "vmid",
                                                        "value": "@items('For_each_VM')?['vmid']"
                                                    }
                                                },
                                                "HTTP_-_Get_VM": {
                                                    "runAfter": {
                                                        "Set_VMId": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "@{parameters('ResourceMgrURL')}@{variables('vmid')}",
                                                        "method": "GET",
                                                        "queries": {
                                                            "api-version": "2024-07-01"
                                                        },
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity"
                                                        }
                                                    }
                                                },
                                                "Set_VMName": {
                                                    "runAfter": {
                                                        "HTTP_-_Get_VM": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "VMName",
                                                        "value": "@body('HTTP_-_Get_VM')?['name']"
                                                    }
                                                },
                                                "Set_NSG": {
                                                    "runAfter": {
                                                        "Set_VMName": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "NSG",
                                                        "value": "SOC-IsolateVM-@{variables('VMName')}-NSG"
                                                    }
                                                },
                                                "HTTP_-_Get_NIC": {
                                                    "runAfter": {
                                                        "Set_NSG": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "@{parameters('ResourceMgrURL')}@{body('HTTP_-_Get_VM')?['properties']?['networkProfile']?['networkInterfaces'][0]?['id']}",
                                                        "method": "GET",
                                                        "queries": {
                                                            "api-version": "2024-01-01"
                                                        },
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity"
                                                        }
                                                    }
                                                },
                                                "Parse_JSON_-_NIC": {
                                                    "runAfter": {
                                                        "HTTP_-_Get_NIC": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('HTTP_-_Get_NIC')",
                                                        "schema": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "location": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "properties": {
                                                                    "properties": {
                                                                        "hostedWorkloads": {
                                                                            "type": "array"
                                                                        },
                                                                        "ipConfigurations": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "etag": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "id": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "properties": {
                                                                                        "properties": {
                                                                                            "primary": {
                                                                                                "type": "boolean"
                                                                                            },
                                                                                            "privateIPAddress": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "privateIPAddressVersion": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "privateIPAllocationMethod": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "provisioningState": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "publicIPAddress": {
                                                                                                "properties": {
                                                                                                    "id": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "subnet": {
                                                                                                "properties": {
                                                                                                    "id": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "name",
                                                                                    "id",
                                                                                    "etag",
                                                                                    "type",
                                                                                    "properties"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "macAddress": {
                                                                            "type": "string"
                                                                        },
                                                                        "networkSecurityGroup": {
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "primary": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "tapConfigurations": {
                                                                            "type": "array"
                                                                        },
                                                                        "virtualMachine": {
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "HTTP_-_Create_NSG": {
                                                    "runAfter": {
                                                        "Parse_JSON_-_NIC": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "@{parameters('ResourceMgrURL')}/subscriptions/@{split(body('Parse_JSON_-_NIC')?['id'], '/')[add(length(split(body('Parse_JSON_-_NIC')?['id'], '/')), -7)]}/resourceGroups/@{split(body('Parse_JSON_-_NIC')?['id'], '/')[add(length(split(body('Parse_JSON_-_NIC')?['id'], '/')), -5)]}/providers/Microsoft.Network/networkSecurityGroups/@{variables('NSG')}",
                                                        "method": "PUT",
                                                        "queries": {
                                                            "api-version": "2024-01-01"
                                                        },
                                                        "body": {
                                                            "location": "@{body('HTTP_-_Get_NIC')?['location']}",
                                                            "properties": {
                                                                "securityRules": [
                                                                    {
                                                                        "name": "SOC-DenyAllInBound",
                                                                        "properties": {
                                                                            "access": "Deny",
                                                                            "destinationAddressPrefix": "*",
                                                                            "destinationAddressPrefixes": [],
                                                                            "destinationPortRange": "*",
                                                                            "destinationPortRanges": [],
                                                                            "direction": "Inbound",
                                                                            "priority": 101,
                                                                            "protocol": "*",
                                                                            "sourceAddressPrefix": "*",
                                                                            "sourceAddressPrefixes": [],
                                                                            "sourcePortRange": "*",
                                                                            "sourcePortRanges": []
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "SOC-AllowRemoteInbound",
                                                                        "properties": {
                                                                            "access": "Allow",
                                                                            "destinationAddressPrefix": "*",
                                                                            "destinationAddressPrefixes": [],
                                                                            "destinationPortRanges": [
                                                                                "22",
                                                                                "3389"
                                                                            ],
                                                                            "direction": "Inbound",
                                                                            "priority": 4096,
                                                                            "protocol": "TCP",
                                                                            "sourceAddressPrefix": "@{parameters('AllowRemoteInboundCIDR')}",
                                                                            "sourceAddressPrefixes": [],
                                                                            "sourcePortRange": "*",
                                                                            "sourcePortRanges": []
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "SOC-DenyAllOutbound",
                                                                        "properties": {
                                                                            "access": "Deny",
                                                                            "destinationAddressPrefix": "*",
                                                                            "destinationAddressPrefixes": [],
                                                                            "destinationPortRange": "*",
                                                                            "destinationPortRanges": [],
                                                                            "direction": "Outbound",
                                                                            "priority": 100,
                                                                            "protocol": "*",
                                                                            "sourceAddressPrefix": "*",
                                                                            "sourceAddressPrefixes": [],
                                                                            "sourcePortRange": "*",
                                                                            "sourcePortRanges": []
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity"
                                                        }
                                                    }
                                                },
                                                "HTTP_-_Get_NSG": {
                                                    "runAfter": {
                                                        "HTTP_-_Create_NSG": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "@{parameters('ResourceMgrURL')}/subscriptions/@{split(body('Parse_JSON_-_NIC')?['id'], '/')[add(length(split(body('Parse_JSON_-_NIC')?['id'], '/')), -7)]}/resourceGroups/@{split(body('Parse_JSON_-_NIC')?['id'], '/')[add(length(split(body('Parse_JSON_-_NIC')?['id'], '/')), -5)]}/providers/Microsoft.Network/networkSecurityGroups/@{variables('NSG')}",
                                                        "method": "GET",
                                                        "queries": {
                                                            "api-version": "2024-01-01"
                                                        },
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity"
                                                        }
                                                    }
                                                },
                                                "HTTP_-_Assign_NSG": {
                                                    "runAfter": {
                                                        "HTTP_-_Get_NSG": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "@{parameters('ResourceMgrURL')}@{body('HTTP_-_Get_VM')?['properties']?['networkProfile']?['networkInterfaces'][0]?['id']}",
                                                        "method": "PUT",
                                                        "queries": {
                                                            "api-version": "2024-01-01"
                                                        },
                                                        "body": {
                                                            "location": "@{body('HTTP_-_Get_NIC')?['location']}",
                                                            "properties": {
                                                                "ipConfigurations": "@body('HTTP_-_Get_NIC')?['properties']?['ipConfigurations']",
                                                                "networkSecurityGroup": {
                                                                    "id": "@{body('HTTP_-_Get_NSG')?['id']}"
                                                                }
                                                            }
                                                        },
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity"
                                                        }
                                                    }
                                                },
                                                "Delay_-_5_seconds": {
                                                    "runAfter": {
                                                        "HTTP_-_Assign_NSG": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Wait",
                                                    "inputs": {
                                                        "interval": {
                                                            "count": 5,
                                                            "unit": "Second"
                                                        }
                                                    }
                                                },
                                                "Until_-_NIC_NSG_Set": {
                                                    "actions": {
                                                        "HTTP_-_Test_NIC_NSG": {
                                                            "type": "Http",
                                                            "inputs": {
                                                                "uri": "@{parameters('ResourceMgrURL')}@{body('HTTP_-_Get_VM')?['properties']?['networkProfile']?['networkInterfaces'][0]?['id']}",
                                                                "method": "GET",
                                                                "queries": {
                                                                    "api-version": "2024-01-01"
                                                                },
                                                                "authentication": {
                                                                    "type": "ManagedServiceIdentity"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Delay_-_5_seconds": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "expression": "@equals(body('HTTP_-_Test_NIC_NSG')?['properties']?['networkSecurityGroup']?['id'],body('HTTP_-_Get_NSG')?['id'])",
                                                    "limit": {
                                                        "count": 60,
                                                        "timeout": "PT3M"
                                                    },
                                                    "type": "Until"
                                                },
                                                "Until_-_NIC_Ready": {
                                                    "actions": {
                                                        "HTTP_-_Test_NIC_State": {
                                                            "type": "Http",
                                                            "inputs": {
                                                                "uri": "@{parameters('ResourceMgrURL')}@{body('HTTP_-_Get_VM')?['properties']?['networkProfile']?['networkInterfaces'][0]?['id']}",
                                                                "method": "GET",
                                                                "queries": {
                                                                    "api-version": "2024-01-01"
                                                                },
                                                                "authentication": {
                                                                    "type": "ManagedServiceIdentity"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Until_-_NIC_NSG_Set": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "expression": "@equals(body('HTTP_-_Test_NIC_State')?['properties']?['provisioningState'],'Succeeded')",
                                                    "limit": {
                                                        "count": 60,
                                                        "timeout": "PT3M"
                                                    },
                                                    "type": "Until"
                                                },
                                                "HTTP_-_Shutdown_VM": {
                                                    "runAfter": {
                                                        "Snap_DataDisks": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "@{parameters('ResourceMgrURL')}@{variables('vmid')}/deallocate",
                                                        "method": "POST",
                                                        "queries": {
                                                            "api-version": "2024-07-01"
                                                        },
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity"
                                                        }
                                                    }
                                                },
                                                "Condition": {
                                                    "actions": {
                                                        "Update_IR_-_success": {
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p class=\"editor-paragraph\">SOC Analyst <b><strong class=\"editor-text-bold\">successfully isolated</strong></b> Azure VM @{variables('VMName')} with a dedicated NSG named @{variables('NSG')}.</p><br><p class=\"editor-paragraph\"><b><strong class=\"editor-text-bold\">VM ResourceId:</strong></b> @{variables('vmid')}</p><p class=\"editor-paragraph\"><br><b><strong class=\"editor-text-bold\">NSG Id:</strong></b> @{body('HTTP_-_Get_NSG')?['id']}</p><br><p class=\"editor-paragraph\"><b><strong class=\"editor-text-bold\">OS Snapshot:</strong></b> @{parameters('ResourceMgrURL')}/subscriptions/@{parameters('SnapshotSubscriptionId')}/resourceGroups/@{parameters('SnapshotRG')}/providers/Microsoft.Compute/snapshots/@{variables('VMName')}_DiskOS_@{variables('DTG')}</p><p class=\"editor-paragraph\"><br><b><strong class=\"editor-text-bold\">Analyst: </strong></b>@{variables('Analyst')}</p><br>"
                                                                },
                                                                "path": "/Incidents/Comment"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "HTTP_-_Shutdown_VM": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Update_IR_-_fail": {
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "body": {
                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                        "message": "<p class=\"editor-paragraph\">The playbook <b><strong class=\"editor-text-bold\">did </strong></b><i><b><strong class=\"editor-text-bold editor-text-italic\">not </strong></b></i><b><strong class=\"editor-text-bold\">successfully isolate </strong></b>Azure VM @{variables('VMName')} with a dedicated NSG named @{variables('NSG')}.</p><br><p class=\"editor-paragraph\"><b><strong class=\"editor-text-bold\">VM ResourceId:</strong></b> @{variables('vmid')}</p><p class=\"editor-paragraph\"><br><b><strong class=\"editor-text-bold\">NSG Id:</strong></b> @{body('HTTP_-_Get_NSG')?['id']}</p><p class=\"editor-paragraph\"><br><b><strong class=\"editor-text-bold\">Analyst: </strong></b>@{variables('Analyst')}</p><br>"
                                                                    },
                                                                    "path": "/Incidents/Comment"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@outputs('HTTP_-_Shutdown_VM')?['statusCode']",
                                                                    200
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Snap_DataDisks": {
                                                    "actions": {
                                                        "For_each_DataDisk": {
                                                            "foreach": "@body('HTTP_-_Get_VM')?['properties']?['storageProfile']?['dataDisks']",
                                                            "actions": {
                                                                "Set_DiskID": {
                                                                    "runAfter": {
                                                                        "Set_LUN": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "DiskID",
                                                                        "value": "@items('For_each_DataDisk')?['managedDisk']?['id']"
                                                                    }
                                                                },
                                                                "Set_LUN": {
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "LUN",
                                                                        "value": "@items('For_each_DataDisk')?['lun']"
                                                                    }
                                                                },
                                                                "HTTP_-_Snap_DataDisk": {
                                                                    "runAfter": {
                                                                        "Set_DiskID": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Http",
                                                                    "inputs": {
                                                                        "uri": "@{parameters('ResourceMgrURL')}/subscriptions/@{parameters('SnapshotSubscriptionId')}/resourceGroups/@{parameters('SnapshotRG')}/providers/Microsoft.Compute/snapshots/@{variables('VMName')}_LUN@{variables('LUN')}_@{variables('DTG')}",
                                                                        "method": "PUT",
                                                                        "queries": {
                                                                            "api-version": "2024-03-02"
                                                                        },
                                                                        "body": {
                                                                            "location": "@{body('HTTP_-_Get_VM')?['location']}",
                                                                            "properties": {
                                                                                "creationData": {
                                                                                    "createOption": "Copy",
                                                                                    "sourceResourceId": "@{variables('DiskID')}"
                                                                                },
                                                                                "encryption": {
                                                                                    "type": "EncryptionAtRestWithPlatformKey"
                                                                                },
                                                                                "incremental": false,
                                                                                "diskAccessId": "/subscriptions/@{parameters('SnapshotSubscriptionId')}/resourceGroups/@{parameters('SnapshotRG')}/providers/Microsoft.Compute/diskAccesses/@{parameters('SnapshotDiskAccessName')}",
                                                                                "networkAccessPolicy": "AllowPrivate",
                                                                                "publicNetworkAccess": "Disabled"
                                                                            },
                                                                            "tags": {
                                                                                "Owner": "SOC",
                                                                                "Use": "SOC DFIR",
                                                                                "Created By": "@{variables('Analyst')}"
                                                                            }
                                                                        },
                                                                        "authentication": {
                                                                            "type": "ManagedServiceIdentity"
                                                                        }
                                                                    }
                                                                },
                                                                "Until_Data_Snap": {
                                                                    "actions": {
                                                                        "HTTP_-_Test_Data_Snap": {
                                                                            "type": "Http",
                                                                            "inputs": {
                                                                                "uri": "@{parameters('ResourceMgrURL')}/subscriptions/@{parameters('SnapshotSubscriptionId')}/resourceGroups/@{parameters('SnapshotRG')}/providers/Microsoft.Compute/snapshots/@{variables('VMName')}_LUN@{variables('LUN')}_@{variables('DTG')}",
                                                                                "method": "GET",
                                                                                "queries": {
                                                                                    "api-version": "2024-03-02"
                                                                                },
                                                                                "authentication": {
                                                                                    "type": "ManagedServiceIdentity"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "HTTP_-_Snap_DataDisk": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "expression": "@equals(body('HTTP_-_Test_Data_Snap')?['properties']?['provisioningState'],'Succeeded')",
                                                                    "limit": {
                                                                        "count": 60,
                                                                        "timeout": "PT3M"
                                                                    },
                                                                    "type": "Until"
                                                                }
                                                            },
                                                            "type": "Foreach",
                                                            "runtimeConfiguration": {
                                                                "concurrency": {
                                                                    "repetitions": 1
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Until_OS_Snapshot": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {}
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "greater": [
                                                                    "@length(body('HTTP_-_Get_VM')?['properties']?['storageProfile']?['dataDisks'])",
                                                                    0
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Until_OS_Snapshot": {
                                                    "actions": {
                                                        "HTTP_-_Test_OS_Snap": {
                                                            "type": "Http",
                                                            "inputs": {
                                                                "uri": "@{parameters('ResourceMgrURL')}/subscriptions/@{parameters('SnapshotSubscriptionId')}/resourceGroups/@{parameters('SnapshotRG')}/providers/Microsoft.Compute/snapshots/@{variables('VMName')}_DiskOS_@{variables('DTG')}",
                                                                "method": "GET",
                                                                "queries": {
                                                                    "api-version": "2024-03-02"
                                                                },
                                                                "authentication": {
                                                                    "type": "ManagedServiceIdentity"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "HTTP_-_Snapshot_OS": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "expression": "@equals(body('HTTP_-_Test_OS_Snap')?['properties']?['provisioningState'],'Succeeded')",
                                                    "limit": {
                                                        "count": 60,
                                                        "timeout": "PT3M"
                                                    },
                                                    "type": "Until"
                                                },
                                                "HTTP_-_Snapshot_OS": {
                                                    "runAfter": {
                                                        "Set_DTG": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "@{parameters('ResourceMgrURL')}/subscriptions/@{parameters('SnapshotSubscriptionId')}/resourceGroups/@{parameters('SnapshotRG')}/providers/Microsoft.Compute/snapshots/@{variables('VMName')}_DiskOS_@{variables('DTG')}",
                                                        "method": "PUT",
                                                        "queries": {
                                                            "api-version": "2024-03-02"
                                                        },
                                                        "body": {
                                                            "location": "@{body('HTTP_-_Get_VM')?['location']}",
                                                            "properties": {
                                                                "creationData": {
                                                                    "createOption": "Copy",
                                                                    "sourceResourceId": "@{body('HTTP_-_Get_VM')?['properties']?['storageProfile']?['osDisk']?['managedDisk']?['id']}"
                                                                },
                                                                "encryption": {
                                                                    "type": "EncryptionAtRestWithPlatformKey"
                                                                },
                                                                "incremental": false,
                                                                "diskAccessId": "/subscriptions/@{parameters('SnapshotSubscriptionId')}/resourceGroups/@{parameters('SnapshotRG')}/providers/Microsoft.Compute/diskAccesses/@{parameters('SnapshotDiskAccessName')}",
                                                                "networkAccessPolicy": "AllowPrivate",
                                                                "publicNetworkAccess": "Disabled"
                                                            },
                                                            "tags": {
                                                                "Owner": "SOC",
                                                                "Use": "SOC DFIR",
                                                                "Created By": "@{variables('Analyst')}"
                                                            }
                                                        },
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity"
                                                        }
                                                    }
                                                },
                                                "Set_DTG": {
                                                    "runAfter": {
                                                        "Until_-_NIC_Ready": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "DTG",
                                                        "value": "@formatDateTime(utcNow(), 'yyyy-MM-dd-HHmm')"
                                                    }
                                                }
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "runAfter": {
                                        "HTTP_-_Query_ARG": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {}
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@body('HTTP_-_Query_ARG')?['totalRecords']",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "For_each_Sub": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_DiskID": {
                            "runAfter": {
                                "Initialize_DTG": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DiskID",
                                        "type": "string",
                                        "value": "@null"
                                    }
                                ]
                            }
                        },
                        "Initialize_LUN": {
                            "runAfter": {
                                "Initialize_DiskID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LUN",
                                        "type": "integer"
                                    }
                                ]
                            }
                        },
                        "Initialize_DTG": {
                            "runAfter": {
                                "Initialize_Host": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DTG",
                                        "type": "string",
                                        "value": "@null"
                                    }
                                ]
                            }
                        },
                        "Initialize_Subs": {
                            "runAfter": {
                                "Initialize_LUN": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Subs",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('SentinelConnectionName'))]",
                                "connectionName": "[parameters('SentinelConnectionName')]",
								"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
								"connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
							}
						}
					}
				}
			}
		},
		{
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('SentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('SentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType":  "Alternative",
				"api": {
                    "name": "azuresentinel",
                    "displayName": "Microsoft Sentinel",
                    "description": "Cloud-native SIEM with a built-in AI so you can focus on what matters most",
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
					"type": "Microsoft.Web/locations/managedApis"
                }
            }
        },
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2021-04-01",
			"name": "nestedDeployment",
			"dependsOn": [
				"[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
			],
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"resources": [
						{
							"type": "Microsoft.Authorization/roleAssignments",
							"apiVersion": "2020-04-01-preview",
							"name": "[guid(parameters('SentinelConnectionName'), 'roleAssignment')]",
							"properties": {
								"roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ab8e14d6-4a74-4a29-9ba8-549422addade')]",
								"principalId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('PlaybookName')), '2017-07-01', 'Full').identity.principalId]",
								"principalType": "ServicePrincipal",
								"scope": "[resourceGroup().id]"
							}
						}
					]
				}
			}
		}
    ]
}