{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments":"This solution will create a Microsoft Sentinel incident when one or more data sources are discovered to have sent no data in the previous 24 hours.",
        "author":"John Joyner"
    },
    "parameters": {
            "PlaybookName": {
                "type": "String",
                "defaultValue": "Create-incident-on-missing-Data-Source",
                "metadata": {
                    "description": "The name of the logic app to create (no need to change to accept default)"
                }
            },
            "SentinelSubID": {
                "type": "String",
                "defaultValue": "[subscription().subscriptionId]",
                "metadata": {
                    "description": "The ID of the selected Azure subscription (no need to change to accept default)"
                }
            },
            "SentinelWSResourceGroup": {
                "type": "String",
                "defaultValue": "<Sentinel Resource Group Name>",
                "metadata": {
                    "description": "The resource group where Microsoft Sentinel is located (must be specified)"
                }               
             },
            "SentinelWSName": {
                "type": "String",
                "defaultValue": "<Sentinel Workspace Name>",
                "metadata": {
                    "description": "The name of the Microsoft Sentinel workspace (must be specified)"
                }   
        }
    },
    "variables": {
        "sentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "azuremonitorlogsConnectionName": "[concat('azuremon-', parameters('PlaybookName'))]"      
    },
    "resources": [
        {
        "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "name": "[variables('sentinelConnectionName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "displayName": "[parameters('PlaybookName')]",
          "customParameterValues": {},
          "api": {
            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
          }
        }
      },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuremonitorlogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn":[
                "[resourceId('Microsoft.Web/connections',variables('sentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections',variables('azuremonitorlogsConnectionName'))]"
                ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                            },
                        "SentinelSubID": {
                            "type": "String",
                            "defaultValue": "[parameters('SentinelSubID')]"
                            },
                         "SentinelWSResourceGroup": {
                             "type": "String",
                             "defaultValue": "[parameters('SentinelWSResourceGroup')]"             
                           },
                          "SentinelWSName": {
                             "type": "String",
                             "defaultValue": "[parameters('SentinelWSName')]"
                           }               
                    },
                    "triggers": {
                        "Recurrence_-_Run_Daily": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Condition_-_Were_any_stopped_Data_Sources_found": {
                            "actions": {
                                "Create_HTML_table_-_Formatted_list_of_stopped_Data_Sources": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "HTML",
                                        "from": "@variables('stopped-data-sources')"
                                    }
                                },
                                "Create_incident_-_One_or_more_Data_Sources_stopped_sending_data": {
                                    "runAfter": {
                                        "Create_HTML_table_-_Formatted_list_of_stopped_Data_Sources": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "description": "List of stopped data source(s):\n@{body('Create_HTML_table_-_Formatted_list_of_stopped_Data_Sources')}\nThe listed data source(s) stopped sending data in the last 24 hours, although some connected data sources may just not have had any data to send in this 24 hour window. If appropriate, investigate and work to restore data connection. If a data connector is no longer active, modify the \"Initialize variable - Sentinel Data Sources\" task in the \"Create-Incident-on-missing-Data-Source\" playbook (Logic app) to remove the inactive data source.\n",
                                            "severity": "Low",
                                            "status": "New",
                                            "title": "One or more Microsoft Sentinel data sources stopped sending data"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/Incidents/subscriptions/@{encodeURIComponent(parameters('SentinelSubID'))}/resourceGroups/@{encodeURIComponent(parameters('SentinelWSResourceGroup'))}/workspaces/@{encodeURIComponent(parameters('SentinelWSName'))}"
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_-_Loop_through_each_Data_Source": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@length(variables('stopped-data-sources'))",
                                                0
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_each_-_Loop_through_each_Data_Source": {
                            "foreach": "@body('Parse_JSON_-_Sentinel_Data_Sources')?['body']",
                            "actions": {
                                "Condition_-_Is_the_Data_Source_stopped": {
                                    "actions": {
                                        "Append_to_array_variable": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "stopped-data-sources",
                                                "value": {
                                                    "Data Source": "@{items('For_each_-_Loop_through_each_Data_Source')?['name']}"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Run_query_and_list_results_V2_(Preview)_-_Check_Data_Source_for_last_day": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@length(body('Run_query_and_list_results_V2_(Preview)_-_Check_Data_Source_for_last_day')?['value'])",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Run_query_and_list_results_V2_(Preview)_-_Check_Data_Source_for_last_day": {
                                    "runAfter": {
                                        "Set_variable_-_Data_Source_KQL": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "query": "@{items('For_each_-_Loop_through_each_Data_Source')?['kql']} | where TimeGenerated >= ago(1d) | summarize Time = max(TimeGenerated) | where isnotempty(Time)",
                                            "timerangetype": "Set in query"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/queryDataV2",
                                        "queries": {
                                            "resourcegroups": "[parameters('SentinelWSResourceGroup')]",
                                            "resourcename": "[parameters('SentinelWSName')]",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "[parameters('SentinelSubID')]"
                                        }
                                    }
                                },
                                "Set_variable_-_Data_Source_KQL": {
                                    "runAfter": {
                                        "Set_variable_-_Data_Source_name": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "kql",
                                        "value": "@items('For_each_-_Loop_through_each_Data_Source')?['kql']"
                                    }
                                },
                                "Set_variable_-_Data_Source_name": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "name",
                                        "value": "@items('For_each_-_Loop_through_each_Data_Source')?['name']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON_-_Sentinel_Data_Sources": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_variable_-_Data_Source_KQL": {
                            "runAfter": {
                                "Initialize_variable_-_Data_Source_name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "kql",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Data_Source_name": {
                            "runAfter": {
                                "Initialize_variable_-_Sentinel_Data_Sources": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Sentinel_Data_Sources": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Sentinel-data-sources",
                                        "type": "object",
                                        "value": {
                                            "body": [
                                                {
                                                    "kql": "AWSCloudTrail",
                                                    "name": "Amazon Web Services"
                                                },
                                                {
                                                    "kql": "AzureActivity",
                                                    "name": "Azure Activity"
                                                },
                                                {
                                                    "kql": "AzureDiagnostics | where ResourceProvider ==  \"MICROSOFT.KEYVAULT\"",
                                                    "name": "Azure Key Vault"
                                                },
                                                {
                                                    "kql": "StorageBlobLogs",
                                                    "name": "Azure Storage Account"
                                                },
                                                {
                                                    "kql": "ConfigurationData",
                                                    "name": "Change Tracking and Inventory"
                                                },
                                                {
                                                    "kql": "CommonSecurityLog | where DeviceVendor == \"Fortinet\" | where DeviceProduct startswith \"Fortigate\"",
                                                    "name": "Fortinet"
                                                },
                                                {
                                                    "kql": "W3CIISLog",
                                                    "name": "IIS Logs"
                                                },
                                                {
                                                    "kql": "OfficeActivity",
                                                    "name": "Microsoft 365 (formerly, Office 365)"
                                                },
                                                {
                                                    "kql": "DeviceEvents | union isfuzzy=true DeviceFileEvents | union isfuzzy=true DeviceImageLoadEvents | union isfuzzy=true DeviceInfo | union isfuzzy=true DeviceLogonEvents | union isfuzzy=true DeviceNetworkEvents | union isfuzzy=true DeviceNetworkInfo | union isfuzzy=true DeviceProcessEvents | union isfuzzy=true DeviceRegistryEvents | union isfuzzy=true DeviceFileCertificateInfo",
                                                    "name": "Microsoft Defender XDR"
                                                },
                                                {
                                                    "kql": "SigninLogs",
                                                    "name": "Microsoft Entra ID"
                                                },
                                                {
                                                    "kql": "Syslog",
                                                    "name": "Syslog via AMA"
                                                },
                                                {
                                                    "kql": "SqlAssessment_CL",
                                                    "name": "SQL Assessment"
                                                },
                                                {
                                                    "kql": "SqlVulnerabilityAssessmentScanStatus",
                                                    "name": "SQL Vulnerability Assessment Scan"
                                                },
                                                {
                                                    "kql": "VMConnection",
                                                    "name": "VM Insights"
                                                },
                                                {
                                                    "kql": "ASimDnsActivityLogs | where EventProduct == \"DNS Server\" | where EventVendor == \"Microsoft\"",
                                                    "name": "Windows DNS Events via AMA"
                                                },
                                                {
                                                    "kql": "Event",
                                                    "name": "Windows Event Logs"
                                                },
                                                {
                                                    "kql": "ASimNetworkSessionLogs | where EventProduct == \"Windows Firewall\"",
                                                    "name": "Windows Firewall Events via AMA"
                                                },
                                                {
                                                    "kql": "SecurityEvent",
                                                    "name": "Windows Security Events via AMA"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Stopped_Data_Sources": {
                            "runAfter": {
                                "Initialize_variable_-_Data_Source_KQL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "stopped-data-sources",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON_-_Sentinel_Data_Sources": {
                            "runAfter": {
                                "Initialize_variable_-_Stopped_Data_Sources": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@variables('Sentinel-data-sources')",
                                "schema": {
                                    "properties": {
                                        "body": {
                                            "items": {
                                                "properties": {
                                                    "kql": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "kql"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                                    "azuremonitorlogs": {
                                        "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]",
                                        "connectionName": "[variables('azuremonitorlogsConnectionName')]",
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                                    },
                                    "azuresentinel": {
                                        "connectionId": "[resourceId('Microsoft.Web/connections', variables('sentinelConnectionName'))]",
                                        "connectionName": "[variables('sentinelConnectionName')]",
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                                    }
                        }
                    }
                }
            }
        }
    ]
}
