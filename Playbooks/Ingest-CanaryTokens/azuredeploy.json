{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
      "title": "Put CanaryTokens webhook alerts to Custom Logs table",
      "description": "This Logic App connector will act as a Webhook listener, CanaryTokens can then send data upon an incident when the canary token has been opened. This will send the data to Azure Sentinel - CanaryTokens_CL",
      "mainSteps": [
          ""
      ],
      "prerequisites": [
          ""
      ],
      "postDeployment": [
          "1. Create CanaryTokens with LogicApp webhook\n2. Create matching analytic rule."
      ],
      "prerequisitesDeployTemplateFile": "",
      "lastUpdateTime": "2023-08-28T10:00:00.000Z",
      "entities": [
          "Ip"
      ],
      "tags": [
          "Alert",
          "Honeytokens",
          "Honeyfiles"
      ],
      "support": {
          "tier": "community"
      },
      "author": {
          "name": "Nathan Swift"
      },
      "source": {
          "kind": "Community"
      },
      "version": "1.1.0",
      "releaseNotes": [
          {
              "version": "1.0.0",
              "title": "Put CanaryTokens webhook alerts to Custom Logs table",
              "notes": [
                  "Initial version"
              ]
          },
          {
              "version": "1.1.0",
              "title": "v1.1.0",
              "notes": [
                  "Match current CanaryToken API, Remove duplicate GeoIP, resourceTags and location as parameters"
              ]
          }
      ]
  },
  "parameters": {
      "resourceTags": {
          "type": "object",
          "defaultValue": {
              "LogicAppsCategory": "security"
          },
          "metadata": {
              "description": "The Azure tags to set on the resource."
          }
      },
      "PlaybookName": {
          "defaultValue": "Ingest-CanaryTokens",
          "type": "String",
          "metadata": {
              "description": "The Playbook aka LogicApp name."
          }
      },
      "WorkspaceID": {
          "defaultValue": "your-workspaceID",
          "type": "string",
          "metadata": {
              "description": "The target WorkspaceId for custom logs table."
          }
      },
      "WorkspaceKey": {
          "defaultValue": "your-workspaceKey",
          "type": "securestring",
          "metadata": {
              "description": "The target WorkspaceKey for custom logs table."
          }
      },
      "location": {
          "type": "string",
          "defaultValue": "[resourceGroup().location]",
          "metadata": {
              "description": "Location for all resources."
          }
      }
  },
  "variables": {
      "azureloganalyticsdatacollectorConnectionName": "[concat('azureloganalyticsdatacollector-', parameters('PlaybookName'))]"
  },
  "resources": [
      {
          "type": "Microsoft.Web/connections",
          "apiVersion": "2016-06-01",
          "name": "[variables('azureloganalyticsdatacollectorConnectionName')]",
          "location": "[parameters('location')]",
          "tags": {
              "tags": "[parameters('resourceTags')]"
          },
          "properties": {
              "displayName": "IngestCanaryTokenAlerts",
              "customParameterValues": {},
              "api": {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
              },
              "parameterValues": {
                  "username": "[parameters('workspaceId')]",
                  "password": "[parameters('workspaceKey')]"
              }
          }
      },
      {
          "type": "Microsoft.Logic/workflows",
          "apiVersion": "2017-07-01",
          "name": "[parameters('PlaybookName')]",
          "location": "[resourceGroup().location]",
          "tags": {
              "tags": "[parameters('resourceTags')]"
          },
          "dependsOn": [
              "[resourceId('Microsoft.Web/connections', variables('azureloganalyticsdatacollectorConnectionName'))]"
          ],
          "properties": {
              "state": "Enabled",
              "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                      "$connections": {
                          "defaultValue": {},
                          "type": "Object"
                      }
                  },
                  "triggers": {
                      "manual": {
                          "type": "Request",
                          "kind": "Http",
                          "inputs": {}
                      }
                  },
                  "actions": {
                      "Compose_data_for_Sentinel": {
                          "runAfter": {
                              "HTTP_CanaryTokenDetails": [
                                  "Succeeded"
                              ]
                          },
                          "type": "Compose",
                          "inputs": {
                              "as": "@{body('Parse_JSON_Token_Response')?['additional_data']?['geo_info']?['asn']?['asn']}",
                              "canarytriggertime": "@body('Parse_JSON_Token_Response')?['time']",
                              "channel": "@{body('Parse_JSON_Token_Response')?['channel']}",
                              "city": "@{body('Parse_JSON_Token_Response')?['additional_data']?['geo_info']?['city']}",
                              "country": "@{body('Parse_JSON_Token_Response')?['additional_data']?['geo_info']?['country']}",
                              "countrycode": "@{body('Parse_JSON_Token_Response')?['additional_data']?['geo_info']?['country']}",
                              "fileloc": "@{body('Parse_JSON_Token_Response')?['additional_data']?['geo_info']?['loc']}",
                              "incidentlist_csv": "@{variables('incidentscsv_url')}",
                              "incidentlist_json": "@{variables('incidentsjson_url')}",
                              "lat": "",
                              "lon": "",
                              "manage_url": " @{body('Parse_JSON_Token_Response')?['manage_url']}",
                              "memo": "@{body('Parse_JSON_Token_Response')?['memo']}",
                              "org": "@{body('Parse_JSON_Token_Response')?['additional_data']?['geo_info']?['org']}",
                              "postal": "@{body('Parse_JSON_Token_Response')?['additional_data']?['geo_info']?['postal']}",
                              "region": "@{body('Parse_JSON_Token_Response')?['additional_data']?['geo_info']?['region']}",
                              "regionname": "@{body('Parse_JSON_Token_Response')?['additional_data']?['geo_info']?['region']}",
                              "src_ip": "@{body('Parse_JSON_Token_Response')?['src_ip']}",
                              "timezone": "@{body('Parse_JSON_Token_Response')?['additional_data']?['geo_info']?['timezone']}",
                              "token_type": "@{body('Parse_JSON_Token_Response')?['token_type']}",
                              "tokenhistory_url": "@{variables('history_url')}",
                              "useragent": "@{body('Parse_JSON_Token_Response')?['additional_data']?['useragent']}"
                          }
                      },
                      "HTTP_CanaryTokenDetails": {
                          "runAfter": {
                              "Initialize_variable_incidentsjson_url": [
                                  "Succeeded"
                              ]
                          },
                          "type": "Http",
                          "inputs": {
                              "method": "GET",
                              "uri": "@variables('incidentsjson_url')"
                          }
                      },
                      "Initialize_variable_TokenAuth": {
                          "runAfter": {
                              "Condition_newly_saved_webhook": [
                                  "Succeeded"
                              ]
                          },
                          "type": "InitializeVariable",
                          "inputs": {
                              "variables": [
                                  {
                                      "name": "TokenAuth",
                                      "type": "string",
                                      "value": "@{substring(body('Parse_JSON_Token_Response')?['manage_url'], 38)}"
                                  }
                              ]
                          }
                      },
                      "Initialize_variable_history_url": {
                          "runAfter": {
                              "Initialize_variable_TokenAuth": [
                                  "Succeeded"
                              ]
                          },
                          "type": "InitializeVariable",
                          "inputs": {
                              "variables": [
                                  {
                                      "name": "history_url",
                                      "type": "string",
                                      "value": "https://canarytokens.org/history?token=@{variables('TokenAuth')}"
                                  }
                              ]
                          }
                      },
                      "Initialize_variable_incidentscsv_url": {
                          "runAfter": {
                              "Initialize_variable_history_url": [
                                  "Succeeded"
                              ]
                          },
                          "type": "InitializeVariable",
                          "inputs": {
                              "variables": [
                                  {
                                      "name": "incidentscsv_url",
                                      "type": "string",
                                      "value": "https://canarytokens.org/download?fmt=incidentlist_csv&token=@{variables('TokenAuth')}"
                                  }
                              ]
                          }
                      },
                      "Initialize_variable_incidentsjson_url": {
                          "runAfter": {
                              "Initialize_variable_incidentscsv_url": [
                                  "Succeeded"
                              ]
                          },
                          "type": "InitializeVariable",
                          "inputs": {
                              "variables": [
                                  {
                                      "name": "incidentsjson_url",
                                      "type": "string",
                                      "value": "https://canarytokens.org/download?fmt=incidentlist_json&token=@{variables('TokenAuth')}"
                                  }
                              ]
                          }
                      },
                      "Condition_newly_saved_webhook": {
                          "actions": {
                              "Terminate_newly_saved_webhook": {
                                  "inputs": {
                                      "runStatus": "Cancelled"
                                  },
                                  "runAfter": {},
                                  "type": "Terminate"
                              }
                          },
                          "expression": {
                              "and": [
                                  {
                                      "equals": [
                                          "@body('Parse_JSON_Token_Response')?['memo']",
                                          "Congrats! The newly saved webhook works"
                                      ]
                                  }
                              ]
                          },
                          "runAfter": {
                              "Parse_JSON_Token_Response": [
                                  "Succeeded"
                              ]
                          },
                          "type": "If"
                      },
                      "Parse_JSON_Token_Response": {
                          "runAfter": {},
                          "type": "ParseJson",
                          "inputs": {
                              "content": "@triggerBody()",
                              "schema": {
                                  "properties": {
                                      "channel": {
                                          "type": "string"
                                      },
                                      "token_type": {
                                          "type": "string"
                                      },
                                      "src_ip": {
                                          "type": "string"
                                      },
                                      "token": {
                                          "type": "string"
                                      },
                                      "time": {
                                          "type": "string"
                                      },
                                      "memo": {
                                          "type": "string"
                                      },
                                      "manage_url": {
                                          "type": "string"
                                      },
                                      "additional_data": {
                                          "type": "object",
                                          "properties": {
                                              "geo_info": {
                                                  "type": "object",
                                                  "properties": {
                                                      "loc": {
                                                          "type": "string"
                                                      },
                                                      "org": {
                                                          "type": "string"
                                                      },
                                                      "city": {
                                                          "type": "string"
                                                      },
                                                      "country": {
                                                          "type": "string"
                                                      },
                                                      "region": {
                                                          "type": "string"
                                                      },
                                                      "hostname": {
                                                          "type": "string"
                                                      },
                                                      "ip": {
                                                          "type": "string"
                                                      },
                                                      "timezone": {
                                                          "type": "string"
                                                      },
                                                      "postal": {
                                                          "type": "string"
                                                      },
                                                      "asn": {
                                                          "type": "object",
                                                          "properties": {
                                                              "route": {
                                                                  "type": "string"
                                                              },
                                                              "type": {
                                                                  "type": "string"
                                                              },
                                                              "asn": {
                                                                  "type": "string"
                                                              },
                                                              "domain": {
                                                                  "type": "string"
                                                              },
                                                              "name": {
                                                                  "type": "string"
                                                              }
                                                          }
                                                      }
                                                  }
                                              },
                                              "useragent": {
                                                  "type": "string"
                                              }
                                          }
                                      }
                                  },
                                  "type": "object"
                              }
                          }
                      },
                      "Send_Data_to_Sentinel": {
                          "runAfter": {
                              "Compose_data_for_Sentinel": [
                                  "Succeeded"
                              ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                              "body": "@{outputs('Compose_data_for_Sentinel')}",
                              "headers": {
                                  "Log-Type": "CanaryTokens"
                              },
                              "host": {
                                  "connection": {
                                      "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                  }
                              },
                              "method": "post",
                              "path": "/api/logs"
                          }
                      }
                  },
                  "outputs": {}
              },
              "parameters": {
                  "$connections": {
                      "value": {
                          "AzureLogAnalyticsDataCollector": {
                              "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureloganalyticsdatacollectorConnectionName'))]",
                              "connectionName": "[variables('azureloganalyticsdatacollectorConnectionName')]",
                              "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
                          }
                      }
                  }
              }
          }
      }
  ]
}
