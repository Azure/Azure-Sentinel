{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "MDTI-Actor-LookupV2",
            "type":  "string"
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "azuresentinelConnectionName":  "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "SecuritycopilotConnectionName":  "[concat('Securitycopilot-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName":  "[concat('Keyvault-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Entities_-_Get_Hosts":  {
                            "runAfter":  {
                                "MDTI-Base":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "path":  "/entities/host"
                            }
                        },
                        "Entities_-_Get_IPs":  {
                            "runAfter":  {
                                "MDTI-Base":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "path":  "/entities/ip"
                            }
                        },
                        "For_each":  {
                            "foreach":  "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "actions":  {
                                "For_each_4":  {
                                    "foreach":  "@body('Parse_JSON_1')?['rules']",
                                    "actions":  {
                                        "Append_to_array_variable_1":  {
                                            "runAfter":  {
                                                "Compose_2":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "AppendToArrayVariable",
                                            "inputs":  {
                                                "name":  "entity_host",
                                                "value":  "@outputs('Compose_2')"
                                            }
                                        },
                                        "Compose_2":  {
                                            "type":  "Compose",
                                            "inputs":  "@concat(string(body('Parse_JSON_1')?['name']), ', ', string(body('Parse_JSON_1')?['description']))"
                                        },
                                        "Condition_2":  {
                                            "actions":  {
                                                "Add_comment_to_incident_(V3)_2":  {
                                                    "runAfter":  {
                                                        "Submit_a_Copilot_for_Security_prompt_2":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "message":  "\u003cp class=\"editor-paragraph\"\u003eActor Group Name: @{outputs('Compose_3')}\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003eActor Group Summary: @{body('Submit_a_Copilot_for_Security_prompt_2')?['EvaluationResultContent']}\u003c/p\u003e"
                                                        },
                                                        "path":  "/Incidents/Comment"
                                                    }
                                                },
                                                "Compose_3":  {
                                                    "runAfter":  {
                                                        "Join_1":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "Compose",
                                                    "inputs":  "@body('Join_1')"
                                                },
                                                "Join_1":  {
                                                    "type":  "Join",
                                                    "inputs":  {
                                                        "from":  "@variables('entity_host')",
                                                        "joinWith":  "\n"
                                                    }
                                                },
                                                "Submit_a_Copilot_for_Security_prompt_2":  {
                                                    "runAfter":  {
                                                        "Compose_3":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "body":  {
                                                            "PromptContent":  "Provide a summary for actor group named @{outputs('Compose_3')}"
                                                        },
                                                        "path":  "/process-prompt"
                                                    }
                                                },
                                                "Update_incident_2":  {
                                                    "runAfter":  {
                                                        "Add_comment_to_incident_(V3)_2":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "put",
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "tagsToAdd":  {
                                                                "TagsToAdd":  [
                                                                    {
                                                                        "Tag":  "@outputs('Compose_3')"
                                                                    }
                                                                ]
                                                            },
                                                            "severity":  "High",
                                                            "status":  "Active"
                                                        },
                                                        "path":  "/Incidents"
                                                    }
                                                }
                                            },
                                            "runAfter":  {
                                                "Append_to_array_variable_1":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else":  {
                                                "actions":  {
                                                }
                                            },
                                            "expression":  {
                                                "and":  [
                                                    {
                                                        "contains":  [
                                                            "@variables('entity_host')",
                                                            "Cyber Threat Intelligence"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type":  "If"
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_JSON_1":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "MDTI_API_Hosts":  {
                                    "type":  "Http",
                                    "inputs":  {
                                        "uri":  "https://graph.microsoft.com/beta/security/threatIntelligence/hosts/@{items('For_each')?['HostName']}.@{items('For_each')?['DnsDomain']}/reputation",
                                        "method":  "GET",
                                        "headers":  {
                                            "Content-Type":  "application/json"
                                        },
                                        "authentication":  {
                                            "audience":  "@{body('MDTI-Base')?['resource']}",
                                            "authority":  "",
                                            "clientId":  "@{body('MDTI-Base')?['clientId']}",
                                            "secret":  "@{body('MDTI-Base')?['clientSecret']}",
                                            "tenant":  "@{body('MDTI-Base')?['tenantId']}",
                                            "type":  "ActiveDirectoryOAuth"
                                        }
                                    },
                                    "runtimeConfiguration":  {
                                        "contentTransfer":  {
                                            "transferMode":  "Chunked"
                                        },
                                        "secureData":  {
                                            "properties":  [
                                                "inputs",
                                                "outputs"
                                            ]
                                        }
                                    }
                                },
                                "Parse_JSON_1":  {
                                    "runAfter":  {
                                        "MDTI_API_Hosts":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('MDTI_API_Hosts')",
                                        "schema":  {
                                            "properties":  {
                                                "@@odata.type":  {
                                                    "type":  "string"
                                                },
                                                "classification":  {
                                                    "type":  "string"
                                                },
                                                "id":  {
                                                    "type":  "string"
                                                },
                                                "rules":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "description":  {
                                                                "type":  "string"
                                                            },
                                                            "name":  {
                                                                "type":  "string"
                                                            },
                                                            "relatedDetailsUrl":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "severity":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                            "name",
                                                            "description",
                                                            "severity",
                                                            "relatedDetailsUrl"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                },
                                                "score":  {
                                                    "type":  "integer"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initialize_variable_1":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "For_each_2":  {
                            "foreach":  "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions":  {
                                "For_each_6":  {
                                    "foreach":  "@body('Parse_JSON')?['rules']",
                                    "actions":  {
                                        "Append_to_array_variable":  {
                                            "runAfter":  {
                                                "Compose":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "AppendToArrayVariable",
                                            "inputs":  {
                                                "name":  "entity_ip",
                                                "value":  "@outputs('Compose')"
                                            }
                                        },
                                        "Compose":  {
                                            "type":  "Compose",
                                            "inputs":  "@concat(string(body('Parse_JSON')?['name']), ', ', string(body('Parse_JSON')?['description']))"
                                        },
                                        "Condition_1":  {
                                            "actions":  {
                                                "Add_comment_to_incident_(V3)":  {
                                                    "runAfter":  {
                                                        "Submit_a_Copilot_for_Security_prompt_1":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "message":  "\u003cp class=\"editor-paragraph\"\u003eActor Group Name: @{outputs('Compose_1')}\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003eCopilot Summary: @{body('Submit_a_Copilot_for_Security_prompt_1')?['EvaluationResultContent']}\u003c/p\u003e"
                                                        },
                                                        "path":  "/Incidents/Comment"
                                                    }
                                                },
                                                "Compose_1":  {
                                                    "runAfter":  {
                                                        "Join":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "Compose",
                                                    "inputs":  "replace(replace(body('Join'), 'Cyber Threat Intelligence', ''), ',', '')"
                                                },
                                                "Join":  {
                                                    "type":  "Join",
                                                    "inputs":  {
                                                        "from":  "@variables('entity_ip')",
                                                        "joinWith":  "\n"
                                                    }
                                                },
                                                "Submit_a_Copilot_for_Security_prompt_1":  {
                                                    "runAfter":  {
                                                        "Compose_1":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "body":  {
                                                            "PromptContent":  "Provide a summary of the actor group @{outputs('Compose_1')}"
                                                        },
                                                        "path":  "/process-prompt"
                                                    }
                                                },
                                                "Update_incident":  {
                                                    "runAfter":  {
                                                        "Add_comment_to_incident_(V3)":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "put",
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "tagsToAdd":  {
                                                                "TagsToAdd":  [
                                                                    {
                                                                        "Tag":  "@outputs('Compose_1')"
                                                                    }
                                                                ]
                                                            },
                                                            "severity":  "High",
                                                            "status":  "Active"
                                                        },
                                                        "path":  "/Incidents"
                                                    }
                                                }
                                            },
                                            "runAfter":  {
                                                "Append_to_array_variable":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else":  {
                                                "actions":  {
                                                }
                                            },
                                            "expression":  {
                                                "and":  [
                                                    {
                                                        "contains":  [
                                                            "@variables('entity_ip')",
                                                            "Cyber Threat Intelligence"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type":  "If"
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_JSON":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "MDTI_API_IPs":  {
                                    "type":  "Http",
                                    "inputs":  {
                                        "uri":  "https://graph.microsoft.com/beta/security/threatIntelligence/hosts/@{items('For_each_2')?['Address']}/reputation",
                                        "method":  "GET",
                                        "headers":  {
                                            "content-type":  "application/json"
                                        },
                                        "authentication":  {
                                            "audience":  "@{body('MDTI-Base')?['resource']}",
                                            "authority":  "",
                                            "clientId":  "@{body('MDTI-Base')?['clientId']}",
                                            "secret":  "@{body('MDTI-Base')?['clientSecret']}",
                                            "tenant":  "@{body('MDTI-Base')?['tenantId']}",
                                            "type":  "ActiveDirectoryOAuth"
                                        }
                                    },
                                    "runtimeConfiguration":  {
                                        "contentTransfer":  {
                                            "transferMode":  "Chunked"
                                        },
                                        "secureData":  {
                                            "properties":  [
                                                "inputs",
                                                "outputs"
                                            ]
                                        }
                                    }
                                },
                                "Parse_JSON":  {
                                    "runAfter":  {
                                        "MDTI_API_IPs":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('MDTI_API_IPs')",
                                        "schema":  {
                                            "properties":  {
                                                "@@odata.type":  {
                                                    "type":  "string"
                                                },
                                                "classification":  {
                                                    "type":  "string"
                                                },
                                                "id":  {
                                                    "type":  "string"
                                                },
                                                "rules":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "description":  {
                                                                "type":  "string"
                                                            },
                                                            "name":  {
                                                                "type":  "string"
                                                            },
                                                            "relatedDetailsUrl":  {
                                                                "type":  [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "severity":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                            "name",
                                                            "description",
                                                            "severity",
                                                            "relatedDetailsUrl"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                },
                                                "score":  {
                                                    "type":  "integer"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initialize_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "For_each_3":  {
                            "foreach":  "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions":  {
                                "Append_to_array_variable_3":  {
                                    "runAfter":  {
                                        "Function_App_call":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "AppendToArrayVariable",
                                    "inputs":  {
                                        "name":  "groups",
                                        "value":  "@body('Function_App_call')"
                                    }
                                },
                                "For_each_7":  {
                                    "foreach":  "@variables('groups')",
                                    "actions":  {
                                        "Compose_6":  {
                                            "type":  "Compose",
                                            "inputs":  "@split(items('For_each_7'), ', ')\r\n"
                                        },
                                        "Compose_7":  {
                                            "runAfter":  {
                                                "Compose_6":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "Compose",
                                            "inputs":  "@first(outputs('Compose_6'))\r\n"
                                        },
                                        "Condition":  {
                                            "actions":  {
                                                "Add_comment_to_incident_(V3)_1":  {
                                                    "runAfter":  {
                                                        "Submit_a_Copilot_for_Security_prompt":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "message":  "\u003cp class=\"editor-paragraph\"\u003eActor Group Name: @{outputs('Compose_7')}\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003eCopilot Summary: @{body('Submit_a_Copilot_for_Security_prompt')?['EvaluationResultContent']}\u003c/p\u003e"
                                                        },
                                                        "path":  "/Incidents/Comment"
                                                    }
                                                },
                                                "Add_comment_to_incident_(V3)_4":  {
                                                    "runAfter":  {
                                                        "Add_comment_to_incident_(V3)_1":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "message":  "\u003cp class=\"editor-paragraph\"\u003eActor Groups and associated domains:\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003e@{body('Create_HTML_table')}\u003c/p\u003e"
                                                        },
                                                        "path":  "/Incidents/Comment"
                                                    }
                                                },
                                                "Create_HTML_table":  {
                                                    "type":  "Table",
                                                    "inputs":  {
                                                        "from":  "@variables('groups')",
                                                        "format":  "HTML"
                                                    }
                                                },
                                                "Submit_a_Copilot_for_Security_prompt":  {
                                                    "runAfter":  {
                                                        "Create_HTML_table":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "body":  {
                                                            "PromptContent":  "Provide a summary for actor group @{outputs('Compose_7')}"
                                                        },
                                                        "path":  "/process-prompt"
                                                    }
                                                },
                                                "Update_incident_1":  {
                                                    "runAfter":  {
                                                        "Add_comment_to_incident_(V3)_4":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "put",
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "tagsToAdd":  {
                                                                "TagsToAdd":  [
                                                                    {
                                                                        "Tag":  "@outputs('Compose_7')"
                                                                    }
                                                                ]
                                                            },
                                                            "severity":  "High",
                                                            "status":  "Active"
                                                        },
                                                        "path":  "/Incidents"
                                                    }
                                                }
                                            },
                                            "runAfter":  {
                                                "Compose_7":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else":  {
                                                "actions":  {
                                                }
                                            },
                                            "expression":  {
                                                "and":  [
                                                    {
                                                        "not":  {
                                                            "equals":  [
                                                                "@outputs('Compose_7')",
                                                                ""
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "not":  {
                                                            "equals":  [
                                                                "@length(outputs('Compose_7'))",
                                                                0
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type":  "If"
                                        }
                                    },
                                    "runAfter":  {
                                        "Append_to_array_variable_3":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "Function_App_call":  {
                                    "type":  "Http",
                                    "inputs":  {
                                        "uri":  "https://mdti-lookup.azurewebsites.net/api/mdtipdns?item=@{items('For_each_3')?['Address']}\u0026code=@{body('Get_secret')?['value']}",
                                        "method":  "POST"
                                    },
                                    "runtimeConfiguration":  {
                                        "contentTransfer":  {
                                            "transferMode":  "Chunked"
                                        },
                                        "secureData":  {
                                            "properties":  [
                                                "inputs",
                                                "outputs"
                                            ]
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initialize_variable_4":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "For_each_3-copy":  {
                            "foreach":  "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "actions":  {
                                "Append_to_array_variable_4":  {
                                    "runAfter":  {
                                        "Function_App_call_1":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "AppendToArrayVariable",
                                    "inputs":  {
                                        "name":  "hostpivot",
                                        "value":  "@body('Function_App_call_1')"
                                    }
                                },
                                "For_each_8":  {
                                    "foreach":  "@variables('hostpivot')",
                                    "actions":  {
                                        "Compose_8":  {
                                            "type":  "Compose",
                                            "inputs":  "@split(items('For_each_8'), ', ')\r\n"
                                        },
                                        "Compose_9":  {
                                            "runAfter":  {
                                                "Compose_8":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "Compose",
                                            "inputs":  "@first(outputs('Compose_8'))\r\n"
                                        },
                                        "Condition_4":  {
                                            "actions":  {
                                                "Add_comment_to_incident_(V3)_5":  {
                                                    "runAfter":  {
                                                        "Submit_a_Copilot_for_Security_prompt_4":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "message":  "\u003cp class=\"editor-paragraph\"\u003eActor Group Name: @{outputs('Compose_9')}\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003eCopilot Summary: @{body('Submit_a_Copilot_for_Security_prompt_4')?['EvaluationResultContent']}\u003c/p\u003e"
                                                        },
                                                        "path":  "/Incidents/Comment"
                                                    }
                                                },
                                                "Add_comment_to_incident_(V3)_6":  {
                                                    "runAfter":  {
                                                        "Add_comment_to_incident_(V3)_5":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "message":  "\u003cp class=\"editor-paragraph\"\u003eActor Groups and associated domains:\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003e@{body('Create_HTML_table_1')}\u003c/p\u003e"
                                                        },
                                                        "path":  "/Incidents/Comment"
                                                    }
                                                },
                                                "Create_HTML_table_1":  {
                                                    "type":  "Table",
                                                    "inputs":  {
                                                        "from":  "@variables('hostpivot')",
                                                        "format":  "HTML"
                                                    }
                                                },
                                                "Submit_a_Copilot_for_Security_prompt_4":  {
                                                    "runAfter":  {
                                                        "Create_HTML_table_1":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "post",
                                                        "body":  {
                                                            "PromptContent":  "Provide a summary for actor group @{outputs('Compose_9')}"
                                                        },
                                                        "path":  "/process-prompt"
                                                    }
                                                },
                                                "Update_incident_4":  {
                                                    "runAfter":  {
                                                        "Add_comment_to_incident_(V3)_6":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "ApiConnection",
                                                    "inputs":  {
                                                        "host":  {
                                                            "connection":  {
                                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method":  "put",
                                                        "body":  {
                                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                                            "tagsToAdd":  {
                                                                "TagsToAdd":  [
                                                                    {
                                                                        "Tag":  "@outputs('Compose_9')"
                                                                    }
                                                                ]
                                                            },
                                                            "severity":  "High",
                                                            "status":  "Active"
                                                        },
                                                        "path":  "/Incidents"
                                                    }
                                                }
                                            },
                                            "runAfter":  {
                                                "Compose_9":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else":  {
                                                "actions":  {
                                                }
                                            },
                                            "expression":  {
                                                "and":  [
                                                    {
                                                        "not":  {
                                                            "equals":  [
                                                                "@outputs('Compose_9')",
                                                                ""
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "not":  {
                                                            "equals":  [
                                                                "@length(outputs('Compose_9'))",
                                                                0
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type":  "If"
                                        }
                                    },
                                    "runAfter":  {
                                        "Append_to_array_variable_4":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "Function_App_call_1":  {
                                    "type":  "Http",
                                    "inputs":  {
                                        "uri":  "https://mdti-lookup.azurewebsites.net/api/mdtipdns?item=@{item()?['HostName']}.@{item()?['DnsDomain']}\u0026code=@{body('Get_secret')?['value']}",
                                        "method":  "POST"
                                    },
                                    "runtimeConfiguration":  {
                                        "contentTransfer":  {
                                            "transferMode":  "Chunked"
                                        },
                                        "secureData":  {
                                            "properties":  [
                                                "inputs",
                                                "outputs"
                                            ]
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initialize_variable_5":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Get_secret":  {
                            "runAfter":  {
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['Keyvault']['connectionId']"
                                    }
                                },
                                "method":  "get",
                                "path":  "/secrets/@{encodeURIComponent('MDTI-Function-App')}/value"
                            }
                        },
                        "Initialize_variable":  {
                            "runAfter":  {
                                "Entities_-_Get_IPs":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "entity_ip",
                                        "type":  "array",
                                        "value":  [
                                        ]
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_1":  {
                            "runAfter":  {
                                "Entities_-_Get_Hosts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "entity_host",
                                        "type":  "array",
                                        "value":  [
                                        ]
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_3":  {
                            "runAfter":  {
                                "Entities_-_Get_IPs":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "groups",
                                        "type":  "array",
                                        "value":  [
                                        ]
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_4":  {
                            "runAfter":  {
                                "Initialize_variable_3":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "actorgroup",
                                        "type":  "array",
                                        "value":  [
                                        ]
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_5":  {
                            "runAfter":  {
                                "Entities_-_Get_Hosts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "hostpivot",
                                        "type":  "array",
                                        "value":  [
                                        ]
                                    }
                                ]
                            }
                        },
                        "MDTI-Base":  {
                            "runAfter":  {
                                "Get_secret":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Workflow",
                            "inputs":  {
                                "host":  {
                                    "workflow":  {
                                        "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/MDTI-Base')]"
                                    },
                                    "triggerName":  "manual"
                                }
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azuresentinel1":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('azuresentinelConnectionName'))]",
                                "connectionName":  "[variables('azuresentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "securitycopilot":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('SecuritycopilotConnectionName'))]",
                                "connectionName":  "[variables('SecuritycopilotConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Securitycopilot')]"
                            },
                            "":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName":  "[variables('KeyvaultConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "MDTI-Actor-LookupV2",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('azuresentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('SecuritycopilotConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('azuresentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('azuresentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('SecuritycopilotConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('SecuritycopilotConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Securitycopilot')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('KeyvaultConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('KeyvaultConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
                }
            }
        }
    ]
}
