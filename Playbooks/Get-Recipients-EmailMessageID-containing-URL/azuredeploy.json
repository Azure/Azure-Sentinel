{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "<PlaybookName>",
            "type": "string"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        },
        "TenantID": {
            "defaultValue": "<TenantID>",
            "type": "string"
        },
        "ClientID": {
            "defaultValue": "<M365 API ClientID>",
            "type": "string"
        },
        "Secret": {
            "defaultValue": "<M365 API Secret>",
            "type": "securestring"
        }
    },
    "variables": {
        "DefenderForEndpointConnectionName": "[concat('defenderforendpoint-', parameters('PlaybookName'))]",
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('DefenderForEndpointConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/wdatp')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('DefenderForEndpointConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "tags": {
                "LogicAppsCategory": "security"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_alert": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Alert_-_Get_incident_2": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                            }
                        },
                        "Entities_-_Get_URLs": {
                            "runAfter": {
                                "Alert_-_Get_incident_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['Entities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/url"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {
                                        "For_each_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@body('Alert_-_Get_incident_2')?['id']",
                                            "message": "<p>@{variables('Comment')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Append_to_string_variable_2": {
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "Comment",
                                        "value": "URL: @{items('For_each')?['Url']}\n"
                                    }
                                },
                                "For_each_2": {
                                    "foreach": "@body('Parse_JSON_2')?['Results']",
                                    "actions": {
                                        "Append_to_string_variable": {
                                            "runAfter": {},
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "Comment",
                                                "value": "Email Recipient: @{items('For_each_2')?['RecipientEmailAddress']}  Network Message Id: @{items('For_each_2')?['NetworkMessageId']}\n"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Append_to_string_variable_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "HTTP": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://api.security.microsoft.com",
                                            "clientId": "[parameters('ClientID')]",
                                            "secret": "[parameters('Secret')]",
                                            "tenant": "[parameters('TenantID')]",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "Query": "EmailUrlInfo | where Url contains '@{items('For_each')?['Url']}' | join EmailEvents on NetworkMessageId | where datetime_diff( 'hour' , todatetime('@{body('Alert_-_Get_incident_2')?['properties']?['createdTimeUtc']}'), Timestamp ) < 2 | project Url, RecipientEmailAddress, NetworkMessageId"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "method": "POST",
                                        "uri": "https://api.security.microsoft.com/api/advancedhunting/run"
                                    }
                                },
                                "Parse_JSON_2": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP')",
                                        "schema": {
                                            "properties": {
                                                "Results": {
                                                    "type": "array"
                                                },
                                                "Schema": {
                                                    "items": {
                                                        "properties": {
                                                            "Name": {
                                                                "type": "string"
                                                            },
                                                            "Type": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "Name",
                                                            "Type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "Stats": {
                                                    "properties": {
                                                        "ExecutionTime": {
                                                            "type": "number"
                                                        },
                                                        "dataset_statistics": {
                                                            "items": {
                                                                "properties": {
                                                                    "table_row_count": {
                                                                        "type": "integer"
                                                                    },
                                                                    "table_size": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "table_row_count",
                                                                    "table_size"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "resource_usage": {
                                                            "properties": {
                                                                "cache": {
                                                                    "properties": {
                                                                        "disk": {
                                                                            "properties": {
                                                                                "hits": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "misses": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "total": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "memory": {
                                                                            "properties": {
                                                                                "hits": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "misses": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "total": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "cpu": {
                                                                    "properties": {
                                                                        "kernel": {
                                                                            "type": "string"
                                                                        },
                                                                        "total cpu": {
                                                                            "type": "string"
                                                                        },
                                                                        "user": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "memory": {
                                                                    "properties": {
                                                                        "peak_per_node": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Set_variable": {
                                    "runAfter": {
                                        "Parse_JSON_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Comment",
                                        "value": "@{null}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_4": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_4": {
                            "runAfter": {
                                "Entities_-_Get_URLs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Comment",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "wdatp": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('DefenderForEndpointConnectionName'))]",
                                "connectionName": "[variables('DefenderForEndpointConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/wdatp')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}