{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "AS-IP-Blocklist-HTTP", 
        "description": "This playbook is intended to be triggered from an Azure Logic App master playbook. It will add the IP address from Microsoft Sentinel Incidents to a Microsoft Azure Conditional Access Named Locations list, signifying compromised IP addresses.",
        "prerequisites": "1. A Microsoft Azure Named Locations list id is needed. 2. A Microsoft Azure App Registration is also needed for the Microsoft Graph API. 3. A Microsoft Azure key vault containing the app registration secret must also be set up. Support for the set up and configuration of each of these items can be found here: https://github.com/Accelerynt-Security/AS-IP-Blocklist",
        "postDeployment": ["Access to the Azure Key Vault must be granted to the playbook","The Microsoft Sentinel Contributor role must be applied to the playbook"],
        "lastUpdateTime": "2023-12-06T12:03:07Z",
        "entities": ["IP"], 
        "tags": ["Microsoft Sentinel", "Incident", "Conditional Access", "Named Locations"],
        "support": {
            "tier": "partner"
        },
        "author": {
            "name": "Accelerynt"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AS-IP-Blocklist-HTTP",
            "type": "string"
        },
        "NamedLocationsListName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Microsoft Azure Named Locations list that will hold the IPs"
            }
        },
        "NamedLocationsListID": {
            "type": "string",
            "metadata": {
                "description": "ID of the Microsoft Azure Named Locations list that will hold the IPs"
            }
        },
        "AppRegistrationID": {
            "type": "string",
            "metadata" : {
                "description" : "Application (client) ID of the App Registration"
            }
        },
        "AppRegistrationTenant": {
            "type": "string",
            "metadata" : {
                "description" : "Directory (tenant) ID of the App Registration"
            }
        },
        "KeyVaultName": {
            "type": "string",
            "metadata" : {
                "description" : "Name of the Key Vault that stores the App Registration Secret"
            }
        },
        "SecretName": {
            "type": "string",
            "metadata": {
                "description": "Name of Key Vault Secret that contains the value of the App Registration Secret"
            }
        }
    },
    "variables": {
        "azuresentinel": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "keyvault": "[concat('keyvault-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuresentinel')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('keyvault')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('KeyVaultName')]"
                },
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]",
                "[resourceId('Microsoft.Web/connections', variables('keyvault'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "Type": {
                                                "type": "string"
                                            },
                                            "address": {
                                                "type": "string"
                                            },
                                            "friendlyName": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "IncidentID",
                                            "address",
                                            "friendlyName",
                                            "Type"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@{triggerBody()[0]?['IncidentID']}",
                                            "message": "<p><strong>Added the following IPs to the Named Locations list:<br>\n</strong>@{variables('Added IPs')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Response_-_200": {
                                    "runAfter": {
                                        "Add_comment_to_incident_(V3)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "statusCode": 200
                                    }
                                }
                            },
                            "runAfter": {
                                "HTTP-_Add_IP_to_Named_Locations_List": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Response_-_400": {
                                        "runAfter": {},
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "statusCode": 400
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@outputs('HTTP-_Add_IP_to_Named_Locations_List')['statusCode']",
                                            204
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_Each_-_Existing_IP": {
                            "foreach": "@body('Parse_JSON')?['ipRanges']",
                            "actions": {
                                "Append_to_string_variable": {
                                    "runAfter": {},
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "Json Body",
                                        "value": "\n@{items('For_Each_-_Existing_IP')},\n"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_-_Added_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_Each_-_Incident_IP": {
                            "foreach": "@triggerBody()",
                            "actions": {
                                "Append_to_String_Variable_-_JSON_Body": {
                                    "runAfter": {},
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "Json Body",
                                        "value": " \n{\n         \"@odata.type\": \"#microsoft.graph.iPv4CidrRange\",\n          \"cidrAddress\": \"@{concat(items('For_Each_-_Incident_IP')?['Address'], '/32')}\"\n },"
                                    }
                                },
                                "Append_to_string_variable_-_Added_IPs": {
                                    "runAfter": {
                                        "Append_to_String_Variable_-_JSON_Body": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "Added IPs",
                                        "value": "@{concat(items('For_Each_-_Incident_IP')?['Address'], '/32')}\n"
                                    }
                                }
                            },
                            "runAfter": {
                                "For_Each_-_Existing_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_Secret": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/secrets/@{encodeURIComponent(''', parameters('SecretName'), ''')}/value')]"
                            }
                        },
                        "HTTP-_Add_IP_to_Named_Locations_List": {
                            "runAfter": {
                                "For_Each_-_Incident_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "clientId": "[parameters('AppRegistrationID')]",
                                    "secret": "@body('Get_Secret')?['value']",
                                    "tenant": "[parameters('AppRegistrationTenant')]",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": "@concat(substring(variables('Json Body'), 0, lastIndexOf(variables('Json Body'), ',')), decodeUriComponent('%0A'),']', decodeUriComponent('%0A'), '}')",
                                "headers": {
                                    "Content-type": "application/json"
                                },
                                "method": "PATCH",
                                "uri": "[concat('https://graph.microsoft.com/v1.0/identity/conditionalAccess/namedLocations/', parameters('NamedLocationsListID'))]"
                            }
                        },
                        "HTTP_-_Get_Previous_List_Values": {
                            "runAfter": {
                                "Get_Secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "clientId": "[parameters('AppRegistrationID')]",
                                    "secret": "@body('Get_Secret')?['value']",
                                    "tenant": "[parameters('AppRegistrationTenant')]",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "uri": "[concat('https://graph.microsoft.com/v1.0/identity/conditionalAccess/namedLocations/', parameters('NamedLocationsListID'))]"
                            },
                            "description": "PATCH (and also PUT) method has been observed to overwrite an entire existing list with new values, and POST is not accepted at this endpoint. This GET step is necessary top preserve the preexisting values."
                        },
                        "Initialize_Variable_-_JSON_Body": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Json Body",
                                        "type": "string",
                                        "value": "[concat('{\n\"@odata.type\": \"#microsoft.graph.ipNamedLocation\",\n\"displayName\": \"', parameters('NamedLocationsListName'), '\",\n\"isTrusted\": false,\n \"ipRanges\": [')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Added_IPs": {
                            "runAfter": {
                                "Initialize_Variable_-_JSON_Body": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Added IPs",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "HTTP_-_Get_Previous_List_Values": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_-_Get_Previous_List_Values')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "@@odata.type": {
                                            "type": "string"
                                        },
                                        "createdDateTime": {
                                            "type": "string"
                                        },
                                        "displayName": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "ipRanges": {
                                            "items": {
                                                "properties": {
                                                    "@@odata.type": {
                                                        "type": "string"
                                                    },
                                                    "cidrAddress": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "@@odata.type",
                                                    "cidrAddress"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "isTrusted": {
                                            "type": "boolean"
                                        },
                                        "modifiedDateTime": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]",
                                "connectionName": "[variables('azuresentinel')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('keyvault'))]",
                                "connectionName": "[variables('keyvault')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}
