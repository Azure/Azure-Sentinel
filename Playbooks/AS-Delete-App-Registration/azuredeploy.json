{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "AS-Delete-App-Registration", 
        "description": "This playbook is intended to be run from a Microsoft Sentinel incident. If any app registration entities are found (i.e., any entities where kind == CloudApplication), they will be deleted. This playbook matches by name, since a unique app registration ID cannot currently be pulled into the entity list, so if there are multiple app registrations exactly matching the name(s) of the CloudApplication entities, all will be deleted.",
        "prerequisites": "1. A Microsoft Azure App Registration is needed for the Microsoft Graph API. 2. A Microsoft Azure key vault containing the app registration secret must also be set up. Support for the set up and configuration of each of these items can be found here: https://github.com/Accelerynt-Security/AS-Delete-App-Registration",
        "lastUpdateTime": "2023-06-15T19:35:47Z",
        "entities": ["CloudApplication"], 
        "tags": ["Microsoft Sentinel", "Incident", "App Registration", "CloudApplication"], 
        "support": {
            "tier": "partner"
        },
        "author": {
            "name": "Accelerynt"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AS-Delete-App-Registration",
            "type": "string",
            "metadata": {
                "description": "Name of the Logic Apps resource to be created"
            }
        },
        "AppRegistrationID": {
            "type": "string",
            "metadata" : {
                "description" : "Application (client) ID of the App Registration"
            }
        },
        "AppRegistrationTenant": {
            "type": "string",
            "metadata" : {
                "description" : "Directory (tenant) ID of the App Registration"
            }
        },
        "KeyVaultName": {
            "type": "string",
            "metadata" : {
                "description" : "Name of the Key Vault that stores the App Registration Secret"
            }
        },
        "SecretName": {
            "type": "string",
            "metadata": {
                "description": "Name of Key Vault Secret that contains the value of the App Registration Secret"
            }
        }
    },
    "variables": {
        "azuresentinel": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "keyvault": "[concat('keyvault-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuresentinel')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('keyvault')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('KeyVaultName')]"
                },
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]",
                "[resourceId('Microsoft.Web/connections', variables('keyvault'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Get_Secret": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/secrets/@{encodeURIComponent(''', parameters('SecretName'), ''')}/value')]"
                            }
                        },
                        "For_each_-_Entity": {
                            "foreach": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                            "actions": {
                                "Condition_-_Check_if_entity_is_app_registration": {
                                    "actions": {
                                        "For_each_-_App_Registration": {
                                            "foreach": "@body('HTTP_-_Get_App_Registrations')?['value']",
                                            "actions": {
                                                "Condition_-_Check_for_name_match": {
                                                    "actions": {
                                                        "Add_comment_to_incident_(V3)": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>- <strong>Deleted App Registration</strong> -<br>\nName: @{items('For_each_-_App_Registration')?['displayName']}<br>\nID: @{items('For_each_-_App_Registration')?['id']}</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "runAfter": {
                                                                "HTTP_-_Delete_App_Registration": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "HTTP_-_Delete_App_Registration": {
                                                            "runAfter": {},
                                                            "type": "Http",
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://graph.microsoft.com",
                                                                    "clientId": "[parameters('AppRegistrationID')]",
                                                                    "secret": "@body('Get_Secret')?['value']",
                                                                    "tenant": "[parameters('AppRegistrationTenant')]",
                                                                    "type": "ActiveDirectoryOAuth"
                                                                },
                                                                "method": "DELETE",
                                                                "uri": "https://graph.microsoft.com/v1.0/applications/@{items('For_each_-_App_Registration')?['id']}"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@items('For_each_-_App_Registration')?['displayName']",
                                                                    "@items('For_each_-_Entity')?['properties']?['appName']"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "runAfter": {
                                                "HTTP_-_Get_App_Registrations": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "HTTP_-_Get_App_Registrations": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "clientId": "[parameters('AppRegistrationID')]",
                                                    "secret": "@body('Get_Secret')?['value']",
                                                    "tenant": "[parameters('AppRegistrationTenant')]",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "method": "GET",
                                                "uri": "https://graph.microsoft.com/v1.0/applications?$select=id,displayName"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_each_-_Entity')?['kind']",
                                                    "CloudApplication"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Get_Secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]",
                                "connectionName": "[variables('azuresentinel')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('keyvault'))]",
                                "connectionName": "[variables('keyvault')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}
