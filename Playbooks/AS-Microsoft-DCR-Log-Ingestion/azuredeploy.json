{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "AS-Microsoft-DCR-Log-Ingestion", 
        "description": "This playbook is intended to be run ",
        "preDeployment": ["App registration", "Data collection Endpoints", "Data Collection Rules", "Azure Keyvault Secret"],
        "postDeployment": ["Access to the Azure Key Vault must be granted to the playbook"],
        "lastUpdateTime": "2024-08-21T17:48:00Z",
        "tags": ["Microsoft Graph", "Microsoft Office"], 
        "support": {
            "tier": "partner"
        },
        "author": {
            "name": "Accelerynt"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AS-Microsoft-DCR-Log-Ingestion",
            "type": "string",
            "metadata": {
                "description": "Name of the Logic App resource to be created"
            }
        },
        "SendingAppRegistrationTenantId": {
            "type": "string",
            "metadata" : {
                "description" : "Enter the Directory (tenant) Id of the App Registration that will be used to send data"
            }
        },
        "SendingAppRegistrationClientID": {
            "type": "string",
            "metadata" : {
                "description" : "Enter the Application (client) ID of the App Registration that will be used to send data"
            }
        },
        "SendingTenantSubscriptionID": {
            "type": "string",
            "metadata" : {
                "description" : "Enter the subscription ID for the tenant that will send the data"
            }
        },
        "ReceivingAppRegistrationClientID": {
            "type": "string",
            "metadata" : {
                "description" : "Enter the Application (client) ID of the App Registration that will be used to receive data"
            }
        },
        "KeyVaultName": {
            "type": "string",
            "metadata" : {
                "description" : "Name of the Key Vault that stores the App Registration client secrets"
            }
        },
        "SendingAppRegistrationKeyVaultSecretName": {
            "type": "string",
            "metadata": {
                "description": "Name of Key Vault Secret that contains the sending App Registration client secret"
            }
        },
        "ReceivingAppRegistrationKeyVaultSecretName": {
            "type": "string",
            "metadata": {
                "description": "Name of Key Vault Secret that contains the receiving App Registration client secret"
            }
        },
        "EntraSignInLogsIngestionURL": {
            "type": "string",
            "metadata": {
                "description": "Enter the Logs Ingestion URL from the EntraSignInLogs DCE"
            }
        },
        "EntraSignInLogsImmutableId": {
            "type": "string",
            "metadata": {
                "description": "Enter the ImmutableId from the EntraSignInLogs DCR"
            }
        },
        "EntraSignInLogsDataSource": {
            "type": "string",
            "metadata": {
                "description": "Enter the data source from the EntraSignInLogs DCR"
            }
        },
        "EntraAuditLogsIngestionURL": {
            "type": "string",
            "metadata": {
                "description": "Enter the Logs Ingestion URL from the EntraAuditLogs DCE"
            }
        },
        "EntraAuditLogsImmutableId": {
            "type": "string",
            "metadata": {
                "description": "Enter the ImmutableId from the EntraAuditLogs DCR"
            }
        },
        "EntraAuditLogsDataSource": {
            "type": "string",
            "metadata": {
                "description": "Enter the data source from the EntraAuditLogs DCR"
            }
        },
        "OfficeActivityIngestionURL": {
            "type": "string",
            "metadata": {
                "description": "Enter the Logs Ingestion URL from the OfficeActivty DCE"
            }
        },
        "OfficeActivtyImmutableId": {
            "type": "string",
            "metadata": {
                "description": "Enter the ImmutableId from the OfficeActivty DCR"
            }
        },
        "OfficeActivtyDataSource": {
            "type": "string",
            "metadata": {
                "description": "Enter the data source from the OfficeActivty DCR"
            }
        }
    },
    "variables": {
        "keyvault": "[concat('keyvault-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('keyvault')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('KeyVaultName')]"
                },
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('keyvault'))]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 5
                            },
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 5
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_Each_-_O365_Audit_Logs": {
                            "actions": {
                                "For_each_-_Content_URI_Item": {
                                    "actions": {
                                        "HTTP_-_Send_Data_to_Office_Activity_Logs_Data_Collection_Endpoint": {
                                            "inputs": {
                                                "body": [
                                                    "@items('For_each_-_Content_URI_Item')"
                                                ],
                                                "headers": {
                                                    "Authorization": "Bearer @{body('HTTP_-_Authenticate_to_OfficeActivityLogs_Data_Collection_Endpoint')?['access_token']}",
                                                    "Content-Length": "@{length(string(items('For_each_-_Content_URI_Item')))}",
                                                    "Content-Type": "application/json",
                                                    "Host": "[parameters('OfficeActivityIngestionURL')]"
                                                },
                                                "method": "POST",
                                                "uri": "[concat(parameters('OfficeActivityIngestionURL'), '/dataCollectionRules/', parameters('OfficeActivtyImmutableId'), '/streams/', parameters('OfficeActivtyDataSource'), '?api-version=2023-01-01')]"
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        }
                                    },
                                    "foreach": "@json(body('HTTP_-_Get_O365_Content'))",
                                    "runAfter": {
                                        "HTTP_-_Get_O365_Content": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "HTTP_-_Get_O365_Content": {
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://manage.office.com",
                                            "clientId": "[parameters('SendingAppRegistrationClientID')]",
                                            "secret": "@{body('Get_Sending_App_Registration_Client_Secret')?['value']}",
                                            "tenant": "[parameters('SendingAppRegistrationTenantId')]",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "method": "GET",
                                        "uri": "@{items('For_Each_-_O365_Audit_Logs')?['contentUri']}"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "foreach": "@body('HTTP_-_Get_O365_Audit_General_Logs')",
                            "runAfter": {
                                "HTTP_-_Authenticate_to_OfficeActivityLogs_Data_Collection_Endpoint": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_-_Entra_Audit_Logs": {
                            "actions": {
                                "HTTP_-_Send_Data_to_Entra_Audit_Log_Data_Collection_Endpoint": {
                                    "inputs": {
                                        "body": [
                                            "@items('For_each_-_Entra_Audit_Logs')"
                                        ],
                                        "headers": {
                                            "Authorization": "Bearer @{body('HTTP-_Authenticate_to_Entra_AuditLogs_Data_Collection_Endpoint')?['access_token']}",
                                            "Content-Length": "@{length(string(items('For_each_-_Entra_Audit_Logs')))}",
                                            "Content-Type": "application/json",
                                            "Host": "[parameters('EntraAuditLogsIngestionURL')]"
                                        },
                                        "method": "POST",
                                        "uri": "[concat(parameters('EntraAuditLogsIngestionURL'), '/dataCollectionRules/', parameters('EntraAuditLogsImmutableId'), '/streams/', parameters('EntraAuditLogsDataSource'), '?api-version=2023-01-01')]"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "foreach": "@body('HTTP_-_Get_Entra_Audit_Logs')?['value']",
                            "runAfter": {
                                "HTTP-_Authenticate_to_Entra_AuditLogs_Data_Collection_Endpoint": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_-_Entra_Sign_in_Logs": {
                            "actions": {
                                "HTTP_-_Send_Data_to_SignInLog_Data_Collection_Endpoint": {
                                    "inputs": {
                                        "body": [
                                            "@items('For_each_-_Entra_Sign_in_Logs')"
                                        ],
                                        "headers": {
                                            "Authorization": "Bearer @{body('HTTP_-_Authenticate_to_SignInLogs_Data_Collection_Endpoint')?['access_token']}",
                                            "Content-Length": "@{length(string(items('For_each_-_Entra_Sign_in_Logs')))}",
                                            "Content-Type": "application/json",
                                            "Host": "[parameters('EntraSignInLogsIngestionURL')]"
                                        },
                                        "method": "POST",
                                        "uri": "[concat(parameters('EntraSignInLogsIngestionURL'), '/dataCollectionRules/', parameters('EntraSignInLogsImmutableId'), '/streams/', parameters('EntraSignInLogsDataSource'), '?api-version=2023-01-01')]"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "foreach": "@body('HTTP_-_Get_Entra_SignIn_Logs')?['value']",
                            "runAfter": {
                                "HTTP_-_Authenticate_to_SignInLogs_Data_Collection_Endpoint": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP-_Authenticate_to_Entra_AuditLogs_Data_Collection_Endpoint": {
                            "inputs": {
                                "body": "[concat('grant_type=client_credentials&client_id=', parameters('ReceivingAppRegistrationClientID'),'&client_secret=@{body(''Get_Receiving_App_Registration_Client_Secret'')?[''value'']}&scope=https://monitor.azure.com/.default')]",
                                "headers": {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                },
                                "method": "POST",
                                "uri": "[concat('https://login.microsoftonline.com/', subscription().tenantId, '/oauth2/v2.0/token')]"
                            },
                            "runAfter": {
                                "HTTP_-_Get_Entra_Audit_Logs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "HTTP_-_Authenticate_to_OfficeActivityLogs_Data_Collection_Endpoint": {
                            "inputs": {
                                "body": "[concat('grant_type=client_credentials&client_id=', parameters('ReceivingAppRegistrationClientID'),'&client_secret=@{body(''Get_Receiving_App_Registration_Client_Secret'')?[''value'']}&scope=https://monitor.azure.com/.default')]",
                                "headers": {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                },
                                "method": "POST",
                                "uri": "[concat('https://login.microsoftonline.com/', subscription().tenantId, '/oauth2/v2.0/token')]"
                            },
                            "runAfter": {
                                "HTTP_-_Get_O365_Audit_General_Logs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "HTTP_-_Authenticate_to_SignInLogs_Data_Collection_Endpoint": {
                            "inputs": {
                                "body": "[concat('grant_type=client_credentials&client_id=', parameters('ReceivingAppRegistrationClientID'),'&client_secret=@{body(''Get_Receiving_App_Registration_Client_Secret'')?[''value'']}&scope=https://monitor.azure.com/.default')]",
                                "headers": {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                },
                                "method": "POST",
                                "uri": "[concat('https://login.microsoftonline.com/', subscription().tenantId, '/oauth2/v2.0/token')]"
                            },
                            "runAfter": {
                                "HTTP_-_Get_Entra_SignIn_Logs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "HTTP_-_Get_Entra_Audit_Logs": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "clientId": "[parameters('SendingAppRegistrationClientID')]",
                                    "secret": "@{body('Get_Sending_App_Registration_Client_Secret')?['value']}",
                                    "tenant": "[parameters('SendingAppRegistrationTenantId')]",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "headers": {
                                    "Accept": "application/json",
                                    "Content-Type": "application/json"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/auditLogs/directoryAudits?$filter=activityDateTime ge @{addMinutes(variables('UTCNow'), -5)}"
                            },
                            "runAfter": {
                                "Get_Receiving_App_Registration_Client_Secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "HTTP_-_Get_Entra_SignIn_Logs": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "clientId": "[parameters('SendingAppRegistrationClientID')]",
                                    "secret": "@{body('Get_Sending_App_Registration_Client_Secret')?['value']}",
                                    "tenant": "[parameters('SendingAppRegistrationTenantId')]",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "headers": {
                                    "Accept": "application/json",
                                    "Content-Type": "application/json"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/auditLogs/signIns?$filter=createdDateTime ge @{addMinutes(variables('UTCNow'), -5)}"
                            },
                            "runAfter": {
                                "For_each_-_Entra_Audit_Logs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "HTTP_-_Get_O365_Audit_General_Logs": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://manage.office.com",
                                    "clientId": "[parameters('SendingAppRegistrationClientID')]",
                                    "secret": "@{body('Get_Sending_App_Registration_Client_Secret')?['value']}",
                                    "tenant": "[parameters('SendingAppRegistrationTenantId')]",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "headers": {
                                    "Accept": "application/json",
                                    "Content-Type": "application/json"
                                },
                                "method": "GET",
                                "uri": "[concat('https://manage.office.com/api/v1.0/', parameters('SendingTenantSubscriptionID'),'/activity/feed/subscriptions/content?contentType=Audit.AzureActiveDirectory&PublisherIdentifier=Microsoft?&startTime=@{addMinutes(variables(''UTCNow''), -5)}&endTime=@{variables(''UTCNow'')}')]"
                            },
                            "runAfter": {
                                "For_each_-_Entra_Sign_in_Logs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Initialize_variable_-_UTC_Now": {
                            "description": "Get the current time stamp so it is the same in all references",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UTCNow",
                                        "type": "string",
                                        "value": "@{utcNow()}"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Get_Sending_App_Registration_Client_Secret": {
                            "runAfter": {
                                "Initialize_variable_-_UTC_Now": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/secrets/@{encodeURIComponent(''', parameters('SendingAppRegistrationKeyVaultSecretName'), ''')}/value')]"
                            }
                        },
                        "Get_Receiving_App_Registration_Client_Secret": {
                            "runAfter": {
                                "Get_Sending_App_Registration_Client_Secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/secrets/@{encodeURIComponent(''', parameters('ReceivingAppRegistrationKeyVaultSecretName'), ''')}/value')]"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('keyvault'))]",
                                "connectionName": "[variables('keyvault')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}
