name: Package Command
env:
  APPINSIGHTS: "${{ vars.APPINSIGHTS }}"
  DEFAULTPACKAGEVERSION: "${{ vars.DEFAULTPACKAGEVERSION }}"
  BASE_FOLDER_PATH: "${{ vars.BASEFOLDERPATH }}"
  BRANCH_NAME: "${{ github.event.client_payload.pull_request.head.ref || github.event.client_payload.pullRequestBranchName }}"
  GITHUB_APPS_ID: "${{ secrets.APPLICATION_ID }}"
  GITHUB_APPS_KEY: "${{ secrets.APPLICATION_PRIVATE_KEY }}"

on:
  repository_dispatch:
    types: [package-command, Package-command, PACKAGE-command]

concurrency:
  group: "GroupName-PackageCommand-${{ github.event.client_payload.pull_request.number || github.run_id }}"
  cancel-in-progress: true

jobs:
  validate-and-create-package:
    if: ${{ !github.event.pull_request.head.repo.fork && !contains(github.event.client_payload.pull_request.head.ref , 'dependabot/') && !contains(github.event.client_payload.pullRequestBranchName , 'dependabot/') }}
    runs-on: ubuntu-latest
    steps:
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@46e4a501e119d39574a54e53a06c9a705efc55c9
        with:
          app-id: ${{ env.GITHUB_APPS_ID }}
          private-key: ${{ env.GITHUB_APPS_KEY }}

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        env:
          GeneratedToken: ${{ steps.generate_token.outputs.token }}
        with:
          ref: "${{ env.BRANCH_NAME }}"
          fetch-depth: 2
          token: ${{ env.GeneratedToken}}

      - id: checkAutomatedPR
        name: check-Automated-PR
        if: ${{ success() }}
        env:
          BranchName: ${{ github.event.pull_request.head.ref || github.event.client_payload.pull_request.head.ref || github.event.client_payload.pullRequestBranchName }}
        shell: pwsh
        run: |
          $pullRequestBranchName = "$env:BranchName"
          Write-Host "Pull Request Branch Name is $pullRequestBranchName"
          $isAutomatedPR = $false
          if ($pullRequestBranchName -like '*automated-pr')
          {
            Write-Host "Skipping packaging as it is an automated pr!"
            $isAutomatedPR = $true
          }
          Write-Output "isAutomatedPR=$isAutomatedPR" >> $env:GITHUB_OUTPUT
          Write-Host "Is this Pull Request autogenerated $isAutomatedPR"

      - id: validateAndCreatePackage
        name: validate-create-package
        if: ${{ success() && steps.checkAutomatedPR.outputs.isAutomatedPR == 'False' }}
        env:
          RUNID: "${{ github.run_id }}" 
          PULL_REQUEST_NUMBER: "${{ github.event.client_payload.pull_request.number || github.event.client_payload.pullRequestNumber }}"
        shell: pwsh
        run: |
          $runId = "${{ env.RUNID }}"
          $instrumentationKey = "${{ env.APPINSIGHTS }}"
          $pullRequestNumber = "${{ env.PULL_REQUEST_NUMBER }}"
          $defaultPackageVersion = "${{ env.DEFAULTPACKAGEVERSION }}"
          $baseFolderPath = "${{ env.BASE_FOLDER_PATH }}"
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module powershell-yaml
          ./.script/package-automation/package-service.ps1 $runId $pullRequestNumber $instrumentationKey $baseFolderPath $defaultPackageVersion $false

      - name: Upload Artifacts
        id: uploadPackageArtifacts
        if: ${{ success() && (steps.validateAndCreatePackage.outcome == 'success' && env.IS_CREATE_PACKAGE && env.PACKAGE_CREATION_PATH != '' && env.BLOBNAME != '') }}
        uses: actions/upload-artifact@e0057a5b76f2fdad976135e8dd7b691e632b9056
        env:
          BLOBNAME: "${{ steps.validateAndCreatePackage.outputs.blobName }}"
          PACKAGE_CREATION_PATH: "${{ steps.validateAndCreatePackage.outputs.packageCreationPath }}"
          DATA_FOLDER_PATH: "${{ steps.validateAndCreatePackage.outputs.dataFolderPath }}"
          DATA_INPUT_FILE_NAME: "${{ steps.validateAndCreatePackage.outputs.dataInputFileName }}"
          SOLUTION_NAME: "${{ steps.validateAndCreatePackage.outputs.solutionName }}"
          SOLUTION_SUPPORTED_BY: "${{ steps.validateAndCreatePackage.outputs.solutionSupportedBy }}"
          RUNID: "${{ github.run_id }}" 
          PULL_REQUEST_NUMBER: "${{ github.event.client_payload.pull_request.number || github.event.client_payload.pullRequestNumber }}"
          IS_CREATE_PACKAGE: ${{ steps.validateAndCreatePackage.outputs.isCreatePackage }}
        with: 
          name: "${{ env.BLOBNAME }}"
          path: "${{ env.PACKAGE_CREATION_PATH }}"

      - name: Upload Data File Artifacts
        id: uploadDataFileArtifact
        if: ${{ success() && (steps.validateAndCreatePackage.outcome == 'success' && env.DATA_FOLDER_PATH != '' && env.DATA_INPUT_FILE_NAME != '') }}
        uses: actions/upload-artifact@e0057a5b76f2fdad976135e8dd7b691e632b9056
        env:
          DATA_FOLDER_PATH: "${{ steps.validateAndCreatePackage.outputs.dataFolderPath }}"
          DATA_INPUT_FILE_NAME: "${{ steps.validateAndCreatePackage.outputs.dataInputFileName }}"
        with: 
          name: "${{ env.DATA_INPUT_FILE_NAME }}"
          path: "${{ env.DATA_FOLDER_PATH }}"

      - name: Push changes to Existing PR
        if: ${{ success() && steps.uploadDataFileArtifact.outcome == 'success'}}
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "Github Bot"
          git add -A
          git commit -m '[skip ci] Github Bot Added package to Pull Request!'
          git push

      - uses: docker/build-push-action@v2
        id: publishGithubPackage
        name: Run ARM-TTK
        if: ${{ success() }}
        continue-on-error: true
        env: 
          SolutionName: "${{ steps.validateAndCreatePackage.outputs.solutionName }}"
          mainTemplateChanged: "True"
          createUiChanged: "True"
        with:
          context: .
          file: ./.github/actions/Dockerfile
          push: false
          build-args: |
            SolutionName
            mainTemplateChanged
            createUiChanged