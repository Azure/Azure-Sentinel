name: Package Command
env:
  APPINSIGHTS: "${{ vars.APPINSIGHTS }}"
  DEFAULTPACKAGEVERSION: "${{ vars.DEFAULTPACKAGEVERSION }}"
  BASE_FOLDER_PATH: "${{ vars.BASEFOLDERPATH }}"
  BRANCH_NAME: "${{ github.event.client_payload.pull_request.head.ref || github.event.client_payload.pullRequestBranchName }}"
  PULL_REQUEST_NUMBER: "${{ github.event.client_payload.pull_request.number || github.event.client_payload.pullRequestNumber }}"

on:
  repository_dispatch:
    types: [package-command, Package-command, PACKAGE-command]

concurrency:
  group: "package-command-${{ github.event.client_payload.pull_request.number || github.run_id }}"
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  validate-and-create-package:
    if: ${{ !github.event.pull_request.head.repo.fork && !contains(github.event.client_payload.pull_request.head.ref , 'dependabot/') && !contains(github.event.client_payload.pullRequestBranchName , 'dependabot/') }}
    runs-on: ubuntu-latest
    outputs:
      is-automated-pr: ${{ steps.checkAutomatedPR.outputs.isAutomatedPR }}
      package-created: ${{ steps.validateAndCreatePackage.outputs.isCreatePackage }}
    steps:
      - name: Validate inputs
        run: |
          if [ -z "${{ env.BRANCH_NAME }}" ]; then
            echo "::error::Branch name is required"
            exit 1
          fi
          if [ -z "${{ env.PULL_REQUEST_NUMBER }}" ]; then
            echo "::error::Pull request number is required"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: "${{ env.BRANCH_NAME }}"
          fetch-depth: 0
          persist-credentials: false  # Disable automatic token authentication
          # Do not use privileged token for untrusted code checkout

      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@333678481b1f02ee31fa1443aba4f1f7cb5b08b5 # v2.0.0
        with:
          app-id: ${{ secrets.APPLICATION_ID }}
          private-key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ github.event.repository.name }}

      - name: Check if PR branch is up to date with master
        id: check_up_to_date
        shell: bash
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git fetch origin master
          BASE=$(git merge-base HEAD origin/master)
          if [ "$BASE" = "$(git rev-parse HEAD)" ]; then
            echo "skip_pipeline=true" >> $GITHUB_ENV
            echo "PR branch is up to date with master. Skipping pipeline."
          else
            echo "skip_pipeline=false" >> $GITHUB_ENV
          fi

      - name: Check for automated PR
        id: checkAutomatedPR
        if: env.skip_pipeline != 'true'
        shell: pwsh
        run: |
          $branchName = "${{ env.BRANCH_NAME }}"
          Write-Host "Pull Request Branch Name is $branchName"
          $isAutomatedPR = $branchName -like '*automated-pr'
          if ($isAutomatedPR) {
            Write-Host "Skipping packaging as it is an automated pr!"
          }
          "isAutomatedPR=$($isAutomatedPR.ToString().ToLower())" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          Write-Host "Is this Pull Request autogenerated: $isAutomatedPR"

      - name: Validate and create package
        id: validateAndCreatePackage
        if: steps.checkAutomatedPR.outputs.isAutomatedPR == 'false' && env.skip_pipeline != 'true'
        shell: pwsh
        run: |
          $runId = "${{ github.run_id }}"
          $instrumentationKey = "${{ env.APPINSIGHTS }}"
          $pullRequestNumber = "${{ env.PULL_REQUEST_NUMBER }}"
          $defaultPackageVersion = "${{ env.DEFAULTPACKAGEVERSION }}"
          $baseFolderPath = "${{ env.BASE_FOLDER_PATH }}"
          # Validate required parameters
          if ([string]::IsNullOrEmpty($runId)) {
            Write-Error "Run ID is required"
            exit 1
          }
          if ([string]::IsNullOrEmpty($pullRequestNumber)) {
            Write-Error "Pull Request Number is required"
            exit 1
          }
          try {
            Set-PSRepository PSGallery -InstallationPolicy Trusted
            Install-Module powershell-yaml -Force
            ./.script/package-automation/package-service.ps1 $runId $pullRequestNumber $instrumentationKey $baseFolderPath $defaultPackageVersion $false
          }
          catch {
            Write-Error "Package creation failed: $_"
            exit 1
          }

      - name: Upload package artifacts
        id: uploadPackageArtifacts
        if: |
          steps.validateAndCreatePackage.outcome == 'success' && 
          steps.validateAndCreatePackage.outputs.isCreatePackage == 'true' &&
          steps.validateAndCreatePackage.outputs.uploadPackagePath != '' && 
          steps.validateAndCreatePackage.outputs.blobName != ''
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with: 
          name: "${{ steps.validateAndCreatePackage.outputs.blobName }}"
          path: |
            ${{ steps.validateAndCreatePackage.outputs.uploadPackagePath }}
            ${{ steps.validateAndCreatePackage.outputs.packageCreationPath }}*.json
          retention-days: 20  # Override default 90 days for cost optimization

      - name: Upload data file artifacts
        id: uploadDataFileArtifact
        if: |
          steps.validateAndCreatePackage.outcome == 'success' && 
          steps.validateAndCreatePackage.outputs.dataFolderPath != '' && 
          steps.validateAndCreatePackage.outputs.dataInputFileName != ''
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with: 
          name: "${{ steps.validateAndCreatePackage.outputs.dataInputFileName }}"
          path: "${{ steps.validateAndCreatePackage.outputs.dataFolderPath }}"
          retention-days: 20  # Override default 90 days for cost optimization

      - name: Push changes to existing PR
        if: steps.uploadDataFileArtifact.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "GitHub Actions Bot"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m '[skip ci] Automated package addition to Pull Request'
            git push origin HEAD:${{ env.BRANCH_NAME }}
          else
            echo "No changes to commit"
          fi
