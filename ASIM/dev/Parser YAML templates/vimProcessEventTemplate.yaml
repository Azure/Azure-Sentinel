Parser:
  Title: Process event ASIM filtering parser for <product name>
  Version: '0.1.0'
  LastUpdated: <MMM DD, YYYY>
Product:
  Name: <product name>
Normalization:
  Schema: ProcessEvent
  Version: '<current schema version>'
references:
- Title: ASIM Process Event Schema
  Link: https://aka.ms/ASimProcessEventDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
Description:
  This ASIM filtering parser supports normalizing the <product name> logs to the ASIM process event normalized schema.
ParserName: <ASimProcessEventVendor+Product>
EquivalentBuiltInParser: <_Im_ProcessEvent_Vendor+Product>
ParserParams:
  - Name: starttime
    Type: datetime
    Default: datetime(null)
  - Name: endtime
    Type: datetime
    Default: datetime(null)
  - Name: commandline_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: commandline_has_all
    Type: dynamic
    Default: dynamic([])
  - Name: commandline_has_any_ip_prefix
    Type: dynamic
    Default: dynamic([])
  - Name: actingprocess_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: targetprocess_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: parentprocess_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: targetusername_has
    Type: string
    Default: '*'
  - Name: actorusername_has
    Type: string
    Default: '*'
  - Name: dvcipaddr_has_any_prefix
    Type: dynamic
    Default: dynamic([])
  - Name: dvchostname_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: eventtype
    Type: string
    Default: '*'
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let parser = (
    starttime:datetime                      = datetime(null)
    , endtime:datetime                      = datetime(null)
    , commandline_has_any:dynamic           = dynamic([])
    , commandline_has_all:dynamic           = dynamic([])
    , commandline_has_any_ip_prefix:dynamic = dynamic([])
    , actingprocess_has_any:dynamic         = dynamic([])
    , targetprocess_has_any:dynamic         = dynamic([])
    , parentprocess_has_any:dynamic         = dynamic([])
    , targetusername_has:string             = '*'
    , actorusername_has:string              = '*'
    , dvcipaddr_has_any_prefix:dynamic      = dynamic([])
    , dvchostname_has_any:dynamic           = dynamic([])
    , eventtype:string                      = '*'
    , disabled:bool                         = false
  )
  {
    <parser query body>
  };
  parser (
    starttime                       = starttime
    , endtime                       = endtime
    , commandline_has_any           = commandline_has_any
    , commandline_has_all           = commandline_has_all
    , commandline_has_any_ip_prefix = commandline_has_any_ip_prefix
    , actingprocess_has_any         = actingprocess_has_any
    , targetprocess_has_any         = targetprocess_has_any
    , parentprocess_has_any         = parentprocess_has_any
    , targetusername_has            = targetusername_has
    , actorusername_has             = actorusername_has
    , dvcipaddr_has_any_prefix      = dvcipaddr_has_any_prefix
    , dvchostname_has_any           = dvchostname_has_any
    , eventtype                     = eventtype
    , disabled                      = disabled
  )
