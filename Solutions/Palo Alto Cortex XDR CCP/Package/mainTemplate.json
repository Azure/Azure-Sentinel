{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft",
    "comments": "Solution template for Palo Alto Cortex XDR CCP"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "resource group name where Microsoft Sentinel is setup"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "[last(split(subscription().id, '/'))]",
      "metadata": {
        "description": "subscription id where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "_solutionName": "Palo Alto Cortex XDR CCP",
    "_solutionVersion": "3.0.0",
    "solutionId": "azuresentinel.azure-sentinel-solution-cortexccp",
    "_solutionId": "[variables('solutionId')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "dataConnectorCCPVersion": "1.0.0",
    "_dataConnectorContentIdConnectorDefinition1": "CortexXDRDataConnector",
    "dataConnectorTemplateNameConnectorDefinition1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition1')))]",
    "_dataConnectorContentIdConnections1": "CortexXDRDataConnectorConnections",
    "dataConnectorTemplateNameConnections1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections1')))]",
    "blanks": "[replace('b', 'b', '')]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "displayName": "Palo Alto Cortex XDR",
        "contentKind": "DataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "CortexXDRDataConnector",
                  "title": "Palo Alto Cortex XDR",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "The [Palo Alto Cortex XDR](https://cortex-panw.stoplight.io/docs/cortex-xdr/branches/main/09agw06t5dpvw-cortex-xdr-rest-api) data connector allows ingesting logs from the Palo Alto Cortex XDR API into Microsoft Sentinel. The data connector is built on Microsoft Sentinel Codeless Connector Platform. It uses the Palo Alto Cortex XDR API to fetch logs and it supports DCR-based [ingestion time transformations](https://docs.microsoft.com/azure/azure-monitor/logs/custom-logs-overview) that parses the received security data into a custom table so that queries don't need to parse it again, thus resulting in better performance.",
                  "graphQueries": [
                    {
                      "metricName": "Total incident logs received",
                      "legend": "Palo Alto Cortex XDR incident Logs",
                      "baseQuery": "PaloAltoCortexXDR_Incidents_CL"
                    },
                    {
                      "metricName": "Total Endpoint logs received",
                      "legend": "Palo Alto Cortex XDR endpoint Logs",
                      "baseQuery": "PaloAltoCortexXDR_Endpoints_CL"
                    },
                    {
                      "metricName": "Total Audit Management logs received",
                      "legend": "Palo Alto Cortex XDR Audit Management Logs",
                      "baseQuery": "PaloAltoCortexXDR_Audit_Management_CL"
                    },
                    {
                      "metricName": "Total Agent Audit logs received",
                      "legend": "Palo Alto Cortex XDR Agent Audit Logs",
                      "baseQuery": "PaloAltoCortexXDR_Audit_Agent_CL"
                    },
                    {
                      "metricName": "Total Alert logs received",
                      "legend": "Palo Alto Cortex XDR Alert Logs",
                      "baseQuery": "PaloAltoCortexXDR_Alerts_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Get Sample of Cortex XDR incident logs",
                      "query": "PaloAltoCortexXDR_Incidents_CL| take 10"
                    },
                    {
                      "description": "Get Sample of Cortex XDR endpoint logs",
                      "query": "PaloAltoCortexXDR_Endpoints_CL| take 10"
                    },
                    {
                      "description": "Get Sample of Cortex XDR alert logs",
                      "query": "PaloAltoCortexXDR_Alerts_CL| take 10"
                    },
                    {
                      "description": "Get Sample of Cortex XDR Audit Management logs",
                      "query": "PaloAltoCortexXDR_Audit_Management_CL| take 10"
                    },
                    {
                      "description": "Get Sample of Cortex XDR Agent Audit logs",
                      "query": "PaloAltoCortexXDR_Audit_Agent_CL| take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "PaloAltoCortexXDR_Incidents_CL",
                      "lastDataReceivedQuery": "PaloAltoCortexXDR_Incidents_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "PaloAltoCortexXDR_Endpoints_CL",
                      "lastDataReceivedQuery": "PaloAltoCortexXDR_Endpoints_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "PaloAltoCortexXDR_Alerts_CL",
                      "lastDataReceivedQuery": "PaloAltoCortexXDR_Alerts_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "PaloAltoCortexXDR_Audit_Management_CL",
                      "lastDataReceivedQuery": "PaloAltoCortexXDR_Audit_Management_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "PaloAltoCortexXDR_Audit_Agent_CL",
                      "lastDataReceivedQuery": "PaloAltoCortexXDR_Audit_Agent_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors",
                      "value": null
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true,
                          "action": false
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "instructions": [
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### Configuration steps for the Palo Alto Cortex XDR API \n Follow the instructions to obtain the credentials. you can also follow this [guide](https://cortex-panw.stoplight.io/docs/cortex-xdr/branches/main/3u3j0e7hcx8t1-get-started-with-cortex-xdr-ap-is) to generate API key."
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 1. Retrieve API URL\n   1.1. Log in to the Palo Alto Cortex XDR [**Management Console**] with Admin user credentials\n   1.2. In the [**Management Console**], click [**Settings**] -> [**Configurations**] \n   1.3. Under [**Integrations**] click on [**API Keys**].\n   1.4. In the [**Settings**] Page click on [**Copy API URL**] in the top right corner."
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 2. Retrieve API Token\n   2.1. Log in to the Palo Alto Cortex XDR [**Management Console**] with Admin user credentials\n 2.2. In the [**Management Console**], click [**Settings**] -> [**Configurations**] \n   2.3. Under [**Integrations**] click on [**API Keys**].\n   2.4. In the [**Settings**] Page click on [**New Key**] in the top right corner.\n   2.5. Choose security level, role, choose Standard and click on [**Generate**]\n   2.6. Copy the API Token, once it generated the [**API Token ID**] can be found under the ID column"
                          }
                        },
                        {
                          "parameters": {
                            "label": "Base API URL",
                            "placeholder": "https://api-example.xdr.au.paloaltonetworks.com",
                            "type": "text",
                            "name": "apiUrl"
                          },
                          "type": "Textbox"
                        },
                        {
                          "parameters": {
                            "label": "API Key ID",
                            "placeholder": "API ID",
                            "type": "text",
                            "name": "apiId"
                          },
                          "type": "Textbox"
                        },
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "API Token",
                            "placeholder": "API Token",
                            "type": "password",
                            "name": "apiToken"
                          }
                        },
                        {
                          "parameters": {
                            "label": "toggle",
                            "name": "toggle"
                          },
                          "type": "ConnectionToggleButton"
                        }
                      ]
                    }
                  ],
                  "isConnectivityCriteriasMatchSome": false
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "version": "[variables('dataConnectorCCPVersion')]",
                      "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                      "kind": "ResourcesDataConnector"
                    }
                  ]
                }
              }
            },
            {
              "name": "CortexXdrDCR",
              "apiVersion": "2022-06-01",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "kind": "[variables('blanks')]",
              "properties": {
                "streamDeclarations": {
                  "Custom-CortexXdrStreamIncidents": {
                    "columns": [
                      {
                        "name": "incident_id",
                        "type": "string"
                      },
                      {
                        "name": "incident_name",
                        "type": "string"
                      },
                      {
                        "name": "creation_time",
                        "type": "long"
                      },
                      {
                        "name": "modification_time",
                        "type": "long"
                      },
                      {
                        "name": "detection_time",
                        "type": "long"
                      },
                      {
                        "name": "status",
                        "type": "string"
                      },
                      {
                        "name": "severity",
                        "type": "string"
                      },
                      {
                        "name": "description",
                        "type": "string"
                      },
                      {
                        "name": "assigned_user_mail",
                        "type": "string"
                      },
                      {
                        "name": "assigned_user_pretty_name",
                        "type": "string"
                      },
                      {
                        "name": "alert_count",
                        "type": "int"
                      },
                      {
                        "name": "low_severity_alert_count",
                        "type": "int"
                      },
                      {
                        "name": "med_severity_alert_count",
                        "type": "int"
                      },
                      {
                        "name": "high_severity_alert_count",
                        "type": "int"
                      },
                      {
                        "name": "critical_severity_alert_count",
                        "type": "int"
                      },
                      {
                        "name": "user_count",
                        "type": "int"
                      },
                      {
                        "name": "host_count",
                        "type": "int"
                      },
                      {
                        "name": "notes",
                        "type": "string"
                      },
                      {
                        "name": "resolve_comment",
                        "type": "string"
                      },
                      {
                        "name": "resolved_timestamp",
                        "type": "long"
                      },
                      {
                        "name": "manual_severity",
                        "type": "string"
                      },
                      {
                        "name": "manual_description",
                        "type": "string"
                      },
                      {
                        "name": "xdr_url",
                        "type": "string"
                      },
                      {
                        "name": "starred",
                        "type": "boolean"
                      },
                      {
                        "name": "hosts",
                        "type": "dynamic"
                      },
                      {
                        "name": "users",
                        "type": "dynamic"
                      },
                      {
                        "name": "incident_sources",
                        "type": "dynamic"
                      },
                      {
                        "name": "rule_based_score",
                        "type": "int"
                      },
                      {
                        "name": "manual_score",
                        "type": "int"
                      },
                      {
                        "name": "wildfire_hits",
                        "type": "int"
                      },
                      {
                        "name": "alerts_grouping_status",
                        "type": "string"
                      },
                      {
                        "name": "mitre_tactics_ids_and_names",
                        "type": "dynamic"
                      },
                      {
                        "name": "mitre_techniques_ids_and_names",
                        "type": "dynamic"
                      },
                      {
                        "name": "alert_categories",
                        "type": "dynamic"
                      },
                      {
                        "name": "original_tags",
                        "type": "dynamic"
                      },
                      {
                        "name": "tags",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-CortexXdrStreamManagement": {
                    "columns": [
                      {
                        "name": "AUDIT_ID",
                        "type": "int"
                      },
                      {
                        "name": "AUDIT_OWNER_NAME",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_OWNER_EMAIL",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_ASSET_JSON",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_ASSET_NAMES",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_HOSTNAME",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_RESULT",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_REASON",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_DESCRIPTION",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_ENTITY",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_ENTITY_SUBTYPE",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_SESSION_ID",
                        "type": "int"
                      },
                      {
                        "name": "AUDIT_CASE_ID",
                        "type": "int"
                      },
                      {
                        "name": "AUDIT_INSERT_TIME",
                        "type": "long"
                      },
                      {
                        "name": "AUDIT_SEVERITY",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_SOURCE_IP",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_USER_AGENT",
                        "type": "string"
                      },
                      {
                        "name": "AUDIT_USER_ROLES",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-CortexXdrStreamAgent": {
                    "columns": [
                      {
                        "name": "TIMESTAMP",
                        "type": "long"
                      },
                      {
                        "name": "RECEIVEDTIME",
                        "type": "long"
                      },
                      {
                        "name": "ENDPOINTID",
                        "type": "string"
                      },
                      {
                        "name": "ENDPOINTNAME",
                        "type": "string"
                      },
                      {
                        "name": "DOMAIN",
                        "type": "string"
                      },
                      {
                        "name": "TRAPSVERSION",
                        "type": "string"
                      },
                      {
                        "name": "CATEGORY",
                        "type": "string"
                      },
                      {
                        "name": "TYPE",
                        "type": "string"
                      },
                      {
                        "name": "SUBTYPE",
                        "type": "string"
                      },
                      {
                        "name": "RESULT",
                        "type": "string"
                      },
                      {
                        "name": "REASON",
                        "type": "string"
                      },
                      {
                        "name": "DESCRIPTION",
                        "type": "string"
                      }
                    ]
                  },
                  "Custom-CortexXdrStreamEndpoint": {
                    "columns": [
                      {
                        "name": "agent_id",
                        "type": "string"
                      },
                      {
                        "name": "agent_status",
                        "type": "string"
                      },
                      {
                        "name": "operational_status",
                        "type": "string"
                      },
                      {
                        "name": "host_name",
                        "type": "string"
                      },
                      {
                        "name": "agent_type",
                        "type": "string"
                      },
                      {
                        "name": "ip",
                        "type": "dynamic"
                      },
                      {
                        "name": "last_seen",
                        "type": "long"
                      },
                      {
                        "name": "tags",
                        "type": "dynamic"
                      },
                      {
                        "name": "users",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-CortexXdrStreamAlerts": {
                    "columns": [
                      {
                        "name": "external_id",
                        "type": "string"
                      },
                      {
                        "name": "severity",
                        "type": "string"
                      },
                      {
                        "name": "matching_status",
                        "type": "string"
                      },
                      {
                        "name": "end_match_attempt_ts",
                        "type": "long"
                      },
                      {
                        "name": "local_insert_ts",
                        "type": "long"
                      },
                      {
                        "name": "bioc_indicator",
                        "type": "string"
                      },
                      {
                        "name": "matching_service_rule_id",
                        "type": "string"
                      },
                      {
                        "name": "attempt_counter",
                        "type": "int"
                      },
                      {
                        "name": "is_whitelisted",
                        "type": "boolean"
                      },
                      {
                        "name": "starred",
                        "type": "boolean"
                      },
                      {
                        "name": "mitre_technique_id_and_name",
                        "type": "dynamic"
                      },
                      {
                        "name": "mitre_tactic_id_and_name",
                        "type": "dynamic"
                      },
                      {
                        "name": "agent_version",
                        "type": "string"
                      },
                      {
                        "name": "agent_fqdn",
                        "type": "string"
                      },
                      {
                        "name": "agent_os_type",
                        "type": "string"
                      },
                      {
                        "name": "agent_data_collection_status",
                        "type": "boolean"
                      },
                      {
                        "name": "mac",
                        "type": "string"
                      },
                      {
                        "name": "alert_id",
                        "type": "string"
                      },
                      {
                        "name": "detection_timestamp",
                        "type": "long"
                      },
                      {
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "name": "category",
                        "type": "string"
                      },
                      {
                        "name": "endpoint_id",
                        "type": "string"
                      },
                      {
                        "name": "description",
                        "type": "string"
                      },
                      {
                        "name": "host_ip",
                        "type": "string"
                      },
                      {
                        "name": "host_name",
                        "type": "string"
                      },
                      {
                        "name": "source",
                        "type": "string"
                      },
                      {
                        "name": "action",
                        "type": "string"
                      },
                      {
                        "name": "action_pretty",
                        "type": "string"
                      },
                      {
                        "name": "causality_actor_causality_id",
                        "type": "string"
                      },
                      {
                        "name": "causality_actor_process_command_line",
                        "type": "string"
                      },
                      {
                        "name": "causality_actor_process_image_md5",
                        "type": "string"
                      },
                      {
                        "name": "causality_actor_process_image_name",
                        "type": "string"
                      },
                      {
                        "name": "causality_actor_process_image_path",
                        "type": "string"
                      },
                      {
                        "name": "causality_actor_process_image_sha256",
                        "type": "string"
                      },
                      {
                        "name": "causality_actor_process_signature_status",
                        "type": "string"
                      },
                      {
                        "name": "identity_type",
                        "type": "string"
                      },
                      {
                        "name": "operation_name",
                        "type": "string"
                      },
                      {
                        "name": "cloud_provider",
                        "type": "string"
                      },
                      {
                        "name": "resource_type",
                        "type": "string"
                      },
                      {
                        "name": "cluster_name",
                        "type": "string"
                      },
                      {
                        "name": "container_id",
                        "type": "string"
                      },
                      {
                        "name": "action_country",
                        "type": "string"
                      },
                      {
                        "name": "dns_query_name",
                        "type": "string"
                      },
                      {
                        "name": "fw_email_recipient",
                        "type": "string"
                      },
                      {
                        "name": "fw_email_sender",
                        "type": "string"
                      },
                      {
                        "name": "fw_email_subject",
                        "type": "string"
                      },
                      {
                        "name": "event_type",
                        "type": "string"
                      },
                      {
                        "name": "action_file_macro_sha256",
                        "type": "string"
                      },
                      {
                        "name": "action_file_md5",
                        "type": "string"
                      },
                      {
                        "name": "action_file_name",
                        "type": "string"
                      },
                      {
                        "name": "action_file_path",
                        "type": "string"
                      },
                      {
                        "name": "action_file_sha256",
                        "type": "string"
                      },
                      {
                        "name": "fw_rule_id",
                        "type": "string"
                      },
                      {
                        "name": "fw_rule",
                        "type": "string"
                      },
                      {
                        "name": "image_name",
                        "type": "string"
                      },
                      {
                        "name": "actor_process_image_name",
                        "type": "string"
                      },
                      {
                        "name": "actor_process_command_line",
                        "type": "string"
                      },
                      {
                        "name": "actor_process_image_md5",
                        "type": "string"
                      },
                      {
                        "name": "actor_process_image_path",
                        "type": "string"
                      },
                      {
                        "name": "actor_process_os_pid",
                        "type": "int"
                      },
                      {
                        "name": "actor_process_image_sha256",
                        "type": "string"
                      },
                      {
                        "name": "actor_process_signature_status",
                        "type": "string"
                      },
                      {
                        "name": "actor_process_signature_vendor",
                        "type": "string"
                      },
                      {
                        "name": "actor_thread_thread_id",
                        "type": "string"
                      },
                      {
                        "name": "action_local_ip",
                        "type": "string"
                      },
                      {
                        "name": "action_local_port",
                        "type": "int"
                      },
                      {
                        "name": "module_id",
                        "type": "string"
                      },
                      {
                        "name": "os_actor_process_command_line",
                        "type": "string"
                      },
                      {
                        "name": "os_actor_thread_thread_id",
                        "type": "string"
                      },
                      {
                        "name": "os_actor_process_image_name",
                        "type": "string"
                      },
                      {
                        "name": "os_actor_process_os_pid",
                        "type": "int"
                      },
                      {
                        "name": "os_actor_process_image_sha256",
                        "type": "string"
                      },
                      {
                        "name": "os_actor_process_signature_status",
                        "type": "string"
                      },
                      {
                        "name": "os_actor_process_signature_vendor",
                        "type": "string"
                      },
                      {
                        "name": "os_actor_effective_username",
                        "type": "string"
                      },
                      {
                        "name": "action_process_signature_status",
                        "type": "string"
                      },
                      {
                        "name": "action_process_signature_vendor",
                        "type": "string"
                      },
                      {
                        "name": "action_registry_data",
                        "type": "dynamic"
                      },
                      {
                        "name": "action_registry_full_key",
                        "type": "string"
                      },
                      {
                        "name": "action_external_hostname",
                        "type": "string"
                      },
                      {
                        "name": "action_remote_ip",
                        "type": "string"
                      },
                      {
                        "name": "action_remote_port",
                        "type": "int"
                      },
                      {
                        "name": "action_process_image_command_line",
                        "type": "string"
                      },
                      {
                        "name": "action_process_image_name",
                        "type": "string"
                      },
                      {
                        "name": "action_process_image_sha256",
                        "type": "string"
                      },
                      {
                        "name": "fw_url_domain",
                        "type": "string"
                      },
                      {
                        "name": "user_agent",
                        "type": "string"
                      },
                      {
                        "name": "alert_domain",
                        "type": "string"
                      },
                      {
                        "name": "event_id",
                        "type": "string"
                      },
                      {
                        "name": "event_timestamp",
                        "type": "long"
                      },
                      {
                        "name": "actor_process_instance_id",
                        "type": "string"
                      },
                      {
                        "name": "actor_process_causality_id",
                        "type": "string"
                      },
                      {
                        "name": "actor_causality_id",
                        "type": "string"
                      },
                      {
                        "name": "action_registry_key_name",
                        "type": "string"
                      },
                      {
                        "name": "action_registry_value_name",
                        "type": "string"
                      },
                      {
                        "name": "action_local_ip_v6",
                        "type": "string"
                      },
                      {
                        "name": "action_remote_ip_v6",
                        "type": "string"
                      },
                      {
                        "name": "action_process_instance_id",
                        "type": "string"
                      },
                      {
                        "name": "action_process_causality_id",
                        "type": "string"
                      },
                      {
                        "name": "os_actor_process_image_path",
                        "type": "string"
                      },
                      {
                        "name": "os_actor_process_causality_id",
                        "type": "string"
                      },
                      {
                        "name": "os_actor_causality_id",
                        "type": "string"
                      },
                      {
                        "name": "container_name",
                        "type": "string"
                      },
                      {
                        "name": "namespace",
                        "type": "string"
                      },
                      {
                        "name": "dst_action_external_hostname",
                        "type": "string"
                      },
                      {
                        "name": "dst_action_external_port",
                        "type": "int"
                      },
                      {
                        "name": "image_id",
                        "type": "string"
                      },
                      {
                        "name": "malicious_urls",
                        "type": "dynamic"
                      },
                      {
                        "name": "fw_is_phishing",
                        "type": "boolean"
                      },
                      {
                        "name": "user_name",
                        "type": "string"
                      }
                    ]
                  }
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws1"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Custom-CortexXdrStreamIncidents"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | project  TimeGenerated = now(), IncidentId=incident_id, IncidentName=incident_name, CreationTime=datetime(1970-01-01) + (creation_time * 1ms), ModificationTime=datetime(1970-01-01) + (modification_time * 1ms), DetectionTime=datetime(1970-01-01) + (detection_time * 1ms), Status=status, Severity=severity, Description=description, AssignedUserMail=assigned_user_mail, assignedUserPrettyName=assigned_user_pretty_name, AlertCount=alert_count, LowSeverityAlertCount=low_severity_alert_count, MedSeverityAlertCount=med_severity_alert_count, HighSeverityAlertCount=high_severity_alert_count, CriticalSeverityAlertCount=critical_severity_alert_count, UserCount=user_count, HostCount=host_count, Notes=notes, ResolveComment=resolve_comment, ResolvedTimestamp=datetime(1970-01-01) + (resolved_timestamp * 1ms), ManualSeverity=manual_severity, ManualDescription=manual_description, XdrUrl=xdr_url, Starred=starred, Hosts=todynamic(hosts), Users=todynamic(users), IncidentSources=todynamic(incident_sources), RuleBasedScore=rule_based_score, ManualScore=manual_score, WildfireHits=wildfire_hits, AlertsGroupingStatus=alerts_grouping_status, MitreTacticsIdsAndNames=todynamic(mitre_tactics_ids_and_names), MitreTechniquesIdsAndNames=todynamic(mitre_techniques_ids_and_names), AlertCategories=todynamic(alert_categories), OriginalTags=todynamic(original_tags), Tags=todynamic(tags)",
                    "outputStream": "Custom-PaloAltoCortexXDR_Incidents_CL"
                  },
                  {
                    "streams": [
                      "Custom-CortexXdrStreamManagement"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | project  TimeGenerated = now(), AuditId=AUDIT_ID, AuditOwnerName=AUDIT_OWNER_NAME, AuditOwnerEmail=AUDIT_OWNER_EMAIL, AuditAssetJSON=todynamic(AUDIT_ASSET_JSON), AuditAssetNames=AUDIT_ASSET_NAMES, AuditHostName=AUDIT_HOSTNAME, AuditResult=AUDIT_RESULT, AuditReason=AUDIT_REASON, AuditDescription=AUDIT_DESCRIPTION, AuditEntity=AUDIT_ENTITY, AuditEntitySubtype=AUDIT_ENTITY_SUBTYPE, AuditSessionId=AUDIT_SESSION_ID, AuditCaseId=AUDIT_CASE_ID, AuditInsertTime=datetime(1970-01-01) + (AUDIT_INSERT_TIME * 1ms), AuditSeverity=AUDIT_SEVERITY,AuditSourceIp=AUDIT_SOURCE_IP,AuditUserAgent=AUDIT_USER_AGENT,AuditUserRoles=todynamic(AUDIT_USER_ROLES)",
                    "outputStream": "Custom-PaloAltoCortexXDR_Audit_Management_CL"
                  },
                  {
                    "streams": [
                      "Custom-CortexXdrStreamAgent"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | project TimeGenerated = now(), Timestamp=datetime(1970-01-01) + (TIMESTAMP * 1ms), ReceivedTime=datetime(1970-01-01) + (RECEIVEDTIME * 1ms), EndpointId=ENDPOINTID, EndpointName=ENDPOINTNAME, Domain=DOMAIN, TrapsVersion=TRAPSVERSION, Category=CATEGORY, AgentType=TYPE, Subtype=SUBTYPE, Result=RESULT, Reason=REASON, Description=DESCRIPTION",
                    "outputStream": "Custom-PaloAltoCortexXDR_Audit_Agent_CL"
                  },
                  {
                    "streams": [
                      "Custom-CortexXdrStreamAlerts"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | project TimeGenerated = now(), ExternalId = external_id, Severity = severity, MatchingStatus = matching_status, EndMatchAttempt = datetime(1970-01-01) + (end_match_attempt_ts * 1ms), LocalInsert = datetime(1970-01-01) + (local_insert_ts * 1ms), BiocIndicator = bioc_indicator, AttemptCounter = attempt_counter, Whitelisted = is_whitelisted, Starred = starred, MitreTechniqueIdAndName = todynamic(mitre_technique_id_and_name), MitreTacticIdAndName = todynamic(mitre_tactic_id_and_name), AgentVersion = agent_version, AgentFQDN = agent_fqdn, AgentOSType = agent_os_type, AgentDataCollectionStatus = agent_data_collection_status, MacAddress = mac, AlertId = alert_id, DetectionTimestamp = datetime(1970-01-01) + (detection_timestamp * 1ms), Name = name, Category = category, EndpointId = endpoint_id, Description = description, HostIp = host_ip, HostName = host_name, Source = source, Action = action, ActionPretty = action_pretty, CausalityActorCausalityId = causality_actor_causality_id, CausalityActorProcessCommandLine = causality_actor_process_command_line, CausalityActorProcessImageMd5 = causality_actor_process_image_md5, CausalityActorProcessImageName = causality_actor_process_image_name, CausalityActorProcessImagePath = causality_actor_process_image_path, CausalityActorProcessImageSha256 = causality_actor_process_image_sha256, CausalityActorProcessSignatureStatus = causality_actor_process_signature_status, IdentityType = identity_type, OperationName = operation_name, CloudProvider = cloud_provider, ResourceType = resource_type, ClusterName = cluster_name, ContainerId = container_id, ActionCountry = action_country, DnsQueryName = dns_query_name, FwEmailRecipient = fw_email_recipient, FwEmailSender = fw_email_sender, FwEmailSubject = fw_email_subject, EventType = event_type, ActionFileMacroSha256 = action_file_macro_sha256, ActionFileMd5 = action_file_md5, ActionFileName = action_file_name, ActionFilePath = action_file_path, ActionFileSha256 = action_file_sha256, FwRuleId = fw_rule_id, FwRule = fw_rule, ImageName = image_name, ActorProcessImageName = actor_process_image_name, ActorProcessCommandLine = actor_process_command_line, ActorProcessImageMd5 = actor_process_image_md5, ActorProcessImagePath = actor_process_image_path, ActorProcessOsPid = actor_process_os_pid, ActorProcessImageSha256 = actor_process_image_sha256, ActorProcessSignatureStatus = actor_process_signature_status, ActorProcessSignatureVendor = actor_process_signature_vendor, ActorThreadThreadId = actor_thread_thread_id, ActionLocalIp = action_local_ip, ActionLocalPort = action_local_port, ModuleId = module_id, OsActorProcessCommandLine = os_actor_process_command_line, OsActorThreadThreadId = os_actor_thread_thread_id, OsActorProcessImageName = os_actor_process_image_name, OsActorProcessOsPid = os_actor_process_os_pid, OsActorProcessImageSha256 = os_actor_process_image_sha256, OsActorProcessSignatureStatus = os_actor_process_signature_status, OsActorProcessSignatureVendor = os_actor_process_signature_vendor, OsActorEffectiveUsername = os_actor_effective_username, ActionProcessSignatureStatus = action_process_signature_status, ActionProcessSignatureVendor = action_process_signature_vendor, ActionRegistryData = todynamic(action_registry_data), ActionRegistryFullKey = action_registry_full_key, ActionExternalHostname = action_external_hostname, ActionRemoteIp = action_remote_ip, ActionRemotePort = action_remote_port, MatchingServiceRuleId = matching_service_rule_id, ActionProcessImageCommandLine = action_process_image_command_line, ActionProcessImageName = action_process_image_name, ActionProcessImageSha256 = action_process_image_sha256, FwUrlDomain = fw_url_domain, UserAgent = user_agent, AlertDomain = alert_domain, EventId = event_id, EventTimestamp = datetime(1970-01-01) + (event_timestamp * 1ms), ActorProcessInstanceId = actor_process_instance_id, ActorProcessCausalityId = actor_process_causality_id, ActorCausalityId = actor_causality_id, ActionRegistryKeyName = action_registry_key_name, ActionRegistryValueName = action_registry_value_name, ActionLocalIpV6 = action_local_ip_v6, ActionRemoteIpV6 = action_remote_ip_v6, ActionProcessInstanceId = action_process_instance_id, ActionProcessCausalityId = action_process_causality_id, OsActorProcessImagePath = os_actor_process_image_path, OsActorProcessCausalityId = os_actor_process_causality_id, OsActorCausalityId = os_actor_causality_id, ContainerName = container_name, Namespace = namespace, DstActionExternalHostname = dst_action_external_hostname, DstActionExternalPort = dst_action_external_port, ImageId = image_id, MaliciousUrls = todynamic(malicious_urls), FwIsPhishing = fw_is_phishing, UserName = user_name",
                    "outputStream": "Custom-PaloAltoCortexXDR_Alerts_CL"
                  },
                  {
                    "streams": [
                      "Custom-CortexXdrStreamEndpoint"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | project TimeGenerated = now(), AgentId=agent_id, AgentStatus=agent_status, OperationalStatus=operational_status, HostName=host_name, AgentType=agent_type, IpAddress=ip, LastSeen=datetime(1970-01-01) + (last_seen * 1ms), Tags=todynamic(tags), Users=todynamic(users)",
                    "outputStream": "Custom-PaloAltoCortexXDR_Endpoints_CL"
                  }
                ],
                "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]"
              }
            },
            {
              "name": "PaloAltoCortexXDR_Audit_Management_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "PaloAltoCortexXDR_Audit_Management_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime",
                      "description": "The time when the record was generated"
                    },
                    {
                      "name": "AuditId",
                      "type": "int",
                      "description": "Unique identifier for the audit event"
                    },
                    {
                      "name": "AuditOwnerName",
                      "type": "string",
                      "description": "Name of the owner who initiated the audit event"
                    },
                    {
                      "name": "AuditOwnerEmail",
                      "type": "string",
                      "description": "Email address of the audit owner"
                    },
                    {
                      "name": "AuditAssetJSON",
                      "type": "dynamic",
                      "description": "JSON object containing the audit asset details"
                    },
                    {
                      "name": "AuditAssetNames",
                      "type": "string",
                      "description": "Names of the assets involved in the audit"
                    },
                    {
                      "name": "AuditHostName",
                      "type": "string",
                      "description": "Host name associated with the audit event"
                    },
                    {
                      "name": "AuditResult",
                      "type": "string",
                      "description": "Result of the audit event (e.g., SUCCESS)"
                    },
                    {
                      "name": "AuditReason",
                      "type": "string",
                      "description": "Reason for the audit event"
                    },
                    {
                      "name": "AuditDescription",
                      "type": "string",
                      "description": "Description of the audit event"
                    },
                    {
                      "name": "AuditEntity",
                      "type": "string",
                      "description": "Entity type associated with the audit event"
                    },
                    {
                      "name": "AuditEntitySubtype",
                      "type": "string",
                      "description": "Subtype of the audit entity (e.g., Login)"
                    },
                    {
                      "name": "AuditSessionId",
                      "type": "int",
                      "description": "Session ID related to the audit event"
                    },
                    {
                      "name": "AuditCaseId",
                      "type": "int",
                      "description": "Case ID related to the audit event"
                    },
                    {
                      "name": "AuditInsertTime",
                      "type": "datetime",
                      "description": "Time when the audit record was inserted into the system."
                    },
                    {
                      "name": "AuditSeverity",
                      "type": "string",
                      "description": "The Severity of the Audit log."
                    },
                    {
                      "name": "AuditSourceIp",
                      "type": "string",
                      "description": "The source Ip of the audit log."
                    },
                    {
                      "name": "AuditUserAgent",
                      "type": "string",
                      "description": "The User Agent of the audit user."
                    },
                    {
                      "name": "AuditUserRoles",
                      "type": "dynamic",
                      "description": "The roles of the audit user."
                    }
                  ]
                }
              }
            },
            {
              "name": "PaloAltoCortexXDR_Audit_Agent_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "PaloAltoCortexXDR_Audit_Agent_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime",
                      "description": "The time when the record was generated"
                    },
                    {
                      "name": "Timestamp",
                      "type": "datetime",
                      "description": "The timestamp of the event"
                    },
                    {
                      "name": "ReceivedTime",
                      "type": "datetime",
                      "description": "The time when the event was received"
                    },
                    {
                      "name": "EndpointId",
                      "type": "string",
                      "description": "Unique identifier of the endpoint"
                    },
                    {
                      "name": "EndpointName",
                      "type": "string",
                      "description": "Name of the endpoint involved in the event"
                    },
                    {
                      "name": "Domain",
                      "type": "string",
                      "description": "Domain associated with the endpoint"
                    },
                    {
                      "name": "TrapsVersion",
                      "type": "string",
                      "description": "Version of the Traps agent installed on the endpoint"
                    },
                    {
                      "name": "Category",
                      "type": "string",
                      "description": "Category of the event"
                    },
                    {
                      "name": "AgentType",
                      "type": "string",
                      "description": "Type of agent involved in the event"
                    },
                    {
                      "name": "Subtype",
                      "type": "string",
                      "description": "Subtype of the event"
                    },
                    {
                      "name": "Result",
                      "type": "string",
                      "description": "Outcome or result of the event"
                    },
                    {
                      "name": "Reason",
                      "type": "string",
                      "description": "Reason for the event or action"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "description": "Detailed description of the event"
                    }
                  ]
                }
              }
            },
            {
              "name": "PaloAltoCortexXDR_Alerts_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "PaloAltoCortexXDR_Alerts_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime",
                      "isDefaultDisplay": true,
                      "description": "The timestamp (UTC) reflecting the time in which the event was generated."
                    },
                    {
                      "name": "ExternalId",
                      "type": "string",
                      "description": "Unique identifier for the alert in the external system (Cortex XDR)."
                    },
                    {
                      "name": "Severity",
                      "type": "string",
                      "description": "Level of severity of the alert (e.g., Low, Medium, High, Critical)."
                    },
                    {
                      "name": "MatchingStatus",
                      "type": "string",
                      "description": "Status of matching detection logic (e.g., matched or not matched)."
                    },
                    {
                      "name": "EndMatchAttempt",
                      "type": "datetime",
                      "description": "Timestamp of the last match attempt in Unix epoch format."
                    },
                    {
                      "name": "LocalInsert",
                      "type": "datetime",
                      "description": "Local timestamp of when the alert was inserted into the system in Unix epoch format."
                    },
                    {
                      "name": "BiocIndicator",
                      "type": "string",
                      "description": "Indicator or behavior related to the alert, stored as a dynamic object (behavioral IOC data)."
                    },
                    {
                      "name": "MatchingServiceRuleId",
                      "type": "string",
                      "description": "ID of the matching rule or service used to trigger the alert."
                    },
                    {
                      "name": "AttemptCounter",
                      "type": "int",
                      "description": "Number of attempts to match this alert with detection rules."
                    },
                    {
                      "name": "Whitelisted",
                      "type": "bool",
                      "description": "Indicates whether the alert has been whitelisted (true/false)."
                    },
                    {
                      "name": "Starred",
                      "type": "bool",
                      "description": "Indicates whether the alert has been marked as important or starred (true/false)."
                    },
                    {
                      "name": "MitreTechniqueIdAndName",
                      "type": "dynamic",
                      "description": "MITRE ATT&CK technique ID and name associated with the alert."
                    },
                    {
                      "name": "MitreTacticIdAndName",
                      "type": "dynamic",
                      "description": "MITRE ATT&CK tactic ID and name associated with the alert."
                    },
                    {
                      "name": "AgentVersion",
                      "type": "string",
                      "description": "Version of the Cortex XDR agent that generated the alert."
                    },
                    {
                      "name": "AgentFQDN",
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) of the endpoint device where the alert originated."
                    },
                    {
                      "name": "AgentOSType",
                      "type": "string",
                      "description": "Operating system type of the agent (e.g., Windows, macOS, Linux)."
                    },
                    {
                      "name": "AgentDataCollectionStatus",
                      "type": "boolean",
                      "description": "Status indicating whether the agent is actively collecting data (true/false)."
                    },
                    {
                      "name": "MacAddress",
                      "type": "string",
                      "description": "MAC address of the endpoint device, represented as a dynamic object."
                    },
                    {
                      "name": "AlertId",
                      "type": "string",
                      "description": "Unique identifier for the alert in Cortex XDR."
                    },
                    {
                      "name": "DetectionTimestamp",
                      "type": "datetime",
                      "description": "Timestamp when the detection occurred, in Unix epoch format."
                    },
                    {
                      "name": "Name",
                      "type": "string",
                      "description": "Name of the detection or alert."
                    },
                    {
                      "name": "Category",
                      "type": "string",
                      "description": "Category or classification of the alert (e.g., malware, suspicious activity)."
                    },
                    {
                      "name": "EndpointId",
                      "type": "string",
                      "description": "Unique identifier for the endpoint where the alert was detected."
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "description": "Detailed description of the alert or detection."
                    },
                    {
                      "name": "HostIp",
                      "type": "string",
                      "description": "IP address of the host machine where the alert was generated, represented as a dynamic object."
                    },
                    {
                      "name": "HostName",
                      "type": "string",
                      "description": "Name of the host machine where the alert was generated."
                    },
                    {
                      "name": "Source",
                      "type": "string",
                      "description": "Source of the alert or detection data (e.g., Cortex XDR, endpoint agent)."
                    },
                    {
                      "name": "Action",
                      "type": "string",
                      "description": "Action taken in response to the alert (e.g., block, quarantine, notify)."
                    },
                    {
                      "name": "ActionPretty",
                      "type": "string",
                      "description": "Human-readable version of the action taken for the alert."
                    },
                    {
                      "name": "CausalityActorCausalityId",
                      "type": "string",
                      "description": "Causality ID of the actor involved."
                    },
                    {
                      "name": "CausalityActorProcessCommandLine",
                      "type": "string",
                      "description": "Command line used by the causality actor's process."
                    },
                    {
                      "name": "CausalityActorProcessImageMd5",
                      "type": "string",
                      "description": "MD5 hash of the causality actor's process image."
                    },
                    {
                      "name": "CausalityActorProcessImageName",
                      "type": "string",
                      "description": "Name of the causality actor's process image."
                    },
                    {
                      "name": "CausalityActorProcessImagePath",
                      "type": "string",
                      "description": "Path to the causality actor's process image."
                    },
                    {
                      "name": "CausalityActorProcessImageSha256",
                      "type": "string",
                      "description": "SHA256 hash of the causality actor's process image."
                    },
                    {
                      "name": "CausalityActorProcessSignatureStatus",
                      "type": "string",
                      "description": "Signature status of the causality actor's process."
                    },
                    {
                      "name": "IdentityType",
                      "type": "string",
                      "description": "Type of identity associated with the entry."
                    },
                    {
                      "name": "OperationName",
                      "type": "string",
                      "description": "Name of the operation being logged."
                    },
                    {
                      "name": "CloudProvider",
                      "type": "string",
                      "description": "Cloud provider associated with the log entry."
                    },
                    {
                      "name": "ResourceType",
                      "type": "string",
                      "description": "Type of resource involved in the log entry."
                    },
                    {
                      "name": "ClusterName",
                      "type": "string",
                      "description": "Name of the cluster involved."
                    },
                    {
                      "name": "ContainerId",
                      "type": "string",
                      "description": "Identifier for the container."
                    },
                    {
                      "name": "ActionCountry",
                      "type": "string",
                      "description": "Country in which the action was taken."
                    },
                    {
                      "name": "DnsQueryName",
                      "type": "string",
                      "description": "DNS query name associated with the log entry."
                    },
                    {
                      "name": "FwEmailRecipient",
                      "type": "string",
                      "description": "Email recipient in the firewall log."
                    },
                    {
                      "name": "FwEmailSender",
                      "type": "string",
                      "description": "Email sender in the firewall log."
                    },
                    {
                      "name": "FwEmailSubject",
                      "type": "string",
                      "description": "Subject line of the email in the firewall log."
                    },
                    {
                      "name": "EventType",
                      "type": "string",
                      "description": "Type of the event being logged."
                    },
                    {
                      "name": "ActionFileMacroSha256",
                      "type": "string",
                      "description": "SHA256 hash of the file macro involved in the action."
                    },
                    {
                      "name": "ActionFileMd5",
                      "type": "string",
                      "description": "MD5 hash of the file involved in the action."
                    },
                    {
                      "name": "ActionFileName",
                      "type": "string",
                      "description": "Name of the file involved in the action."
                    },
                    {
                      "name": "ActionFilePath",
                      "type": "string",
                      "description": "Path to the file involved in the action."
                    },
                    {
                      "name": "ActionFileSha256",
                      "type": "string",
                      "description": "SHA256 hash of the file involved in the action."
                    },
                    {
                      "name": "FwRuleId",
                      "type": "string",
                      "description": "Identifier for the firewall rule."
                    },
                    {
                      "name": "FwRule",
                      "type": "string",
                      "description": "Description of the firewall rule."
                    },
                    {
                      "name": "ImageName",
                      "type": "string",
                      "description": "Name of the image involved."
                    },
                    {
                      "name": "ActorProcessImageName",
                      "type": "string",
                      "description": "Name of the image used by the actor's process."
                    },
                    {
                      "name": "ActorProcessCommandLine",
                      "type": "string",
                      "description": "Command line used by the actor's process."
                    },
                    {
                      "name": "ActorProcessImageMd5",
                      "type": "string",
                      "description": "MD5 hash of the actor's process image."
                    },
                    {
                      "name": "ActorProcessImagePath",
                      "type": "string",
                      "description": "Path to the actor's process image."
                    },
                    {
                      "name": "ActorProcessOsPid",
                      "type": "int",
                      "description": "OS process ID of the actor's process."
                    },
                    {
                      "name": "ActorProcessImageSha256",
                      "type": "string",
                      "description": "SHA256 hash of the actor's process image."
                    },
                    {
                      "name": "ActorProcessSignatureStatus",
                      "type": "string",
                      "description": "Signature status of the actor's process."
                    },
                    {
                      "name": "ActorProcessSignatureVendor",
                      "type": "string",
                      "description": "Vendor of the signature for the actor's process."
                    },
                    {
                      "name": "ActorThreadThreadId",
                      "type": "string",
                      "description": "Thread ID of the actor's thread."
                    },
                    {
                      "name": "ActionLocalIp",
                      "type": "string",
                      "description": "Local IP address associated with the action."
                    },
                    {
                      "name": "ActionLocalPort",
                      "type": "int",
                      "description": "Local port associated with the action."
                    },
                    {
                      "name": "ModuleId",
                      "type": "string",
                      "description": "Identifier for the module."
                    },
                    {
                      "name": "OsActorProcessCommandLine",
                      "type": "string",
                      "description": "Command line used by the OS actor's process."
                    },
                    {
                      "name": "OsActorThreadThreadId",
                      "type": "string",
                      "description": "Thread ID of the OS actor's thread."
                    },
                    {
                      "name": "OsActorProcessImageName",
                      "type": "string",
                      "description": "Name of the image used by the OS actor's process."
                    },
                    {
                      "name": "OsActorProcessOsPid",
                      "type": "int",
                      "description": "OS process ID of the OS actor's process."
                    },
                    {
                      "name": "OsActorProcessImageSha256",
                      "type": "string",
                      "description": "SHA256 hash of the OS actor's process image."
                    },
                    {
                      "name": "OsActorProcessSignatureStatus",
                      "type": "string",
                      "description": "Signature status of the OS actor's process."
                    },
                    {
                      "name": "OsActorProcessSignatureVendor",
                      "type": "string",
                      "description": "Vendor of the signature for the OS actor's process."
                    },
                    {
                      "name": "OsActorEffectiveUsername",
                      "type": "string",
                      "description": "Effective username of the OS actor."
                    },
                    {
                      "name": "ActionProcessSignatureStatus",
                      "type": "string",
                      "description": "Signature status of the action process."
                    },
                    {
                      "name": "ActionProcessSignatureVendor",
                      "type": "string",
                      "description": "Vendor of the signature for the action process."
                    },
                    {
                      "name": "ActionRegistryData",
                      "type": "dynamic",
                      "description": "Dynamic object containing registry data for the action."
                    },
                    {
                      "name": "ActionRegistryFullKey",
                      "type": "string",
                      "description": "Full registry key associated with the action."
                    },
                    {
                      "name": "ActionExternalHostname",
                      "type": "string",
                      "description": "External hostname associated with the action."
                    },
                    {
                      "name": "ActionRemoteIp",
                      "type": "string",
                      "description": "Remote IP address associated with the action."
                    },
                    {
                      "name": "ActionRemotePort",
                      "type": "int",
                      "description": "Remote port associated with the action."
                    },
                    {
                      "name": "ActionProcessImageCommandLine",
                      "type": "string",
                      "description": "Command line used by the action process's image."
                    },
                    {
                      "name": "ActionProcessImageName",
                      "type": "string",
                      "description": "Name of the action process's image."
                    },
                    {
                      "name": "ActionProcessImageSha256",
                      "type": "string",
                      "description": "SHA256 hash of the action process's image."
                    },
                    {
                      "name": "FwUrlDomain",
                      "type": "string",
                      "description": "Domain of the URL in the firewall log."
                    },
                    {
                      "name": "UserAgent",
                      "type": "string",
                      "description": "User agent string associated with the log entry."
                    },
                    {
                      "name": "AlertDomain",
                      "type": "string",
                      "description": "Domain associated with the alert."
                    },
                    {
                      "name": "EventId",
                      "type": "string",
                      "description": "Unique identifier for the event."
                    },
                    {
                      "name": "EventTimestamp",
                      "type": "datetime",
                      "description": "Timestamp for when the event occurred."
                    },
                    {
                      "name": "ActorProcessInstanceId",
                      "type": "string",
                      "description": "Instance ID of the actor's process."
                    },
                    {
                      "name": "ActorProcessCausalityId",
                      "type": "string",
                      "description": "Causality ID of the actor's process."
                    },
                    {
                      "name": "ActorCausalityId",
                      "type": "string",
                      "description": "Causality ID associated with the actor."
                    },
                    {
                      "name": "ActionRegistryKeyName",
                      "type": "string",
                      "description": "Name of the registry key associated with the action."
                    },
                    {
                      "name": "ActionRegistryValueName",
                      "type": "string",
                      "description": "Name of the registry value associated with the action."
                    },
                    {
                      "name": "ActionLocalIpV6",
                      "type": "string",
                      "description": "Local IPv6 address associated with the action."
                    },
                    {
                      "name": "ActionRemoteIpV6",
                      "type": "string",
                      "description": "Remote IPv6 address associated with the action."
                    },
                    {
                      "name": "ActionProcessInstanceId",
                      "type": "string",
                      "description": "Instance ID of the action process."
                    },
                    {
                      "name": "ActionProcessCausalityId",
                      "type": "string",
                      "description": "Causality ID of the action process."
                    },
                    {
                      "name": "OsActorProcessImagePath",
                      "type": "string",
                      "description": "Path to the OS actor's process image."
                    },
                    {
                      "name": "OsActorProcessCausalityId",
                      "type": "string",
                      "description": "Causality ID of the OS actor."
                    },
                    {
                      "name": "OsActorCausalityId",
                      "type": "string",
                      "description": "Causality ID associated with the OS actor."
                    },
                    {
                      "name": "ContainerName",
                      "type": "string",
                      "description": "Name of the container."
                    },
                    {
                      "name": "Namespace",
                      "type": "string",
                      "description": "Namespace associated with the log entry."
                    },
                    {
                      "name": "DstActionExternalHostname",
                      "type": "string",
                      "description": "Destination external hostname for the action."
                    },
                    {
                      "name": "DstActionExternalPort",
                      "type": "int",
                      "description": "Destination external port for the action."
                    },
                    {
                      "name": "ImageId",
                      "type": "string",
                      "description": "Identifier for the image."
                    },
                    {
                      "name": "MaliciousUrls",
                      "type": "dynamic",
                      "description": "Dynamic object containing malicious URLs related to the entry."
                    },
                    {
                      "name": "FwIsPhishing",
                      "type": "bool",
                      "description": "Indicates if the firewall log entry is related to phishing."
                    },
                    {
                      "name": "UserName",
                      "type": "string",
                      "description": "Username associated with the log entry."
                    }
                  ]
                }
              }
            },
            {
              "name": "PaloAltoCortexXDR_Endpoints_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "PaloAltoCortexXDR_Endpoints_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime",
                      "isDefaultDisplay": true,
                      "description": "The timestamp (UTC) reflecting the time in which the event was generated."
                    },
                    {
                      "name": "AgentId",
                      "type": "string",
                      "description": "Unique identifier for the Cortex XDR agent installed on the endpoint."
                    },
                    {
                      "name": "AgentStatus",
                      "type": "string",
                      "description": "Current status of the Cortex XDR agent (e.g., active, inactive, disconnected)."
                    },
                    {
                      "name": "OperationalStatus",
                      "type": "string",
                      "description": "Operational state of the endpoint (e.g., online, offline)."
                    },
                    {
                      "name": "HostName",
                      "type": "string",
                      "description": "Name of the host machine where the Cortex XDR agent is installed."
                    },
                    {
                      "name": "AgentType",
                      "type": "string",
                      "description": "Type of Cortex XDR agent (e.g., Windows, macOS, Linux)."
                    },
                    {
                      "name": "IpAddress",
                      "type": "dynamic",
                      "description": "IP address of the host machine, stored as a dynamic object."
                    },
                    {
                      "name": "LastSeen",
                      "type": "datetime",
                      "description": "Timestamp of when the agent was last seen active, in Unix epoch format."
                    },
                    {
                      "name": "Tags",
                      "type": "dynamic",
                      "description": "Tags or labels associated with the endpoint, stored as a dynamic object."
                    },
                    {
                      "name": "Users",
                      "type": "dynamic",
                      "description": "List of users associated with the endpoint, stored as a dynamic object."
                    }
                  ]
                }
              }
            },
            {
              "name": "PaloAltoCortexXDR_Incidents_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "PaloAltoCortexXDR_Incidents_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime",
                      "isDefaultDisplay": true,
                      "description": "The timestamp (UTC) reflecting the time in which the event was generated."
                    },
                    {
                      "name": "IncidentId",
                      "type": "string",
                      "description": "The unique identifier for the incident."
                    },
                    {
                      "name": "IncidentName",
                      "type": "string",
                      "description": "The name of the incident"
                    },
                    {
                      "name": "CreationTime",
                      "type": "datetime",
                      "description": "The time which the incident was created."
                    },
                    {
                      "name": "ModificationTime",
                      "type": "datetime",
                      "description": "The time which the incident was updated."
                    },
                    {
                      "name": "DetectionTime",
                      "type": "datetime",
                      "description": "The time which the incident was detected."
                    },
                    {
                      "name": "Status",
                      "type": "string",
                      "description": "The status of the incident."
                    },
                    {
                      "name": "Severity",
                      "type": "string",
                      "description": "The severity of the incident."
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "description": "The description of the incident."
                    },
                    {
                      "name": "AssignedUserMail",
                      "type": "string",
                      "description": "The assigned user mail address."
                    },
                    {
                      "name": "assignedUserPrettyName",
                      "type": "string",
                      "description": "The assign user display name."
                    },
                    {
                      "name": "AlertCount",
                      "type": "int",
                      "description": "The number of alerts regarding the incident."
                    },
                    {
                      "name": "LowSeverityAlertCount",
                      "type": "int",
                      "description": "The number of low severity alerts regarding the incident."
                    },
                    {
                      "name": "MedSeverityAlertCount",
                      "type": "int",
                      "description": "The number of medium severity alerts regarding the incident."
                    },
                    {
                      "name": "HighSeverityAlertCount",
                      "type": "int",
                      "description": "The number of high severity alerts regarding the incident."
                    },
                    {
                      "name": "CriticalSeverityAlertCount",
                      "type": "int",
                      "description": "The number of critical severity alerts regarding the incident."
                    },
                    {
                      "name": "UserCount",
                      "type": "int",
                      "description": "The user count regarding the incident."
                    },
                    {
                      "name": "HostCount",
                      "type": "int",
                      "description": "The host count regarding the incident."
                    },
                    {
                      "name": "Notes",
                      "type": "string",
                      "description": "The notes regarding the incident."
                    },
                    {
                      "name": "ResolveComment",
                      "type": "string",
                      "description": "The resolve comment writen in the incident."
                    },
                    {
                      "name": "ResolvedTimestamp",
                      "type": "datetime",
                      "description": "The timestemp when the incident has been resolved."
                    },
                    {
                      "name": "ManualSeverity",
                      "type": "string",
                      "description": "The severity applied manually regarding the incident."
                    },
                    {
                      "name": "ManualDescription",
                      "type": "string",
                      "description": "Any comments associated with the event."
                    },
                    {
                      "name": "XdrUrl",
                      "type": "string",
                      "description": "The link of the incident."
                    },
                    {
                      "name": "Starred",
                      "type": "bool",
                      "description": "Is the incident starred."
                    },
                    {
                      "name": "Hosts",
                      "type": "dynamic",
                      "description": "The hosts regarding the incident."
                    },
                    {
                      "name": "Users",
                      "type": "dynamic",
                      "description": "Any comments associated with the event."
                    },
                    {
                      "name": "IncidentSources",
                      "type": "dynamic",
                      "description": "The sources regarding the incident."
                    },
                    {
                      "name": "RuleBasedScore",
                      "type": "int",
                      "description": "The rule base score of the incident."
                    },
                    {
                      "name": "ManualScore",
                      "type": "int",
                      "description": "The manual score of the incident."
                    },
                    {
                      "name": "WildfireHits",
                      "type": "int",
                      "description": "The wild fire hits."
                    },
                    {
                      "name": "AlertsGroupingStatus",
                      "type": "string",
                      "description": "The alert grouping status."
                    },
                    {
                      "name": "MitreTacticsIdsAndNames",
                      "type": "dynamic",
                      "description": "Mitre tactics ids and names."
                    },
                    {
                      "name": "MitreTechniquesIdsAndNames",
                      "type": "dynamic",
                      "description": "Mitre techniques ids and names."
                    },
                    {
                      "name": "AlertCategories",
                      "type": "dynamic",
                      "description": "The alert grouping status."
                    },
                    {
                      "name": "OriginalTags",
                      "type": "dynamic",
                      "description": "The original tags of the incident."
                    },
                    {
                      "name": "Tags",
                      "type": "dynamic",
                      "description": "The tags of the incident."
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "CortexXDRDataConnector",
          "title": "Palo Alto Cortex XDR",
          "publisher": "Microsoft",
          "descriptionMarkdown": "The [Palo Alto Cortex XDR](https://cortex-panw.stoplight.io/docs/cortex-xdr/branches/main/09agw06t5dpvw-cortex-xdr-rest-api) data connector allows ingesting logs from the Palo Alto Cortex XDR API into Microsoft Sentinel. The data connector is built on Microsoft Sentinel Codeless Connector Platform. It uses the Palo Alto Cortex XDR API to fetch logs and it supports DCR-based [ingestion time transformations](https://docs.microsoft.com/azure/azure-monitor/logs/custom-logs-overview) that parses the received security data into a custom table so that queries don't need to parse it again, thus resulting in better performance.",
          "graphQueries": [
            {
              "metricName": "Total incident logs received",
              "legend": "Palo Alto Cortex XDR incident Logs",
              "baseQuery": "PaloAltoCortexXDR_Incidents_CL"
            },
            {
              "metricName": "Total Endpoint logs received",
              "legend": "Palo Alto Cortex XDR endpoint Logs",
              "baseQuery": "PaloAltoCortexXDR_Endpoints_CL"
            },
            {
              "metricName": "Total Audit Management logs received",
              "legend": "Palo Alto Cortex XDR Audit Management Logs",
              "baseQuery": "PaloAltoCortexXDR_Audit_Management_CL"
            },
            {
              "metricName": "Total Agent Audit logs received",
              "legend": "Palo Alto Cortex XDR Agent Audit Logs",
              "baseQuery": "PaloAltoCortexXDR_Audit_Agent_CL"
            },
            {
              "metricName": "Total Alert logs received",
              "legend": "Palo Alto Cortex XDR Alert Logs",
              "baseQuery": "PaloAltoCortexXDR_Alerts_CL"
            }
          ],
          "sampleQueries": [
            {
              "description": "Get Sample of Cortex XDR incident logs",
              "query": "PaloAltoCortexXDR_Incidents_CL| take 10"
            },
            {
              "description": "Get Sample of Cortex XDR endpoint logs",
              "query": "PaloAltoCortexXDR_Endpoints_CL| take 10"
            },
            {
              "description": "Get Sample of Cortex XDR alert logs",
              "query": "PaloAltoCortexXDR_Alerts_CL| take 10"
            },
            {
              "description": "Get Sample of Cortex XDR Audit Management logs",
              "query": "PaloAltoCortexXDR_Audit_Management_CL| take 10"
            },
            {
              "description": "Get Sample of Cortex XDR Agent Audit logs",
              "query": "PaloAltoCortexXDR_Audit_Agent_CL| take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "PaloAltoCortexXDR_Incidents_CL",
              "lastDataReceivedQuery": "PaloAltoCortexXDR_Incidents_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "PaloAltoCortexXDR_Endpoints_CL",
              "lastDataReceivedQuery": "PaloAltoCortexXDR_Endpoints_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "PaloAltoCortexXDR_Alerts_CL",
              "lastDataReceivedQuery": "PaloAltoCortexXDR_Alerts_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "PaloAltoCortexXDR_Audit_Management_CL",
              "lastDataReceivedQuery": "PaloAltoCortexXDR_Audit_Management_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "PaloAltoCortexXDR_Audit_Agent_CL",
              "lastDataReceivedQuery": "PaloAltoCortexXDR_Audit_Agent_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors",
              "value": null
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true,
                  "action": false
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "instructions": [
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### Configuration steps for the Palo Alto Cortex XDR API \n Follow the instructions to obtain the credentials. you can also follow this [guide](https://cortex-panw.stoplight.io/docs/cortex-xdr/branches/main/3u3j0e7hcx8t1-get-started-with-cortex-xdr-ap-is) to generate API key."
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 1. Retrieve API URL\n   1.1. Log in to the Palo Alto Cortex XDR [**Management Console**] with Admin user credentials\n   1.2. In the [**Management Console**], click [**Settings**] -> [**Configurations**] \n   1.3. Under [**Integrations**] click on [**API Keys**].\n   1.4. In the [**Settings**] Page click on [**Copy API URL**] in the top right corner."
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 2. Retrieve API Token\n   2.1. Log in to the Palo Alto Cortex XDR [**Management Console**] with Admin user credentials\n 2.2. In the [**Management Console**], click [**Settings**] -> [**Configurations**] \n   2.3. Under [**Integrations**] click on [**API Keys**].\n   2.4. In the [**Settings**] Page click on [**New Key**] in the top right corner.\n   2.5. Choose security level, role, choose Standard and click on [**Generate**]\n   2.6. Copy the API Token, once it generated the [**API Token ID**] can be found under the ID column"
                  }
                },
                {
                  "parameters": {
                    "label": "Base API URL",
                    "placeholder": "https://api-example.xdr.au.paloaltonetworks.com",
                    "type": "text",
                    "name": "apiUrl"
                  },
                  "type": "Textbox"
                },
                {
                  "parameters": {
                    "label": "API Key ID",
                    "placeholder": "API ID",
                    "type": "text",
                    "name": "apiId"
                  },
                  "type": "Textbox"
                },
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "API Token",
                    "placeholder": "API Token",
                    "type": "password",
                    "name": "apiToken"
                  }
                },
                {
                  "parameters": {
                    "label": "toggle",
                    "name": "toggle"
                  },
                  "type": "ConnectionToggleButton"
                }
              ]
            }
          ],
          "isConnectivityCriteriasMatchSome": false
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorCCPVersion')]",
        "source": {
          "sourceId": "[variables('_solutionId')]",
          "name": "[variables('_solutionName')]",
          "kind": "Solution"
        },
        "author": {
          "name": "Microsoft"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "version": "[variables('dataConnectorCCPVersion')]",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "kind": "ResourcesDataConnector"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnections1')]",
        "displayName": "Palo Alto Cortex XDR",
        "contentKind": "ResourcesDataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {
            "connectorDefinitionName": {
              "defaultValue": "Palo Alto Cortex XDR",
              "type": "string",
              "minLength": 1
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "string"
            },
            "dcrConfig": {
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              },
              "type": "object"
            },
            "apiUrl": {
              "defaultValue": "apiUrl",
              "type": "string",
              "minLength": 1
            },
            "apiId": {
              "defaultValue": "apiId",
              "type": "string",
              "minLength": 1
            },
            "apiToken": {
              "defaultValue": "apiToken",
              "type": "string",
              "minLength": 1
            }
          },
          "variables": {
            "_dataConnectorContentIdConnections1": "[variables('_dataConnectorContentIdConnections1')]"
          },
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', 'CortexXdrAgent')]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "CortexXDRDataConnector",
                "dataType": "PaloAltoCortexXDR_Audit_Agent_CL",
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apitoken')]",
                  "ApiKeyName": "Authorization"
                },
                "request": {
                  "apiEndpoint": "[[concat(parameters('apiUrl'), '/public_api/v1/audits/agents_reports')]",
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba",
                    "x-xdr-auth-id": "[[parameters('apiId')]"
                  },
                  "httpMethod": "Post",
                  "queryParametersTemplate": "{ 'request_data': { 'filters': [ { 'field': 'timestamp', 'operator': 'gte', 'value': {_QueryWindowStartTime} },{ 'field': 'timestamp', 'operator': 'lte', 'value': {_QueryWindowEndTime} }  ], 'sort': { 'field': 'timestamp', 'keyword': 'desc' } } }",
                  "queryTimeFormat": "UnixTimestampInMills",
                  "queryWindowInMin": 5,
                  "logResponseContent": true
                },
                "response": {
                  "eventsJsonPaths": [
                    "$.reply.data"
                  ]
                },
                "dcrConfig": {
                  "streamName": "Custom-CortexXdrStreamAgent",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "offsetParaName": "$.request_data.search_from",
                  "pagingType": "Offset",
                  "offsetEndParaName": "$.request_data.search_to",
                  "pageSize": 100
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', 'CortexXdrAlerts')]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "CortexXDRDataConnector",
                "dataType": "PaloAltoCortexXDR_Alerts_CL",
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apitoken')]",
                  "ApiKeyName": "Authorization"
                },
                "request": {
                  "apiEndpoint": "[[concat(parameters('apiUrl'),'/public_api/v1/alerts/get_alerts')]",
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba",
                    "x-xdr-auth-id": "[[parameters('apiId')]"
                  },
                  "httpMethod": "Post",
                  "queryParametersTemplate": "{ 'request_data': { 'filters': [ { 'field': 'creation_time', 'operator': 'gte', 'value': {_QueryWindowStartTime} },{ 'field': 'creation_time', 'operator': 'lte', 'value': {_QueryWindowEndTime} }], 'sort': { 'field': 'creation_time', 'keyword': 'desc' } } }",
                  "queryTimeFormat": "UnixTimestampInMills",
                  "queryWindowInMin": 5,
                  "logResponseContent": true
                },
                "response": {
                  "eventsJsonPaths": [
                    "$.reply.alerts"
                  ]
                },
                "dcrConfig": {
                  "streamName": "Custom-CortexXdrStreamAlerts",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "offsetParaName": "$.request_data.search_from",
                  "pagingType": "Offset",
                  "offsetEndParaName": "$.request_data.search_to",
                  "pageSize": 100
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', 'CortexXdrEndpoints')]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "CortexXDRDataConnector",
                "dataType": "PaloAltoCortexXDR_Endpoints_CL",
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apitoken')]",
                  "ApiKeyName": "Authorization"
                },
                "request": {
                  "apiEndpoint": "[[concat(parameters('apiUrl'),'/public_api/v1/endpoints/get_endpoints')]",
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba",
                    "x-xdr-auth-id": "[[parameters('apiId')]"
                  },
                  "httpMethod": "Post",
                  "queryParametersTemplate": "{}",
                  "queryTimeFormat": "UnixTimestampInMills",
                  "queryWindowInMin": 60,
                  "logResponseContent": true
                },
                "response": {
                  "eventsJsonPaths": [
                    "$.reply"
                  ]
                },
                "dcrConfig": {
                  "streamName": "Custom-CortexXdrStreamEndpoint",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', 'CortexXdrIncidents')]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "CortexXDRDataConnector",
                "dataType": "PaloAltoCortexXDR_Incidents_CL",
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apitoken')]",
                  "ApiKeyName": "Authorization"
                },
                "request": {
                  "apiEndpoint": "[[concat(parameters('apiUrl'),'/public_api/v1/incidents/get_incidents')]",
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba",
                    "x-xdr-auth-id": "[[parameters('apiId')]"
                  },
                  "httpMethod": "Post",
                  "queryParametersTemplate": "{ 'request_data': { 'filters': [ { 'field': 'creation_time', 'operator': 'gte', 'value': {_QueryWindowStartTime} },{ 'field': 'creation_time', 'operator': 'lte', 'value': {_QueryWindowEndTime} }], 'sort': { 'field': 'creation_time', 'keyword': 'desc' } } }",
                  "queryTimeFormat": "UnixTimestampInMills",
                  "queryWindowInMin": 5,
                  "logResponseContent": true
                },
                "response": {
                  "eventsJsonPaths": [
                    "$.reply.incidents"
                  ]
                },
                "dcrConfig": {
                  "streamName": "Custom-CortexXdrStreamIncidents",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "offsetParaName": "$.request_data.search_from",
                  "pagingType": "Offset",
                  "offsetEndParaName": "$.request_data.search_to",
                  "pageSize": 100
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', 'CortexXdrManagement')]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "CortexXDRDataConnector",
                "dataType": "PaloAltoCortexXDR_Audit_Management_CL",
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apitoken')]",
                  "ApiKeyName": "Authorization"
                },
                "request": {
                  "apiEndpoint": "[[concat(parameters('apiUrl'),'/public_api/v1/audits/management_logs')]",
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba",
                    "x-xdr-auth-id": "[[parameters('apiId')]"
                  },
                  "httpMethod": "Post",
                  "queryParametersTemplate": "{ 'request_data': { 'filters': [ { 'field': 'timestamp', 'operator': 'gte', 'value': {_QueryWindowStartTime} },{ 'field': 'timestamp', 'operator': 'lte', 'value': {_QueryWindowEndTime} } ], 'sort': { 'field': 'timestamp', 'keyword': 'desc' } } }",
                  "queryTimeFormat": "UnixTimestampInMills",
                  "queryWindowInMin": 5,
                  "logResponseContent": true
                },
                "response": {
                  "eventsJsonPaths": [
                    "$.reply.data"
                  ]
                },
                "dcrConfig": {
                  "streamName": "Custom-CortexXdrStreamManagement",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "offsetParaName": "$.request_data.search_from",
                  "pagingType": "Offset",
                  "offsetEndParaName": "$.request_data.search_to",
                  "pageSize": 100
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Palo Alto Cortex XDR CCP",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Palo%20Alto%20Cortex%20XDR%20CCP/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://cortex-panw.stoplight.io/docs/cortex-xdr/branches/main/09agw06t5dpvw-cortex-xdr-rest-api\">Palo Alto Cortex XDR</a> data connector allows ingesting logs from the Palo Alto Cortex XDR API into Microsoft Sentinel. The data connector is built on Microsoft Sentinel Codeless Connector Platform. It uses the Palo Alto Cortex XDR API to fetch agents, alerts, incidents, management and endpoint logs and it supports DCR-based <a href=\"https://docs.microsoft.com/azure/azure-monitor/logs/custom-logs-overview\">ingestion time transformations</a> that parses the received security data into a custom table, thus resulting in better performance.</p>\n<p><strong>Data Connectors:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/CortexXDR_Logo.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Palo Alto Cortex XDR CCP",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "version": "[variables('dataConnectorCCPVersion')]"
            }
          ]
        },
        "firstPublishDate": "2024-12-07",
        "providers": [
          "Palo Alto"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
