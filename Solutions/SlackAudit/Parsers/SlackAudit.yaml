id: fb5aaeb6-14fa-45e8-bb4a-6d4c642a710e
Function:
  Title: Parser for SlackAudit
  Version: "1.0.0"
  LastUpdated: "2023-08-23"
Category: Microsoft Sentinel Parser
FunctionName: SlackAudit
FunctionAlias: SlackAudit
FunctionQuery: |
  let SlackAudit_view = view () {
  SlackAudit_CL
  | extend
        DetailsMobileOnly=column_ifexists('details_mobile_only_b', ''),
    		DetailsWebOnly=column_ifexists('details_web_only_b', ''),
    		DetailsKickerId=column_ifexists('details_kicker_id_s', ''),
    		DetailsKickerName=column_ifexists('details_kicker_name_s', ''),
    		DetailsKickerEmail=column_ifexists('details_kicker_email_s', ''),
    		DetailsKickerTeam=column_ifexists('details_kicker_team_s', ''),
    		DetailsAppOwnerId=column_ifexists('details_app_owner_id_s', ''),
    		DetailsGranularBotToken=column_ifexists('details_granular_bot_token_b', ''),
    		DetailsNewScopes=column_ifexists('details_new_scopes_s', ''),
    		DetailsPreviousScopes=column_ifexists('details_previous_scopes_s', ''),
    		EntityUsergroupId=column_ifexists('entity_usergroup_id_s', ''),
    		EntityUsergroupName=column_ifexists('entity_usergroup_name_s', ''),
    		DetailsKickerType=column_ifexists('details_kicker_type_s', ''),
    		DetailsKickerUserId=column_ifexists('details_kicker_user_id_s', ''),
    		DetailsKickerUserName=column_ifexists('details_kicker_user_name_s', ''),
    		DetailsKickerUserEmail=column_ifexists('details_kicker_user_email_s', ''),
    		DetailsKickerUserTeam=column_ifexists('details_kicker_user_team_s', ''),
    		DetailsInviterId=column_ifexists('details_inviter_id_s', ''),
    		DetailsInviterName=column_ifexists('details_inviter_name_s', ''),
    		DetailsInviterEmail=column_ifexists('details_inviter_email_s', ''),
    		DetailsInviterTeam=column_ifexists('details_inviter_team_s', ''),
    		DetailsInviterType=column_ifexists('details_inviter_type_s', ''),
    		DetailsInviterUserId=column_ifexists('details_inviter_user_id_s', ''),
    		DetailsInviterUserName=column_ifexists('details_inviter_user_name_s', ''),
    		DetailsInviterUserEmail=column_ifexists('details_inviter_user_email_s', ''),
    		DetailsInviterUserTeam=column_ifexists('details_inviter_user_team_s', ''),
    		DetailsIsWorkflow=column_ifexists('details_is_workflow_b', ''),
    		EntityAppId=column_ifexists('entity_app_id_s', ''),
    		EntityAppName=column_ifexists('entity_app_name_s', ''),
    		EntityAppIsDistributed=column_ifexists('entity_app_is_distributed_b', ''),
    		EntityAppIsDirectoryApproved=column_ifexists('entity_app_is_directory_approved_b', ''),
    		EntityAppIsWorkflowApp=column_ifexists('entity_app_is_workflow_app_b', ''),
    		EntityAppScopes=column_ifexists('entity_app_scopes_s', ''),
    		DetailsIsInternalIntegration=column_ifexists('details_is_internal_integration_b', ''),
    		DetailsBotScopes=column_ifexists('details_bot_scopes_s', ''),
    		EntityChannelId=column_ifexists('entity_channel_id_s', ''),
    		EntityChannelPrivacy=column_ifexists('entity_channel_privacy_s', ''),
    		EntityChannelName=column_ifexists('entity_channel_name_s', ''),
    		EntityChannelIsShared=column_ifexists('entity_channel_is_shared_b', ''),
    		EntityChannelIsOrgShared=column_ifexists('entity_channel_is_org_shared_b', ''),
    		DetailsType=column_ifexists('details_type_s', ''),
    		EntityUserId=column_ifexists('entity_user_id_s', ''),
    		EntityUserName=column_ifexists('entity_user_name_s', ''),
    		EntityUserEmail=column_ifexists('entity_user_email_s', ''),
    		EntityUserTeam=column_ifexists('entity_user_team_s', ''),
    		Id=column_ifexists('id_g', ''),
    		DateCreate=column_ifexists('date_create_d', ''),
    		Action=column_ifexists('action_s', ''),
    		ActorType=column_ifexists('actor_type_s', ''),
    		ActorUserId=column_ifexists('actor_user_id_s', ''),
    		ActorUserName=column_ifexists('actor_user_name_s', ''),
    		ActorUserEmail=column_ifexists('actor_user_email_s', ''),
    		ActorUserTeam=column_ifexists('actor_user_team_s', ''),
    		EntityType=column_ifexists('entity_type_s', ''),
    		EntityFileId=column_ifexists('entity_file_id_s', ''),
    		EntityFileName=column_ifexists('entity_file_name_s', ''),
    		EntityFileFiletype=column_ifexists('entity_file_filetype_s', ''),
    		EntityFileTitle=column_ifexists('entity_file_title_s', ''),
    		ContextLocationType=column_ifexists('context_location_type_s', ''),
    		ContextLocationId=column_ifexists('context_location_id_s', ''),
    		ContextLocationName=column_ifexists('context_location_name_s', ''),
    		ContextLocationDomain=column_ifexists('context_location_domain_s', ''),
    		ContextUA=column_ifexists('context_ua_s', ''),
    		ContextIpAddress=column_ifexists('context_ip_address_s', ''),
    		ContextSessionId=column_ifexists('context_session_id_d', ''),
    		ActionDescription=column_ifexists('action_description_s', '')
  };
  let SlackAuditV1_view = view () {
  SlackAuditNativePoller_CL
  | extend
        DetailsMobileOnly=column_ifexists('details_mobile_only_b', ''), 
    		DetailsWebOnly=column_ifexists('details_web_only_b', ''),
    		DetailsKickerId=column_ifexists('details_kicker_id_s', ''),
    		DetailsKickerName=column_ifexists('details_kicker_name_s', ''),
    		DetailsKickerEmail=column_ifexists('details_kicker_email_s', ''),
    		DetailsKickerTeam=column_ifexists('details_kicker_team_s', ''),
    		DetailsAppOwnerId=column_ifexists('details_app_owner_id_s', ''),
    		DetailsGranularBotToken=column_ifexists('details_granular_bot_token_b', ''),
    		DetailsNewScopes=column_ifexists('details_new_scopes_s', ''),
    		DetailsPreviousScopes=column_ifexists('details_previous_scopes_s', ''),
    		EntityUsergroupId=column_ifexists('entity_usergroup_id_s', ''),
    		EntityUsergroupName=column_ifexists('entity_usergroup_name_s', ''),
    		DetailsKickerType=column_ifexists('details_kicker_type_s', ''),
    		DetailsKickerUserId=column_ifexists('details_kicker_user_id_s', ''),
    		DetailsKickerUserName=column_ifexists('details_kicker_user_name_s', ''),
    		DetailsKickerUserEmail=column_ifexists('details_kicker_user_email_s', ''),
    		DetailsKickerUserTeam=column_ifexists('details_kicker_user_team_s', ''),
    		DetailsInviterId=column_ifexists('details_inviter_id_s', ''),
    		DetailsInviterName=column_ifexists('details_inviter_name_s', ''),
    		DetailsInviterEmail=column_ifexists('details_inviter_email_s', ''),
    		DetailsInviterTeam=column_ifexists('details_inviter_team_s', ''),
    		DetailsInviterType=column_ifexists('details_inviter_type_s', ''),
    		DetailsInviterUserId=column_ifexists('details_inviter_user_id_s', ''),
    		DetailsInviterUserName=column_ifexists('details_inviter_user_name_s', ''),
    		DetailsInviterUserEmail=column_ifexists('details_inviter_user_email_s', ''),
    		DetailsInviterUserTeam=column_ifexists('details_inviter_user_team_s', ''),
    		DetailsIsWorkflow=column_ifexists('details_is_workflow_b', ''),
    		EntityAppId=column_ifexists('entity_app_id_s', ''),
    		EntityAppName=column_ifexists('entity_app_name_s', ''),
    		EntityAppIsDistributed=column_ifexists('entity_app_is_distributed_b', ''),
    		EntityAppIsDirectoryApproved=column_ifexists('entity_app_is_directory_approved_b', ''),
    		EntityAppIsWorkflowApp=column_ifexists('entity_app_is_workflow_app_b', ''),
    		EntityAppScopes=column_ifexists('entity_app_scopes_s', ''),
    		DetailsIsInternalIntegration=column_ifexists('details_is_internal_integration_b', ''),
    		DetailsBotScopes=column_ifexists('details_bot_scopes_s', ''),
    		EntityChannelId=column_ifexists('entity_channel_id_s', ''),
    		EntityChannelPrivacy=column_ifexists('entity_channel_privacy_s', ''),
    		EntityChannelName=column_ifexists('entity_channel_name_s', ''),
    		EntityChannelIsShared=column_ifexists('entity_channel_is_shared_b', ''),
    		EntityChannelIsOrgShared=column_ifexists('entity_channel_is_org_shared_b', ''),
    		DetailsType=column_ifexists('details_type_s', ''),
    		EntityUserId=column_ifexists('entity_user_id_s', ''),
    		EntityUserName=column_ifexists('entity_user_name_s', ''),
    		EntityUserEmail=column_ifexists('entity_user_email_s', ''),
    		EntityUserTeam=column_ifexists('entity_user_team_s', ''),
    		Id=column_ifexists('id_g', ''),
    		DateCreate=column_ifexists('date_create_d', ''),
    		Action=column_ifexists('action_s', ''),
    		ActorType=column_ifexists('actor_type_s', ''),
    		ActorUserId=column_ifexists('actor_user_id_s', ''),
    		ActorUserName=column_ifexists('actor_user_name_s', ''),
    		ActorUserEmail=column_ifexists('actor_user_email_s', ''),
    		ActorUserTeam=column_ifexists('actor_user_team_s', ''),
    		EntityType=column_ifexists('entity_type_s', ''),
    		EntityFileId=column_ifexists('entity_file_id_s', ''),
    		EntityFileName=column_ifexists('entity_file_name_s', ''),
    		EntityFileFiletype=column_ifexists('entity_file_filetype_s', ''),
    		EntityFileTitle=column_ifexists('entity_file_title_s', ''),
    		ContextLocationType=column_ifexists('context_location_type_s', ''),
    		ContextLocationId=column_ifexists('context_location_id_s', ''),
    		ContextLocationName=column_ifexists('context_location_name_s', ''),
    		ContextLocationDomain=column_ifexists('context_location_domain_s', ''),
    		ContextUA=column_ifexists('context_ua_s', ''),
    		ContextIpAddress=column_ifexists('context_ip_address_s', ''),
    	  ContextSessionId=column_ifexists('context_session_id_d', ''),
    		ActionDescription=column_ifexists('action_description_s', ''),
        EventId=column_ifexists('id_g', ''),
        EventEndTime=column_ifexists('date_create_d', ''),
        DvcAction=column_ifexists('action_s', ''),
        SrcUserIdentity=column_ifexists('actor_user_id_s', ''),
        SrcUserName=column_ifexists('actor_user_name_s', ''),
        SrcUserEmail=column_ifexists('actor_user_email_s', ''),
        UserAgentOriginal=column_ifexists('context_ua_s', ''),
        SrcIpAddr=column_ifexists('context_ip_address_s', ''),
        DvcActionDesc=column_ifexists('action_description_s', '')
  };
  let SlackAuditV2_view = view () {
  SlackAuditV2_CL
  | extend actor = todynamic(Actor)
  | extend entity = todynamic(Entity)
  | extend context = todynamic(Context)
  | extend details = todynamic(Details)
  | extend
        Id=column_ifexists('Id', ''),
        DateCreate=column_ifexists('DateCreate', ''),
        Action=column_ifexists('Action', ''),
        DetailsMobileOnly=tobool(details.mobile.only),
        DetailsWebOnly=tobool(details.web.only),
        DetailsKickerId=tostring(details.kicker.id),
        DetailsKickerName=tostring(details.kicker.name),
        DetailsKickerEmail=tostring(details.kicker.email),
        DetailsKickerTeam=tostring(details.kicker.team),
        DetailsAppOwnerId=tostring(details.app.owner.id),
        DetailsGranularBotToken=tobool(details.granular.bot.token),
        DetailsNewScopes=tostring(details.new.scopes),
        DetailsPreviousScopes=tostring(details.previous.scopes),
        EntityUsergroupId=tostring(entity.usergroup.id),
        EntityUsergroupName=tostring(entity.usergroup.name),
        DetailsKickerType=tostring(details.kicker.type),
        DetailsKickerUserId=tostring(details.kicker.user.id),
        DetailsKickerUserName=tostring(details.kicker.user.name),
        DetailsKickerUserEmail=tostring(details.kicker.user.email),
        DetailsKickerUserTeam=tostring(details.kicker.user.team),
        DetailsInviterId=tostring(details.inviter.id),
        DetailsInviterName=tostring(details.inviter.name),
        DetailsInviterEmail=tostring(details.inviter.email),
        DetailsInviterTeam=tostring(details.inviter.team),
        DetailsInviterType=tostring(details.inviter.type),
        DetailsInviterUserId=tostring(details.inviter.user.id),
        DetailsInviterUserName=tostring(details.inviter.user.name),
        DetailsInviterUserEmail=tostring(details.inviter.user.email),
        DetailsInviterUserTeam=tostring(details.inviter.user.team),
        DetailsIsWorkflow=tobool(details.is.workflow),
        EntityAppId=tostring(entity.app.id),
        EntityAppName=tostring(entity.app.name),
        EntityAppIsDistributed=tobool(entity.app.is.distributed),
        EntityAppIsDirectoryApproved=tobool(entity.app.is.directory.approved),
        EntityAppIsWorkflowApp=tobool(entity.app.is.workflow.app),
        EntityAppScopes=tostring(entity.app.scopes),
        DetailsIsInternalIntegration=tobool(details.is.internal.integration),
        DetailsBotScopes=tostring(details.bot.scopes),
        EntityChannelId=tostring(entity.channel.id),
        EntityChannelPrivacy=tostring(entity.channel.privacy),
        EntityChannelName=tostring(entity.channel.name),
        EntityChannelIsShared=tobool(entity.channel.is.shared),
        EntityChannelIsOrgShared=tobool(entity.channel.is.org.shared),
        DetailsType=tostring(details.type),
        EntityUserId=tostring(entity.user.id),
        EntityUserName=tostring(entity.user.name),
        EntityUserEmail=tostring(entity.user.email),
        EntityUserTeam=tostring(entity.user.team),
        ActorType=tostring(actor.type),
        ActorUserId=tostring(actor.user.id),
        ActorUserName=tostring(actor.user.name),
        ActorUserEmail=tostring(actor.user.email),
        ActorUserTeam=tostring(actor.user.team),
        EntityType=tostring(entity.type),
        EntityFileId=tostring(entity.file.id),
        EntityFileName=tostring(entity.file.name),
        EntityFileFiletype=tostring(entity.file.filetype),
        EntityFileTitle=tostring(entity['file']['title']),
        ContextLocationType=tostring(context.location.type),
        ContextLocationId=tostring(context.location.id),
        ContextLocationName=tostring(context.location.name),
        ContextLocationDomain=tostring(context.location.domain),
        ContextUA=tostring(context.ua),
        ContextIpAddress=tostring(context.ip.address),
        ContextSessionId=todouble(context.session.id),
        ActionDescription=column_ifexists('ActionDescription', ''),
        EventId=column_ifexists('Id', ''),
        EventEndTime=column_ifexists('DateCreate', ''),
        DvcAction=column_ifexists('Action', ''),
        SrcUserIdentity=tostring(actor.user.id),
        SrcUserName=tostring(actor.user.name),
        SrcUserEmail=tostring(actor.user.email),
        UserAgentOriginal=tostring(context.ua),
        SrcIpAddr=tostring(context.ip.address),
        DvcActionDesc=column_ifexists('ActionDescription', '')
  };
  union isfuzzy=true
  (SlackAudit_view),
  (SlackAuditV1_view),
  (SlackAuditV2_view) 
  | project TimeGenerated, DetailsMobileOnly,DetailsWebOnly, DetailsKickerId, DetailsKickerName, DetailsKickerEmail, DetailsKickerTeam,DetailsAppOwnerId, DetailsGranularBotToken, DetailsNewScopes, DetailsPreviousScopes, EntityUsergroupId, EntityUsergroupName, DetailsKickerType, DetailsKickerUserId, DetailsKickerUserName, DetailsKickerUserEmail, DetailsKickerUserTeam, DetailsInviterId, DetailsInviterName, DetailsInviterEmail, DetailsInviterTeam, DetailsInviterType, DetailsInviterUserId, DetailsInviterUserName, DetailsInviterUserEmail, DetailsInviterUserTeam, DetailsIsWorkflow, EntityAppId, EntityAppName, EntityAppIsDistributed, EntityAppIsDirectoryApproved, EntityAppIsWorkflowApp, EntityAppScopes, DetailsIsInternalIntegration, DetailsBotScopes, EntityChannelId, EntityChannelPrivacy, EntityChannelName, EntityChannelIsShared, EntityChannelIsOrgShared, DetailsType, EntityUserId, EntityUserName, EntityUserEmail, EntityUserTeam, Id, DateCreate, Action, ActorType, ActorUserId, ActorUserName, ActorUserEmail, ActorUserTeam, EntityType, EntityFileId, EntityFileName, EntityFileFiletype, EntityFileTitle, ContextLocationType, ContextLocationId, ContextLocationName, ContextLocationDomain, ContextUA, ContextIpAddress, ContextSessionId, ActionDescription, EventId, EventEndTime, DvcAction, SrcUserIdentity, SrcUserName, SrcUserEmail, UserAgentOriginal, SrcIpAddr, DvcActionDesc