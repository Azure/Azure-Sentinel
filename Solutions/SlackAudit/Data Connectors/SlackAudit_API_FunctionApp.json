{
	"id": "SlackAuditAPI",
	"title": "Slack Audit",
	"publisher": "Slack",
	"descriptionMarkdown": "The [Slack](https://slack.com) Audit data connector provides the capability to ingest [Slack Audit Records](https://api.slack.com/admins/audit-logs) events into Microsoft Sentinel through the REST API. Refer to [API documentation](https://api.slack.com/admins/audit-logs#the_audit_event) for more information. The connector provides ability to get events which helps to examine potential security risks, analyze your team's use of collaboration, diagnose configuration problems and more.",
	"additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on Kusto to work as expected. â€‹Follow the steps to use this Kusto functions alias **SlackAudit** in queries and workbooks [Follow steps to get this Kusto functions>](https://aka.ms/sentinel-SlackAuditAPI-parser).",
	"graphQueries": [{
			"metricName": "Total data received",
			"legend": "SlackAudit_CL",
			"baseQuery": "SlackAudit_CL"
		}
	],
	"sampleQueries": [{
		"description": "Slack Audit Events - All Activities.",
		"query": "SlackAudit\n | sort by TimeGenerated desc"
	}
],
	"dataTypes": [{
			"name": "SlackAudit_CL",
			"lastDataReceivedQuery": "SlackAudit_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
		}
	],
	"connectivityCriterias": [{
			"type": "IsConnectedQuery",
			"value": [
				"SlackAudit_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
			]
		}
	],
	"availability": {
		"status": 1,
		"isPreview": false
	},
	"permissions": {
		"resourceProvider": [{
				"provider": "Microsoft.OperationalInsights/workspaces",
				"permissionsDisplayText": "read and write permissions on the workspace are required.",
				"providerDisplayName": "Workspace",
				"scope": "Workspace",
				"requiredPermissions": {
					"write": true,
					"read": true,
					"delete": true
				}
			},
			{
				"provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
				"permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
				"providerDisplayName": "Keys",
				"scope": "Workspace",
				"requiredPermissions": {
					"action": true
				}
			}
		],
		"customs": [{
				"name": "Microsoft.Web/sites permissions",
				"description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
			},
			{
				"name": "REST API Credentials/permissions",
				"description": "**SlackAPIBearerToken** is required for REST API. [See the documentation to learn more about API](https://api.slack.com/web#authentication). Check all [requirements and follow  the instructions](https://api.slack.com/web#authentication) for obtaining credentials."
			}
		]
	},
	"instructionSteps": [{
			"title": "",
			"description": ">**NOTE:** This connector uses Azure Functions to connect to the Slack REST API to pull its logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
		},
		{
			"title": "",
			"description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
		},
		{
			"description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected. [Follow these steps](https://aka.ms/sentinel-SlackAuditAPI-parser) to create the Kusto functions alias, **SlackAudit**"
		},
		{
			"title": "",
			"description": "**STEP 1 - Configuration steps for the Slack API**\n\n [Follow the instructions](https://api.slack.com/web#authentication) to obtain the credentials. \n"
		},
		{
			"title": "",
			"description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Slack Audit data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following).",
			"instructions": [{
					"parameters": {
						"fillWith": [
							"WorkspaceId"
						],
						"label": "Workspace ID"
					},
					"type": "CopyableLabel"
				},
				{
					"parameters": {
						"fillWith": [
							"PrimaryKey"
						],
						"label": "Primary Key"
					},
					"type": "CopyableLabel"
				}
			]
		},
		{
			"instructions": [
			{
				"parameters":{
					  "instructionSteps": [
		{
			"title": "Option 1 - Azure Resource Manager (ARM) Template",
			"description": "Use this method for automated deployment of the Slack Audit data connector using an ARM Tempate.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-SlackAuditAPI-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n> **NOTE:** Within the same resource group, you can't mix Windows and Linux apps in the same region. Select existing resource group without Windows apps in it or create new resource group.\n3. Enter the **SlackAPIBearerToken** and deploy. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy."
		},
		{
			"title": "Option 2 - Manual Deployment of Azure Functions",
			"description": "Use the following step-by-step instructions to deploy the Slack Audit data connector manually with Azure Functions (Deployment via Visual Studio Code).",
		 "instructions": [ 
                {
                    "parameters": {
                      
                        "instructionSteps": [
                             {
			"title": "Step 1 - Deploy a Function App",
			"description": "1. Download the [Azure Function App](https://aka.ms/sentinel-SlackAuditAPI-functionapp) file. Extract archive to your local development computer.\n2. Follow the [function app manual deployment instructions](https://github.com/Azure/Azure-Sentinel/blob/master/DataConnectors/AzureFunctionsManualDeployment.md#function-app-manual-deployment-instructions) to deploy the Azure Functions app using VSCode.\n3. After successful deployment of the function app, follow next steps for configuring it."
		},
							 {
			"title": "Step 2 - Configure the Function App",
			"description": "1. Go to Azure Portal for the Function App configuration.\n2. In the Function App, select the Function App Name and select **Configuration**.\n3. In the **Application settings** tab, select ** New application setting**.\n4. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tSlackAPIBearerToken\n\t\tWorkspaceID\n\t\tWorkspaceKey\n\t\tlogAnalyticsUri (optional)\n> - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n3. Once all application settings have been entered, click **Save**."
		}
                        ]
                    },
                    "type": "InstructionStepsGroup"
                }
            ]
		}
		
		]
				},
				"type": "InstructionStepsGroup"
			}
		]
		}
	]
}