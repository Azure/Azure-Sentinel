{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "Infoblox SOC Import Indicators TI",
        "description":  "Imports each Indicator of a Microsoft Sentinel Incident triggered by an Infoblox SOC Insight into the ThreatIntelligenceIndicator table. You must run the Infoblox-SOC-Get-Insight-Details playbook on a SOC Insight Incident before running this playbook.",
        "prerequisites":  [
            "1. Entra ID Application Secret",
            "2. Client ID",
            "3. Tenant ID"
        ], 
        "postDeployment":  [
            "1. Grant playbook's Managed Identity **Microsoft Sentinel Responder** or greater to Resource Group.",
            "2. Authorize connections."
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "2024-04-03T00:00:00.000Z",
        "entities":  [ "SecurityGroup" ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  "Infoblox"
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Infoblox-SOC-Import-Indicators-TI",
            "type":  "string"
        },
        "Entra ID Application Secret":  {
            "type":  "securestring",
            "metadata":  {
                "description":  "Enter value for Entra ID Application Secret"
            }
        },
        "Client ID":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Application (Client) ID"
            }
        },
        "Tenant ID":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Directory (Tenant) ID"
            }
        }
    },
    "variables":  {
        "AzuremonitorlogsConnectionName":  "[concat('Azuremonitorlogs-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "Entra ID Application Secret":  {
                            "defaultValue":  "[parameters('Entra ID Application Secret')]",
                            "type":  "securestring"
                        },
                        "Client ID":  {
                            "defaultValue":  "[parameters('Client ID')]",
                            "type":  "string"
                        },
                        "Tenant ID":  {
                            "defaultValue":  "[parameters('Tenant ID')]",
                            "type":  "string"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Filter_array_for_Object_GUID_Entity_(InsightID)":  {
                            "runAfter":  {
                                "Parse_Entities_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Query",
                            "inputs":  {
                                "from":  "@body('Parse_Entities_JSON')",
                                "where":  "@equals(item()?['kind'], 'SecurityGroup')"
                            }
                        },
                        "For_each_InsightID":  {
                            "foreach":  "@body('Filter_array_for_Object_GUID_Entity_(InsightID)')",
                            "actions":  {
                                "For_each":  {
                                    "foreach":  "@body('Parse_IPs')?['value']",
                                    "actions":  {
                                        "Send_IPs_to_Sentinel":  {
                                            "runAfter":  {
                                            },
                                            "type":  "Http",
                                            "inputs":  {
                                                "authentication":  {
                                                    "audience":  "https://graph.microsoft.com",
                                                    "clientId":  "@parameters('Client ID')",
                                                    "secret":  "@parameters('Entra ID Application Secret')",
                                                    "tenant":  "@parameters('Tenant ID')",
                                                    "type":  "ActiveDirectoryOAuth"
                                                },
                                                "body":  {
                                                    "action":  "alert",
                                                    "additionalInformation":  "Added via Infoblox SOC Insights",
                                                    "description":  "Infoblox - IP - @{items('For_each')?['InfobloxB1FeedName']}",
                                                    "expirationDateTime":  "@addDays(utcNow(), 14)",
                                                    "externalId":  "@{items('For_each')?['InfobloxInsightID']}",
                                                    "indicatorProvider":  "Infoblox SOC Insights",
                                                    "lastReportedDateTime":  "@items('For_each')?['LastSeen']",
                                                    "networkIPv4":  "@{items('For_each')?['ThreatIndicator']}",
                                                    "tags":  [
                                                        "Feed: @{items('For_each')?['InfobloxB1FeedName']}",
                                                        "FirstSeen: @{items('For_each')?['FirstSeen']}",
                                                        "LastSeen: @{items('For_each')?['LastSeen']}",
                                                        "Threat Confidence: @{items('For_each')?['ThreatConfidence']}",
                                                        "Action: @{items('For_each')?['InfobloxB1PolicyAction']}",
                                                        "Actor: @{items('For_each')?['ThreatActor']}",
                                                        "Event Count: @{items('For_each')?['EventCount']}",
                                                        "Threat Level: @{items('For_each')?['ThreatLevel']}",
                                                        "IP"
                                                    ],
                                                    "targetProduct":  "Azure Sentinel",
                                                    "threatType":  "WatchList",
                                                    "tlpLevel":  "white"
                                                },
                                                "method":  "POST",
                                                "uri":  "https://graph.microsoft.com/beta/security/tiIndicators"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_IPs":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "For_each_Domain":  {
                                    "foreach":  "@body('Parse_Domains')?['value']",
                                    "actions":  {
                                        "Send_Domains_to_Sentinel":  {
                                            "runAfter":  {
                                            },
                                            "type":  "Http",
                                            "inputs":  {
                                                "authentication":  {
                                                    "audience":  "https://graph.microsoft.com",
                                                    "clientId":  "@parameters('Client ID')",
                                                    "secret":  "@parameters('Entra ID Application Secret')",
                                                    "tenant":  "@parameters('Tenant ID')",
                                                    "type":  "ActiveDirectoryOAuth"
                                                },
                                                "body":  {
                                                    "action":  "alert",
                                                    "additionalInformation":  "Added via Infoblox SOC Insights",
                                                    "description":  "Infoblox - HOST - @{items('For_each_Domain')?['InfobloxB1FeedName']}",
                                                    "domainName":  "@{items('For_each_Domain')?['ThreatIndicator']}",
                                                    "expirationDateTime":  "@addDays(utcNow(), 14)",
                                                    "externalId":  "@{items('For_each_Domain')?['InfobloxInsightID']}",
                                                    "indicatorProvider":  "Infoblox SOC Insights",
                                                    "lastReportedDateTime":  "@items('For_each_Domain')?['LastSeen']",
                                                    "tags":  [
                                                        "Feed: @{items('For_each_Domain')?['InfobloxB1FeedName']}",
                                                        "FirstSeen: @{items('For_each_Domain')?['FirstSeen']}",
                                                        "LastSeen: @{items('For_each_Domain')?['LastSeen']}",
                                                        "Threat Confidence: @{items('For_each_Domain')?['ThreatConfidence']}",
                                                        "Action: @{items('For_each_Domain')?['InfobloxB1PolicyAction']}",
                                                        "Actor: @{items('For_each_Domain')?['ThreatActor']}",
                                                        "Event Count: @{items('For_each_Domain')?['EventCount']}",
                                                        "Threat Level: @{items('For_each_Domain')?['ThreatLevel']}",
                                                        "HOST"
                                                    ],
                                                    "targetProduct":  "Azure Sentinel",
                                                    "threatType":  "WatchList",
                                                    "tlpLevel":  "white"
                                                },
                                                "method":  "POST",
                                                "uri":  "https://graph.microsoft.com/beta/security/tiIndicators"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_Domains":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "Get_Domains":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "query":  "InfobloxInsightIndicators\n| where InfobloxInsightID == \"@{items('For_each_InsightID')?['properties']?['objectGuid']}\"\n| where isIP == false\n| summarize arg_max(TimeGenerated, *) by ThreatIndicator",
                                            "timerange":  {
                                                "relativeTimeRange":  "Last 7 days"
                                            },
                                            "timerangetype":  "2"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/queryDataV2",
                                        "queries":  {
                                            "resourcegroups":  "TME-RG",
                                            "resourcename":  "TME-Workspace",
                                            "resourcetype":  "Log Analytics Workspace",
                                            "subscriptions":  "be1e61b7-8dbe-4986-a9c2-d85f65524d6e"
                                        }
                                    }
                                },
                                "Get_IPs":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "query":  "InfobloxInsightIndicators\n| where InfobloxInsightID == \"@{items('For_each_InsightID')?['properties']?['objectGuid']}\"\n| where isIP == true\n| summarize arg_max(TimeGenerated, *) by ThreatIndicator",
                                            "timerange":  {
                                                "relativeTimeRange":  "Last 7 days"
                                            },
                                            "timerangetype":  "2"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/queryDataV2",
                                        "queries":  {
                                            "resourcegroups":  "TME-RG",
                                            "resourcename":  "TME-Workspace",
                                            "resourcetype":  "Log Analytics Workspace",
                                            "subscriptions":  "be1e61b7-8dbe-4986-a9c2-d85f65524d6e"
                                        }
                                    }
                                },
                                "Parse_Domains":  {
                                    "runAfter":  {
                                        "Get_Domains":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Get_Domains')",
                                        "schema":  {
                                            "properties":  {
                                                "value":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "Computer":  {
                                                                "type":  "string"
                                                            },
                                                            "DestinationDnsDomain":  {
                                                                "type":  "string"
                                                            },
                                                            "EventCount":  {
                                                                "type":  "integer"
                                                            },
                                                            "FirstSeen":  {
                                                                "type":  "string"
                                                            },
                                                            "InfobloxB1FeedName":  {
                                                                "type":  "string"
                                                            },
                                                            "InfobloxB1PolicyAction":  {
                                                                "type":  "string"
                                                            },
                                                            "InfobloxInsightID":  {
                                                                "type":  "string"
                                                            },
                                                            "InfobloxInsightLogType":  {
                                                                "type":  "string"
                                                            },
                                                            "LastSeen":  {
                                                                "type":  "string"
                                                            },
                                                            "MG":  {
                                                                "type":  "string"
                                                            },
                                                            "ManagementGroupName":  {
                                                                "type":  "string"
                                                            },
                                                            "RawData":  {
                                                                "type":  "string"
                                                            },
                                                            "SourceMACAddress":  {
                                                                "type":  "string"
                                                            },
                                                            "SourceSystem":  {
                                                                "type":  "string"
                                                            },
                                                            "TenantId":  {
                                                                "type":  "string"
                                                            },
                                                            "ThreatActor":  {
                                                                "type":  "string"
                                                            },
                                                            "ThreatConfidence":  {
                                                                "type":  "string"
                                                            },
                                                            "ThreatIndicator":  {
                                                                "type":  "string"
                                                            },
                                                            "ThreatLevel":  {
                                                                "type":  "string"
                                                            },
                                                            "TimeGenerated":  {
                                                                "type":  "string"
                                                            },
                                                            "Type":  {
                                                                "type":  "string"
                                                            },
                                                            "isIP":  {
                                                                "type":  "boolean"
                                                            }
                                                        },
                                                        "required":  [
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Parse_IPs":  {
                                    "runAfter":  {
                                        "Get_IPs":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Get_IPs')",
                                        "schema":  {
                                            "properties":  {
                                                "value":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "Computer":  {
                                                                "type":  "string"
                                                            },
                                                            "DestinationDnsDomain":  {
                                                                "type":  "string"
                                                            },
                                                            "EventCount":  {
                                                                "type":  "integer"
                                                            },
                                                            "FirstSeen":  {
                                                                "type":  "string"
                                                            },
                                                            "InfobloxB1FeedName":  {
                                                                "type":  "string"
                                                            },
                                                            "InfobloxB1PolicyAction":  {
                                                                "type":  "string"
                                                            },
                                                            "InfobloxInsightID":  {
                                                                "type":  "string"
                                                            },
                                                            "InfobloxInsightLogType":  {
                                                                "type":  "string"
                                                            },
                                                            "LastSeen":  {
                                                                "type":  "string"
                                                            },
                                                            "MG":  {
                                                                "type":  "string"
                                                            },
                                                            "ManagementGroupName":  {
                                                                "type":  "string"
                                                            },
                                                            "RawData":  {
                                                                "type":  "string"
                                                            },
                                                            "SourceMACAddress":  {
                                                                "type":  "string"
                                                            },
                                                            "SourceSystem":  {
                                                                "type":  "string"
                                                            },
                                                            "TenantId":  {
                                                                "type":  "string"
                                                            },
                                                            "ThreatActor":  {
                                                                "type":  "string"
                                                            },
                                                            "ThreatConfidence":  {
                                                                "type":  "string"
                                                            },
                                                            "ThreatIndicator":  {
                                                                "type":  "string"
                                                            },
                                                            "ThreatLevel":  {
                                                                "type":  "string"
                                                            },
                                                            "TimeGenerated":  {
                                                                "type":  "string"
                                                            },
                                                            "Type":  {
                                                                "type":  "string"
                                                            },
                                                            "isIP":  {
                                                                "type":  "boolean"
                                                            }
                                                        },
                                                        "required":  [
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Filter_array_for_Object_GUID_Entity_(InsightID)":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Parse_Entities_JSON":  {
                            "runAfter":  {
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "schema":  {
                                    "items":  {
                                        "properties":  {
                                            "id":  {
                                                "type":  "string"
                                            },
                                            "kind":  {
                                                "type":  "string"
                                            },
                                            "name":  {
                                                "type":  "string"
                                            },
                                            "properties":  {
                                                "properties":  {
                                                    "friendlyName":  {
                                                        "type":  "string"
                                                    },
                                                    "objectGuid":  {
                                                        "type":  "string"
                                                    }
                                                },
                                                "type":  "object"
                                            },
                                            "type":  {
                                                "type":  "string"
                                            }
                                        },
                                        "required":  [
                                        ],
                                        "type":  "object"
                                    },
                                    "type":  "array"
                                }
                            }
                        }
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuremonitorlogs":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                                "connectionName":  "[variables('AzuremonitorlogsConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
                            },
                            "azuresentinel_1":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "Infoblox-SOC-Import-Indicators-TI",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzuremonitorlogsConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzuremonitorlogsConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}
