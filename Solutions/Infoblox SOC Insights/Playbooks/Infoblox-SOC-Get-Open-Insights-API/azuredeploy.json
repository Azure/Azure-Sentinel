{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "Infoblox SOC Get Open Insights API",
        "description":  "Leverages the Infoblox SOC Insights API to ingest all Open/Active SOC Insights at time of run into the custom InfobloxInsight table. This playbook is scheduled to run on a daily basis.",
        "prerequisites":  [
            "Infoblox SOC Insights API Key"
        ], 
        "postDeployment":  [
            "Authorize connections."
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "2024-04-03T00:00:00.000Z",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  "Infoblox"
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Infoblox-SOC-Get-Open-Insights-API",
            "type":  "string"
        },
        "Infoblox API Key":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Infoblox API Key"
            }
        }
    },
    "variables":  {
        "AzureloganalyticsdatacollectorConnectionName":  "[concat('Azureloganalyticsdatacollector-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "Infoblox API Key":  {
                            "defaultValue":  "[parameters('Infoblox API Key')]",
                            "type":  "string"
                        }
                    },
                    "triggers":  {
                        "Recurrence":  {
                            "recurrence":  {
                                "frequency":  "Day",
                                "interval":  1
                            },
                            "evaluatedRecurrence":  {
                                "frequency":  "Day",
                                "interval":  1
                            },
                            "type":  "Recurrence"
                        }
                    },
                    "actions":  {
                        "For_each_Insight":  {
                            "foreach":  "@body('Parse_JSON')?['insightList']",
                            "actions":  {
                                "Send_Data":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  "@{union(variables('Extra Cols'), items('For_Each_Insight'))}",
                                        "headers":  {
                                            "Log-Type":  "InfobloxInsight"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azureloganalyticsdatacollector_1']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/api/logs"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Parse_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Get_All_Insights":  {
                            "runAfter":  {
                                "Initialize_Extra_Cols":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Http",
                            "inputs":  {
                                "headers":  {
                                    "Authorization":  "Token @{parameters('Infoblox API Key')}"
                                },
                                "method":  "GET",
                                "uri":  "https://csp.infoblox.com/api/v1/insights"
                            }
                        },
                        "Initialize_Extra_Cols":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Extra Cols",
                                        "type":  "object",
                                        "value":  {
                                            "InfobloxInsightLogType":  "Insight"
                                        }
                                    }
                                ]
                            }
                        },
                        "Parse_JSON":  {
                            "runAfter":  {
                                "Get_All_Insights":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Get_All_Insights')",
                                "schema":  {
                                    "properties":  {
                                        "insightList":  {
                                            "items":  {
                                                "properties":  {
                                                    "changer":  {
                                                        "type":  "string"
                                                    },
                                                    "dateChanged":  {
                                                        "type":  "string"
                                                    },
                                                    "eventsBlockedCount":  {
                                                        "type":  "string"
                                                    },
                                                    "eventsNotBlockedCount":  {
                                                        "type":  "string"
                                                    },
                                                    "feedSource":  {
                                                        "type":  "string"
                                                    },
                                                    "insightId":  {
                                                        "type":  "string"
                                                    },
                                                    "mostRecentAt":  {
                                                        "type":  "string"
                                                    },
                                                    "numEvents":  {
                                                        "type":  "string"
                                                    },
                                                    "persistentDate":  {
                                                        "type":  "string"
                                                    },
                                                    "priorityText":  {
                                                        "type":  "string"
                                                    },
                                                    "startedAt":  {
                                                        "type":  "string"
                                                    },
                                                    "status":  {
                                                        "type":  "string"
                                                    },
                                                    "tClass":  {
                                                        "type":  "string"
                                                    },
                                                    "tFamily":  {
                                                        "type":  "string"
                                                    },
                                                    "threatType":  {
                                                        "type":  "string"
                                                    },
                                                    "userComment":  {
                                                        "type":  "string"
                                                    }
                                                },
                                                "required":  [
                                                ],
                                                "type":  "object"
                                            },
                                            "type":  "array"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azureloganalyticsdatacollector_1":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                                "connectionName":  "[variables('AzureloganalyticsdatacollectorConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureloganalyticsdatacollector')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "Infoblox-SOC-Get-Open-Insights-API",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzureloganalyticsdatacollectorConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzureloganalyticsdatacollectorConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureloganalyticsdatacollector')]"
                }
            }
        }
    ]
}
