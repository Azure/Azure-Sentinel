{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Infoblox SOC Insights"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Infoblox SOC Insights Workbook",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Infoblox SOC Insights",
    "_solutionVersion": "3.0.2",
    "solutionId": "infoblox.infoblox-soc-insight-solution",
    "_solutionId": "[variables('solutionId')]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "InfobloxSOCInsightsWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.0.0",
      "_analyticRulecontentId1": "cf9847bb-ab46-4050-bb81-75cab3f893dc",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'cf9847bb-ab46-4050-bb81-75cab3f893dc')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('cf9847bb-ab46-4050-bb81-75cab3f893dc')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','cf9847bb-ab46-4050-bb81-75cab3f893dc','-', '1.0.0')))]"
    },
    "analyticRuleObject2": {
      "analyticRuleVersion2": "1.0.1",
      "_analyticRulecontentId2": "a4bdd81e-afc8-4410-a3d1-8478fa810537",
      "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a4bdd81e-afc8-4410-a3d1-8478fa810537')]",
      "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('a4bdd81e-afc8-4410-a3d1-8478fa810537')))]",
      "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','a4bdd81e-afc8-4410-a3d1-8478fa810537','-', '1.0.1')))]"
    },
    "uiConfigId1": "InfobloxSOCInsightsDataConnector_AMA",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "InfobloxSOCInsightsDataConnector_AMA",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "uiConfigId2": "InfobloxSOCInsightsDataConnector_API",
    "_uiConfigId2": "[variables('uiConfigId2')]",
    "dataConnectorContentId2": "InfobloxSOCInsightsDataConnector_API",
    "_dataConnectorContentId2": "[variables('dataConnectorContentId2')]",
    "dataConnectorId2": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
    "_dataConnectorId2": "[variables('dataConnectorId2')]",
    "dataConnectorTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId2'))))]",
    "dataConnectorVersion2": "1.0.0",
    "_dataConnectorcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId2'),'-', variables('dataConnectorVersion2'))))]",
    "uiConfigId3": "InfobloxSOCInsightsDataConnector_Legacy",
    "_uiConfigId3": "[variables('uiConfigId3')]",
    "dataConnectorContentId3": "InfobloxSOCInsightsDataConnector_Legacy",
    "_dataConnectorContentId3": "[variables('dataConnectorContentId3')]",
    "dataConnectorId3": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
    "_dataConnectorId3": "[variables('dataConnectorId3')]",
    "dataConnectorTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId3'))))]",
    "dataConnectorVersion3": "1.0.0",
    "_dataConnectorcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId3'),'-', variables('dataConnectorVersion3'))))]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','InfobloxCDC_SOCInsights')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxCDC_SOCInsights')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('InfobloxCDC_SOCInsights-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "InfobloxCDC_SOCInsights-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','InfobloxInsight')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsight')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('InfobloxInsight-Parser')))]",
      "parserVersion2": "1.0.0",
      "parserContentId2": "InfobloxInsight-Parser"
    },
    "parserObject3": {
      "_parserName3": "[concat(parameters('workspace'),'/','InfobloxInsightAssets')]",
      "_parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightAssets')]",
      "parserTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('InfobloxInsightAssets-Parser')))]",
      "parserVersion3": "1.0.0",
      "parserContentId3": "InfobloxInsightAssets-Parser"
    },
    "parserObject4": {
      "_parserName4": "[concat(parameters('workspace'),'/','InfobloxInsightComments')]",
      "_parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightComments')]",
      "parserTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('InfobloxInsightComments-Parser')))]",
      "parserVersion4": "1.0.0",
      "parserContentId4": "InfobloxInsightComments-Parser"
    },
    "parserObject5": {
      "_parserName5": "[concat(parameters('workspace'),'/','InfobloxInsightEvents')]",
      "_parserId5": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightEvents')]",
      "parserTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('InfobloxInsightEvents-Parser')))]",
      "parserVersion5": "1.0.0",
      "parserContentId5": "InfobloxInsightEvents-Parser"
    },
    "parserObject6": {
      "_parserName6": "[concat(parameters('workspace'),'/','InfobloxInsightIndicators')]",
      "_parserId6": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightIndicators')]",
      "parserTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('InfobloxInsightIndicators-Parser')))]",
      "parserVersion6": "1.0.0",
      "parserContentId6": "InfobloxInsightIndicators-Parser"
    },
    "Infoblox-SOC-Get-Insight-Details": "Infoblox-SOC-Get-Insight-Details",
    "_Infoblox-SOC-Get-Insight-Details": "[variables('Infoblox-SOC-Get-Insight-Details')]",
    "TemplateEmptyArray": "[json('[]')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "Infoblox-SOC-Get-Insight-Details",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "blanks": "[replace('b', 'b', '')]",
    "Infoblox-SOC-Get-Open-Insights-API": "Infoblox-SOC-Get-Open-Insights-API",
    "_Infoblox-SOC-Get-Open-Insights-API": "[variables('Infoblox-SOC-Get-Open-Insights-API')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "Infoblox-SOC-Get-Open-Insights-API",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "Infoblox-SOC-Import-Indicators-TI": "Infoblox-SOC-Import-Indicators-TI",
    "_Infoblox-SOC-Import-Indicators-TI": "[variables('Infoblox-SOC-Import-Indicators-TI')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "Infoblox-SOC-Import-Indicators-TI",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3'))))]",
    "_playbookcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId3'),'-', variables('playbookVersion3'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "InfobloxSOCInsightsWorkbook Workbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Get a closer look at your Infoblox SOC Insights. This workbook is intended to help visualize your BloxOne SOC Insights data as part of the Infoblox SOC Insights Solution. Drilldown your data and visualize events, trends, and anomalous changes over time."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"This data connector depends on parsers based on Kusto Functions to work as expected called **InfobloxInsight, InfobloxInsightEvents, InfobloxInsightAssets, InfobloxInsightIndicators, **and **InfobloxInsightComments** found [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers) which are deployed with the Microsoft Sentinel Solution.\",\"style\":\"info\"},\"name\":\"text - 15\",\"styleSettings\":{\"padding\":\"0 0 20px 0\"}},{\"type\":1,\"content\":{\"json\":\"# Infoblox SOC Insights Workbook\\r\\n\\r\\n##### Get a closer look at your Infoblox SOC Insights. \\r\\n\\r\\nThis workbook is intended to help visualize your [BloxOne SOC Insights](https://csp.infoblox.com/#/insights-console/insights/open/threats) data as part of the **Infoblox SOC Insight Solution**. Drilldown your data and visualize events, trends, and anomalous changes over time.\\r\\n\\r\\n---\\r\\n\"},\"name\":\"text - 3\",\"styleSettings\":{\"margin\":\"0 0 20px 0\"}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| distinct InfobloxInsightID, FirstSeen, ThreatClass, ThreatProperty, ThreatType, FeedSource, Priority\\r\\n| extend isConfigIssue = iff((ThreatClass has_cs (\\\"CONFIGURATIONISSUE\\\")), \\\"Configuration\\\", \\\"Threats\\\")\\r\\n| summarize count() by isConfigIssue\",\"size\":1,\"title\":\"Insight Types\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"MEDIUM\",\"color\":\"orange\"},{\"seriesName\":\"CRITICAL\",\"color\":\"pink\"},{\"seriesName\":\"INFO\",\"color\":\"blue\"},{\"seriesName\":\"LOW\",\"color\":\"yellow\"},{\"seriesName\":\"HIGH\",\"color\":\"red\"}]}},\"customWidth\":\"50\",\"name\":\"Insight Types\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| summarize dcount(InfobloxInsightID) by Priority\",\"size\":1,\"title\":\"Priority\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"MEDIUM\",\"color\":\"orange\"},{\"seriesName\":\"CRITICAL\",\"color\":\"purple\"},{\"seriesName\":\"INFO\",\"color\":\"blue\"},{\"seriesName\":\"LOW\",\"color\":\"yellow\"},{\"seriesName\":\"HIGH\",\"color\":\"red\"},{\"seriesName\":\"N/A\",\"color\":\"gray\"}]}},\"customWidth\":\"50\",\"name\":\"Priority\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| distinct Status, InfobloxInsightID, FirstSeen, ThreatClass, ThreatProperty, ThreatType, FeedSource, Priority\\r\\n| summarize count() by ThreatProperty\",\"size\":1,\"title\":\"Threat Families\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"createOtherGroup\":15,\"seriesLabelSettings\":[{\"seriesName\":\"MEDIUM\",\"color\":\"orange\"},{\"seriesName\":\"CRITICAL\",\"color\":\"pink\"},{\"seriesName\":\"INFO\",\"color\":\"blue\"},{\"seriesName\":\"LOW\",\"color\":\"yellow\"},{\"seriesName\":\"HIGH\",\"color\":\"red\"}]}},\"customWidth\":\"50\",\"name\":\"Threat Families\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| distinct Status, InfobloxInsightID, FirstSeen, ThreatClass, ThreatProperty, ThreatType, FeedSource, Priority\\r\\n| summarize count() by ThreatType\",\"size\":1,\"title\":\"Threat Classes\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"createOtherGroup\":15}},\"customWidth\":\"50\",\"name\":\"Threat Classes\"}]},\"name\":\"Overall\"},{\"type\":1,\"content\":{\"json\":\"## Using this Workbook\\r\\nTo make use of this workbook, you must ingest Infoblox SOC Insight data into Sentinel in one or both ways:\\r\\n- Deploy the **Infoblox SOC Insights Data Connector** and forward CEF syslog via the Microsoft forwarding agent.\\r\\n- Deploy the **Infoblox-SOC-Get-Open-Insights-API** playbook. Find instructions [here](https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Infoblox%20SOC%20Insights/Playbooks).\\r\\n\\r\\nYou can use one or both at the same time, but beware of duplicate data!\\r\\n\\r\\nConfigure the **Analytic Queries** that come with this Microsoft Sentinel Solution. They will add the Insights as Incidents, so you can easily track and run playbooks on them.\\r\\n\\r\\nThen, once you have some Insights, run the **Infoblox-SOC-Get-Insight-Details** playbook to get all the gritty details. If you wish, you can then run **Infoblox-SOC-Import-Indicators-TI** to ingest each Indicator of an Insight into Sentinel as **Threat Intelligence**.\\r\\n\\r\\n## Run playbooks directly from this workbook!\\r\\n\\r\\n#### Set the **Resource Group**, [**Tenant ID**](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant) and **Playbook** to run when clicking on the **Run Playbook** in the SOC Insight Incidents table below.\\r\\n\\r\\n**Infoblox-SOC-Get-Insight-Details** pulls all the details about each individual Insight. \\r\\n\\r\\n**Infoblox-SOC-Import-Indicators-TI** pushes each Indicator of the Insight into Sentinel as **Threat Intelligence**. You must run the **Infoblox-SOC-Get-Insight-Details** *before* running **Infoblox-SOC-Import-Indicators-TI**.\\r\\n\\r\\nYou will need to run the playbooks for each Insight/Incident. You can do that manually within this workbook with the **Run Playbook** button in the table below, from the **Incidents** blade, or configure them to run automatically with **Analytics**. \\r\\n\\r\\nAfter running **Infoblox-SOC-Get-Insight-Details** on an Insight, **click on it in the table below** to see the details.\\r\\n\\r\\n**You can rerun playbooks on Insights** that already contain data to get the most recent. \",\"style\":\"upsell\"},\"name\":\"text - 15\",\"styleSettings\":{\"padding\":\"0 0 5px 0\"}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"e8613f2c-08c6-49e6-a2c6-e12d185c6bd3\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ResourceTypes\",\"label\":\"Resource Types\",\"type\":7,\"description\":\"This parameter must be set to Logic app.\",\"isRequired\":true,\"isGlobal\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"isHiddenWhenLocked\":true,\"typeSettings\":{\"includeAll\":true,\"showDefault\":false},\"value\":[\"microsoft.logic/workflows\"]},{\"id\":\"4a15b858-69b6-4198-abfd-6af5f187d813\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SentinelResourceGroup\",\"label\":\"Incidents Resource Group\",\"type\":2,\"isRequired\":true,\"isGlobal\":true,\"query\":\"Resources\\r\\n| where type in~ ({ResourceTypes})\\r\\n| summarize Count = count() by subscriptionId, resourceGroup\\r\\n| order by Count desc\\r\\n| extend Rank = row_number()\\r\\n| project resourceGroup\",\"typeSettings\":{\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"7783c2b4-a6e6-4117-92ec-a9a751f01465\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspace\",\"type\":5,\"isRequired\":true,\"isGlobal\":true,\"query\":\"where type =~ \\\"microsoft.operationalinsights/workspaces\\\"\\r\\n| where resourceGroup =~ \\\"{SentinelResourceGroup}\\\"\",\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"value\":\"\"}],\"style\":\"above\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 1 - Copy\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"/subscriptions/be1e61b7-8dbe-4986-a9c2-d85f65524d6e\"],\"parameters\":[{\"id\":\"d1eaca1e-a58e-4eb6-be31-04b7e0ec86be\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DefaultSubscription\",\"type\":1,\"query\":\"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| distinct subscriptionId\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"value\":\"\"},{\"id\":\"0a92b010-8b48-4601-872f-83e13561b088\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"query\":\"summarize by subscriptionId\\r\\n| project value = strcat(\\\"/subscriptions/\\\", subscriptionId), label = subscriptionId, selected = iff(subscriptionId =~ '{DefaultSubscription}', true, false)\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":86400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"63c75027-cc56-4958-9296-e0c986ab11e0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"PlaybookResourceGroup\",\"label\":\"Playbook Resource Group\",\"type\":2,\"isRequired\":true,\"query\":\"Resources\\r\\n| where type in~ ({ResourceTypes})\\r\\n| summarize Count = count() by subscriptionId, resourceGroup\\r\\n| order by Count desc\\r\\n| extend Rank = row_number()\\r\\n| project resourceGroup\",\"typeSettings\":{\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"3c6d99b2-1eb1-4650-a3f0-d48dc03f87cb\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TenantID\",\"type\":1,\"isRequired\":true,\"label\":\"Tenant ID\",\"value\":\"\"},{\"id\":\"e1ea6f58-cd1b-4807-a7de-7da91b787bd4\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"PlaybookName\",\"label\":\"Playbook\",\"type\":5,\"description\":\"Set the playbook to run when clicking on the \\\"Run Playbook\\\" in the SOC Insight Incidents table below.\",\"isRequired\":true,\"query\":\"Resources\\r\\n| where type in~({ResourceTypes})\\r\\n| extend resourceGroupId = strcat('/subscriptions/', subscriptionId, '/resourceGroups/', resourceGroup)\\r\\n| where resourceGroup =~ \\\"{PlaybookResourceGroup}\\\"// or '*' in~({PlaybookResourceGroup})\\r\\n| order by name asc\\r\\n| extend Rank = row_number()\\r\\n| project label = tostring(name)\",\"crossComponentResources\":[\"/subscriptions/be1e61b7-8dbe-4986-a9c2-d85f65524d6e\"],\"typeSettings\":{\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"queryType\":1,\"value\":\"Infoblox-SOC-Get-Open-Insights-API\"}],\"style\":\"above\",\"queryType\":1,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0 - Copy\"},{\"type\":1,\"content\":{\"json\":\"#### Click on a **SOC Insight Incident** below to view more information.\",\"style\":\"upsell\"},\"name\":\"text - 15\",\"styleSettings\":{\"padding\":\"15px 0 0 0\"}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"103f5c4e-6007-46c3-88ed-74fdb7843acc\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000}]},\"value\":{\"durationMs\":259200000}},{\"id\":\"7c4c6733-a2d8-40b1-abf5-7f2d777e814c\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SelectPriority\",\"label\":\"Priority\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"jsonData\":\"[\\r\\n    { \\\"value\\\":\\\"N/A\\\"},\\r\\n    { \\\"value\\\":\\\"INFO\\\"},\\r\\n    { \\\"value\\\":\\\"LOW\\\"},\\r\\n    { \\\"value\\\":\\\"MEDIUM\\\"},\\r\\n    { \\\"value\\\":\\\"HIGH\\\"},\\r\\n     { \\\"value\\\":\\\"CRITICAL\\\"}\\r\\n]\",\"defaultValue\":\"value::all\",\"value\":[\"value::all\"]},{\"id\":\"3e3ee805-c983-480e-9c10-49a47be4ddc6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Status\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SecurityIncident\\r\\n| where CreatedTime {TimeRange:value}\\r\\n| distinct Status\\r\\n| sort by Status asc\",\"crossComponentResources\":[\"{Workspace}\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"1c79577f-a4f2-4b2a-aaa7-fbcc5e27831d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Owner\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SecurityIncident\\r\\n| where CreatedTime {TimeRange:value}\\r\\n| where Status in ({Status})\\r\\n| project Owner=tostring(Owner.userPrincipalName)\\r\\n| sort by Owner asc\\r\\n| extend Owner = iff(isnotempty( Owner), Owner, \\\"Unassigned\\\")\\r\\n| distinct Owner\",\"crossComponentResources\":[\"{Workspace}\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 19 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let x =\\r\\nSecurityIncident\\r\\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\\r\\n| extend IncidentID = IncidentName\\r\\n| extend IncidentNumber = toint(IncidentNumber)\\r\\n| where tostring(Owner.userPrincipalName) in ({Owner}) or (isempty(tostring(Owner.userPrincipalName)) and \\\"Unassigned\\\" in ({Owner}))\\r\\n| extend RunPlaybook = \\\"Run Playbook\\\"\\r\\n| where Title has_cs \\\"Infoblox SOC Insight\\\"\\r\\n| extend Labels = tostring(Labels)\\r\\n| extend InfobloxInsightID = extract(\\\"InfobloxInsightID: (.*?)\\\\\\\"\\\", 1, Labels)\\r\\n| join \\r\\n    (InfobloxInsight\\r\\n    | summarize arg_max(TimeGenerated, *) by InfobloxInsightID\\r\\n    ) on InfobloxInsightID\\r\\n//sometimes duplicate TimeGenerated so grab LastSeen next\\r\\n| summarize arg_max(LastSeen, *) by IncidentNumber\\r\\n| project IncidentNumber, Severity, Priority, ThreatType, ThreatClass, ThreatFamily, LastSeen, FirstSeen, FeedSource, EventsCount, NotBlockedCount, BlockedCount, PersistentDate, SpreadingDate, InfobloxInsightID\\r\\n; \\r\\nlet incidents =\\r\\nSecurityIncident\\r\\n| summarize arg_max(TimeGenerated,*) by tostring(IncidentNumber)\\r\\n| extend IncidentID = IncidentName\\r\\n| extend IncidentNumber = toint(IncidentNumber)\\r\\n| where tostring(Owner.userPrincipalName) in ({Owner}) or (isempty(tostring(Owner.userPrincipalName)) and \\\"Unassigned\\\" in ({Owner}))\\r\\n| extend RunPlaybook = \\\"Run Playbook\\\"\\r\\n| where Title has_cs \\\"Infoblox SOC Insight\\\"\\r\\n| extend Alerts = extract(\\\"\\\\\\\\[(.*?)\\\\\\\\]\\\", 1, tostring(AlertIds))\\r\\n| mv-expand AlertIds to typeof(string)\\r\\n//----------------\\r\\n;\\r\\nlet alerts =\\r\\n    SecurityAlert\\r\\n    | extend AlertEntities = parse_json(Entities)\\r\\n    //| extend InfobloxInsightID = tostring(AlertEntities.ObjectGuid)\\r\\n;\\r\\nincidents | join alerts on $left.AlertIds == $right.SystemAlertId\\r\\n//----------------------\\r\\n| summarize AlertCount=dcount(AlertIds) by IncidentNumber, IncidentID, Status, Title,  Alerts, IncidentUrl, Owner=tostring(Owner.userPrincipalName) , RunPlaybook\\r\\n// -------------\\r\\n| join kind=inner (incidents | join alerts on $left.AlertIds == $right.SystemAlertId) on IncidentNumber\\r\\n| join kind=fullouter x on IncidentNumber\\r\\n| summarize arg_max(TimeGenerated,*) by (IncidentNumber)\\r\\n| where Priority in ({SelectPriority}) or '{SelectPriority:label}' ==  \\\"All\\\"\\r\\n| where Status in ({Status}) or '{Status:label}' ==  \\\"All\\\"\\r\\n| project IncidentNumber, Severity, Priority, Title, Status, Owner, IncidentUrl, RunPlaybook, ThreatType, ThreatClass, ThreatFamily, LastSeen, FirstSeen, FeedSource, EventsCount, NotBlockedCount, BlockedCount, PersistentDate, SpreadingDate, InfobloxInsightID, IncidentID\\r\\n//| project-away IncidentID\\r\\n| order by toint(IncidentNumber) desc\\r\\n\",\"size\":0,\"title\":\"SOC Insight Incidents\",\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"InfobloxInsightID\",\"parameterName\":\"InfobloxInsightID\",\"parameterType\":1},{\"fieldName\":\"IncidentID\",\"parameterName\":\"IncidentID\",\"parameterType\":1},{\"fieldName\":\"Title\",\"parameterName\":\"Title\",\"parameterType\":1}],\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Severity\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"Sev0\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"Sev1\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"Sev2\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Informational\",\"representation\":\"Sev4\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":\"\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Priority\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"INFO\",\"representation\":\"blue\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"LOW\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"MEDIUM\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"HIGH\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"CRITICAL\",\"representation\":\"purple\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"N/A\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Status\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"New\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Active\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":\"\",\"representation\":\"blue\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Owner\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"IncidentUrl\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Open Incident\"}},{\"columnMatch\":\"InsightDataReady\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Data Not Found\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Ready\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"gray\",\"text\":\"{0}{1}\"}]},\"tooltipFormat\":{\"tooltip\":\"To see data for this insight, run the  Infoblox-SOC-API-Get-Insight-Details playbook.\"}},{\"columnMatch\":\"RunPlaybook\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"ArmAction\",\"linkIsContextBlade\":true,\"armActionContext\":{\"path\":\"{Workspace}/providers/Microsoft.SecurityInsights/incidents/{IncidentID}/runPlaybook?api-version=2019-01-01-preview\",\"body\":\"{\\r\\n \\\"LogicAppsResourceId\\\":\\\"{Subscription}/resourceGroups/{PlaybookResourceGroup}/providers/Microsoft.Logic/workflows/{PlaybookName}\\\",\\r\\n \\\"TenantId\\\":\\\"{TenantID}\\\"\\r\\n}\",\"httpMethod\":\"POST\",\"description\":\"# Actions can potentially modify resources.\\n## Please use caution and include a confirmation message in this description when authoring this command.\"}},\"tooltipFormat\":{\"tooltip\":\"Run {PlaybookName} on this insight.\"}},{\"columnMatch\":\"EventsCount\",\"formatter\":3,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"}},{\"columnMatch\":\"NotBlockedCount\",\"formatter\":3,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"}},{\"columnMatch\":\"BlockedCount\",\"formatter\":3,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"}},{\"columnMatch\":\"isPopulated\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Ready\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Data Not Found\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]},\"tooltipFormat\":{\"tooltip\":\"To see data about this Insight, run the Infoblox-SOC-API-Get-Insight-Details Playbook.\"}},{\"columnMatch\":\"Alerts\",\"formatter\":5},{\"columnMatch\":\"AlertCount\",\"formatter\":0,\"formatOptions\":{\"aggregation\":\"Sum\"}},{\"columnMatch\":\"Entities\",\"formatter\":1},{\"columnMatch\":\"alertCount\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"redBright\"}},{\"columnMatch\":\"count_AlertCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"greenRed\"}}],\"rowLimit\":500,\"filter\":true,\"sortBy\":[{\"itemKey\":\"IncidentNumber\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"IncidentNumber\",\"sortOrder\":2}]},\"name\":\"IncidentDetailsView\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"46b4abc5-316b-4c75-89b7-5cf134d6dbb0\",\"cellValue\":\"view\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Summary\",\"subTarget\":\"Summary\",\"style\":\"link\"},{\"id\":\"81661594-3591-4fe6-a67d-b69ae55abf67\",\"cellValue\":\"view\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Assets\",\"subTarget\":\"Assets\",\"preText\":\"IPs\",\"style\":\"link\"},{\"id\":\"46ca603b-ead0-46bd-987d-1d157b2a763a\",\"cellValue\":\"view\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Indicators\",\"subTarget\":\"Indicators\",\"style\":\"link\"},{\"id\":\"f2ce2fdb-104a-447f-b42b-6d11931a09ff\",\"cellValue\":\"view\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Events\",\"subTarget\":\"Events\",\"style\":\"link\"},{\"id\":\"03782b90-e744-4654-95c3-a1056cfe78f9\",\"cellValue\":\"view\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Comments\",\"subTarget\":\"Comments\",\"style\":\"link\"}]},\"conditionalVisibility\":{\"parameterName\":\"InfobloxInsightID\",\"comparison\":\"isNotEqualTo\"},\"name\":\"links - 16\",\"styleSettings\":{\"padding\":\"20px 0 20px 0\"}},{\"type\":1,\"content\":{\"json\":\"#### Click on a **SOC Insight Incident** above to view more information.\",\"style\":\"upsell\"},\"conditionalVisibility\":{\"parameterName\":\"InfobloxInsightID\",\"comparison\":\"isEqualTo\"},\"name\":\"text - 14\",\"styleSettings\":{\"padding\":\"10px 0 10px 0\"}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## {Title}\"},\"name\":\"text - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| summarize arg_max(TimeGenerated, *)\\r\\n| where isnotempty(LastSeen)\\r\\n| extend format_datetime(todatetime(FirstSeen), 'M/dd/yyyy, h:mm:ss tt')\\r\\n| extend FirstSeen = strcat(tostring(FirstSeen), \\\" UTC\\\")\\r\\n| project FirstSeen\",\"size\":3,\"title\":\"First Seen\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"FirstSeen\",\"formatter\":12,\"formatOptions\":{\"min\":-1,\"palette\":\"red\"}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"25\",\"name\":\"First Seen\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| summarize arg_max(TimeGenerated, *)\\r\\n| where isnotempty(LastSeen)\\r\\n| extend format_datetime(todatetime(LastSeen), 'M/dd/yyyy, h:mm:ss tt')\\r\\n| extend LastSeen = strcat(tostring(LastSeen), \\\" UTC\\\")\\r\\n| project LastSeen\",\"size\":3,\"title\":\"Last Seen \",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"LastSeen\",\"formatter\":12,\"formatOptions\":{\"min\":-1,\"palette\":\"red\"}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"25\",\"name\":\"Last Seen\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| summarize arg_max(TimeGenerated, *)\\r\\n| where isnotempty(SpreadingDate)\\r\\n| extend format_datetime(todatetime(SpreadingDate), 'M/dd/yyyy, h:mm:ss tt')\\r\\n| extend SpreadingDate = strcat(tostring(SpreadingDate), \\\" UTC\\\")\\r\\n| project SpreadingDate\",\"size\":3,\"title\":\"Spreading Date\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"SpreadingDate\",\"formatter\":12,\"formatOptions\":{\"min\":-1,\"palette\":\"red\"}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"25\",\"name\":\"Spreading Date\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| summarize arg_max(TimeGenerated, *)\\r\\n| where isnotempty(PersistentDate)\\r\\n| extend format_datetime(todatetime(PersistentDate), 'M/dd/yyyy, h:mm:ss tt')\\r\\n| extend PersistentDate = strcat(tostring(PersistentDate), \\\" UTC\\\")\\r\\n| project PersistentDate\",\"size\":3,\"title\":\"Persistent Date\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"PersistentDate\",\"formatter\":12,\"formatOptions\":{\"min\":-1,\"palette\":\"red\"}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"25\",\"name\":\"Persistent Date\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| summarize arg_max(TimeGenerated, *)\\r\\n| where isnotempty(BlockedCount)\\r\\n| project BlockedCount\",\"size\":3,\"title\":\"Blocked Hits\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"BlockedCount\",\"formatter\":12,\"formatOptions\":{\"min\":-1,\"palette\":\"green\"}},\"showBorder\":false}},\"customWidth\":\"33\",\"name\":\"Blocked Hits\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| summarize arg_max(TimeGenerated, *)\\r\\n| where isnotempty(NotBlockedCount)\\r\\n| project NotBlockedCount\",\"size\":3,\"title\":\"Not Blocked Hits\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"NotBlockedCount\",\"formatter\":12,\"formatOptions\":{\"min\":-1,\"palette\":\"red\"}},\"showBorder\":false}},\"customWidth\":\"33\",\"name\":\"Not Blocked Hits\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsight\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| summarize arg_max(TimeGenerated, *)\\r\\n| where isnotempty(EventsCount)\\r\\n| project EventsCount\\r\\n\",\"size\":3,\"title\":\"Total Hits\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":1},\"leftContent\":{\"columnMatch\":\"EventsCount\",\"formatter\":12,\"formatOptions\":{\"min\":-1,\"palette\":\"gray\"}},\"showBorder\":false}},\"customWidth\":\"33\",\"name\":\"Total Hits\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Lookback = 30d;\\r\\n// Finding Tops \\r\\nlet Top = materialize(InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(Lookback)\\r\\n| where isnotempty(SourceIP)\\r\\n| summarize count() by SourceIP\\r\\n| top 1000 by count_ \\r\\n| project SourceIP);\\r\\n// Filtering datasource to Tops and Plot Time chart\\r\\nInfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(Lookback)\\r\\n| where SourceIP in ((Top))\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| make-series Total= count() default = 0 on Detected from ago(Lookback) to now() step 1d by SourceIP\\r\\n\",\"size\":0,\"title\":\"Top Impacted IPs\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"createOtherGroup\":15,\"showLegend\":true}},\"customWidth\":\"33\",\"name\":\"Top Impacted IPs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Lookback = 30d;\\r\\n// Finding Tops \\r\\nlet Top = materialize(InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(Lookback)\\r\\n| where isnotempty(ThreatIndicator)\\r\\n| summarize count() by ThreatIndicator\\r\\n| top 1000 by count_ \\r\\n| project ThreatIndicator);\\r\\n// Filtering datasource to Tops and Plot Time chart\\r\\nInfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(Lookback)\\r\\n| where ThreatIndicator in ((Top))\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, ThreatIndicator, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| make-series Total= count() default = 0 on Detected from ago(Lookback) to now() step 1d by ThreatIndicator\\r\\n\",\"size\":0,\"title\":\"Top Indicators\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"createOtherGroup\":15,\"showLegend\":true}},\"customWidth\":\"33\",\"name\":\"Top Indicators\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Lookback = 30d;\\r\\n// Finding Tops \\r\\nlet Top = materialize(InfobloxInsightEvents\\r\\n| where Detected >= ago(Lookback)\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where isnotempty(DestinationDnsDomain)\\r\\n| summarize count() );\\r\\n// Filtering datasource to Tops and Plot Time chart\\r\\nInfobloxInsightEvents\\r\\n| where Detected >= ago(Lookback)\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| make-series Total= count() default = 0 on Detected from ago(Lookback) to now() step 1d\",\"size\":0,\"title\":\"Events\",\"color\":\"amethyst\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"customWidth\":\"33\",\"name\":\"Events\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"view\",\"comparison\":\"isEqualTo\",\"value\":\"Summary\"},{\"parameterName\":\"InfobloxInsightID\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Summary\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Assets\\r\\n---\\r\\nSee your protected assets/devices affected by this insight. **Install the Infoblox Endpoint client for more accurate data.**\"},\"name\":\"text - 6\"},{\"type\":1,\"content\":{\"json\":\"#### Click on an **Asset** below to view more information.\",\"style\":\"upsell\"},\"name\":\"text - 7\",\"styleSettings\":{\"margin\":\"15px 0 15px 0\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| join\\r\\n(\\r\\n    InfobloxInsightAssets\\r\\n    | summarize arg_max(TimeGenerated, *) by SourceIP, SourceUserName, SourceMACAddress, InfobloxB1SrcOSVersion\\r\\n) on SourceIP\\r\\n| order by LastSeen, EventCount desc\\r\\n| project SourceIP, SourceUserName, SourceMACAddress, InfobloxB1SrcOSVersion, DeviceName, InfobloxB1Network,InfobloxB1DHCPFingerprint, Location, EventCount, IndicatorDistinctCount, LastSeen, FirstSeen\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":1,\"showAnalytics\":true,\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"exportFieldName\":\"SourceIP\",\"exportParameterName\":\"SourceIP\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"EventCount\",\"formatter\":3,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"}},{\"columnMatch\":\"IndicatorDistinctCount\",\"formatter\":3,\"formatOptions\":{\"palette\":\"purpleBlue\"}}],\"rowLimit\":500,\"filter\":true,\"labelSettings\":[{\"columnId\":\"EventCount\",\"label\":\"Associated Events\"},{\"columnId\":\"IndicatorDistinctCount\",\"label\":\"Associated Indicators\"}]}},\"name\":\"Assets\",\"styleSettings\":{\"margin\":\"0 0 20px 0\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where SourceIP == '{SourceIP}'\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| order by Detected desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Events for {SourceIP}\",\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ThreatLevel\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"N/A\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Info\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"InfobloxB1PolicyAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Allow\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"Block\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":500,\"filter\":true,\"sortBy\":[{\"itemKey\":\"$gen_thresholds_InfobloxB1PolicyAction_11\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"$gen_thresholds_InfobloxB1PolicyAction_11\",\"sortOrder\":2}]},\"customWidth\":\"75\",\"conditionalVisibility\":{\"parameterName\":\"SourceIP\",\"comparison\":\"isNotEqualTo\"},\"name\":\"Events for {SourceIP}\",\"styleSettings\":{\"margin\":\"0 60px 0 0\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where SourceIP == '{SourceIP}'\\r\\n| where isnotempty(ThreatIndicator)\\r\\n| where Detected >= ago(30d)\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| summarize count() by ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, ThreatIndicator, InfobloxDNSQType, SourceUserName, DeviceName, SourceIP, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion\\r\\n| summarize Count = count() by ThreatIndicator\\r\\n| order by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Indicators for {SourceIP}\",\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":3,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"}}],\"rowLimit\":500,\"filter\":true}},\"customWidth\":\"25\",\"conditionalVisibility\":{\"parameterName\":\"SourceIP\",\"comparison\":\"isNotEqualTo\"},\"name\":\" Indicators for {SourceIP}\",\"styleSettings\":{\"margin\":\"0 15px 0 0\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Lookback = 30d;\\r\\nInfobloxInsightEvents\\r\\n| where SourceIP == '{SourceIP}'\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected > ago(30d)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, SourceUserName, DeviceName, SourceIP, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion\\r\\n| make-series Trend = count() default = 0 on Detected from ago(Lookback) to now() step 1d by ThreatLevel\",\"size\":0,\"showAnalytics\":true,\"title\":\"Threat Level Trend for {SourceIP}\",\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ThreatLevel\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"N/A\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Info\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"InfobloxB1PolicyAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Allow\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"Block\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":500,\"filter\":true},\"chartSettings\":{\"showLegend\":true,\"seriesLabelSettings\":[{\"seriesName\":\"N/A\",\"color\":\"turquoise\"},{\"seriesName\":\"Info\",\"color\":\"lightBlue\"},{\"seriesName\":\"Low\",\"color\":\"yellow\"},{\"seriesName\":\"Medium\",\"color\":\"orange\"},{\"seriesName\":\"High\",\"color\":\"red\"}]}},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SourceIP\",\"comparison\":\"isNotEqualTo\"},\"name\":\"Threat Level Trend for {SourceIP}\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Lookback = 30d;\\r\\nInfobloxInsightEvents\\r\\n| where SourceIP == '{SourceIP}'\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected > ago(30d)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, SourceUserName, DeviceName, SourceIP, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion\\r\\n| make-series Trend = count() default = 0 on Detected from ago(Lookback) to now() step 1d by InfobloxB1PolicyAction\",\"size\":0,\"showAnalytics\":true,\"title\":\"Action Trend for {SourceIP}\",\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ThreatLevel\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"N/A\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Info\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"InfobloxB1PolicyAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Allow\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"Block\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":500,\"filter\":true},\"chartSettings\":{\"showLegend\":true,\"seriesLabelSettings\":[{\"seriesName\":\"N/A\",\"color\":\"turquoise\"},{\"seriesName\":\"Block\",\"color\":\"green\"},{\"seriesName\":\"Not Blocked\",\"color\":\"red\"},{\"seriesName\":\"Log\",\"color\":\"blue\"}]}},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SourceIP\",\"comparison\":\"isNotEqualTo\"},\"name\":\"Action Trend for {SourceIP}\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Lookback = 30d;\\r\\nInfobloxInsightEvents\\r\\n| where SourceIP == '{SourceIP}'\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected > ago(30d)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, SourceUserName, DeviceName, SourceIP, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion\\r\\n| make-series Events = count() default = 0 on Detected from ago(Lookback) to now() step 1d\",\"size\":0,\"title\":\"All Events for {SourceIP}\",\"color\":\"amethyst\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"customWidth\":\"33\",\"conditionalVisibility\":{\"parameterName\":\"SourceIP\",\"comparison\":\"isNotEqualTo\"},\"name\":\"All Events for {SourceIP}\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"view\",\"comparison\":\"isEqualTo\",\"value\":\"Assets\"},{\"parameterName\":\"InfobloxInsightID\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Assets\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Indicators\\r\\n---\\r\\nAn **Indicator** is a domain or IP address that is seen in the resolution chain of a query from a device.\\r\\n\\r\\n\"},\"name\":\"text - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightIndicators\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where isnotempty(InfobloxB1PolicyAction)\\r\\n| summarize count_distinct(ThreatIndicator) by InfobloxB1PolicyAction\",\"size\":4,\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Not Blocked\",\"color\":\"red\"},{\"seriesName\":\"Blocked\",\"color\":\"green\"}]}},\"customWidth\":\"50\",\"name\":\"query - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightIndicators\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where isnotempty(ThreatIndicator)\\r\\n| summarize count_distinct(ThreatIndicator) by ThreatLevel\",\"size\":4,\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"High\",\"color\":\"red\"},{\"seriesName\":\"Medium\",\"color\":\"orange\"},{\"seriesName\":\"Low\",\"color\":\"yellow\"},{\"seriesName\":\"Info\",\"color\":\"blue\"},{\"seriesName\":\"N/A\",\"color\":\"gray\"}]}},\"customWidth\":\"50\",\"name\":\"query - 8 - Copy\"},{\"type\":1,\"content\":{\"json\":\"#### Click on an **Indicator** below to view more information.\",\"style\":\"upsell\"},\"name\":\"text - 7\",\"styleSettings\":{\"padding\":\"15px 0 15px 0\"}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"5b2e1804-a9a6-4b86-8a6e-27fd0ab029b5\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ThreatLevelParam\",\"label\":\"Threat Level\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"InfobloxInsightIndicators\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| distinct ThreatLevel\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"e36bc3c2-b85e-478c-968b-7faf79c21c49\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"InfobloxB1PolicyActionParam\",\"label\":\"Action\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"InfobloxInsightIndicators\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| distinct InfobloxB1PolicyAction\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 6 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightIndicators\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where isnotempty(ThreatIndicator)\\r\\n| where InfobloxB1PolicyAction in ({InfobloxB1PolicyActionParam}) or '{InfobloxB1PolicyActionParam:label}' ==  \\\"All\\\"\\r\\n| where ThreatLevel in ({ThreatLevelParam}) or '{ThreatLevelParam:label}' ==  \\\"All\\\"\\r\\n| summarize arg_max(TimeGenerated, *), count_distinct(SourceMACAddress) by ThreatIndicator, InfobloxB1PolicyAction\\r\\n| extend URL = strcat(\\\"https://csp.infoblox.com/#/security_research/search/auto/\\\", ThreatIndicator, \\\"/summary\\\")\\r\\n| order by ThreatLevel, LastSeen\\r\\n| project ThreatIndicator, InfobloxB1PolicyAction, ThreatLevel, ThreatConfidence, InfobloxB1FeedName, ThreatActor, LastSeen, FirstSeen, EventCount, URL\\r\\n\",\"size\":0,\"showAnalytics\":true,\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"exportFieldName\":\"ThreatIndicator\",\"exportParameterName\":\"ThreatIndicator\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"InfobloxB1PolicyAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Blocked\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Not Blocked\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"ThreatLevel\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"N/A\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Info\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"SourceIPDistinctCount\",\"formatter\":3,\"formatOptions\":{\"palette\":\"bluePurple\"}},{\"columnMatch\":\"EventCount\",\"formatter\":3,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"}},{\"columnMatch\":\"URL\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Open in Dossier\"}}],\"rowLimit\":500,\"filter\":true,\"sortBy\":[{\"itemKey\":\"InfobloxB1FeedName\",\"sortOrder\":2}],\"labelSettings\":[{\"columnId\":\"EventCount\",\"label\":\"Associated Events\"},{\"columnId\":\"URL\",\"label\":\"Open in Dossier\"}]},\"sortBy\":[{\"itemKey\":\"InfobloxB1FeedName\",\"sortOrder\":2}]},\"name\":\"Indicators\",\"styleSettings\":{\"margin\":\"0 15px 0 0\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where ThreatIndicator has_cs '{ThreatIndicator}'\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| join\\r\\n(\\r\\n    InfobloxInsightAssets\\r\\n    | summarize arg_max(TimeGenerated, *) by SourceIP, SourceUserName, SourceMACAddress, InfobloxB1SrcOSVersion\\r\\n) on SourceIP\\r\\n| order by LastSeen, EventCount desc\\r\\n| summarize by SourceIP, SourceUserName, SourceMACAddress, InfobloxB1SrcOSVersion, DeviceName, InfobloxB1Network, InfobloxB1DHCPFingerprint, Location, EventCount, IndicatorDistinctCount, LastSeen, FirstSeen\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Assets for {ThreatIndicator}\",\"noDataMessage\":\"Select an Indicator in the above chart to see details.\",\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"EventCount\",\"formatter\":3,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"}},{\"columnMatch\":\"IndicatorDistinctCount\",\"formatter\":3,\"formatOptions\":{\"palette\":\"purpleBlue\"}}],\"rowLimit\":500,\"filter\":true,\"labelSettings\":[{\"columnId\":\"EventCount\",\"label\":\"Associated Events\"},{\"columnId\":\"IndicatorDistinctCount\",\"label\":\"Associated Indicators\"}]}},\"customWidth\":\"70\",\"conditionalVisibility\":{\"parameterName\":\"ThreatIndicator\",\"comparison\":\"isNotEqualTo\"},\"name\":\"Assets for {ThreatIndicator}\",\"styleSettings\":{\"margin\":\"0 20px 0 0\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Lookback = 30d;\\r\\n// Finding Tops \\r\\nlet Top = materialize(InfobloxInsightEvents\\r\\n| where Detected >= ago(Lookback)\\r\\n| where ThreatIndicator has_cs '{ThreatIndicator}'\\r\\n| where isnotempty(DestinationDnsDomain)\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| summarize count() by SourceIP\\r\\n| top 500 by count_ \\r\\n);\\r\\n// Filtering datasource to Tops and Plot Time chart\\r\\nInfobloxInsightEvents\\r\\n| where Detected >= ago(Lookback)\\r\\n| where ThreatIndicator has_cs '{ThreatIndicator}'\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where SourceIP in ((Top))\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, SourceUserName, DeviceName, SourceIP, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion\\r\\n| make-series Total= count() default = 0 on Detected from ago(Lookback) to now() step 1d by SourceIP\",\"size\":0,\"showAnalytics\":true,\"title\":\"Source IPs for {ThreatIndicator}\",\"color\":\"amethyst\",\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ThreatLevel\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"N/A\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Info\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"InfobloxB1PolicyAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Allow\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"Block\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":500,\"filter\":true},\"chartSettings\":{\"createOtherGroup\":15}},\"customWidth\":\"30\",\"conditionalVisibility\":{\"parameterName\":\"ThreatIndicator\",\"comparison\":\"isNotEqualTo\"},\"name\":\"Source IPs for {ThreatIndicator}\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where Detected >= ago(30d)\\r\\n| where ThreatIndicator has_cs '{ThreatIndicator}'\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| order by Detected desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Events for {ThreatIndicator}\",\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ThreatLevel\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"N/A\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Info\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"InfobloxB1PolicyAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Allow\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"Block\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":500,\"filter\":true,\"sortBy\":[{\"itemKey\":\"SourceIP\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"SourceIP\",\"sortOrder\":2}]},\"customWidth\":\"70\",\"conditionalVisibility\":{\"parameterName\":\"ThreatIndicator\",\"comparison\":\"isNotEqualTo\"},\"name\":\"Events for {ThreatIndicator}\",\"styleSettings\":{\"margin\":\"0 20px 0 0\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Lookback = 30d;\\r\\nInfobloxInsightEvents\\r\\n| where Detected >= ago(Lookback)\\r\\n| where ThreatIndicator has_cs '{ThreatIndicator}'\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, SourceUserName, DeviceName, SourceIP, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion\\r\\n| make-series Trend = count() default = 0 on Detected from ago(Lookback) to now() step 1d by InfobloxB1PolicyAction\",\"size\":0,\"showAnalytics\":true,\"title\":\"Action Trend for {ThreatIndicator}\",\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ThreatLevel\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"N/A\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Info\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"InfobloxB1PolicyAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Allow\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"Block\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":500,\"filter\":true},\"chartSettings\":{\"showLegend\":true,\"seriesLabelSettings\":[{\"seriesName\":\"N/A\",\"color\":\"gray\"},{\"seriesName\":\"Block\",\"color\":\"green\"},{\"seriesName\":\"Allow - No Log\",\"color\":\"red\"},{\"seriesName\":\"Log\",\"color\":\"lightBlue\"}]}},\"customWidth\":\"30\",\"conditionalVisibility\":{\"parameterName\":\"ThreatIndicator\",\"comparison\":\"isNotEqualTo\"},\"name\":\"Action Trend for {ThreatIndicator}\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"view\",\"comparison\":\"isEqualTo\",\"value\":\"Indicators\"},{\"parameterName\":\"InfobloxInsightID\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Indicators\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Events\\r\\n---\\r\\nDNS security events associated with this insight.\\r\\n\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| where isnotempty(ThreatLevel)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by ThreatLevel\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"Threat Level\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"High\",\"color\":\"red\"},{\"seriesName\":\"Medium\",\"color\":\"orange\"},{\"seriesName\":\"Low\",\"color\":\"yellow\"},{\"seriesName\":\"Info\",\"color\":\"lightBlue\"},{\"seriesName\":\"N/A\",\"color\":\"gray\"}]}},\"customWidth\":\"33\",\"name\":\"Threat Level\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| where isnotempty(ThreatClass)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by ThreatClass\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"Threat Classes\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"Threat Classes\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| where isnotempty(ThreatProperty)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by ThreatProperty\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"Threat Families\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"Threat Families\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by SourceUserName\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"Users\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"Users\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where isnotempty(DeviceName)\\r\\n| where Detected >= ago(30d)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by DeviceName\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"Device Names\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"Device Names\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| where isnotempty(SourceIP)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by SourceIP\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"Source IPs\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"Source IPs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| where isnotempty(InfobloxB1Network)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by InfobloxB1Network\",\"size\":4,\"title\":\"Sources\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"Sources\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| where isnotempty(InfobloxB1PolicyName)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by InfobloxB1PolicyName\",\"size\":4,\"title\":\"Policies\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"Policies\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| where isnotempty(InfobloxB1PolicyAction)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by InfobloxB1PolicyAction\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"Actions\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Block\",\"color\":\"green\"},{\"seriesName\":\"Log\",\"color\":\"lightBlue\"},{\"seriesName\":\"Allow - No Log\",\"color\":\"red\"}]}},\"customWidth\":\"33\",\"name\":\"Actions\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| where isnotempty(DNSResponse)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by DNSResponse\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"DNS Responses\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"DNS Responses\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| where isnotempty(DeviceRegion)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by DeviceRegion\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"Device Regions\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"Device Regions\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| where isnotempty(DeviceCountry)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| summarize Count = count() by DeviceCountry\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":4,\"title\":\"Device Countries\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"High\",\"color\":\"red\"},{\"seriesName\":\"Medium\",\"color\":\"orange\"},{\"seriesName\":\"Low\",\"color\":\"yellow\"},{\"seriesName\":\"Info\",\"color\":\"lightBlue\"},{\"seriesName\":\"N/A\",\"color\":\"gray\"}]}},\"customWidth\":\"33\",\"name\":\"Device Countries\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightEvents\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| where Detected >= ago(30d)\\r\\n| distinct ThreatLevel, ThreatConfidence, Detected, DestinationDnsDomain, InfobloxDNSQType, ThreatClass, SourceUserName, DeviceName, SourceIP, ThreatProperty, InfobloxB1PolicyName, InfobloxB1PolicyAction, InfobloxB1Network, DNSResponse, DNSView, InfobloxB1FeedName, SourceMACAddress, InfobloxB1SrcOSVersion, InfobloxB1DHCPFingerprint, ResponseRegion, ResponseCountry, DeviceRegion, DeviceCountry\\r\\n| order by Detected desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Events\",\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ThreatLevel\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"N/A\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Info\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"InfobloxB1PolicyAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Allow\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"Block\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"lightBlue\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":500,\"filter\":true}},\"name\":\"Events\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"view\",\"comparison\":\"isEqualTo\",\"value\":\"Events\"},{\"parameterName\":\"InfobloxInsightID\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Events\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"InfobloxInsightComments\\r\\n| where InfobloxInsightID == \\\"{InfobloxInsightID}\\\"\\r\\n| distinct  CommentChanger, Comment, DateChanged, Status\\r\\n| order by DateChanged desc\",\"size\":0,\"title\":\"Comments\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"Comments\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"view\",\"comparison\":\"isEqualTo\",\"value\":\"Comments\"},{\"parameterName\":\"InfobloxInsightID\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Comments\"}],\"styleSettings\":{\"spacingStyle\":\"none\"},\"fromTemplateId\":\"sentinel-InfobloxSOCInsightsWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=InfobloxSOCInsightsWorkbook; logoFileName=infoblox_logo.svg; description=Get a closer look at your Infoblox SOC Insights. This workbook is intended to help visualize your BloxOne SOC Insights data as part of the Infoblox SOC Insights Solution. Drilldown your data and visualize events, trends, and anomalous changes over time.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Infoblox SOC Insights Workbook; templateRelativePath=InfobloxSOCInsightsWorkbook.json; subtitle=; provider=Infoblox}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox SOC Insights",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "InfobloxInsight",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "InfobloxInsightAssets",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "InfobloxInsightComments",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "InfobloxInsightIndicators",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "InfobloxInsightEvents",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "InfobloxSOCInsightsDataConnector_AMA",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "InfobloxSOCInsightsDataConnector_API",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "InfobloxSOCInsightsDataConnector_Legacy",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "CefAma",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox-SOCInsightDetected-APISource_AnalyticalRules Analytics Rule with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Infoblox SOC Insight detected in logs sourced via REST API. Customize scheduling, responses and more. This rule depends on a parser based on a Kusto Function to work as expected called [**InfobloxInsight**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxInsight.yaml).",
                "displayName": "Infoblox - SOC Insight Detected - API Source",
                "enabled": false,
                "query": "InfobloxInsight\n| summarize arg_max(TimeGenerated, *) by InfobloxInsightID\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "InfobloxInsight"
                    ],
                    "connectorId": "InfobloxSOCInsightsDataConnector_API"
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "techniques": [
                  "T1498",
                  "T1565"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "ObjectGuid",
                        "columnName": "InfobloxInsightID"
                      }
                    ],
                    "entityType": "SecurityGroup"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "ThreatClass"
                      },
                      {
                        "identifier": "Category",
                        "columnName": "ThreatProperty"
                      }
                    ],
                    "entityType": "Malware"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "FeedSource": "FeedSource",
                  "PersistentDate": "PersistentDate",
                  "Status": "Status",
                  "SpreadingDate": "SpreadingDate",
                  "InfobloxInsightID": "InfobloxInsightID",
                  "UnblockedHits": "NotBlockedCount",
                  "BlockedHits": "BlockedCount",
                  "LastSeen": "LastSeen",
                  "TotalHits": "EventsCount",
                  "Severity": "Priority",
                  "FirstSeen": "FirstSeen"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Infoblox - SOC Insight - {{ThreatClass}} {{ThreatProperty}}",
                  "alertSeverityColumnName": "IncidentSeverity",
                  "alertDescriptionFormat": "Observed via API. {{ThreatFamily}}. Last Observation: {{LastSeen}}"
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Infoblox SOC Insights Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox SOC Insights",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Infoblox - SOC Insight Detected - API Source",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox-SOCInsightDetected-CDCSource_AnalyticalRules Analytics Rule with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Infoblox SOC Insight detected in logs sourced via Infoblox CDC. Customize scheduling, responses and more. This rule depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC_SOCInsights**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxCDC_SOCInsights.yaml).",
                "displayName": "Infoblox - SOC Insight Detected - CDC Source",
                "enabled": false,
                "query": "InfobloxCDC_SOCInsights\n| summarize arg_max(TimeGenerated, *) by InfobloxInsightID\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "CommonSecurityLog (InfobloxCDC_SOCInsights)"
                    ],
                    "connectorId": "InfobloxSOCInsightsDataConnector_Legacy"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog (InfobloxCDC_SOCInsights)"
                    ],
                    "connectorId": "InfobloxSOCInsightsDataConnector_AMA"
                  },
                  {
                    "dataTypes": [
                      "CommonSecurityLog"
                    ],
                    "connectorId": "CefAma"
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "techniques": [
                  "T1498",
                  "T1565"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "ObjectGuid",
                        "columnName": "InfobloxInsightID"
                      }
                    ],
                    "entityType": "SecurityGroup"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "ThreatClass"
                      },
                      {
                        "identifier": "Category",
                        "columnName": "ThreatProperty"
                      }
                    ],
                    "entityType": "Malware"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "FeedSource": "FeedSource",
                  "Status": "Status",
                  "InfobloxInsightID": "InfobloxInsightID",
                  "UnblockedHits": "NotBlockedCount",
                  "BlockedHits": "BlockedCount",
                  "TotalHits": "EventsCount"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Infoblox - SOC Insight - {{ThreatClass}} {{ThreatProperty}}",
                  "alertSeverityColumnName": "IncidentSeverity",
                  "alertDescriptionFormat": "Observed via CDC. {{ThreatFamily}}. {{Message}}"
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
              "properties": {
                "description": "Infoblox SOC Insights Analytics Rule 2",
                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox SOC Insights",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
        "contentKind": "AnalyticsRule",
        "displayName": "Infoblox - SOC Insight Detected - CDC Source",
        "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox SOC Insights data connector with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "[Deprecated] Infoblox SOC Insight Data Connector via AMA",
                  "publisher": "Infoblox",
                  "descriptionMarkdown": "The Infoblox SOC Insight Data Connector allows you to easily connect your Infoblox BloxOne SOC Insight data with Microsoft Sentinel. By connecting your logs to Microsoft Sentinel, you can take advantage of search & correlation, alerting, and threat intelligence enrichment for each log. \n\nThis data connector ingests Infoblox SOC Insight CDC logs into your Log Analytics Workspace using the new Azure Monitor Agent. Learn more about ingesting using the new Azure Monitor Agent [here](https://learn.microsoft.com/azure/sentinel/connect-cef-ama). **Microsoft recommends using this Data Connector.**",
                  "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC_SOCInsights**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxCDC_SOCInsights.yaml) which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "InfobloxCDC_SOCInsights",
                      "baseQuery": "CommonSecurityLog\n| where DeviceVendor =~ \"Infoblox\" and DeviceProduct =~ \"Data Connector\" and DeviceEventClassID =~ \"BloxOne-InsightsNotification-Log\"\n  |extend sent_by_ama = column_ifexists('CollectorHostName','')\n |where isnotempty(sent_by_ama)"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Return all logs involving DNS Tunneling",
                      "query": "InfobloxCDC_SOCInsights\n| where ThreatType == \"DNS Tunneling\""
                    },
                    {
                      "description": "Return all logs involving a configuration issue",
                      "query": "InfobloxCDC_SOCInsights\n| where ThreatClass == \"TI-CONFIGURATIONISSUE\""
                    },
                    {
                      "description": "Return all high threat level logs",
                      "query": "InfobloxCDC_SOCInsights\n| where ThreatLevel == \"High\""
                    },
                    {
                      "description": "Return raised status logs",
                      "query": "InfobloxCDC_SOCInsights\n| where Status == \"RAISED\""
                    },
                    {
                      "description": "Return logs involving a high amount of unblocked DNS hits",
                      "query": "InfobloxCDC_SOCInsights\n| where NotBlockedCount >= 100"
                    },
                    {
                      "description": "Return each Insight by ThreatFamily",
                      "query": "InfobloxCDC_SOCInsights\n| summarize dcount(InfobloxInsightID) by ThreatFamily"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "CommonSecurityLog (InfobloxCDC_SOCInsights)",
                      "lastDataReceivedQuery": "CommonSecurityLog\n| where DeviceVendor =~ \"Infoblox\" and DeviceProduct =~ \"Data Connector\" and DeviceEventClassID =~ \"BloxOne-InsightsNotification-Log\"\n |extend sent_by_ama = column_ifexists('CollectorHostName','')\n |where isnotempty(sent_by_ama)\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "CommonSecurityLog\n| where DeviceVendor =~ \"Infoblox\" and DeviceProduct =~ \"Data Connector\" and DeviceEventClassID =~ \"BloxOne-InsightsNotification-Log\"\n  |extend sent_by_ama = column_ifexists('CollectorHostName','')\n |where isnotempty(sent_by_ama)\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "description": "To collect data from non-Azure VMs, they must have Azure Arc installed and enabled. [Learn more](https://docs.microsoft.com/azure/azure-monitor/agents/azure-monitor-agent-install?tabs=ARMAgentPowerShell,PowerShellWindows,PowerShellWindowsArc,CLIWindows,CLIWindowsArc)"
                      },
                      {
                        "description": "Common Event Format (CEF) via AMA and Syslog via AMA data connectors must be installed. [Learn more](https://learn.microsoft.com/azure/sentinel/connect-cef-ama#open-the-connector-page-and-create-the-dcr)"
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "In order to use the playbooks as part of this solution, find your **Workspace ID** and **Workspace Primary Key** below for your convenience.",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Workspace Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "Workspace Keys"
                    },
                    {
                      "description": ">This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC_SOCInsights**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxCDC_SOCInsights.yaml) which is deployed with the Microsoft Sentinel Solution.",
                      "title": "Parsers"
                    },
                    {
                      "description": ">This data connector assumes you have access to Infoblox BloxOne Threat Defense SOC Insights. You can find more information about SOC Insights [**here**](https://docs.infoblox.com/space/BloxOneThreatDefense/501514252/SOC+Insights).",
                      "title": "SOC Insights"
                    },
                    {
                      "description": ">This data connector assumes an Infoblox Data Connector host has already been created and configured in the Infoblox Cloud Services Portal (CSP). As the [**Infoblox Data Connector**](https://docs.infoblox.com/display/BloxOneThreatDefense/Deploying+the+Data+Connector+Solution) is a feature of BloxOne Threat Defense, access to an appropriate BloxOne Threat Defense subscription is required. See this [**quick-start guide**](https://www.infoblox.com/wp-content/uploads/infoblox-deployment-guide-data-connector.pdf) for more information and licensing requirements.",
                      "instructions": [
                        {
                          "parameters": {
                            "title": "Follow the steps below to configure this data connector",
                            "instructionSteps": [
                              {
                                "title": "A. Configure the Common Event Format (CEF) via AMA data connector",
                                "description": "_Note: CEF logs are collected only from Linux Agents_\n\n1. Navigate to your **Microsoft Sentinel workspace > Data connectors** blade.\n\n2. Search for the **Common Event Format (CEF) via AMA** data connector and open it.\n\n3. Ensure there is no existing DCR configured to collect required facility of logs as it may cause log duplication. Create a new **DCR (Data Collection Rule)**.\n\n\t_Note: It is recommended to install the AMA agent v1.27 at minimum. [Learn more](https://learn.microsoft.com/azure/azure-monitor/agents/azure-monitor-agent-manage?tabs=azure-portal ) and ensure there is no duplicate DCR as it can cause log duplication._\n\n4. Run the command provided in the **Common Event Format (CEF) via AMA** data connector page to configure the CEF collector on the machine."
                              },
                              {
                                "title": "B. Within the Infoblox Cloud Services Portal, configure Infoblox BloxOne to send CEF Syslog data to the Infoblox Cloud Data Connector to forward to the Syslog agent",
                                "description": "Follow the steps below to configure the Infoblox CDC to send BloxOne data to Microsoft Sentinel via the Linux Syslog agent.\n1. Navigate to **Manage > Data Connector**.\n2. Click the **Destination Configuration** tab at the top.\n3. Click **Create > Syslog**. \n - **Name**: Give the new Destination a meaningful **name**, such as **Microsoft-Sentinel-Destination**.\n - **Description**: Optionally give it a meaningful **description**.\n - **State**: Set the state to **Enabled**.\n - **Format**: Set the format to **CEF**.\n - **FQDN/IP**: Enter the IP address of the Linux device on which the Linux agent is installed.\n - **Port**: Leave the port number at **514**.\n - **Protocol**: Select desired protocol and CA certificate if applicable.\n - Click **Save & Close**.\n4. Click the **Traffic Flow Configuration** tab at the top.\n5. Click **Create**.\n - **Name**: Give the new Traffic Flow a meaningful **name**, such as **Microsoft-Sentinel-Flow**.\n - **Description**: Optionally give it a meaningful **description**. \n - **State**: Set the state to **Enabled**. \n - Expand the **Service Instance** section. \n    - **Service Instance**: Select your desired Service Instance for which the Data Connector service is enabled. \n - Expand the **Source Configuration** section.  \n    - **Source**: Select **BloxOne Cloud Source**. \n    - Select the **Internal Notifications** Log Type.\n - Expand the **Destination Configuration** section.  \n    - Select the **Destination** you just created. \n - Click **Save & Close**. \n6. Allow the configuration some time to activate."
                              },
                              {
                                "title": "C. Validate connection",
                                "description": "Follow the instructions to validate your connectivity:\n\nOpen Log Analytics to check if the logs are received using the CommonSecurityLog schema.\n\nIt may take about 20 minutes until the connection streams data to your workspace.\n\nIf the logs are not received, run the following connectivity validation script:\n\n 1. Make sure that you have Python on your machine using the following command: python -version\n\n2. You must have elevated permissions (sudo) on your machine",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "label": "Run the following command to validate your connectivity:",
                                      "value": "sudo wget -O Sentinel_AMA_troubleshoot.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/Syslog/Sentinel_AMA_troubleshoot.py&&sudo python Sentinel_AMA_troubleshoot.py --cef"
                                    },
                                    "type": "CopyableLabel"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ],
                      "title": "Infoblox Cloud Data Connector"
                    },
                    {
                      "description": "Make sure to configure the machine's security according to your organization's security policy\n\n\n[Learn more >](https://aka.ms/SecureCEF)",
                      "title": "2. Secure your machine "
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox SOC Insights",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "[Deprecated] Infoblox SOC Insight Data Connector via AMA",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox SOC Insights",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Infoblox",
          "tier": "Partner",
          "link": "https://support.infoblox.com/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "[Deprecated] Infoblox SOC Insight Data Connector via AMA",
          "publisher": "Infoblox",
          "descriptionMarkdown": "The Infoblox SOC Insight Data Connector allows you to easily connect your Infoblox BloxOne SOC Insight data with Microsoft Sentinel. By connecting your logs to Microsoft Sentinel, you can take advantage of search & correlation, alerting, and threat intelligence enrichment for each log. \n\nThis data connector ingests Infoblox SOC Insight CDC logs into your Log Analytics Workspace using the new Azure Monitor Agent. Learn more about ingesting using the new Azure Monitor Agent [here](https://learn.microsoft.com/azure/sentinel/connect-cef-ama). **Microsoft recommends using this Data Connector.**",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "InfobloxCDC_SOCInsights",
              "baseQuery": "CommonSecurityLog\n| where DeviceVendor =~ \"Infoblox\" and DeviceProduct =~ \"Data Connector\" and DeviceEventClassID =~ \"BloxOne-InsightsNotification-Log\"\n  |extend sent_by_ama = column_ifexists('CollectorHostName','')\n |where isnotempty(sent_by_ama)"
            }
          ],
          "dataTypes": [
            {
              "name": "CommonSecurityLog (InfobloxCDC_SOCInsights)",
              "lastDataReceivedQuery": "CommonSecurityLog\n| where DeviceVendor =~ \"Infoblox\" and DeviceProduct =~ \"Data Connector\" and DeviceEventClassID =~ \"BloxOne-InsightsNotification-Log\"\n |extend sent_by_ama = column_ifexists('CollectorHostName','')\n |where isnotempty(sent_by_ama)\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "CommonSecurityLog\n| where DeviceVendor =~ \"Infoblox\" and DeviceProduct =~ \"Data Connector\" and DeviceEventClassID =~ \"BloxOne-InsightsNotification-Log\"\n  |extend sent_by_ama = column_ifexists('CollectorHostName','')\n |where isnotempty(sent_by_ama)\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Return all logs involving DNS Tunneling",
              "query": "InfobloxCDC_SOCInsights\n| where ThreatType == \"DNS Tunneling\""
            },
            {
              "description": "Return all logs involving a configuration issue",
              "query": "InfobloxCDC_SOCInsights\n| where ThreatClass == \"TI-CONFIGURATIONISSUE\""
            },
            {
              "description": "Return all high threat level logs",
              "query": "InfobloxCDC_SOCInsights\n| where ThreatLevel == \"High\""
            },
            {
              "description": "Return raised status logs",
              "query": "InfobloxCDC_SOCInsights\n| where Status == \"RAISED\""
            },
            {
              "description": "Return logs involving a high amount of unblocked DNS hits",
              "query": "InfobloxCDC_SOCInsights\n| where NotBlockedCount >= 100"
            },
            {
              "description": "Return each Insight by ThreatFamily",
              "query": "InfobloxCDC_SOCInsights\n| summarize dcount(InfobloxInsightID) by ThreatFamily"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "description": "To collect data from non-Azure VMs, they must have Azure Arc installed and enabled. [Learn more](https://docs.microsoft.com/azure/azure-monitor/agents/azure-monitor-agent-install?tabs=ARMAgentPowerShell,PowerShellWindows,PowerShellWindowsArc,CLIWindows,CLIWindowsArc)"
              },
              {
                "description": "Common Event Format (CEF) via AMA and Syslog via AMA data connectors must be installed. [Learn more](https://learn.microsoft.com/azure/sentinel/connect-cef-ama#open-the-connector-page-and-create-the-dcr)"
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "In order to use the playbooks as part of this solution, find your **Workspace ID** and **Workspace Primary Key** below for your convenience.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Workspace Key"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "Workspace Keys"
            },
            {
              "description": ">This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC_SOCInsights**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxCDC_SOCInsights.yaml) which is deployed with the Microsoft Sentinel Solution.",
              "title": "Parsers"
            },
            {
              "description": ">This data connector assumes you have access to Infoblox BloxOne Threat Defense SOC Insights. You can find more information about SOC Insights [**here**](https://docs.infoblox.com/space/BloxOneThreatDefense/501514252/SOC+Insights).",
              "title": "SOC Insights"
            },
            {
              "description": ">This data connector assumes an Infoblox Data Connector host has already been created and configured in the Infoblox Cloud Services Portal (CSP). As the [**Infoblox Data Connector**](https://docs.infoblox.com/display/BloxOneThreatDefense/Deploying+the+Data+Connector+Solution) is a feature of BloxOne Threat Defense, access to an appropriate BloxOne Threat Defense subscription is required. See this [**quick-start guide**](https://www.infoblox.com/wp-content/uploads/infoblox-deployment-guide-data-connector.pdf) for more information and licensing requirements.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Follow the steps below to configure this data connector",
                    "instructionSteps": [
                      {
                        "title": "A. Configure the Common Event Format (CEF) via AMA data connector",
                        "description": "_Note: CEF logs are collected only from Linux Agents_\n\n1. Navigate to your **Microsoft Sentinel workspace > Data connectors** blade.\n\n2. Search for the **Common Event Format (CEF) via AMA** data connector and open it.\n\n3. Ensure there is no existing DCR configured to collect required facility of logs as it may cause log duplication. Create a new **DCR (Data Collection Rule)**.\n\n\t_Note: It is recommended to install the AMA agent v1.27 at minimum. [Learn more](https://learn.microsoft.com/azure/azure-monitor/agents/azure-monitor-agent-manage?tabs=azure-portal ) and ensure there is no duplicate DCR as it can cause log duplication._\n\n4. Run the command provided in the **Common Event Format (CEF) via AMA** data connector page to configure the CEF collector on the machine."
                      },
                      {
                        "title": "B. Within the Infoblox Cloud Services Portal, configure Infoblox BloxOne to send CEF Syslog data to the Infoblox Cloud Data Connector to forward to the Syslog agent",
                        "description": "Follow the steps below to configure the Infoblox CDC to send BloxOne data to Microsoft Sentinel via the Linux Syslog agent.\n1. Navigate to **Manage > Data Connector**.\n2. Click the **Destination Configuration** tab at the top.\n3. Click **Create > Syslog**. \n - **Name**: Give the new Destination a meaningful **name**, such as **Microsoft-Sentinel-Destination**.\n - **Description**: Optionally give it a meaningful **description**.\n - **State**: Set the state to **Enabled**.\n - **Format**: Set the format to **CEF**.\n - **FQDN/IP**: Enter the IP address of the Linux device on which the Linux agent is installed.\n - **Port**: Leave the port number at **514**.\n - **Protocol**: Select desired protocol and CA certificate if applicable.\n - Click **Save & Close**.\n4. Click the **Traffic Flow Configuration** tab at the top.\n5. Click **Create**.\n - **Name**: Give the new Traffic Flow a meaningful **name**, such as **Microsoft-Sentinel-Flow**.\n - **Description**: Optionally give it a meaningful **description**. \n - **State**: Set the state to **Enabled**. \n - Expand the **Service Instance** section. \n    - **Service Instance**: Select your desired Service Instance for which the Data Connector service is enabled. \n - Expand the **Source Configuration** section.  \n    - **Source**: Select **BloxOne Cloud Source**. \n    - Select the **Internal Notifications** Log Type.\n - Expand the **Destination Configuration** section.  \n    - Select the **Destination** you just created. \n - Click **Save & Close**. \n6. Allow the configuration some time to activate."
                      },
                      {
                        "title": "C. Validate connection",
                        "description": "Follow the instructions to validate your connectivity:\n\nOpen Log Analytics to check if the logs are received using the CommonSecurityLog schema.\n\nIt may take about 20 minutes until the connection streams data to your workspace.\n\nIf the logs are not received, run the following connectivity validation script:\n\n 1. Make sure that you have Python on your machine using the following command: python -version\n\n2. You must have elevated permissions (sudo) on your machine",
                        "instructions": [
                          {
                            "parameters": {
                              "label": "Run the following command to validate your connectivity:",
                              "value": "sudo wget -O Sentinel_AMA_troubleshoot.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/Syslog/Sentinel_AMA_troubleshoot.py&&sudo python Sentinel_AMA_troubleshoot.py --cef"
                            },
                            "type": "CopyableLabel"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "Infoblox Cloud Data Connector"
            },
            {
              "description": "Make sure to configure the machine's security according to your organization's security policy\n\n\n[Learn more >](https://aka.ms/SecureCEF)",
              "title": "2. Secure your machine "
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC_SOCInsights**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxCDC_SOCInsights.yaml) which is deployed with the Microsoft Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox SOC Insights data connector with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId2'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId2')]",
                  "title": "Infoblox SOC Insight Data Connector via REST API",
                  "publisher": "Infoblox",
                  "descriptionMarkdown": "The Infoblox SOC Insight Data Connector allows you to easily connect your Infoblox BloxOne SOC Insight data with Microsoft Sentinel. By connecting your logs to Microsoft Sentinel, you can take advantage of search & correlation, alerting, and threat intelligence enrichment for each log.",
                  "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxInsight**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxInsight.yaml) which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "InfobloxInsight",
                      "baseQuery": "InfobloxInsight_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Return all logs involving DNS Tunneling",
                      "query": "InfobloxInsight_CL\n| where threatType_s == \"DNS Tunneling\""
                    },
                    {
                      "description": "Return all logs involving a configuration issue",
                      "query": "InfobloxInsight_CL\n| where tClass_s == \"TI-CONFIGURATIONISSUE\""
                    },
                    {
                      "description": "Return count of critical priority insights",
                      "query": "InfobloxInsight_CL\n| where priorityText_s == \"CRITICAL\"\n | summarize dcount(insightId_g) by priorityText_s"
                    },
                    {
                      "description": "Return each spreading insight by ThreatClass",
                      "query": "InfobloxInsight_CL\n| where isnotempty(spreadingDate_t)\n | summarize dcount(insightId_g) by tClass_s"
                    },
                    {
                      "description": "Return each Insight by ThreatFamily",
                      "query": "InfobloxInsight_CL\n| | summarize dcount(insightId_g) by tFamily_s"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "InfobloxInsight_CL",
                      "lastDataReceivedQuery": "InfobloxInsight_CL\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "InfobloxInsight_CL\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(3d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "In order to use the playbooks as part of this solution, find your **Workspace ID** and **Workspace Primary Key** below for your convenience.",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Workspace Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "Workspace Keys"
                    },
                    {
                      "description": ">This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxInsight**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxInsight.yaml) which is deployed with the Microsoft Sentinel Solution.",
                      "title": "Parsers"
                    },
                    {
                      "description": ">This data connector assumes you have access to Infoblox BloxOne Threat Defense SOC Insights. You can find more information about SOC Insights [**here**](https://docs.infoblox.com/space/BloxOneThreatDefense/501514252/SOC+Insights).",
                      "title": "SOC Insights"
                    },
                    {
                      "instructions": [
                        {
                          "parameters": {
                            "instructionSteps": [
                              {
                                "title": "1.  Generate an Infoblox API Key and copy it somewhere safe",
                                "description": "In the [Infoblox Cloud Services Portal](https://csp.infoblox.com/atlas/app/welcome), generate an API Key and copy it somewhere safe to use in the next step. You can find instructions on how to create API keys [**here**](https://docs.infoblox.com/space/BloxOneThreatDefense/230394187/How+Do+I+Create+an+API+Key%3F)."
                              },
                              {
                                "title": "2.  Configure the Infoblox-SOC-Get-Open-Insights-API playbook",
                                "description": "Create and configure the **Infoblox-SOC-Get-Open-Insights-API** playbook which is deployed with this solution. Enter your Infoblox API key in the appropriate parameter when prompted."
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ],
                      "title": "Follow the steps below to configure this data connector"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
                "contentId": "[variables('_dataConnectorContentId2')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox SOC Insights",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId2')]",
        "contentKind": "DataConnector",
        "displayName": "Infoblox SOC Insight Data Connector via REST API",
        "contentProductId": "[variables('_dataConnectorcontentProductId2')]",
        "id": "[variables('_dataConnectorcontentProductId2')]",
        "version": "[variables('dataConnectorVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId2')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
        "contentId": "[variables('_dataConnectorContentId2')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion2')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox SOC Insights",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Infoblox",
          "tier": "Partner",
          "link": "https://support.infoblox.com/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId2'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Infoblox SOC Insight Data Connector via REST API",
          "publisher": "Infoblox",
          "descriptionMarkdown": "The Infoblox SOC Insight Data Connector allows you to easily connect your Infoblox BloxOne SOC Insight data with Microsoft Sentinel. By connecting your logs to Microsoft Sentinel, you can take advantage of search & correlation, alerting, and threat intelligence enrichment for each log.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "InfobloxInsight",
              "baseQuery": "InfobloxInsight_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "InfobloxInsight_CL",
              "lastDataReceivedQuery": "InfobloxInsight_CL\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "InfobloxInsight_CL\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(3d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Return all logs involving DNS Tunneling",
              "query": "InfobloxInsight_CL\n| where threatType_s == \"DNS Tunneling\""
            },
            {
              "description": "Return all logs involving a configuration issue",
              "query": "InfobloxInsight_CL\n| where tClass_s == \"TI-CONFIGURATIONISSUE\""
            },
            {
              "description": "Return count of critical priority insights",
              "query": "InfobloxInsight_CL\n| where priorityText_s == \"CRITICAL\"\n | summarize dcount(insightId_g) by priorityText_s"
            },
            {
              "description": "Return each spreading insight by ThreatClass",
              "query": "InfobloxInsight_CL\n| where isnotempty(spreadingDate_t)\n | summarize dcount(insightId_g) by tClass_s"
            },
            {
              "description": "Return each Insight by ThreatFamily",
              "query": "InfobloxInsight_CL\n| | summarize dcount(insightId_g) by tFamily_s"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "In order to use the playbooks as part of this solution, find your **Workspace ID** and **Workspace Primary Key** below for your convenience.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Workspace Key"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "Workspace Keys"
            },
            {
              "description": ">This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxInsight**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxInsight.yaml) which is deployed with the Microsoft Sentinel Solution.",
              "title": "Parsers"
            },
            {
              "description": ">This data connector assumes you have access to Infoblox BloxOne Threat Defense SOC Insights. You can find more information about SOC Insights [**here**](https://docs.infoblox.com/space/BloxOneThreatDefense/501514252/SOC+Insights).",
              "title": "SOC Insights"
            },
            {
              "instructions": [
                {
                  "parameters": {
                    "instructionSteps": [
                      {
                        "title": "1.  Generate an Infoblox API Key and copy it somewhere safe",
                        "description": "In the [Infoblox Cloud Services Portal](https://csp.infoblox.com/atlas/app/welcome), generate an API Key and copy it somewhere safe to use in the next step. You can find instructions on how to create API keys [**here**](https://docs.infoblox.com/space/BloxOneThreatDefense/230394187/How+Do+I+Create+an+API+Key%3F)."
                      },
                      {
                        "title": "2.  Configure the Infoblox-SOC-Get-Open-Insights-API playbook",
                        "description": "Create and configure the **Infoblox-SOC-Get-Open-Insights-API** playbook which is deployed with this solution. Enter your Infoblox API key in the appropriate parameter when prompted."
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "Follow the steps below to configure this data connector"
            }
          ],
          "id": "[variables('_uiConfigId2')]",
          "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxInsight**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxInsight.yaml) which is deployed with the Microsoft Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox SOC Insights data connector with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId3'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId3')]",
                  "title": "[Deprecated] Infoblox SOC Insight Data Connector via Legacy Agent",
                  "publisher": "Infoblox",
                  "descriptionMarkdown": "The Infoblox SOC Insight Data Connector allows you to easily connect your Infoblox BloxOne SOC Insight data with Microsoft Sentinel. By connecting your logs to Microsoft Sentinel, you can take advantage of search & correlation, alerting, and threat intelligence enrichment for each log. \n\nThis data connector ingests Infoblox SOC Insight CDC logs into your Log Analytics Workspace using the legacy Log Analytics agent.\n\n**Microsoft recommends installation of Infoblox SOC Insight Data Connector via AMA Connector.** The legacy connector uses the Log Analytics agent which is about to be deprecated by **Aug 31, 2024,** and should only be installed where AMA is not supported.\n\n Using MMA and AMA on the same machine can cause log duplication and extra ingestion cost. [More details](https://learn.microsoft.com/en-us/azure/sentinel/ama-migrate).",
                  "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC_SOCInsights**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxCDC_SOCInsights.yaml) which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "InfobloxCDC_SOCInsights",
                      "baseQuery": "CommonSecurityLog\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID == \"BloxOne-InsightsNotification-Log\""
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Return all logs involving DNS Tunneling",
                      "query": "InfobloxCDC_SOCInsights\n| where ThreatType == \"DNS Tunneling\""
                    },
                    {
                      "description": "Return all logs involving a configuration issue",
                      "query": "InfobloxCDC_SOCInsights\n| where ThreatClass == \"TI-CONFIGURATIONISSUE\""
                    },
                    {
                      "description": "Return all high threat level logs",
                      "query": "InfobloxCDC_SOCInsights\n| where ThreatLevel == \"High\""
                    },
                    {
                      "description": "Return raised status logs",
                      "query": "InfobloxCDC_SOCInsights\n| where Status == \"RAISED\""
                    },
                    {
                      "description": "Return logs involving a high amount of unblocked DNS hits",
                      "query": "InfobloxCDC_SOCInsights\n| where NotBlockedCount >= 100"
                    },
                    {
                      "description": "Return each Insight by ThreatFamily",
                      "query": "InfobloxCDC_SOCInsights\n| summarize dcount(InfobloxInsightID) by ThreatFamily"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "CommonSecurityLog (InfobloxCDC_SOCInsights)",
                      "lastDataReceivedQuery": "InfobloxCDC_SOCInsights\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "InfobloxCDC_SOCInsights\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(3d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "In order to use the playbooks as part of this solution, find your **Workspace ID** and **Workspace Primary Key** below for your convenience.",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Workspace Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "Workspace Keys"
                    },
                    {
                      "description": ">This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC_SOCInsights**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxCDC_SOCInsights.yaml) which is deployed with the Microsoft Sentinel Solution.",
                      "title": "Parsers"
                    },
                    {
                      "description": ">This data connector assumes you have access to Infoblox BloxOne Threat Defense SOC Insights. You can find more information about SOC Insights [**here**](https://docs.infoblox.com/space/BloxOneThreatDefense/501514252/SOC+Insights). ",
                      "title": "SOC Insights"
                    },
                    {
                      "description": ">This data connector assumes an Infoblox Data Connector host has already been created and configured in the Infoblox Cloud Services Portal (CSP). As the [**Infoblox Data Connector**](https://docs.infoblox.com/display/BloxOneThreatDefense/Deploying+the+Data+Connector+Solution) is a feature of BloxOne Threat Defense, access to an appropriate BloxOne Threat Defense subscription is required. See this [**quick-start guide**](https://www.infoblox.com/wp-content/uploads/infoblox-deployment-guide-data-connector.pdf) for more information and licensing requirements.",
                      "title": "Infoblox Cloud Data Connector"
                    },
                    {
                      "description": "Install and configure the Linux agent to collect your Common Event Format (CEF) Syslog messages and forward them to Microsoft Sentinel.\n\n> Notice that the data from all regions will be stored in the selected workspace",
                      "innerSteps": [
                        {
                          "title": "1.1 Select or create a Linux machine",
                          "description": "Select or create a Linux machine that Microsoft Sentinel will use as the proxy between your security solution and Microsoft Sentinel this machine can be on your on-prem environment, Azure or other clouds."
                        },
                        {
                          "title": "1.2 Install the CEF collector on the Linux machine",
                          "description": "Install the Microsoft Monitoring Agent on your Linux machine and configure the machine to listen on the necessary port and forward messages to your Microsoft Sentinel workspace. The CEF collector collects CEF messages on port 514 TCP.\n\n> 1. Make sure that you have Python on your machine using the following command: python -version.\n\n> 2. You must have elevated permissions (sudo) on your machine.",
                          "instructions": [
                            {
                              "parameters": {
                                "fillWith": [
                                  "WorkspaceId",
                                  "PrimaryKey"
                                ],
                                "label": "Run the following command to install and apply the CEF collector:",
                                "value": "sudo wget -O cef_installer.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_installer.py&&sudo python cef_installer.py {0} {1}"
                              },
                              "type": "CopyableLabel"
                            }
                          ]
                        }
                      ],
                      "title": "1. Linux Syslog agent configuration"
                    },
                    {
                      "description": "Follow the steps below to configure the Infoblox CDC to send BloxOne data to Microsoft Sentinel via the Linux Syslog agent.\n1. Navigate to **Manage > Data Connector**.\n2. Click the **Destination Configuration** tab at the top.\n3. Click **Create > Syslog**. \n - **Name**: Give the new Destination a meaningful **name**, such as **Microsoft-Sentinel-Destination**.\n - **Description**: Optionally give it a meaningful **description**.\n - **State**: Set the state to **Enabled**.\n - **Format**: Set the format to **CEF**.\n - **FQDN/IP**: Enter the IP address of the Linux device on which the Linux agent is installed.\n - **Port**: Leave the port number at **514**.\n - **Protocol**: Select desired protocol and CA certificate if applicable.\n - Click **Save & Close**.\n4. Click the **Traffic Flow Configuration** tab at the top.\n5. Click **Create**.\n - **Name**: Give the new Traffic Flow a meaningful **name**, such as **Microsoft-Sentinel-Flow**.\n - **Description**: Optionally give it a meaningful **description**. \n - **State**: Set the state to **Enabled**. \n - Expand the **Service Instance** section. \n    - **Service Instance**: Select your desired Service Instance for which the Data Connector service is enabled. \n - Expand the **Source Configuration** section.  \n    - **Source**: Select **BloxOne Cloud Source**. \n    - Select the **Internal Notifications** Log Type.\n - Expand the **Destination Configuration** section.  \n    - Select the **Destination** you just created. \n - Click **Save & Close**. \n6. Allow the configuration some time to activate.",
                      "title": "2. Within the Infoblox Cloud Services Portal, configure Infoblox BloxOne to send CEF Syslog data to the Infoblox Cloud Data Connector to forward to the Syslog agent"
                    },
                    {
                      "description": "Follow the instructions to validate your connectivity:\n\nOpen Log Analytics to check if the logs are received using the CommonSecurityLog schema.\n\n>It may take about 20 minutes until the connection streams data to your workspace.\n\nIf the logs are not received, run the following connectivity validation script:\n\n> 1. Make sure that you have Python on your machine using the following command: python -version\n\n>2. You must have elevated permissions (sudo) on your machine",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Run the following command to validate your connectivity:",
                            "value": "sudo wget  -O cef_troubleshoot.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_troubleshoot.py&&sudo python cef_troubleshoot.py  {0}"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "3. Validate connection"
                    },
                    {
                      "description": "Make sure to configure the machine's security according to your organization's security policy\n\n\n[Learn more >](https://aka.ms/SecureCEF)",
                      "title": "4. Secure your machine "
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId3'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
                "contentId": "[variables('_dataConnectorContentId3')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox SOC Insights",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId3')]",
        "contentKind": "DataConnector",
        "displayName": "[Deprecated] Infoblox SOC Insight Data Connector via Legacy Agent",
        "contentProductId": "[variables('_dataConnectorcontentProductId3')]",
        "id": "[variables('_dataConnectorcontentProductId3')]",
        "version": "[variables('dataConnectorVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId3'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId3')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
        "contentId": "[variables('_dataConnectorContentId3')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion3')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox SOC Insights",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Infoblox",
          "tier": "Partner",
          "link": "https://support.infoblox.com/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId3'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "[Deprecated] Infoblox SOC Insight Data Connector via Legacy Agent",
          "publisher": "Infoblox",
          "descriptionMarkdown": "The Infoblox SOC Insight Data Connector allows you to easily connect your Infoblox BloxOne SOC Insight data with Microsoft Sentinel. By connecting your logs to Microsoft Sentinel, you can take advantage of search & correlation, alerting, and threat intelligence enrichment for each log. \n\nThis data connector ingests Infoblox SOC Insight CDC logs into your Log Analytics Workspace using the legacy Log Analytics agent.\n\n**Microsoft recommends installation of Infoblox SOC Insight Data Connector via AMA Connector.** The legacy connector uses the Log Analytics agent which is about to be deprecated by **Aug 31, 2024,** and should only be installed where AMA is not supported.\n\n Using MMA and AMA on the same machine can cause log duplication and extra ingestion cost. [More details](https://learn.microsoft.com/en-us/azure/sentinel/ama-migrate).",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "InfobloxCDC_SOCInsights",
              "baseQuery": "CommonSecurityLog\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID == \"BloxOne-InsightsNotification-Log\""
            }
          ],
          "dataTypes": [
            {
              "name": "CommonSecurityLog (InfobloxCDC_SOCInsights)",
              "lastDataReceivedQuery": "InfobloxCDC_SOCInsights\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "InfobloxCDC_SOCInsights\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(3d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Return all logs involving DNS Tunneling",
              "query": "InfobloxCDC_SOCInsights\n| where ThreatType == \"DNS Tunneling\""
            },
            {
              "description": "Return all logs involving a configuration issue",
              "query": "InfobloxCDC_SOCInsights\n| where ThreatClass == \"TI-CONFIGURATIONISSUE\""
            },
            {
              "description": "Return all high threat level logs",
              "query": "InfobloxCDC_SOCInsights\n| where ThreatLevel == \"High\""
            },
            {
              "description": "Return raised status logs",
              "query": "InfobloxCDC_SOCInsights\n| where Status == \"RAISED\""
            },
            {
              "description": "Return logs involving a high amount of unblocked DNS hits",
              "query": "InfobloxCDC_SOCInsights\n| where NotBlockedCount >= 100"
            },
            {
              "description": "Return each Insight by ThreatFamily",
              "query": "InfobloxCDC_SOCInsights\n| summarize dcount(InfobloxInsightID) by ThreatFamily"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "In order to use the playbooks as part of this solution, find your **Workspace ID** and **Workspace Primary Key** below for your convenience.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Workspace Key"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "Workspace Keys"
            },
            {
              "description": ">This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC_SOCInsights**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxCDC_SOCInsights.yaml) which is deployed with the Microsoft Sentinel Solution.",
              "title": "Parsers"
            },
            {
              "description": ">This data connector assumes you have access to Infoblox BloxOne Threat Defense SOC Insights. You can find more information about SOC Insights [**here**](https://docs.infoblox.com/space/BloxOneThreatDefense/501514252/SOC+Insights). ",
              "title": "SOC Insights"
            },
            {
              "description": ">This data connector assumes an Infoblox Data Connector host has already been created and configured in the Infoblox Cloud Services Portal (CSP). As the [**Infoblox Data Connector**](https://docs.infoblox.com/display/BloxOneThreatDefense/Deploying+the+Data+Connector+Solution) is a feature of BloxOne Threat Defense, access to an appropriate BloxOne Threat Defense subscription is required. See this [**quick-start guide**](https://www.infoblox.com/wp-content/uploads/infoblox-deployment-guide-data-connector.pdf) for more information and licensing requirements.",
              "title": "Infoblox Cloud Data Connector"
            },
            {
              "description": "Install and configure the Linux agent to collect your Common Event Format (CEF) Syslog messages and forward them to Microsoft Sentinel.\n\n> Notice that the data from all regions will be stored in the selected workspace",
              "innerSteps": [
                {
                  "title": "1.1 Select or create a Linux machine",
                  "description": "Select or create a Linux machine that Microsoft Sentinel will use as the proxy between your security solution and Microsoft Sentinel this machine can be on your on-prem environment, Azure or other clouds."
                },
                {
                  "title": "1.2 Install the CEF collector on the Linux machine",
                  "description": "Install the Microsoft Monitoring Agent on your Linux machine and configure the machine to listen on the necessary port and forward messages to your Microsoft Sentinel workspace. The CEF collector collects CEF messages on port 514 TCP.\n\n> 1. Make sure that you have Python on your machine using the following command: python -version.\n\n> 2. You must have elevated permissions (sudo) on your machine.",
                  "instructions": [
                    {
                      "parameters": {
                        "fillWith": [
                          "WorkspaceId",
                          "PrimaryKey"
                        ],
                        "label": "Run the following command to install and apply the CEF collector:",
                        "value": "sudo wget -O cef_installer.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_installer.py&&sudo python cef_installer.py {0} {1}"
                      },
                      "type": "CopyableLabel"
                    }
                  ]
                }
              ],
              "title": "1. Linux Syslog agent configuration"
            },
            {
              "description": "Follow the steps below to configure the Infoblox CDC to send BloxOne data to Microsoft Sentinel via the Linux Syslog agent.\n1. Navigate to **Manage > Data Connector**.\n2. Click the **Destination Configuration** tab at the top.\n3. Click **Create > Syslog**. \n - **Name**: Give the new Destination a meaningful **name**, such as **Microsoft-Sentinel-Destination**.\n - **Description**: Optionally give it a meaningful **description**.\n - **State**: Set the state to **Enabled**.\n - **Format**: Set the format to **CEF**.\n - **FQDN/IP**: Enter the IP address of the Linux device on which the Linux agent is installed.\n - **Port**: Leave the port number at **514**.\n - **Protocol**: Select desired protocol and CA certificate if applicable.\n - Click **Save & Close**.\n4. Click the **Traffic Flow Configuration** tab at the top.\n5. Click **Create**.\n - **Name**: Give the new Traffic Flow a meaningful **name**, such as **Microsoft-Sentinel-Flow**.\n - **Description**: Optionally give it a meaningful **description**. \n - **State**: Set the state to **Enabled**. \n - Expand the **Service Instance** section. \n    - **Service Instance**: Select your desired Service Instance for which the Data Connector service is enabled. \n - Expand the **Source Configuration** section.  \n    - **Source**: Select **BloxOne Cloud Source**. \n    - Select the **Internal Notifications** Log Type.\n - Expand the **Destination Configuration** section.  \n    - Select the **Destination** you just created. \n - Click **Save & Close**. \n6. Allow the configuration some time to activate.",
              "title": "2. Within the Infoblox Cloud Services Portal, configure Infoblox BloxOne to send CEF Syslog data to the Infoblox Cloud Data Connector to forward to the Syslog agent"
            },
            {
              "description": "Follow the instructions to validate your connectivity:\n\nOpen Log Analytics to check if the logs are received using the CommonSecurityLog schema.\n\n>It may take about 20 minutes until the connection streams data to your workspace.\n\nIf the logs are not received, run the following connectivity validation script:\n\n> 1. Make sure that you have Python on your machine using the following command: python -version\n\n>2. You must have elevated permissions (sudo) on your machine",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Run the following command to validate your connectivity:",
                    "value": "sudo wget  -O cef_troubleshoot.py https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_troubleshoot.py&&sudo python cef_troubleshoot.py  {0}"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "3. Validate connection"
            },
            {
              "description": "Make sure to configure the machine's security according to your organization's security policy\n\n\n[Learn more >](https://aka.ms/SecureCEF)",
              "title": "4. Secure your machine "
            }
          ],
          "id": "[variables('_uiConfigId3')]",
          "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected called [**InfobloxCDC_SOCInsights**](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20SOC%20Insights/Parsers/InfobloxCDC_SOCInsights.yaml) which is deployed with the Microsoft Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "InfobloxCDC_SOCInsights Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for InfobloxCDC_SOCInsights",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "InfobloxCDC_SOCInsights",
                "query": "CommonSecurityLog\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID == \"BloxOne-InsightsNotification-Log\"\n| extend AdditionalExtensions = strcat(AdditionalExtensions, \";\")\n| extend \n// SOC Insights\nBlockedCount = toint(extract(\"InfobloxEventsBlockedCount=(.*?);\", 1, AdditionalExtensions)),\nNotBlockedCount = toint(extract(\"InfobloxEventsNotBlockedCount=(.*?);\", 1, AdditionalExtensions)),\nInfobloxInsightID = extract(\"InfobloxInsightId=(.*?);\", 1, AdditionalExtensions),\nThreatType = extract(\"InfobloxInsightThreatType=(.*?);\", 1, AdditionalExtensions),\nThreatClass = extract(\"InfobloxThreatClass=(.*?);\", 1, AdditionalExtensions),\nThreatProperty = extract(\"InfobloxThreatFamily=(.*?);\", 1, AdditionalExtensions),\nThreatFamily = extract(\"InfobloxThreatFamily=(.*?);\", 1, AdditionalExtensions),\nStatus = extract(\"status=(.*?);\", 1, AdditionalExtensions),\nFeedSource = extract(\"InfobloxInsightFeedSource=(.*?);\", 1, AdditionalExtensions),\nComment = extract(\"InfobloxInsightUserComment=(.*?);\", 1, AdditionalExtensions),\nDescription = extract(\"InfobloxInsightDescription=(.*?);\", 1, AdditionalExtensions),\nInfobloxInsightLogType = \"Insight\",\nThreatConfidence_Score = toint(extract(\"InfobloxThreatConfidence=(.*?);\", 1, AdditionalExtensions))\n| extend ThreatConfidence= case(ThreatConfidence_Score==3, \"High\",\n                   ThreatConfidence_Score==2, \"Medium\",\n                   ThreatConfidence_Score==1, \"Low\",\n                   ThreatConfidence_Score == 0,\"Info\",\n                   \"N/A\" ),\nThreatLevel_Score = toint(extract(\"InfobloxThreatLevel=(.*?);\", 1, AdditionalExtensions))\n| extend ThreatLevel= case(ThreatLevel_Score==3, \"High\",\n                   ThreatLevel_Score==2, \"Medium\",\n                   ThreatLevel_Score==1, \"Low\",\n                   ThreatLevel_Score == 0,\"Info\",\n                   \"N/A\" )\n| extend IncidentSeverity= case(ThreatLevel_Score==3, \"High\",\n                   ThreatLevel_Score==2, \"Medium\",\n                   ThreatLevel_Score==1, \"Low\",\n                   ThreatLevel_Score == 0,\"Informational\",\n                   \"N/A\" )\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxCDC_SOCInsights')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Infoblox SOC Insights",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Parser for InfobloxCDC_SOCInsights",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for InfobloxCDC_SOCInsights",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "InfobloxCDC_SOCInsights",
        "query": "CommonSecurityLog\n| where DeviceVendor == \"Infoblox\" and DeviceProduct == \"Data Connector\" and DeviceEventClassID == \"BloxOne-InsightsNotification-Log\"\n| extend AdditionalExtensions = strcat(AdditionalExtensions, \";\")\n| extend \n// SOC Insights\nBlockedCount = toint(extract(\"InfobloxEventsBlockedCount=(.*?);\", 1, AdditionalExtensions)),\nNotBlockedCount = toint(extract(\"InfobloxEventsNotBlockedCount=(.*?);\", 1, AdditionalExtensions)),\nInfobloxInsightID = extract(\"InfobloxInsightId=(.*?);\", 1, AdditionalExtensions),\nThreatType = extract(\"InfobloxInsightThreatType=(.*?);\", 1, AdditionalExtensions),\nThreatClass = extract(\"InfobloxThreatClass=(.*?);\", 1, AdditionalExtensions),\nThreatProperty = extract(\"InfobloxThreatFamily=(.*?);\", 1, AdditionalExtensions),\nThreatFamily = extract(\"InfobloxThreatFamily=(.*?);\", 1, AdditionalExtensions),\nStatus = extract(\"status=(.*?);\", 1, AdditionalExtensions),\nFeedSource = extract(\"InfobloxInsightFeedSource=(.*?);\", 1, AdditionalExtensions),\nComment = extract(\"InfobloxInsightUserComment=(.*?);\", 1, AdditionalExtensions),\nDescription = extract(\"InfobloxInsightDescription=(.*?);\", 1, AdditionalExtensions),\nInfobloxInsightLogType = \"Insight\",\nThreatConfidence_Score = toint(extract(\"InfobloxThreatConfidence=(.*?);\", 1, AdditionalExtensions))\n| extend ThreatConfidence= case(ThreatConfidence_Score==3, \"High\",\n                   ThreatConfidence_Score==2, \"Medium\",\n                   ThreatConfidence_Score==1, \"Low\",\n                   ThreatConfidence_Score == 0,\"Info\",\n                   \"N/A\" ),\nThreatLevel_Score = toint(extract(\"InfobloxThreatLevel=(.*?);\", 1, AdditionalExtensions))\n| extend ThreatLevel= case(ThreatLevel_Score==3, \"High\",\n                   ThreatLevel_Score==2, \"Medium\",\n                   ThreatLevel_Score==1, \"Low\",\n                   ThreatLevel_Score == 0,\"Info\",\n                   \"N/A\" )\n| extend IncidentSeverity= case(ThreatLevel_Score==3, \"High\",\n                   ThreatLevel_Score==2, \"Medium\",\n                   ThreatLevel_Score==1, \"Low\",\n                   ThreatLevel_Score == 0,\"Informational\",\n                   \"N/A\" )\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxCDC_SOCInsights')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox SOC Insights",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Infoblox",
          "tier": "Partner",
          "link": "https://support.infoblox.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "InfobloxInsight Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for InfobloxInsight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "InfobloxInsight",
                "query": "InfobloxInsight_CL\n| where InfobloxInsightLogType_s == \"Insight\"\n| extend \nInfobloxInsightID=column_ifexists('insightId_g', ''),\nInfobloxInsightLogType=column_ifexists('InfobloxInsightLogType_s', ''),\nBlockedCount=toint(column_ifexists('eventsBlockedCount_s', '')),\nFeedSource=column_ifexists('feedSource_s', ''),\nStatus=column_ifexists('status_s', ''),\nLastSeen=column_ifexists('mostRecentAt_t', ''),\nNotBlockedCount=toint(column_ifexists('eventsNotBlockedCount_s', '')),\nEventsCount=toint(column_ifexists('numEvents_s', '')),\nPersistent=column_ifexists('persistent_b', ''),\nPersistentDate=column_ifexists('persistentDate_t', ''),\nSpreading=column_ifexists('spreading_b', ''),\nSpreadingDate=column_ifexists('spreadingDate_t', ''),\nFirstSeen=column_ifexists('startedAt_t', ''),\nThreatClass=column_ifexists('tClass_s', ''),\nThreatProperty=column_ifexists('tFamily_s', ''),\nThreatFamily=column_ifexists('tFamily_s', ''),\nThreatType=column_ifexists('threatType_s', ''),\nPriority=column_ifexists('priorityText_s', ''),\nDateChanged=column_ifexists('dateChanged_t ', ''),\nCommentChanger=column_ifexists('changer_s', ''),\nComment=column_ifexists('userComment_s', '')\n| extend IncidentSeverity = case(Priority==\"CRITICAL\", \"High\",\n                   Priority==\"HIGH\", \"High\",\n                   Priority==\"MEDIUM\", \"Medium\",\n                   Priority ==\"LOW\",\"Low\",\n                   Priority ==\"INFO\",\"Informational\",\n                   \"N/A\" )\n| project-away \n*_*\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsight')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "Infoblox SOC Insights",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "Parser for InfobloxInsight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for InfobloxInsight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "InfobloxInsight",
        "query": "InfobloxInsight_CL\n| where InfobloxInsightLogType_s == \"Insight\"\n| extend \nInfobloxInsightID=column_ifexists('insightId_g', ''),\nInfobloxInsightLogType=column_ifexists('InfobloxInsightLogType_s', ''),\nBlockedCount=toint(column_ifexists('eventsBlockedCount_s', '')),\nFeedSource=column_ifexists('feedSource_s', ''),\nStatus=column_ifexists('status_s', ''),\nLastSeen=column_ifexists('mostRecentAt_t', ''),\nNotBlockedCount=toint(column_ifexists('eventsNotBlockedCount_s', '')),\nEventsCount=toint(column_ifexists('numEvents_s', '')),\nPersistent=column_ifexists('persistent_b', ''),\nPersistentDate=column_ifexists('persistentDate_t', ''),\nSpreading=column_ifexists('spreading_b', ''),\nSpreadingDate=column_ifexists('spreadingDate_t', ''),\nFirstSeen=column_ifexists('startedAt_t', ''),\nThreatClass=column_ifexists('tClass_s', ''),\nThreatProperty=column_ifexists('tFamily_s', ''),\nThreatFamily=column_ifexists('tFamily_s', ''),\nThreatType=column_ifexists('threatType_s', ''),\nPriority=column_ifexists('priorityText_s', ''),\nDateChanged=column_ifexists('dateChanged_t ', ''),\nCommentChanger=column_ifexists('changer_s', ''),\nComment=column_ifexists('userComment_s', '')\n| extend IncidentSeverity = case(Priority==\"CRITICAL\", \"High\",\n                   Priority==\"HIGH\", \"High\",\n                   Priority==\"MEDIUM\", \"Medium\",\n                   Priority ==\"LOW\",\"Low\",\n                   Priority ==\"INFO\",\"Informational\",\n                   \"N/A\" )\n| project-away \n*_*\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsight')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox SOC Insights",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Infoblox",
          "tier": "Partner",
          "link": "https://support.infoblox.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject3').parserTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "InfobloxInsightAssets Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject3').parserVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject3')._parserName3]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for InfobloxInsightAssets",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "InfobloxInsightAssets",
                "query": "InfobloxInsightAssets_CL\n| where InfobloxInsightLogType_s == \"Asset\"\n| extend \nInfobloxInsightID=column_ifexists('InfobloxInsightID_g', ''),\nInfobloxInsightLogType=column_ifexists('InfobloxInsightLogType_s', ''),\nAssetID=column_ifexists('cid_s', ''),\nSourceMACAddress=column_ifexists('cmac_s', ''),\nEventCount=column_ifexists('count_d', ''),\nInfobloxB1SrcOSVersion=column_ifexists('os_version_s', ''),\nSourceIP=column_ifexists('qip_s', ''),\nSourceIPDistinctCount=column_ifexists('qipDistinctCount_d', ''),\nIndicatorDistinctCount=column_ifexists('threatIndicatorDistinctCount_s', ''),\nLastSeen=column_ifexists('timeMax_t', ''),\nFirstSeen=column_ifexists('timeMin_t', ''),\nSourceUserName=column_ifexists('user_s', ''),\nLocation=column_ifexists('location_s', '')\n| extend ThreatLevel_Score=toint(column_ifexists('threatLevelMax_s', ''))\n| extend ThreatLevel= case(ThreatLevel_Score==3, \"High\",\n                   ThreatLevel_Score==2, \"Medium\",\n                   ThreatLevel_Score==1, \"Low\",\n                   ThreatLevel_Score == 0,\"Info\",\n                   \"N/A\" )\n| extend ThreatConfidence_Score=toint(column_ifexists('confidenceLevelMax_d', ''))\n| extend ThreatConfidence= case(ThreatConfidence_Score==3, \"High\",\n                   ThreatConfidence_Score==2, \"Medium\",\n                   ThreatConfidence_Score==1, \"Low\",\n                   ThreatConfidence_Score == 0,\"Info\",\n                   \"N/A\" )\n| project-away\n*_*\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
              "dependsOn": [
                "[variables('parserObject3')._parserId3]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightAssets')]",
                "contentId": "[variables('parserObject3').parserContentId3]",
                "kind": "Parser",
                "version": "[variables('parserObject3').parserVersion3]",
                "source": {
                  "name": "Infoblox SOC Insights",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "contentKind": "Parser",
        "displayName": "Parser for InfobloxInsightAssets",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "version": "[variables('parserObject3').parserVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject3')._parserName3]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for InfobloxInsightAssets",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "InfobloxInsightAssets",
        "query": "InfobloxInsightAssets_CL\n| where InfobloxInsightLogType_s == \"Asset\"\n| extend \nInfobloxInsightID=column_ifexists('InfobloxInsightID_g', ''),\nInfobloxInsightLogType=column_ifexists('InfobloxInsightLogType_s', ''),\nAssetID=column_ifexists('cid_s', ''),\nSourceMACAddress=column_ifexists('cmac_s', ''),\nEventCount=column_ifexists('count_d', ''),\nInfobloxB1SrcOSVersion=column_ifexists('os_version_s', ''),\nSourceIP=column_ifexists('qip_s', ''),\nSourceIPDistinctCount=column_ifexists('qipDistinctCount_d', ''),\nIndicatorDistinctCount=column_ifexists('threatIndicatorDistinctCount_s', ''),\nLastSeen=column_ifexists('timeMax_t', ''),\nFirstSeen=column_ifexists('timeMin_t', ''),\nSourceUserName=column_ifexists('user_s', ''),\nLocation=column_ifexists('location_s', '')\n| extend ThreatLevel_Score=toint(column_ifexists('threatLevelMax_s', ''))\n| extend ThreatLevel= case(ThreatLevel_Score==3, \"High\",\n                   ThreatLevel_Score==2, \"Medium\",\n                   ThreatLevel_Score==1, \"Low\",\n                   ThreatLevel_Score == 0,\"Info\",\n                   \"N/A\" )\n| extend ThreatConfidence_Score=toint(column_ifexists('confidenceLevelMax_d', ''))\n| extend ThreatConfidence= case(ThreatConfidence_Score==3, \"High\",\n                   ThreatConfidence_Score==2, \"Medium\",\n                   ThreatConfidence_Score==1, \"Low\",\n                   ThreatConfidence_Score == 0,\"Info\",\n                   \"N/A\" )\n| project-away\n*_*\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
      "dependsOn": [
        "[variables('parserObject3')._parserId3]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightAssets')]",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "kind": "Parser",
        "version": "[variables('parserObject3').parserVersion3]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox SOC Insights",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Infoblox",
          "tier": "Partner",
          "link": "https://support.infoblox.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject4').parserTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "InfobloxInsightComments Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject4').parserVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject4')._parserName4]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for InfobloxInsightComments",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "InfobloxInsightComments",
                "query": "InfobloxInsightComments_CL\n| where InfobloxInsightLogType_s == \"Comment\"\n|  extend\nInfobloxInsightID=column_ifexists('InfobloxInsightID_g', ''),\nCommentChanger=column_ifexists('commentsChanger_s', ''),\nComment=column_ifexists('newComment_s', ''),\nDateChanged=column_ifexists('dateChanged_t', ''),\nStatus=column_ifexists('status_s', '')\n| project-away\n*_*\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
              "dependsOn": [
                "[variables('parserObject4')._parserId4]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightComments')]",
                "contentId": "[variables('parserObject4').parserContentId4]",
                "kind": "Parser",
                "version": "[variables('parserObject4').parserVersion4]",
                "source": {
                  "name": "Infoblox SOC Insights",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "contentKind": "Parser",
        "displayName": "Parser for InfobloxInsightComments",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "version": "[variables('parserObject4').parserVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject4')._parserName4]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for InfobloxInsightComments",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "InfobloxInsightComments",
        "query": "InfobloxInsightComments_CL\n| where InfobloxInsightLogType_s == \"Comment\"\n|  extend\nInfobloxInsightID=column_ifexists('InfobloxInsightID_g', ''),\nCommentChanger=column_ifexists('commentsChanger_s', ''),\nComment=column_ifexists('newComment_s', ''),\nDateChanged=column_ifexists('dateChanged_t', ''),\nStatus=column_ifexists('status_s', '')\n| project-away\n*_*\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
      "dependsOn": [
        "[variables('parserObject4')._parserId4]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightComments')]",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "kind": "Parser",
        "version": "[variables('parserObject4').parserVersion4]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox SOC Insights",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Infoblox",
          "tier": "Partner",
          "link": "https://support.infoblox.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject5').parserTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "InfobloxInsightEvents Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject5').parserVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject5')._parserName5]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for InfobloxInsightEvents",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "InfobloxInsightEvents",
                "query": "InfobloxInsightEvents_CL\n| where InfobloxInsightLogType_s == \"Event\"\n| extend \nInfobloxInsightID=column_ifexists('InfobloxInsightID_g', ''),\nInfobloxInsightLogType=column_ifexists('InfobloxInsightLogType_s', ''),\nThreatConfidence=column_ifexists('confidenceLevel_s', ''),\nDeviceName=column_ifexists('deviceName_s', ''),\nSourceMACAddress=column_ifexists('macAddress_s', ''),\nInfobloxB1Network=column_ifexists('source_s', ''),\nInfobloxB1SrcOSVersion=column_ifexists('osVersion_s', ''),\nInfobloxB1PolicyAction=column_ifexists('action_s', ''),\nInfobloxB1PolicyName=column_ifexists('policy_s', ''),\nSourceIP=column_ifexists('deviceIp_s', ''),\nDestinationDnsDomain=column_ifexists('query_s', ''),\nInfobloxDNSQType=column_ifexists('queryType_s', ''),\nThreatClass=column_ifexists('class_s', ''),\nThreatProperty=column_ifexists('threatFamily_s', ''),\nDetected = todatetime(trim_end(@\"\\+(.*?)\", column_ifexists('detected_s', ''))), \nThreatIndicator=iff(isnotempty(column_ifexists('threatIndicator_s', '')), column_ifexists('threatIndicator_s', ''), column_ifexists('query_s', '')),\nSourceUserName=column_ifexists('user_s', ''),\nDNSResponse=column_ifexists('response_s', ''),\nDNSView=column_ifexists('dnsView_s', ''),\nDeviceRegion=column_ifexists('deviceRegion_s', ''),\nDeviceCountry=column_ifexists('deviceCountry_s', ''),\nResponseRegion=column_ifexists('responseRegion_s', ''),\nResponseCountry=column_ifexists('responseCountry_s', ''),\nInfobloxB1FeedName=column_ifexists('feed_s', ''),\nInfobloxB1DHCPFingerprint=column_ifexists('dhcpFingerprint_s', ''),\nThreatLevel=column_ifexists('threatLevel_s', '')\n| project-away\n*_*\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject5')._parserId5,'/'))))]",
              "dependsOn": [
                "[variables('parserObject5')._parserId5]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightEvents')]",
                "contentId": "[variables('parserObject5').parserContentId5]",
                "kind": "Parser",
                "version": "[variables('parserObject5').parserVersion5]",
                "source": {
                  "name": "Infoblox SOC Insights",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject5').parserContentId5]",
        "contentKind": "Parser",
        "displayName": "Parser for InfobloxInsightEvents",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject5').parserContentId5,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject5').parserContentId5,'-', '1.0.0')))]",
        "version": "[variables('parserObject5').parserVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject5')._parserName5]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for InfobloxInsightEvents",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "InfobloxInsightEvents",
        "query": "InfobloxInsightEvents_CL\n| where InfobloxInsightLogType_s == \"Event\"\n| extend \nInfobloxInsightID=column_ifexists('InfobloxInsightID_g', ''),\nInfobloxInsightLogType=column_ifexists('InfobloxInsightLogType_s', ''),\nThreatConfidence=column_ifexists('confidenceLevel_s', ''),\nDeviceName=column_ifexists('deviceName_s', ''),\nSourceMACAddress=column_ifexists('macAddress_s', ''),\nInfobloxB1Network=column_ifexists('source_s', ''),\nInfobloxB1SrcOSVersion=column_ifexists('osVersion_s', ''),\nInfobloxB1PolicyAction=column_ifexists('action_s', ''),\nInfobloxB1PolicyName=column_ifexists('policy_s', ''),\nSourceIP=column_ifexists('deviceIp_s', ''),\nDestinationDnsDomain=column_ifexists('query_s', ''),\nInfobloxDNSQType=column_ifexists('queryType_s', ''),\nThreatClass=column_ifexists('class_s', ''),\nThreatProperty=column_ifexists('threatFamily_s', ''),\nDetected = todatetime(trim_end(@\"\\+(.*?)\", column_ifexists('detected_s', ''))), \nThreatIndicator=iff(isnotempty(column_ifexists('threatIndicator_s', '')), column_ifexists('threatIndicator_s', ''), column_ifexists('query_s', '')),\nSourceUserName=column_ifexists('user_s', ''),\nDNSResponse=column_ifexists('response_s', ''),\nDNSView=column_ifexists('dnsView_s', ''),\nDeviceRegion=column_ifexists('deviceRegion_s', ''),\nDeviceCountry=column_ifexists('deviceCountry_s', ''),\nResponseRegion=column_ifexists('responseRegion_s', ''),\nResponseCountry=column_ifexists('responseCountry_s', ''),\nInfobloxB1FeedName=column_ifexists('feed_s', ''),\nInfobloxB1DHCPFingerprint=column_ifexists('dhcpFingerprint_s', ''),\nThreatLevel=column_ifexists('threatLevel_s', '')\n| project-away\n*_*\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject5')._parserId5,'/'))))]",
      "dependsOn": [
        "[variables('parserObject5')._parserId5]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightEvents')]",
        "contentId": "[variables('parserObject5').parserContentId5]",
        "kind": "Parser",
        "version": "[variables('parserObject5').parserVersion5]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox SOC Insights",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Infoblox",
          "tier": "Partner",
          "link": "https://support.infoblox.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject6').parserTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "InfobloxInsightIndicators Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject6').parserVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject6')._parserName6]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for InfobloxInsightIndicators",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "InfobloxInsightIndicators",
                "query": "let IPRegex = '[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}';\nInfobloxInsightIndicators_CL\n| where InfobloxInsightLogType_s == \"Indicator\"\n| extend \nInfobloxInsightID=column_ifexists('InfobloxInsightID_g', ''),\nInfobloxInsightLogType=column_ifexists('InfobloxInsightLogType_s', ''),\nInfobloxB1PolicyAction=column_ifexists('action_s', ''),\nSourceMACAddress=column_ifexists('cmac_s', ''),\nEventCount=column_ifexists('count_d', ''),\nThreatIndicator=column_ifexists('indicator_s', ''),\nDestinationDnsDomain=column_ifexists('indicator_s', ''),\nInfobloxB1FeedName=column_ifexists('feedName_s', ''),\nLastSeen=column_ifexists('timeMax_t', ''),\nFirstSeen=column_ifexists('timeMin_t', ''),\nThreatActor=column_ifexists('actor_s', '')\n| extend isIP = isnotempty(extract(IPRegex, 0, ThreatIndicator))\n| extend ThreatLevel_Score=toint(column_ifexists('threatLevelMax_s', ''))\n| extend ThreatLevel= case(ThreatLevel_Score==3, \"High\",\n                   ThreatLevel_Score==2, \"Medium\",\n                   ThreatLevel_Score==1, \"Low\",\n                   ThreatLevel_Score == 0,\"Info\",\n                   \"N/A\" )\n| extend ThreatConfidence_Score=toint(column_ifexists('confidence_s', ''))\n| extend ThreatConfidence= case(ThreatConfidence_Score==3, \"High\",\n                   ThreatConfidence_Score==2, \"Medium\",\n                   ThreatConfidence_Score==1, \"Low\",\n                   ThreatConfidence_Score == 0,\"Info\",\n                   \"N/A\" )\n| project-away\n*_*\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject6')._parserId6,'/'))))]",
              "dependsOn": [
                "[variables('parserObject6')._parserId6]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightIndicators')]",
                "contentId": "[variables('parserObject6').parserContentId6]",
                "kind": "Parser",
                "version": "[variables('parserObject6').parserVersion6]",
                "source": {
                  "name": "Infoblox SOC Insights",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject6').parserContentId6]",
        "contentKind": "Parser",
        "displayName": "Parser for InfobloxInsightIndicators",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject6').parserContentId6,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject6').parserContentId6,'-', '1.0.0')))]",
        "version": "[variables('parserObject6').parserVersion6]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject6')._parserName6]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for InfobloxInsightIndicators",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "InfobloxInsightIndicators",
        "query": "let IPRegex = '[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}';\nInfobloxInsightIndicators_CL\n| where InfobloxInsightLogType_s == \"Indicator\"\n| extend \nInfobloxInsightID=column_ifexists('InfobloxInsightID_g', ''),\nInfobloxInsightLogType=column_ifexists('InfobloxInsightLogType_s', ''),\nInfobloxB1PolicyAction=column_ifexists('action_s', ''),\nSourceMACAddress=column_ifexists('cmac_s', ''),\nEventCount=column_ifexists('count_d', ''),\nThreatIndicator=column_ifexists('indicator_s', ''),\nDestinationDnsDomain=column_ifexists('indicator_s', ''),\nInfobloxB1FeedName=column_ifexists('feedName_s', ''),\nLastSeen=column_ifexists('timeMax_t', ''),\nFirstSeen=column_ifexists('timeMin_t', ''),\nThreatActor=column_ifexists('actor_s', '')\n| extend isIP = isnotempty(extract(IPRegex, 0, ThreatIndicator))\n| extend ThreatLevel_Score=toint(column_ifexists('threatLevelMax_s', ''))\n| extend ThreatLevel= case(ThreatLevel_Score==3, \"High\",\n                   ThreatLevel_Score==2, \"Medium\",\n                   ThreatLevel_Score==1, \"Low\",\n                   ThreatLevel_Score == 0,\"Info\",\n                   \"N/A\" )\n| extend ThreatConfidence_Score=toint(column_ifexists('confidence_s', ''))\n| extend ThreatConfidence= case(ThreatConfidence_Score==3, \"High\",\n                   ThreatConfidence_Score==2, \"Medium\",\n                   ThreatConfidence_Score==1, \"Low\",\n                   ThreatConfidence_Score == 0,\"Info\",\n                   \"N/A\" )\n| project-away\n*_*\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject6')._parserId6,'/'))))]",
      "dependsOn": [
        "[variables('parserObject6')._parserId6]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InfobloxInsightIndicators')]",
        "contentId": "[variables('parserObject6').parserContentId6]",
        "kind": "Parser",
        "version": "[variables('parserObject6').parserVersion6]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox SOC Insights",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Infoblox",
          "tier": "Partner",
          "link": "https://support.infoblox.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox-SOC-Get-Insight-Details Playbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Infoblox-SOC-Get-Insight-Details",
              "type": "string"
            },
            "Infoblox API Key": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Infoblox API Key"
              }
            },
            "Workspace ID": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Workspace ID"
              }
            },
            "Workspace Key": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Workspace Key"
              }
            }
          },
          "variables": {
            "AzureloganalyticsdatacollectorConnectionName": "[[concat('Azureloganalyticsdatacollector-', parameters('PlaybookName'))]",
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azureloganalyticsdatacollector')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Infoblox API Key": {
                      "defaultValue": "[[parameters('Infoblox API Key')]",
                      "type": "string"
                    },
                    "Workspace ID": {
                      "defaultValue": "[[parameters('Workspace ID')]",
                      "type": "string"
                    },
                    "Workspace Key": {
                      "defaultValue": "[[parameters('Workspace Key')]",
                      "type": "string"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Filter_array_for_Malware_Entity": {
                      "runAfter": {
                        "For_each": [
                          "Succeeded"
                        ]
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@body('Parse_Entities_JSON')",
                        "where": "@equals(item()['kind'], 'Malware')"
                      }
                    },
                    "Filter_array_for_Object_GUID_Entity": {
                      "runAfter": {
                        "Parse_Entities_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@body('Parse_Entities_JSON')",
                        "where": "@equals(item()?['kind'], 'SecurityGroup')"
                      }
                    },
                    "For_each": {
                      "foreach": "@body('Filter_array_for_Object_GUID_Entity')",
                      "actions": {
                        "Test_Connection_to_Infoblox_CSP": {
                          "type": "Http",
                          "inputs": {
                            "headers": {
                              "Authorization": "Token @{parameters('Infoblox API Key')}"
                            },
                            "method": "GET",
                            "uri": "https://csp.infoblox.com/api/v1/insights/@{items('For_each')?['properties']?['objectGuid']}"
                          }
                        }
                      },
                      "runAfter": {
                        "Filter_array_for_Object_GUID_Entity": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_Insight_ID": {
                      "foreach": "@body('Filter_array_for_Object_GUID_Entity')",
                      "actions": {
                        "Add_InfobloxInsightID_Tag": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "tagsToAdd": {
                                "TagsToAdd": [
                                  {
                                    "Tag": "InfobloxInsightID: @{items('For_each_Insight_ID')?['properties']?['objectGuid']}"
                                  }
                                ]
                              }
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "put",
                            "path": "/Incidents"
                          }
                        },
                        "Add_Summary_data_if_observed_via_CDC": {
                          "actions": {
                            "Get_Summary_Data": {
                              "type": "Http",
                              "inputs": {
                                "headers": {
                                  "Authorization": "Token @{parameters('Infoblox API Key')}"
                                },
                                "method": "GET",
                                "uri": "https://csp.infoblox.com/api/v1/insights/@{items('For_each_Insight_ID')?['properties']?['objectGuid']}"
                              }
                            },
                            "Parse_Summary_JSON": {
                              "runAfter": {
                                "Get_Summary_Data": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Get_Summary_Data')",
                                "schema": {
                                  "properties": {
                                    "insight": {
                                      "properties": {
                                        "changer": {
                                          "type": "string"
                                        },
                                        "dateChanged": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        },
                                        "eventsBlockedCount": {
                                          "type": "string"
                                        },
                                        "eventsNotBlockedCount": {
                                          "type": "string"
                                        },
                                        "feedSource": {
                                          "type": "string"
                                        },
                                        "insightId": {
                                          "type": "string"
                                        },
                                        "mostRecentAt": {
                                          "type": "string"
                                        },
                                        "numEvents": {
                                          "type": "string"
                                        },
                                        "persistent": {
                                          "type": "string"
                                        },
                                        "persistentDate": {
                                          "type": "string"
                                        },
                                        "priorityText": {
                                          "type": "string"
                                        },
                                        "spreading": {
                                          "type": "string"
                                        },
                                        "spreadingDate": {
                                          "type": "string"
                                        },
                                        "startedAt": {
                                          "type": "string"
                                        },
                                        "status": {
                                          "type": "string"
                                        },
                                        "tClass": {
                                          "type": "string"
                                        },
                                        "tFamily": {
                                          "type": "string"
                                        },
                                        "threatType": {
                                          "type": "string"
                                        },
                                        "userComment": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Send_Summary_(Insight)_Data": {
                              "runAfter": {
                                "Parse_Summary_JSON": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": "@{addProperty(body('Parse_Summary_JSON')?['insight'], 'InfobloxInsightLogType', 'Insight')}",
                                "headers": {
                                  "Log-Type": "InfobloxInsight"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/logs"
                              }
                            }
                          },
                          "runAfter": {
                            "Add_InfobloxInsightID_Tag": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "contains": [
                                  "@body('Add_InfobloxInsightID_Tag')?['properties']?['description']",
                                  "Observed via CDC"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "For_each_Asset": {
                          "foreach": "@body('Parse_Assets_JSON')?['assets']",
                          "actions": {
                            "Send_Asset_Data": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": "@{addProperty(addProperty(items('For_Each_Asset'), 'InfobloxInsightID', items('For_each_Insight_ID')?['properties']?['objectGuid']), 'InfobloxInsightLogType', 'Asset')}",
                                "headers": {
                                  "Log-Type": "InfobloxInsightAssets"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/logs"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_Assets_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "For_each_Comment": {
                          "foreach": "@body('Parse_Comment_JSON')?['comments']",
                          "actions": {
                            "Send_Comment_Data": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": "@{addProperty(addProperty(items('For_Each_Comment'), 'InfobloxInsightID', items('For_each_Insight_ID')?['properties']?['objectGuid']), 'InfobloxInsightLogType', 'Comment')}",
                                "headers": {
                                  "Log-Type": "InfobloxInsightComments"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/logs"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_Comment_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "For_each_Event": {
                          "foreach": "@body('Parse_Event_JSON')?['events']",
                          "actions": {
                            "Send_Event_Data": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": "@{addProperty(addProperty(items('For_Each_Event'), 'InfobloxInsightID', items('For_each_Insight_ID')?['properties']?['objectGuid']), 'InfobloxInsightLogType', 'Event')}",
                                "headers": {
                                  "Log-Type": "InfobloxInsightEvents"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/logs"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_Event_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "For_each_Indicator": {
                          "foreach": "@body('Parse_Indicator_JSON')?['indicators']",
                          "actions": {
                            "Send_Indicator_Data": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": "@{addProperty(addProperty(items('For_Each_Indicator'), 'InfobloxInsightID', items('For_each_Insight_ID')?['properties']?['objectGuid']), 'InfobloxInsightLogType', 'Indicator')\r\n}",
                                "headers": {
                                  "Log-Type": "InfobloxInsightIndicators"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/logs"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_Indicator_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Get_Asset_Data": {
                          "runAfter": {
                            "Add_InfobloxInsightID_Tag": [
                              "Succeeded"
                            ]
                          },
                          "type": "Http",
                          "inputs": {
                            "headers": {
                              "Authorization": "Token @{parameters('Infoblox API Key')}"
                            },
                            "method": "GET",
                            "uri": "https://csp.infoblox.com/api/v1/insights/@{items('For_each_Insight_ID')?['properties']?['objectGuid']}/assets"
                          }
                        },
                        "Get_Comment_Data": {
                          "runAfter": {
                            "Add_InfobloxInsightID_Tag": [
                              "Succeeded"
                            ]
                          },
                          "type": "Http",
                          "inputs": {
                            "headers": {
                              "Authorization": "Token @{parameters('Infoblox API Key')}"
                            },
                            "method": "GET",
                            "uri": "https://csp.infoblox.com/api/v1/insights/@{items('For_each_Insight_ID')?['properties']?['objectGuid']}/comments"
                          }
                        },
                        "Get_Event_Data": {
                          "runAfter": {
                            "Add_InfobloxInsightID_Tag": [
                              "Succeeded"
                            ]
                          },
                          "type": "Http",
                          "inputs": {
                            "headers": {
                              "Authorization": "Token @{parameters('Infoblox API Key')}"
                            },
                            "method": "GET",
                            "uri": "https://csp.infoblox.com/api/v1/insights/@{items('For_each_Insight_ID')?['properties']?['objectGuid']}/events"
                          }
                        },
                        "Get_Indicator_Data": {
                          "runAfter": {
                            "Add_InfobloxInsightID_Tag": [
                              "Succeeded"
                            ]
                          },
                          "type": "Http",
                          "inputs": {
                            "headers": {
                              "Authorization": "Token @{parameters('Infoblox API Key')}"
                            },
                            "method": "GET",
                            "uri": "https://csp.infoblox.com/api/v1/insights/@{items('For_each_Insight_ID')?['properties']?['objectGuid']}/indicators"
                          }
                        },
                        "Parse_Assets_JSON": {
                          "runAfter": {
                            "Get_Asset_Data": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_Asset_Data')",
                            "schema": {
                              "properties": {
                                "assets": {
                                  "items": {
                                    "properties": {
                                      "cid": {
                                        "type": "string"
                                      },
                                      "cmac": {
                                        "type": "string"
                                      },
                                      "count": {
                                        "type": "integer"
                                      },
                                      "location": {
                                        "type": "string"
                                      },
                                      "os_version": {
                                        "type": "string"
                                      },
                                      "qip": {
                                        "type": "string"
                                      },
                                      "threat_indicator_distinct_count": {
                                        "type": "string"
                                      },
                                      "threat_level_max": {
                                        "type": "string"
                                      },
                                      "time_max": {
                                        "type": "string"
                                      },
                                      "time_min": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "required": "[variables('TemplateEmptyArray')]",
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Parse_Comment_JSON": {
                          "runAfter": {
                            "Get_Comment_Data": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_Comment_Data')",
                            "schema": {
                              "properties": {
                                "comments": {
                                  "items": {
                                    "properties": {
                                      "commentsChanger": {
                                        "type": "string"
                                      },
                                      "dateChanged": {
                                        "type": "string"
                                      },
                                      "newComment": {
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string"
                                      }
                                    },
                                    "required": "[variables('TemplateEmptyArray')]",
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Parse_Event_JSON": {
                          "runAfter": {
                            "Get_Event_Data": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_Event_Data')",
                            "schema": {
                              "properties": {
                                "events": {
                                  "items": {
                                    "properties": {
                                      "action": {
                                        "type": "string"
                                      },
                                      "class": {
                                        "type": "string"
                                      },
                                      "confidence_level": {
                                        "type": "string"
                                      },
                                      "detected": {
                                        "type": "string"
                                      },
                                      "deviceIp": {
                                        "type": "string"
                                      },
                                      "device_country": {
                                        "type": "string"
                                      },
                                      "device_name": {
                                        "type": "string"
                                      },
                                      "device_region": {
                                        "type": "string"
                                      },
                                      "dhcp_fingerprint": {
                                        "type": "string"
                                      },
                                      "dns_view": {
                                        "type": "string"
                                      },
                                      "feed": {
                                        "type": "string"
                                      },
                                      "mac_address": {
                                        "type": "string"
                                      },
                                      "os_version": {
                                        "type": "string"
                                      },
                                      "policy": {
                                        "type": "string"
                                      },
                                      "property": {
                                        "type": "string"
                                      },
                                      "query": {
                                        "type": "string"
                                      },
                                      "query_type": {
                                        "type": "string"
                                      },
                                      "response": {
                                        "type": "string"
                                      },
                                      "response_country": {
                                        "type": "string"
                                      },
                                      "response_region": {
                                        "type": "string"
                                      },
                                      "source": {
                                        "type": "string"
                                      },
                                      "threat_family": {
                                        "type": "string"
                                      },
                                      "threat_indicator": {
                                        "type": "string"
                                      },
                                      "threat_level": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "required": "[variables('TemplateEmptyArray')]",
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Parse_Indicator_JSON": {
                          "runAfter": {
                            "Get_Indicator_Data": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_Indicator_Data')",
                            "schema": {
                              "properties": {
                                "indicators": {
                                  "items": {
                                    "properties": {
                                      "action": {
                                        "type": "string"
                                      },
                                      "actor": {
                                        "type": "string"
                                      },
                                      "confidence": {
                                        "type": "string"
                                      },
                                      "count": {
                                        "type": "integer"
                                      },
                                      "feed_name": {
                                        "type": "string"
                                      },
                                      "indicator": {
                                        "type": "string"
                                      },
                                      "threat_level_max": {
                                        "type": "string"
                                      },
                                      "time_max": {
                                        "type": "string"
                                      },
                                      "time_min": {
                                        "type": "string"
                                      }
                                    },
                                    "required": "[variables('TemplateEmptyArray')]",
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "For_each_Malware_Entity": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_Malware_Entity": {
                      "foreach": "@body('Filter_array_for_Malware_Entity')",
                      "actions": {
                        "Update_Incident_Tags": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "tagsToAdd": {
                                "TagsToAdd": [
                                  {
                                    "Tag": "@items('For_each_Malware_Entity')?['kind']"
                                  },
                                  {
                                    "Tag": "@items('For_each_Malware_Entity')?['properties']?['malwareName']"
                                  },
                                  {
                                    "Tag": "@items('For_each_Malware_Entity')?['properties']?['category']"
                                  },
                                  {
                                    "Tag": "Insight"
                                  }
                                ]
                              }
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "put",
                            "path": "/Incidents"
                          }
                        }
                      },
                      "runAfter": {
                        "Filter_array_for_Malware_Entity": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Parse_Entities_JSON": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "schema": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "properties": {
                                "properties": {
                                  "friendlyName": {
                                    "type": "string"
                                  },
                                  "objectGuid": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "required": "[variables('TemplateEmptyArray')]",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azureloganalyticsdatacollector": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                        "connectionName": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azureloganalyticsdatacollector')]"
                      },
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Infoblox-SOC-Get-Insight-Details",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox SOC Insights",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Infoblox SOC Get Insight Details",
            "description": "Leverages the Infoblox SOC Insights API to enrich a Microsoft Sentinel Incident triggered by an Infoblox SOC Insight & ingest Insight details into custom InfobloxInsight tables. The tables are used to build the Infoblox SOC Insights Workbook. This playbook can be configured to run automatically when an incident occurs (recommended) or run on demand.",
            "prerequisites": [
              "1. Infoblox SOC Insights API Key",
              "2. Workspace ID",
              "3. Workspace Key"
            ],
            "postDeployment": [
              "1. Grant playbook's Managed Identity **Microsoft Sentinel Responder** or greater to Resource Group.",
              "2. Authorize connections."
            ],
            "lastUpdateTime": "2024-04-03T00:00:00Z",
            "entities": [
              "SecurityGroup",
              "Malware"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "Infoblox-SOC-Get-Insight-Details",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox-SOC-Get-Open-Insights-API Playbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Infoblox-SOC-Get-Open-Insights-API",
              "type": "string"
            },
            "Infoblox API Key": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Infoblox API Key"
              }
            }
          },
          "variables": {
            "AzureloganalyticsdatacollectorConnectionName": "[[concat('Azureloganalyticsdatacollector-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azureloganalyticsdatacollector')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Infoblox API Key": {
                      "defaultValue": "[[parameters('Infoblox API Key')]",
                      "type": "string"
                    }
                  },
                  "triggers": {
                    "Recurrence": {
                      "recurrence": {
                        "frequency": "Day",
                        "interval": 1
                      },
                      "evaluatedRecurrence": {
                        "frequency": "Day",
                        "interval": 1
                      },
                      "type": "Recurrence"
                    }
                  },
                  "actions": {
                    "For_each_Insight": {
                      "foreach": "@body('Parse_JSON')?['insightList']",
                      "actions": {
                        "Send_Data": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": "@{union(variables('Extra Cols'), items('For_Each_Insight'))}",
                            "headers": {
                              "Log-Type": "InfobloxInsight"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureloganalyticsdatacollector_1']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/api/logs"
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_All_Insights": {
                      "runAfter": {
                        "Initialize_Extra_Cols": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "headers": {
                          "Authorization": "Token @{parameters('Infoblox API Key')}"
                        },
                        "method": "GET",
                        "uri": "https://csp.infoblox.com/api/v1/insights"
                      }
                    },
                    "Initialize_Extra_Cols": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Extra Cols",
                            "type": "object",
                            "value": {
                              "InfobloxInsightLogType": "Insight"
                            }
                          }
                        ]
                      }
                    },
                    "Parse_JSON": {
                      "runAfter": {
                        "Get_All_Insights": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_All_Insights')",
                        "schema": {
                          "properties": {
                            "insightList": {
                              "items": {
                                "properties": {
                                  "changer": {
                                    "type": "string"
                                  },
                                  "dateChanged": {
                                    "type": "string"
                                  },
                                  "eventsBlockedCount": {
                                    "type": "string"
                                  },
                                  "eventsNotBlockedCount": {
                                    "type": "string"
                                  },
                                  "feedSource": {
                                    "type": "string"
                                  },
                                  "insightId": {
                                    "type": "string"
                                  },
                                  "mostRecentAt": {
                                    "type": "string"
                                  },
                                  "numEvents": {
                                    "type": "string"
                                  },
                                  "persistentDate": {
                                    "type": "string"
                                  },
                                  "priorityText": {
                                    "type": "string"
                                  },
                                  "startedAt": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "tClass": {
                                    "type": "string"
                                  },
                                  "tFamily": {
                                    "type": "string"
                                  },
                                  "threatType": {
                                    "type": "string"
                                  },
                                  "userComment": {
                                    "type": "string"
                                  }
                                },
                                "required": "[variables('TemplateEmptyArray')]",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azureloganalyticsdatacollector_1": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                        "connectionName": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azureloganalyticsdatacollector')]"
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Infoblox-SOC-Get-Open-Insights-API",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox SOC Insights",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Infoblox SOC Get Open Insights API",
            "description": "Leverages the Infoblox SOC Insights API to ingest all Open/Active SOC Insights at time of run into the custom InfobloxInsight table. This playbook is scheduled to run on a daily basis.",
            "prerequisites": [
              "Infoblox SOC Insights API Key"
            ],
            "postDeployment": [
              "Authorize connections."
            ],
            "lastUpdateTime": "2024-04-03T00:00:00Z",
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "Infoblox-SOC-Get-Open-Insights-API",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox-SOC-Import-Indicators-TI Playbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Infoblox-SOC-Import-Indicators-TI",
              "type": "string"
            },
            "Entra ID Application Secret": {
              "type": "securestring",
              "metadata": {
                "description": "Enter value for Entra ID Application Secret"
              }
            },
            "Client ID": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Application (Client) ID"
              }
            },
            "Tenant ID": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Directory (Tenant) ID"
              }
            }
          },
          "variables": {
            "AzuremonitorlogsConnectionName": "[[concat('Azuremonitorlogs-', parameters('PlaybookName'))]",
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuremonitorlogs')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Entra ID Application Secret": {
                      "defaultValue": "[[parameters('Entra ID Application Secret')]",
                      "type": "securestring"
                    },
                    "Client ID": {
                      "defaultValue": "[[parameters('Client ID')]",
                      "type": "string"
                    },
                    "Tenant ID": {
                      "defaultValue": "[[parameters('Tenant ID')]",
                      "type": "string"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Filter_array_for_Object_GUID_Entity_(InsightID)": {
                      "runAfter": {
                        "Parse_Entities_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@body('Parse_Entities_JSON')",
                        "where": "@equals(item()?['kind'], 'SecurityGroup')"
                      }
                    },
                    "For_each_InsightID": {
                      "foreach": "@body('Filter_array_for_Object_GUID_Entity_(InsightID)')",
                      "actions": {
                        "For_each": {
                          "foreach": "@body('Parse_IPs')?['value']",
                          "actions": {
                            "Send_IPs_to_Sentinel": {
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "audience": "https://graph.microsoft.com",
                                  "clientId": "@parameters('Client ID')",
                                  "secret": "@parameters('Entra ID Application Secret')",
                                  "tenant": "@parameters('Tenant ID')",
                                  "type": "ActiveDirectoryOAuth"
                                },
                                "body": {
                                  "action": "alert",
                                  "additionalInformation": "Added via Infoblox SOC Insights",
                                  "description": "Infoblox - IP - @{items('For_each')?['InfobloxB1FeedName']}",
                                  "expirationDateTime": "@addDays(utcNow(), 14)",
                                  "externalId": "@{items('For_each')?['InfobloxInsightID']}",
                                  "indicatorProvider": "Infoblox SOC Insights",
                                  "lastReportedDateTime": "@items('For_each')?['LastSeen']",
                                  "networkIPv4": "@{items('For_each')?['ThreatIndicator']}",
                                  "tags": [
                                    "Feed: @{items('For_each')?['InfobloxB1FeedName']}",
                                    "FirstSeen: @{items('For_each')?['FirstSeen']}",
                                    "LastSeen: @{items('For_each')?['LastSeen']}",
                                    "Threat Confidence: @{items('For_each')?['ThreatConfidence']}",
                                    "Action: @{items('For_each')?['InfobloxB1PolicyAction']}",
                                    "Actor: @{items('For_each')?['ThreatActor']}",
                                    "Event Count: @{items('For_each')?['EventCount']}",
                                    "Threat Level: @{items('For_each')?['ThreatLevel']}",
                                    "IP"
                                  ],
                                  "targetProduct": "Azure Sentinel",
                                  "threatType": "WatchList",
                                  "tlpLevel": "white"
                                },
                                "method": "POST",
                                "uri": "https://graph.microsoft.com/beta/security/tiIndicators"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_IPs": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "For_each_Domain": {
                          "foreach": "@body('Parse_Domains')?['value']",
                          "actions": {
                            "Send_Domains_to_Sentinel": {
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "audience": "https://graph.microsoft.com",
                                  "clientId": "@parameters('Client ID')",
                                  "secret": "@parameters('Entra ID Application Secret')",
                                  "tenant": "@parameters('Tenant ID')",
                                  "type": "ActiveDirectoryOAuth"
                                },
                                "body": {
                                  "action": "alert",
                                  "additionalInformation": "Added via Infoblox SOC Insights",
                                  "description": "Infoblox - HOST - @{items('For_each_Domain')?['InfobloxB1FeedName']}",
                                  "domainName": "@{items('For_each_Domain')?['ThreatIndicator']}",
                                  "expirationDateTime": "@addDays(utcNow(), 14)",
                                  "externalId": "@{items('For_each_Domain')?['InfobloxInsightID']}",
                                  "indicatorProvider": "Infoblox SOC Insights",
                                  "lastReportedDateTime": "@items('For_each_Domain')?['LastSeen']",
                                  "tags": [
                                    "Feed: @{items('For_each_Domain')?['InfobloxB1FeedName']}",
                                    "FirstSeen: @{items('For_each_Domain')?['FirstSeen']}",
                                    "LastSeen: @{items('For_each_Domain')?['LastSeen']}",
                                    "Threat Confidence: @{items('For_each_Domain')?['ThreatConfidence']}",
                                    "Action: @{items('For_each_Domain')?['InfobloxB1PolicyAction']}",
                                    "Actor: @{items('For_each_Domain')?['ThreatActor']}",
                                    "Event Count: @{items('For_each_Domain')?['EventCount']}",
                                    "Threat Level: @{items('For_each_Domain')?['ThreatLevel']}",
                                    "HOST"
                                  ],
                                  "targetProduct": "Azure Sentinel",
                                  "threatType": "WatchList",
                                  "tlpLevel": "white"
                                },
                                "method": "POST",
                                "uri": "https://graph.microsoft.com/beta/security/tiIndicators"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_Domains": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Get_Domains": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "query": "InfobloxInsightIndicators\n| where InfobloxInsightID == \"@{items('For_each_InsightID')?['properties']?['objectGuid']}\"\n| where isIP == false\n| summarize arg_max(TimeGenerated, *) by ThreatIndicator",
                              "timerange": {
                                "relativeTimeRange": "Last 7 days"
                              },
                              "timerangetype": "2"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/queryDataV2",
                            "queries": {
                              "resourcegroups": "TME-RG",
                              "resourcename": "TME-Workspace",
                              "resourcetype": "Log Analytics Workspace",
                              "subscriptions": "be1e61b7-8dbe-4986-a9c2-d85f65524d6e"
                            }
                          }
                        },
                        "Get_IPs": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "query": "InfobloxInsightIndicators\n| where InfobloxInsightID == \"@{items('For_each_InsightID')?['properties']?['objectGuid']}\"\n| where isIP == true\n| summarize arg_max(TimeGenerated, *) by ThreatIndicator",
                              "timerange": {
                                "relativeTimeRange": "Last 7 days"
                              },
                              "timerangetype": "2"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/queryDataV2",
                            "queries": {
                              "resourcegroups": "TME-RG",
                              "resourcename": "TME-Workspace",
                              "resourcetype": "Log Analytics Workspace",
                              "subscriptions": "be1e61b7-8dbe-4986-a9c2-d85f65524d6e"
                            }
                          }
                        },
                        "Parse_Domains": {
                          "runAfter": {
                            "Get_Domains": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_Domains')",
                            "schema": {
                              "properties": {
                                "value": {
                                  "items": {
                                    "properties": {
                                      "Computer": {
                                        "type": "string"
                                      },
                                      "DestinationDnsDomain": {
                                        "type": "string"
                                      },
                                      "EventCount": {
                                        "type": "integer"
                                      },
                                      "FirstSeen": {
                                        "type": "string"
                                      },
                                      "InfobloxB1FeedName": {
                                        "type": "string"
                                      },
                                      "InfobloxB1PolicyAction": {
                                        "type": "string"
                                      },
                                      "InfobloxInsightID": {
                                        "type": "string"
                                      },
                                      "InfobloxInsightLogType": {
                                        "type": "string"
                                      },
                                      "LastSeen": {
                                        "type": "string"
                                      },
                                      "MG": {
                                        "type": "string"
                                      },
                                      "ManagementGroupName": {
                                        "type": "string"
                                      },
                                      "RawData": {
                                        "type": "string"
                                      },
                                      "SourceMACAddress": {
                                        "type": "string"
                                      },
                                      "SourceSystem": {
                                        "type": "string"
                                      },
                                      "TenantId": {
                                        "type": "string"
                                      },
                                      "ThreatActor": {
                                        "type": "string"
                                      },
                                      "ThreatConfidence": {
                                        "type": "string"
                                      },
                                      "ThreatIndicator": {
                                        "type": "string"
                                      },
                                      "ThreatLevel": {
                                        "type": "string"
                                      },
                                      "TimeGenerated": {
                                        "type": "string"
                                      },
                                      "Type": {
                                        "type": "string"
                                      },
                                      "isIP": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": "[variables('TemplateEmptyArray')]",
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Parse_IPs": {
                          "runAfter": {
                            "Get_IPs": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_IPs')",
                            "schema": {
                              "properties": {
                                "value": {
                                  "items": {
                                    "properties": {
                                      "Computer": {
                                        "type": "string"
                                      },
                                      "DestinationDnsDomain": {
                                        "type": "string"
                                      },
                                      "EventCount": {
                                        "type": "integer"
                                      },
                                      "FirstSeen": {
                                        "type": "string"
                                      },
                                      "InfobloxB1FeedName": {
                                        "type": "string"
                                      },
                                      "InfobloxB1PolicyAction": {
                                        "type": "string"
                                      },
                                      "InfobloxInsightID": {
                                        "type": "string"
                                      },
                                      "InfobloxInsightLogType": {
                                        "type": "string"
                                      },
                                      "LastSeen": {
                                        "type": "string"
                                      },
                                      "MG": {
                                        "type": "string"
                                      },
                                      "ManagementGroupName": {
                                        "type": "string"
                                      },
                                      "RawData": {
                                        "type": "string"
                                      },
                                      "SourceMACAddress": {
                                        "type": "string"
                                      },
                                      "SourceSystem": {
                                        "type": "string"
                                      },
                                      "TenantId": {
                                        "type": "string"
                                      },
                                      "ThreatActor": {
                                        "type": "string"
                                      },
                                      "ThreatConfidence": {
                                        "type": "string"
                                      },
                                      "ThreatIndicator": {
                                        "type": "string"
                                      },
                                      "ThreatLevel": {
                                        "type": "string"
                                      },
                                      "TimeGenerated": {
                                        "type": "string"
                                      },
                                      "Type": {
                                        "type": "string"
                                      },
                                      "isIP": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": "[variables('TemplateEmptyArray')]",
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Filter_array_for_Object_GUID_Entity_(InsightID)": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Parse_Entities_JSON": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "schema": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "properties": {
                                "properties": {
                                  "friendlyName": {
                                    "type": "string"
                                  },
                                  "objectGuid": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "required": "[variables('TemplateEmptyArray')]",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                        "connectionName": "[[variables('AzuremonitorlogsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuremonitorlogs')]"
                      },
                      "azuresentinel_1": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Infoblox-SOC-Import-Indicators-TI",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzuremonitorlogsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzuremonitorlogsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox SOC Insights",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Infoblox",
                  "tier": "Partner",
                  "link": "https://support.infoblox.com/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Infoblox SOC Import Indicators TI",
            "description": "Imports each Indicator of a Microsoft Sentinel Incident triggered by an Infoblox SOC Insight into the ThreatIntelligenceIndicator table. You must run the Infoblox-SOC-Get-Insight-Details playbook on a SOC Insight Incident before running this playbook.",
            "prerequisites": [
              "1. Entra ID Application Secret",
              "2. Client ID",
              "3. Tenant ID"
            ],
            "postDeployment": [
              "1. Grant playbook's Managed Identity **Microsoft Sentinel Responder** or greater to Resource Group.",
              "2. Authorize connections."
            ],
            "lastUpdateTime": "2024-04-03T00:00:00Z",
            "entities": [
              "SecurityGroup"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId3')]",
        "contentKind": "Playbook",
        "displayName": "Infoblox-SOC-Import-Indicators-TI",
        "contentProductId": "[variables('_playbookcontentProductId3')]",
        "id": "[variables('_playbookcontentProductId3')]",
        "version": "[variables('playbookVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.2",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Infoblox SOC Insights",
        "publisherDisplayName": "Infoblox",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Infoblox%20SOC%20Insights/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://www.infoblox.com/\">Infoblox</a> SOC Insights solution allows you to easily connect your Infoblox BloxOne SOC Insights data with Microsoft Sentinel. By connecting your logs to Microsoft Sentinel, you can take advantage of search &amp; correlation, alerting, and threat intelligence enrichment for each log.</p>\n<p>This solution is dependent on the Common Event Format solution containing the CEF via AMA connector to collect the logs. The CEF solution will be installed as part of this solution installation.</p>\n<p><strong>NOTE:</strong> Microsoft recommends installation of CEF via AMA Connector. The existing connectors are about to be deprecated by <strong>Aug 31, 2024</strong>.</p>\n<p><strong>Data Connectors:</strong> 3, <strong>Parsers:</strong> 6, <strong>Workbooks:</strong> 1, <strong>Analytic Rules:</strong> 2, <strong>Playbooks:</strong> 3</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/infoblox_logo.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox SOC Insights",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Infoblox",
          "tier": "Partner",
          "link": "https://support.infoblox.com/"
        },
        "dependencies": {
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId2')]",
              "version": "[variables('dataConnectorVersion2')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId3')]",
              "version": "[variables('dataConnectorVersion3')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject3').parserContentId3]",
              "version": "[variables('parserObject3').parserVersion3]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject4').parserContentId4]",
              "version": "[variables('parserObject4').parserVersion4]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject5').parserContentId5]",
              "version": "[variables('parserObject5').parserVersion5]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject6').parserContentId6]",
              "version": "[variables('parserObject6').parserVersion6]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Infoblox-SOC-Get-Insight-Details')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Infoblox-SOC-Get-Open-Insights-API')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Infoblox-SOC-Import-Indicators-TI')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-commoneventformat"
            }
          ]
        },
        "firstPublishDate": "2024-03-06",
        "providers": [
          "Infoblox"
        ],
        "categories": {
          "domains": [
            "Networking",
            "Security - Threat Protection",
            "Security - Network",
            "Security - Threat Intelligence"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
