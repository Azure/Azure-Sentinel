id: fa3baaab-10b6-452c-9d07-76aa3f1c592e
Function:
  Title: Parser for Cloudflare
  Version: '1.0.0'
  LastUpdated: '2023-08-23'
Category: Microsoft Sentinel Parser
FunctionName: Cloudflare
FunctionAlias: Cloudflare
FunctionQuery: |
  let Cloudflare_view = view() {
    Cloudflare_CL
    | extend
        ClientDeviceType = tostring(column_ifexists("ClientDeviceType_s", column_ifexists("Source_s", ""))),
        TlsCipher = tostring(column_ifexists("ClientSSLCipher_s", column_ifexists("ClientTlsCipher_s", ""))),
        TlsVersion = tostring(column_ifexists("ClientSSLProtocol_s", column_ifexists("ClientTlsProtocol_s", ""))),
        DvcAction = tostring(column_ifexists("FirewallMatchesActions_s", column_ifexists("Event_s", column_ifexists("Action_s", "")))),
        NetworkRuleName = tostring(column_ifexists("FirewallMatchesRuleIDs_s", column_ifexists("RuleID_s", ""))),
        SrcBytes = toint(column_ifexists("ClientRequestBytes_d", column_ifexists("ClientBytes_d", ""))),
        SrcPortNumber = toint(column_ifexists("ClientSrcPort_d", column_ifexists("ClientPort_d", ""))),
        DstBytes = toint(column_ifexists("EdgeResponseBytes_d", column_ifexists("OriginBytes_d", ""))),
        BotScore = toint(column_ifexists("BotScore_d", "")),
        BotScoreSrc = tostring(column_ifexists("BotScoreSrc_s", "")),
        CacheCacheStatus = tostring(column_ifexists("CacheCacheStatus_s", "")),
        CacheResponseBytes = toint(column_ifexists("CacheResponseBytes_d", "")),
        CacheResponseStatus = toint(column_ifexists("CacheResponseStatus_d", "")),
        CacheTieredFill = tobool(column_ifexists("CacheTieredFill_b", "")),
        ClientASN = toint(column_ifexists("ClientASN_d", "")),
        SrcGeoCountry = tostring(column_ifexists("ClientCountry_s", "")),
        SrcIpAddr = tostring(column_ifexists("ClientIP_s", "")),
        ClientIPClass = tostring(column_ifexists("ClientIPClass_s", "")),
        HttpRequestHeaderHost = tostring(column_ifexists("ClientRequestHost_s", "")),
        HttpRequestMethod = tostring(column_ifexists("ClientRequestMethod_s", "")),
        ClientRequestPath = tostring(column_ifexists("ClientRequestPath_s", "")),
        ClientRequestProtocol = tostring(column_ifexists("ClientRequestProtocol_s", "")),
        HttpReferrerOriginal = tostring(column_ifexists("ClientRequestReferer_s", "")),
        ClientRequestURI = tostring(column_ifexists("ClientRequestURI_s", "")),
        HttpUserAgentOriginal = tostring(column_ifexists("ClientRequestUserAgent_s", "")),
        ClientXRequestedWith = tostring(column_ifexists("ClientXRequestedWith_s", "")),
        EdgeColoCode = tostring(column_ifexists("EdgeColoCode_s", "")),
        EdgeColoID = toint(column_ifexists("EdgeColoID_d", "")),
        EdgeEndTimestamp = todatetime(column_ifexists("EdgeEndTimestamp_t", "")),
        EdgePathingOp = tostring(column_ifexists("EdgePathingOp_s", "")),
        EdgePathingSrc = tostring(column_ifexists("EdgePathingSrc_s", "")),
        EdgePathingStatus = tostring(column_ifexists("EdgePathingStatus_s", "")),
        EdgeRateLimitAction = tostring(column_ifexists("EdgeRateLimitAction_s", "")),
        EdgeRateLimitID = toint(column_ifexists("EdgeRateLimitID_d", "")),
        EdgeRequestHost = tostring(column_ifexists("EdgeRequestHost_s", "")),
        EdgeResponseCompressionRatio = toint(column_ifexists("EdgeResponseCompressionRatio_d", "")),
        HttpContentType = tostring(column_ifexists("EdgeResponseContentType_s", "")),
        EdgeResponseStatus = toint(column_ifexists("EdgeResponseStatus_d", "")),
        EdgeServerIP = tostring(column_ifexists("EdgeServerIP_s", "")),
        EdgeStartTimestamp = todatetime(column_ifexists("EdgeStartTimestamp_t", "")),
        FirewallMatchesSources = tostring(column_ifexists("FirewallMatchesSources_s", "")),
        DstIpAddr = tostring(column_ifexists("OriginIP_s", "")),
        OriginResponseBytes = toint(column_ifexists("OriginResponseBytes_d", "")),
        OriginResponseHTTPExpires = tostring(column_ifexists("OriginResponseHTTPExpires_s", "")),
        OriginResponseHTTPLastModified = tostring(column_ifexists("OriginResponseHTTPLastModified_s", "")),
        HttpStatusCode = toint(column_ifexists("OriginResponseStatus_d", "")),
        OriginResponseTime = toint(column_ifexists("OriginResponseTime_d", "")),
        OriginSSLProtocol = tostring(column_ifexists("OriginSSLProtocol_s", "")),
        ParentRayID = tostring(column_ifexists("ParentRayID_s", "")),
        RayID = tostring(column_ifexists("RayID_s", "")),
        SecurityLevel = tostring(column_ifexists("SecurityLevel_s", "")),
        WAFAction = tostring(column_ifexists("WAFAction_s", "")),
        WAFFlags = tostring(column_ifexists("WAFFlags_s", "")),
        WAFMatchedVar = tostring(column_ifexists("WAFMatchedVar_s", "")),
        WAFProfile = tostring(column_ifexists("WAFProfile_s", "")),
        WAFRuleID = tostring(column_ifexists("WAFRuleID_s", "")),
        WAFRuleMessage = tostring(column_ifexists("WAFRuleMessage_s", "")),
        WorkerCPUTime = toint(column_ifexists("WorkerCPUTime_d", "")),
        WorkerStatus = tostring(column_ifexists("WorkerStatus_s", "")),
        WorkerSubrequest = tobool(column_ifexists("WorkerSubrequest_b", "")),
        WorkerSubrequestCount = toint(column_ifexists("WorkerSubrequestCount_d", "")),
        ZoneID = toint(column_ifexists("ZoneID_d", "")),
        Application = tostring(column_ifexists("Application_s", "")),
        ClientMatchedIpFirewall = tostring(column_ifexists("ClientMatchedIpFirewall_s", "")),
        NetworkProtocol = tostring(column_ifexists("ClientProto_s", "")),
        ClientTcpRtt = toint(column_ifexists("ClientTcpRtt_d", "")),
        ClientTlsClientHelloServerName = tostring(column_ifexists("ClientTlsClientHelloServerName_s", "")),
        ClientTlsStatus = tostring(column_ifexists("ClientTlsStatus_s", "")),
        ColoCode = tostring(column_ifexists("ColoCode_s", "")),
        ConnectTimestamp = todatetime(column_ifexists("ConnectTimestamp_t", "")),
        DisconnectTimestamp = todatetime(column_ifexists("DisconnectTimestamp_t", "")),
        IpFirewall = tobool(column_ifexists("IpFirewall_b", "")),
        DstPortNumber = toint(column_ifexists("OriginPort_d", "")),
        OriginProto = tostring(column_ifexists("OriginProto_s", "")),
        OriginTcpRtt = toint(column_ifexists("OriginTcpRtt_d", "")),
        OriginTlsCipher = tostring(column_ifexists("OriginTlsCipher_s", "")),
        OriginTlsFingerprint = tostring(column_ifexists("OriginTlsFingerprint_s", "")),
        OriginTlsMode = tostring(column_ifexists("OriginTlsMode_s", "")),
        OriginTlsProtocol = tostring(column_ifexists("OriginTlsProtocol_s", "")),
        OriginTlsStatus = tostring(column_ifexists("OriginTlsStatus_s", "")),
        ProxyProtocol = tostring(column_ifexists("ProxyProtocol_s", "")),
        EventResult = toint(column_ifexists("Status_d", "")),
        Timestamp = todatetime(column_ifexists("Timestamp_t", "")),
        ClientASNDescription = tostring(column_ifexists("ClientASNDescription_s", "")),
        ClientRefererHost = tostring(column_ifexists("ClientRefererHost_s", "")),
        ClientRefererPath = tostring(column_ifexists("ClientRefererPath_s", "")),
        ClientRefererQuery = tostring(column_ifexists("ClientRefererQuery_s", "")),
        ClientRefererScheme = tostring(column_ifexists("ClientRefererScheme_s", "")),
        ClientRequestQuery = tostring(column_ifexists("ClientRequestQuery_s", "")),
        ClientRequestScheme = tostring(column_ifexists("ClientRequestScheme_s", "")),
        Datetime = todatetime(column_ifexists("Datetime_t", "")),
        EventSubType = tostring(column_ifexists("Kind_s", "")),
        MatchIndex = toint(column_ifexists("MatchIndex_d", "")),
        OriginatorRayID = tostring(column_ifexists("OriginatorRayID_s", "")),
        TimeGenerated = column_ifexists('TimeGenerated', '')
  };
  let Cloudflarev2_view = view() {
    CloudflareV2_CL
    | extend
        ClientDeviceType = tostring(column_ifexists("ClientDeviceType", column_ifexists("Source", ""))),
        TlsCipher = tostring(column_ifexists("ClientSSLCipher", column_ifexists("ClientTlsCipher", ""))),
        TlsVersion = tostring(column_ifexists("ClientSSLProtocol", column_ifexists("ClientTlsProtocol", ""))),
        DvcAction = tostring(column_ifexists("FirewallMatchesActions", column_ifexists("Event", column_ifexists("Action", "")))),
        NetworkRuleName = tostring(column_ifexists("FirewallMatchesRuleIDs", column_ifexists("RuleID", ""))),
        SrcBytes = toint(column_ifexists("ClientRequestBytes", column_ifexists("ClientBytes", ""))),
        SrcPortNumber = toint(column_ifexists("ClientSrcPort", column_ifexists("ClientPort", ""))),
        DstBytes = toint(column_ifexists("EdgeResponseBytes", column_ifexists("OriginBytes", ""))),
        BotScore = toint(column_ifexists("BotScore", "")),
        BotScoreSrc = tostring(column_ifexists("BotScoreSrc", "")),
        CacheCacheStatus = tostring(column_ifexists("CacheCacheStatus", "")),
        CacheResponseBytes = toint(column_ifexists("CacheResponseBytes", "")),
        CacheResponseStatus = toint(column_ifexists("CacheResponseStatus", "")),
        CacheTieredFill = tobool(column_ifexists("CacheTieredFill", "")),
        ClientASN = toint(column_ifexists("ClientASN", "")),
        SrcGeoCountry = tostring(column_ifexists("ClientCountry", "")),
        SrcIpAddr = tostring(column_ifexists("ClientIP", "")),
        ClientIPClass = tostring(column_ifexists("ClientIPClass", "")),
        HttpRequestHeaderHost = tostring(column_ifexists("ClientRequestHost", "")),
        HttpRequestMethod = tostring(column_ifexists("ClientRequestMethod", "")),
        ClientRequestPath = tostring(column_ifexists("ClientRequestPath", "")),
        ClientRequestProtocol = tostring(column_ifexists("ClientRequestProtocol", "")),
        HttpReferrerOriginal = tostring(column_ifexists("ClientRequestReferer", "")),
        ClientRequestURI = tostring(column_ifexists("ClientRequestURI", "")),
        HttpUserAgentOriginal = tostring(column_ifexists("ClientRequestUserAgent", "")),
        ClientXRequestedWith = tostring(column_ifexists("ClientXRequestedWith", "")),
        EdgeColoCode = tostring(column_ifexists("EdgeColoCode", "")),
        EdgeColoID = toint(column_ifexists("EdgeColoID", "")),
        EdgeEndTimestamp = todatetime(column_ifexists("EdgeEndTimestamp", "")),
        EdgePathingOp = tostring(column_ifexists("EdgePathingOp", "")),
        EdgePathingSrc = tostring(column_ifexists("EdgePathingSrc", "")),
        EdgePathingStatus = tostring(column_ifexists("EdgePathingStatus", "")),
        EdgeRateLimitAction = tostring(column_ifexists("EdgeRateLimitAction", "")),
        EdgeRateLimitID = toint(column_ifexists("EdgeRateLimitID", "")),
        EdgeRequestHost = tostring(column_ifexists("EdgeRequestHost", "")),
        EdgeResponseCompressionRatio = toint(column_ifexists("EdgeResponseCompressionRatio", "")),
        HttpContentType = tostring(column_ifexists("EdgeResponseContentType", "")),
        EdgeResponseStatus = toint(column_ifexists("EdgeResponseStatus", "")),
        EdgeServerIP = tostring(column_ifexists("EdgeServerIP", "")),
        EdgeStartTimestamp = todatetime(column_ifexists("EdgeStartTimestamp", "")),
        FirewallMatchesSources = tostring(column_ifexists("FirewallMatchesSources", "")),
        DstIpAddr = tostring(column_ifexists("OriginIP", "")),
        OriginResponseBytes = toint(column_ifexists("OriginResponseBytes", "")),
        OriginResponseHTTPExpires = tostring(column_ifexists("OriginResponseHTTPExpires", "")),
        OriginResponseHTTPLastModified = tostring(column_ifexists("OriginResponseHTTPLastModified", "")),
        HttpStatusCode = toint(column_ifexists("OriginResponseStatus", "")),
        OriginResponseTime = toint(column_ifexists("OriginResponseTime", "")),
        OriginSSLProtocol = tostring(column_ifexists("OriginSSLProtocol", "")),
        ParentRayID = tostring(column_ifexists("ParentRayID", "")),
        RayID = tostring(column_ifexists("RayID", "")),
        SecurityLevel = tostring(column_ifexists("SecurityLevel", "")),
        WAFAction = tostring(column_ifexists("WAFAction", "")),
        WAFFlags = tostring(column_ifexists("WAFFlags", "")),
        WAFMatchedVar = tostring(column_ifexists("WAFMatchedVar", "")),
        WAFProfile = tostring(column_ifexists("WAFProfile", "")),
        WAFRuleID = tostring(column_ifexists("WAFRuleID", "")),
        WAFRuleMessage = tostring(column_ifexists("WAFRuleMessage", "")),
        WorkerCPUTime = toint(column_ifexists("WorkerCPUTime", "")),
        WorkerStatus = tostring(column_ifexists("WorkerStatus", "")),
        WorkerSubrequest = tobool(column_ifexists("WorkerSubrequest", "")),
        WorkerSubrequestCount = toint(column_ifexists("WorkerSubrequestCount", "")),
        ZoneID = toint(column_ifexists("ZoneID", "")),
        Application = tostring(column_ifexists("Application", "")),
        ClientMatchedIpFirewall = tostring(column_ifexists("ClientMatchedIpFirewall", "")),
        NetworkProtocol = tostring(column_ifexists("ClientProto", "")),
        ClientTcpRtt = toint(column_ifexists("ClientTcpRtt", "")),
        ClientTlsClientHelloServerName = tostring(column_ifexists("ClientTlsClientHelloServerName", "")),
        ClientTlsStatus = tostring(column_ifexists("ClientTlsStatus", "")),
        ColoCode = tostring(column_ifexists("ColoCode", "")),
        ConnectTimestamp = todatetime(column_ifexists("ConnectTimestamp", "")),
        DisconnectTimestamp = todatetime(column_ifexists("DisconnectTimestamp", "")),
        IpFirewall = tobool(column_ifexists("IpFirewall", "")),
        DstPortNumber = toint(column_ifexists("OriginPort", "")),
        OriginProto = tostring(column_ifexists("OriginProto", "")),
        OriginTcpRtt = toint(column_ifexists("OriginTcpRtt", "")),
        OriginTlsCipher = tostring(column_ifexists("OriginTlsCipher", "")),
        OriginTlsFingerprint = tostring(column_ifexists("OriginTlsFingerprint", "")),
        OriginTlsMode = tostring(column_ifexists("OriginTlsMode", "")),
        OriginTlsProtocol = tostring(column_ifexists("OriginTlsProtocol", "")),
        OriginTlsStatus = tostring(column_ifexists("OriginTlsStatus", "")),
        ProxyProtocol = tostring(column_ifexists("ProxyProtocol", "")),
        EventResult = toint(column_ifexists("Status", "")),
        Timestamp = todatetime(column_ifexists("Timestamp", "")),
        ClientASNDescription = tostring(column_ifexists("ClientASNDescription", "")),
        ClientRefererHost = tostring(column_ifexists("ClientRefererHost", "")),
        ClientRefererPath = tostring(column_ifexists("ClientRefererPath", "")),
        ClientRefererQuery = tostring(column_ifexists("ClientRefererQuery", "")),
        ClientRefererScheme = tostring(column_ifexists("ClientRefererScheme", "")),
        ClientRequestQuery = tostring(column_ifexists("ClientRequestQuery", "")),
        ClientRequestScheme = tostring(column_ifexists("ClientRequestScheme", "")),
        Datetime = todatetime(column_ifexists("Datetime", "")),
        EventSubType = tostring(column_ifexists("Kind", "")),
        MatchIndex = toint(column_ifexists("MatchIndex", "")),
        OriginatorRayID = tostring(column_ifexists("OriginatorRayID", "")),
        TimeGenerated = column_ifexists('TimeGenerated', '')
  };
  union isfuzzy=true (Cloudflare_view), (Cloudflarev2_view)
    | project ClientDeviceType, TlsCipher, DvcAction, TlsVersion, NetworkRuleName, SrcBytes, SrcPortNumber, DstBytes, BotScore, BotScoreSrc, CacheCacheStatus, CacheResponseBytes, CacheResponseStatus, CacheTieredFill, ClientASN, SrcGeoCountry, SrcIpAddr, ClientIPClass, HttpRequestHeaderHost, HttpRequestMethod, ClientRequestPath, ClientRequestProtocol, HttpReferrerOriginal, ClientRequestURI, HttpUserAgentOriginal, ClientXRequestedWith, EdgeColoCode, EdgeColoID, EdgeEndTimestamp, EdgePathingOp, EdgePathingSrc, EdgePathingStatus, EdgeRateLimitAction, EdgeRateLimitID, EdgeRequestHost, EdgeResponseCompressionRatio, HttpContentType, EdgeResponseStatus, EdgeServerIP, EdgeStartTimestamp, FirewallMatchesSources, DstIpAddr, OriginResponseBytes, OriginResponseHTTPExpires, OriginResponseHTTPLastModified, HttpStatusCode, OriginResponseTime, OriginSSLProtocol, ParentRayID, RayID, SecurityLevel, WAFAction, WAFFlags, WAFMatchedVar, WAFProfile, WAFRuleID, WAFRuleMessage, WorkerCPUTime, WorkerStatus, WorkerSubrequest, WorkerSubrequestCount, ZoneID, Application, ClientMatchedIpFirewall, NetworkProtocol, ClientTcpRtt, ClientTlsClientHelloServerName, ClientTlsStatus, ColoCode, ConnectTimestamp, DisconnectTimestamp, IpFirewall, DstPortNumber, OriginProto, OriginTcpRtt, OriginTlsCipher, OriginTlsFingerprint, OriginTlsMode, OriginTlsProtocol, OriginTlsStatus, ProxyProtocol, EventResult, Timestamp, ClientASNDescription, ClientRefererHost, ClientRefererPath, ClientRefererQuery, ClientRefererScheme, ClientRequestQuery, ClientRequestScheme, Datetime, EventSubType, MatchIndex, OriginatorRayID, TimeGenerated