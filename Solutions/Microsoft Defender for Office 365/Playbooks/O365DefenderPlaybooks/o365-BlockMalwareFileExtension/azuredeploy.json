{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "title": "O365 - Block Malware file extensions",
    "description": "This Playbook Provides the automation on blocking the suspicious/malicious file attachment on mails",
    "prerequisites": [
      "1. Prior to the deployment of this playbook, Defender for office 365 Custom Connector needs to be deployed under the same subscription.",
      "2. Refer to [Defender for office 365 Logic App Custom Connector](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Defender%20for%20Office%20365/Playbooks/CustomConnector/O365_Defender_FunctionAppConnector/readme.md) documentation for deployment instructions."
    ],
    "postDeployment": [
      "1. Authorize each connection.",
      "2. Configure Playbook in Microsoft Sentinel Analytic Rule.",
      "3. Assign Microsoft Sentinel Responder Role to Playbook.",
      "6. Check readme.md for detailed instructions."
    ],
    "prerequisitesDeployTemplateFile": "../../CustomConnector/O365_Defender_FunctionAppConnector/azuredeploy.json",
    "lastUpdateTime": "2023-06-18T12:00:00.000Z",
    "entities": [],
    "tags": [ "Malware", "o365", "File" ],
    "support": {
      "tier": "Microsoft"
    },
    "author": {
      "name": "Microsoft"
    }
  },
  "parameters": {
    "PlaybookName": {
      "defaultValue": "o365-BlockMalwareFileExtension",
      "type": "string"
    },
    "Applicationid": {
      "type": "string",
      "metadata": {
        "description": "Enter value for Applicationid"
      }
    },
    "MalwarePolicyName": {
      "type": "string",
      "metadata": {
        "description": "Enter value for MalwarePolicyName"
      }
    },
    "OrganizationName": {
      "type": "string",
      "metadata": {
        "description": "Enter value for OrganizationName"
      }
    },
    "Keyvault name": {
      "type": "String",
      "metadata": {
        "description": "Enter the key vault name where certificate thumbprint is stored"
      }
    },
    "Certificate_key_name": {
      "type": "string",
      "metadata": {
        "description": "Your Key name for the thumbprint secret stored in keyvault under secrets"
      }
    },
    "FunctionsAppName": {
      "defaultValue": "o365def",
      "type": "string",
      "metadata": {
        "description": "Name of the FunctionsApp custom connector, if you want to change the default name, make sure to use the same in all o365 automation playbooks as well"
      }
    }
  },
  "variables": {
    "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
    "FunctionsAppName": "[concat(parameters('FunctionsAppName'), uniqueString(resourceGroup().id))]",
    "o365FuntionsAppId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('FunctionsAppName'))]",
    "KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "properties": {
        "provisioningState": "Succeeded",
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "Applicationid": {
              "type": "string",
              "defaultValue": "[parameters('Applicationid')]"
            },
            "Certificate_key_name": {
              "type": "string",
              "defaultValue": "[parameters('Certificate_key_name')]"
            },
            "MalwarePolicyName": {
              "type": "string",
              "defaultValue": "[parameters('MalwarePolicyName')]"
            },
            "OrganizationName": {
              "type": "string",
              "defaultValue": "[parameters('OrganizationName')]"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Condition_-_check_if_filtered_list_has_any_extension": {
              "actions": {
                "Add_comment_to_incident_(V3)": {
                  "runAfter": {
                    "BlockMalwareFileExtension": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "incidentArmId": "@triggerBody()?['object']?['id']",
                      "message": "<p>Malicious extensions mentioned below are blocked :<br>\n@{variables('filteredextension')}<br>\n</p>"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Incidents/Comment"
                  }
                },
                "BlockMalwareFileExtension": {
                  "runAfter": {},
                  "type": "Function",
                  "inputs": {
                    "body": {
                      "FileExtensions": "@variables('filteredextension')",
                      "MalwarePolicyName": "@parameters('MalwarePolicyName')"
                    },
                    "function": {
                      "id": "[concat(variables('o365FuntionsAppId'), '/functions/BlockMalwareFileExtension')]"
                    }
                  }
                }
              },
              "runAfter": {
                "For_each_-_filtering_malicious_extension": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "Add_comment_to_incident_(V3)_2": {
                    "runAfter": {},
                    "type": "ApiConnection",
                    "inputs": {
                      "body": {
                        "incidentArmId": "@triggerBody()?['object']?['id']",
                        "message": "<p>Provided extensions are already blocked or may be no extension provided</p>"
                      },
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                        }
                      },
                      "method": "post",
                      "path": "/Incidents/Comment"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "greater": [
                      "@length(variables('filteredextension'))",
                      0
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "ConnectExchangeOnline": {
              "runAfter": {
                "For_each_-_fetching_extension_from_malicious_files": [
                  "Succeeded"
                ]
              },
              "type": "Function",
              "inputs": {
                "body": {
                  "ApplicationId": "@parameters('Applicationid')",
                  "CertificateThumbPrint": "@body('Get_secret')?['value']",
                  "OrganizationName": "@parameters('OrganizationName')"
                },
                "function": {
                  "id": "[concat(variables('o365FuntionsAppId'), '/functions/ConnectExchangeOnline')]"
                }
              }
            },
            "DisconnectExchangeOnline": {
              "runAfter": {
                "Condition_-_check_if_filtered_list_has_any_extension": [
                  "Succeeded"
                ]
              },
              "type": "Function",
              "inputs": {
                "body": {
                  "ApplicationId": "@parameters('Applicationid')",
                  "OrganizationName": "@parameters('OrganizationName')"
                },
                "function": {
                  "id": "[concat(variables('o365FuntionsAppId'), '/functions/DisconnectExchangeOnline')]"
                }
              }
            },
            "For_each_-_fetching_extension_from_malicious_files": {
              "foreach": "@body('Parse_JSON_-_Entities_for_file')",
              "actions": {
                "Condition": {
                  "actions": {
                    "Append_to_array_variable_-_storing_malicious_files_extensions_in_variable": {
                      "runAfter": {
                        "Compose": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "maliciousfilesextension",
                        "value": "@split(outputs('Compose'),'.')[1]"
                      }
                    },
                    "Compose": {
                      "runAfter": {},
                      "type": "Compose",
                      "inputs": "@items('For_each_-_fetching_extension_from_malicious_files')?['properties']?['fileName']"
                    }
                  },
                  "runAfter": {},
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@items('For_each_-_fetching_extension_from_malicious_files')['kind']",
                          "File"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "Parse_JSON_-_Entities_for_file": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "For_each_-_filtering_malicious_extension": {
              "foreach": "@variables('maliciousfilesextension')",
              "actions": {
                "Condition_2": {
                  "actions": {
                    "Append_to_array_variable": {
                      "runAfter": {},
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "filteredextension",
                        "value": "@items('For_each_-_filtering_malicious_extension')"
                      }
                    }
                  },
                  "runAfter": {},
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "contains": [
                            "@body('Parse_JSON_-_Result_of_List_Malware_Policy')?['FileTypes']",
                            "@items('For_each_-_filtering_malicious_extension')"
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "Parse_JSON_-_Result_of_List_Malware_Policy": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_secret": {
              "runAfter": {
                "Initialize_variable_-_filtered_malicious_extension": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent(parameters('Certificate_key_name'))}/value"
              }
            },
            "Initialize_variable_-_filtered_malicious_extension": {
              "runAfter": {
                "Initialize_variable_-_store_malicious_file_extensions_": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "filteredextension",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_variable_-_store_malicious_file_extensions_": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "maliciousfilesextension",
                    "type": "array"
                  }
                ]
              }
            },
            "ListMalwarePolicy": {
              "runAfter": {
                "ConnectExchangeOnline": [
                  "Succeeded"
                ]
              },
              "type": "Function",
              "inputs": {
                "body": {
                  "ApplicationId": "@parameters('Applicationid')",
                  "Identity": "@parameters('MalwarePolicyName')",
                  "OrganizationName": "@parameters('OrganizationName')"
                },
                "function": {
                  "id": "[concat(variables('o365FuntionsAppId'), '/functions/ListMalwarePolicy')]"
                }
              }
            },
            "Parse_JSON_-_Entities_for_file": {
              "runAfter": {
                "Get_secret": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "schema": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "properties": {
                          "fileName": {
                            "type": "string"
                          },
                          "friendlyName": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "kind",
                      "properties"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "Parse_JSON_-_Result_of_List_Malware_Policy": {
              "runAfter": {
                "ListMalwarePolicy": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@body('ListMalwarePolicy')",
                "schema": {
                  "properties": {
                    "AdminDisplayName": {
                      "type": "string"
                    },
                    "CustomExternalBody": {
                      "type": "string"
                    },
                    "CustomExternalSubject": {
                      "type": "string"
                    },
                    "CustomFromAddress": {
                      "type": "string"
                    },
                    "CustomFromName": {
                      "type": "string"
                    },
                    "CustomInternalBody": {
                      "type": "string"
                    },
                    "CustomInternalSubject": {
                      "type": "string"
                    },
                    "CustomNotifications": {
                      "type": "boolean"
                    },
                    "DistinguishedName": {
                      "type": "string"
                    },
                    "EnableExternalSenderAdminNotifications": {
                      "type": "boolean"
                    },
                    "EnableFileFilter": {
                      "type": "boolean"
                    },
                    "EnableInternalSenderAdminNotifications": {
                      "type": "boolean"
                    },
                    "ExchangeObjectId": {
                      "type": "string"
                    },
                    "ExchangeVersion": {
                      "type": "string"
                    },
                    "ExternalSenderAdminAddress": {
                      "type": "string"
                    },
                    "FileTypeAction": {
                      "type": "string"
                    },
                    "FileTypes": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "Guid": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    },
                    "Identity": {
                      "type": "string"
                    },
                    "InternalSenderAdminAddress": {
                      "type": "string"
                    },
                    "IsDefault": {
                      "type": "boolean"
                    },
                    "IsPolicyOverrideApplied": {
                      "type": "boolean"
                    },
                    "IsValid": {
                      "type": "boolean"
                    },
                    "Name": {
                      "type": "string"
                    },
                    "ObjectCategory": {
                      "type": "string"
                    },
                    "ObjectClass": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "ObjectState": {
                      "type": "string"
                    },
                    "OrganizationId": {
                      "type": "string"
                    },
                    "OrganizationalUnitRoot": {
                      "type": "string"
                    },
                    "OriginatingServer": {
                      "type": "string"
                    },
                    "QuarantineTag": {
                      "type": "string"
                    },
                    "RecommendedPolicyType": {
                      "type": "string"
                    },
                    "WhenChanged": {
                      "type": "string"
                    },
                    "WhenChangedUTC": {
                      "type": "string"
                    },
                    "WhenCreated": {
                      "type": "string"
                    },
                    "WhenCreatedUTC": {
                      "type": "string"
                    },
                    "ZapEnabled": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              },
              "keyvault": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                "connectionName": "[variables('KeyvaultConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        }
      },
      "name": "[parameters('PlaybookName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "tags": {
        "hidden-SentinelTemplateName": "o365-BlockMalwareFileExtension",
        "hidden-SentinelTemplateVersion": "1.0"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "apiVersion": "2017-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('MicrosoftSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('MicrosoftSentinelConnectionName')]",
        "customParameterValues": {},
        "parameterValueType": "Alternative",
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/Connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('KeyvaultConnectionName')]",
      "kind": "V1",
      "location": "[resourceGroup().location]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'keyvault')]",
          "type": "Microsoft.Web/locations/managedApis"
        },
        "parameterValueType": "Alternative",
        "alternativeParameterValues": {
          "vaultName": "[parameters('keyvault name')]"
        },
        "displayName": "[variables('KeyvaultConnectionName')]",
        "nonSecretParameterValues": {
          "vaultName": "[parameters('keyvault name')]"
        }
      }
    }
  ]
}
