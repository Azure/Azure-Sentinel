{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Microsoft Defender for Office 365"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Microsoft Defender For Office 365",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Microsoft Defender for Office 365",
    "_solutionVersion": "3.0.0",
    "solutionId": "azuresentinel.azure-sentinel-solution-microsoftdefenderforo365",
    "_solutionId": "[variables('solutionId')]",
    "uiConfigId1": "OfficeATP",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "OfficeATP",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "MicrosoftDefenderForOffice365",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "O365_Defender_FunctionAppConnector": "O365_Defender_FunctionAppConnector",
    "_O365_Defender_FunctionAppConnector": "[variables('O365_Defender_FunctionAppConnector')]",
    "TemplateEmptyArray": "[json('[]')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "O365_Defender_FunctionAppConnector",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-fa-',uniquestring(variables('_playbookContentId1'))))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','fa','-', uniqueString(concat(variables('_solutionId'),'-','AzureFunction','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "o365-BlockMalwareFileExtension": "o365-BlockMalwareFileExtension",
    "_o365-BlockMalwareFileExtension": "[variables('o365-BlockMalwareFileExtension')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "o365-BlockMalwareFileExtension",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "blanks": "[replace('b', 'b', '')]",
    "o365-BlockSender": "o365-BlockSender",
    "_o365-BlockSender": "[variables('o365-BlockSender')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "o365-BlockSender",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3'))))]",
    "_playbookcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId3'),'-', variables('playbookVersion3'))))]",
    "o365-BlockSender-EntityTrigger": "o365-BlockSender-EntityTrigger",
    "_o365-BlockSender-EntityTrigger": "[variables('o365-BlockSender-EntityTrigger')]",
    "playbookVersion4": "1.0",
    "playbookContentId4": "o365-BlockSender-EntityTrigger",
    "_playbookContentId4": "[variables('playbookContentId4')]",
    "playbookId4": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId4'))]",
    "playbookTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId4'))))]",
    "_playbookcontentProductId4": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId4'),'-', variables('playbookVersion4'))))]",
    "o365-BlockSpamDomain": "o365-BlockSpamDomain",
    "_o365-BlockSpamDomain": "[variables('o365-BlockSpamDomain')]",
    "playbookVersion5": "1.0",
    "playbookContentId5": "o365-BlockSpamDomain",
    "_playbookContentId5": "[variables('playbookContentId5')]",
    "playbookId5": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId5'))]",
    "playbookTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId5'))))]",
    "_playbookcontentProductId5": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId5'),'-', variables('playbookVersion5'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Microsoft Defender for Office 365 data connector with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "StaticUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Microsoft Defender for Office 365 (Preview)",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "Microsoft Defender for Office 365 safeguards your organization against malicious threats posed by email messages, links (URLs) and collaboration tools. By ingesting Microsoft Defender for Office 365 alerts into Microsoft Sentinel, you can incorporate information about email- and URL-based threats into your broader risk analysis and build response scenarios accordingly.\n \nThe following types of alerts will be imported:\n\n-   A potentially malicious URL click was detected \n-   Email messages containing malware removed after delivery\n-   Email messages containing phish URLs removed after delivery\n-   Email reported by user as malware or phish \n-   Suspicious email sending patterns detected \n-   User restricted from sending email \n\nThese alerts can be seen by Office customers in the ** Office Security and Compliance Center**.\n\nFor more information, see the [Microsoft Sentinel documentation](https://go.microsoft.com/fwlink/p/?linkid=2219942&wt.mc_id=sentinel_dataconnectordocs_content_cnl_csasci).",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "SecurityAlert (Office 365 Advanced Threat Protection)",
                      "baseQuery": "SecurityAlert\n| where ProviderName == \"OATP\""
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "SentinelKinds",
                      "value": [
                        "OfficeATP"
                      ]
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "SecurityAlert (OATP)",
                      "lastDataReceivedQuery": "SecurityAlert\n| where ProviderName == \"OATP\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender for Office 365",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Microsoft Defender for Office 365",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Microsoft Defender for Office 365",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "tier": "Microsoft",
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "link": "https://support.microsoft.com/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "StaticUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Microsoft Defender for Office 365 (Preview)",
          "publisher": "Microsoft",
          "descriptionMarkdown": "Microsoft Defender for Office 365 safeguards your organization against malicious threats posed by email messages, links (URLs) and collaboration tools. By ingesting Microsoft Defender for Office 365 alerts into Microsoft Sentinel, you can incorporate information about email- and URL-based threats into your broader risk analysis and build response scenarios accordingly.\n \nThe following types of alerts will be imported:\n\n-   A potentially malicious URL click was detected \n-   Email messages containing malware removed after delivery\n-   Email messages containing phish URLs removed after delivery\n-   Email reported by user as malware or phish \n-   Suspicious email sending patterns detected \n-   User restricted from sending email \n\nThese alerts can be seen by Office customers in the ** Office Security and Compliance Center**.\n\nFor more information, see the [Microsoft Sentinel documentation](https://go.microsoft.com/fwlink/p/?linkid=2219942&wt.mc_id=sentinel_dataconnectordocs_content_cnl_csasci).",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "SecurityAlert (Office 365 Advanced Threat Protection)",
              "baseQuery": "SecurityAlert\n| where ProviderName == \"OATP\""
            }
          ],
          "dataTypes": [
            {
              "name": "SecurityAlert (OATP)",
              "lastDataReceivedQuery": "SecurityAlert\n| where ProviderName == \"OATP\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "SentinelKinds",
              "value": [
                "OfficeATP"
              ]
            }
          ],
          "id": "[variables('_uiConfigId1')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MicrosoftDefenderForOffice365Workbook Workbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Gain insights into your Microsoft Defender for Office 365 raw data logs.  This workbook lets you look at trends in email senders, attachments and embedded URL data to find anomalies. You can also search by, sender, recipient, subject, attachment or embedded URL to find where the related messages have been sent."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Microsoft Defender for Office 365\\n---\\n\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Subscription}\"],\"parameters\":[{\"id\":\"6e647d99-1a32-4bca-8147-403b5d37d773\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"isRequired\":true,\"value\":\"\",\"typeSettings\":{\"includeAll\":false,\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\"},{\"id\":\"d57bcdf5-aec7-4f86-904c-67171864919b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspace\",\"type\":5,\"isRequired\":true,\"query\":\"resources\\r\\n| where type =~ \\\"microsoft.operationalinsights/workspaces\\\"\",\"crossComponentResources\":[\"{Subscription}\"],\"value\":\"\",\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"2e238f92-709c-410b-93e0-60eab6150a75\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":604800000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"ec13514a-7e54-4d41-86db-2805727a2fa7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"About\",\"type\":10,\"description\":\"View release history for this workbook\",\"isRequired\":true,\"value\":\"Hide\",\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    \\\"Show\\\",\\r\\n    \\\"Hide\\\"\\r\\n]\"}],\"style\":\"pills\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Email Event Analysis Workbook, version 0.2\\r\\n\\r\\nauthor: Brian Delaney, MSFT\\r\\n\\r\\nRelease Notes:\\r\\n\\r\\n1.0 - Oct 18, 2021\\r\\n- Initial Release\\r\\n\",\"style\":\"info\"},\"name\":\"text - 0\"}]},\"conditionalVisibility\":{\"parameterName\":\"About\",\"comparison\":\"isEqualTo\",\"value\":\"Show\"},\"name\":\"AboutGroup\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"48578fe1-da47-4a4c-b495-ce7fe24ce495\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"By Email\",\"subTarget\":\"Email\",\"style\":\"link\"},{\"id\":\"30e93159-8bf5-4006-820f-406ea10bcd17\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"By Attachment\",\"subTarget\":\"Attachments\",\"style\":\"link\"},{\"id\":\"c40f76ed-94be-40ff-b65b-3fda306f2c3d\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"By Url\",\"subTarget\":\"Url\",\"style\":\"link\"}]},\"name\":\"links - 8\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Workspace}\"],\"parameters\":[{\"id\":\"d6592a34-1ae6-4128-9a72-b9aa6295a0c7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"EmailDirection\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"EmailEvents\\r\\n| summarize Count=count() by EmailDirection\\r\\n| sort by Count desc\\r\\n| project EmailDirection, Label=strcat(EmailDirection, ' - ', Count, ' messages')\",\"crossComponentResources\":[\"{Workspace}\"],\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"e63f1a36-a44c-4936-8ad9-30bc7d8587d4\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Sender\",\"label\":\"Sender Email\",\"type\":1,\"timeContext\":{\"durationMs\":86400000},\"value\":\"\"},{\"id\":\"175b1a45-d1f0-4e23-b1dd-a19afab7ef7b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Recipient\",\"label\":\"Recipient Email\",\"type\":1,\"value\":\"\",\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"08bf6816-f40b-46d3-b526-25c846728374\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"RecipientDomain\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"EmailEvents\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| summarize Messages=count() by RecipientDomain\\r\\n| sort by Messages desc\\r\\n| project RecipientDomain, strcat(RecipientDomain, ' - ', Messages, ' messages')\",\"crossComponentResources\":[\"{Workspace}\"],\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"4046b6e4-7487-48e2-a99f-b74975c738e5\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SenderDomain\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"EmailEvents\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n//| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| summarize Messages=count() by SenderMailFromDomain\\r\\n| sort by Messages desc\\r\\n| project SenderMailFromDomain, strcat(SenderMailFromDomain, ' - ', Messages, ' messages')\",\"crossComponentResources\":[\"{Workspace}\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"86a41861-0346-4a1a-95f7-8e1b5db915c1\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subject\",\"type\":1,\"value\":\"\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\"},{\"id\":\"ae9bd4c6-f68a-486b-ba8b-1b8abf27e67d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"MinimumAttachmentCount\",\"type\":2,\"description\":\"Only include messages that have at least this many attachments\",\"isRequired\":true,\"query\":\"range x from 0 to 10 step 1\",\"crossComponentResources\":[\"{Workspace}\"],\"value\":\"0\",\"typeSettings\":{\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"a7bc4598-cf37-45b5-9049-ac62678f147b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"MinimumURLCount\",\"type\":2,\"description\":\"Only include messages that have at least these many embedded URLs\",\"isRequired\":true,\"query\":\"range x from 0 to 20 step 1\",\"crossComponentResources\":[\"{Workspace}\"],\"value\":\"0\",\"typeSettings\":{\"showDefault\":false},\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1 - Copy\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize Count=count() by EmailDirection\\r\\n| sort by Count desc\",\"size\":1,\"title\":\"Email Direction\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"EmailDirection\",\"exportParameterName\":\"Direction\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"EmailDirection\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"45\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Attachments\"},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where \\\"{Direction}\\\" == \\\"All\\\" or EmailDirection == \\\"{Direction}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize Count=count() by DeliveryAction\\r\\n| sort by Count desc\",\"size\":1,\"title\":\"Delivery Action\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"DeliveryAction\",\"exportParameterName\":\"DeliveryAction\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"DeliveryAction\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"showBorder\":false}},\"customWidth\":\"25\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Attachments\"},\"name\":\"query - 5 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where \\\"{Direction}\\\" == \\\"All\\\" or EmailDirection == \\\"{Direction}\\\"\\r\\n| where \\\"{DeliveryAction}\\\" == \\\"All\\\" or DeliveryAction == \\\"{DeliveryAction}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize Count=count() by bin(TimeGenerated, {TimeRange:grain}), EmailDirection\",\"size\":1,\"title\":\"Email Timeline\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"EmailAction\",\"exportParameterName\":\"Action\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"DeliveryAction\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"showBorder\":false}},\"customWidth\":\"30\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Attachments\"},\"name\":\"query - 5 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where \\\"{Direction}\\\" == \\\"All\\\" or EmailDirection == \\\"{Direction}\\\"\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| where \\\"{Direction}\\\" == \\\"All\\\" or EmailDirection == \\\"{Direction}\\\"\\r\\n| where \\\"{DeliveryAction}\\\" == \\\"All\\\" or DeliveryAction == \\\"{DeliveryAction}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize DistinctMessages=dcount(InternetMessageId), DistinctRecipients=dcount(RecipientEmailAddress), DistinctRecipientDomains=dcount(RecipientDomain), NetworkMessageIds=make_set(NetworkMessageId) by SenderMailFromAddress\\r\\n| sort by DistinctMessages desc\",\"size\":0,\"title\":\"Top Senders\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"SenderMailFromAddress\",\"parameterName\":\"Sender2\",\"defaultValue\":\"All\"},{\"fieldName\":\"NetworkMessageIds\",\"parameterName\":\"NetworkMessageIdsSender\",\"parameterType\":1,\"defaultValue\":\"[]\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"29ch\"}},{\"columnMatch\":\"DistinctMessages\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"DistinctRecipients\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"21ch\"}},{\"columnMatch\":\"DistinctRecipientDomains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where \\\"{Direction}\\\" == \\\"All\\\" or EmailDirection == \\\"{Direction}\\\"\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where \\\"{Sender2}\\\" == \\\"All\\\" or SenderMailFromAddress =~ \\\"{Sender2}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| where \\\"{Direction}\\\" == \\\"All\\\" or EmailDirection == \\\"{Direction}\\\"\\r\\n| where \\\"{DeliveryAction}\\\" == \\\"All\\\" or DeliveryAction == \\\"{DeliveryAction}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize DistinctMessages=dcount(InternetMessageId), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientEmailAddress\\r\\n| sort by DistinctMessages\",\"size\":0,\"title\":\"Top Recipients\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsRecipient\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"DistinctMessages\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"143px\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where \\\"{Direction}\\\" == \\\"All\\\" or EmailDirection == \\\"{Direction}\\\"\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where \\\"{Sender2}\\\" == \\\"All\\\" or SenderMailFromAddress =~ \\\"{Sender2}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| where \\\"{Direction}\\\" == \\\"All\\\" or EmailDirection == \\\"{Direction}\\\"\\r\\n| where \\\"{DeliveryAction}\\\" == \\\"All\\\" or DeliveryAction == \\\"{DeliveryAction}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize DistinctMessages=dcount(InternetMessageId), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientDomain\\r\\n| sort by DistinctMessages desc\",\"size\":0,\"title\":\"Top Recipient Domains\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsDomain\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientDomain\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25.8571ch\"}},{\"columnMatch\":\"DistinctMessages\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"143px\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let ids = array_concat(dynamic({NetworkMessageIdsSender}),dynamic({NetworkMessageIdsRecipient}),dynamic({NetworkMessageIdsDomain}));\\r\\nEmailEvents\\r\\n| where NetworkMessageId in (ids) or array_length(ids) == 0\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where \\\"{Direction}\\\" == \\\"All\\\" or EmailDirection == \\\"{Direction}\\\"\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where \\\"{Sender2}\\\" == \\\"All\\\" or SenderMailFromAddress =~ \\\"{Sender2}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| where \\\"{Direction}\\\" == \\\"All\\\" or EmailDirection == \\\"{Direction}\\\"\\r\\n| where \\\"{DeliveryAction}\\\" == \\\"All\\\" or DeliveryAction == \\\"{DeliveryAction}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| project TimeGenerated, SenderMailFromAddress, RecipientEmailAddress, Subject, EmailDirection, EmailLanguage, DeliveryAction, ConfidenceLevel, AttachmentCount, UrlCount, NetworkMessageId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Message Details\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageId\",\"exportParameterName\":\"NetworkMessageId\",\"exportDefaultValue\":\"None\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"Subject\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"35ch\"}},{\"columnMatch\":\"EmailDirection\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Outbound\",\"representation\":\"right\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Inbound\",\"representation\":\"left\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Intra-org\",\"representation\":\"Pending\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":\"\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"DeliveryAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Delivered\",\"representation\":\"success\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Blocked\",\"representation\":\"failed\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Junked\",\"representation\":\"Disable\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":\"\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"ConfidenceLevel\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"AttachmentCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"UrlCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"NetworkMessageId\",\"formatter\":5}]}},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailAttachmentInfo\\r\\n| where NetworkMessageId == \\\"{NetworkMessageId}\\\"\\r\\n| project FileName, FileType, SHA256, ThreatTypes, ThreatNames, DetectionMethods\",\"size\":0,\"title\":\"Attached Files\",\"noDataMessage\":\"Either no message was selected or no attachments were present\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailUrlInfo\\r\\n| where NetworkMessageId == \\\"{NetworkMessageId}\\\"\\r\\n| project Url, UrlDomain\",\"size\":0,\"title\":\"Embedded URLs\",\"noDataMessage\":\"Either no message was selected or no URLs were present\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 7 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Email\"},\"name\":\"EmailGroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize TotalAttachments=sum(AttachmentCount), DistinctRecipients=dcount(RecipientEmailAddress), DistinctRecipientDomains=dcount(RecipientDomain), NetworkMessageIds=make_set(NetworkMessageId) by SenderMailFromAddress\\r\\n| where TotalAttachments > 0\\r\\n| sort by TotalAttachments desc\",\"size\":0,\"title\":\"Top Attachment Senders\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"SenderMailFromAddress\",\"parameterName\":\"Sender2\",\"defaultValue\":\"All\"},{\"fieldName\":\"NetworkMessageIds\",\"parameterName\":\"NetworkMessageIdsSender\",\"parameterType\":1,\"defaultValue\":\"[]\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"150px\"}},{\"columnMatch\":\"DistinctRecipients\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"21ch\"}},{\"columnMatch\":\"DistinctRecipientDomains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"40\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where \\\"{Sender2}\\\" == \\\"All\\\" or SenderMailFromAddress =~ \\\"{Sender2}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize TotalAttachments=sum(AttachmentCount), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientEmailAddress\\r\\n| where TotalAttachments > 0\\r\\n| sort by TotalAttachments desc\",\"size\":0,\"title\":\"Top Attachment Recipients\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsRecipient\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where \\\"{Sender2}\\\" == \\\"All\\\" or SenderMailFromAddress =~ \\\"{Sender2}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize TotalAttachments=sum(AttachmentCount), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientDomain\\r\\n| where TotalAttachments > 0\\r\\n| sort by TotalAttachments desc\",\"size\":0,\"title\":\"Top Attachment Recipient Domains\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsDomain\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientDomain\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25.8571ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"22ch\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy - Copy - Copy\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Workspace}\"],\"parameters\":[{\"id\":\"16f2ef9f-f59b-4a34-87c7-561c4bbfa92e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"AttachmentName\",\"type\":1,\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\",\"value\":\"\"},{\"id\":\"a64d4d00-7f7b-4fc0-991e-1b14e2f7ed1b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"AttachmentType\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"EmailAttachmentInfo\\r\\n| summarize AttachmentCount=count() by FileType\\r\\n| sort by AttachmentCount desc\\r\\n| project FileType, strcat(FileType, ' - ', AttachmentCount, ' attachments')\",\"crossComponentResources\":[\"{Workspace}\"],\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let ids = array_concat(dynamic({NetworkMessageIdsSender}),dynamic({NetworkMessageIdsRecipient}),dynamic({NetworkMessageIdsDomain}));\\r\\nEmailAttachmentInfo\\r\\n| where NetworkMessageId in (ids) or array_length(ids) == 0\\r\\n| where FileName contains \\\"{AttachmentName}\\\"\\r\\n| where \\\"*\\\" in ({AttachmentType}) or FileType in ({AttachmentType})\\r\\n| summarize UniqueEmailsWithThisAttachment=dcount(NetworkMessageId), NetworkMessageIdWithFile=make_set(NetworkMessageId) by FileName, FileType, SHA256\",\"size\":0,\"showAnalytics\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIdWithFile\",\"exportParameterName\":\"NetworkMessageIdWithFile\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"NetworkMessageIdWithFile\",\"formatter\":5}],\"sortBy\":[{\"itemKey\":\"FileName\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"FileName\",\"sortOrder\":1}]},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let ids = dynamic({NetworkMessageIdWithFile});\\r\\nEmailAttachmentInfo\\r\\n| where NetworkMessageId in (ids)\\r\\n| distinct NetworkMessageId\\r\\n| join kind=leftouter (EmailEvents) on NetworkMessageId\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| project TimeGenerated, SenderMailFromAddress, RecipientEmailAddress, Subject, EmailDirection, EmailLanguage, DeliveryAction, ConfidenceLevel, AttachmentCount, UrlCount, NetworkMessageId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Message Details\",\"noDataMessage\":\"No file attachments were selected\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageId\",\"exportParameterName\":\"NetworkMessageId\",\"exportDefaultValue\":\"None\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"Subject\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"35ch\"}},{\"columnMatch\":\"EmailDirection\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Outbound\",\"representation\":\"right\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Inbound\",\"representation\":\"left\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Intra-org\",\"representation\":\"Pending\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":\"\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"DeliveryAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Delivered\",\"representation\":\"success\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Blocked\",\"representation\":\"failed\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Junked\",\"representation\":\"Disable\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":\"\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"ConfidenceLevel\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"AttachmentCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"UrlCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"NetworkMessageId\",\"formatter\":5}]}},\"name\":\"query - 6 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Attachments\"},\"name\":\"AttachmentGroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize TotalUrls=sum(UrlCount), DistinctRecipients=dcount(RecipientEmailAddress), DistinctRecipientDomains=dcount(RecipientDomain), NetworkMessageIds=make_set(NetworkMessageId) by SenderMailFromAddress\\r\\n| where TotalUrls > 0\\r\\n| sort by TotalUrls desc\",\"size\":0,\"title\":\"Top Url Senders\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"SenderMailFromAddress\",\"parameterName\":\"Sender2\",\"defaultValue\":\"All\"},{\"fieldName\":\"NetworkMessageIds\",\"parameterName\":\"NetworkMessageIdsSender\",\"parameterType\":1,\"defaultValue\":\"[]\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"TotalUrls\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"DistinctRecipients\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"21ch\"}},{\"columnMatch\":\"DistinctRecipientDomains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"40\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where \\\"{Sender2}\\\" == \\\"All\\\" or SenderMailFromAddress =~ \\\"{Sender2}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize TotalUrls=sum(UrlCount), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientEmailAddress\\r\\n| where TotalUrls > 0\\r\\n| sort by TotalUrls desc\",\"size\":0,\"title\":\"Top Url Recipients\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsRecipient\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"TotalUrls\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where EmailDirection in ({EmailDirection})\\r\\n| where AttachmentCount >= {MinimumAttachmentCount} and UrlCount >= {MinimumURLCount}\\r\\n| where isempty(\\\"{Sender}\\\") or SenderMailFromAddress =~ \\\"{Sender}\\\"\\r\\n| where \\\"{Sender2}\\\" == \\\"All\\\" or SenderMailFromAddress =~ \\\"{Sender2}\\\"\\r\\n| where isempty(\\\"{Recipient}\\\") or RecipientEmailAddress =~ \\\"{Recipient}\\\"\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| where \\\"*\\\" in ({RecipientDomain}) or RecipientDomain in ({RecipientDomain})\\r\\n| where \\\"*\\\" in ({SenderDomain}) or SenderMailFromDomain in ({SenderDomain})\\r\\n| where isempty(\\\"{Subject}\\\") or Subject contains \\\"{Subject}\\\"\\r\\n| summarize TotalUrls=sum(UrlCount), DistinctSenders=dcount(SenderMailFromAddress), NetworkMessageIds=make_set(NetworkMessageId) by RecipientDomain\\r\\n| where TotalUrls > 0\\r\\n| sort by TotalUrls desc\",\"size\":0,\"title\":\"Top Url Recipient Domains\",\"timeContext\":{\"durationMs\":604800000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsDomain\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientDomain\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25.8571ch\"}},{\"columnMatch\":\"TotalUrls\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy - Copy - Copy\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Workspace}\"],\"parameters\":[{\"id\":\"16f2ef9f-f59b-4a34-87c7-561c4bbfa92e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Url\",\"type\":1,\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\",\"value\":\"\"},{\"id\":\"a64d4d00-7f7b-4fc0-991e-1b14e2f7ed1b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"UrlDomain\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"EmailUrlInfo\\r\\n| summarize UrlCount=count() by UrlDomain\\r\\n| sort by UrlCount desc\\r\\n| project UrlDomain, strcat(UrlDomain, ' - ', UrlCount, ' URLs')\",\"crossComponentResources\":[\"{Workspace}\"],\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let ids = array_concat(dynamic({NetworkMessageIdsSender}),dynamic({NetworkMessageIdsRecipient}),dynamic({NetworkMessageIdsDomain}));\\r\\nEmailUrlInfo\\r\\n| where NetworkMessageId in (ids) or array_length(ids) == 0\\r\\n| where Url contains \\\"{Url}\\\"\\r\\n| where \\\"*\\\" in ({UrlDomain}) or UrlDomain in ({UrlDomain})\\r\\n| summarize UniqueMessagesWithUrl=dcount(NetworkMessageId), NetworkMessageIdWithUrl=make_set(NetworkMessageId) by Url, UrlDomain\",\"size\":0,\"showAnalytics\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIdWithUrl\",\"exportParameterName\":\"NetworkMessageIdWithUrl\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"NetworkMessageIdWithUrl\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let ids = dynamic({NetworkMessageIdWithUrl});\\r\\nEmailUrlInfo\\r\\n| where NetworkMessageId in (ids)\\r\\n| distinct NetworkMessageId\\r\\n| join kind=leftouter (EmailEvents) on NetworkMessageId\\r\\n| extend RecipientDomain = tostring(split(RecipientEmailAddress, \\\"@\\\", 1)[0])\\r\\n| project TimeGenerated, SenderMailFromAddress, RecipientEmailAddress, Subject, EmailDirection, EmailLanguage, DeliveryAction, ConfidenceLevel, AttachmentCount, UrlCount, NetworkMessageId\\r\\n| sort by TimeGenerated desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Message Details\",\"noDataMessage\":\"No URLs were selected\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageId\",\"exportParameterName\":\"NetworkMessageId\",\"exportDefaultValue\":\"None\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"Subject\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"35ch\"}},{\"columnMatch\":\"EmailDirection\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Outbound\",\"representation\":\"right\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Inbound\",\"representation\":\"left\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Intra-org\",\"representation\":\"Pending\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":\"\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"DeliveryAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Delivered\",\"representation\":\"success\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Blocked\",\"representation\":\"failed\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Junked\",\"representation\":\"Disable\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":\"\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"ConfidenceLevel\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"AttachmentCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"UrlCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"NetworkMessageId\",\"formatter\":5}]}},\"name\":\"query - 6 - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Url\"},\"name\":\"UrlGroup\"}],\"fromTemplateId\":\"Community-Workbooks/Microsoft Sentinel - Workbooks/Microsoft Defender for Office 365\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=MicrosoftDefenderForOffice365; logoFileName=office365_logo.svg; description=Gain insights into your Microsoft Defender for Office 365 raw data logs.  This workbook lets you look at trends in email senders, attachments and embedded URL data to find anomalies. You can also search by, sender, recipient, subject, attachment or embedded URL to find where the related messages have been sent.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Microsoft Defender For Office 365; templateRelativePath=MicrosoftDefenderForOffice365.json; subtitle=; provider=Microsoft Sentinel Community}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender for Office 365",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "EmailEvents",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "EmailUrlInfo",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "EmailAttachmentInfo",
                      "kind": "DataType"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "O365_Defender_FunctionAppConnector Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "FunctionAppName": {
              "defaultValue": "o365def",
              "type": "string"
            }
          },
          "variables": {
            "functionAppName": "[[concat(parameters('FunctionAppName'), uniqueString(resourceGroup().id))]",
            "hostingPlanName": "[[variables('functionAppName')]",
            "applicationInsightsName": "[[variables('functionAppName')]",
            "storageAccountName": "[[variables('functionAppName')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "playbookContentId1": "O365_Defender_FunctionAppConnector",
            "playbookId1": "[[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[[variables('storageAccountName')]",
              "location": "[[variables('workspace-location-inline')]",
              "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
              },
              "kind": "StorageV2",
              "properties": {
                "allowBlobPublicAccess": false,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": "[variables('TemplateEmptyArray')]",
                  "ipRules": "[variables('TemplateEmptyArray')]",
                  "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                }
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-09-01",
              "name": "[[variables('hostingPlanName')]",
              "location": "[[variables('workspace-location-inline')]",
              "sku": {
                "name": "Y1",
                "size": "Y1",
                "family": "Y"
              },
              "kind": "windows",
              "properties": {
                "reserved": false
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[[variables('applicationInsightsName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "[[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
              },
              "properties": {
                "Application_Type": "web"
              },
              "kind": "web"
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[[variables('functionAppName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "functionapp",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
              ],
              "properties": {
                "reserved": true,
                "httpsOnly": true,
                "serverFarmId": "[[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[[reference(resourceId('Microsoft.Insights/components', variables('functionAppName')), '2020-02-02').InstrumentationKey]"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "powershell"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "https://aka.ms/sentinel-soar-o365-defender-functionapp"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[[concat(variables('workspace-name'),'/Microsoft.SecurityInsights/',concat('AzureFunction-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "AzureFunction",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender for Office 365",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "AzureFunction",
        "displayName": "O365_Defender_FunctionAppConnector",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "o365-BlockMalwareFileExtension Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "o365-BlockMalwareFileExtension",
              "type": "string"
            },
            "Applicationid": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Applicationid"
              }
            },
            "MalwarePolicyName": {
              "type": "string",
              "metadata": {
                "description": "Enter value for MalwarePolicyName"
              }
            },
            "OrganizationName": {
              "type": "string",
              "metadata": {
                "description": "Enter value for OrganizationName"
              }
            },
            "Keyvault name": {
              "type": "String",
              "metadata": {
                "description": "Enter the key vault name where certificate thumbprint is stored"
              }
            },
            "Certificate_key_name": {
              "type": "string",
              "metadata": {
                "description": "Your Key name for the thumbprint secret stored in keyvault under secrets"
              }
            },
            "FunctionsAppName": {
              "defaultValue": "o365def",
              "type": "string",
              "metadata": {
                "description": "Name of the FunctionsApp custom connector, if you want to change the default name, make sure to use the same in all o365 automation playbooks as well"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "FunctionsAppName": "[[concat(parameters('FunctionsAppName'), uniqueString(resourceGroup().id))]",
            "o365FuntionsAppId": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('FunctionsAppName'))]",
            "KeyvaultConnectionName": "[[concat('Keyvault-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/', 'keyvault')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Applicationid": {
                      "type": "string",
                      "defaultValue": "[[parameters('Applicationid')]"
                    },
                    "Certificate_key_name": {
                      "type": "string",
                      "defaultValue": "[[parameters('Certificate_key_name')]"
                    },
                    "MalwarePolicyName": {
                      "type": "string",
                      "defaultValue": "[[parameters('MalwarePolicyName')]"
                    },
                    "OrganizationName": {
                      "type": "string",
                      "defaultValue": "[[parameters('OrganizationName')]"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Condition_-_check_if_filtered_list_has_any_extension": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "BlockMalwareFileExtension": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Malicious extensions mentioned below are blocked :<br>\n@{variables('filteredextension')}<br>\n</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        },
                        "BlockMalwareFileExtension": {
                          "type": "Function",
                          "inputs": {
                            "body": {
                              "FileExtensions": "@variables('filteredextension')",
                              "MalwarePolicyName": "@parameters('MalwarePolicyName')"
                            },
                            "function": {
                              "id": "[[concat(variables('o365FuntionsAppId'), '/functions/BlockMalwareFileExtension')]"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "For_each_-_filtering_malicious_extension": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Add_comment_to_incident_(V3)_2": {
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                "message": "<p>Provided extensions are already blocked or may be no extension provided</p>"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "post",
                              "path": "/Incidents/Comment"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('filteredextension'))",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "ConnectExchangeOnline": {
                      "runAfter": {
                        "For_each_-_fetching_extension_from_malicious_files": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ApplicationId": "@parameters('Applicationid')",
                          "CertificateThumbPrint": "@body('Get_secret')?['value']",
                          "OrganizationName": "@parameters('OrganizationName')"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/ConnectExchangeOnline')]"
                        }
                      }
                    },
                    "DisconnectExchangeOnline": {
                      "runAfter": {
                        "Condition_-_check_if_filtered_list_has_any_extension": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ApplicationId": "@parameters('Applicationid')",
                          "OrganizationName": "@parameters('OrganizationName')"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/DisconnectExchangeOnline')]"
                        }
                      }
                    },
                    "For_each_-_fetching_extension_from_malicious_files": {
                      "foreach": "@body('Parse_JSON_-_Entities_for_file')",
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Append_to_array_variable_-_storing_malicious_files_extensions_in_variable": {
                              "runAfter": {
                                "Compose": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "maliciousfilesextension",
                                "value": "@split(outputs('Compose'),'.')[1]"
                              }
                            },
                            "Compose": {
                              "type": "Compose",
                              "inputs": "@items('For_each_-_fetching_extension_from_malicious_files')?['properties']?['fileName']"
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@items('For_each_-_fetching_extension_from_malicious_files')['kind']",
                                  "File"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Parse_JSON_-_Entities_for_file": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_-_filtering_malicious_extension": {
                      "foreach": "@variables('maliciousfilesextension')",
                      "actions": {
                        "Condition_2": {
                          "actions": {
                            "Append_to_array_variable": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "filteredextension",
                                "value": "@items('For_each_-_filtering_malicious_extension')"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "contains": [
                                    "@body('Parse_JSON_-_Result_of_List_Malware_Policy')?['FileTypes']",
                                    "@items('For_each_-_filtering_malicious_extension')"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Parse_JSON_-_Result_of_List_Malware_Policy": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_secret": {
                      "runAfter": {
                        "Initialize_variable_-_filtered_malicious_extension": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent(parameters('Certificate_key_name'))}/value"
                      }
                    },
                    "Initialize_variable_-_filtered_malicious_extension": {
                      "runAfter": {
                        "Initialize_variable_-_store_malicious_file_extensions_": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "filteredextension",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_store_malicious_file_extensions_": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "maliciousfilesextension",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "ListMalwarePolicy": {
                      "runAfter": {
                        "ConnectExchangeOnline": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ApplicationId": "@parameters('Applicationid')",
                          "Identity": "@parameters('MalwarePolicyName')",
                          "OrganizationName": "@parameters('OrganizationName')"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/ListMalwarePolicy')]"
                        }
                      }
                    },
                    "Parse_JSON_-_Entities_for_file": {
                      "runAfter": {
                        "Get_secret": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "schema": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "properties": {
                                "properties": {
                                  "fileName": {
                                    "type": "string"
                                  },
                                  "friendlyName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "type",
                              "kind",
                              "properties"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      }
                    },
                    "Parse_JSON_-_Result_of_List_Malware_Policy": {
                      "runAfter": {
                        "ListMalwarePolicy": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('ListMalwarePolicy')",
                        "schema": {
                          "properties": {
                            "AdminDisplayName": {
                              "type": "string"
                            },
                            "CustomExternalBody": {
                              "type": "string"
                            },
                            "CustomExternalSubject": {
                              "type": "string"
                            },
                            "CustomFromAddress": {
                              "type": "string"
                            },
                            "CustomFromName": {
                              "type": "string"
                            },
                            "CustomInternalBody": {
                              "type": "string"
                            },
                            "CustomInternalSubject": {
                              "type": "string"
                            },
                            "CustomNotifications": {
                              "type": "boolean"
                            },
                            "DistinguishedName": {
                              "type": "string"
                            },
                            "EnableExternalSenderAdminNotifications": {
                              "type": "boolean"
                            },
                            "EnableFileFilter": {
                              "type": "boolean"
                            },
                            "EnableInternalSenderAdminNotifications": {
                              "type": "boolean"
                            },
                            "ExchangeObjectId": {
                              "type": "string"
                            },
                            "ExchangeVersion": {
                              "type": "string"
                            },
                            "ExternalSenderAdminAddress": {
                              "type": "string"
                            },
                            "FileTypeAction": {
                              "type": "string"
                            },
                            "FileTypes": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "Guid": {
                              "type": "string"
                            },
                            "Id": {
                              "type": "string"
                            },
                            "Identity": {
                              "type": "string"
                            },
                            "InternalSenderAdminAddress": {
                              "type": "string"
                            },
                            "IsDefault": {
                              "type": "boolean"
                            },
                            "IsPolicyOverrideApplied": {
                              "type": "boolean"
                            },
                            "IsValid": {
                              "type": "boolean"
                            },
                            "Name": {
                              "type": "string"
                            },
                            "ObjectCategory": {
                              "type": "string"
                            },
                            "ObjectClass": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "ObjectState": {
                              "type": "string"
                            },
                            "OrganizationId": {
                              "type": "string"
                            },
                            "OrganizationalUnitRoot": {
                              "type": "string"
                            },
                            "OriginatingServer": {
                              "type": "string"
                            },
                            "QuarantineTag": {
                              "type": "string"
                            },
                            "RecommendedPolicyType": {
                              "type": "string"
                            },
                            "WhenChanged": {
                              "type": "string"
                            },
                            "WhenChangedUTC": {
                              "type": "string"
                            },
                            "WhenCreated": {
                              "type": "string"
                            },
                            "WhenCreatedUTC": {
                              "type": "string"
                            },
                            "ZapEnabled": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Keyvault')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "o365-BlockMalwareFileExtension",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('KeyvaultConnectionName')]",
              "kind": "V1",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-3')]",
                  "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                  "vaultName": "[[parameters('keyvault name')]"
                },
                "displayName": "[[variables('KeyvaultConnectionName')]",
                "nonSecretParameterValues": {
                  "vaultName": "[[parameters('keyvault name')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender for Office 365",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "kind": "AzureFunction",
                      "contentId": "[variables('_O365_Defender_FunctionAppConnector')]",
                      "version": "[variables('playbookVersion1')]"
                    }
                  ]
                }
              }
            }
          ],
          "metadata": {
            "title": "O365 - Block Malware file extensions",
            "description": "This Playbook Provides the automation on blocking the suspicious/malicious file attachment on mails",
            "prerequisites": [
              "1. Prior to the deployment of this playbook, Defender for office 365 Custom Connector needs to be deployed under the same subscription.",
              "2. Refer to [Defender for office 365 Logic App Custom Connector](../../CustomConnector/O365_Defender_FunctionAppConnector/readme.md) documentation for deployment instructions."
            ],
            "postDeployment": [
              "1. Authorize each connection.",
              "2. Configure Playbook in Microsoft Sentinel Analytic Rule.",
              "3. Assign Microsoft Sentinel Responder Role to Playbook.",
              "6. Check readme.md for detailed instructions."
            ],
            "lastUpdateTime": "2023-06-18T12:00:00Z",
            "tags": [
              "Malware",
              "o365",
              "File"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "o365-BlockMalwareFileExtension",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "o365-BlockSender Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "o365-BlockSender",
              "type": "string"
            },
            "Applicationid": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Applicationid"
              }
            },
            "OrganizationName": {
              "type": "string",
              "metadata": {
                "description": "Enter value for OrganizationName"
              }
            },
            "Keyvault name": {
              "type": "String",
              "metadata": {
                "description": "Enter the key vault name where certificate thumbprint is stored"
              }
            },
            "Certificate_key_name": {
              "type": "string",
              "metadata": {
                "description": "Your Key name for the thumbprint secret stored in keyvault under secrets"
              }
            },
            "FunctionsAppName": {
              "defaultValue": "o365def",
              "type": "string",
              "metadata": {
                "description": "Name of the FunctionsApp custom connector, if you want to change the default name, make sure to use the same in all o365 automation playbooks as well"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "FunctionsAppName": "[[concat(parameters('FunctionsAppName'), uniqueString(resourceGroup().id))]",
            "o365FuntionsAppId": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('FunctionsAppName'))]",
            "KeyvaultConnectionName": "[[concat('Keyvault-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/', 'keyvault')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Applicationid": {
                      "type": "string",
                      "defaultValue": "[[parameters('Applicationid')]"
                    },
                    "Certificate_key_name": {
                      "type": "string",
                      "defaultValue": "[[parameters('Certificate_key_name')]"
                    },
                    "OrganizationName": {
                      "type": "string",
                      "defaultValue": "[[parameters('OrganizationName')]"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Condition_-_check_if_there_is_any_sender_to_block_after_filtering": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "CreateAllowBlockList": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Sender's mentioned below has been blocked at defender for office 365:<br>\n@{outputs('Compose_-_removing_duplicates_from_array')}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Compose_-_removing_duplicates_from_array": {
                          "type": "Compose",
                          "inputs": "@union(variables('filteredsender'),variables('filteredsender'))"
                        },
                        "CreateAllowBlockList": {
                          "runAfter": {
                            "Compose_-_removing_duplicates_from_array": [
                              "Succeeded"
                            ]
                          },
                          "type": "Function",
                          "inputs": {
                            "body": {
                              "Entries": "@outputs('Compose_-_removing_duplicates_from_array')",
                              "ListType": "Sender"
                            },
                            "function": {
                              "id": "[[concat(variables('o365FuntionsAppId'), '/functions/CreateAllowBlockList')]"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "For_each_-_filtering_senders_to_be_blocked": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Add_comment_to_incident_(V3)_2": {
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                "message": "<p>Provided sender's are already blocked &nbsp;or not provided</p>"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "post",
                              "path": "/Incidents/Comment"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('filteredsender'))",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "ConnectExchangeOnline": {
                      "runAfter": {
                        "For_each_-_collect_senders_name_in_array": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ApplicationId": "@parameters('Applicationid')",
                          "CertificateThumbPrint": "@body('Get_secret')?['value']",
                          "OrganizationName": "@parameters('OrganizationName')"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/ConnectExchangeOnline')]"
                        }
                      }
                    },
                    "DisconnectExchangeOnline": {
                      "runAfter": {
                        "Condition_-_check_if_there_is_any_sender_to_block_after_filtering": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ApplicationId": "@parameters('Applicationid')",
                          "OrganizationName": "@parameters('OrganizationName')"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/DisconnectExchangeOnline')]"
                        }
                      }
                    },
                    "Entities_-_Get_Accounts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "For_each_-_collect_existing_sender": {
                      "foreach": "@body('Parse_JSON_-_tenant_allow_block_list_result')",
                      "actions": {
                        "Append_to_array_variable": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "existingsender",
                            "value": "@items('For_each_-_collect_existing_sender')['Value']"
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_JSON_-_tenant_allow_block_list_result": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_-_collect_senders_name_in_array": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Append_to_array_variable_-_collect_senders_email": {
                          "runAfter": {
                            "Compose_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "senderlist",
                            "value": "@concat(outputs('Compose'),'@',outputs('Compose_2'))"
                          }
                        },
                        "Compose": {
                          "type": "Compose",
                          "inputs": "@items('For_each_-_collect_senders_name_in_array')?['Name']"
                        },
                        "Compose_2": {
                          "runAfter": {
                            "Compose": [
                              "Succeeded"
                            ]
                          },
                          "type": "Compose",
                          "inputs": "@items('For_each_-_collect_senders_name_in_array')?['UPNSuffix']"
                        }
                      },
                      "runAfter": {
                        "Initialize_variable_-_filtered_list": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_-_filtering_senders_to_be_blocked": {
                      "foreach": "@variables('senderlist')",
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Append_to_array_variable_-_filtered_sender_list": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "filteredsender",
                                "value": "@items('For_each_-_filtering_senders_to_be_blocked')"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "contains": [
                                    "@variables('existingsender')",
                                    "@items('For_each_-_filtering_senders_to_be_blocked')"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "For_each_-_collect_existing_sender": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_secret": {
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent(parameters('Certificate_key_name'))}/value"
                      }
                    },
                    "Initialize_variable_-_collect_senders_email": {
                      "runAfter": {
                        "Get_secret": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "senderlist",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_existing_blocked_sender": {
                      "runAfter": {
                        "Initialize_variable_-_collect_senders_email": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "existingsender",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_filtered_list": {
                      "runAfter": {
                        "Initialize_variable_-_existing_blocked_sender": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "filteredsender",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Parse_JSON_-_tenant_allow_block_list_result": {
                      "runAfter": {
                        "TenantAllowBlockList": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('TenantAllowBlockList')",
                        "schema": {
                          "items": {
                            "properties": {
                              "Action": {
                                "type": "string"
                              },
                              "EntryValueHash": {
                                "type": "string"
                              },
                              "Identity": {
                                "type": "string"
                              },
                              "LastModifiedDateTime": {
                                "type": "string"
                              },
                              "ListSubType": {
                                "type": "string"
                              },
                              "ModifiedBy": {
                                "type": "string"
                              },
                              "ObjectState": {
                                "type": "string"
                              },
                              "SubmissionID": {
                                "type": "string"
                              },
                              "SysManaged": {
                                "type": "boolean"
                              },
                              "Value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "Error",
                              "Identity",
                              "Value",
                              "Action",
                              "Notes",
                              "SubmissionID",
                              "ListSubType",
                              "SysManaged",
                              "LastModifiedDateTime",
                              "ExpirationDate",
                              "ObjectState",
                              "EntryValueHash",
                              "ModifiedBy"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      }
                    },
                    "TenantAllowBlockList": {
                      "runAfter": {
                        "ConnectExchangeOnline": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ListType": "Sender"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/TenantAllowBlockList')]"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Keyvault')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "o365-BlockSender",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('KeyvaultConnectionName')]",
              "kind": "V1",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-3')]",
                  "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                  "vaultName": "[[parameters('keyvault name')]"
                },
                "displayName": "[[variables('KeyvaultConnectionName')]",
                "nonSecretParameterValues": {
                  "vaultName": "[[parameters('keyvault name')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender for Office 365",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "kind": "AzureFunction",
                      "contentId": "[variables('_O365_Defender_FunctionAppConnector')]",
                      "version": "[variables('playbookVersion1')]"
                    }
                  ]
                }
              }
            }
          ],
          "metadata": {
            "title": "O365 - Block Suspicious Sender",
            "description": "This Playbook Provides the automation on blocking the suspicious/malicious senders",
            "prerequisites": [
              "1. Prior to the deployment of this playbook, Defender for office 365 Custom Connector needs to be deployed under the same subscription.",
              "2. Refer to [Defender for office 365 Logic App Custom Connector](../../CustomConnector/O365_Defender_FunctionAppConnector/readme.md) documentation for deployment instructions."
            ],
            "postDeployment": [
              "1. Authorize each connection.",
              "2. Configure Playbook in Microsoft Sentinel Analytic Rule.",
              "3. Assign Microsoft Sentinel Responder Role to Playbook.",
              "6. Check readme.md for detailed instructions."
            ],
            "lastUpdateTime": "2023-06-18T12:00:00Z",
            "entities": [
              "Account"
            ],
            "tags": [
              "Malicious",
              "o365",
              "Sender",
              "Account"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId3')]",
        "contentKind": "Playbook",
        "displayName": "o365-BlockSender",
        "contentProductId": "[variables('_playbookcontentProductId3')]",
        "id": "[variables('_playbookcontentProductId3')]",
        "version": "[variables('playbookVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "o365-BlockSender-EntityTrigger Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion4')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "o365-BlockSender-EntityTrigger",
              "type": "string"
            },
            "Applicationid": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Applicationid"
              }
            },
            "OrganizationName": {
              "type": "string",
              "metadata": {
                "description": "Enter value for OrganizationName"
              }
            },
            "Keyvault name": {
              "type": "String",
              "metadata": {
                "description": "Enter the key vault name where certificate thumbprint is stored"
              }
            },
            "Certificate_key_name": {
              "type": "string",
              "metadata": {
                "description": "Your Key name for the thumbprint secret stored in keyvault under secrets"
              }
            },
            "FunctionsAppName": {
              "defaultValue": "o365def",
              "type": "string",
              "metadata": {
                "description": "Name of the FunctionsApp custom connector, if you want to change the default name, make sure to use the same in all o365 automation playbooks as well"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "FunctionsAppName": "[[concat(parameters('FunctionsAppName'), uniqueString(resourceGroup().id))]",
            "o365FuntionsAppId": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('FunctionsAppName'))]",
            "KeyvaultConnectionName": "[[concat('Keyvault-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/', 'keyvault')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Applicationid": {
                      "type": "string",
                      "defaultValue": "[[parameters('Applicationid')]"
                    },
                    "Certificate_key_name": {
                      "type": "string",
                      "defaultValue": "[[parameters('Certificate_key_name')]"
                    },
                    "OrganizationName": {
                      "type": "string",
                      "defaultValue": "[[parameters('OrganizationName')]"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_entity": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/entity/@{encodeURIComponent('Account')}"
                      }
                    }
                  },
                  "actions": {
                    "Compose_-_sender_to_block": {
                      "runAfter": {
                        "Get_secret": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "@concat(triggerBody()?['Entity']?['properties']?['Name'],'@',triggerBody()?['Entity']?['properties']?['UPNSuffix'])"
                    },
                    "Condition": {
                      "actions": {
                        "Condition_2": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['IncidentArmID']",
                                  "message": "<p>Entry mentioned below has been blocked:<br>\n@{outputs('Compose_-_sender_to_block')}</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            }
                          },
                          "runAfter": {
                            "CreateAllowBlockList": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@triggerBody()?['IncidentArmID']",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "CreateAllowBlockList": {
                          "type": "Function",
                          "inputs": {
                            "body": {
                              "Entries": "@outputs('Compose_-_sender_to_block')",
                              "ListType": "Sender"
                            },
                            "function": {
                              "id": "[[concat(variables('o365FuntionsAppId'), '/functions/CreateAllowBlockList')]"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "For_each_-_collecting_existing_sender": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "contains": [
                                "@variables('existingsender')",
                                "@outputs('Compose_-_sender_to_block')"
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "ConnectExchangeOnline": {
                      "runAfter": {
                        "Compose_-_sender_to_block": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ApplicationId": "@parameters('Applicationid')",
                          "CertificateThumbPrint": "@body('Get_secret')?['value']",
                          "OrganizationName": "@parameters('OrganizationName')"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/ConnectExchangeOnline')]"
                        }
                      }
                    },
                    "DisconnectExchangeOnline": {
                      "runAfter": {
                        "Condition": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ApplicationId": "@parameters('Applicationid')",
                          "OrganizationName": "@parameters('OrganizationName')"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/DisconnectExchangeOnline')]"
                        }
                      }
                    },
                    "For_each_-_collecting_existing_sender": {
                      "foreach": "@body('Parse_JSON_-_tenant_allow_block_list_result')",
                      "actions": {
                        "Append_to_array_variable": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "existingsender",
                            "value": "@items('For_each_-_collecting_existing_sender')['Value']"
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_JSON_-_tenant_allow_block_list_result": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_secret": {
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent(parameters('Certificate_key_name'))}/value"
                      }
                    },
                    "Initialize_variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "existingsender",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Parse_JSON_-_tenant_allow_block_list_result": {
                      "runAfter": {
                        "TenantAllowBlockList": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('TenantAllowBlockList')",
                        "schema": {
                          "items": {
                            "properties": {
                              "Action": {
                                "type": "string"
                              },
                              "EntryValueHash": {
                                "type": "string"
                              },
                              "Identity": {
                                "type": "string"
                              },
                              "LastModifiedDateTime": {
                                "type": "string"
                              },
                              "ListSubType": {
                                "type": "string"
                              },
                              "ModifiedBy": {
                                "type": "string"
                              },
                              "ObjectState": {
                                "type": "string"
                              },
                              "SubmissionID": {
                                "type": "string"
                              },
                              "SysManaged": {
                                "type": "boolean"
                              },
                              "Value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "Error",
                              "Identity",
                              "Value",
                              "Action",
                              "Notes",
                              "SubmissionID",
                              "ListSubType",
                              "SysManaged",
                              "LastModifiedDateTime",
                              "ExpirationDate",
                              "ObjectState",
                              "EntryValueHash",
                              "ModifiedBy"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      }
                    },
                    "TenantAllowBlockList": {
                      "runAfter": {
                        "ConnectExchangeOnline": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ListType": "Sender"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/TenantAllowBlockList')]"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Keyvault')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "o365-BlockSender-EntityTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('KeyvaultConnectionName')]",
              "kind": "V1",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-3')]",
                  "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                  "vaultName": "[[parameters('keyvault name')]"
                },
                "displayName": "[[variables('KeyvaultConnectionName')]",
                "nonSecretParameterValues": {
                  "vaultName": "[[parameters('keyvault name')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId4'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId4')]",
                "contentId": "[variables('_playbookContentId4')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender for Office 365",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "kind": "AzureFunction",
                      "contentId": "[variables('_O365_Defender_FunctionAppConnector')]",
                      "version": "[variables('playbookVersion1')]"
                    }
                  ]
                }
              }
            }
          ],
          "metadata": {
            "title": "O365 - Block Sender Entity Trigger",
            "description": "This Playbook Provides the automation on blocking the suspicious/malicious sender",
            "prerequisites": [
              "1. Prior to the deployment of this playbook, Defender for office 365 Custom Connector needs to be deployed under the same subscription.",
              "2. Refer to [Defender for office 365 Logic App Custom Connector](../../CustomConnector/O365_Defender_FunctionAppConnector/readme.md) documentation for deployment instructions."
            ],
            "postDeployment": [
              "1. Authorize each connection.",
              "2. Configure Playbook in Microsoft Sentinel Analytic Rule.",
              "3. Assign Microsoft Sentinel Responder Role to Playbook.",
              "6. Check readme.md for detailed instructions."
            ],
            "lastUpdateTime": "2023-06-18T12:00:00Z",
            "tags": [
              "Sender",
              "o365",
              "File",
              "Malicious",
              "Suspicious"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId4')]",
        "contentKind": "Playbook",
        "displayName": "o365-BlockSender-EntityTrigger",
        "contentProductId": "[variables('_playbookcontentProductId4')]",
        "id": "[variables('_playbookcontentProductId4')]",
        "version": "[variables('playbookVersion4')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "o365-BlockSpamDomain Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion5')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "o365-BlockSpamDomain",
              "type": "string"
            },
            "Applicationid": {
              "type": "string",
              "metadata": {
                "description": "Enter value for Applicationid"
              }
            },
            "OrganizationName": {
              "type": "string",
              "metadata": {
                "description": "Enter value for OrganizationName"
              }
            },
            "Keyvault name": {
              "type": "String",
              "metadata": {
                "description": "Enter the key vault name where certificate thumbprint is stored"
              }
            },
            "Certificate_key_name": {
              "type": "string",
              "metadata": {
                "description": "Your Key name for the thumbprint secret stored in keyvault under secrets"
              }
            },
            "FunctionsAppName": {
              "defaultValue": "o365def",
              "type": "string",
              "metadata": {
                "description": "Name of the FunctionsApp custom connector, if you want to change the default name, make sure to use the same in all o365 automation playbooks as well"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "FunctionsAppName": "[[concat(parameters('FunctionsAppName'), uniqueString(resourceGroup().id))]",
            "o365FuntionsAppId": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('FunctionsAppName'))]",
            "KeyvaultConnectionName": "[[concat('Keyvault-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/', 'keyvault')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "Applicationid": {
                      "type": "string",
                      "defaultValue": "[[parameters('Applicationid')]"
                    },
                    "Certificate_key_name": {
                      "type": "string",
                      "defaultValue": "[[parameters('Certificate_key_name')]"
                    },
                    "OrganizationName": {
                      "type": "string",
                      "defaultValue": "[[parameters('OrganizationName')]"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Compose": {
                      "runAfter": {
                        "For_each_-_collect_existing_blocked_domains": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "@variables('ExistingBlockedDomains')"
                    },
                    "Compose_-_spam_mail_-_remove_duplicates": {
                      "runAfter": {
                        "For_each_-_collect_spam_email_address_in_array": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "@union(variables('spammails'),variables('spammails'))"
                    },
                    "Condition__-_check_if_there_is_any_domain_to_block_after_filtering": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "CreateSpamRule": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Domains mentioned below has been blocked :<br>\n@{variables('finaldomains')}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        },
                        "CreateSpamPolicy": {
                          "type": "Function",
                          "inputs": {
                            "body": {
                              "BlockedSenderDomains": "@variables('finaldomains')",
                              "BulkThreshold": 6,
                              "HighConfidenceSpamAction": "Quarantine",
                              "Name": "Sentinel - @{triggerBody()?['object']?['properties']?['incidentNumber']}",
                              "SpamAction": "Quarantine"
                            },
                            "function": {
                              "id": "[[concat(variables('o365FuntionsAppId'), '/functions/CreateSpamPolicy')]"
                            }
                          }
                        },
                        "CreateSpamRule": {
                          "runAfter": {
                            "Delay": [
                              "Succeeded"
                            ]
                          },
                          "type": "Function",
                          "inputs": {
                            "body": {
                              "HostedContentFilterPolicy": "Sentinel - @{triggerBody()?['object']?['properties']?['incidentNumber']}",
                              "Name": "Sentinel-@{triggerBody()?['object']?['properties']?['incidentNumber']}",
                              "RecipientDomainIs": "tihara.onmicrosoft.com"
                            },
                            "function": {
                              "id": "[[concat(variables('o365FuntionsAppId'), '/functions/CreateSpamRule')]"
                            }
                          }
                        },
                        "Delay": {
                          "runAfter": {
                            "CreateSpamPolicy": [
                              "Succeeded"
                            ]
                          },
                          "type": "Wait",
                          "inputs": {
                            "interval": {
                              "count": 5,
                              "unit": "Second"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "For_each_-_filtering_spam_domains": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Add_comment_to_incident_(V3)_2": {
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                "message": "<p>Provided domains are already blocked , or no domain is provided</p>"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "post",
                              "path": "/Incidents/Comment"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('finaldomains'))",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "ConnectExchangeOnline": {
                      "runAfter": {
                        "Compose_-_spam_mail_-_remove_duplicates": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ApplicationId": "@parameters('Applicationid')",
                          "CertificateThumbPrint": "@body('Get_secret')?['value']",
                          "OrganizationName": "@parameters('OrganizationName')"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/ConnectExchangeOnline')]"
                        }
                      }
                    },
                    "DisconnectExchangeOnline": {
                      "runAfter": {
                        "Condition__-_check_if_there_is_any_domain_to_block_after_filtering": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ApplicationId": "@parameters('Applicationid')",
                          "OrganizationName": "@parameters('OrganizationName')"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/DisconnectExchangeOnline')]"
                        }
                      }
                    },
                    "Entities_-_Get_Accounts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "For_each_-_collect_existing_blocked_domains": {
                      "foreach": "@body('Parse_JSON_-_Result_ListSpamPolicy')",
                      "actions": {
                        "For_each_2": {
                          "foreach": "@items('For_each_-_collect_existing_blocked_domains')['BlockedSenderDomains']",
                          "actions": {
                            "Append_to_array_variable_2": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "ExistingBlockedDomains",
                                "value": "@items('For_each_2')?['Domain']"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Parse_JSON_-_Result_ListSpamPolicy": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_-_collect_spam_email_address_in_array": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Append_to_array_variable": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "spammails",
                            "value": "@items('For_each_-_collect_spam_email_address_in_array')?['UPNSuffix']"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_variable_-_final_list_of_malicious_domain": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_-_filtering_spam_domains": {
                      "foreach": "@variables('spammails')",
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Append_to_array_variable_3": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "finaldomains",
                                "value": "@items('For_each_-_filtering_spam_domains')"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "contains": [
                                    "@variables('ExistingBlockedDomains')",
                                    "@items('For_each_-_filtering_spam_domains')"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Compose": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_secret": {
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent(parameters('Certificate_key_name'))}/value"
                      }
                    },
                    "Initialize_variable_-_Existing_Blocked_Domains": {
                      "runAfter": {
                        "Initialize_variable_-_collect_spam_email_address": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "ExistingBlockedDomains",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_collect_spam_email_address": {
                      "runAfter": {
                        "Get_secret": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "spammails",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_-_final_list_of_malicious_domain": {
                      "runAfter": {
                        "Initialize_variable_-_Existing_Blocked_Domains": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "finaldomains",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "ListSpamPolicy": {
                      "runAfter": {
                        "ConnectExchangeOnline": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "ApplicationId": "@parameters('Applicationid')",
                          "Identity": "[variables('blanks')]",
                          "OrganizationName": "@parameters('OrganizationName')"
                        },
                        "function": {
                          "id": "[[concat(variables('o365FuntionsAppId'), '/functions/ListSpamPolicy')]"
                        }
                      }
                    },
                    "Parse_JSON_-_Result_ListSpamPolicy": {
                      "runAfter": {
                        "ListSpamPolicy": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('ListSpamPolicy')",
                        "schema": {
                          "items": {
                            "properties": {
                              "AddXHeaderValue": {
                                "type": "string"
                              },
                              "AdminDisplayName": {
                                "type": "string"
                              },
                              "AllowedSenderDomains": {
                                "type": "array"
                              },
                              "AllowedSenders": {
                                "type": "array"
                              },
                              "ApplyPhishActionToIntraOrg": {
                                "type": "boolean"
                              },
                              "BlockedSenderDomains": {
                                "type": "array"
                              },
                              "BlockedSenders": {
                                "type": "array"
                              },
                              "BulkQuarantineTag": {
                                "type": "string"
                              },
                              "BulkSpamAction": {
                                "type": "string"
                              },
                              "BulkThreshold": {
                                "type": "integer"
                              },
                              "DistinguishedName": {
                                "type": "string"
                              },
                              "DownloadLink": {
                                "type": "boolean"
                              },
                              "EnableLanguageBlockList": {
                                "type": "boolean"
                              },
                              "EnableRegionBlockList": {
                                "type": "boolean"
                              },
                              "ExchangeObjectId": {
                                "type": "string"
                              },
                              "ExchangeVersion": {
                                "type": "string"
                              },
                              "FalsePositiveAdditionalRecipients": {
                                "type": "array"
                              },
                              "Guid": {
                                "type": "string"
                              },
                              "HighConfidencePhishAction": {
                                "type": "string"
                              },
                              "HighConfidencePhishQuarantineTag": {
                                "type": "string"
                              },
                              "HighConfidenceSpamAction": {
                                "type": "string"
                              },
                              "HighConfidenceSpamQuarantineTag": {
                                "type": "string"
                              },
                              "Id": {
                                "type": "string"
                              },
                              "Identity": {
                                "type": "string"
                              },
                              "IncreaseScoreWithBizOrInfoUrls": {
                                "type": "string"
                              },
                              "IncreaseScoreWithImageLinks": {
                                "type": "string"
                              },
                              "IncreaseScoreWithNumericIps": {
                                "type": "string"
                              },
                              "IncreaseScoreWithRedirectToOtherPort": {
                                "type": "string"
                              },
                              "InlineSafetyTipsEnabled": {
                                "type": "boolean"
                              },
                              "IntraOrgFilterState": {
                                "type": "string"
                              },
                              "IsDefault": {
                                "type": "boolean"
                              },
                              "IsValid": {
                                "type": "boolean"
                              },
                              "LanguageBlockList": {
                                "type": "array"
                              },
                              "MarkAsSpamBulkMail": {
                                "type": "string"
                              },
                              "MarkAsSpamEmbedTagsInHtml": {
                                "type": "string"
                              },
                              "MarkAsSpamEmptyMessages": {
                                "type": "string"
                              },
                              "MarkAsSpamFormTagsInHtml": {
                                "type": "string"
                              },
                              "MarkAsSpamFramesInHtml": {
                                "type": "string"
                              },
                              "MarkAsSpamFromAddressAuthFail": {
                                "type": "string"
                              },
                              "MarkAsSpamJavaScriptInHtml": {
                                "type": "string"
                              },
                              "MarkAsSpamNdrBackscatter": {
                                "type": "string"
                              },
                              "MarkAsSpamObjectTagsInHtml": {
                                "type": "string"
                              },
                              "MarkAsSpamSensitiveWordList": {
                                "type": "string"
                              },
                              "MarkAsSpamSpfRecordHardFail": {
                                "type": "string"
                              },
                              "MarkAsSpamWebBugsInHtml": {
                                "type": "string"
                              },
                              "ModifySubjectValue": {
                                "type": "string"
                              },
                              "Name": {
                                "type": "string"
                              },
                              "ObjectCategory": {
                                "type": "string"
                              },
                              "ObjectClass": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "ObjectState": {
                                "type": "string"
                              },
                              "OrganizationId": {
                                "type": "string"
                              },
                              "OrganizationalUnitRoot": {
                                "type": "string"
                              },
                              "OriginatingServer": {
                                "type": "string"
                              },
                              "PhishQuarantineTag": {
                                "type": "string"
                              },
                              "PhishSpamAction": {
                                "type": "string"
                              },
                              "PhishZapEnabled": {
                                "type": "boolean"
                              },
                              "QuarantineRetentionPeriod": {
                                "type": "integer"
                              },
                              "RecommendedPolicyType": {
                                "type": "string"
                              },
                              "RedirectToRecipients": {
                                "type": "array"
                              },
                              "RegionBlockList": {
                                "type": "array"
                              },
                              "SpamAction": {
                                "type": "string"
                              },
                              "SpamQuarantineTag": {
                                "type": "string"
                              },
                              "SpamZapEnabled": {
                                "type": "boolean"
                              },
                              "TestModeAction": {
                                "type": "string"
                              },
                              "TestModeBccToRecipients": {
                                "type": "array"
                              },
                              "WhenChanged": {
                                "type": "string"
                              },
                              "WhenChangedUTC": {
                                "type": "string"
                              },
                              "WhenCreated": {
                                "type": "string"
                              },
                              "WhenCreatedUTC": {
                                "type": "string"
                              },
                              "ZapEnabled": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "AdminDisplayName",
                              "AddXHeaderValue",
                              "ModifySubjectValue",
                              "RedirectToRecipients",
                              "TestModeBccToRecipients",
                              "FalsePositiveAdditionalRecipients",
                              "QuarantineRetentionPeriod",
                              "TestModeAction",
                              "IncreaseScoreWithImageLinks",
                              "IncreaseScoreWithNumericIps",
                              "IncreaseScoreWithRedirectToOtherPort",
                              "IncreaseScoreWithBizOrInfoUrls",
                              "MarkAsSpamEmptyMessages",
                              "MarkAsSpamJavaScriptInHtml",
                              "MarkAsSpamFramesInHtml",
                              "MarkAsSpamObjectTagsInHtml",
                              "MarkAsSpamEmbedTagsInHtml",
                              "MarkAsSpamFormTagsInHtml",
                              "MarkAsSpamWebBugsInHtml",
                              "MarkAsSpamSensitiveWordList",
                              "MarkAsSpamSpfRecordHardFail",
                              "MarkAsSpamFromAddressAuthFail",
                              "MarkAsSpamBulkMail",
                              "MarkAsSpamNdrBackscatter",
                              "IsDefault",
                              "LanguageBlockList",
                              "RegionBlockList",
                              "HighConfidenceSpamAction",
                              "SpamAction",
                              "DownloadLink",
                              "EnableRegionBlockList",
                              "EnableLanguageBlockList",
                              "BulkThreshold",
                              "AllowedSenders",
                              "AllowedSenderDomains",
                              "BlockedSenders",
                              "BlockedSenderDomains",
                              "ZapEnabled",
                              "InlineSafetyTipsEnabled",
                              "BulkSpamAction",
                              "PhishSpamAction",
                              "SpamZapEnabled",
                              "PhishZapEnabled",
                              "ApplyPhishActionToIntraOrg",
                              "IntraOrgFilterState",
                              "HighConfidencePhishAction",
                              "RecommendedPolicyType",
                              "SpamQuarantineTag",
                              "HighConfidenceSpamQuarantineTag",
                              "PhishQuarantineTag",
                              "HighConfidencePhishQuarantineTag",
                              "BulkQuarantineTag",
                              "Identity",
                              "Id",
                              "IsValid",
                              "ExchangeVersion",
                              "Name",
                              "DistinguishedName",
                              "ObjectCategory",
                              "ObjectClass",
                              "WhenChanged",
                              "WhenCreated",
                              "WhenChangedUTC",
                              "WhenCreatedUTC",
                              "ExchangeObjectId",
                              "OrganizationalUnitRoot",
                              "OrganizationId",
                              "Guid",
                              "OriginatingServer",
                              "ObjectState"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Keyvault')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "o365-BlockSpamMail",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('KeyvaultConnectionName')]",
              "kind": "V1",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-3')]",
                  "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                  "vaultName": "[[parameters('keyvault name')]"
                },
                "displayName": "[[variables('KeyvaultConnectionName')]",
                "nonSecretParameterValues": {
                  "vaultName": "[[parameters('keyvault name')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId5'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId5')]",
                "contentId": "[variables('_playbookContentId5')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender for Office 365",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "kind": "AzureFunction",
                      "contentId": "[variables('_O365_Defender_FunctionAppConnector')]",
                      "version": "[variables('playbookVersion1')]"
                    }
                  ]
                }
              }
            }
          ],
          "metadata": {
            "title": "O365 - Block Spam Domain",
            "description": "This Playbook Provides the automation on blocking the suspicious/malicious attacker Domains",
            "prerequisites": [
              "1. Prior to the deployment of this playbook, Defender for office 365 Custom Connector needs to be deployed under the same subscription.",
              "2. Refer to [Defender for office 365 Logic App Custom Connector](../../CustomConnector/O365_Defender_FunctionAppConnector/readme.md) documentation for deployment instructions."
            ],
            "postDeployment": [
              "1. Authorize each connection.",
              "2. Configure Playbook in Microsoft Sentinel Analytic Rule.",
              "3. Assign Microsoft Sentinel Responder Role to Playbook.",
              "6. Check readme.md for detailed instructions."
            ],
            "lastUpdateTime": "2023-06-18T12:00:00Z",
            "entities": [
              "Account"
            ],
            "tags": [
              "Attcak",
              "o365",
              "domain",
              "suspicious",
              "malicious"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId5')]",
        "contentKind": "Playbook",
        "displayName": "o365-BlockSpamDomain",
        "contentProductId": "[variables('_playbookcontentProductId5')]",
        "id": "[variables('_playbookcontentProductId5')]",
        "version": "[variables('playbookVersion5')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Microsoft Defender for Office 365",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> <em>There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</em></p>\n<p>The <a href=\"https://www.microsoft.com/security/business/threat-protection/office-365-defender\">Microsoft Defender for Office 365</a> solution for Microsoft Sentinel enables you to ingest security alerts from the Defender for Office 365 platform, providing visibility into threats within email messages, links (URLs) and collaboration tools.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution  is dependent on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><a href=\"https://docs.microsoft.com/azure/sentinel/create-codeless-connector?tabs=deploy-via-arm-template%2Cconnect-via-the-azure-portal\">Codeless Connector Platform/Native Sentinel Polling</a></li>\n</ol>\n<p><strong>Data Connectors:</strong> 1, <strong>Workbooks:</strong> 1, <strong>Function Apps:</strong> 1, <strong>Playbooks:</strong> 4</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Workbooks/Images/Logos/office365_logo.svg\"width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Microsoft Defender for Office 365",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "AzureFunction",
              "contentId": "[variables('_O365_Defender_FunctionAppConnector')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_o365-BlockMalwareFileExtension')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_o365-BlockSender')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_o365-BlockSender-EntityTrigger')]",
              "version": "[variables('playbookVersion4')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_o365-BlockSpamDomain')]",
              "version": "[variables('playbookVersion5')]"
            }
          ]
        },
        "firstPublishDate": "2022-05-17",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}