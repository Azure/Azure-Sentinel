{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Tanium-UnquarantineHosts",
        "description": "This playbook starts with a Microsoft Sentinel incident, gets the hosts associated with that incident, then directs Tanium to un-quarantine those hosts. The status of the un-quarantine operation is commented on the Microsoft Sentinel incident.\n\nSee [Tanium Help](https://help.tanium.com/bundle/ConnectAzureSentinel/page/Integrations/MSFT/ConnectAzureSentinel/Overview.htm) for a guide to setting up the Tanium Connector for Sentinel.",
        "prerequisites": [
            "1. Microsoft Sentinel incidents with associated hosts.",
            "2. A [Tanium API Token](https://help.tanium.com/bundle/ug_console_cloud/page/platform_user/console_api_tokens.html) granting access to your Tanium environment: the query will be made with the user priviledges of that token."
        ],
        "postDeploymentSteps": [
            "1. Ensure the Logic App API connection to Microsoft Sentinel is authenticated."
        ],
        "entities": [ "host" ],
        "tags": [ "Remediation" ],
        "lastUpdateTime": "2023-12-08T00:00:00.000Z",
        "support": {
            "tier": "developer",
            "link": "https://www.tanium.com"
        },
        "author": {
            "name": "Tanium"
        },
        "parameterTemplateVersion": "2.0.1"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Tanium-UnquarantineHosts",
            "type": "string"
        },
        "IntegrationAccountName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The name of an existing Azure Integration Account (required to run inline JavaScript actions)"
            }
        },
        "IntegrationAccountResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The resource group name for the existing Azure Integration Account"
            }
        },
        "TaniumApiToken": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "The Tanium API Token used for this logic app. The logic app will be restricted to the level of access available to the user who generated the token."
            }
        },
        "TaniumServerHostname": {
            "defaultValue": "hostname",
            "type": "String",
            "metadata": {
                "description": "The hostname for your Tanium server e.g. tanium.example.com"
            }
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "TaniumActionsApi": "[uri(concat('https://', parameters('TaniumServerHostname')), '/api/v2/actions')]",
        "TaniumAllComputersUrl": "[uri(concat('https://', parameters('TaniumServerHostname')), '/api/v2/groups/by-name/All%20Computers')]",
        "TaniumPackagesByNameUrlFragment": "[uri(concat('https://', parameters('TaniumServerHostname')), '/api/v2/packages/by-name/')]",
        "TaniumActionResultDataUrlFragment": "[uri(concat('https://', parameters('TaniumServerHostname')), '/api/v2/result_data/action/')]",
        "TaniumApiGatewayApi": "[uri(concat('https://', parameters('TaniumServerHostname')), '/plugin/products/gateway/graphql')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2019-05-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "Tanium-UnquarantineHosts",
                "hidden-SentinelTemplateVersion": "2.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "integrationAccount": {
                    "id": "[resourceId(parameters('integrationAccountResourceGroupName'), 'Microsoft.Logic/integrationAccounts', parameters('integrationAccountName'))]"
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "TaniumApiToken": {
                            "type": "securestring",
                            "metadata": {
                                "description": "The Tanium API Token provides access to the Tanium Server. Access is restricted to the level of access available to the user who generated the token."
                            }
                        },
                        "TaniumActionsApi": {
                            "type": "String"
                        },
                        "TaniumAllComputersUrl": {
                            "type": "String"
                        },
                        "TaniumPackagesByNameUrlFragment": {
                            "type": "String"
                        },
                        "TaniumActionResultDataUrlFragment": {
                            "type": "String"
                        },
                        "TaniumApiGatewayApi": {
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Add_Issued_Actions_to_Incident": {
                            "runAfter": {
                                "Create_HTML_table_of_issued_actions": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p>ISSUED TANIUM ACTIONS<br>\n@{body('Create_HTML_table_of_issued_actions')}</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Add_comment_to_incident_-_hosts_that_will_be_targeted": {
                            "runAfter": {
                                "Create_HTML_table_of_matched_endpoints": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p>Preparing to issue quarantine actions targeting these endpoints associated with this incident<br>\n@{body('Create_HTML_table_of_matched_endpoints')}</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Exit_early_if_no_unquarantine_actions_were_successfully_issued": {
                            "actions": {
                                "Terminate_-_no_actions_were_successfully_issued": {
                                    "type": "Terminate",
                                    "inputs": {
                                        "runError": {
                                            "message": "Unable to issue actions"
                                        },
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {
                                "Apply_unquarantine_action_to_Linux_endpoints": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "less": [
                                            "@length(variables('issuedActions'))",
                                            1
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "else": {
                                "actions": {}
                            }
                        },
                        "Collect_action_results_for_each_issued_action": {
                            "foreach": "@variables('issuedActions')",
                            "actions": {
                                "Get_action_result": {
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "session": "@parameters('TaniumApiToken')"
                                        },
                                        "method": "GET",
                                        "uri": "@{concat(parameters('TaniumActionResultDataUrlFragment'), items('Collect_action_results_for_each_issued_action')?['id'])}"
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    }
                                },
                                "If_action_result_could_be_determined": {
                                    "actions": {
                                        "For_each_action_result_set": {
                                            "foreach": "@body('Parse_action_result')",
                                            "actions": {
                                                "Append_to_action_results": {
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "knownActionResults",
                                                        "value": "@item()"
                                                    }
                                                }
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_action_result": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Append_to_unknown_action_results": {
                                                "runAfter": {
                                                    "Compose_unknown_action_result": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "AppendToArrayVariable",
                                                "inputs": {
                                                    "name": "unknownActionResults",
                                                    "value": "@outputs('Compose_unknown_action_result')"
                                                }
                                            },
                                            "Compose_unknown_action_result": {
                                                "type": "Compose",
                                                "inputs": {
                                                    "action id": "@item()?['id']",
                                                    "status": "Completed with unknown result"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(outputs('Parse_action_result')['body'])",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_action_result": {
                                    "runAfter": {
                                        "Parse_current_issued_action": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "JavaScriptCode",
                                    "inputs": {
                                        "code": "var action_results = workflowContext.actions.Get_action_result.outputs.body.data;\r\nvar action_id = workflowContext.actions.Parse_current_issued_action.outputs.body.id;\r\nvar columns = action_results.result_sets[0].columns.map(c => c.name);\r\nvar robjects = [];\r\n\r\naction_results.result_sets.forEach(function(rs) {\r\n\trs.rows.forEach(function(row) {\r\n\t\tlet robject = {'action id': action_id};\r\n\t\tcolumns.forEach(function(c, i) {\r\n\t\t\trobject[c] = row.data[i][0].text;\r\n\t\t});\r\n\t\trobjects.push(robject);\r\n\t});\r\n});\r\n\r\nreturn robjects;"
                                    }
                                },
                                "Parse_current_issued_action": {
                                    "runAfter": {
                                        "Get_action_result": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@items('Collect_action_results_for_each_issued_action')",
                                        "schema": {
                                            "properties": {
                                                "action_group": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "approver": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "comment": {
                                                    "type": "string"
                                                },
                                                "creation_time": {
                                                    "type": "string"
                                                },
                                                "distribute_seconds": {
                                                    "type": "integer"
                                                },
                                                "expiration_time": {
                                                    "type": "string"
                                                },
                                                "expire_seconds": {
                                                    "type": "integer"
                                                },
                                                "history_saved_question": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "package_spec": {
                                                    "properties": {
                                                        "available_time": {
                                                            "type": "string"
                                                        },
                                                        "command": {
                                                            "type": "string"
                                                        },
                                                        "command_timeout": {
                                                            "type": "integer"
                                                        },
                                                        "content_set": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "creation_time": {
                                                            "type": "string"
                                                        },
                                                        "deleted_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "display_name": {
                                                            "type": "string"
                                                        },
                                                        "expire_seconds": {
                                                            "type": "integer"
                                                        },
                                                        "hidden_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "last_modified_by": {
                                                            "type": "string"
                                                        },
                                                        "last_update": {
                                                            "type": "string"
                                                        },
                                                        "mod_user": {
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "domain": {
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "modification_time": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "parameter_definition": {
                                                            "type": "string"
                                                        },
                                                        "process_group_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "skip_lock_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "source_hash": {
                                                            "type": "string"
                                                        },
                                                        "verify_expire_seconds": {
                                                            "type": "integer"
                                                        },
                                                        "verify_group": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "verify_group_id": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "saved_action": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "skip_lock_flag": {
                                                    "type": "boolean"
                                                },
                                                "start_time": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "stopped_flag": {
                                                    "type": "boolean"
                                                },
                                                "target_group": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "creation_time": {
                                                            "type": "string"
                                                        },
                                                        "deleted_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "display_name": {
                                                            "type": "string"
                                                        },
                                                        "domain": {
                                                            "type": "string"
                                                        },
                                                        "effective_group_id": {
                                                            "type": "integer"
                                                        },
                                                        "external_flag": {
                                                            "type": "integer"
                                                        },
                                                        "group_id": {
                                                            "type": "integer"
                                                        },
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "last_login": {
                                                            "type": "string"
                                                        },
                                                        "locked_out": {
                                                            "type": "integer"
                                                        },
                                                        "mod_user": {
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "domain": {
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "modification_time": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "previous_login": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_action_results": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Create_HTML_table_of_action_results": {
                            "runAfter": {
                                "Collect_action_results_for_each_issued_action": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "format": "HTML",
                                "from": "@variables('knownActionResults')"
                            }
                        },
                        "Create_HTML_table_of_issued_actions": {
                            "runAfter": {
                                "Exit_early_if_no_unquarantine_actions_were_successfully_issued": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "columns": [
                                    {
                                        "header": "action id",
                                        "value": "@item()?['id']"
                                    },
                                    {
                                        "header": "name",
                                        "value": "@item()?['name']"
                                    },
                                    {
                                        "header": "status",
                                        "value": "@item()?['status']"
                                    }
                                ],
                                "format": "HTML",
                                "from": "@variables('issuedActions')"
                            }
                        },
                        "Create_HTML_table_of_matched_endpoints": {
                            "runAfter": {
                                "Flatten_API_Gateway_endpoints": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "format": "HTML",
                                "from": "@body('Flatten_API_Gateway_endpoints')"
                            }
                        },
                        "Create_HTML_table_of_unknown_action_results": {
                            "runAfter": {
                                "Create_HTML_table_of_action_results": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "format": "HTML",
                                "from": "@variables('unknownActionResults')"
                            }
                        },
                        "Get_Hosts_From_Incident": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/host"
                            }
                        },
                        "Exit_early_if_incident_has_no_hosts": {
                            "actions": {
                                "Add_comment__-_no_hosts_found": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>No hosts found for this incident.</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Exit_early": {
                                    "runAfter": {
                                        "Add_comment__-_no_hosts_found": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_Hosts_From_Incident": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "less": [
                                            "@length(body('Get_Hosts_From_Incident')?['Hosts'])",
                                            1
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "else": {
                                "actions": {}
                            }
                        },
                        "Flatten_API_Gateway_endpoints": {
                            "runAfter": {
                                "Parse_endpoints_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "JavaScriptCode",
                            "inputs": {
                                "code": "var e = workflowContext.actions.Parse_endpoints_array.outputs.body;\r\n\r\nfunction sensorReadings(r) {\r\n\treturn r.columns.map(c => {\r\n\t\tif (c.sensor && c.sensor.name) {\r\n\t\t\treturn { name: [c.sensor.name, c.name].join(' - '), value: c.values.join(' ') };\r\n\t\t} else {\r\n\t\t\treturn { name: c.name, value: c.values.join(' ') };\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction flatten(obj, pk = '') {\r\n\tif (pk !== '') pk += ' ';\r\n\tlet flat = {};\r\n\tObject.keys(obj).forEach((key) => {\r\n\t\tif (key === 'sensorReadings') {\r\n\t\t\tsensorReadings(obj[key]).forEach((r) => {\r\n\t\t\t\tflat[r.name] = r.value;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (typeof obj[key] === 'object' && obj[key] !== null) {\r\n\t\t\t\tObject.assign(flat, flatten(obj[key], pk + key));\r\n\t\t\t} else {\r\n\t\t\t\tflat[pk + key] = obj[key];\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn flat;\r\n}\r\n\r\nreturn e.map(function(e) { return flatten(e.node); });"
                            }
                        },
                        "For_each_host_on_the_incident": {
                            "foreach": "@variables('endpoints')",
                            "actions": {
                                "Compose_endpoint_filter_for_packages": {
                                    "runAfter": {
                                        "Parse_endpoint_JSON_data": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "and_flag": true,
                                        "filters": [
                                            {
                                                "operator": "Equal",
                                                "sensor": {
                                                    "name": "Computer Name"
                                                },
                                                "value": "@body('Parse_endpoint_JSON_data')?['node']?['name']"
                                            },
                                            {
                                                "operator": "RegexMatch",
                                                "sensor": {
                                                    "name": "IP Address"
                                                },
                                                "value": "@body('Parse_endpoint_JSON_data')?['node']?['ipAddress']"
                                            }
                                        ]
                                    }
                                },
                                "Parse_endpoint_JSON_data": {
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@items('For_each_host_on_the_incident')",
                                        "schema": {
                                            "properties": {
                                                "node": {
                                                    "properties": {
                                                        "ipAddress": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "os": {
                                                            "properties": {
                                                                "platform": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Switch": {
                                    "runAfter": {
                                        "Compose_endpoint_filter_for_packages": [
                                            "Succeeded"
                                        ]
                                    },
                                    "cases": {
                                        "Linux": {
                                            "case": "Linux",
                                            "actions": {
                                                "Append_to_Linux_endpoint_filters": {
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "linuxEndpointFilters",
                                                        "value": "@outputs('Compose_endpoint_filter_for_packages')"
                                                    }
                                                }
                                            }
                                        },
                                        "Mac": {
                                            "case": "Mac",
                                            "actions": {
                                                "Append_to_macOS_endpoint_filters": {
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "macOsEndpointFilters",
                                                        "value": "@outputs('Compose_endpoint_filter_for_packages')"
                                                    }
                                                }
                                            }
                                        },
                                        "Windows": {
                                            "case": "Windows",
                                            "actions": {
                                                "Append_to_Windows_endpoint_filters": {
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "windowsEndpointFilters",
                                                        "value": "@outputs('Compose_endpoint_filter_for_packages')"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@body('Parse_endpoint_JSON_data')?['node']?['os']?['platform']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {
                                "Initialize_allComputersGroupId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Build_Endpoint_Filter_from_Hosts": {
                            "inputs": {
                                "code": "var hosts = workflowContext.actions.Get_Hosts_From_Incident.outputs.body.Hosts;\r\nvar filters=[];for(let i=0;i<hosts.length;i++){var a=hosts[i].hostName,t=hosts[i].additionalData,e=null!=t,s=t&&null!==t.LastIpAddress&&void 0!==t.LastIpAddress,l=t&&null!==t.FQDN&&void 0!==t.FQDN&&t.FQDN.includes(\".\");if(null!=a&&\"\"!==a){if(l&&s){filters.push({filters:[{op:\"CONTAINS\",path:\"ipAddress\",value:hosts[i].additionalData.LastIpAddress},{any:!0,filters:[{path:\"name\",value:hosts[i].hostName},{path:\"name\",value:hosts[i].additionalData.FQDN.trim()}],negated:!1}]});continue}if(l){filters.push({any:!0,filters:[{path:\"name\",value:hosts[i].hostName},{path:\"name\",value:hosts[i].additionalData.FQDN.trim()}],negated:!1});continue}if(s){filters.push({filters:[{op:\"CONTAINS\",path:\"ipAddress\",value:hosts[i].additionalData.LastIpAddress},{path:\"name\",value:hosts[i].hostName}]});continue}filters.push({filters:[{path:\"name\",value:hosts[i].hostName}]})}}\r\nreturn filters;"
                            },
                            "runAfter": {
                                "Initialize_Endpoint_Filter": [
                                    "Succeeded"
                                ]
                            },
                            "type": "JavaScriptCode"
                        },
                        "Set_Endpoint_Filter": {
                            "inputs": {
                                "name": "endpointFilters",
                                "value": "@body('Build_Endpoint_Filter_from_Hosts')"
                            },
                            "runAfter": {
                                "Build_Endpoint_Filter_from_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable"
                        },
                        "Get_the_\"All_Computers\"_group": {
                            "runAfter": {
                                "Initialize_list_of_unknown_action_results": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Content-Type": "application/json",
                                    "session": "@parameters('TaniumApiToken')"
                                },
                                "method": "GET",
                                "uri": "@parameters('TaniumAllComputersUrl')"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
                            }
                        },
                        "Apply_unquarantine_action_to_Linux_endpoints": {
                            "actions": {
                                "Check_Linux_issued_action_result": {
                                    "actions": {
                                        "Append_Linux_issued_action_result_to_issued_actions": {
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "issuedActions",
                                                "value": "@body('Issue_Linux_unquarantine_action')?['data']"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Issue_Linux_unquarantine_action": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@outputs('Issue_Linux_unquarantine_action')['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If",
                                    "else": {
                                        "actions": {}
                                    }
                                },
                                "Compose_Linux_action": {
                                    "runAfter": {
                                        "Compose_Linux_target_group": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "action_group": {
                                            "id": "@variables('allComputersGroupId')"
                                        },
                                        "distribute_seconds": 0,
                                        "expire_seconds": "@body('Parse_Linux_package_json')?['data']?['expire_seconds']",
                                        "name": "Apply from Microsoft Sentinel: @{variables('linuxPackageName')}",
                                        "package_spec": "@outputs('Compose_Linux_action_package_declaration')",
                                        "target_group": "@outputs('Compose_Linux_target_group')"
                                    }
                                },
                                "Compose_Linux_action_package_declaration": {
                                    "runAfter": {
                                        "Parse_Linux_package_json": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "expire_seconds": "@body('Parse_Linux_package_json')?['data']?['expire_seconds']",
                                        "parameters": "@variables('packageParameters')",
                                        "source_id": "@body('Parse_Linux_package_json')?['data']?['id']"
                                    }
                                },
                                "Compose_Linux_target_group": {
                                    "runAfter": {
                                        "Compose_Linux_action_package_declaration": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "and_flag": false,
                                        "sub_groups": "@variables('linuxEndpointFilters')"
                                    }
                                },
                                "Get_Linux_unquarantine_package": {
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "session": "@parameters('TaniumApiToken')"
                                        },
                                        "method": "GET",
                                        "uri": "@{concat(parameters('TaniumPackagesByNameUrlFragment'), join(split(variables('linuxPackageName'), ' '), '%20'))}"
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    }
                                },
                                "Issue_Linux_unquarantine_action": {
                                    "runAfter": {
                                        "Compose_Linux_action": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@outputs('Compose_Linux_action')",
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "session": "@parameters('TaniumApiToken')"
                                        },
                                        "method": "POST",
                                        "uri": "@parameters('TaniumActionsApi')"
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    }
                                },
                                "Parse_Linux_package_json": {
                                    "runAfter": {
                                        "Get_Linux_unquarantine_package": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_Linux_unquarantine_package')",
                                        "schema": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "available_time": {
                                                            "type": "string"
                                                        },
                                                        "command": {
                                                            "type": "string"
                                                        },
                                                        "command_timeout": {
                                                            "type": "integer"
                                                        },
                                                        "content_set": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "creation_time": {
                                                            "type": "string"
                                                        },
                                                        "deleted_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "display_name": {
                                                            "type": "string"
                                                        },
                                                        "expire_seconds": {
                                                            "type": "integer"
                                                        },
                                                        "hidden_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "last_modified_by": {
                                                            "type": "string"
                                                        },
                                                        "last_update": {
                                                            "type": "string"
                                                        },
                                                        "mod_user": {
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "domain": {
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "modification_time": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "parameter_definition": {
                                                            "type": "string"
                                                        },
                                                        "process_group_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "skip_lock_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "source_hash": {
                                                            "type": "string"
                                                        },
                                                        "source_id": {
                                                            "type": "integer"
                                                        },
                                                        "verify_expire_seconds": {
                                                            "type": "integer"
                                                        },
                                                        "verify_group": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "verify_group_id": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Apply_unquarantine_action_to_macOS_endpoints": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('linuxEndpointFilters'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "else": {
                                "actions": {}
                            }
                        },
                        "Apply_unquarantine_action_to_Windows_endpoints": {
                            "actions": {
                                "Check_Windows_issued_action_result": {
                                    "actions": {
                                        "Append_Windows_issued_action_result_to_issued_actions": {
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "issuedActions",
                                                "value": "@body('Issue_Windows_unquarantine_action')?['data']"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Issue_Windows_unquarantine_action": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@outputs('Issue_Windows_unquarantine_action')['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If",
                                    "else": {
                                        "actions": {}
                                    }
                                },
                                "Compose_Windows_action_package_declaration": {
                                    "runAfter": {
                                        "Parse_Windows_package_json": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "expire_seconds": "@body('Parse_Windows_package_json')?['data']?['expire_seconds']",
                                        "parameters": "@variables('packageParameters')",
                                        "source_id": "@body('Parse_Windows_package_json')?['data']?['id']"
                                    }
                                },
                                "Compose_Windows_target_group": {
                                    "runAfter": {
                                        "Compose_Windows_action_package_declaration": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "and_flag": false,
                                        "sub_groups": "@variables('windowsEndpointFilters')"
                                    }
                                },
                                "Compose_windows_action": {
                                    "runAfter": {
                                        "Compose_Windows_target_group": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "action_group": {
                                            "id": "@variables('allComputersGroupId')"
                                        },
                                        "distribute_seconds": 0,
                                        "expire_seconds": "@body('Parse_Windows_package_json')?['data']?['expire_seconds']",
                                        "name": "Apply from Microsoft Sentinel: @{variables('windowsPackageName')}",
                                        "package_spec": "@outputs('Compose_Windows_action_package_declaration')",
                                        "target_group": "@outputs('Compose_Windows_target_group')"
                                    }
                                },
                                "Get_Windows_unquarantine_package": {
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "session": "@parameters('TaniumApiToken')"
                                        },
                                        "method": "GET",
                                        "uri": "@{concat(parameters('TaniumPackagesByNameUrlFragment'), join(split(variables('windowsPackageName'), ' '), '%20'))}"
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    }
                                },
                                "Issue_Windows_unquarantine_action": {
                                    "runAfter": {
                                        "Compose_windows_action": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@outputs('Compose_windows_action')",
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "session": "@parameters('TaniumApiToken')"
                                        },
                                        "method": "POST",
                                        "uri": "@parameters('TaniumActionsApi')"
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    }
                                },
                                "Parse_Windows_package_json": {
                                    "runAfter": {
                                        "Get_Windows_unquarantine_package": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_Windows_unquarantine_package')",
                                        "schema": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "available_time": {
                                                            "type": "string"
                                                        },
                                                        "command": {
                                                            "type": "string"
                                                        },
                                                        "command_timeout": {
                                                            "type": "integer"
                                                        },
                                                        "content_set": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "creation_time": {
                                                            "type": "string"
                                                        },
                                                        "deleted_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "display_name": {
                                                            "type": "string"
                                                        },
                                                        "expire_seconds": {
                                                            "type": "integer"
                                                        },
                                                        "hidden_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "last_modified_by": {
                                                            "type": "string"
                                                        },
                                                        "last_update": {
                                                            "type": "string"
                                                        },
                                                        "mod_user": {
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "domain": {
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "modification_time": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "parameter_definition": {
                                                            "type": "string"
                                                        },
                                                        "process_group_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "skip_lock_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "source_hash": {
                                                            "type": "string"
                                                        },
                                                        "source_id": {
                                                            "type": "integer"
                                                        },
                                                        "verify_expire_seconds": {
                                                            "type": "integer"
                                                        },
                                                        "verify_group": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "verify_group_id": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_host_on_the_incident": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('windowsEndpointFilters'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "else": {
                                "actions": {}
                            }
                        },
                        "If_action_results": {
                            "actions": {
                                "Add_comment_to_incident_-_known_action_results": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>QUARANTINE ACTION RESULTS<br>\n@{body('Create_HTML_table_of_action_results')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                }
                            },
                            "runAfter": {
                                "If_action_results_and_unknown_action_results": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Add_comment_to_incident_-_unknown_action_results": {
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                "message": "<p>QUARANTINE ACTION RESULTS<br>\n@{body('Create_HTML_table_of_unknown_action_results')}</p>"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/Incidents/Comment"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('knownActionResults'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "If_action_results_and_unknown_action_results": {
                            "actions": {
                                "Add_comment_to_incident_-_known_and_unknown_action_results": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>QUARANTINE ACTION RESULTS<br>\n@{body('Create_HTML_table_of_action_results')}<br>\n<br>\n@{body('Create_HTML_table_of_unknown_action_results')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Terminate_2": {
                                    "runAfter": {
                                        "Add_comment_to_incident_-_known_and_unknown_action_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    }
                                }
                            },
                            "runAfter": {
                                "Create_HTML_table_of_unknown_action_results": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('knownActionResults'))",
                                            0
                                        ]
                                    },
                                    {
                                        "greater": [
                                            "@length(variables('unknownActionResults'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "else": {
                                "actions": {}
                            }
                        },
                        "Apply_unquarantine_action_to_macOS_endpoints": {
                            "actions": {
                                "Check_macOS_issued_action_result": {
                                    "actions": {
                                        "Append_macOS_issued_action_result_to_issued_actions": {
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "issuedActions",
                                                "value": "@body('Issue_macOS_unquarantine_action')?['data']"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Issue_macOS_unquarantine_action": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('Issue_macOS_unquarantine_action')",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If",
                                    "else": {
                                        "actions": {}
                                    }
                                },
                                "Compose_macOS_action": {
                                    "runAfter": {
                                        "Compose_macOS_target_group": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "action_group": {
                                            "id": "@variables('allComputersGroupId')"
                                        },
                                        "distribute_seconds": 0,
                                        "expire_seconds": "@body('Parse_macOS_package_json')?['data']?['expire_seconds']",
                                        "name": "Apply from Microsoft Sentinel @{variables('macOsPackageName')}",
                                        "package_spec": "@outputs('Compose_macOS_action_package_declaration')",
                                        "target_group": "@outputs('Compose_macOS_target_group')"
                                    }
                                },
                                "Compose_macOS_action_package_declaration": {
                                    "runAfter": {
                                        "Parse_macOS_package_json": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "expire_seconds": "@body('Parse_macOS_package_json')?['data']?['expire_seconds']",
                                        "parameters": "@variables('packageParameters')",
                                        "source_id": "@body('Parse_macOS_package_json')?['data']?['id']"
                                    }
                                },
                                "Compose_macOS_target_group": {
                                    "runAfter": {
                                        "Compose_macOS_action_package_declaration": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "and_flag": false,
                                        "sub_groups": "@variables('macOsEndpointFilters')"
                                    }
                                },
                                "Get_macOS_unquarantine_package": {
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "session": "@parameters('TaniumApiToken')"
                                        },
                                        "method": "GET",
                                        "uri": "@{concat(parameters('TaniumPackagesByNameUrlFragment'), join(split(variables('macOsPackageName'), ' '), '%20'))}"
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    }
                                },
                                "Issue_macOS_unquarantine_action": {
                                    "runAfter": {
                                        "Compose_macOS_action": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@outputs('Compose_macOS_action')",
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "session": "@parameters('TaniumApiToken')"
                                        },
                                        "method": "POST",
                                        "uri": "@parameters('TaniumActionsApi')"
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    }
                                },
                                "Parse_macOS_package_json": {
                                    "runAfter": {
                                        "Get_macOS_unquarantine_package": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_macOS_unquarantine_package')",
                                        "schema": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "available_time": {
                                                            "type": "string"
                                                        },
                                                        "command": {
                                                            "type": "string"
                                                        },
                                                        "command_timeout": {
                                                            "type": "integer"
                                                        },
                                                        "content_set": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "creation_time": {
                                                            "type": "string"
                                                        },
                                                        "deleted_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "display_name": {
                                                            "type": "string"
                                                        },
                                                        "expire_seconds": {
                                                            "type": "integer"
                                                        },
                                                        "hidden_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "last_modified_by": {
                                                            "type": "string"
                                                        },
                                                        "last_update": {
                                                            "type": "string"
                                                        },
                                                        "mod_user": {
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "domain": {
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "modification_time": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "parameter_definition": {
                                                            "type": "string"
                                                        },
                                                        "process_group_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "skip_lock_flag": {
                                                            "type": "boolean"
                                                        },
                                                        "source_hash": {
                                                            "type": "string"
                                                        },
                                                        "source_id": {
                                                            "type": "integer"
                                                        },
                                                        "verify_expire_seconds": {
                                                            "type": "integer"
                                                        },
                                                        "verify_group": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "verify_group_id": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Apply_unquarantine_action_to_Windows_endpoints": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('macOsEndpointFilters'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "else": {
                                "actions": {}
                            }
                        },
                        "Initialize_API_Query": {
                            "runAfter": {
                                "Initialize_unquarantine_package_parameters": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "apiQuery",
                                        "type": "string",
                                        "value": "query ($incidentHosts: EndpointFieldFilter, $endCursor: Cursor, $source: EndpointSource) {\n  endpoints(\n    source: $source\n    first: 10\n    after: $endCursor\n    filter: $incidentHosts\n  ) {\n    edges {\n      node {\n        name\n        ipAddress\n        os { platform }\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}"
                                    }
                                ]
                            }
                        },
                        "Initialize_API_Variables": {
                            "runAfter": {
                                "Initialize_Tanium_Endpoint_Source_to_TDS": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "apiVariables",
                                        "type": "string",
                                        "value": "{\n  \"source\": @{variables('endpointSource')},\n  \"incidentHosts\": {\n    \"any\": true,\n    \"filters\": @{variables('endpointFilters')}\n  }\n}"
                                    }
                                ]
                            }
                        },
                        "Initialize_API_Response": {
                            "runAfter": {
                                "Get_General_Host_Info": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "apiResponse",
                                        "type": "object",
                                        "value": "@body('Get_General_Host_Info')"
                                    }
                                ]
                            }
                        },
                        "Exit_early_If_Tanium_Has_No_Data_for_Incident": {
                            "actions": {
                                "Add_comment__-_no_data_in_Tanium": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>No data found in Tanium for hosts.</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Exit_early__-_no_data_in_Tanium": {
                                    "runAfter": {
                                        "Add_comment__-_no_data_in_Tanium": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_API_response": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Parse_API_response')?['data']?['endpoints']?['pageInfo']?['endCursor']",
                                            "@null"
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "else": {
                                "actions": {}
                            }
                        },
                        "Initialize_cursor": {
                            "runAfter": {
                                "Exit_early_If_Tanium_Has_No_Data_for_Incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "cursor",
                                        "type": "string",
                                        "value": "@body('Parse_API_response')?['data']?['endpoints']?['pageInfo']?['endCursor']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Endpoint_Filter": {
                            "runAfter": {
                                "Initialize_API_Query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "endpointFilters",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_the_filter_for_Linux_endpoint(s)": {
                            "runAfter": {
                                "Initialize_the_filter_for_Windows_endpoint(s)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "linuxEndpointFilters",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_the_name_of_the_Linux_unquarantine_package": {
                            "runAfter": {
                                "Initialize_the_name_of_the_MacOS_unquarantine_package": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "linuxPackageName",
                                        "type": "string",
                                        "value": "Remove Linux IPTables Quarantine"
                                    }
                                ]
                            }
                        },
                        "Initialize_the_name_of_the_MacOS_unquarantine_package": {
                            "runAfter": {
                                "Initialize_the_name_of_the_Windows_unquarantine_package": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "macOsPackageName",
                                        "type": "string",
                                        "value": "Remove Mac PF Quarantine"
                                    }
                                ]
                            }
                        },
                        "Initialize_Tanium_Endpoint_Source_to_TDS": {
                            "runAfter": {
                                "Set_Endpoint_Filter": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "endpointSource",
                                        "type": "object",
                                        "value": {
                                            "tds": {}
                                        }
                                    }
                                ]
                            }
                        },
                        "Initialize_the_filter_for_Windows_endpoint(s)": {
                            "runAfter": {
                                "Add_comment_to_incident_-_hosts_that_will_be_targeted": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "windowsEndpointFilters",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_the_name_of_the_Windows_unquarantine_package": {
                            "runAfter": {
                                "Exit_early_if_incident_has_no_hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "windowsPackageName",
                                        "type": "string",
                                        "value": "Remove Windows IPsec Quarantine"
                                    }
                                ]
                            }
                        },
                        "Initialize_action_results": {
                            "runAfter": {
                                "Wait_for_the_max_expire_seconds_from_the_issued_actions": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "knownActionResults",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_allComputersGroupId": {
                            "runAfter": {
                                "Get_the_\"All_Computers\"_group": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "allComputersGroupId",
                                        "type": "string",
                                        "value": "@{body('Get_the_\"All_Computers\"_group')?['data']?['id']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_endpoints_array": {
                            "runAfter": {
                                "Initialize_cursor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "endpoints",
                                        "type": "array",
                                        "value": "@body('Parse_API_response')?['data']?['endpoints']?['edges']"
                                    }
                                ]
                            }
                        },
                        "Initialize_list_of_issued_actions": {
                            "runAfter": {
                                "Initialize_the_filter_for_macOS_endpoint(s)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "issuedActions",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_the_filter_for_macOS_endpoint(s)": {
                            "runAfter": {
                                "Initialize_the_filter_for_Linux_endpoint(s)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "macOsEndpointFilters",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_unquarantine_package_parameters": {
                            "runAfter": {
                                "Initialize_the_name_of_the_Linux_unquarantine_package": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "packageParameters",
                                        "type": "array"
                                    }
                                ]
                            },
                            "description": "The un-quarantine packages have no parameters"
                        },
                        "Initialize_list_of_unknown_action_results": {
                            "runAfter": {
                                "Initialize_list_of_issued_actions": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "unknownActionResults",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Loop_Paginated_Response_if_has_multiple_pages": {
                            "actions": {
                                "Until_no_more_pages": {
                                    "actions": {
                                        "For_each_endpoint_in_paginated_API_Gateway_response": {
                                            "foreach": "@body('Parse_page')?['data']?['endpoints']?['edges']",
                                            "actions": {
                                                "Append_endpoint_to_endpoints": {
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "endpoints",
                                                        "value": "@items('For_each_endpoint_in_paginated_API_Gateway_response')"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Update_cursor_to_next_page": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach",
                                            "runtimeConfiguration": {
                                                "concurrency": {
                                                    "repetitions": 1
                                                }
                                            }
                                        },
                                        "Get_next_page": {
                                            "runAfter": {
                                                "Update_cursor_for_next_page": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "body": {
                                                    "query": "@variables('apiQuery')",
                                                    "variables": "@json(variables('apiVariables'))"
                                                },
                                                "headers": {
                                                    "Content-Type": "application/json",
                                                    "session": "@parameters('TaniumApiToken')"
                                                },
                                                "method": "POST",
                                                "uri": "@parameters('TaniumApiGatewayApi')"
                                            },
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "inputs"
                                                    ]
                                                }
                                            }
                                        },
                                        "Parse_page": {
                                            "runAfter": {
                                                "Get_next_page": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Get_next_page')",
                                                "schema": {
                                                    "properties": {
                                                        "data": {
                                                            "properties": {
                                                                "endpoints": {
                                                                    "properties": {
                                                                        "edges": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "node": {
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "node"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "pageInfo": {
                                                                            "properties": {
                                                                                "endCursor": {
                                                                                    "type": "string"
                                                                                },
                                                                                "hasNextPage": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Update_cursor_to_next_page": {
                                            "runAfter": {
                                                "Parse_page": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "cursor",
                                                "value": "@body('Parse_page')?['data']?['endpoints']?['pageInfo']?['endCursor']"
                                            }
                                        },
                                        "Update_cursor_for_next_page": {
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "apiQuery",
                                                "value": "{\n  \"source\": @{variables('endpointSource')},\n  \"endCursor\": \"@{variables('cursor')}\"\n}"
                                            }
                                        }
                                    },
                                    "expression": "@equals(body('Parse_page')?['data']?['endpoints']?['pageInfo']?['hasNextPage'],false)",
                                    "limit": {
                                        "count": 60,
                                        "timeout": "PT1H"
                                    },
                                    "type": "Until"
                                }
                            },
                            "runAfter": {
                                "Initialize_endpoints_array": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Parse_API_response')?['data']?['endpoints']?['pageInfo']?['hasNextPage']",
                                            "@true"
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "else": {
                                "actions": {}
                            }
                        },
                        "Parse_API_response": {
                            "runAfter": {
                                "Switch_to_TS_from_TDS_if_needed": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@variables('apiResponse')",
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "endpoints": {
                                                    "properties": {
                                                        "edges": {
                                                            "items": {
                                                                "properties": {
                                                                    "node": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "node"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "pageInfo": {
                                                            "properties": {
                                                                "endCursor": {
                                                                    "type": "string"
                                                                },
                                                                "hasNextPage": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "items": {
                                                "properties": {
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "message"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_endpoints_array": {
                            "runAfter": {
                                "Loop_Paginated_Response_if_has_multiple_pages": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@variables('endpoints')",
                                "schema": {
                                    "type": "array"
                                }
                            },
                            "description": "We need an action's output to use in the JavaScript code since it can't read from a variable"
                        },
                        "Get_General_Host_Info": {
                            "runAfter": {
                                "Initialize_API_Variables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "query": "@variables('apiQuery')",
                                    "variables": "@json(variables('apiVariables'))"
                                },
                                "headers": {
                                    "Content-Type": "application/json",
                                    "session": "@parameters('TaniumApiToken')"
                                },
                                "method": "POST",
                                "uri": "@parameters('TaniumApiGatewayApi')"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
                            }
                        },
                        "Select_expire_seconds": {
                            "runAfter": {
                                "Add_Issued_Actions_to_Incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@variables('issuedActions')",
                                "select": "@int(item()?['expire_seconds'])"
                            }
                        },
                        "Switch_to_TS_from_TDS_if_needed": {
                            "actions": {
                                "Requery_the_API_Gateway": {
                                    "runAfter": {
                                        "Update_API_Query_variables_to_get_new_source": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "query": "@variables('apiQuery')",
                                            "variables": "@json(variables('apiVariables'))"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "session": "@parameters('TaniumApiToken')"
                                        },
                                        "method": "POST",
                                        "uri": "@parameters('TaniumApiGatewayApi')"
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    }
                                },
                                "Change_Endpoint_Source_to_TS": {
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "endpointSource",
                                        "value": {
                                            "ts": {
                                                "stableWaitTime": 30
                                            }
                                        }
                                    }
                                },
                                "Update_API_Gateway_Response": {
                                    "runAfter": {
                                        "Requery_the_API_Gateway": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "apiResponse",
                                        "value": "@body('Requery_the_API_Gateway')"
                                    }
                                },
                                "Update_API_Query_variables_to_get_new_source": {
                                    "runAfter": {
                                        "Change_Endpoint_Source_to_TS": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "apiVariables",
                                        "value": "{\n  \"source\": @{variables('endpointSource')},\n  \"incidentHosts\": {\n    \"any\": true,\n    \"filters\": @{variables('endpointFilters')}\n  }\n}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_API_Response": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "contains": [
                                            "@string(body('Get_General_Host_Info'))",
                                            "must refer to an existing sensor"
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "else": {
                                "actions": {}
                            }
                        },
                        "Wait_for_the_max_expire_seconds_from_the_issued_actions": {
                            "runAfter": {
                                "Select_expire_seconds": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Wait",
                            "inputs": {
                                "interval": {
                                    "count": "@max(body('Select_expire_seconds'))",
                                    "unit": "Second"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]"
                            }
                        }
                    },
                    "TaniumApiToken": {
                        "value": "[parameters('TaniumApiToken')]"
                    },
                    "TaniumActionsApi": {
                        "value": "[variables('TaniumActionsApi')]"
                    },
                    "TaniumAllComputersUrl": {
                        "value": "[variables('TaniumAllComputersUrl')]"
                    },
                    "TaniumPackagesByNameUrlFragment": {
                        "value": "[variables('TaniumPackagesByNameUrlFragment')]"
                    },
                    "TaniumActionResultDataUrlFragment": {
                        "value": "[variables('TaniumActionResultDataUrlFragment')]"
                    },
                    "TaniumApiGatewayApi": {
                        "value": "[variables('TaniumApiGatewayApi')]"
                    }
                }
            }
        }
    ]
}
