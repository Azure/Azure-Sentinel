{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Cloud Service Threat Protection Essentials"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Cloud Service Threat Protection Essentials",
    "_solutionVersion": "3.0.0",
    "solutionId": "azuresentinel.azure-sentinel-solution-cloudservicedetection",
    "_solutionId": "[variables('solutionId')]",
    "huntingQueryObject1": {
      "huntingQueryVersion1": "1.0.1",
      "_huntingQuerycontentId1": "8d5996b2-7d4c-4dcf-bb0d-0d7fdf0e2c75",
      "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('8d5996b2-7d4c-4dcf-bb0d-0d7fdf0e2c75')))]"
    },
    "huntingQueryObject2": {
      "huntingQueryVersion2": "1.0.1",
      "_huntingQuerycontentId2": "8eff7055-9138-4edc-b8f0-48ea27e23c3c",
      "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('8eff7055-9138-4edc-b8f0-48ea27e23c3c')))]"
    },
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject1').huntingQueryTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AzureResourceAssignedPublicIP_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject1').huntingQueryVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Cloud_Service_Threat_Protection_Essentials_Hunting_Query_1",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Azure Resources Assigned Public IP Addresses",
                "category": "Hunting Queries",
                "query": "let OperationNames = dynamic([\"microsoft.compute/virtualMachines/write\", \"microsoft.resources/deployments/write\"]);\nAzureActivity\n// We look for any Operation that modified and then was accepted or succeeded where a public ip address component is referenced\n| where OperationNameValue in~ (OperationNames)\n| where ActivityStatusValue has_any (\"Succeeded\", \"Accepted\")\n| where Properties contains \"publicipaddress\"\n//| extend frontendIPConfigurations = Properties.responseBody.properties.frontendIPConfigurations\n// parsing the publicIPAddress from Properties. It is only available if the allocation method is Static.\n| parse Properties with * \"publicIPAddress\\\\\" PublicIPAddressParse\n| extend parsedProperties_ = parse_json(tostring(parse_json(Properties).responseBody)).properties\n| extend publicIPAddress_ = tostring(parse_json(tostring(parsedProperties_)).ipAddress) \n| extend publicIPAddressVersion_ = tostring(parse_json(tostring(parsedProperties_)).publicIPAddressVersion) \n| extend publicIPAllocationMethod_ = tostring(parse_json(tostring(parsedProperties_)).publicIPAllocationMethod) \n| extend scope_ = tostring(parse_json(Authorization).scope) \n| project TimeGenerated, OperationNameValue, publicIPAllocationMethod_ , publicIPAddressVersion_, scope_ , Caller, CallerIpAddress, ActivityStatusValue, Resource \n// Join in the AzureNetworkAnalytics so that we can determine if any connections were made via the public ip address and get the currently assigned ip address when allocation method is Dynamic\n| join kind= inner (\nunion isfuzzy=true\n(AzureNetworkAnalytics_CL\n// Controlling for Schema Version and later parsing - This is Version 2 and Public IPs only\n| where isnotempty(FASchemaVersion_s) and isnotempty(DestPublicIPs_s)\n| extend SchemaVersion = FASchemaVersion_s\n| extend PublicIPs = tostring(split(DestPublicIPs_s,\"|\")[0])\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), FirstProcessedTimeUTC = min(FlowStartTime_t), LastProcessedTimeUtc = max(FlowEndTime_t), \nRegions = make_set(Region_s, 1000), AzureRegions = make_set(AzureRegion_s, 1000), VMs = make_set(VM_s, 1000), MACAddresses = make_set(MACAddress_s, 1000), PublicIPs = make_set(PublicIPs, 1000), DestPort = make_set(DestPort_d, 1000), SrcIP = make_set(SrcIP_s, 1000), \nActivityCount = count() by NSGRule_s, NSGList_s, SubNet = Subnet1_s, FlowDirection_s, Subscription = Subscription1_g, Tags_s, SchemaVersion\n//NSGList_s contains the subscription ID, remove that as we already have a field for this and now it will match what we get for SchemaVersion 1\n| extend NSG = case(isnotempty(NSGList_s), strcat(split(NSGList_s, \"/\")[-2],\"/\",split(NSGList_s, \"/\")[-1]), \"NotAvailable\")\n// Depending on the SchemaVersion, we will need to provide the NSG_Name for matching against the resource identified in AzureActivity\n| extend NSG_Name = tostring(split(NSG, \"/\")[-1])\n),\n(\nAzureNetworkAnalytics_CL \n// Controlling for Schema Version and later parsing - This is Version 1\n| where isempty(FASchemaVersion_s)\n// Controlling for public IPs only\n| where isnotempty(PublicFrontendIPs_s) or isnotempty(PublicIPAddresses_s)\n| where PublicFrontendIPs_s != \"null\" or PublicIPAddresses_s != \"null\"\n| extend SchemaVersion = SchemaVersion_s\n// The Public IP can be indicated in one of 2 locations, assigning here for easy union results\n| extend PublicIPs = case(isnotempty(PublicFrontendIPs_s), PublicFrontendIPs_s,\nPublicIPAddresses_s) \n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), FirstProcessedTimeUTC = min(TimeProcessed_t), LastProcessedTimeUtc = max(TimeProcessed_t), \nRegions = make_set(Region_s, 1000), AzureRegions = make_set(DiscoveryRegion_s, 1000), VMs = make_set(VirtualMachine_s, 1000), MACAddresses = make_set(MACAddress_s, 1000), PublicIPs = make_set(PublicIPs, 1000), \nSrcIP = make_set(PrivateIPAddresses_s, 1000), Name = make_set(Name_s, 1000), DestPort = make_set(DestinationPortRange_s, 1000),\nActivityCount = count() by NSG = NSG_s, SubNet = Subnetwork_s, Subscription = Subscription_g, Tags_s, SchemaVersion\n// Some events don't have an NSG listed, populating so it is clear it is not available in the datatype\n| extend NSG = case(isnotempty(NSG), NSG, \"NotAvailable\")\n// Depending on the SchemaVersion, we will need to provide the NSG_Name for matching against the resource identified in AzureActivity\n| extend NSG_Name = tostring(split(NSG, \"/\")[-1])\n)\n| project StartTimeUtc, EndTimeUtc, FirstProcessedTimeUTC, LastProcessedTimeUtc, PublicIPs, NSG, NSG_Name, SrcIP, DestPort, SubNet, Name, VMs, MACAddresses, ActivityCount, Regions, AzureRegions, Subscription, Tags_s, SchemaVersion\n) on $left.Resource == $right.NSG_Name\n| extend UserName = iff(Caller contains '@', tostring(split(Caller, '@')[0]), '')\n| extend UPNSuffix = iff(Caller contains '@', tostring(split(Caller, '@')[1]), '')\n| extend AadUserId = iff(Caller !contains '@', tostring(Caller), '')\n| extend Account_0_Name = Caller\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend Account_0_AadUserId = AadUserId\n| extend IP_0_Address = CallerIpAddress\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query identifies instances when public IP addresses are assigned to Azure Resources and show connections to those resources."
                  },
                  {
                    "name": "tactics",
                    "value": "Impact"
                  },
                  {
                    "name": "techniques",
                    "value": "T1496"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1),'/'))))]",
              "properties": {
                "description": "Cloud Service Threat Protection Essentials Hunting Query 1",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1)]",
                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Cloud Service Threat Protection Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
        "contentKind": "HuntingQuery",
        "displayName": "Azure Resources Assigned Public IP Addresses",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.0.1')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.0.1')))]",
        "version": "1.0.1"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject2').huntingQueryTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AzureKeyVaultAccessManipulation_HuntingQueries Hunting Query with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject2').huntingQueryVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Cloud_Service_Threat_Protection_Essentials_Hunting_Query_2",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Azure Key Vault Access Policy Manipulation",
                "category": "Hunting Queries",
                "query": "let timeframe = 10m;\nAzureDiagnostics\n| where ResourceType =~ \"VAULTS\"\n| where OperationName =~ \"VaultPatch\"\n| where ResultType =~ \"Success\"\n| extend UserObjectAdded = column_ifexists(\"addedAccessPolicy_ObjectId_g\",\"\")\n| extend AddedActor = identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_name_s\n| extend KeyAccessAdded = tostring(column_ifexists(\"addedAccessPolicy_Permissions_keys_s\",\"\"))\n| extend SecretAccessAdded = tostring(column_ifexists(\"addedAccessPolicy_Permissions_secrets_s\",\"\"))\n| extend CertAccessAdded = tostring(column_ifexists(\"addedAccessPolicy_Permissions_certificates_s\",\"\"))\n| where isnotempty(UserObjectAdded)\n| project AccessAddedTime=TimeGenerated, ResourceType, OperationName, ResultType, KeyVaultName=id_s, AddedActor, UserObjectAdded, KeyAccessAdded, SecretAccessAdded, CertAccessAdded\n| join kind=inner \n( \nAzureDiagnostics\n| where ResourceType =~ \"VAULTS\"\n| where OperationName =~ \"VaultPatch\"\n| where ResultType =~ \"Success\"\n| extend RemovedActor = identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_name_s\n| extend UserObjectRemoved = column_ifexists(\"removedAccessPolicy_ObjectId_g\", \"\")\n| extend KeyAccessRemoved = tostring(column_ifexists(\"removedAccessPolicy_Permissions_keys_s\",\"\"))\n| extend SecretAccessRemoved = tostring(column_ifexists(\"removedAccessPolicy_Permissions_secrets_s\",\"\"))\n| extend CertAccessRemoved = tostring(column_ifexists(\"removedAccessPolicy_Permissions_certificates_s\",\"\"))\n| where isnotempty(UserObjectRemoved)\n| project AccessRemovedTime=TimeGenerated, ResourceType, OperationName, ResultType, KeyVaultName=id_s, RemovedActor, UserObjectRemoved, KeyAccessRemoved, SecretAccessRemoved, CertAccessRemoved\n)\non KeyVaultName\n| extend TimeDelta = abs(AccessAddedTime - AccessRemovedTime)\n| where TimeDelta < timeframe\n| project KeyVaultName, AccessAddedTime, AddedActor, UserObjectAdded, KeyAccessAdded, SecretAccessAdded, CertAccessAdded, AccessRemovedTime, RemovedActor, UserObjectRemoved, KeyAccessRemoved, SecretAccessRemoved, CertAccessRemoved, TimeDelta\n| extend Account_0_AadUserId = UserObjectAdded\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query identifies instances where a user is added and subsequently removed from an Azure Key Vault access policy within a short duration, which could indicate attempts to credential access and persistence."
                  },
                  {
                    "name": "tactics",
                    "value": "CredentialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1555"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2),'/'))))]",
              "properties": {
                "description": "Cloud Service Threat Protection Essentials Hunting Query 2",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2)]",
                "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject2').huntingQueryVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Cloud Service Threat Protection Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
        "contentKind": "HuntingQuery",
        "displayName": "Azure Key Vault Access Policy Manipulation",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.0.1')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.0.1')))]",
        "version": "1.0.1"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Cloud Service Threat Protection Essentials",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> <em>There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</em></p>\n<p>As cloud services increase in popularity, the volume of attacks against them is also increasing. Broad visibility, context and timely detection of these attacks are important for organization as they move more workloads to the cloud. The <strong>Cloud Service Threat Protection Essentials</strong> contains security content that is relevant for detection of attacks against various cloud services like key vault, storage, compute etc.</p>\n<p><strong>Pre-requisites:</strong></p>\n<p>This is a <a href=\"https://learn.microsoft.com/en-us/azure/sentinel/sentinel-solutions-catalog#domain-solutions\">domain solution</a> and does not include any data connectors. The content in this solution supports the connectors listed below. Install one or more of the listed solutions, to unlock the value provided by this solution.</p>\n<p>1.Microsoft 365</p>\n<p>2.Azure Activity</p>\n<p>3.Azure Key Vault</p>\n<p><strong>Keywords:</strong> Storage, Key Vault, Compute, Office, Mail tampering, Azure, resources</p>\n<p><strong>Hunting Queries:</strong> 2</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Cloud Service Threat Protection Essentials",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
              "version": "[variables('huntingQueryObject1').huntingQueryVersion1]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
              "version": "[variables('huntingQueryObject2').huntingQueryVersion2]"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-office365"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-azureactivity"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-azurekeyvault"
            }
          ]
        },
        "firstPublishDate": "2022-11-16",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection",
            "Security - Cloud Security"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
