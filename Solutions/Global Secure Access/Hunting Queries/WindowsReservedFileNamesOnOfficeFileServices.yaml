id: 61c28cd7-3139-4731-8ea7-2cbbeabb4684
name: GSA Enriched Office 365 - Windows Reserved Filenames Staged on Office File Services
description: |
  'This identifies Windows Reserved Filenames on Office services like SharePoint and OneDrive. It also detects when a user uploads these files to another user's workspace, which may indicate malicious activity.'
description-detailed: |
  'Identifies when Windows Reserved Filenames show up on Office services such as SharePoint and OneDrive.
  List currently includes CON, PRN, AUX, NUL, COM1, COM2, COM3, COM4, COM5, COM6, 
  COM7, COM8, COM9, LPT1, LPT2, LPT3, LPT4, LPT5, LPT6, LPT7, LPT8, LPT9 file extensions.
  Additionally, identifies when a given user is uploading these files to another user's workspace.
  This may be an indication of a staging location for malware or other malicious activity.
  References: https://docs.microsoft.com/windows/win32/fileio/naming-a-file'
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - EnrichedMicrosoft365AuditLogs
tactics:
  - CommandAndControl
relevantTechniques:
  - T1105
query: |
    let Reserved = dynamic(['CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9']);
      // Query for OfficeActivity
      let OfficeActivityResults = OfficeActivity
        | where isnotempty(SourceFileExtension)
        | where SourceFileExtension in (Reserved) or SourceFileName in (Reserved)
        | where UserAgent !has "Mac OS"
        | extend SiteUrlUserFolder = tolower(split(Site_Url, '/')[-2])
        | extend UserIdUserFolderFormat = tolower(replace_regex(UserId, '@|\\.', '_'))
        | extend UserIdDiffThanUserFolder = iff(Site_Url has '/personal/' and SiteUrlUserFolder != UserIdUserFolderFormat, true, false)
        | summarize TimeGenerated = make_list(TimeGenerated, 100000), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Operations = make_list(Operation, 100000), UserAgents = make_list(UserAgent, 100000), OfficeIds = make_list(OfficeId, 100000), SourceRelativeUrls = make_list(SourceRelativeUrl, 100000), FileNames = make_list(SourceFileName, 100000)
        by OfficeWorkload, RecordType, UserType, UserKey, UserId, ClientIP, Site_Url, SourceFileExtension, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder
        | extend AccountName = tostring(split(UserId, "@")[0]), AccountUPNSuffix = tostring(split(UserId, "@")[1])
        | extend IP_0_Address = ClientIP
        | extend Account_0_Name = AccountName
        | extend Account_0_UPNSuffix = AccountUPNSuffix
        | extend URL_0_Url = Site_Url;
      // Query for EnrichedMicrosoft365AuditLogs
      let EnrichedMicrosoft365Results = EnrichedMicrosoft365AuditLogs
        | extend SourceFileName = tostring(parse_json(tostring(AdditionalProperties)).SourceFileName)
        | extend UserAgent = tostring(parse_json(tostring(AdditionalProperties)).UserAgent)
        | extend Site_Url = tostring(parse_json(tostring(AdditionalProperties)).SiteUrl)
        | where isnotempty(ObjectId)
        | where ObjectId in (Reserved) or SourceFileName in (Reserved)
        | where UserAgent !has "Mac OS"
        | extend SiteUrlUserFolder = tolower(split(Site_Url, '/')[-2])
        | extend UserIdUserFolderFormat = tolower(replace_regex(UserId, '@|\\.', '_'))
        | extend UserIdDiffThanUserFolder = iff(Site_Url has '/personal/' and SiteUrlUserFolder != UserIdUserFolderFormat, true, false)
        | summarize TimeGenerated = make_list(TimeGenerated, 100000), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Operations = make_list(Operation, 100000), UserAgents = make_list(UserAgent, 100000), ObjectIds = make_list(Id, 100000), SourceRelativeUrls = make_list(ObjectId, 100000), FileNames = make_list(SourceFileName, 100000)
        by Workload, RecordType, UserType, UserKey, UserId, ClientIp, Site_Url, ObjectId, SiteUrlUserFolder, UserIdUserFolderFormat, UserIdDiffThanUserFolder
        | extend AccountName = tostring(split(UserId, "@")[0]), AccountUPNSuffix = tostring(split(UserId, "@")[1])
        | extend IP_0_Address = ClientIp
        | extend Account_0_Name = AccountName
        | extend Account_0_UPNSuffix = AccountUPNSuffix
        | extend URL_0_Url = Site_Url;
      // Combine both queries
      OfficeActivityResults
      | union EnrichedMicrosoft365Results
      | order by StartTime desc;
entityMappings:
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: ClientIp
  - entityType: Account
    fieldMappings:
      - identifier: Name
        columnName: AccountName
      - identifier: UPNSuffix
        columnName: AccountUPNSuffix
  - entityType: URL
    fieldMappings:
      - identifier: Url
        columnName: Site_Url
version: 2.0.2
