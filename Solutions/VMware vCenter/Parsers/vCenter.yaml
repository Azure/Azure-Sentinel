id: a466d02c-cfe0-4377-9ae0-fdfc8dd79e78
Function:
  Title: Parser for vCenter
  Version: '1.0.1'
  LastUpdated: '2024-11-08'
Category: Microsoft Sentinel Parser
FunctionName: vCenter
FunctionAlias: vCenter
FunctionQuery: |
    let vCenter_Login =() {
        vcenter_CL
        | where Message has ("UserLoginSessionEvent")
        | parse Message with * "Event [" EventId:string "] [1-1] [" EventTime:datetime "] [" EventType:string "] [" EventSeverity:string "]" * "[User " DomainAndUser:string "@" SourceIP:string " logged in as " UserAgent:string "]" *
        | extend DomainAndUser = split(DomainAndUser,'\\')
        | extend DomainName = iff(array_length(DomainAndUser) > 1, DomainAndUser[0], ""),
            Username = iff(array_length(DomainAndUser) > 1, DomainAndUser[1], DomainAndUser[0])
        | project-away DomainAndUser
    };
    let vCenter_Logout =() {
        vcenter_CL
        | where Message has ("UserLogoutSessionEvent")
        | parse Message with * "Event [" EventId: string "] [1-1] [" EventTime: datetime "] [" EventType: string "] [" EventSeverity:string "]" * "[User " DomainAndUser:string "@" SourceIP " logged out (login time:" LoginTime: string ", number of API invocations: " APIInvocationCount: string ", user agent:" UserAgent: string ")]" *
        | extend APIInvocationCount = toint(replace(',', '', APIInvocationCount))
        | extend DomainAndUser = split(DomainAndUser,'\\')
    | extend DomainName = iff(array_length(DomainAndUser) > 1, DomainAndUser[0], ""),
        Username = iff(array_length(DomainAndUser) > 1, DomainAndUser[1], DomainAndUser[0])
    | project-away DomainAndUser
    };
    let vCenter_RoleAdded=() {
        vcenter_CL
        | where Message has_any("RoleAddedEvent")
        | parse Message with * " " * " " * " " Hostname:string "vpxd" * "Event [" EventId:string "] [1-1] [" EventTime:datetime "] [" EventType:string "] [" EventSeverity:string "] [" DomainAndUser:string "]" * " role " RoleName:string " " Operation:string  "]" *
        | extend DomainAndUser = split(DomainAndUser,'\\')
        | extend DomainName = iff(array_length(DomainAndUser) > 1, DomainAndUser[0], ""),
            Username = iff(array_length(DomainAndUser) > 1, DomainAndUser[1], DomainAndUser[0])
        | project-away DomainAndUser
    };
    let vCenter_RoleRemoved=() {
        vcenter_CL
        | where Message has_any("RoleRemovedEvent")
        | parse Message with * " " * " " * " " Hostname:string "vpxd" * "Event [" EventId:string "] [1-1] [" EventTime:datetime "] [" EventType:string "] [" EventSeverity:string "] [" DomainAndUser:string "]" * "[Role " RoleName:string " " Operation:string  "]" *
        | extend DomainAndUser = split(DomainAndUser,'\\')
        | extend DomainName = iff(array_length(DomainAndUser) > 1, DomainAndUser[0], ""),
            Username = iff(array_length(DomainAndUser) > 1, DomainAndUser[1], DomainAndUser[0])
        | project-away DomainAndUser
    };
    let vCenter_RoleModified=() {
        vcenter_CL
        | where Message has ("RoleUpdatedEvent")
        | parse Message with * " " * " " * " " Hostname:string "vpxd" * "Event [" EventId:string "] [1-1] [" EventTime:datetime "] [" EventType:string "] [" EventSeverity:string "] [" DomainAndUser:string "]" * "Previous name: " OldRoleName:string ", new name: " NewRoleName:string "." * "Added privileges: " AddedPriviledges:string ". " * "Removed privileges: " RemovedPriviledges:string ".]" *
        | extend DomainAndUser = split(DomainAndUser,'\\')
        | extend DomainName = iff(array_length(DomainAndUser) > 1, DomainAndUser[0], ""),
            Username = iff(array_length(DomainAndUser) > 1, DomainAndUser[1], DomainAndUser[0])
        | project-away DomainAndUser
    };
    union vCenter_Login,vCenter_Logout,vCenter_RoleAdded,vCenter_RoleRemoved,vCenter_RoleModified
    | extend ClientIP = SourceIP
