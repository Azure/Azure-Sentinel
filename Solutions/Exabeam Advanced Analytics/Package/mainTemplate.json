{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Exabeam Advanced Analytics"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Exabeam Advanced Analytics",
    "_solutionVersion": "3.0.1",
    "solutionId": "azuresentinel.azure-sentinel-solution-exabeamadvancedanalytics",
    "_solutionId": "[variables('solutionId')]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','ExabeamEvent')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'ExabeamEvent')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('ExabeamEvent-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "ExabeamEvent-Parser"
    },
    "uiConfigId1": "Exabeam",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "Exabeam",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ExabeamEvent Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "ExabeamEvent",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "ExabeamEvent",
                "query": "Syslog\n| where ProcessName contains \"Exabeam\"\n| extend EventVendor = 'Exabeam'\n| extend Service = extract(@'service=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Status = extract(@'status=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Id = extract(@'id=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend UrlOriginal = extract(@'url=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend EntityValue = extract(@'entity_value=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Score = extract(@'score=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend SequenceType = extract(@'sequence_type=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend EventStartTime = todatetime(extract(@'start_time=\\\"(.*?)\\\"', 1, SyslogMessage))\n| extend EventEndTime = todatetime(extract(@'end_time=\\\"(.*?)\\\"', 1, SyslogMessage))\n| extend SrcUserName = extract(@'user=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend SrcDvcHostname = extract(@'src_host=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend SrcIpAddr = extract(@'src_ip=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Labels = extract(@'labels=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Accounts = extract(@'accounts=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AssetsCount = extract(@'assets_count=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Assets = extract(@'assets=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Zones = extract(@'zones=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend TopReasons = extract(@'top_reasons=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend ReasonsCount = extract(@'reasons_count=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend EventsCount = extract(@'events_count=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AlertsCount = extract(@'alerts_count=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AssetLabels = extract(@'asset_labels=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AssetLocations = extract(@'asset_locations=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend TopUsers = extract(@'top_users=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AssetHostname = extract(@'host_name=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AssetIpAddress = extract(@'ip_address=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend DstDvcHostname = extract(@'dest_host=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend DstIpAddr = extract(@'dest_ip=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend EventTime = todatetime(extract(@'event_time=\\\"(.*?)\\\"', 1, SyslogMessage))\n| extend EventType = extract(@'event_type=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend DvcHostname = extract(@'host=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Domain = extract(@'domain=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Raw = extract(@'raw=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend RuleId = extract(@'rule_id=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend RuleName = extract(@'rule_name=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend RuleDescription = extract(@'rule_description=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend App = extract(@'app=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend EventSubType = extract(@'event_subtype=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Activity = extract(@'activity=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AdditionalInfo = extract(@'additional_info=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend JobStatus = extract(@'job_status=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend JobDetails = extract(@'job_details=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend JobId = extract(@'job_id=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend CreatedBy = extract(@'created_by=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Timestamp = todatetime(extract(@'timestamp=\\\"(.*?)\\\"', 1, SyslogMessage))\n| project TimeGenerated\n        , EventVendor\n        , Service\n        , Status\n        , Id\n        , UrlOriginal\n        , EntityValue\n        , Score\n        , SequenceType\n        , EventStartTime\n        , EventEndTime\n        , SrcUserName\n        , SrcDvcHostname\n        , SrcIpAddr\n        , Labels\n        , Accounts\n        , AssetsCount\n        , Assets\n        , Zones\n        , TopReasons\n        , ReasonsCount\n        , EventsCount\n        , AlertsCount\n        , AssetLabels\n        , AssetLocations\n        , TopUsers\n        , AssetHostname\n        , AssetIpAddress\n        , DstDvcHostname\n        , DstIpAddr\n        , EventTime\n        , EventType\n        , DvcHostname\n        , Domain\n        , Raw\n        , RuleId\n        , RuleName\n        , RuleDescription\n        , App\n        , EventSubType\n        , Activity\n        , AdditionalInfo\n        , JobStatus\n        , JobDetails\n        , JobId\n        , CreatedBy\n        , Timestamp\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'ExabeamEvent')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Exabeam Advanced Analytics",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "link": "https://support.microsoft.com",
                  "email": "support@microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "ExabeamEvent",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "ExabeamEvent",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "ExabeamEvent",
        "query": "Syslog\n| where ProcessName contains \"Exabeam\"\n| extend EventVendor = 'Exabeam'\n| extend Service = extract(@'service=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Status = extract(@'status=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Id = extract(@'id=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend UrlOriginal = extract(@'url=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend EntityValue = extract(@'entity_value=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Score = extract(@'score=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend SequenceType = extract(@'sequence_type=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend EventStartTime = todatetime(extract(@'start_time=\\\"(.*?)\\\"', 1, SyslogMessage))\n| extend EventEndTime = todatetime(extract(@'end_time=\\\"(.*?)\\\"', 1, SyslogMessage))\n| extend SrcUserName = extract(@'user=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend SrcDvcHostname = extract(@'src_host=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend SrcIpAddr = extract(@'src_ip=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Labels = extract(@'labels=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Accounts = extract(@'accounts=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AssetsCount = extract(@'assets_count=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Assets = extract(@'assets=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Zones = extract(@'zones=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend TopReasons = extract(@'top_reasons=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend ReasonsCount = extract(@'reasons_count=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend EventsCount = extract(@'events_count=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AlertsCount = extract(@'alerts_count=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AssetLabels = extract(@'asset_labels=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AssetLocations = extract(@'asset_locations=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend TopUsers = extract(@'top_users=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AssetHostname = extract(@'host_name=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AssetIpAddress = extract(@'ip_address=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend DstDvcHostname = extract(@'dest_host=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend DstIpAddr = extract(@'dest_ip=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend EventTime = todatetime(extract(@'event_time=\\\"(.*?)\\\"', 1, SyslogMessage))\n| extend EventType = extract(@'event_type=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend DvcHostname = extract(@'host=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Domain = extract(@'domain=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Raw = extract(@'raw=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend RuleId = extract(@'rule_id=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend RuleName = extract(@'rule_name=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend RuleDescription = extract(@'rule_description=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend App = extract(@'app=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend EventSubType = extract(@'event_subtype=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Activity = extract(@'activity=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend AdditionalInfo = extract(@'additional_info=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend JobStatus = extract(@'job_status=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend JobDetails = extract(@'job_details=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend JobId = extract(@'job_id=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend CreatedBy = extract(@'created_by=\\\"(.*?)\\\"', 1, SyslogMessage)\n| extend Timestamp = todatetime(extract(@'timestamp=\\\"(.*?)\\\"', 1, SyslogMessage))\n| project TimeGenerated\n        , EventVendor\n        , Service\n        , Status\n        , Id\n        , UrlOriginal\n        , EntityValue\n        , Score\n        , SequenceType\n        , EventStartTime\n        , EventEndTime\n        , SrcUserName\n        , SrcDvcHostname\n        , SrcIpAddr\n        , Labels\n        , Accounts\n        , AssetsCount\n        , Assets\n        , Zones\n        , TopReasons\n        , ReasonsCount\n        , EventsCount\n        , AlertsCount\n        , AssetLabels\n        , AssetLocations\n        , TopUsers\n        , AssetHostname\n        , AssetIpAddress\n        , DstDvcHostname\n        , DstIpAddr\n        , EventTime\n        , EventType\n        , DvcHostname\n        , Domain\n        , Raw\n        , RuleId\n        , RuleName\n        , RuleDescription\n        , App\n        , EventSubType\n        , Activity\n        , AdditionalInfo\n        , JobStatus\n        , JobDetails\n        , JobId\n        , CreatedBy\n        , Timestamp\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'ExabeamEvent')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Exabeam Advanced Analytics",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "tier": "Microsoft",
          "name": "Microsoft Corporation",
          "link": "https://support.microsoft.com",
          "email": "support@microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Exabeam Advanced Analytics data connector with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "[Deprecated] Exabeam Advanced Analytics",
                  "publisher": "Exabeam",
                  "descriptionMarkdown": "The [Exabeam Advanced Analytics](https://www.exabeam.com/ueba/advanced-analytics-and-mitre-detect-and-stop-threats/) data connector provides the capability to ingest Exabeam Advanced Analytics events into Microsoft Sentinel. Refer to [Exabeam Advanced Analytics documentation](https://docs.exabeam.com/) for more information.",
                  "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Exabeam",
                      "baseQuery": "ExabeamEvent"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Top 10 Clients (Source IP)",
                      "query": "ExabeamEvent\n | summarize count() by SrcIpAddr\n | top 10 by count_"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "Syslog (Exabeam)",
                      "lastDataReceivedQuery": "ExabeamEvent\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "ExabeamEvent\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "write permission is required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "delete": true
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected which is deployed as part of the solution. To view the function code in Log Analytics, open Log Analytics/Microsoft Sentinel Logs blade, click Functions and search for the alias Exabeam Advanced Analytics and load the function code or click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Exabeam%20Advanced%20Analytics/Parsers/ExabeamEvent.txt), on the second line of the query, enter the hostname(s) of your Exabeam Advanced Analytics device(s) and any other unique identifiers for the logstream. The function usually takes 10-15 minutes to activate after solution installation/update."
                    },
                    {
                      "description": ">**NOTE:** This data connector has been developed using Exabeam Advanced Analytics i54 (Syslog)"
                    },
                    {
                      "description": "Install the agent on the server where the Exabeam Advanced Analytic logs are generated or forwarded.\n\n> Logs from Exabeam Advanced Analytic deployed on Linux or Windows servers are collected by **Linux** or **Windows** agents.",
                      "instructions": [
                        {
                          "parameters": {
                            "title": "Choose where to install the Linux agent:",
                            "instructionSteps": [
                              {
                                "title": "Install agent on Azure Linux Virtual Machine",
                                "description": "Select the machine to install the agent on and then click **Connect**.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxVirtualMachine"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              },
                              {
                                "title": "Install agent on a non-Azure Linux Machine",
                                "description": "Download the agent on the relevant machine and follow the instructions.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxNonAzure"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ],
                      "title": "1. Install and onboard the agent for Linux or Windows"
                    },
                    {
                      "instructions": [
                        {
                          "parameters": {
                            "title": "Choose where to install the Windows agent:",
                            "instructionSteps": [
                              {
                                "title": "Install agent on Azure Windows Virtual Machine",
                                "description": "Select the machine to install the agent on and then click **Connect**.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnVirtualMachine"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              },
                              {
                                "title": "Install agent on a non-Azure Windows Machine",
                                "description": "Download the agent on the relevant machine and follow the instructions.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnNonAzure"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ]
                    },
                    {
                      "description": "Configure the custom log directory to be collected",
                      "instructions": [
                        {
                          "parameters": {
                            "linkType": "OpenCustomLogsSettings"
                          },
                          "type": "InstallAgent"
                        }
                      ],
                      "title": "2. Configure the logs to be collected"
                    },
                    {
                      "description": "[Follow these instructions](https://docs.exabeam.com/en/advanced-analytics/i56/advanced-analytics-administration-guide/125351-advanced-analytics.html#UUID-7ce5ff9d-56aa-93f0-65de-c5255b682a08) to send Exabeam Advanced Analytics activity log data via syslog.",
                      "title": "3. Configure Exabeam event forwarding to Syslog"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Exabeam Advanced Analytics",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "link": "https://support.microsoft.com",
                  "email": "support@microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "[Deprecated] Exabeam Advanced Analytics",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Exabeam Advanced Analytics",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "tier": "Microsoft",
          "name": "Microsoft Corporation",
          "link": "https://support.microsoft.com",
          "email": "support@microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "[Deprecated] Exabeam Advanced Analytics",
          "publisher": "Exabeam",
          "descriptionMarkdown": "The [Exabeam Advanced Analytics](https://www.exabeam.com/ueba/advanced-analytics-and-mitre-detect-and-stop-threats/) data connector provides the capability to ingest Exabeam Advanced Analytics events into Microsoft Sentinel. Refer to [Exabeam Advanced Analytics documentation](https://docs.exabeam.com/) for more information.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Exabeam",
              "baseQuery": "ExabeamEvent"
            }
          ],
          "dataTypes": [
            {
              "name": "Syslog (Exabeam)",
              "lastDataReceivedQuery": "ExabeamEvent\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "ExabeamEvent\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Top 10 Clients (Source IP)",
              "query": "ExabeamEvent\n | summarize count() by SrcIpAddr\n | top 10 by count_"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "write permission is required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "delete": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected which is deployed as part of the solution. To view the function code in Log Analytics, open Log Analytics/Microsoft Sentinel Logs blade, click Functions and search for the alias Exabeam Advanced Analytics and load the function code or click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Exabeam%20Advanced%20Analytics/Parsers/ExabeamEvent.txt), on the second line of the query, enter the hostname(s) of your Exabeam Advanced Analytics device(s) and any other unique identifiers for the logstream. The function usually takes 10-15 minutes to activate after solution installation/update."
            },
            {
              "description": ">**NOTE:** This data connector has been developed using Exabeam Advanced Analytics i54 (Syslog)"
            },
            {
              "description": "Install the agent on the server where the Exabeam Advanced Analytic logs are generated or forwarded.\n\n> Logs from Exabeam Advanced Analytic deployed on Linux or Windows servers are collected by **Linux** or **Windows** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Linux agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "1. Install and onboard the agent for Linux or Windows"
            },
            {
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Windows agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Windows Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Windows Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ]
            },
            {
              "description": "Configure the custom log directory to be collected",
              "instructions": [
                {
                  "parameters": {
                    "linkType": "OpenCustomLogsSettings"
                  },
                  "type": "InstallAgent"
                }
              ],
              "title": "2. Configure the logs to be collected"
            },
            {
              "description": "[Follow these instructions](https://docs.exabeam.com/en/advanced-analytics/i56/advanced-analytics-administration-guide/125351-advanced-analytics.html#UUID-7ce5ff9d-56aa-93f0-65de-c5255b682a08) to send Exabeam Advanced Analytics activity log data via syslog.",
              "title": "3. Configure Exabeam event forwarding to Syslog"
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Exabeam Advanced Analytics",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Exabeam%20Advanced%20Analytics/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://www.exabeam.com/\">Exabeam</a> Advanced Analytics data connector provides the capability to ingest <a href=\"https://www.exabeam.com/ueba/advanced-analytics-and-mitre-detect-and-stop-threats/\">Exabeam Advanced Analytics</a> events into Microsoft Sentinel. Refer to <a href=\"https://docs.exabeam.com/\">Exabeam Advanced Analytics documentation</a> for more information.</p>\n<p>This solution is dependent on the Syslog solution containing the Syslog via AMA connector to collect the logs. The Syslog solution will be installed as part of this solution installation.</p>\n<p><strong>NOTE</strong>: Microsoft recommends installation of Syslog via AMA Connector. Legacy connector uses the Log Analytics agent which is about to be deprecated by <strong>Aug 31, 2024</strong>. Using MMA and AMA on same machine can cause log duplication and extra ingestion cost <a href=\"https://learn.microsoft.com/en-us/azure/sentinel/ama-migrate\">more details</a>.</p>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/exabeam.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Exabeam Advanced Analytics",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-syslog"
            }
          ]
        },
        "firstPublishDate": "2022-05-20",
        "providers": [
          "Exabeam"
        ],
        "categories": {
          "domains": [
            "Security - Others"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
