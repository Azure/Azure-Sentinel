{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Log4jIndicatorProcessor",
        "description": "These playbooks automate the ingest of threat indicators into the ThreatIntelligenceIndicator table of an Microsoft Sentinel workspace. Sample data for Log4j IOC can be found at https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Log4j_IOC_List.csv.",
        "prerequisites": [
            "1. Have the Microsoft Sentinel Workspace Name handy."
        ],
        "postDeployment": [
            "1. Authorize/Configure Microsoft Sentinel and Log Analytics workspace connections in the Logic App.",
            "2. Assign Contributor role to the Logic App's managed identity.",
            "3. Optionally Recurrence trigger can be modified to run on a schedule. Default is set to run once in a day.",
            "[click here for detailed steps](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Apache%20Log4j%20Vulnerability%20Detection/Playbooks/Readme.md)"
        ],
        "lastUpdateTime": "2025-07-16T00:00:00.000Z",
        "entities": [
        ],
        "tags": [
            "Log4j",
            "Indicator",
            "Threat Intelligence",
            "Microsoft Sentinel"
        ],
        "support": {
            "tier": "Microsoft"
        },
        "author": {
            "name": "Rahul Kumar"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Log4jIndicatorProcessor",
            "type": "string"
        },
        "LogAnalyticsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Log Analytics Workspace where the playbook will ingest threat indicators."
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "AzureMonitorLogsConnectionName": "[concat('AzureMonitorLogs-', parameters('PlaybookName'))]",
        "LogAnalyticsWorkspaceName": "[parameters('LogAnalyticsWorkspaceName')]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                            },
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each_indicator": {
                            "foreach": "@body('Select_Log4j_indicators_and_transform_to_tiIndicators')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Threat_Intelligence_-_Upload_STIX_Objects_(Preview)": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "body": {
                                                    "sourcesystem": "Log4jIndicatorProcessor",
                                                    "indicators": "@variables('StixObjects')"
                                                },
                                                "path": "[concat('/V2/ThreatIntelligence/', reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName')), '2025-02-01').customerId, '/UploadIndicators/')]"
                                            }
                                        },
                                        "Reset_variable_StixObjects": {
                                            "runAfter": {
                                                "Threat_Intelligence_-_Upload_STIX_Objects_(Preview)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "StixObjects",
                                                "value": [
                                                ]
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Append_to_array_StixObjects": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                        }
                                    },
                                    "expression": {
                                        "or": [
                                            {
                                                "equals": [
                                                    "@mod(variables('IndicatorCounter'), 100)",
                                                    0
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@variables('IndicatorCounter')",
                                                    "@length(body('Select_Log4j_indicators_and_transform_to_tiIndicators'))"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If",
                                    "description": "Chunk 100 indicator in a request to circumvent API limitation."
                                },
                                "Append_to_array_StixObjects": {
                                    "runAfter": {
                                        "Increment_variable_IndicatorCounter": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "StixObjects",
                                        "value": "@item()"
                                    }
                                },
                                "Increment_variable_IndicatorCounter": {
                                    "type": "IncrementVariable",
                                    "inputs": {
                                        "name": "IndicatorCounter",
                                        "value": 1
                                    }
                                }
                            },
                            "runAfter": {
                                "Select_Log4j_indicators_and_transform_to_tiIndicators": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Run_query_and_list_results_V2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Run_query_and_list_results_V2')",
                                "schema": {
                                    "properties": {
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "IPAddress": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "IPAddress"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Run_query_and_list_results_V2": {
                            "runAfter": {
                                "Initialize_variables_IndicatorCounter": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "query": "externaldata(IPAddress: string)[@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Log4j_IOC_List.csv\"]\nwith (format=\"csv\", ignoreFirstRecord = true)",
                                    "timerangetype": "2",
                                    "timerange": {
                                        "relativeTimeRange": "Last 24 hours"
                                    }
                                },
                                "path": "/queryDataV2",
                                "queries": {
                                    "subscriptions": "[subscription().subscriptionId]",
                                    "resourcegroups": "[resourceGroup().name]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "resourcename": "[variables('LogAnalyticsWorkspaceName')]"
                                }
                            }
                        },
                        "Select_Log4j_indicators_and_transform_to_tiIndicators": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('Parse_JSON')?['value']",
                                "select": {
                                    "type": "indicator",
                                    "spec_version": "2.1",
                                    "confidence": "100",
                                    "id": "indicator--@{guid()}",
                                    "name": "Microsoft Log4j Threat Indicator",
                                    "description": "Microsoft Log4j Threat Indicator",
                                    "created": "@utcNow()",
                                    "modified": "@utcNow()",
                                    "pattern": "[[ipv4-addr:value = '@{item()?['IPAddress']}']",
                                    "pattern_type": "stix",
                                    "valid_from": "@utcNow()",
                                    "valid_until": "@getFutureTime(1, 'Year', 'yyyy-MM-ddTHH:mm:ss.000000Z')"
                                }
                            }
                        },
                        "Initialize_Array_-_StixObjects": {
                            "runAfter": {
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StixObjects",
                                        "type": "array",
                                        "value": [
                                        ]
                                    }
                                ]
                            }
                        },
                        "Initialize_variables_IndicatorCounter": {
                            "runAfter": {
                                "Initialize_Array_-_StixObjects": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IndicatorCounter",
                                        "type": "integer"
                                    }
                                ]
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                                "connectionName": "[variables('AzureMonitorLogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "Log4jIndicatorProcessor",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureMonitorLogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureMonitorLogsConnectionName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        }
    ]
}
