{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "resources": [
        {
            "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',guid(resourceGroup().id, deployment().name))]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',guid(resourceGroup().id, deployment().name))]",
            "apiVersion": "2021-03-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
	"kind": "APIPolling",
	"properties": {
		"connectorUiConfig": {
			"id": "GitHubEcAuditLogPolling",
			"title": "GitHub Enterprise Audit Log",
			"publisher": "GitHub",
			"descriptionMarkdown": "The GitHub audit log connector provides the capability to ingest GitHub logs into Microsoft Sentinel. By connecting GitHub audit logs into Microsoft Sentinel, you can view this data in workbooks, use it to create custom alerts, and improve your investigation process. \n\n This connector supports both **Organization-level** and **Enterprise-level** audit logs. Choose the appropriate option based on your GitHub setup and access requirements. \n\n **Note:** If you intended to ingest GitHub subscribed events into Microsoft Sentinel, please refer to GitHub (using Webhooks) Connector from \"**Data Connectors**\" gallery.",
			"graphQueriesTableName": "GitHubAuditLogPolling_CL",
			"graphQueries": [
				{
					"metricName": "Total events received",
					"legend": "GitHub audit log events",
					"baseQuery": "{{graphQueriesTableName}}"
				}
			],
			"sampleQueries": [
				{
					"description": "All logs",
					"query": "{{graphQueriesTableName}}\n | take 10"
				}
			],
			"dataTypes": [
				{
					"name": "GitHubAuditData",
					"lastDataReceivedQuery": "GitHubAuditData\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				}
			],
			"connectivityCriterias": [
				{
					"type": "SentinelKindsV2",
					"value": []
				}
			],
			"availability": {
				"status": 1,
				"isPreview": true
			},
			"permissions": {
				"resourceProvider": [
					{
						"provider": "Microsoft.OperationalInsights/workspaces",
						"permissionsDisplayText": "read and write permissions are required.",
						"providerDisplayName": "Workspace",
						"scope": "Workspace",
						"requiredPermissions": {
							"write": true,
							"read": true,
							"delete": true
						}
					}
				],
				"customs": [
					{
						"name": "GitHub API personal access token",
						"description": "You need a GitHub personal access token to enable polling for the audit log. For **Organization-level** audit logs: use either a classic token with 'read:org' scope OR a fine-grained token with 'Administration: Read-only' scope. For **Enterprise-level** audit logs: use either a classic token with 'read:audit_log' scope OR a fine-grained token with 'Enterprise administration: Read' scope."
					},
					{
						"name": "GitHub Enterprise type",
						"description": "This connector will only function with GitHub Enterprise Cloud; it will not support GitHub Enterprise Server."
					}
				]
			},
			"instructionSteps": [
				{
					"title": "Connect the GitHub Audit Log to Microsoft Sentinel",
					"description": "Enable GitHub audit logs and configure the appropriate endpoint. \n\n**STEP 1: Choose your audit log level** \n\n**For Organization-level audit logs:** \n• Enter exactly: `organizations` (in the first field) \n• Enter your organization name (in the second field) \n• Token scope required: `read:org` (classic) or `Administration: Read-only` (fine-grained) \n\n**For Enterprise-level audit logs:** \n• Enter exactly: `enterprises` (in the first field) \n• Enter your enterprise slug (in the second field) \n• Token scope required: `read:audit_log` (classic) or `Enterprise administration: Read` (fine-grained) \n\n**STEP 2: Create your personal access token** \nFollow [this guide](https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token) to create your personal access token with the appropriate scope.",
					"instructions": [
						{
							"parameters": {
								"enable": "true",
								"userRequestPlaceHoldersInput": [
									{
										"displayText": "Endpoint Type (enter EXACTLY: 'organizations' or 'enterprises')",
										"requestObjectKey": "endpointType",
										"placeHolderName": "{{placeHolder1}}",
										"placeHolderValue": "organizations"
									},
									{
										"displayText": "Organization Name or Enterprise Slug",
										"requestObjectKey": "orgOrEnterprise",
										"placeHolderName": "{{placeHolder2}}",
										"placeHolderValue": ""
									}
								]
							},
							"type": "APIKey"
						}
					]
				}
			]
		},
		"pollingConfig": {
			"owner": "ASI",
			"version": "2.0",
			"source": "PaaS",
			"templateFilePath": "",
			"templateFileName": "",
			"auth": {
				"authType": "APIKey",
				"APIKeyName": "Authorization",
				"APIKeyIdentifier": "token"
			},
			"request": {
				"apiEndpoint": "https://api.github.com/{{placeHolder1}}/{{placeHolder2}}/audit-log?include=all",
				"rateLimitQPS": 50,
				"queryWindowInMin": 15,
				"httpMethod": "Get",
				"queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
				"retryCount": 2,
				"timeoutInSeconds": 60,
				"headers": {
					"Accept": "application/json",
					"User-Agent": "Scuba"
				},
				"queryParameters": {
					"phrase": "created:{_QueryWindowStartTime}..{_QueryWindowEndTime}"
				}
			},
			"paging": {
				"pagingType": "LinkHeader",
				"pageSizeParaName": "per_page"
			},
			"response": {
				"eventsJsonPaths": [
					"$"
				]
			}
		}
	}
            }
    ]
}
