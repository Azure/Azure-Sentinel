id: a6453489-5e6c-4976-bfc7-f9d234fde3ca
Function:
  Title: Parser for Auth0 Auth0AM_CL
  Version: '1.0.0'
  LastUpdated: '2023-12-07'
Category: Microsoft Sentinel Parser
FunctionName: Auth0AM
FunctionAlias: Auth0AM
FunctionQuery: |
              let AutoLogsview = view() {union isfuzzy=true (Auth0Logs_CL| project-rename EventCode = EventType, IPAddress = SrcIpAddr, UserAgent = HttpUserAgent, Hostname = SrcHostname, UserId = ActorUserId, UserPrincipalName= ActorUsername, Date = TimeGenerated), (Auth0AM_CL | project Audience = tostring(column_ifexists('audience_s', ""))
              , Auth0ClientEnvIos = tostring(column_ifexists('auth0__s', ""))
              , Auth0ClientEnvNode = tostring(column_ifexists('auth0_client_env_node_s', ""))
              , Auth0ClientEnvSwift = tostring(column_ifexists('auth0_client_env_swift_s', ""))
              , Auth0ClientName = tostring(column_ifexists('auth0_client_name_s', ""))
              , Auth0ClientVersion = tostring(column_ifexists('auth0_client_version_s', ""))
              , ClientId = tostring(column_ifexists('client_id_s', ""))
              , ClientIp = tostring(column_ifexists('client_ip_s', ""))
              , ClientName = tostring(column_ifexists('client_name_s', ""))
              , ConnectionId = tostring(column_ifexists('connection_id_s', ""))
              , Connection = tostring(column_ifexists('connection_s', ""))
              , Date = todatetime(column_ifexists('date_t', ""))
              , Description = tostring(column_ifexists('description_s', ""))
              , DetailsAccessedSecrets = tostring(column_ifexists('details_accessedSecrets_s', ""))
              , DetailsActionsExecutions = todynamic(column_ifexists('details_actions_executions_s', ""))
              , DetailsAllowedOrigins = todynamic(column_ifexists('details_allowedOrigins_s', ""))
              , DetailsClientId = tostring(column_ifexists('details_body_client_id_s', ""))
              , DetailsConnection = tostring(column_ifexists('details_body_connection_s', ""))
              , DetailsEmail = tostring(column_ifexists('details_body_email_s', ""))
              , DetailsEmailVerified = tobool(column_ifexists('details_body_email_verified_b', ""))
              , DetailsIdentifierType = tostring(column_ifexists('details_body_identifier_type_s', ""))
              , DetailsIdentifierValue = tostring(column_ifexists('details_body_identifier_value_s', ""))
              , DetailsNewEmail = tostring(column_ifexists('details_body_newEmail_s', ""))
              , DetailsTenant = tostring(column_ifexists('details_body_tenant_s', ""))
              , DetailsUserId = tostring(column_ifexists('details_body_user_id_g', ""))
              , DetailsVerify = tobool(column_ifexists('details_body_verify_b', ""))
              , DetailsCode = tostring(column_ifexists('details_code_s', ""))
              , DetailsCompletedAt = unixtime_milliseconds_todatetime(tolong(column_ifexists('details_completedAt_d', "")))
              , DetailsConsoleOut = tostring(column_ifexists('details_consoleOut_s', ""))
              , DetailsElapsedTime = toint(column_ifexists('details_elapsedTime_d', ""))
              , DetailsErrorMessage = tostring(column_ifexists('details_error_message_s', ""))
              , DetailsHeadersOrigin = tostring(column_ifexists('details_headers_origin_s', ""))
              , DetailsXforwardedProtocol = tostring(column_ifexists('details_headers_x_forwarded_proto_s', ""))
              , DetailsHost = tostring(column_ifexists('details_host_s', ""))
              , DetailsInitiatedAt = unixtime_milliseconds_todatetime(tolong((column_ifexists('details_initiatedAt_d', ""))))
              , DetailsMethod = tostring(column_ifexists('details_method_s', ""))
              , DetailsOrigin = tostring(column_ifexists('details_origin_s', ""))
              , DetailsOriginalUrl = tostring(column_ifexists('details_originalUrl_s', ""))
              , DetailsPrompts = todynamic(column_ifexists('details_prompts_s', ""))
              , RequestAuthCredentialsJTI = tostring(column_ifexists('details_request_auth_credentials_jti_g', ""))
              , RequestAuthCredentialsScopes = todynamic(column_ifexists('details_request_auth_credentials_scopes_s', ""))
              , RequestAuthStrategy = tostring(column_ifexists('details_request_auth_strategy_s', ""))
              , RequestUserEmail = tostring(column_ifexists('details_request_auth_user_email_s', ""))
              , RequestUserPrincipalName = tostring(column_ifexists('details_request_auth_user_name_s', ""))
              , RequestAuthUserId = tostring(column_ifexists('details_request_auth_user_user_id_s', ""))
              , RequestMetadataPrimaryLocale = todynamic(column_ifexists('details_request_body_app_metadata_primary_locale_s', ""))
              , RequestMetadataSecondaryLocale= todynamic(column_ifexists('details_request_body_app_metadata_secondary_locales_s', ""))
              , RequestConnection = tostring(column_ifexists('details_request_body_connection_s', ""))
              , RequestEmail = tostring(column_ifexists('details_request_body_email_s', ""))
              , RequestEmailVerified = tobool(column_ifexists('details_request_body_email_verified_b', ""))
              , RequestBodyPassword = tostring(column_ifexists('details_request_body_password_s', ""))
              , RequestChannel = tostring(column_ifexists('details_request_channel_s', ""))
              , RequestIP = tostring(column_ifexists('details_request_ip_s', ""))
              , RequestMethod = tostring(column_ifexists('details_request_method_s', ""))
              , RequestPath = tostring(column_ifexists('details_request_path_s', ""))
              , RequestUserAgent = tostring(column_ifexists('details_request_userAgent_s', ""))
              , ResponseAppMetadataPrimaryLocale = todynamic(column_ifexists('details_response_body_app_metadata_primary_locale_s', ""))
              , ResponseAppMetadataSecondaryLocale = todynamic(column_ifexists('details_response_body_app_metadata_secondary_locales_s', ""))
              , ResponseBlocked = tobool(column_ifexists('details_response_body_blocked_b', ""))
              , ResponseClientID = tostring(column_ifexists('details_response_body_client_id_s', ""))
              , ResponseCreatedAt = tostring(column_ifexists('details_response_body_created_at_t', ""))
              , ResponseEmail = tostring(column_ifexists('details_response_body_email_s', ""))
              , ResponseEmailVerified = tobool(column_ifexists('details_response_body_email_verified_b', ""))
              , ResponseFamilyName = tostring(column_ifexists('details_response_body_family_name_s', ""))
              , ResponseGivenName = tostring(column_ifexists('details_response_body_given_name_s', ""))
              , ResponseIdentities = todynamic(column_ifexists('details_response_body_identities_s', ""))
              , ResponseLastIP = tostring(column_ifexists('details_response_body_last_ip_s', ""))
              , ResponseLastLogin = todatetime(column_ifexists('details_response_body_last_login_t', ""))
              , ResponseLastPasswordReset = todatetime(column_ifexists('details_response_body_last_password_reset_t', ""))
              , ResponseLoginsCount = toint(column_ifexists('details_response_body_logins_count_d', ""))
              , ResponseName = tostring(column_ifexists('details_response_body_name_s', ""))
              , ResponseNickname = tostring(column_ifexists('details_response_body_nickname_s', ""))
              , ResponsePhoneVerified = tobool(column_ifexists('details_response_body_phone_verified_b', ""))
              , ResponsePicture = tostring(column_ifexists('details_response_body_picture_s', ""))
              , ResponseUpdatedAt = todatetime(column_ifexists('details_response_body_updated_at_t', ""))
              , ResponseUserDiscriminator = tostring(column_ifexists('details_response_body_user_discriminator_s', ""))
              , ResponseUserId = tostring(split(column_ifexists('details_response_body_user_id_s', ""), "|")[1])
              , ResponseStatusCode = toint(column_ifexists('details_response_statusCode_d', ""))
              , SessionId = tostring(column_ifexists('details_session_id_s', ""))
              , StatsLoginsCount = toint(column_ifexists('details_stats_loginsCount_d', ""))
              , XHR = tobool(column_ifexists('details_xhr_b', ""))
              , Hostname = tostring(column_ifexists('hostname_s', ""))
              , IPAddress = tostring(column_ifexists('ip_s', ""))
              , IsMobile = tobool(column_ifexists('isMobile_b', ""))
              , LogId = tostring(column_ifexists('log_id_s', ""))
              , Scope = tostring(column_ifexists('scope_s', ""))
              , Strategy = tostring(column_ifexists('strategy_s', ""))
              , StrategyType = tostring(column_ifexists('strategy_type_s', ""))
              , Type = tostring(column_ifexists('Type', ""))
              , EventCode = tostring(column_ifexists('type_s', ""))
              , UserAgent = tostring(column_ifexists('user_agent_s', ""))
              , UserId = tostring(split(column_ifexists('user_id_s', ""), '|')[1])
              , UserPrincipalName = tolower(tostring(column_ifexists('user_name_s', "")))) | extend EventDescritpion = case(EventCode == "api_limit","Rate Limit on the Authentication or Management APIs",EventCode == "appi","Notice for API Peak Performance initiated",EventCode == "ciba_exchange_failed","Failed CIBA Exchange",EventCode == "ciba_exchange_succeeded","Successful CIBA Exchange",EventCode == "ciba_start_failed","Failed CIBA Start",EventCode == "ciba_start_succeeded","Successful CIBA Start",EventCode == "cls","Code/Link Sent",EventCode == "cs","Code Sent",EventCode == "depnote","Deprecation Notice",EventCode == "f","Failed Login",EventCode == "fc","Failed by Connector",EventCode == "fce","Failed Change Email",EventCode == "fco","Failed by CORS",EventCode == "fcoa","Failed cross-origin authentication",EventCode == "fcp","Failed Change Password",EventCode == "fcph","Failed Post Change Password Hook",EventCode == "fcpn","Failed Change Phone Number",EventCode == "fcpr","Failed Change Password Request",EventCode == "fcpro","Failed Connector Provisioning",EventCode == "fcu","Failed Change Username",EventCode == "fd","Failed Delegation",EventCode == "fdeac","Failed Device Activation",EventCode == "fdeaz","Failed Device Authorization Request",EventCode == "fdecc","User Canceled Device Confirmation",EventCode == "fdu","Failed User Deletion",EventCode == "feacft","Failed Exchange",EventCode == "feccft","Failed Exchange",EventCode == "fede","Failed Exchange",EventCode == "fens","Failed Exchange",EventCode == "feoobft","Failed Exchange",EventCode == "feotpft","Failed Exchange",EventCode == "fepft","Failed Exchange",EventCode == "fepotpft","Failed Exchange",EventCode == "fercft","Failed Exchange",EventCode == "ferrt","Failed Exchange",EventCode == "fertft","Failed Exchange",EventCode == "fi","Failed invite accept",EventCode == "flo","Failed Logout",EventCode == "fn","Failed Sending Notification",EventCode == "fp","Failed Login (Incorrect Password)",EventCode == "fpar","Failed Pushed Authorization Request",EventCode == "fs","Failed Signup",EventCode == "fsa","Failed Silent Auth",EventCode == "fu","Failed Login (Invalid Email/Username)",EventCode == "fui","Failed users import",EventCode == "fv","Failed Verification Email",EventCode == "fvr","Failed Verification Email Request",EventCode == "gd_auth_email_verification","Email Verification Confirmed",EventCode == "gd_auth_fail_email_verification","Email Verification Failed",EventCode == "gd_auth_failed","MFA Auth failed",EventCode == "gd_auth_rejected","MFA Auth rejected",EventCode == "gd_auth_succeed","MFA Auth success",EventCode == "gd_enrollment_complete","MFA enrollment complete",EventCode == "gd_otp_rate_limit_exceed","Too many MFA failures",EventCode == "gd_recovery_failed","Recovery failed",EventCode == "gd_recovery_rate_limit_exceed","Multi-factor recovery code has failed too many times",EventCode == "gd_recovery_succeed","MFA recovery success",EventCode == "gd_send_email","MFA Email Sent",EventCode == "gd_send_email_verification","Email Verification Sent",EventCode == "gd_send_email_verification_failure","Email Verification Failed",EventCode == "gd_send_pn","Push notification sent",EventCode == "gd_send_pn_failure","Error Sending MFA Push Notification",EventCode == "gd_send_sms","MFA SMS Sent",EventCode == "gd_send_sms_failure","Error Sending MFA SMS",EventCode == "gd_send_voice","MFA voice call success",EventCode == "gd_send_voice_failure","MFA voice call failed",EventCode == "gd_start_auth","Second factor started",EventCode == "gd_start_enroll","MFA Enroll started",EventCode == "gd_start_enroll_failed","MFA Enrollment Failed",EventCode == "gd_tenant_update","Guardian tenant update",EventCode == "gd_unenroll","Unenroll device account",EventCode == "gd_update_device_account","Update device account",EventCode == "gd_webauthn_challenge_failed","WebAuthn browser error",EventCode == "gd_webauthn_enrollment_failed","WebAuthn browser error",EventCode == "kms_key_management_failure","Failed KMS API Operation",EventCode == "kms_key_management_success","Success KMS API Operation",EventCode == "kms_key_state_changed","KMS Key State Change",EventCode == "limit_delegation","Too Many Calls to /delegation",EventCode == "limit_mu","Blocked IP Address",EventCode == "limit_sul","Blocked Account",EventCode == "limit_wc","Blocked Account",EventCode == "mfar","MFA Required",EventCode == "mgmt_api_read","Management API read Operation",EventCode == "oidc_backchannel_logout_failed","Failed OIDC Back-Channel Logout request",EventCode == "oidc_backchannel_logout_succeeded","Successful OIDC Back-Channel Logout request",EventCode == "organization_member_added","Organization Member Added",EventCode == "pla","Pre-login assessment",EventCode == "pwd_leak","Breached password",EventCode == "resource_cleanup","Success Resource Cleanup",EventCode == "rich_consents_access_error","Rich Consents Access Error",EventCode == "s","Success Login",EventCode == "sapi","Success API Operation",EventCode == "sce","Success Change Email",EventCode == "scoa","Success cross-origin authentication",EventCode == "scp","Success Change Password",EventCode == "scpn","Success Change Phone Number",EventCode == "scpr","Success Change Password Request",EventCode == "scu","Success Change Username",EventCode == "scv","Success Credential Validation",EventCode == "sd","Success Delegation",EventCode == "sdu","Success User Deletion",EventCode == "seacft","Success Exchange",EventCode == "seccft","Success Exchange",EventCode == "sede","Success Exchange",EventCode == "sens","Success Exchange",EventCode == "seoobft","Success Exchange",EventCode == "seotpft","Success Exchange",EventCode == "sepft","Success Exchange",EventCode == "sepkoobft","Success Exchange",EventCode == "sepkotpft","Success Exchange",EventCode == "sepkrcft","Success Exchange",EventCode == "sercft","Success Exchange",EventCode == "sertft","Success Exchange",EventCode == "si","Successfully accepted a user invite",EventCode == "signup_pwd_leak","Breached Password on Signup",EventCode == "slo","Success Logout",EventCode == "srrt","Success Revocation",EventCode == "ss","Success Signup",EventCode == "ss_sso_failure","Failed SS-SSO Operation",EventCode == "ss_sso_info","Information from an SS-SSO Operation",EventCode == "ss_sso_success","Success SS-SSO Operation",EventCode == "ssa","Success Silent Auth",EventCode == "sui","Successfully imported users",EventCode == "sv","Success Verification Email",EventCode == "svr","Success Verification Email Request",EventCode == "ublkdu","User login block released",EventCode == "w","Warning During Login",EventCode == "wum","Warning User Management","")};
                AutoLogsview()