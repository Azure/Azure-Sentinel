{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Auth0"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "resource group name where Microsoft Sentinel is setup"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "[last(split(subscription().id, '/'))]",
      "metadata": {
        "description": "subscription id where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Auth0",
    "_solutionVersion": "3.1.0",
    "solutionId": "azuresentinel.azure-sentinel-solution-auth0",
    "_solutionId": "[variables('solutionId')]",
    "uiConfigId1": "Auth0",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "Auth0",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "dataConnectorCCPVersion": "1.0.0",
    "_dataConnectorContentIdConnectorDefinition2": "Auth0ConnectorCCPDefinition",
    "dataConnectorTemplateNameConnectorDefinition2": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition2')))]",
    "_dataConnectorContentIdConnections2": "Auth0ConnectorCCPDefinitionConnections",
    "dataConnectorTemplateNameConnections2": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections2')))]",
    "blanks": "[replace('b', 'b', '')]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','Auth0AM')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Auth0AM')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Auth0AM-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "Auth0AM-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','Auth0')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Auth0')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Auth0-Parser')))]",
      "parserVersion2": "1.0.0",
      "parserContentId2": "Auth0-Parser"
    },
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Auth0 data connector with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Auth0 Access Management(using Azure Function) (using Azure Functions)",
                  "publisher": "Auth0",
                  "descriptionMarkdown": "The [Auth0 Access Management](https://auth0.com/access-management) data connector provides the capability to ingest [Auth0 log events](https://auth0.com/docs/api/management/v2/#!/Logs/get_logs) into Microsoft Sentinel",
                  "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Auth0AM_CL",
                      "baseQuery": "Auth0AM_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All logs",
                      "query": "Auth0AM_CL\n | sort by TimeGenerated desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "Auth0AM_CL",
                      "lastDataReceivedQuery": "Auth0AM_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Auth0AM_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions on the workspace are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Microsoft.Web/sites permissions",
                        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                      },
                      {
                        "name": "REST API Credentials/permissions",
                        "description": "**API token** is required. [See the documentation to learn more about API token](https://auth0.com/docs/secure/tokens/access-tokens/get-management-api-access-tokens-for-production)"
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This connector uses Azure Functions to connect to the Auth0 Management APIs to pull its logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                    },
                    {
                      "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
                    },
                    {
                      "description": "**STEP 1 - Configuration steps for the Auth0 Management API**\n\n Follow the instructions to obtain the credentials.\n\n1. In Auth0 Dashboard, go to **Applications > Applications**.\n2. Select your Application. This should be a \"Machine-to-Machine\" Application configured with at least **read:logs** and **read:logs_users** permissions.\n3. Copy **Domain, ClientID, Client Secret**"
                    },
                    {
                      "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Auth0 Access Management data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following).",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Primary Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ]
                    },
                    {
                      "description": "Use this method for automated deployment of the Auth0 Access Management data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-Auth0AccessManagement-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n> **NOTE:** Within the same resource group, you can't mix Windows and Linux apps in the same region. Select existing resource group without Windows apps in it or create new resource group.\n3. Enter the ****Domain, ClientID, Client Secret****, **AzureSentinelWorkspaceId**, **AzureSentinelSharedKey**. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
                      "title": "Option 1 - Azure Resource Manager (ARM) Template"
                    },
                    {
                      "description": "Use the following step-by-step instructions to deploy the Auth0 Access Management data connector manually with Azure Functions (Deployment via Visual Studio Code).",
                      "title": "Option 2 - Manual Deployment of Azure Functions"
                    },
                    {
                      "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-Auth0AccessManagement-azuredeploy) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. Auth0AMXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.11.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
                    },
                    {
                      "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select ** New application setting**.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tDOMAIN\n\t\tCLIENT_ID\n\t\tCLIENT_SECRET\n\t\tWorkspaceID\n\t\tWorkspaceKey\n\t\tlogAnalyticsUri (optional)\n> - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n4. Once all application settings have been entered, click **Save**."
                    }
                  ],
                  "metadata": {
                    "id": "056770e6-8e29-4341-8239-4b38fcd9f53d",
                    "version": "1.0.0",
                    "kind": "dataConnector",
                    "source": {
                      "kind": "solution"
                    },
                    "author": {
                      "name": "Microsoft"
                    },
                    "support": {
                      "tier": "Microsoft",
                      "name": "Microsoft",
                      "link": "https://support.microsoft.com/"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Auth0",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Auth0 Access Management(using Azure Function) (using Azure Functions)",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Auth0",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Auth0 Access Management(using Azure Function) (using Azure Functions)",
          "publisher": "Auth0",
          "descriptionMarkdown": "The [Auth0 Access Management](https://auth0.com/access-management) data connector provides the capability to ingest [Auth0 log events](https://auth0.com/docs/api/management/v2/#!/Logs/get_logs) into Microsoft Sentinel",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Auth0AM_CL",
              "baseQuery": "Auth0AM_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "Auth0AM_CL",
              "lastDataReceivedQuery": "Auth0AM_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "Auth0AM_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "All logs",
              "query": "Auth0AM_CL\n | sort by TimeGenerated desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "REST API Credentials/permissions",
                "description": "**API token** is required. [See the documentation to learn more about API token](https://auth0.com/docs/secure/tokens/access-tokens/get-management-api-access-tokens-for-production)"
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the Auth0 Management APIs to pull its logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": "**STEP 1 - Configuration steps for the Auth0 Management API**\n\n Follow the instructions to obtain the credentials.\n\n1. In Auth0 Dashboard, go to **Applications > Applications**.\n2. Select your Application. This should be a \"Machine-to-Machine\" Application configured with at least **read:logs** and **read:logs_users** permissions.\n3. Copy **Domain, ClientID, Client Secret**"
            },
            {
              "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Auth0 Access Management data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following).",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the Auth0 Access Management data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-Auth0AccessManagement-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n> **NOTE:** Within the same resource group, you can't mix Windows and Linux apps in the same region. Select existing resource group without Windows apps in it or create new resource group.\n3. Enter the ****Domain, ClientID, Client Secret****, **AzureSentinelWorkspaceId**, **AzureSentinelSharedKey**. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the Auth0 Access Management data connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-Auth0AccessManagement-azuredeploy) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. Auth0AMXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.11.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
            },
            {
              "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select ** New application setting**.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tDOMAIN\n\t\tCLIENT_ID\n\t\tCLIENT_SECRET\n\t\tWorkspaceID\n\t\tWorkspaceKey\n\t\tlogAnalyticsUri (optional)\n> - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n4. Once all application settings have been entered, click **Save**."
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition2'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition2')]",
        "displayName": "Auth0 Logs",
        "contentKind": "DataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition2'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "Auth0ConnectorCCPDefinition",
                  "title": "Auth0 Logs",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "The [Auth0](https://auth0.com/docs/api/management/v2/logs/get-logs) data connector allows ingesting logs from Auth0 API into Microsoft Sentinel. The data connector is built on Microsoft Sentinel Codeless Connector Platform. It uses Auth0 API to fetch logs and it supports DCR-based [ingestion time transformations](https://docs.microsoft.com/azure/azure-monitor/logs/custom-logs-overview) that parses the received security data into a custom table so that queries don't need to parse it again, thus resulting in better performance.",
                  "graphQueries": [
                    {
                      "metricName": "Total logs received",
                      "legend": "Auth0 Logs",
                      "baseQuery": "Auth0Logs_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Get Sample of Auth0 logs",
                      "query": "Auth0Logs_CL | take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "Auth0Logs_CL",
                      "lastDataReceivedQuery": "Auth0Logs_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors",
                      "value": null
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true,
                          "action": false
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "instructions": [
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### STEP 1 - Configuration steps for the Auth0 Management API"
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "Follow the instructions to obtain the credentials. \n 1. In Auth0 Dashboard, go to [**Applications > Applications**]\n 2. Select your Application. This should be a [**Machine-to-Machine**] Application configured with at least [**read:logs**] and [**read:logs_users**] permissions. \n 3. Copy [**Domain, ClientID, Client Secret**]"
                          }
                        },
                        {
                          "parameters": {
                            "label": "Base API URL",
                            "placeholder": "https://example.auth0.com",
                            "type": "text",
                            "name": "Domain"
                          },
                          "type": "Textbox"
                        },
                        {
                          "parameters": {
                            "label": "Client ID",
                            "placeholder": "Client ID",
                            "type": "text",
                            "name": "ClientId"
                          },
                          "type": "Textbox"
                        },
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "Client Secret",
                            "placeholder": "API Token",
                            "type": "password",
                            "name": "ClientSecret"
                          }
                        },
                        {
                          "parameters": {
                            "label": "toggle",
                            "name": "toggle"
                          },
                          "type": "ConnectionToggleButton"
                        }
                      ]
                    }
                  ],
                  "isConnectivityCriteriasMatchSome": false
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition2')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition2'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition2')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "version": "[variables('dataConnectorCCPVersion')]",
                      "contentId": "[variables('_dataConnectorContentIdConnections2')]",
                      "kind": "ResourcesDataConnector"
                    }
                  ]
                }
              }
            },
            {
              "name": "Auth0LogsDCR",
              "apiVersion": "2022-06-01",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "kind": "[variables('blanks')]",
              "properties": {
                "streamDeclarations": {
                  "Custom-Auth0Logs": {
                    "columns": [
                      {
                        "name": "date",
                        "type": "datetime"
                      },
                      {
                        "name": "type",
                        "type": "string"
                      },
                      {
                        "name": "description",
                        "type": "string"
                      },
                      {
                        "name": "connection",
                        "type": "string"
                      },
                      {
                        "name": "connection_id",
                        "type": "string"
                      },
                      {
                        "name": "client_id",
                        "type": "string"
                      },
                      {
                        "name": "client_name",
                        "type": "string"
                      },
                      {
                        "name": "ip",
                        "type": "string"
                      },
                      {
                        "name": "user_agent",
                        "type": "string"
                      },
                      {
                        "name": "hostname",
                        "type": "string"
                      },
                      {
                        "name": "user_id",
                        "type": "string"
                      },
                      {
                        "name": "user_name",
                        "type": "string"
                      },
                      {
                        "name": "audience",
                        "type": "string"
                      },
                      {
                        "name": "scope",
                        "type": "string"
                      },
                      {
                        "name": "strategy",
                        "type": "string"
                      },
                      {
                        "name": "strategy_type",
                        "type": "string"
                      },
                      {
                        "name": "location_info",
                        "type": "dynamic"
                      },
                      {
                        "name": "details",
                        "type": "dynamic"
                      },
                      {
                        "name": "log_id",
                        "type": "string"
                      },
                      {
                        "name": "tenant_name",
                        "type": "string"
                      },
                      {
                        "name": "isMobile",
                        "type": "boolean"
                      }
                    ]
                  }
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws1"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Custom-Auth0Logs"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source| extend TimeGenerated = ['date'] , EventType = type | project-rename Description = description, Connection = connection, ConnectionId = connection_id, ClientId = client_id, ClientName = client_name, SrcIpAddr = ip, HttpUserAgent = user_agent, SrcHostname = hostname, ActorUserId = user_id, ActorUsername = user_name, Audience = audience, Scope = scope, Strategy = strategy, StrategyType = strategy_type, LocationInfo = location_info, Details = details, LogId = log_id, TenantName = tenant_name, IsMobile = isMobile | project-away ['date'], type",
                    "outputStream": "Custom-Auth0Logs_CL"
                  }
                ],
                "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]"
              }
            },
            {
              "name": "Auth0Logs_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "Auth0Logs_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "event_date",
                      "type": "datetime"
                    },
                    {
                      "name": "EventType",
                      "type": "string"
                    },
                    {
                      "name": "Description",
                      "type": "string"
                    },
                    {
                      "name": "Connection",
                      "type": "string"
                    },
                    {
                      "name": "ConnectionId",
                      "type": "string"
                    },
                    {
                      "name": "ClientId",
                      "type": "string"
                    },
                    {
                      "name": "ClientName",
                      "type": "string"
                    },
                    {
                      "name": "SrcIpAddr",
                      "type": "string"
                    },
                    {
                      "name": "HttpUserAgent",
                      "type": "string"
                    },
                    {
                      "name": "SrcHostname",
                      "type": "string"
                    },
                    {
                      "name": "ActorUserId",
                      "type": "string"
                    },
                    {
                      "name": "ActorUsername",
                      "type": "string"
                    },
                    {
                      "name": "Audience",
                      "type": "string"
                    },
                    {
                      "name": "Scope",
                      "type": "string"
                    },
                    {
                      "name": "Strategy",
                      "type": "string"
                    },
                    {
                      "name": "StrategyType",
                      "type": "string"
                    },
                    {
                      "name": "LocationInfo",
                      "type": "dynamic"
                    },
                    {
                      "name": "Details",
                      "type": "dynamic"
                    },
                    {
                      "name": "LogId",
                      "type": "string"
                    },
                    {
                      "name": "TenantName",
                      "type": "string"
                    },
                    {
                      "name": "IsMobile",
                      "type": "boolean"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition2'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition2'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "Auth0ConnectorCCPDefinition",
          "title": "Auth0 Logs",
          "publisher": "Microsoft",
          "descriptionMarkdown": "The [Auth0](https://auth0.com/docs/api/management/v2/logs/get-logs) data connector allows ingesting logs from Auth0 API into Microsoft Sentinel. The data connector is built on Microsoft Sentinel Codeless Connector Platform. It uses Auth0 API to fetch logs and it supports DCR-based [ingestion time transformations](https://docs.microsoft.com/azure/azure-monitor/logs/custom-logs-overview) that parses the received security data into a custom table so that queries don't need to parse it again, thus resulting in better performance.",
          "graphQueries": [
            {
              "metricName": "Total logs received",
              "legend": "Auth0 Logs",
              "baseQuery": "Auth0Logs_CL"
            }
          ],
          "sampleQueries": [
            {
              "description": "Get Sample of Auth0 logs",
              "query": "Auth0Logs_CL | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "Auth0Logs_CL",
              "lastDataReceivedQuery": "Auth0Logs_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors",
              "value": null
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true,
                  "action": false
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "instructions": [
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### STEP 1 - Configuration steps for the Auth0 Management API"
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "Follow the instructions to obtain the credentials. \n 1. In Auth0 Dashboard, go to [**Applications > Applications**]\n 2. Select your Application. This should be a [**Machine-to-Machine**] Application configured with at least [**read:logs**] and [**read:logs_users**] permissions. \n 3. Copy [**Domain, ClientID, Client Secret**]"
                  }
                },
                {
                  "parameters": {
                    "label": "Base API URL",
                    "placeholder": "https://example.auth0.com",
                    "type": "text",
                    "name": "Domain"
                  },
                  "type": "Textbox"
                },
                {
                  "parameters": {
                    "label": "Client ID",
                    "placeholder": "Client ID",
                    "type": "text",
                    "name": "ClientId"
                  },
                  "type": "Textbox"
                },
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "Client Secret",
                    "placeholder": "API Token",
                    "type": "password",
                    "name": "ClientSecret"
                  }
                },
                {
                  "parameters": {
                    "label": "toggle",
                    "name": "toggle"
                  },
                  "type": "ConnectionToggleButton"
                }
              ]
            }
          ],
          "isConnectivityCriteriasMatchSome": false
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition2')))]",
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition2'))]",
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition2')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorCCPVersion')]",
        "source": {
          "sourceId": "[variables('_solutionId')]",
          "name": "[variables('_solutionName')]",
          "kind": "Solution"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "version": "[variables('dataConnectorCCPVersion')]",
              "contentId": "[variables('_dataConnectorContentIdConnections2')]",
              "kind": "ResourcesDataConnector"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections2'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnections2')]",
        "displayName": "Auth0 Logs",
        "contentKind": "ResourcesDataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {
            "connectorDefinitionName": {
              "defaultValue": "Auth0 Logs",
              "type": "string",
              "minLength": 1
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "string"
            },
            "dcrConfig": {
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              },
              "type": "object"
            },
            "Domain": {
              "defaultValue": "Domain",
              "type": "string",
              "minLength": 1
            },
            "ClientId": {
              "defaultValue": "ClientId",
              "type": "string",
              "minLength": 1
            },
            "ClientSecret": {
              "defaultValue": "ClientSecret",
              "type": "securestring",
              "minLength": 1
            }
          },
          "variables": {
            "_dataConnectorContentIdConnections2": "[variables('_dataConnectorContentIdConnections2')]"
          },
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections2')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections2'))]",
                "contentId": "[variables('_dataConnectorContentIdConnections2')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', 'Auth0Logs')]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "Auth0ConnectorCCPDefinition",
                "dataType": "Auth0Logs_CL",
                "auth": {
                  "type": "OAuth2",
                  "ClientId": "[[parameters('ClientId')]",
                  "ClientSecret": "[[parameters('ClientSecret')]",
                  "GrantType": "client_credentials",
                  "TokenEndpoint": "[[concat(parameters('Domain'),'/oauth/token')]",
                  "TokenEndpointQueryParameters": {
                    "audience": "[[concat(parameters('Domain'),'/api/v2/')]"
                  }
                },
                "request": {
                  "apiEndpoint": "[[concat(parameters('Domain'),'/api/v2/logs')]",
                  "headers": {
                    "Accept": "application/json"
                  },
                  "httpMethod": "Get",
                  "QueryParameters": {}
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-Auth0Logs",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "Paging": {
                  "pagingType": "PersistentToken",
                  "nextPageParaName": "from",
                  "nextPageTokenJsonPath": "$.[-1:].log_id",
                  "PageSizeParameterName": "take",
                  "PageSize": 100
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections2'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Auth0AM Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Auth0 Auth0AM_CL",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Auth0AM",
                "query": "let AutoLogsview = view() {union isfuzzy=true (Auth0Logs_CL| project-rename EventCode = EventType, IPAddress = SrcIpAddr, UserAgent = HttpUserAgent, Hostname = SrcHostname, UserId = ActorUserId, UserPrincipalName= ActorUsername, Date = TimeGenerated), (Auth0AM_CL | project Audience = tostring(column_ifexists('audience_s', \"\"))\n, Auth0ClientEnvIos = tostring(column_ifexists('auth0__s', \"\"))\n, Auth0ClientEnvNode = tostring(column_ifexists('auth0_client_env_node_s', \"\"))\n, Auth0ClientEnvSwift = tostring(column_ifexists('auth0_client_env_swift_s', \"\"))\n, Auth0ClientName = tostring(column_ifexists('auth0_client_name_s', \"\"))\n, Auth0ClientVersion = tostring(column_ifexists('auth0_client_version_s', \"\"))\n, ClientId = tostring(column_ifexists('client_id_s', \"\"))\n, ClientIp = tostring(column_ifexists('client_ip_s', \"\"))\n, ClientName = tostring(column_ifexists('client_name_s', \"\"))\n, ConnectionId = tostring(column_ifexists('connection_id_s', \"\"))\n, Connection = tostring(column_ifexists('connection_s', \"\"))\n, Date = todatetime(column_ifexists('date_t', \"\"))\n, Description = tostring(column_ifexists('description_s', \"\"))\n, DetailsAccessedSecrets = tostring(column_ifexists('details_accessedSecrets_s', \"\"))\n, DetailsActionsExecutions = todynamic(column_ifexists('details_actions_executions_s', \"\"))\n, DetailsAllowedOrigins = todynamic(column_ifexists('details_allowedOrigins_s', \"\"))\n, DetailsClientId = tostring(column_ifexists('details_body_client_id_s', \"\"))\n, DetailsConnection = tostring(column_ifexists('details_body_connection_s', \"\"))\n, DetailsEmail = tostring(column_ifexists('details_body_email_s', \"\"))\n, DetailsEmailVerified = tobool(column_ifexists('details_body_email_verified_b', \"\"))\n, DetailsIdentifierType = tostring(column_ifexists('details_body_identifier_type_s', \"\"))\n, DetailsIdentifierValue = tostring(column_ifexists('details_body_identifier_value_s', \"\"))\n, DetailsNewEmail = tostring(column_ifexists('details_body_newEmail_s', \"\"))\n, DetailsTenant = tostring(column_ifexists('details_body_tenant_s', \"\"))\n, DetailsUserId = tostring(column_ifexists('details_body_user_id_g', \"\"))\n, DetailsVerify = tobool(column_ifexists('details_body_verify_b', \"\"))\n, DetailsCode = tostring(column_ifexists('details_code_s', \"\"))\n, DetailsCompletedAt = unixtime_milliseconds_todatetime(tolong(column_ifexists('details_completedAt_d', \"\")))\n, DetailsConsoleOut = tostring(column_ifexists('details_consoleOut_s', \"\"))\n, DetailsElapsedTime = toint(column_ifexists('details_elapsedTime_d', \"\"))\n, DetailsErrorMessage = tostring(column_ifexists('details_error_message_s', \"\"))\n, DetailsHeadersOrigin = tostring(column_ifexists('details_headers_origin_s', \"\"))\n, DetailsXforwardedProtocol = tostring(column_ifexists('details_headers_x_forwarded_proto_s', \"\"))\n, DetailsHost = tostring(column_ifexists('details_host_s', \"\"))\n, DetailsInitiatedAt = unixtime_milliseconds_todatetime(tolong((column_ifexists('details_initiatedAt_d', \"\"))))\n, DetailsMethod = tostring(column_ifexists('details_method_s', \"\"))\n, DetailsOrigin = tostring(column_ifexists('details_origin_s', \"\"))\n, DetailsOriginalUrl = tostring(column_ifexists('details_originalUrl_s', \"\"))\n, DetailsPrompts = todynamic(column_ifexists('details_prompts_s', \"\"))\n, RequestAuthCredentialsJTI = tostring(column_ifexists('details_request_auth_credentials_jti_g', \"\"))\n, RequestAuthCredentialsScopes = todynamic(column_ifexists('details_request_auth_credentials_scopes_s', \"\"))\n, RequestAuthStrategy = tostring(column_ifexists('details_request_auth_strategy_s', \"\"))\n, RequestUserEmail = tostring(column_ifexists('details_request_auth_user_email_s', \"\"))\n, RequestUserPrincipalName = tostring(column_ifexists('details_request_auth_user_name_s', \"\"))\n, RequestAuthUserId = tostring(column_ifexists('details_request_auth_user_user_id_s', \"\"))\n, RequestMetadataPrimaryLocale = todynamic(column_ifexists('details_request_body_app_metadata_primary_locale_s', \"\"))\n, RequestMetadataSecondaryLocale= todynamic(column_ifexists('details_request_body_app_metadata_secondary_locales_s', \"\"))\n, RequestConnection = tostring(column_ifexists('details_request_body_connection_s', \"\"))\n, RequestEmail = tostring(column_ifexists('details_request_body_email_s', \"\"))\n, RequestEmailVerified = tobool(column_ifexists('details_request_body_email_verified_b', \"\"))\n, RequestBodyPassword = tostring(column_ifexists('details_request_body_password_s', \"\"))\n, RequestChannel = tostring(column_ifexists('details_request_channel_s', \"\"))\n, RequestIP = tostring(column_ifexists('details_request_ip_s', \"\"))\n, RequestMethod = tostring(column_ifexists('details_request_method_s', \"\"))\n, RequestPath = tostring(column_ifexists('details_request_path_s', \"\"))\n, RequestUserAgent = tostring(column_ifexists('details_request_userAgent_s', \"\"))\n, ResponseAppMetadataPrimaryLocale = todynamic(column_ifexists('details_response_body_app_metadata_primary_locale_s', \"\"))\n, ResponseAppMetadataSecondaryLocale = todynamic(column_ifexists('details_response_body_app_metadata_secondary_locales_s', \"\"))\n, ResponseBlocked = tobool(column_ifexists('details_response_body_blocked_b', \"\"))\n, ResponseClientID = tostring(column_ifexists('details_response_body_client_id_s', \"\"))\n, ResponseCreatedAt = tostring(column_ifexists('details_response_body_created_at_t', \"\"))\n, ResponseEmail = tostring(column_ifexists('details_response_body_email_s', \"\"))\n, ResponseEmailVerified = tobool(column_ifexists('details_response_body_email_verified_b', \"\"))\n, ResponseFamilyName = tostring(column_ifexists('details_response_body_family_name_s', \"\"))\n, ResponseGivenName = tostring(column_ifexists('details_response_body_given_name_s', \"\"))\n, ResponseIdentities = todynamic(column_ifexists('details_response_body_identities_s', \"\"))\n, ResponseLastIP = tostring(column_ifexists('details_response_body_last_ip_s', \"\"))\n, ResponseLastLogin = todatetime(column_ifexists('details_response_body_last_login_t', \"\"))\n, ResponseLastPasswordReset = todatetime(column_ifexists('details_response_body_last_password_reset_t', \"\"))\n, ResponseLoginsCount = toint(column_ifexists('details_response_body_logins_count_d', \"\"))\n, ResponseName = tostring(column_ifexists('details_response_body_name_s', \"\"))\n, ResponseNickname = tostring(column_ifexists('details_response_body_nickname_s', \"\"))\n, ResponsePhoneVerified = tobool(column_ifexists('details_response_body_phone_verified_b', \"\"))\n, ResponsePicture = tostring(column_ifexists('details_response_body_picture_s', \"\"))\n, ResponseUpdatedAt = todatetime(column_ifexists('details_response_body_updated_at_t', \"\"))\n, ResponseUserDiscriminator = tostring(column_ifexists('details_response_body_user_discriminator_s', \"\"))\n, ResponseUserId = tostring(split(column_ifexists('details_response_body_user_id_s', \"\"), \"|\")[1])\n, ResponseStatusCode = toint(column_ifexists('details_response_statusCode_d', \"\"))\n, SessionId = tostring(column_ifexists('details_session_id_s', \"\"))\n, StatsLoginsCount = toint(column_ifexists('details_stats_loginsCount_d', \"\"))\n, XHR = tobool(column_ifexists('details_xhr_b', \"\"))\n, Hostname = tostring(column_ifexists('hostname_s', \"\"))\n, IPAddress = tostring(column_ifexists('ip_s', \"\"))\n, IsMobile = tobool(column_ifexists('isMobile_b', \"\"))\n, LogId = tostring(column_ifexists('log_id_s', \"\"))\n, Scope = tostring(column_ifexists('scope_s', \"\"))\n, Strategy = tostring(column_ifexists('strategy_s', \"\"))\n, StrategyType = tostring(column_ifexists('strategy_type_s', \"\"))\n, Type = tostring(column_ifexists('Type', \"\"))\n, EventCode = tostring(column_ifexists('type_s', \"\"))\n, UserAgent = tostring(column_ifexists('user_agent_s', \"\"))\n, UserId = tostring(split(column_ifexists('user_id_s', \"\"), '|')[1])\n, UserPrincipalName = tolower(tostring(column_ifexists('user_name_s', \"\")))) | extend EventDescritpion = case(EventCode == \"api_limit\",\"Rate Limit on the Authentication or Management APIs\",EventCode == \"appi\",\"Notice for API Peak Performance initiated\",EventCode == \"ciba_exchange_failed\",\"Failed CIBA Exchange\",EventCode == \"ciba_exchange_succeeded\",\"Successful CIBA Exchange\",EventCode == \"ciba_start_failed\",\"Failed CIBA Start\",EventCode == \"ciba_start_succeeded\",\"Successful CIBA Start\",EventCode == \"cls\",\"Code/Link Sent\",EventCode == \"cs\",\"Code Sent\",EventCode == \"depnote\",\"Deprecation Notice\",EventCode == \"f\",\"Failed Login\",EventCode == \"fc\",\"Failed by Connector\",EventCode == \"fce\",\"Failed Change Email\",EventCode == \"fco\",\"Failed by CORS\",EventCode == \"fcoa\",\"Failed cross-origin authentication\",EventCode == \"fcp\",\"Failed Change Password\",EventCode == \"fcph\",\"Failed Post Change Password Hook\",EventCode == \"fcpn\",\"Failed Change Phone Number\",EventCode == \"fcpr\",\"Failed Change Password Request\",EventCode == \"fcpro\",\"Failed Connector Provisioning\",EventCode == \"fcu\",\"Failed Change Username\",EventCode == \"fd\",\"Failed Delegation\",EventCode == \"fdeac\",\"Failed Device Activation\",EventCode == \"fdeaz\",\"Failed Device Authorization Request\",EventCode == \"fdecc\",\"User Canceled Device Confirmation\",EventCode == \"fdu\",\"Failed User Deletion\",EventCode == \"feacft\",\"Failed Exchange\",EventCode == \"feccft\",\"Failed Exchange\",EventCode == \"fede\",\"Failed Exchange\",EventCode == \"fens\",\"Failed Exchange\",EventCode == \"feoobft\",\"Failed Exchange\",EventCode == \"feotpft\",\"Failed Exchange\",EventCode == \"fepft\",\"Failed Exchange\",EventCode == \"fepotpft\",\"Failed Exchange\",EventCode == \"fercft\",\"Failed Exchange\",EventCode == \"ferrt\",\"Failed Exchange\",EventCode == \"fertft\",\"Failed Exchange\",EventCode == \"fi\",\"Failed invite accept\",EventCode == \"flo\",\"Failed Logout\",EventCode == \"fn\",\"Failed Sending Notification\",EventCode == \"fp\",\"Failed Login (Incorrect Password)\",EventCode == \"fpar\",\"Failed Pushed Authorization Request\",EventCode == \"fs\",\"Failed Signup\",EventCode == \"fsa\",\"Failed Silent Auth\",EventCode == \"fu\",\"Failed Login (Invalid Email/Username)\",EventCode == \"fui\",\"Failed users import\",EventCode == \"fv\",\"Failed Verification Email\",EventCode == \"fvr\",\"Failed Verification Email Request\",EventCode == \"gd_auth_email_verification\",\"Email Verification Confirmed\",EventCode == \"gd_auth_fail_email_verification\",\"Email Verification Failed\",EventCode == \"gd_auth_failed\",\"MFA Auth failed\",EventCode == \"gd_auth_rejected\",\"MFA Auth rejected\",EventCode == \"gd_auth_succeed\",\"MFA Auth success\",EventCode == \"gd_enrollment_complete\",\"MFA enrollment complete\",EventCode == \"gd_otp_rate_limit_exceed\",\"Too many MFA failures\",EventCode == \"gd_recovery_failed\",\"Recovery failed\",EventCode == \"gd_recovery_rate_limit_exceed\",\"Multi-factor recovery code has failed too many times\",EventCode == \"gd_recovery_succeed\",\"MFA recovery success\",EventCode == \"gd_send_email\",\"MFA Email Sent\",EventCode == \"gd_send_email_verification\",\"Email Verification Sent\",EventCode == \"gd_send_email_verification_failure\",\"Email Verification Failed\",EventCode == \"gd_send_pn\",\"Push notification sent\",EventCode == \"gd_send_pn_failure\",\"Error Sending MFA Push Notification\",EventCode == \"gd_send_sms\",\"MFA SMS Sent\",EventCode == \"gd_send_sms_failure\",\"Error Sending MFA SMS\",EventCode == \"gd_send_voice\",\"MFA voice call success\",EventCode == \"gd_send_voice_failure\",\"MFA voice call failed\",EventCode == \"gd_start_auth\",\"Second factor started\",EventCode == \"gd_start_enroll\",\"MFA Enroll started\",EventCode == \"gd_start_enroll_failed\",\"MFA Enrollment Failed\",EventCode == \"gd_tenant_update\",\"Guardian tenant update\",EventCode == \"gd_unenroll\",\"Unenroll device account\",EventCode == \"gd_update_device_account\",\"Update device account\",EventCode == \"gd_webauthn_challenge_failed\",\"WebAuthn browser error\",EventCode == \"gd_webauthn_enrollment_failed\",\"WebAuthn browser error\",EventCode == \"kms_key_management_failure\",\"Failed KMS API Operation\",EventCode == \"kms_key_management_success\",\"Success KMS API Operation\",EventCode == \"kms_key_state_changed\",\"KMS Key State Change\",EventCode == \"limit_delegation\",\"Too Many Calls to /delegation\",EventCode == \"limit_mu\",\"Blocked IP Address\",EventCode == \"limit_sul\",\"Blocked Account\",EventCode == \"limit_wc\",\"Blocked Account\",EventCode == \"mfar\",\"MFA Required\",EventCode == \"mgmt_api_read\",\"Management API read Operation\",EventCode == \"oidc_backchannel_logout_failed\",\"Failed OIDC Back-Channel Logout request\",EventCode == \"oidc_backchannel_logout_succeeded\",\"Successful OIDC Back-Channel Logout request\",EventCode == \"organization_member_added\",\"Organization Member Added\",EventCode == \"pla\",\"Pre-login assessment\",EventCode == \"pwd_leak\",\"Breached password\",EventCode == \"resource_cleanup\",\"Success Resource Cleanup\",EventCode == \"rich_consents_access_error\",\"Rich Consents Access Error\",EventCode == \"s\",\"Success Login\",EventCode == \"sapi\",\"Success API Operation\",EventCode == \"sce\",\"Success Change Email\",EventCode == \"scoa\",\"Success cross-origin authentication\",EventCode == \"scp\",\"Success Change Password\",EventCode == \"scpn\",\"Success Change Phone Number\",EventCode == \"scpr\",\"Success Change Password Request\",EventCode == \"scu\",\"Success Change Username\",EventCode == \"scv\",\"Success Credential Validation\",EventCode == \"sd\",\"Success Delegation\",EventCode == \"sdu\",\"Success User Deletion\",EventCode == \"seacft\",\"Success Exchange\",EventCode == \"seccft\",\"Success Exchange\",EventCode == \"sede\",\"Success Exchange\",EventCode == \"sens\",\"Success Exchange\",EventCode == \"seoobft\",\"Success Exchange\",EventCode == \"seotpft\",\"Success Exchange\",EventCode == \"sepft\",\"Success Exchange\",EventCode == \"sepkoobft\",\"Success Exchange\",EventCode == \"sepkotpft\",\"Success Exchange\",EventCode == \"sepkrcft\",\"Success Exchange\",EventCode == \"sercft\",\"Success Exchange\",EventCode == \"sertft\",\"Success Exchange\",EventCode == \"si\",\"Successfully accepted a user invite\",EventCode == \"signup_pwd_leak\",\"Breached Password on Signup\",EventCode == \"slo\",\"Success Logout\",EventCode == \"srrt\",\"Success Revocation\",EventCode == \"ss\",\"Success Signup\",EventCode == \"ss_sso_failure\",\"Failed SS-SSO Operation\",EventCode == \"ss_sso_info\",\"Information from an SS-SSO Operation\",EventCode == \"ss_sso_success\",\"Success SS-SSO Operation\",EventCode == \"ssa\",\"Success Silent Auth\",EventCode == \"sui\",\"Successfully imported users\",EventCode == \"sv\",\"Success Verification Email\",EventCode == \"svr\",\"Success Verification Email Request\",EventCode == \"ublkdu\",\"User login block released\",EventCode == \"w\",\"Warning During Login\",EventCode == \"wum\",\"Warning User Management\",\"\")};\n  AutoLogsview()\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Auth0AM')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Auth0",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Parser for Auth0 Auth0AM_CL",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Auth0 Auth0AM_CL",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Auth0AM",
        "query": "let AutoLogsview = view() {union isfuzzy=true (Auth0Logs_CL| project-rename EventCode = EventType, IPAddress = SrcIpAddr, UserAgent = HttpUserAgent, Hostname = SrcHostname, UserId = ActorUserId, UserPrincipalName= ActorUsername, Date = TimeGenerated), (Auth0AM_CL | project Audience = tostring(column_ifexists('audience_s', \"\"))\n, Auth0ClientEnvIos = tostring(column_ifexists('auth0__s', \"\"))\n, Auth0ClientEnvNode = tostring(column_ifexists('auth0_client_env_node_s', \"\"))\n, Auth0ClientEnvSwift = tostring(column_ifexists('auth0_client_env_swift_s', \"\"))\n, Auth0ClientName = tostring(column_ifexists('auth0_client_name_s', \"\"))\n, Auth0ClientVersion = tostring(column_ifexists('auth0_client_version_s', \"\"))\n, ClientId = tostring(column_ifexists('client_id_s', \"\"))\n, ClientIp = tostring(column_ifexists('client_ip_s', \"\"))\n, ClientName = tostring(column_ifexists('client_name_s', \"\"))\n, ConnectionId = tostring(column_ifexists('connection_id_s', \"\"))\n, Connection = tostring(column_ifexists('connection_s', \"\"))\n, Date = todatetime(column_ifexists('date_t', \"\"))\n, Description = tostring(column_ifexists('description_s', \"\"))\n, DetailsAccessedSecrets = tostring(column_ifexists('details_accessedSecrets_s', \"\"))\n, DetailsActionsExecutions = todynamic(column_ifexists('details_actions_executions_s', \"\"))\n, DetailsAllowedOrigins = todynamic(column_ifexists('details_allowedOrigins_s', \"\"))\n, DetailsClientId = tostring(column_ifexists('details_body_client_id_s', \"\"))\n, DetailsConnection = tostring(column_ifexists('details_body_connection_s', \"\"))\n, DetailsEmail = tostring(column_ifexists('details_body_email_s', \"\"))\n, DetailsEmailVerified = tobool(column_ifexists('details_body_email_verified_b', \"\"))\n, DetailsIdentifierType = tostring(column_ifexists('details_body_identifier_type_s', \"\"))\n, DetailsIdentifierValue = tostring(column_ifexists('details_body_identifier_value_s', \"\"))\n, DetailsNewEmail = tostring(column_ifexists('details_body_newEmail_s', \"\"))\n, DetailsTenant = tostring(column_ifexists('details_body_tenant_s', \"\"))\n, DetailsUserId = tostring(column_ifexists('details_body_user_id_g', \"\"))\n, DetailsVerify = tobool(column_ifexists('details_body_verify_b', \"\"))\n, DetailsCode = tostring(column_ifexists('details_code_s', \"\"))\n, DetailsCompletedAt = unixtime_milliseconds_todatetime(tolong(column_ifexists('details_completedAt_d', \"\")))\n, DetailsConsoleOut = tostring(column_ifexists('details_consoleOut_s', \"\"))\n, DetailsElapsedTime = toint(column_ifexists('details_elapsedTime_d', \"\"))\n, DetailsErrorMessage = tostring(column_ifexists('details_error_message_s', \"\"))\n, DetailsHeadersOrigin = tostring(column_ifexists('details_headers_origin_s', \"\"))\n, DetailsXforwardedProtocol = tostring(column_ifexists('details_headers_x_forwarded_proto_s', \"\"))\n, DetailsHost = tostring(column_ifexists('details_host_s', \"\"))\n, DetailsInitiatedAt = unixtime_milliseconds_todatetime(tolong((column_ifexists('details_initiatedAt_d', \"\"))))\n, DetailsMethod = tostring(column_ifexists('details_method_s', \"\"))\n, DetailsOrigin = tostring(column_ifexists('details_origin_s', \"\"))\n, DetailsOriginalUrl = tostring(column_ifexists('details_originalUrl_s', \"\"))\n, DetailsPrompts = todynamic(column_ifexists('details_prompts_s', \"\"))\n, RequestAuthCredentialsJTI = tostring(column_ifexists('details_request_auth_credentials_jti_g', \"\"))\n, RequestAuthCredentialsScopes = todynamic(column_ifexists('details_request_auth_credentials_scopes_s', \"\"))\n, RequestAuthStrategy = tostring(column_ifexists('details_request_auth_strategy_s', \"\"))\n, RequestUserEmail = tostring(column_ifexists('details_request_auth_user_email_s', \"\"))\n, RequestUserPrincipalName = tostring(column_ifexists('details_request_auth_user_name_s', \"\"))\n, RequestAuthUserId = tostring(column_ifexists('details_request_auth_user_user_id_s', \"\"))\n, RequestMetadataPrimaryLocale = todynamic(column_ifexists('details_request_body_app_metadata_primary_locale_s', \"\"))\n, RequestMetadataSecondaryLocale= todynamic(column_ifexists('details_request_body_app_metadata_secondary_locales_s', \"\"))\n, RequestConnection = tostring(column_ifexists('details_request_body_connection_s', \"\"))\n, RequestEmail = tostring(column_ifexists('details_request_body_email_s', \"\"))\n, RequestEmailVerified = tobool(column_ifexists('details_request_body_email_verified_b', \"\"))\n, RequestBodyPassword = tostring(column_ifexists('details_request_body_password_s', \"\"))\n, RequestChannel = tostring(column_ifexists('details_request_channel_s', \"\"))\n, RequestIP = tostring(column_ifexists('details_request_ip_s', \"\"))\n, RequestMethod = tostring(column_ifexists('details_request_method_s', \"\"))\n, RequestPath = tostring(column_ifexists('details_request_path_s', \"\"))\n, RequestUserAgent = tostring(column_ifexists('details_request_userAgent_s', \"\"))\n, ResponseAppMetadataPrimaryLocale = todynamic(column_ifexists('details_response_body_app_metadata_primary_locale_s', \"\"))\n, ResponseAppMetadataSecondaryLocale = todynamic(column_ifexists('details_response_body_app_metadata_secondary_locales_s', \"\"))\n, ResponseBlocked = tobool(column_ifexists('details_response_body_blocked_b', \"\"))\n, ResponseClientID = tostring(column_ifexists('details_response_body_client_id_s', \"\"))\n, ResponseCreatedAt = tostring(column_ifexists('details_response_body_created_at_t', \"\"))\n, ResponseEmail = tostring(column_ifexists('details_response_body_email_s', \"\"))\n, ResponseEmailVerified = tobool(column_ifexists('details_response_body_email_verified_b', \"\"))\n, ResponseFamilyName = tostring(column_ifexists('details_response_body_family_name_s', \"\"))\n, ResponseGivenName = tostring(column_ifexists('details_response_body_given_name_s', \"\"))\n, ResponseIdentities = todynamic(column_ifexists('details_response_body_identities_s', \"\"))\n, ResponseLastIP = tostring(column_ifexists('details_response_body_last_ip_s', \"\"))\n, ResponseLastLogin = todatetime(column_ifexists('details_response_body_last_login_t', \"\"))\n, ResponseLastPasswordReset = todatetime(column_ifexists('details_response_body_last_password_reset_t', \"\"))\n, ResponseLoginsCount = toint(column_ifexists('details_response_body_logins_count_d', \"\"))\n, ResponseName = tostring(column_ifexists('details_response_body_name_s', \"\"))\n, ResponseNickname = tostring(column_ifexists('details_response_body_nickname_s', \"\"))\n, ResponsePhoneVerified = tobool(column_ifexists('details_response_body_phone_verified_b', \"\"))\n, ResponsePicture = tostring(column_ifexists('details_response_body_picture_s', \"\"))\n, ResponseUpdatedAt = todatetime(column_ifexists('details_response_body_updated_at_t', \"\"))\n, ResponseUserDiscriminator = tostring(column_ifexists('details_response_body_user_discriminator_s', \"\"))\n, ResponseUserId = tostring(split(column_ifexists('details_response_body_user_id_s', \"\"), \"|\")[1])\n, ResponseStatusCode = toint(column_ifexists('details_response_statusCode_d', \"\"))\n, SessionId = tostring(column_ifexists('details_session_id_s', \"\"))\n, StatsLoginsCount = toint(column_ifexists('details_stats_loginsCount_d', \"\"))\n, XHR = tobool(column_ifexists('details_xhr_b', \"\"))\n, Hostname = tostring(column_ifexists('hostname_s', \"\"))\n, IPAddress = tostring(column_ifexists('ip_s', \"\"))\n, IsMobile = tobool(column_ifexists('isMobile_b', \"\"))\n, LogId = tostring(column_ifexists('log_id_s', \"\"))\n, Scope = tostring(column_ifexists('scope_s', \"\"))\n, Strategy = tostring(column_ifexists('strategy_s', \"\"))\n, StrategyType = tostring(column_ifexists('strategy_type_s', \"\"))\n, Type = tostring(column_ifexists('Type', \"\"))\n, EventCode = tostring(column_ifexists('type_s', \"\"))\n, UserAgent = tostring(column_ifexists('user_agent_s', \"\"))\n, UserId = tostring(split(column_ifexists('user_id_s', \"\"), '|')[1])\n, UserPrincipalName = tolower(tostring(column_ifexists('user_name_s', \"\")))) | extend EventDescritpion = case(EventCode == \"api_limit\",\"Rate Limit on the Authentication or Management APIs\",EventCode == \"appi\",\"Notice for API Peak Performance initiated\",EventCode == \"ciba_exchange_failed\",\"Failed CIBA Exchange\",EventCode == \"ciba_exchange_succeeded\",\"Successful CIBA Exchange\",EventCode == \"ciba_start_failed\",\"Failed CIBA Start\",EventCode == \"ciba_start_succeeded\",\"Successful CIBA Start\",EventCode == \"cls\",\"Code/Link Sent\",EventCode == \"cs\",\"Code Sent\",EventCode == \"depnote\",\"Deprecation Notice\",EventCode == \"f\",\"Failed Login\",EventCode == \"fc\",\"Failed by Connector\",EventCode == \"fce\",\"Failed Change Email\",EventCode == \"fco\",\"Failed by CORS\",EventCode == \"fcoa\",\"Failed cross-origin authentication\",EventCode == \"fcp\",\"Failed Change Password\",EventCode == \"fcph\",\"Failed Post Change Password Hook\",EventCode == \"fcpn\",\"Failed Change Phone Number\",EventCode == \"fcpr\",\"Failed Change Password Request\",EventCode == \"fcpro\",\"Failed Connector Provisioning\",EventCode == \"fcu\",\"Failed Change Username\",EventCode == \"fd\",\"Failed Delegation\",EventCode == \"fdeac\",\"Failed Device Activation\",EventCode == \"fdeaz\",\"Failed Device Authorization Request\",EventCode == \"fdecc\",\"User Canceled Device Confirmation\",EventCode == \"fdu\",\"Failed User Deletion\",EventCode == \"feacft\",\"Failed Exchange\",EventCode == \"feccft\",\"Failed Exchange\",EventCode == \"fede\",\"Failed Exchange\",EventCode == \"fens\",\"Failed Exchange\",EventCode == \"feoobft\",\"Failed Exchange\",EventCode == \"feotpft\",\"Failed Exchange\",EventCode == \"fepft\",\"Failed Exchange\",EventCode == \"fepotpft\",\"Failed Exchange\",EventCode == \"fercft\",\"Failed Exchange\",EventCode == \"ferrt\",\"Failed Exchange\",EventCode == \"fertft\",\"Failed Exchange\",EventCode == \"fi\",\"Failed invite accept\",EventCode == \"flo\",\"Failed Logout\",EventCode == \"fn\",\"Failed Sending Notification\",EventCode == \"fp\",\"Failed Login (Incorrect Password)\",EventCode == \"fpar\",\"Failed Pushed Authorization Request\",EventCode == \"fs\",\"Failed Signup\",EventCode == \"fsa\",\"Failed Silent Auth\",EventCode == \"fu\",\"Failed Login (Invalid Email/Username)\",EventCode == \"fui\",\"Failed users import\",EventCode == \"fv\",\"Failed Verification Email\",EventCode == \"fvr\",\"Failed Verification Email Request\",EventCode == \"gd_auth_email_verification\",\"Email Verification Confirmed\",EventCode == \"gd_auth_fail_email_verification\",\"Email Verification Failed\",EventCode == \"gd_auth_failed\",\"MFA Auth failed\",EventCode == \"gd_auth_rejected\",\"MFA Auth rejected\",EventCode == \"gd_auth_succeed\",\"MFA Auth success\",EventCode == \"gd_enrollment_complete\",\"MFA enrollment complete\",EventCode == \"gd_otp_rate_limit_exceed\",\"Too many MFA failures\",EventCode == \"gd_recovery_failed\",\"Recovery failed\",EventCode == \"gd_recovery_rate_limit_exceed\",\"Multi-factor recovery code has failed too many times\",EventCode == \"gd_recovery_succeed\",\"MFA recovery success\",EventCode == \"gd_send_email\",\"MFA Email Sent\",EventCode == \"gd_send_email_verification\",\"Email Verification Sent\",EventCode == \"gd_send_email_verification_failure\",\"Email Verification Failed\",EventCode == \"gd_send_pn\",\"Push notification sent\",EventCode == \"gd_send_pn_failure\",\"Error Sending MFA Push Notification\",EventCode == \"gd_send_sms\",\"MFA SMS Sent\",EventCode == \"gd_send_sms_failure\",\"Error Sending MFA SMS\",EventCode == \"gd_send_voice\",\"MFA voice call success\",EventCode == \"gd_send_voice_failure\",\"MFA voice call failed\",EventCode == \"gd_start_auth\",\"Second factor started\",EventCode == \"gd_start_enroll\",\"MFA Enroll started\",EventCode == \"gd_start_enroll_failed\",\"MFA Enrollment Failed\",EventCode == \"gd_tenant_update\",\"Guardian tenant update\",EventCode == \"gd_unenroll\",\"Unenroll device account\",EventCode == \"gd_update_device_account\",\"Update device account\",EventCode == \"gd_webauthn_challenge_failed\",\"WebAuthn browser error\",EventCode == \"gd_webauthn_enrollment_failed\",\"WebAuthn browser error\",EventCode == \"kms_key_management_failure\",\"Failed KMS API Operation\",EventCode == \"kms_key_management_success\",\"Success KMS API Operation\",EventCode == \"kms_key_state_changed\",\"KMS Key State Change\",EventCode == \"limit_delegation\",\"Too Many Calls to /delegation\",EventCode == \"limit_mu\",\"Blocked IP Address\",EventCode == \"limit_sul\",\"Blocked Account\",EventCode == \"limit_wc\",\"Blocked Account\",EventCode == \"mfar\",\"MFA Required\",EventCode == \"mgmt_api_read\",\"Management API read Operation\",EventCode == \"oidc_backchannel_logout_failed\",\"Failed OIDC Back-Channel Logout request\",EventCode == \"oidc_backchannel_logout_succeeded\",\"Successful OIDC Back-Channel Logout request\",EventCode == \"organization_member_added\",\"Organization Member Added\",EventCode == \"pla\",\"Pre-login assessment\",EventCode == \"pwd_leak\",\"Breached password\",EventCode == \"resource_cleanup\",\"Success Resource Cleanup\",EventCode == \"rich_consents_access_error\",\"Rich Consents Access Error\",EventCode == \"s\",\"Success Login\",EventCode == \"sapi\",\"Success API Operation\",EventCode == \"sce\",\"Success Change Email\",EventCode == \"scoa\",\"Success cross-origin authentication\",EventCode == \"scp\",\"Success Change Password\",EventCode == \"scpn\",\"Success Change Phone Number\",EventCode == \"scpr\",\"Success Change Password Request\",EventCode == \"scu\",\"Success Change Username\",EventCode == \"scv\",\"Success Credential Validation\",EventCode == \"sd\",\"Success Delegation\",EventCode == \"sdu\",\"Success User Deletion\",EventCode == \"seacft\",\"Success Exchange\",EventCode == \"seccft\",\"Success Exchange\",EventCode == \"sede\",\"Success Exchange\",EventCode == \"sens\",\"Success Exchange\",EventCode == \"seoobft\",\"Success Exchange\",EventCode == \"seotpft\",\"Success Exchange\",EventCode == \"sepft\",\"Success Exchange\",EventCode == \"sepkoobft\",\"Success Exchange\",EventCode == \"sepkotpft\",\"Success Exchange\",EventCode == \"sepkrcft\",\"Success Exchange\",EventCode == \"sercft\",\"Success Exchange\",EventCode == \"sertft\",\"Success Exchange\",EventCode == \"si\",\"Successfully accepted a user invite\",EventCode == \"signup_pwd_leak\",\"Breached Password on Signup\",EventCode == \"slo\",\"Success Logout\",EventCode == \"srrt\",\"Success Revocation\",EventCode == \"ss\",\"Success Signup\",EventCode == \"ss_sso_failure\",\"Failed SS-SSO Operation\",EventCode == \"ss_sso_info\",\"Information from an SS-SSO Operation\",EventCode == \"ss_sso_success\",\"Success SS-SSO Operation\",EventCode == \"ssa\",\"Success Silent Auth\",EventCode == \"sui\",\"Successfully imported users\",EventCode == \"sv\",\"Success Verification Email\",EventCode == \"svr\",\"Success Verification Email Request\",EventCode == \"ublkdu\",\"User login block released\",EventCode == \"w\",\"Warning During Login\",EventCode == \"wum\",\"Warning User Management\",\"\")};\n  AutoLogsview()\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Auth0AM')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Auth0",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Auth0 Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Auth0",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Auth0",
                "query": "union isfuzzy=true Auth0AM_CL, Auth0_CL\n| project-rename EventType = type_s,\n    HttpRequestMethod = details_request_method_s,\n    ActorSessionId = _id_s,\n    HttpUserAgent =  user_agent_s,\n    TargetUsername = user_name_s,\n    ActorUserId = client_id_s,\n    IpAddr=ip_s,\n    Dst = details_request_body_audience_s,\n    EventEndTime = date_t,\n    EventResultDetails = details_response_statusCode_d\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Auth0')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "Auth0",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "Auth0",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Auth0",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Auth0",
        "query": "union isfuzzy=true Auth0AM_CL, Auth0_CL\n| project-rename EventType = type_s,\n    HttpRequestMethod = details_request_method_s,\n    ActorSessionId = _id_s,\n    HttpUserAgent =  user_agent_s,\n    TargetUsername = user_name_s,\n    ActorUserId = client_id_s,\n    IpAddr=ip_s,\n    Dst = details_request_body_audience_s,\n    EventEndTime = date_t,\n    EventResultDetails = details_response_statusCode_d\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Auth0')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "Auth0",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.1.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Auth0",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Auth0/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://auth0.com/access-management\">Auth0 Access Management</a> solution for Microsoft Sentinel provides the capability to ingest <a href=\"https://auth0.com/docs/api/management/v2/#!/Logs/get_logs\">Auth0 log events</a> into your Microsoft Sentinel workspace.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><p><a href=\"https://docs.microsoft.com/azure/azure-monitor/logs/data-collector-api\">Azure Monitor HTTP Data Collector API</a></p>\n</li>\n<li><p><a href=\"https://azure.microsoft.com/services/functions/#overview\">Azure Functions</a></p>\n</li>\n</ol>\n<p><strong>Data Connectors:</strong> 2, <strong>Parsers:</strong> 2</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Auth0.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Auth0",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentIdConnections2')]",
              "version": "[variables('dataConnectorCCPVersion')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            }
          ]
        },
        "firstPublishDate": "2022-08-18",
        "providers": [
          "Auth0"
        ],
        "categories": {
          "domains": [
            "Identity"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
