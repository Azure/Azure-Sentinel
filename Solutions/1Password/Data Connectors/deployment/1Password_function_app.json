{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "functionName": {
      "type": "string",
      "defaultValue": "OnePassword",
      "minLength": 1,
      "maxLength": 11,
      "metadata": {
        "description": "Specifies the name of the Function App."
      }
    },
    "apiEndpoint": {
      "type": "string",
      "metadata": {
        "description": "uri to the API endpoint to query data."
      },
      "defaultValue": "https://events.1password.com"
    },
    "functionSchedule": {
      "type": "string",
      "defaultValue": "0 */5 * * * *",
      "metadata": {
        "description": "Provide schedule in the form of a [cron expression](https://en.wikipedia.org/wiki/Cron#CRON_expression)"
      }
    },
    "dataCollectionEndpoint": {
      "type": "string",
      "defaultValue": "<dynamically-created>",
      "metadata": {
        "description": "Specifies the name of the Data Collection Endpoint to create"
      }
    },
    "apiToken": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the API Key to connect to the API of 1Password"
      }
    },
    "packageUri": {
      "type": "string",
      "metadata": {
        "description": "Specifies the URI to the package to deploy"
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/1Password/Data%20Connectors/function.zip"
    }
  },
  "variables": {
    "functionName": "[toLower(format('{0}{1}', parameters('FunctionName'), substring(uniqueString(resourceGroup().id), 0, 8)))]",
    "storageAccountName": "[replace(variables('functionName'),'-', '')]",
    "keyVaultSecretReader": "[format('/subscriptions/){0}/providers/Microsoft.Authorization/roleDefinitions/4633458b-17de-408a-b874-0445c86b69e6', subscription().subscriptionId)]",
    "metricsPublisher": "[format('/subscriptions/){0}/providers/Microsoft.Authorization/roleDefinitions/3913510d-42f4-4e42-8a64-420c390055eb', subscription().subscriptionId)]",
    "uniqueRoleGuidMetricsPublisher": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('functionName')))]",
    "uniqueRoleGuidKeyVaultSecretReader": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('functionName')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('functionName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('functionName')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[tolower(variables('storageAccountName'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/default', variables('storageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('storageAccountName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/default', variables('storageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('storageAccountName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "name": "[variables('functionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionName'))]"
      ],
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": true,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "enableRbacAuthorization": true
      },
      "resources": [
        {
          "type": "secrets",
          "apiVersion": "2016-10-01",
          "name": "AzureWebJobsStorage",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', variables('functionName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]",
            "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults/', variables('functionName')), 'Microsoft.Authorization/roleAssignments/', variables('uniqueRoleGuidKeyVaultSecretReader'))]"
          ],
          "properties": {
            "value": "[NF.StorageConnectionString(variables('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]",
            "contentType": "string",
            "attributes": {
              "enabled": true
            }
          }
        },
        {
          "type": "secrets",
          "apiVersion": "2016-10-01",
          "name": "APIKey",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', variables('functionName'))]",
            "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults/', variables('functionName')), 'Microsoft.Authorization/roleAssignments/', variables('uniqueRoleGuidKeyVaultSecretReader'))]"
          ],
          "properties": {
            "value": "[parameters('apiToken')]",
            "contentType": "string",
            "attributes": {
              "enabled": true
            }
          }
        },
        {
          "type": "secrets",
          "apiVersion": "2016-10-01",
          "name": "functionAppPackage",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', variables('functionName'))]",
            "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults/', variables('functionName')), 'Microsoft.Authorization/roleAssignments/', variables('uniqueRoleGuidKeyVaultSecretReader'))]"
          ],
          "properties": {
            "value": "[parameters('packageUri')]",
            "contentType": "string",
            "attributes": {
              "enabled": true
            }
          }
        },
        {
          "type": "secrets",
          "apiVersion": "2016-10-01",
          "name": "dataCollectionEndpoint",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', variables('functionName'))]",
            "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults/', variables('functionName')), 'Microsoft.Authorization/roleAssignments/', variables('uniqueRoleGuidKeyVaultSecretReader'))]"
          ],
          "properties": {
            "value": "[parameters('dataCollectionEndpoint')]",
            "contentType": "string",
            "attributes": {
              "enabled": true
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[variables('uniqueRoleGuidKeyVaultSecretReader')]",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('functionName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/', variables('functionName'))]",
        "[resourceId('Microsoft.Web/sites/', variables('functionName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('keyVaultSecretReader')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionName')), '2019-08-01', 'full').identity.principalId]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[variables('uniqueRoleGuidMetricsPublisher')]",
      "scope": "[format('Microsoft.Insights/dataCollectionRules/{0}', '1Password')]",
      "properties": {
        "roleDefinitionId": "[variables('metricsPublisher')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionName')), '2019-08-01', 'full').identity.principalId]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "kind": "functionapp",
      "properties": {
        "name": "[variables('FunctionName')]",
        "workerSize": "0",
        "workerSizeId": "0",
        "numberOfWorkers": "1"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('FunctionName'))]",
        "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
      ],
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('FunctionName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('FunctionName'))]",
        "httpsOnly": true,
        "clientAffinityEnabled": true,
        "alwaysOn": true,
        "siteConfig": {
          "powerShellVersion": "7.2"
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/extensions",
      "name": "[concat(variables('FunctionName'), '/ZipDeploy')]",
      "apiVersion": "2020-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/config', variables('FunctionName'), 'appsettings')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('functionName'), 'AzureWebJobsStorage')]"
      ],
      "properties": {
        "packageUri": "[parameters('packageUri')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[concat(variables('FunctionName'), '/appsettings')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('FunctionName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('functionName'), 'AzureWebJobsStorage')]",
        "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults/', variables('functionName')), 'Microsoft.Authorization/roleAssignments/', variables('uniqueRoleGuidKeyVaultSecretReader'))]"
      ],
      "properties": {
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "FUNCTIONS_WORKER_RUNTIME": "powershell",
        "FUNCTIONS_WORKER_RUNTIME_VERSION": "7.2",
        "APPINSIGHTS_CONNECTION_STRING": "[reference(concat('microsoft.insights/components/', variables('functionName')), '2015-05-01').ConnectionString]",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[NF.StorageConnectionString(variables('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]",
        "WEBSITE_CONTENTSHARE": "[toLower(variables('FunctionName'))]",
        "WEBSITE_RUN_FROM_PACKAGE": "1",
        "AzureWebJobsStorage": "[NF.secretName(variables('functionName'), 'AzureWebJobsStorage')]",
        "schedule": "[parameters('functionSchedule')]",
        "apiEndpoint": "[parameters('apiEndpoint')]",
        "APIKey": "[NF.secretName(variables('functionName'), 'APIKey')]",
        "AZURE_CLIENT_ID": "[reference(resourceId('Microsoft.Web/sites', variables('functionName')), '2019-08-01', 'full').identity.principalId]",
        "dataCollectionEndpoint": "[NF.secretName(variables('functionName'), 'dataCollectionEndpoint')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('functionName'), 'AzureWebJobsStorage')]",
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/default/azure-webjobs-hosts', variables('storageAccountName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/default/azure-webjobs-secrets', variables('storageAccountName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/default/cursors', variables('storageAccountName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }
  ],
  "functions": [
    {
      "namespace": "NF",
      "members": {
        "secretName": {
          "parameters": [
            {
              "name": "VaultName",
              "type": "string"
            },
            {
              "name": "secretName",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[concat('@Microsoft.KeyVault(VaultName=', parameters('VaultName'), ';', 'SecretName=', parameters('secretName'), ')')]"
          }
        },
        "StorageConnectionString": {
          "parameters": [
            {
              "name": "storageAccountName",
              "type": "string"
            },
            {
              "name": "listKey",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), parameters('listKey'), toLower(environment().suffixes.storage))]"
          }
        }
      }
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionName')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[tolower(variables('storageAccountName'))]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('functionName')]"
    }
  }
}
