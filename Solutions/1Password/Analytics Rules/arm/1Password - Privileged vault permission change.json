{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/76e386eb-f51a-4600-97d1-f0db3b7e41f1')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/76e386eb-f51a-4600-97d1-f0db3b7e41f1')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2023-12-01-preview",
            "properties": {
                "displayName": "1Password - Privileged vault permission change",
                "description": "This will alert when permissions have changed within a privileged vault. Once this analytics rule is triggered it will group all related future alerts for upto an hour when all related entities are the same.\n\nRef: https://1password.com/\nRef: https://github.com/securehats/",
                "severity": "High",
                "enabled": true,
                "query": "let watchlist =\r\n    _GetWatchlist(\"PV1PW\")\r\n    | project SearchKey\r\n;\r\n// Insert the vault UUIDs below when using the dynamic vaults list within the analytics rule itself\r\nlet vaults = dynamic([\"\"]);\r\nOnePasswordEventLogs_CL\r\n| where log_source == \"auditevents\"\r\n| where\r\n    (action has_any(\"grant\", \"revoke\", \"update\") and object_type == \"uva\") or\r\n    (action has_any(\"grant\", \"revoke\", \"update\") and object_type == \"gva\")\r\n// Enable the line below when using the \"Privileged Vaults - 1PW\" watchlist\r\n| where object_uuid in (watchlist)\r\n// Enable the line below when using the dynamic vaults list within the analytics rule itself\r\n// | where object_uuid in (vaults)\r\n| extend\r\n    TargetUsername = case(isnotempty(aux_details), aux_details.email, \"\")\r\n    , TargetGroupUUID = case(isempty(aux_details), aux_uuid, \"\")\r\n    , ActorUsername = actor_details.email\r\n    , SrcIpAddr = session.ip",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "Persistence"
                ],
                "techniques": [
                    "T1098"
                ],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT1H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "ActorUsername"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "TargetUsername"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "SrcIpAddr"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null,
                "subTechniques": []
            }
        }
    ]
}