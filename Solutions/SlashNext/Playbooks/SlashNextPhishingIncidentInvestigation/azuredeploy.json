{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "title": "SlashNext Phishing Incident Investigation Playbook",
    "description": "Enhance your security with threat hunting and incident investigation using this playbook. Scan with worldâ€™s largest, real-time phishing intelligence database for accurate, definitive binary verdicts on suspicious URLs and download phishing forensics including webpage screenshots, HTML and text. The playbook shall perform the analysis of all URL entities attached to an existing incident using SlashNext Logic Apps Connector and add threat information to each malicious incident.",
    "prerequisites": [
      "1.**SlashNext Logic Apps Connector** supports **Basic** authentication, while creating connection you will be asked to provide API key.",
      "To acquire SlashNext API key, please contact us at [support@slashnext.com](mailto:support@slashnext.com) or visit [SlashNext.com](www.slashnext.com)"
    ],
    "postDeployment": [ "**a. Authorize Connection**", "Once deployment is complete, authorize SlashNext Logic Apps Connector connection", "1. Click on the SlashNext connection resource", "2. Click **Edit** API connection", "3. Enter API key acquired from SlashNext", "4. Click **Save**" ],
    "lastUpdateTime": "2022-09-27T00:00:00.000Z",
    "entities": [],
    "tags": [],
    "support": {
      "tier": "community"
    },
    "author": {
      "name": "SlashNext"
    },
    "releaseNotes": [
      {
        "version": "1.0.0",
        "title": "SlashNext Phishing Incident Investigation",
        "notes": [ "Initial version" ]
      }
    ]
  },
  "parameters": {
    "PlaybookName": {
      "defaultValue": "SlashNextPhishingIncidentInvestigation",
      "type": "string"
    },
    "customApis_slashnext_name": {
      "defaultValue": "SlashNext",
      "type": "string",
      "metadata": {
        "description": "Name of the SlashNext Connector"
      }
    }
  },
  "variables": {
    "slashnext_connection_name": "[concat('slashnext-connection-', parameters('PlaybookName'))]",
    "MicrosoftSentinelConnectionName": "[concat('sentinel-connection-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "properties": {
        "provisioningState": "Succeeded",
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {
              },
              "type": "Object"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
              "Add_comment_to_incident": {
                  "inputs": {
                      "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p>@{variables('message')}</p>"
                      },
                      "host": {
                          "connection": {
                              "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                      },
                      "method": "post",
                      "path": "/Incidents/Comment"
                  },
                  "runAfter": {
                      "If_Incident_has_both_Malicious_and_Benign_URLs": [
                          "Succeeded"
                      ]
                  },
                  "type": "ApiConnection"
              },
              "Benign_URLs": {
                  "inputs": {
                      "variables": [
                          {
                              "name": "benign_urls",
                              "type": "array",
                              "value": []
                          }
                      ]
                  },
                  "runAfter": {
                      "Malicious_URLs": [
                          "Succeeded"
                      ]
                  },
                  "type": "InitializeVariable"
              },
              "Entities_-_Get_URLs": {
                  "inputs": {
                      "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                      "host": {
                          "connection": {
                              "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                      },
                      "method": "post",
                      "path": "/entities/url"
                  },
                  "runAfter": {},
                  "type": "ApiConnection"
              },
              "If_Incident_has_both_Malicious_and_Benign_URLs": {
                  "actions": {
                      "Prepare_message": {
                          "inputs": {
                              "name": "message",
                              "value": "According to SlashNext connector below mentioned URLs are \nMalicious: @{variables('malicious_urls')}\nBenign: @{variables('benign_urls')}"
                          },
                          "runAfter": {},
                          "type": "SetVariable"
                      }
                  },
                  "expression": {
                      "and": [
                          {
                              "greaterOrEquals": [
                                  "@length(variables('malicious_urls'))",
                                  1
                              ]
                          },
                          {
                              "greaterOrEquals": [
                                  "@length(variables('benign_urls'))",
                                  1
                              ]
                          }
                      ]
                  },
                  "runAfter": {
                      "Malicious_Comment_Condition": [
                          "Succeeded"
                      ]
                  },
                  "type": "If"
              },
              "Iterate_each_URL_in_the_incident": {
                  "actions": {
                      "If_Benign": {
                          "actions": {
                              "Append_Benign_URL": {
                                  "inputs": {
                                      "name": "benign_urls",
                                      "value": "@items('Iterate_each_URL_in_the_incident')?['Url']"
                                  },
                                  "runAfter": {},
                                  "type": "AppendToArrayVariable"
                              }
                          },
                          "expression": {
                              "and": [
                                  {
                                      "greaterOrEquals": [
                                          "@body('Repute')?['total_benign_urls']",
                                          1
                                      ]
                                  }
                              ]
                          },
                          "runAfter": {
                              "Repute": [
                                  "Succeeded"
                              ]
                          },
                          "type": "If"
                      },
                      "If_Malicious": {
                          "actions": {
                              "Append_Malicious_URL": {
                                  "inputs": {
                                      "name": "malicious_urls",
                                      "value": "@items('Iterate_each_URL_in_the_incident')?['Url']"
                                  },
                                  "runAfter": {},
                                  "type": "AppendToArrayVariable"
                              }
                          },
                          "expression": {
                              "and": [
                                  {
                                      "greaterOrEquals": [
                                          "@body('Repute')?['total_malicious_urls']",
                                          1
                                      ]
                                  }
                              ]
                          },
                          "runAfter": {
                              "Repute": [
                                  "Succeeded"
                              ]
                          },
                          "type": "If"
                      },
                      "Repute": {
                          "inputs": {
                              "body": {
                                  "urls": [
                                      "@items('Iterate_each_URL_in_the_incident')?['Url']"
                                  ]
                              },
                              "host": {
                                  "connection": {
                                      "name": "@parameters('$connections')['SlashNext']['connectionId']"
                                  }
                              },
                              "method": "post",
                              "path": "/api/v1/urls/repute"
                          },
                          "runAfter": {},
                          "type": "ApiConnection"
                      }
                  },
                  "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
                  "runAfter": {
                      "Message": [
                          "Succeeded"
                      ]
                  },
                  "type": "Foreach"
              },
              "Malicious_Comment_Condition": {
                  "actions": {
                      "Message_For_Malicious_Incident(s)": {
                          "inputs": {
                              "name": "message",
                              "value": "According to SlashNext connector below mentioned URLs are malicious\n@{variables('malicious_urls')}"
                          },
                          "runAfter": {},
                          "type": "SetVariable"
                      }
                  },
                  "else": {
                      "actions": {
                          "Benign_Comment_Condition": {
                              "actions": {
                                  "Message_For_Benign_Incident(s)": {
                                      "inputs": {
                                          "name": "message",
                                          "value": "According to SlashNext connector below mentioned URL(s) are benign\n@{variables('benign_urls')}"
                                      },
                                      "runAfter": {},
                                      "type": "SetVariable"
                                  }
                              },
                              "expression": {
                                  "and": [
                                      {
                                          "greaterOrEquals": [
                                              "@length(variables('benign_urls'))",
                                              1
                                          ]
                                      }
                                  ]
                              },
                              "runAfter": {},
                              "type": "If"
                          }
                      }
                  },
                  "expression": {
                      "and": [
                          {
                              "greaterOrEquals": [
                                  "@length(variables('malicious_urls'))",
                                  1
                              ]
                          }
                      ]
                  },
                  "runAfter": {
                      "Iterate_each_URL_in_the_incident": [
                          "Succeeded"
                      ]
                  },
                  "type": "If"
              },
              "Malicious_URLs": {
                  "inputs": {
                      "variables": [
                          {
                              "name": "malicious_urls",
                              "type": "array",
                              "value": []
                          }
                      ]
                  },
                  "runAfter": {
                      "Entities_-_Get_URLs": [
                          "Succeeded"
                      ]
                  },
                  "type": "InitializeVariable"
              },
              "Message": {
                  "inputs": {
                      "variables": [
                          {
                              "name": "message",
                              "type": "string",
                              "value": "No URL extracted from Entities"
                          }
                      ]
                  },
                  "runAfter": {
                      "Benign_URLs": [
                          "Succeeded"
                      ]
                  },
                  "type": "InitializeVariable"
              }
          },
          "outputs": {
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "SlashNext": {
                "connectionId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/',variables('slashnext_connection_name'))]",
                "connectionName": "[variables('slashnext_connection_name')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', 'SlashNext')]"
              },
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        }
      },
      "name": "[parameters('PlaybookName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "tags": {
        "hidden-SentinelTemplateName": "incidentenrichment",
        "hidden-SentinelTemplateVersion": "1.0"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "apiVersion": "2017-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('slashnext_connection_name'))]",
        "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
      ]
    },
    {
      "name": "[variables('slashnext_connection_name')]",
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('slashnext_connection_name')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('customApis_slashnext_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('MicrosoftSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('MicrosoftSentinelConnectionName')]",
        "customParameterValues": {
        },
        "parameterValueType": "Alternative",
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
        }
      }
    }
  ]
}
