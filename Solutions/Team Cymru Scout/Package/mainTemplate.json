{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Team Cymru - support@cymru.com",
    "comments": "Solution template for Team Cymru Scout"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Team Cymru Scout",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "watchlist1-id": {
      "type": "string",
      "defaultValue": "TeamCymruScoutDomainData",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist2-id": {
      "type": "string",
      "defaultValue": "TeamCymruScoutIPData",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    }
  },
  "variables": {
    "email": "support@cymru.com",
    "_email": "[variables('email')]",
    "_solutionName": "Team Cymru Scout",
    "_solutionVersion": "3.0.0",
    "solutionId": "teamcymruscout.teamcymruscout_sentinel",
    "_solutionId": "[variables('solutionId')]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "TeamCymruScout",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "TeamCymruScoutDomainData": "TeamCymruScoutDomainData",
    "_TeamCymruScoutDomainData": "[variables('TeamCymruScoutDomainData')]",
    "TeamCymruScoutIPData": "TeamCymruScoutIPData",
    "_TeamCymruScoutIPData": "[variables('TeamCymruScoutIPData')]",
    "TeamCymruScoutLiveInvestigation": "TeamCymruScoutLiveInvestigation",
    "_TeamCymruScoutLiveInvestigation": "[variables('TeamCymruScoutLiveInvestigation')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "TeamCymruScoutLiveInvestigation",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "blanks": "[replace('b', 'b', '')]",
    "TeamCymruScoutCreateIncidentAndNotify": "TeamCymruScoutCreateIncidentAndNotify",
    "_TeamCymruScoutCreateIncidentAndNotify": "[variables('TeamCymruScoutCreateIncidentAndNotify')]",
    "TemplateEmptyArray": "[json('[]')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "TeamCymruScoutCreateIncidentAndNotify",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','CymruScoutAccountUsage')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutAccountUsage')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutAccountUsage-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "CymruScoutAccountUsage-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','CymruScoutCorrelate')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutCorrelate')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutCorrelate-Parser')))]",
      "parserVersion2": "1.0.0",
      "parserContentId2": "CymruScoutCorrelate-Parser"
    },
    "parserObject3": {
      "_parserName3": "[concat(parameters('workspace'),'/','CymruScoutDomain')]",
      "_parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutDomain')]",
      "parserTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutDomain-Parser')))]",
      "parserVersion3": "1.0.0",
      "parserContentId3": "CymruScoutDomain-Parser"
    },
    "parserObject4": {
      "_parserName4": "[concat(parameters('workspace'),'/','CymruScoutDomainData')]",
      "_parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutDomainData')]",
      "parserTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutDomainData-Parser')))]",
      "parserVersion4": "1.0.0",
      "parserContentId4": "CymruScoutDomainData-Parser"
    },
    "parserObject5": {
      "_parserName5": "[concat(parameters('workspace'),'/','CymruScoutIdentity')]",
      "_parserId5": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutIdentity')]",
      "parserTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutIdentity-Parser')))]",
      "parserVersion5": "1.0.0",
      "parserContentId5": "CymruScoutIdentity-Parser"
    },
    "parserObject6": {
      "_parserName6": "[concat(parameters('workspace'),'/','CymruScoutIP')]",
      "_parserId6": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutIP')]",
      "parserTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutIP-Parser')))]",
      "parserVersion6": "1.0.0",
      "parserContentId6": "CymruScoutIP-Parser"
    },
    "parserObject7": {
      "_parserName7": "[concat(parameters('workspace'),'/','CymruScoutProtoByIP')]",
      "_parserId7": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutProtoByIP')]",
      "parserTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutProtoByIP-Parser')))]",
      "parserVersion7": "1.0.0",
      "parserContentId7": "CymruScoutProtoByIP-Parser"
    },
    "parserObject8": {
      "_parserName8": "[concat(parameters('workspace'),'/','CymruScoutSummary')]",
      "_parserId8": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummary')]",
      "parserTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutSummary-Parser')))]",
      "parserVersion8": "1.0.0",
      "parserContentId8": "CymruScoutSummary-Parser"
    },
    "parserObject9": {
      "_parserName9": "[concat(parameters('workspace'),'/','CymruScoutSummaryTopCerts')]",
      "_parserId9": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopCerts')]",
      "parserTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutSummaryTopCerts-Parser')))]",
      "parserVersion9": "1.0.0",
      "parserContentId9": "CymruScoutSummaryTopCerts-Parser"
    },
    "parserObject10": {
      "_parserName10": "[concat(parameters('workspace'),'/','CymruScoutSummaryTopFingerprints')]",
      "_parserId10": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopFingerprints')]",
      "parserTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutSummaryTopFingerprints-Parser')))]",
      "parserVersion10": "1.0.0",
      "parserContentId10": "CymruScoutSummaryTopFingerprints-Parser"
    },
    "parserObject11": {
      "_parserName11": "[concat(parameters('workspace'),'/','CymruScoutSummaryTopOpenPorts')]",
      "_parserId11": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopOpenPorts')]",
      "parserTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutSummaryTopOpenPorts-Parser')))]",
      "parserVersion11": "1.0.0",
      "parserContentId11": "CymruScoutSummaryTopOpenPorts-Parser"
    },
    "parserObject12": {
      "_parserName12": "[concat(parameters('workspace'),'/','CymruScoutSummaryTopPdns')]",
      "_parserId12": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopPdns')]",
      "parserTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutSummaryTopPdns-Parser')))]",
      "parserVersion12": "1.0.0",
      "parserContentId12": "CymruScoutSummaryTopPdns-Parser"
    },
    "parserObject13": {
      "_parserName13": "[concat(parameters('workspace'),'/','CymruScoutTopAsnsByIP')]",
      "_parserId13": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopAsnsByIP')]",
      "parserTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutTopAsnsByIP-Parser')))]",
      "parserVersion13": "1.0.0",
      "parserContentId13": "CymruScoutTopAsnsByIP-Parser"
    },
    "parserObject14": {
      "_parserName14": "[concat(parameters('workspace'),'/','CymruScoutTopCountryCodesByIP')]",
      "_parserId14": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopCountryCodesByIP')]",
      "parserTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutTopCountryCodesByIP-Parser')))]",
      "parserVersion14": "1.0.0",
      "parserContentId14": "CymruScoutTopCountryCodesByIP-Parser"
    },
    "parserObject15": {
      "_parserName15": "[concat(parameters('workspace'),'/','CymruScoutTopServicesByIP')]",
      "_parserId15": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopServicesByIP')]",
      "parserTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutTopServicesByIP-Parser')))]",
      "parserVersion15": "1.0.0",
      "parserContentId15": "CymruScoutTopServicesByIP-Parser"
    },
    "parserObject16": {
      "_parserName16": "[concat(parameters('workspace'),'/','CymruScoutTopTagsByIP')]",
      "_parserId16": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopTagsByIP')]",
      "parserTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutTopTagsByIP-Parser')))]",
      "parserVersion16": "1.0.0",
      "parserContentId16": "CymruScoutTopTagsByIP-Parser"
    },
    "parserObject17": {
      "_parserName17": "[concat(parameters('workspace'),'/','CymruScoutWhois')]",
      "_parserId17": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutWhois')]",
      "parserTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CymruScoutWhois-Parser')))]",
      "parserVersion17": "1.0.0",
      "parserContentId17": "CymruScoutWhois-Parser"
    },
    "uiConfigId1": "TeamCymruScout",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "TeamCymruScout",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "TeamCymruScout Workbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "This Workbook provides immediate insight into the data coming from Team Cymru Scout."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"aea1577b-66ca-45a5-9129-bc71bcec6bc2\",\"cellValue\":\"dashboard\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Indicators Overview\",\"subTarget\":\"IndicatorsOverview\",\"style\":\"link\"},{\"id\":\"cd12708b-f3a3-40c3-96d9-a25a8d5be239\",\"cellValue\":\"dashboard\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Correlation Overview\",\"subTarget\":\"CorrelationOverview\",\"style\":\"link\"},{\"id\":\"21156165-bccc-445b-a02c-8fa9d7006749\",\"cellValue\":\"dashboard\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Live Investigation\",\"subTarget\":\"LiveInvestigation\",\"style\":\"link\"},{\"id\":\"0afd17d5-b698-43a9-832f-0b7527c2307e\",\"cellValue\":\"dashboard\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Account Usage\",\"subTarget\":\"AccountUsage\",\"style\":\"link\"}]},\"name\":\"links - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"The panel **Insights Information by Indicators** incorporates the use of the **TeamCymruScoutCreateIncidentAndNotify** logic app which is deployed with the Microsoft Sentinel Solution to create incident for a malicious indicator.</br>\\r\\nPlease configure this logic app first and keep it enabled in order to notify creation of an incident for a malicious indicator.\\r\\n\",\"style\":\"info\"},\"name\":\"text - 3\"},{\"type\":1,\"content\":{\"json\":\"## Indicators Overview\\r\\n---\"},\"name\":\"text - 1\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"e6e7a3d8-260b-4ef7-97ae-1784587ec027\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"description\":\"Select time range\",\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"value\":{\"durationMs\":604800000}},{\"id\":\"86ea0c2a-08ce-4185-a6bb-8001537825a9\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IndicatorType\",\"label\":\"Indicator Type\",\"type\":2,\"description\":\"Select the Indicator type\",\"isRequired\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"jsonData\":\"[\\\"IP\\\", \\\"Domain\\\"]\",\"timeContext\":{\"durationMs\":86400000},\"defaultValue\":\"value::all\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| count\\r\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Total Indicators\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"Count\",\"exportParameterName\":\"TotalCount\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":0},\"rightContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"33\",\"name\":\"query - 0\",\"styleSettings\":{\"maxWidth\":\"33%\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| where TimeGenerated >= ago(7d)\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| sort by TimeGenerated asc\\r\\n| count \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Indicators Reported in Last Week\",\"noDataMessage\":\"No data found.\",\"showRefreshButton\":true,\"exportFieldName\":\"Count\",\"exportParameterName\":\"LastWeekCount\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":0},\"rightContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"33\",\"name\":\"query - 1\",\"styleSettings\":{\"maxWidth\":\"33%\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| where TimeGenerated >= ago(1d)\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| sort by TimeGenerated asc\\r\\n| count \\r\\n\\r\\n\\r\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Indicators Reported in Last Day\",\"noDataMessage\":\"No data found.\",\"showRefreshButton\":true,\"exportFieldName\":\"Count\",\"exportParameterName\":\"LastDayCount\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":0},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"33\",\"name\":\"query - 2\",\"styleSettings\":{\"maxWidth\":\"33%\",\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"#### Click on the count in tile **Total Indicators** above to view more information.\",\"style\":\"info\"},\"customWidth\":\"33\",\"name\":\"text - 14\"},{\"type\":1,\"content\":{\"json\":\"#### Click on the count in tile **Indicators Reported in Last Week** above to view more information.\",\"style\":\"info\"},\"customWidth\":\"33\",\"name\":\"text - 15\"},{\"type\":1,\"content\":{\"json\":\"#### Click on the count in tile **Indicators Reported in Last Day** above to view more information.\",\"style\":\"info\"},\"customWidth\":\"33\",\"name\":\"text - 16\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string, IP: string, Domain:string, IPCountryCode:string, CountryCodes:string, InsightsOverallRating: string, SummaryWhoIsASName: string, SummaryWhoIsASN: real, SummaryWhoIsNetName: string, SummaryWhoIsOrgName: string, SummaryReverseHostNames: string, IdentityASN: real, IdentityASName: string, IdentityNetName: string, IdentityOrgName:string, ASInfo:string, IdentityReverseHostNames:string, IPPdnsDomain: string, PDNSDetails: dynamic, OpenPorts: string, OpenPortsDetails: dynamic, ProtocolID: string, ProtocolType: string, OpenPortServices: string, CertificateDetails: string, FingerprintsDetails: string, TagsIds: string, TagsNames: string, SummaryOpenPorts: string, SummaryPDNS: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| extend DomainCountryCodes = strcat_array(todynamic(CountryCodes), \\\",\\\")\\r\\n| extend ['Country Code'] = coalesce(IPCountryCode, DomainCountryCodes) \\r\\n| sort by TimeGenerated asc\\r\\n| project-reorder TimeGenerated, IndicatorType, Indicator, IP, Domain\\r\\n| project-away IPCountryCode, DomainCountryCodes, CountryCodes\\r\\n| project-rename ['Insights Overall Rating'] = InsightsOverallRating, ['Summary WhoIs ASName'] = SummaryWhoIsASName, ['Summary WhoIs ASN'] = SummaryWhoIsASN, ['Summary WhoIs Net Name'] = SummaryWhoIsNetName, ['Summary WhoIs Org Name'] = SummaryWhoIsOrgName, ['Summary Reverse Host Names'] = SummaryReverseHostNames, ['Identity ASN'] = IdentityASN, ['Identity ASName'] = IdentityASName, ['Identity Net Name'] = IdentityNetName, ['Identity Org Name'] = IdentityOrgName, ['AS Info'] = ASInfo, ['Identity Reverse Host Names'] = IdentityReverseHostNames, ['PDNS Domain'] = IPPdnsDomain, ['PDNS Details'] = PDNSDetails, ['Open Ports'] = OpenPorts, ['Open Ports Details'] = OpenPortsDetails, ['Protocol ID'] = ProtocolID, ['Protocol Type'] = ProtocolType, ['Open Port Services'] = OpenPortServices, ['Certificate Details'] = CertificateDetails, ['Fingerprints Details'] = FingerprintsDetails, ['Tags Ids'] = TagsIds, ['Tags Names'] = TagsNames, ['Summary Open Ports'] = SummaryOpenPorts, ['Summary PDNS'] = SummaryPDNS\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of Indicators\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"TotalCount\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 8\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string, IP: string, Domain:string, IPCountryCode:string, CountryCodes:string, InsightsOverallRating: string, SummaryWhoIsASName: string, SummaryWhoIsASN: real, SummaryWhoIsNetName: string, SummaryWhoIsOrgName: string, SummaryReverseHostNames: string, IdentityASN: real, IdentityASName: string, IdentityNetName: string, IdentityOrgName:string, ASInfo:string, IdentityReverseHostNames:string, IPPdnsDomain: string, PDNSDetails: dynamic, OpenPorts: string, OpenPortsDetails: dynamic, ProtocolID: string, ProtocolType: string, OpenPortServices: string, CertificateDetails: string, FingerprintsDetails: string, TagsIds: string, TagsNames: string, SummaryOpenPorts: string, SummaryPDNS: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| where TimeGenerated >= ago(7d)\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| extend DomainCountryCodes = strcat_array(todynamic(CountryCodes), \\\",\\\")\\r\\n| extend ['Country Code'] = coalesce(IPCountryCode, DomainCountryCodes) \\r\\n| sort by TimeGenerated asc\\r\\n| project-reorder TimeGenerated, IndicatorType, Indicator, IP, Domain\\r\\n| project-away IPCountryCode, DomainCountryCodes, CountryCodes\\r\\n| project-rename ['Insights Overall Rating'] = InsightsOverallRating, ['Summary WhoIs ASName'] = SummaryWhoIsASName, ['Summary WhoIs ASN'] = SummaryWhoIsASN, ['Summary WhoIs Net Name'] = SummaryWhoIsNetName, ['Summary WhoIs Org Name'] = SummaryWhoIsOrgName, ['Summary Reverse Host Names'] = SummaryReverseHostNames, ['Identity ASN'] = IdentityASN, ['Identity ASName'] = IdentityASName, ['Identity Net Name'] = IdentityNetName, ['Identity Org Name'] = IdentityOrgName, ['AS Info'] = ASInfo, ['Identity Reverse Host Names'] = IdentityReverseHostNames, ['PDNS Domain'] = IPPdnsDomain, ['PDNS Details'] = PDNSDetails, ['Open Ports'] = OpenPorts, ['Open Ports Details'] = OpenPortsDetails, ['Protocol ID'] = ProtocolID, ['Protocol Type'] = ProtocolType, ['Open Port Services'] = OpenPortServices, ['Certificate Details'] = CertificateDetails, ['Fingerprints Details'] = FingerprintsDetails, ['Tags Ids'] = TagsIds, ['Tags Names'] = TagsNames, ['Summary Open Ports'] = SummaryOpenPorts, ['Summary PDNS'] = SummaryPDNS\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of Indicators from Last Week\",\"noDataMessage\":\"No data found.\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"LastWeekCount\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 9\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string, IP: string, Domain:string, IPCountryCode:string, CountryCodes:string, InsightsOverallRating: string, SummaryWhoIsASName: string, SummaryWhoIsASN: real, SummaryWhoIsNetName: string, SummaryWhoIsOrgName: string, SummaryReverseHostNames: string, IdentityASN: real, IdentityASName: string, IdentityNetName: string, IdentityOrgName:string, ASInfo:string, IdentityReverseHostNames:string, IPPdnsDomain: string, PDNSDetails: dynamic, OpenPorts: string, OpenPortsDetails: dynamic, ProtocolID: string, ProtocolType: string, OpenPortServices: string, CertificateDetails: string, FingerprintsDetails: string, TagsIds: string, TagsNames: string, SummaryOpenPorts: string, SummaryPDNS: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| where TimeGenerated >= ago(1d)\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| extend DomainCountryCodes = strcat_array(todynamic(CountryCodes), \\\",\\\")\\r\\n| extend ['Country Code'] = coalesce(IPCountryCode, DomainCountryCodes) \\r\\n| sort by TimeGenerated asc\\r\\n| project-reorder TimeGenerated, IndicatorType, Indicator, IP, Domain\\r\\n| project-away IPCountryCode, DomainCountryCodes, CountryCodes\\r\\n| project-rename ['Insights Overall Rating'] = InsightsOverallRating, ['Summary WhoIs ASName'] = SummaryWhoIsASName, ['Summary WhoIs ASN'] = SummaryWhoIsASN, ['Summary WhoIs Net Name'] = SummaryWhoIsNetName, ['Summary WhoIs Org Name'] = SummaryWhoIsOrgName, ['Summary Reverse Host Names'] = SummaryReverseHostNames, ['Identity ASN'] = IdentityASN, ['Identity ASName'] = IdentityASName, ['Identity Net Name'] = IdentityNetName, ['Identity Org Name'] = IdentityOrgName, ['AS Info'] = ASInfo, ['Identity Reverse Host Names'] = IdentityReverseHostNames, ['PDNS Domain'] = IPPdnsDomain, ['PDNS Details'] = PDNSDetails, ['Open Ports'] = OpenPorts, ['Open Ports Details'] = OpenPortsDetails, ['Protocol ID'] = ProtocolID, ['Protocol Type'] = ProtocolType, ['Open Port Services'] = OpenPortServices, ['Certificate Details'] = CertificateDetails, ['Fingerprints Details'] = FingerprintsDetails, ['Tags Ids'] = TagsIds, ['Tags Names'] = TagsNames, ['Summary Open Ports'] = SummaryOpenPorts, ['Summary PDNS'] = SummaryPDNS\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of Indicators from Last Day\",\"noDataMessage\":\"No data found.\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"LastDayCount\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 10\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| extend Date = format_datetime(todatetime(TimeGenerated), 'yyyy-MM-dd')\\r\\n| summarize dcount(Indicator) by Date, IndicatorType\\r\\n| sort by Date asc\\r\\n\",\"size\":3,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Indicators Ingested Over Time\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"x\",\"exportParameterName\":\"DateTime\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"xAxis\":\"Date\",\"group\":\"*\",\"createOtherGroup\":0,\"showLegend\":true,\"xSettings\":{\"label\":\"Time\"},\"ySettings\":{\"label\":\"Indicators\"}}},\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"#### Click on a bar in panel **Indicators Ingested Over Time** above to view more information.\",\"style\":\"info\"},\"name\":\"text - 17\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string, IP: string, Domain:string, IPCountryCode:string, CountryCodes:string, InsightsOverallRating: string, SummaryWhoIsASName: string, SummaryWhoIsASN: real, SummaryWhoIsNetName: string, SummaryWhoIsOrgName: string, SummaryReverseHostNames: string, IdentityASN: real, IdentityASName: string, IdentityNetName: string, IdentityOrgName:string, ASInfo:string, IdentityReverseHostNames:string, IPPdnsDomain: string, PDNSDetails: dynamic, OpenPorts: string, OpenPortsDetails: dynamic, ProtocolID: string, ProtocolType: string, OpenPortServices: string, CertificateDetails: string, FingerprintsDetails: string, TagsIds: string, TagsNames: string, SummaryOpenPorts: string, SummaryPDNS: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| extend Date = format_datetime(todatetime(TimeGenerated), 'yyyy-MM-dd')\\r\\n| where Date == '{DateTime}'\\r\\n| extend DomainCountryCodes = strcat_array(todynamic(CountryCodes), \\\",\\\")\\r\\n| extend ['Country Code'] = coalesce(IPCountryCode, DomainCountryCodes) \\r\\n| project-reorder TimeGenerated, IndicatorType, Indicator, IP, Domain\\r\\n| project-away IPCountryCode, DomainCountryCodes, CountryCodes, Date\\r\\n| project-rename ['Insights Overall Rating'] = InsightsOverallRating, ['Summary WhoIs ASName'] = SummaryWhoIsASName, ['Summary WhoIs ASN'] = SummaryWhoIsASN, ['Summary WhoIs Net Name'] = SummaryWhoIsNetName, ['Summary WhoIs Org Name'] = SummaryWhoIsOrgName, ['Summary Reverse Host Names'] = SummaryReverseHostNames, ['Identity ASN'] = IdentityASN, ['Identity ASName'] = IdentityASName, ['Identity Net Name'] = IdentityNetName, ['Identity Org Name'] = IdentityOrgName, ['AS Info'] = ASInfo, ['Identity Reverse Host Names'] = IdentityReverseHostNames, ['PDNS Domain'] = IPPdnsDomain, ['PDNS Details'] = PDNSDetails, ['Open Ports'] = OpenPorts, ['Open Ports Details'] = OpenPortsDetails, ['Protocol ID'] = ProtocolID, ['Protocol Type'] = ProtocolType, ['Open Port Services'] = OpenPortServices, ['Certificate Details'] = CertificateDetails, ['Fingerprints Details'] = FingerprintsDetails, ['Tags Ids'] = TagsIds, ['Tags Names'] = TagsNames, ['Summary Open Ports'] = SummaryOpenPorts, ['Summary PDNS'] = SummaryPDNS\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of Indicators Ingested Over Time\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"DateTime\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 11\",\"styleSettings\":{\"showBorder\":true}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"bcce6bdc-6170-436b-8eac-2b106bc8368f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Indicators\",\"type\":2,\"description\":\"Select Indicator value\",\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"let dummy_table = datatable(IndicatorType: string, Indicator:string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| distinct Indicator\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string, IP: string, Domain:string, ASInfo:string, SummaryWhoIsASName:string, IdentityASName:string, SummaryWhoIsASN: real, IdentityASN: real, SummaryWhoIsNetName: string, IdentityNetName: string, SummaryWhoIsOrgName: string, IdentityOrgName: string, SummaryReverseHostNames:string, IdentityReverseHostNames:string, TagsIds: string, TagsNames: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| where ('*' in ({Indicators})) or (Indicator in ({Indicators}))\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| mv-apply todynamic(ASInfo) on ( summarize ASName = make_list(ASInfo.as_name), ASN = make_list(ASInfo.asn) by IP, Indicator)\\r\\n| extend ['AS Name'] = coalesce(SummaryWhoIsASName,IdentityASName, strcat_array(ASName, \\\",\\\")),\\r\\n        ASN = coalesce(tostring(toint(SummaryWhoIsASN)), tostring(toint(IdentityASN)), strcat_array(ASN, \\\",\\\")), \\r\\n        ['Net Name'] = coalesce(SummaryWhoIsNetName, IdentityNetName, 'N/A'),\\r\\n        ['Organization Name'] = coalesce(SummaryWhoIsOrgName, IdentityOrgName, 'N/A'),\\r\\n        ['Reverse Hostnames'] = coalesce(SummaryReverseHostNames, IdentityReverseHostNames, 'N/A'),\\r\\n        ['Tags Ids'] = coalesce(TagsIds, 'N/A'),\\r\\n        ['Tags Name'] = coalesce(TagsNames, 'N/A')\\r\\n| project Indicator, ['AS Name'] = iff(['AS Name'] == \\\"\\\", \\\"N/A\\\",['AS Name']), ASN = iff(ASN == \\\"\\\", \\\"N/A\\\",ASN), ['Net Name'], ['Organization Name'], ['Reverse Hostnames'], ['Tags Ids'], ['Tags Name'] \\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Identity Information by Indicators\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"## Steps to Create Incident and Notify for a Malicious Indicator.\\r\\n- Select the **Subscription ID** and **Resource Group**.\\r\\n- Click on the **Run Playbook** button besides malicious indicator.\\r\\n- One side panel will be open, click on the **Create Incident And Notify** button below.\\r\\n- This will execute the **TeamCymruScoutCreateIncidentAndNotify** logic app in the background.\\r\\n- You can check the status of the playbook to identify the creation of incident and check mail for notification.\\r\\n</br>\\r\\n</br>\\r\\n**NOTE**: You can see Run Playbook option visible only for Malicious indicators. For others, that option is not available.\\r\\n\",\"style\":\"upsell\"},\"name\":\"text - 13\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"3f0a0cc5-3490-430c-b62b-bd6f398abd6f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SubscriptionId\",\"label\":\"Subscription ID\",\"type\":2,\"description\":\"Select Subscription ID\",\"isRequired\":true,\"query\":\"Resources\\r\\n| distinct subscriptionId\",\"typeSettings\":{\"showDefault\":false},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"cff3bb6e-4bd5-4874-a32d-3706601bbaf9\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ResourceGroup\",\"label\":\"Resource Group\",\"type\":2,\"description\":\"Select Resource Group\",\"isRequired\":true,\"query\":\"Resources \\r\\n| extend ResourceGroupName = resourceGroup \\r\\n| distinct ResourceGroupName\",\"typeSettings\":{\"showDefault\":false},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"}],\"style\":\"pills\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string, InsightsOverallRating: string, Insights: string) [];\\r\\nlet OverviewTable=(\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| where ('*' in ({Indicators})) or (Indicator in ({Indicators}))\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n|project Indicator, [\\\"Insights Overall Rating\\\"] = coalesce(InsightsOverallRating, 'N/A')\\r\\n);\\r\\nlet InsightsMessageTable=(\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| where ('*' in ({Indicators})) or (Indicator in ({Indicators}))\\r\\n| mv-expand todynamic(Insights)\\r\\n| extend insight_message = Insights.message, \\r\\n        insight_rating = Insights.rating\\r\\n| extend Message = iff(isnotnull(insight_message) and isnotnull(insight_rating),strcat(insight_message, \\\"->\\\", insight_rating), 'N/A')\\r\\n| summarize ['Insight Message With Rating'] = make_set(Message) by Indicator\\r\\n| project Indicator, ['Insight Message With Rating'] = iff(['Insight Message With Rating'] == '[\\\"N/A\\\"]', \\\"N/A\\\",strcat_array(['Insight Message With Rating'], \\\",\\\"))\\r\\n);\\r\\nInsightsMessageTable | join kind=fullouter OverviewTable on Indicator\\r\\n| extend ['Create Incident And Notify'] = iff(tolower([\\\"Insights Overall Rating\\\"]) == \\\"malicious\\\", \\\"Run Playbook\\\", \\\"\\\")\\r\\n| project Indicator, ['Insight Message With Rating'], [\\\"Insights Overall Rating\\\"], ['Create Incident And Notify']\",\"size\":0,\"showAnalytics\":true,\"title\":\"Insights Information by Indicators\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"Indicator\",\"exportParameterName\":\"Indicator\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Indicator\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true}},{\"columnMatch\":\"Insights Overall Rating\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"suspicious\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"malicious\",\"representation\":\"red\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"text\":\"{0}{1}\"}]},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Create Incident And Notify\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"ArmAction\",\"linkLabel\":\"\",\"linkIsContextBlade\":true,\"armActionContext\":{\"path\":\"/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroup}/providers/Microsoft.Logic/workflows/TeamCymruScoutCreateIncidentAndNotify/triggers/manual/run?api-version=2016-10-01\",\"body\":\"{\\r\\n  \\\"indicator_value\\\": \\\"{Indicator}\\\",\\r\\n  \\\"fetch_from_logs\\\": true\\r\\n}\",\"httpMethod\":\"POST\",\"description\":\"# Actions can potentially modify resources.\\n## Please use caution and include a confirmation message in this description when authoring this command.\",\"runLabel\":\"Create Incident And Notify\"}}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator:string, IP: string, SummaryOpenPorts: string, SummaryPDNS:string, OpenPorts: string, ProtocolID: string, ProtocolType: string, OpenPortServices: string, IPPdnsDomain:string, CertificateDetails:string, FingerprintsDetails: string, PDNSDetails: dynamic, OpenPortsDetails: dynamic) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIP,\\r\\nCymruScoutDomain\\r\\n| where ('*' in ('{IndicatorType}')) or IndicatorType == '{IndicatorType}'\\r\\n| where ('*' in ({Indicators})) or (Indicator in ({Indicators}))\\r\\n| extend DomainOpenPorts = SummaryOpenPorts, DomainPDNS = SummaryPDNS\\r\\n| mv-apply todynamic(SummaryOpenPorts) on ( summarize OpenPortsDomain = strcat_array(make_list(SummaryOpenPorts.port), \\\",\\\"), DomainProtocolID = strcat_array(make_list(SummaryOpenPorts.protocol), \\\",\\\"), ProtocolTypeDomain = strcat_array(make_list(SummaryOpenPorts.protocol_text), \\\",\\\"),OpenPortServicesDomain = strcat_array(make_list(SummaryOpenPorts.service),  \\\",\\\") by IP)\\r\\n| mv-apply todynamic(SummaryPDNS) on ( summarize DomainPdnsDomain = strcat_array(make_list(SummaryPDNS.domain), \\\",\\\"), DomainPdnsIPs = strcat_array(make_list(SummaryPDNS.ip), \\\",\\\") by IP)\\r\\n| extend [\\\"Open Ports\\\"] = coalesce(OpenPortsDomain, OpenPorts, \\\"NA\\\"),\\r\\n        [\\\"Protocol ID\\\"] = coalesce(DomainProtocolID,ProtocolID, \\\"NA\\\"),\\r\\n        ['Protocol Type'] = coalesce(ProtocolTypeDomain,ProtocolType, \\\"NA\\\"),\\r\\n        ['Open Port Services'] = coalesce(OpenPortServicesDomain, OpenPortServices, \\\"NA\\\"),        \\r\\n        ['Pdns Domain'] = coalesce(DomainPdnsDomain,IPPdnsDomain, \\\"NA\\\"),        \\r\\n        ['Pdns IPs'] = coalesce(DomainPdnsIPs, \\\"NA\\\"),\\r\\n        Certificate = coalesce(CertificateDetails, 'NA'),\\r\\n        Fingerprint = coalesce(FingerprintsDetails, 'NA'),\\r\\n        ['PDNS Details'] = coalesce(DomainPDNS, PDNSDetails, 'NA'),\\r\\n        ['Open Ports Details'] = coalesce(DomainOpenPorts, OpenPortsDetails, 'NA')\\r\\n| project Indicator, [\\\"Open Ports\\\"],\\r\\n        ['Open Port Services'],\\r\\n        [\\\"Protocol ID\\\"],\\r\\n        ['Protocol Type'],        \\r\\n        ['Pdns Domain'],        \\r\\n        ['Pdns IPs'],   \\r\\n        Fingerprint,\\r\\n        Certificate,\\r\\n        ['Open Ports Details'],\\r\\n        ['PDNS Details']\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Indicators Details\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Indicator\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true}},{\"columnMatch\":\"PDNS Details\",\"formatter\":5},{\"columnMatch\":\"Open Ports Details\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 7\",\"styleSettings\":{\"showBorder\":true}}]},\"name\":\"group - 1\"},{\"type\":1,\"content\":{\"json\":\"📝***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 4\"}]},\"conditionalVisibility\":{\"parameterName\":\"dashboard\",\"comparison\":\"isEqualTo\",\"value\":\"IndicatorsOverview\"},\"name\":\"group - 2\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"This workbook depends on the **TeamCymruScoutLiveInvestigation** logic app which is deployed with the Microsoft Sentinel Solution.</br>\\r\\nPlease configure this logic app first and keep it enabled in order to use this workbook.\\r\\n\",\"style\":\"info\"},\"name\":\"text - 6\"},{\"type\":1,\"content\":{\"json\":\"## Live Investigation\\r\\n---\"},\"name\":\"text - 0\"},{\"type\":1,\"content\":{\"json\":\"## Steps to perform Live Investigation using this workbook\\r\\n- This workbook is intended to help perform Live Investigation for Indicators (**Type:** IP or Domain).\\r\\n- Select the **Resource Group** and **Subscription ID**.\\r\\n- Select Indicator Type from Type filter and provide Indicator value corresponding to it's type in the Indicator parameter.\\r\\n- Click on the **Submit** button.\\r\\n- One side panel will be open, click on the **Get Data** button below.\\r\\n- This will execute the **TeamCymruScoutLiveInvestigation** logic app in the background.\\r\\n- You will be able to see a message as **Refresh to check for data availability**.\\r\\n- Click on the refresh button icon above the message until you get a message as **Click here to view the data**.\\r\\n- Click on the message **Click here to view the data** and it will display all panels for searched Indicator data.\\r\\n- You can check the status of the playbook to identify the Live Investigation data fetch status.\\r\\n</br>\\r\\n</br>\\r\\n**Note** : </br>\\r\\nIn cases where\\r\\n\\t* In a new environment for live investigations, it may take around 5 to 10 minutes for data ingestion and dashboard population due to Sentinel's default behavior.</br>\\r\\n    * Panels do not populate, please check the status of the **TeamCymruScoutLiveInvestigation** logic app.</br>\\r\\n    * It is suggested to perform a **Hard Refresh** before getting Live Investigation data for the new Indicator value. Otherwise, the source drill down panels will not be populated properly.\",\"style\":\"upsell\"},\"name\":\"text - 5\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"28bfef2b-0ff8-4fa2-b3e2-07d5f187582a\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SubscriptionId\",\"label\":\"Subscription ID\",\"type\":2,\"isRequired\":true,\"query\":\"Resources\\r\\n| distinct subscriptionId\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"72afd41e-3563-490d-9981-814a9bcfa3a7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ResourceGroup\",\"label\":\"Resource Group\",\"type\":2,\"isRequired\":true,\"query\":\"Resources\\r\\n| extend ResourceGroupName = resourceGroup\\r\\n| distinct ResourceGroupName\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"af011bee-f01b-428a-9a30-f2878107082b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IndicatorType\",\"label\":\"Indicator Type\",\"type\":2,\"description\":\"Select the type of Indicator\",\"isRequired\":true,\"jsonData\":\"[\\\"IP\\\", \\\"Domain\\\"]\",\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"f19fc953-11fd-41c2-aa24-d4c2724d1530\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Indicator\",\"type\":1,\"description\":\"Enter Indicator value\",\"isRequired\":true,\"timeContext\":{\"durationMs\":86400000},\"value\":\"\"},{\"id\":\"b067b1b0-12f0-4ee0-ac1a-eb90f2168260\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IndicatorValue\",\"label\":\"Indicator Value\",\"type\":1,\"query\":\"print(replace_string(replace_string('{Indicator}','[',''),']', ''))\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":1800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"0\",\"name\":\"parameters - 1\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"paragraph\",\"links\":[{\"id\":\"27ac3723-3820-46ae-8881-a42057443f49\",\"linkTarget\":\"ArmAction\",\"linkLabel\":\"Submit\",\"postText\":\"\",\"style\":\"primary\",\"linkIsContextBlade\":true,\"armActionContext\":{\"path\":\"/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroup}/providers/Microsoft.Logic/workflows/TeamCymruScoutLiveInvestigation/triggers/manual/run?api-version=2016-10-01\",\"body\":\"{\\r\\n  \\\"indicator_type\\\": \\\"{IndicatorType}\\\",\\r\\n  \\\"indicator_value\\\": \\\"{Indicator}\\\"\\r\\n}\",\"httpMethod\":\"POST\",\"title\":\"Search Live Investigation For Indicator \\\"{Indicator}\\\"\",\"description\":\"This Action Will fetch live data from cymru scout platform to populate this dashboard.\",\"actionName\":\"Playbook Triggered Successfully.\",\"runLabel\":\"Get Data\"}}]},\"customWidth\":\"0\",\"conditionalVisibilities\":[{\"parameterName\":\"Indicator\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"SubscriptionId\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"ResourceGroup\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"IndicatorType\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"links - 2\",\"styleSettings\":{\"margin\":\"11px\"}}],\"exportParameters\":true},\"name\":\"group - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, ip_s: string, query_s:string) [];\\r\\nunion isfuzzy=true dummy_table, \\r\\n(Summary_Details_CL| where '{IndicatorType}' == \\\"IP\\\"|where ip_s == '{IndicatorValue}') , \\r\\n(Domain_Data_CL| where '{IndicatorType}' == 'Domain'| where query_s == '{IndicatorValue}')\\r\\n| summarize count()\\r\\n| extend status = case(count_ == 0 , \\\"Refresh to check for data availability\\\",\\\"Click here to populate data.\\\")\\r\\n| project status\",\"size\":3,\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"exportFieldName\":\"status\",\"exportParameterName\":\"status\",\"exportDefaultValue\":\"\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"status\"},\"showBorder\":false,\"size\":\"full\"}},\"customWidth\":\"30\",\"conditionalVisibilities\":[{\"parameterName\":\"SubscriptionId\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"ResourceGroup\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"IndicatorType\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"Indicator\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"query - 5\",\"styleSettings\":{\"margin\":\"28px\"}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"a5a1e7fd-8177-4055-93e0-5a2ada1e60c9\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Summary\",\"subTarget\":\"summary\",\"style\":\"link\"},{\"id\":\"bb617578-5e0c-454b-a9b6-7ce772b69dc2\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Whois\",\"subTarget\":\"whois\",\"style\":\"link\"}]},\"conditionalVisibility\":{\"parameterName\":\"IndicatorType\",\"comparison\":\"isEqualTo\",\"value\":\"IP\"},\"name\":\"links - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Identity Details - \\\"{IndicatorValue}\\\"\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, ['Overall Rating']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummary\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| extend Overall_Rating = case(\\r\\n    tolower(['Overall Rating']) == \\\"suspicious\\\", \\\"⚠ Suspicious\\\",\\r\\n    tolower(['Overall Rating']) == \\\"malicious\\\", \\\"ⓘ Malicious\\\",\\r\\n    \\\"No Rating\\\")\\r\\n| project ['Overall Rating'] = Overall_Rating\",\"size\":3,\"title\":\"Overall Rating\",\"noDataMessage\":\"No Overall rating found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Overall Rating\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Suspicious\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"Malicious\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"text\":\"{0}{1}\"}]},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":false,\"sortOrderField\":1,\"size\":\"auto\"}},\"customWidth\":\"50\",\"name\":\"query - 0\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, ['Geo IP CC']:string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummary\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| extend Country = iif(isempty(['Geo IP CC']), \\\"NA\\\", ['Geo IP CC'])\",\"size\":3,\"title\":\"Country\",\"noDataMessage\":\"No Associated Country found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Country\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"50\",\"name\":\"query - 1\",\"styleSettings\":{\"margin\":\"1px\",\"padding\":\"3px\",\"showBorder\":true}}]},\"name\":\"group - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, ['Org Name']: string, [\\\"Net Name\\\"]: string, ['As Name']: string, Asn: real) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutIdentity\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| project [\\\"Organization Name\\\"]=['Org Name'], [\\\"Net Name\\\"], [\\\"AS Name\\\"] = ['As Name'], [\\\"ASN\\\"]=Asn\",\"size\":0,\"showAnalytics\":true,\"title\":\"Organization Details for \\\"{IndicatorValue}\\\"\",\"noDataMessage\":\"No Organization data found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 1\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, Insights:string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummary\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| mv-expand todynamic(Insights)\\r\\n| project ['Insights']=Insights.message\",\"size\":0,\"showAnalytics\":true,\"title\":\"Insights Information for \\\"{IndicatorValue}\\\"\",\"noDataMessage\":\"No Insights found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Insights\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"100%\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string) [];\\r\\nlet dummy_table2 = datatable(TimeGenerated: datetime, IP: string, Port: real, Service: string, Protocol: real, ['Protocol Name']: string, ['First Seen']: string, ['Last Seen']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummary\\r\\n| where IP == \\\"{IndicatorValue}\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| join kind=inner (union isfuzzy=true dummy_table2, CymruScoutSummaryTopOpenPorts | summarize arg_max(TimeGenerated, *) by IP, Port, Protocol) on $left.IP == $right.IP\\r\\n| project ['Protocol']=['Protocol Name'], Port, Service, ['First Seen']=format_datetime(todatetime(['First Seen']), \\\"yyyy-MM-dd\\\"), ['Last Seen']=format_datetime(todatetime(['Last Seen']), \\\"yyyy-MM-dd\\\")\\r\\n| sort by ['Last Seen'] desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Open Ports for \\\"{IndicatorValue}\\\"\",\"noDataMessage\":\"No Open Ports found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Service\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"10%\"}},{\"columnMatch\":\"First Seen\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"15%\"}},{\"columnMatch\":\"Last Seen\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"15%\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string) [];\\r\\nlet dummy_table2 = datatable(TimeGenerated: datetime, IP: string, Domain: string, ['Event Count']: real) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummary\\r\\n| where IP == \\\"{IndicatorValue}\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| join kind=inner (union isfuzzy=true dummy_table2, CymruScoutSummaryTopPdns | summarize arg_max(TimeGenerated, *) by IP, Domain) on $left.IP == $right.IP\\r\\n| project Domain, ['Event Count']\\r\\n| sort by toint(['Event Count']) desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Most Observed Domains for \\\"{IndicatorValue}\\\"\",\"noDataMessage\":\"No Domain found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Domain\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"80%\"}},{\"columnMatch\":\"Event Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, Port: real, MD5: string, Subject: string, Issuer: string, ['Valid Days']: real, [\\\"Not Before\\\"]: string, [\\\"Not After\\\"]: string, SHA1: string, SHA256: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummaryTopCerts\\r\\n| where IP == \\\"{IndicatorValue}\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by IP, Port, MD5\\r\\n| project\\r\\n    Subject,\\r\\n    Issuer,\\r\\n    Port,\\r\\n    [\\\"Validity Period\\\"] = ['Valid Days'],\\r\\n    [\\\"Not Before\\\"],\\r\\n    [\\\"Not After\\\"],\\r\\n    MD5,\\r\\n    SHA1,\\r\\n    SHA256\",\"size\":3,\"showAnalytics\":true,\"title\":\"Certificate Details for \\\"{IndicatorValue}\\\"\",\"noDataMessage\":\"No Certificate Details found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, ['Signature G']: string, ['Signature S']: string, ['Signature Type']: string, ['First Seen']: string, ['Last Seen']: string, Port: real) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummaryTopFingerprints\\r\\n| where IP == \\\"{IndicatorValue}\\\"\\r\\n| extend Signature = coalesce(['Signature G'], ['Signature S'])\\r\\n| summarize arg_max(TimeGenerated, *) by IP, Signature, Port\\r\\n| project\\r\\n    Type = ['Signature Type'],\\r\\n    Signature,\\r\\n    ['First Seen'] = format_datetime(todatetime(['First Seen']), \\\"yyyy-MM-dd\\\"),\\r\\n    ['Last Seen'] = format_datetime(todatetime(['Last Seen']), \\\"yyyy-MM-dd\\\"),\\r\\n    Port\\r\\n| sort by ['Last Seen'] desc\",\"size\":3,\"showAnalytics\":true,\"title\":\"Most Observed Fingerprints\",\"noDataMessage\":\"No Fingerprints found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Signature\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"50%\"}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"70b2d043-ae23-41b3-bee1-1e6c55239d88\",\"cellValue\":\"subpanel\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Overview\",\"subTarget\":\"overview\",\"style\":\"link\"},{\"id\":\"1e014924-becc-4000-9f76-283dc725d77e\",\"cellValue\":\"subpanel\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Communications\",\"subTarget\":\"communications\",\"style\":\"link\"},{\"id\":\"8e8df187-daca-4dbc-843b-d504d58a0633\",\"cellValue\":\"subpanel\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Services\",\"subTarget\":\"services\",\"style\":\"link\"},{\"id\":\"394bd6fd-0d88-4bf9-a013-74451d9ca265\",\"cellValue\":\"subpanel\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Tags\",\"subTarget\":\"tags\",\"style\":\"link\"},{\"id\":\"db35d66c-f096-4792-8f11-9a3104deacf2\",\"cellValue\":\"subpanel\",\"linkTarget\":\"parameter\",\"linkLabel\":\"ASNs\",\"subTarget\":\"asns\",\"style\":\"link\"},{\"id\":\"9a6a2a5f-c505-4941-abb8-4bf74afcfdf3\",\"cellValue\":\"subpanel\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Countries\",\"subTarget\":\"countries\",\"style\":\"link\"}]},\"name\":\"links - 7\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string) [];\\r\\nlet dummy_table2 = datatable(TimeGenerated: datetime, IP: string, Domain: string, Service: string, ['First Seen']: string, ['Last Seen']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummary\\r\\n| where IP == \\\"{IndicatorValue}\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| join kind=inner (union isfuzzy=true dummy_table2, CymruScoutSummaryTopPdns| summarize arg_max(TimeGenerated, *) by IP, Domain) on $left.IP == $right.IP\\r\\n| project Domain, ['First Seen']=format_datetime(todatetime(['First Seen']), \\\"yyyy-MM-dd\\\"), ['Last Seen']=format_datetime(todatetime(['Last Seen']), \\\"yyyy-MM-dd\\\")\\r\\n| extend Duration = range(todatetime(['First Seen']), todatetime(['Last Seen']), 1d)  \\r\\n| mv-expand Duration \\r\\n| project Domain, Timestamp = Duration  \\r\\n| summarize count() by tostring(Domain), bin(todatetime(Timestamp), 1d)\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"PDNS\",\"noDataMessage\":\"No PDNS found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"xAxis\":\"Timestamp\",\"showLegend\":true,\"xSettings\":{\"label\":\"Date\"}}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, ['Tag Timeline Data']: string, ['First Seen']: string, ['Last Seen']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummary\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| mv-expand todynamic(['Tag Timeline Data'])\\r\\n| extend Tags = ['Tag Timeline Data'].tag.name\\r\\n| project Tags, ['First Seen']=format_datetime(todatetime(['Tag Timeline Data'].first_seen), \\\"yyyy-MM-dd\\\"), ['Last Seen']=format_datetime(todatetime(['Tag Timeline Data'].last_seen), \\\"yyyy-MM-dd\\\")\\r\\n| extend Duration = range(todatetime(['First Seen']), todatetime(['Last Seen']), 1d)  \\r\\n| mv-expand Duration \\r\\n| project Tags, Timestamp = Duration  \\r\\n| summarize count() by tostring(Tags), bin(todatetime(Timestamp), 1d)\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Tags\",\"noDataMessage\":\"No Tags found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"xAxis\":\"Timestamp\",\"showLegend\":true}},\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string) [];\\r\\nlet dummy_table2 = datatable(TimeGenerated: datetime, IP: string, Port: real, Protocol: real, ['First Seen']: string, ['Last Seen']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummary\\r\\n| where IP == \\\"{IndicatorValue}\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| join kind=inner (union isfuzzy=true dummy_table2, CymruScoutSummaryTopOpenPorts| summarize arg_max(TimeGenerated, *) by IP, Port, Protocol) on $left.IP == $right.IP\\r\\n| project Port, ['First Seen']=format_datetime(todatetime(['First Seen']), \\\"yyyy-MM-dd\\\"), ['Last Seen']=format_datetime(todatetime(['Last Seen']), \\\"yyyy-MM-dd\\\")\\r\\n| extend Duration = range(todatetime(['First Seen']), todatetime(['Last Seen']), 1d)  \\r\\n| mv-expand Duration \\r\\n| project Port, Timestamp = Duration  \\r\\n| summarize Count = count() by tostring(Port), bin(todatetime(Timestamp), 1d)\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Open Ports\",\"noDataMessage\":\"No Open Ports found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"xAxis\":\"Timestamp\",\"yAxis\":[\"Count\"],\"group\":\"Port\",\"createOtherGroup\":0,\"showLegend\":true,\"xSettings\":{\"label\":\"Date\"},\"ySettings\":{\"label\":\"No. Of Ports\"}}},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, MD5: string, Port: real, Subject: string, Issuer: string, ['First Seen']: string, ['Last Seen']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutSummaryTopCerts\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP, Port, MD5\\r\\n| extend Subject = strcat(Subject, Issuer, \\\"=\\\", Port)\\r\\n| project Subject, ['First Seen']=format_datetime(todatetime(['First Seen']), \\\"yyyy-MM-dd\\\"), ['Last Seen']=format_datetime(todatetime(['Last Seen']), \\\"yyyy-MM-dd\\\")\\r\\n| extend Duration = range(todatetime(['First Seen']), todatetime(['Last Seen']), 1d)  \\r\\n| mv-expand Duration \\r\\n| project Subject, Timestamp = Duration\\r\\n| summarize Count = count() by Subject, bin(todatetime(Timestamp), 1d)\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Certificate\",\"noDataMessage\":\"No Certificate found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"xAxis\":\"Timestamp\",\"yAxis\":[\"Count\"],\"group\":\"Subject\",\"createOtherGroup\":0,\"showLegend\":true}},\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, ['Proto By Date']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutProtoByIP\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| mv-expand todynamic(['Proto By Date'])\\r\\n| mv-expand todynamic(['Proto By Date'].data)\\r\\n| parse-where ['Proto By Date_data'] with * '\\\"count\\\":' Count ',\\\"date\\\":\\\"' dates '\\\"}'\\r\\n| extend Date = format_datetime( todatetime(dates), \\\"yyyy-MM-dd\\\")\\r\\n| summarize counts = sum(tolong(Count)) by Date\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Events\",\"noDataMessage\":\"No Events Found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Date\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"counts\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"Date\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"counts\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"Date\",\"yAxis\":[\"counts\"],\"createOtherGroup\":0,\"xSettings\":{\"label\":\"Date\"},\"ySettings\":{\"label\":\"No. of Events\"}},\"mapSettings\":{\"locInfo\":\"LatLong\",\"sizeSettings\":\"counts\",\"sizeAggregation\":\"Sum\",\"legendMetric\":\"counts\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"type\":\"heatmap\",\"colorAggregation\":\"Sum\",\"nodeColorField\":\"counts\",\"heatmapPalette\":\"greenRed\"}}},\"name\":\"query - 4\"}]},\"conditionalVisibility\":{\"parameterName\":\"subpanel\",\"comparison\":\"isEqualTo\",\"value\":\"overview\"},\"name\":\"group - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, ['Proto By Date']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutProtoByIP\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| mv-expand todynamic(['Proto By Date'])\\r\\n| mv-expand todynamic(['Proto By Date'].data)\\r\\n| parse-where ['Proto By Date_data'] with * '\\\"count\\\":' Count ',\\\"date\\\":\\\"' dates '\\\"}'\\r\\n| extend Date = format_datetime( todatetime(dates), \\\"yyyy-MM-dd\\\")\\r\\n| summarize counts = sum(tolong(Count)) by Date, keyword = tostring(['Proto By Date'].keyword)\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Protocols for {IndicatorValue} and Its Peers\",\"noDataMessage\":\"No Protocols found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"xAxis\":\"Date\",\"yAxis\":[\"counts\"],\"group\":\"keyword\",\"createOtherGroup\":0,\"showLegend\":true,\"xSettings\":{\"label\":\"Date\"},\"ySettings\":{\"label\":\"Events\"}}},\"conditionalVisibility\":{\"parameterName\":\"subpanel\",\"comparison\":\"isEqualTo\",\"value\":\"communications\"},\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, Datasets: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutTopServicesByIP\\r\\n| where IP == \\\"{IndicatorValue}\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| mv-expand todynamic(Datasets)\\r\\n| parse-where tostring(Datasets) with * '\\\"label\\\":\\\"' label '\\\",\\\"tag_id\\\":' tag_id ',\\\"data\\\":' data ',\\\"css_color\\\":\\\"' css_color '\\\",\\\"dates\\\":' Dates '}'\\r\\n| project data, label, Dates, IP\\r\\n| mv-expand todynamic(data), todynamic(Dates)\\r\\n| extend Date = format_datetime( todatetime(Dates), \\\"yyyy-MM-dd\\\")\\r\\n| summarize counts = sum(todouble(data)) by Date, keyword = tostring(label)\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Top 10 Services for \\\"{IndicatorValue}\\\" and Its Peers\",\"noDataMessage\":\"No Services found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"xAxis\":\"Date\",\"yAxis\":[\"counts\"],\"group\":\"keyword\",\"showLegend\":true,\"xSettings\":{\"label\":\"Date\"},\"ySettings\":{\"numberFormatSettings\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}},\"min\":0,\"max\":100,\"label\":\"% of Traffic\"}}},\"conditionalVisibility\":{\"parameterName\":\"subpanel\",\"comparison\":\"isEqualTo\",\"value\":\"services\"},\"name\":\"query - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, Datasets: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutTopTagsByIP\\r\\n| where IP == \\\"{IndicatorValue}\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| mv-expand todynamic(Datasets)\\r\\n| parse-where tostring(Datasets) with * '\\\"label\\\":\\\"' label '\\\",\\\"tag_id\\\":' tag_id ',\\\"data\\\":' data ',\\\"css_color\\\":\\\"' css_color '\\\",\\\"dates\\\":' Dates '}'\\r\\n| project data, label, Dates, IP\\r\\n| mv-expand todynamic(data), todynamic(Dates)\\r\\n| extend Date = format_datetime( todatetime(Dates), \\\"yyyy-MM-dd\\\")\\r\\n| summarize counts = sum(todouble(data)) by Date, keyword = tostring(label)\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Top 10 Tags for \\\"{IndicatorValue}\\\" and Its Peers\",\"noDataMessage\":\"No Tags found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"xAxis\":\"Date\",\"yAxis\":[\"counts\"],\"group\":\"keyword\",\"showLegend\":true,\"xSettings\":{\"label\":\"Date\"},\"ySettings\":{\"numberFormatSettings\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}},\"min\":0,\"max\":100,\"label\":\"% of Traffic\"}}},\"conditionalVisibility\":{\"parameterName\":\"subpanel\",\"comparison\":\"isEqualTo\",\"value\":\"tags\"},\"name\":\"query - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, Datasets: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutTopAsnsByIP\\r\\n| where IP == \\\"{IndicatorValue}\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| mv-expand todynamic(Datasets)\\r\\n| parse-where tostring(Datasets) with * '\\\"label\\\":\\\"' label '\\\",\\\"tag_id\\\":' tag_id ',\\\"data\\\":' data ',\\\"css_color\\\":\\\"' css_color '\\\",\\\"dates\\\":' Dates '}'\\r\\n| project data, label, Dates, IP\\r\\n| mv-expand todynamic(data), todynamic(Dates)\\r\\n| extend Date = format_datetime( todatetime(Dates), \\\"yyyy-MM-dd\\\")\\r\\n| summarize counts = sum(todouble(data)) by Date, keyword = tostring(label)\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Top 10 ASNs for \\\"{IndicatorValue}\\\" and Its Peers\",\"noDataMessage\":\"No Asns found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"xAxis\":\"Date\",\"yAxis\":[\"counts\"],\"group\":\"keyword\",\"showLegend\":true,\"xSettings\":{\"label\":\"Date\"},\"ySettings\":{\"numberFormatSettings\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}},\"min\":0,\"max\":100,\"label\":\"% of Traffic\"}}},\"conditionalVisibility\":{\"parameterName\":\"subpanel\",\"comparison\":\"isEqualTo\",\"value\":\"asns\"},\"name\":\"query - 12\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, Datasets: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutTopCountryCodesByIP\\r\\n| where IP == \\\"{IndicatorValue}\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| mv-expand todynamic(Datasets)\\r\\n| parse-where tostring(Datasets) with * '\\\"label\\\":\\\"' label '\\\",\\\"tag_id\\\":' tag_id ',\\\"data\\\":' data ',\\\"country\\\":' Country ',\\\"css_color\\\":\\\"' css_color '\\\",\\\"dates\\\":' Dates '}'\\r\\n| project data, label, Dates, IP, Country\\r\\n| mv-expand todynamic(data), todynamic(Dates)\\r\\n| extend Date = format_datetime( todatetime(Dates), \\\"yyyy-MM-dd\\\")\\r\\n| summarize counts = sum(todouble(data)) by Date, keyword = tostring(Country)\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Top 10 Countries for \\\"{IndicatorValue}\\\" and Its Peers\",\"noDataMessage\":\"No Countries found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"xAxis\":\"Date\",\"yAxis\":[\"counts\"],\"group\":\"keyword\",\"createOtherGroup\":0,\"showLegend\":true,\"xSettings\":{\"label\":\"Date\"},\"ySettings\":{\"numberFormatSettings\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}},\"min\":0,\"max\":100,\"label\":\"% of Traffic\"}}},\"conditionalVisibility\":{\"parameterName\":\"subpanel\",\"comparison\":\"isEqualTo\",\"value\":\"countries\"},\"name\":\"query - 13\"}]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"summary\"},\"name\":\"group - 4\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, Modified: string, Asn: real, Cidr: string, ['As Name']: string, ['Bgp Asn']: real, ['Bgp Asn Name']: string, ['Net Name']: string, CC: string, Description: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutWhois\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| project Modified = coalesce(Modified, \\\"-\\\"), ASN = Asn, CIDR = coalesce(Cidr, \\\"-\\\"), ['AS Name'] = coalesce(['As Name'], \\\"-\\\"), ['BGP ASN'] = ['Bgp Asn'], ['BGP AS Name'] = coalesce(['Bgp Asn Name'], \\\"-\\\"), ['Net Name'] = coalesce(['Net Name'], \\\"-\\\"), CC = coalesce(CC, \\\"-\\\"), Description = coalesce(Description, \\\"-\\\")\",\"size\":3,\"showAnalytics\":true,\"title\":\"General\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 0\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, ['Admin Contact Id']: string, ['Admin Contact Role']: string, ['Admin Contact Email']: string, ['Admin Contact Phone']: string, ['Admin Contact Country']: string, ['Admin Contact Address']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutWhois\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| project ['Admin Cotact ID'] = coalesce(['Admin Contact Id'], \\\"-\\\"),\\r\\n    ['Admin Contact Role'] = coalesce(['Admin Contact Role'], \\\"-\\\"),\\r\\n    ['Admin Contact Email'] = coalesce(['Admin Contact Email'], \\\"-\\\"),\\r\\n    ['Admin Contact Phone'] = coalesce(['Admin Contact Phone'], \\\"-\\\"),\\r\\n    ['Admin Contact Country'] = coalesce(['Admin Contact Country'], \\\"-\\\"),\\r\\n    ['Admin Contact Address'] = coalesce(['Admin Contact Address'], \\\"-\\\")\",\"size\":3,\"showAnalytics\":true,\"title\":\"Admin\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 1\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, ['Tech Contact Id']: string, ['Tech Contact Role']: string, ['Tech Contact Email']: string, ['Tech Contact Phone']: string, ['Tech Contact Country']: string, ['Tech Contact Address']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutWhois\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| project ['Tech Contact ID'] = coalesce(['Tech Contact Id'], \\\"-\\\"),\\r\\n    ['Tech Contact Role'] = coalesce(['Tech Contact Role'], \\\"-\\\"),\\r\\n    ['Tech Contact Email'] = coalesce(['Tech Contact Email'], \\\"-\\\"),\\r\\n    ['Tech Contact Phone'] = coalesce(['Tech Contact Phone'], \\\"-\\\"),\\r\\n    ['Tech Contact Country'] = coalesce(['Tech Contact Country'], \\\"-\\\"),\\r\\n    ['Tech Contact Address'] = coalesce(['Tech Contact Address'], \\\"-\\\")\",\"size\":3,\"showAnalytics\":true,\"title\":\"Tech\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, ['Org Id']: string, ['Org Name']: string, ['Org Email']: string, ['Org Phone']: string, ['Org Country']: string, ['Org Address']: string, ['Mnt By Email']: string, ['Mnt Router Email']: string) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutWhois\\r\\n| where IP == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by IP\\r\\n| project ['Organization ID'] = coalesce(['Org Id'], \\\"-\\\"),\\r\\n    ['Organization Name'] = coalesce(['Org Name'], \\\"-\\\"),\\r\\n    ['Organization Email'] = coalesce(['Org Email'], \\\"-\\\"),\\r\\n    ['Organization Phone'] = coalesce(['Org Phone'], \\\"-\\\"),\\r\\n    ['Organization Country'] = coalesce(['Org Country'], \\\"-\\\"),\\r\\n    ['Organization Address'] = coalesce(['Org Address'], \\\"-\\\"),\\r\\n    ['Maintained by Email'] = coalesce(['Mnt By Email'], \\\"-\\\"),\\r\\n    ['Maintained by Router Email'] = coalesce(['Mnt Router Email'], \\\"-\\\")\",\"size\":3,\"showAnalytics\":true,\"title\":\"Organization\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"whois\"},\"name\":\"group - 2\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"IndicatorType\",\"comparison\":\"isEqualTo\",\"value\":\"IP\"},{\"parameterName\":\"status\",\"comparison\":\"isEqualTo\",\"value\":\"Click here to populate data.\"}],\"name\":\"group - 5\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table = datatable(TimeGenerated: datetime, IP: string, Domain: string, ['As Info']: string, ['Country Codes']: string, ['Comms Total']: real) [];\\r\\nunion isfuzzy=true dummy_table,\\r\\nCymruScoutDomainData\\r\\n| where Domain == '{IndicatorValue}'\\r\\n| summarize arg_max(TimeGenerated, *) by Domain, IP\\r\\n| mv-expand todynamic(['As Info'])\\r\\n| extend CountryCode = todynamic(['Country Codes'])\\r\\n| project IP, ['Country Codes']=CountryCode[0], ['AS Name']=['As Info'].as_name, ['Events Communication']=['Comms Total']\\r\\n| sort by tostring(IP) asc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Domain Details for: \\\"{IndicatorValue}\\\"\",\"noDataMessage\":\"No Domain Details found\",\"timeContext\":{\"durationMs\":1800000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 0\",\"styleSettings\":{\"showBorder\":true}}]},\"conditionalVisibilities\":[{\"parameterName\":\"IndicatorType\",\"comparison\":\"isEqualTo\",\"value\":\"Domain\"},{\"parameterName\":\"status\",\"comparison\":\"isEqualTo\",\"value\":\"Click here to populate data.\"}],\"name\":\"group - 4\"},{\"type\":1,\"content\":{\"json\":\"📝***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 7\"}]},\"conditionalVisibility\":{\"parameterName\":\"dashboard\",\"comparison\":\"isEqualTo\",\"value\":\"LiveInvestigation\"},\"name\":\"group - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Account Usage\\r\\n---\"},\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let dummy_table=datatable(['Query Limit']: real, ['Used Queries']: real, ['Remaining Queries']: real, ['Used Queries (%)']: real, ['Foundation Query Limit']: real, ['Used Foundation Queries']: real, ['Remaining Foundation Queries']: real, ['Used Foundation Queries (%)']: real)[];\\r\\nunion isfuzzy=true\\r\\ndummy_table,\\r\\nCymruScoutAccountUsage\\r\\n| project ['Query Limit'], ['Used Queries'], ['Remaining Queries'], ['Used Queries (%)'], ['Foundation Query Limit'], ['Used Foundation Queries'], ['Remaining Foundation Queries'], ['Used Foundation Queries (%)']\",\"size\":3,\"showAnalytics\":true,\"title\":\"Account Usage Details\",\"noDataMessage\":\"No data found.\",\"timeContext\":{\"durationMs\":2592000000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Used Queries (%)\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"-1\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"50\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"90\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"orange\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Used Foundation Queries (%)\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"-1\",\"representation\":\"gray\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"50\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"90\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"orange\",\"text\":\"{0}{1}\"}]}}],\"rowLimit\":10000}},\"name\":\"query - 0\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 2\"}]},\"conditionalVisibility\":{\"parameterName\":\"dashboard\",\"comparison\":\"isEqualTo\",\"value\":\"AccountUsage\"},\"name\":\"group - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"This tab depends on the **ASIM Parsers** and **ThreatIntelligenceIndicators**.</br>\\r\\nPlease configure ASIM Parsers in the workspace and create/upload some indicators in ThreatIntelligence to visualize data in this tab.\\r\\n\",\"style\":\"info\"},\"name\":\"text - 10\"},{\"type\":1,\"content\":{\"json\":\"## Correlation Overview\\r\\n---\"},\"name\":\"text - 1\"},{\"type\":1,\"content\":{\"json\":\"## Steps to perform Correlation using this workbook\\r\\n- This workbook is intended to help perform Correlation of Indicators (**Indicator Type:** IP or Domain).\\r\\n- Select **Time Range** for which you want to perform correlation of other sources data with Team Cymru Scout data.\\r\\n- Select **Indicator Type** from Indicator Type filter. Default All is selected.\\r\\n- Select **Search Matching Algorithm** based on which you want to perform correlation of other sources data with Team Cymru Scout Data.\\r\\n\\t- **ThreatIntelligenceIndicator**: Threat indicators are data that associate observed artifacts such as URLs, file hashes, or IP addresses with known threat activity such as phishing, botnets, or malware. \\r\\n\\t- **ASIM Parsers**: The Advanced Security Information Model (ASIM) provides a seamless experience for handling various sources in uniform, normalized views. ASIM allows for predictable entities correlation across normalized tables\\r\\n- If you select **ASIM Parsers** in \\\"Search Matching Algorithm\\\", filter for ASIM Parsers will be visible.\\r\\n\\t- Select ASIM Parsers schema from **ASIM Parsers** filter. Default All is selected.\\r\\n- Based on selected filters, correlated data will be visible in below panles.\\r\\n</br>\\r\\n</br>\\r\\n**Note** : </br>\\r\\n\\t* If data is not populated, \\r\\n\\t\\t- Check ASIM Parsers schema is available in workspace and does not have any error. \\r\\n\\t\\t- Check ThreatIntelligenceIndicator table has indicators available from other sources.\",\"style\":\"upsell\"},\"name\":\"text - 9\"},{\"type\":1,\"content\":{\"json\":\"## Steps to configure ASIM Parsers in workspace\\r\\n- Go to **[ASIM](https://github.com/Azure/Azure-Sentinel/tree/master/ASIM)** folder in Azure-Sentinel Repository.\\r\\n- Select Schema you want to add from list of available schema in README.md. e.g. *NetworkSession*\\r\\n- Click on the **Deploy to Azure** button besides NetworkSession Schema.\\r\\n- You will be redirected to the custom deployment page where you need to provide information for **Resource group**, **Region**, **Workspace name** and **Workspace Region**.\\r\\n- Click on the **Review+Create** button. \\r\\n- Review the next dialog from Azure, and then click on **Create** to install the ASIM parser.\\r\\n- Follow the same steps to deploy the ASIM Parsers for below schemas:\\r\\n\\t- *WebSession*\\r\\n\\t- *DNS*\\r\\n\\t- *DHCP*\\r\\n\\t- *Audit*\\r\\n\\t- *Authentication*\\r\\n</br>\",\"style\":\"upsell\"},\"name\":\"text - 11\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"7901b4ce-ad76-418d-8ff2-4d79a07f08d7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":86400000}},{\"id\":\"8d03e2ce-4f87-4475-ab03-7ec851147151\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TypeIndicator\",\"label\":\"Indicator Type\",\"type\":2,\"isRequired\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"jsonData\":\"[\\\"IP\\\",\\r\\n\\\"Domain\\\"]\",\"timeContext\":{\"durationMs\":86400000},\"defaultValue\":\"value::all\"},{\"id\":\"cf53799f-d9a6-41ab-94d3-06118f237555\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"SearchMatchingAlgorithm\",\"label\":\"Search Matching Algorithm\",\"type\":2,\"isRequired\":true,\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    \\\"ASIM Parsers\\\",\\r\\n    \\\"ThreatIntelligenceIndicator\\\"\\r\\n]\",\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9f6f860e-9eca-4af4-a638-2cf912745e3f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"ASIMParsers\",\"label\":\"ASIM Parsers\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"jsonData\":\"[\\r\\n    \\\"NetworkSession\\\",\\r\\n    \\\"WebSession\\\",\\r\\n    \\\"DNS\\\",\\r\\n    \\\"DHCP\\\",\\r\\n    \\\"Authentication\\\",\\r\\n    \\\"Audit\\\"\\r\\n]\",\"timeContext\":{\"durationMs\":86400000},\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"SearchMatchingAlgorithm\",\"comparison\":\"isEqualTo\",\"value\":\"ASIM Parsers\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let asimdata = iff('{SearchMatchingAlgorithm}' == \\\"ASIM Parsers\\\", dynamic([{ASIMParsers}]), dynamic([]));\\r\\nlet dummy_table = datatable(Indicator: string)[];\\r\\nunion isfuzzy=true\\r\\ndummy_table,\\r\\nCymruScoutCorrelate(indicatorType='{TypeIndicator}',\\r\\n    searchAlgo='{SearchMatchingAlgorithm}',\\r\\n    asimParsers=asimdata)\\r\\n    | summarize Count = dcount(Indicator)\",\"size\":1,\"showAnalytics\":true,\"title\":\"Total Matched Indicators\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"Count\",\"exportParameterName\":\"Count\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"rightContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true,\"size\":\"auto\"}},\"customWidth\":\"50\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let asimdata = iff('{SearchMatchingAlgorithm}' == \\\"ASIM Parsers\\\", dynamic([{ASIMParsers}]), dynamic([]));\\r\\nlet dummy_table = datatable(Indicator: string, IndicatorType: string)[];\\r\\nunion isfuzzy=true\\r\\ndummy_table,\\r\\nCymruScoutCorrelate(indicatorType='{TypeIndicator}',\\r\\n    searchAlgo='{SearchMatchingAlgorithm}',\\r\\n    asimParsers=asimdata)\\r\\n| summarize Count=dcount(Indicator) by IndicatorType\",\"size\":1,\"showAnalytics\":true,\"title\":\"Matched Indicators by Type\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"series\",\"exportParameterName\":\"Type\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"name\":\"query - 3\",\"styleSettings\":{\"maxWidth\":\"50%\"}},{\"type\":1,\"content\":{\"json\":\"#### Click on the count in panel **Total Matched Indicators** above to view more information.\",\"style\":\"info\"},\"customWidth\":\"50\",\"name\":\"text - 13\"},{\"type\":1,\"content\":{\"json\":\"#### Click on the section in panel **Matched Indicators by Type** above to view more information.\",\"style\":\"info\"},\"customWidth\":\"50\",\"name\":\"text - 14\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let asimdata = iff('{SearchMatchingAlgorithm}' == \\\"ASIM Parsers\\\", dynamic([{ASIMParsers}]), dynamic([]));\\r\\nlet dummy_table = datatable(Indicator: string, TimeGenerated: datetime, IndicatorType: string, EventVendor: string, EventProduct: string, EventSchema: string)[];\\r\\nunion isfuzzy=true\\r\\ndummy_table,\\r\\nCymruScoutCorrelate(indicatorType='{TypeIndicator}',\\r\\n    searchAlgo='{SearchMatchingAlgorithm}',\\r\\n    asimParsers=asimdata)\\r\\n| extend Source = iff('{SearchMatchingAlgorithm}' == \\\"ASIM Parsers\\\", EventSchema, \\\"ThreatIntelligenceIndicator\\\")\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| project Indicator, TimeGenerated, IndicatorType, Source\",\"size\":3,\"showAnalytics\":true,\"title\":\"Details for Total Matched Indicators\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"Count\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let asimdata = iff('{SearchMatchingAlgorithm}' == \\\"ASIM Parsers\\\", dynamic([{ASIMParsers}]), dynamic([]));\\r\\nlet dummy_table = datatable(Indicator: string, IndicatorType: string, TimeGenerated: datetime, EventSchema: string)[];\\r\\nunion isfuzzy=true\\r\\ndummy_table,\\r\\nCymruScoutCorrelate(indicatorType='{TypeIndicator}',\\r\\n    searchAlgo='{SearchMatchingAlgorithm}',\\r\\n    asimParsers=asimdata)\\r\\n| extend IndicatorType = tostring(IndicatorType)\\r\\n| where IndicatorType == '{Type}'\\r\\n| extend Source = iff('{SearchMatchingAlgorithm}' == \\\"ASIM Parsers\\\", EventSchema, \\\"ThreatIntelligenceIndicator\\\")\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| project Indicator, TimeGenerated, IndicatorType, Source\",\"size\":3,\"showAnalytics\":true,\"title\":\"Details for Matched Indicators by Type\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"Type\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let asimdata = iff('{SearchMatchingAlgorithm}' == \\\"ASIM Parsers\\\", dynamic([{ASIMParsers}]), dynamic([]));\\r\\nlet dummy_table = datatable(Indicator: string, IndicatorType: string, TimeGenerated: datetime, EventSchema: string)[];\\r\\nlet correlateddata = union isfuzzy=true\\r\\ndummy_table,\\r\\nCymruScoutCorrelate(indicatorType='{TypeIndicator}',\\r\\n    searchAlgo='{SearchMatchingAlgorithm}',\\r\\n    asimParsers=asimdata);\\r\\nlet indicatorcount = correlateddata\\r\\n    | summarize Count=count() by Indicator;\\r\\ncorrelateddata\\r\\n| extend Source = iff('{SearchMatchingAlgorithm}' == \\\"ASIM Parsers\\\", EventSchema, \\\"ThreatIntelligenceIndicator\\\")\\r\\n| summarize arg_max(TimeGenerated, *) by Indicator\\r\\n| join kind=inner(indicatorcount) on Indicator\\r\\n| project Indicator, IndicatorType, Source, TimeGenerated, Count\",\"size\":3,\"showAnalytics\":true,\"title\":\"Matched Indicators Details\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"exportFieldName\":\"Indicator\",\"exportParameterName\":\"Indicator\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"#### Click on the cell in grid panel **Matched Indicators Details** above to view more information related to Indicator from Other Source.\",\"style\":\"info\"},\"name\":\"text - 15\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let asimdata = iff('{SearchMatchingAlgorithm}' == \\\"ASIM Parsers\\\", dynamic([{ASIMParsers}]), dynamic([]));\\r\\nlet dummy_table = datatable(Indicator: string, IndicatorType: string, TimeGenerated: datetime, EventSchema: string)[];\\r\\nunion isfuzzy=true\\r\\ndummy_table,\\r\\nCymruScoutCorrelate(indicatorType='{TypeIndicator}',\\r\\n    searchAlgo='{SearchMatchingAlgorithm}',\\r\\n    asimParsers=asimdata)\\r\\n| where Indicator == '{Indicator}'\\r\\n| extend Source = iff('{SearchMatchingAlgorithm}' == \\\"ASIM Parsers\\\", EventSchema, \\\"ThreatIntelligenceIndicator\\\")\\r\\n| project-reorder Indicator, IndicatorType, TimeGenerated, Source\",\"size\":3,\"showAnalytics\":true,\"title\":\"Matched Indicator Details from Other Source\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"TimeRange\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"Indicator\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 7\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 12\"}]},\"conditionalVisibility\":{\"parameterName\":\"dashboard\",\"comparison\":\"isEqualTo\",\"value\":\"CorrelationOverview\"},\"name\":\"group - 4\"}],\"fromTemplateId\":\"sentinel-TeamCymruScoutWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=TeamCymruScout; logoFileName=; description=This Workbook provides immediate insight into the data coming from Team Cymru Scout.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Team Cymru Scout; templateRelativePath=TeamCymruScout.json; subtitle=; provider=Team Cymru}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Team Cymru Scout",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "Cymru_Scout_Domain_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_Foundation_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_Details_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_Communications_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_PDNS_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_Fingerprints_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_OpenPorts_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_x509_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_Summary_Details_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_Summary_PDNS_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_Summary_Certs_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Cymru_Scout_Account_Usage_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Domain_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Identity_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Proto_By_IP_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Summary_Details_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Summary_Details_Top_Certs_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Summary_Details_Top_Fingerprints_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Summary_Details_Top_Open_Ports_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Summary_Details_Top_Pdns_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Top_Asns_By_IP_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Top_Country_Codes_By_IP_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Top_Services_By_IP_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Top_Tags_By_IP_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Whois_Data_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "TeamCymruScout",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist1-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "TeamCymruScoutDomainData",
        "watchlistAlias": "TeamCymruScoutDomainData",
        "source": "domain_indicator.csv",
        "description": "Watchlist contains data of domain indicators to get details from Team Cymru Scout.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "domain",
        "rawContent": "domain\r\nabc.com"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist2-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "TeamCymruScoutIPData",
        "watchlistAlias": "TeamCymruScoutIPData",
        "source": "ip_indicator.csv",
        "description": "Watchlist contains data of ip indicators to get details from Team Cymru Scout.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "ip",
        "rawContent": "ip\r\n1.2.3.4"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "TeamCymruScoutLiveInvestigation Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "TeamCymruScoutLiveInvestigation",
              "minLength": 1,
              "type": "string",
              "metadata": {
                "description": "Please do not change the playbook name, else you will not get any data for the live investigation dashboard."
              }
            },
            "UserName": {
              "minLength": 1,
              "type": "string",
              "metadata": {
                "description": "Enter username of your CymruScout account."
              }
            },
            "Password": {
              "minLength": 1,
              "type": "securestring",
              "metadata": {
                "description": "Enter password of your CymruScout account."
              }
            },
            "BaseURL": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Enter Base URL of your CymruScout account.(e.g. https://scout.cymru.com)"
              }
            },
            "CreateIncidentAndNotifyPlaybookName": {
              "defaultValue": "TeamCymruScoutCreateIncidentAndNotify",
              "minLength": 1,
              "type": "string",
              "metadata": {
                "description": "Enter a playbook name that you have given while the deployment of playbook TeamCymruScoutCreateIncidentAndNotify(e.g. TeamCymruScoutCreateIncidentAndNotify)"
              }
            }
          },
          "variables": {
            "AzureloganalyticsdatacollectorConnectionName": "[[concat('Azureloganalyticsdatacollector-', parameters('PlaybookName'))]",
            "RegexmatchingipConnectionName": "[[concat('Regexmatchingip-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azureloganalyticsdatacollector')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Regexmatchingip')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "password": {
                      "defaultValue": "[[trim(parameters('Password'))]",
                      "type": "SecureString"
                    },
                    "username": {
                      "defaultValue": "[[trim(parameters('UserName'))]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "manual": {
                      "type": "Request",
                      "kind": "Http",
                      "inputs": {
                        "schema": {
                          "properties": {
                            "indicator_type": {
                              "type": "string"
                            },
                            "indicator_value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "actions": {
                    "Condition_To_Verify_Indicator_Type_Is_IP": {
                      "actions": {
                        "Condition_To_Verify_IP_Indicator_Details_Data_Fetched_Successfully": {
                          "actions": {
                            "Compose_Identity_Object_To_Add_IP_Address_Property": {
                              "runAfter": {
                                "Condition_To_Ingest_Top_Fingerprints_Data_If_It_Is_Not_Null": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Compose",
                              "inputs": "@setProperty(body('Parse_JSON_For_IP_Indicator_Details_Data')?['identity'], 'ip', body('Parse_JSON_For_IP_Indicator_Details_Data')?['ip'])"
                            },
                            "Compose_Whois_Object_To_Add_IP_Address_Property": {
                              "runAfter": {
                                "Send_Identity_Data_To_Log_Analytics_Table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Compose",
                              "inputs": "@setProperty(body('Parse_JSON_For_IP_Indicator_Details_Data')?['whois'], 'ip', body('Parse_JSON_For_IP_Indicator_Details_Data')?['ip'])"
                            },
                            "Condition_To_Execute_Sub_Playbook_For_Malicious_IP": {
                              "actions": {
                                "Condition_To_Perform_Next_Actions_If_Sub_Playbook_Executes_Successfully": {
                                  "runAfter": {
                                    "CreateIncidentAndMailForMaliciousIP": [
                                      "Succeeded",
                                      "TimedOut",
                                      "Failed"
                                    ]
                                  },
                                  "else": {
                                    "actions": {
                                      "Terminate_Due_To_Failure_While_Executing_Sub_Playbook_For_Malicious_IP": {
                                        "type": "Terminate",
                                        "inputs": {
                                          "runError": {
                                            "code": "400",
                                            "message": "@{body('CreateIncidentAndMailForMaliciousIP')}"
                                          },
                                          "runStatus": "Failed"
                                        }
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "equals": [
                                          "@body('CreateIncidentAndMailForMaliciousIP')?['status']",
                                          "success"
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "CreateIncidentAndMailForMaliciousIP": {
                                  "type": "Workflow",
                                  "inputs": {
                                    "body": {
                                      "country_code": "@{body('parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['geo_ip_cc']}",
                                      "indicator_value": "@variables('indicator_value')",
                                      "insights": "@body('parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['insights']?['insights']",
                                      "open_ports": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['open_ports']?['top_open_ports']",
                                      "pdns": "@body('parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['pdns']?['top_pdns']"
                                    },
                                    "host": {
                                      "triggerName": "manual",
                                      "workflow": {
                                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/',parameters('CreateIncidentAndNotifyPlaybookName'))]"
                                      }
                                    },
                                    "retryPolicy": {
                                      "type": "none"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Condition_To_Ingest_Proto_By_IP_Sections_Data_If_It_is_Fetched_Successfully": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed"
                                ],
                                "Condition_To_Ingest_Top_Asns_By_IP_Sections_Data_If_It_is_Fetched_Successfully": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed"
                                ],
                                "Condition_To_Ingest_Top_Country_Codes_By_IP_Data_If_It_is_Fetched_Successfully": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed"
                                ],
                                "Condition_To_Ingest_Top_Services_By_IP_Data_If_It_is_Fetched_Successfully": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed"
                                ],
                                "Condition_To_Ingest_Top_Tags_By_IP_Sections_Data_If_It_is_Fetched_Successfully": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@toLower(body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['insights']?['overall_rating'])",
                                      "malicious"
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Condition_To_Ingest_Proto_By_IP_Sections_Data_If_It_is_Fetched_Successfully": {
                              "actions": {
                                "Parse_JSON_For_Proto_By_IP_Sections_Data": {
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('HTTP_Request_To_Fetch_Proto_By_IP_Sections_Data')",
                                    "schema": {
                                      "properties": {
                                        "end_date": {
                                          "type": "string"
                                        },
                                        "ip": {
                                          "type": "string"
                                        },
                                        "proto_by_ip": {
                                          "properties": {
                                            "data": {
                                              "properties": {
                                                "dates": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "proto_by_date": {
                                                  "items": {
                                                    "properties": {
                                                      "data": {
                                                        "items": {
                                                          "properties": {
                                                            "count": {
                                                              "type": "integer"
                                                            },
                                                            "date": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "count",
                                                            "date"
                                                          ],
                                                          "type": "object"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "keyword": {
                                                        "type": "string"
                                                      },
                                                      "proto": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "required": [
                                                      "proto",
                                                      "keyword",
                                                      "data"
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "type": "array"
                                                },
                                                "protocols": {
                                                  "items": {
                                                    "type": "integer"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "end_date": {
                                              "type": "string"
                                            },
                                            "ip": {
                                              "type": "string"
                                            },
                                            "request_id": {
                                              "type": "string"
                                            },
                                            "size": {
                                              "type": "integer"
                                            },
                                            "start_date": {
                                              "type": "string"
                                            },
                                            "total": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "request_id": {
                                          "type": "string"
                                        },
                                        "sections": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "size": {
                                          "type": "integer"
                                        },
                                        "start_date": {
                                          "type": "string"
                                        },
                                        "usage": {
                                          "properties": {
                                            "foundation_api_usage": {
                                              "properties": {
                                                "query_limit": {
                                                  "type": "integer"
                                                },
                                                "remaining_queries": {
                                                  "type": "integer"
                                                },
                                                "used_queries": {
                                                  "type": "integer"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "query_limit": {
                                              "type": "integer"
                                            },
                                            "remaining_queries": {
                                              "type": "integer"
                                            },
                                            "used_queries": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Send_Proto_By_IP_Sections_Data_To_Log_Analytics_Table": {
                                  "runAfter": {
                                    "Parse_JSON_For_Proto_By_IP_Sections_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{body('Parse_JSON_For_Proto_By_IP_Sections_Data')?['proto_by_ip']}",
                                    "headers": {
                                      "Log-Type": "@variables('proto_by_ip_table_name')"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                }
                              },
                              "runAfter": {
                                "HTTP_Request_To_Fetch_Proto_By_IP_Sections_Data": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Terminate_Due_To_Failure_While_Fetching_Proto_By_IP_Sections_Data": {
                                    "type": "Terminate",
                                    "inputs": {
                                      "runError": {
                                        "code": "@{outputs('HTTP_Request_To_Fetch_Proto_By_IP_Sections_Data')['statusCode']}",
                                        "message": "@{body('HTTP_Request_To_Fetch_Proto_By_IP_Sections_Data')}"
                                      },
                                      "runStatus": "Failed"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@outputs('HTTP_Request_To_Fetch_Proto_By_IP_Sections_Data')['statusCode']",
                                      200
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Condition_To_Ingest_Top_Asns_By_IP_Sections_Data_If_It_is_Fetched_Successfully": {
                              "actions": {
                                "For_Each_Dataset_Of_Asns": {
                                  "foreach": "@body('Parse_JSON_For_Top_Asns_By_IP_Sections_Data')?['top_asns_by_ip']?['data']?['datasets']",
                                  "actions": {
                                    "Append_Dataset_Object_To_Top_Asns_Data_Array": {
                                      "runAfter": {
                                        "Compose_Each_Asns_Dataset_Object_To_Add_Dates_Array_In_It": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "top_asns_data",
                                        "value": "@outputs('Compose_Each_Asns_Dataset_Object_To_Add_Dates_Array_In_It')"
                                      }
                                    },
                                    "Compose_Each_Asns_Dataset_Object_To_Add_Dates_Array_In_It": {
                                      "type": "Compose",
                                      "inputs": "@setProperty(items('For_Each_Dataset_Of_Asns'), 'dates', body('Parse_JSON_For_Top_Asns_By_IP_Sections_Data')?['top_asns_by_ip']?['data']?['dates'])"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_JSON_For_Top_Asns_By_IP_Sections_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach",
                                  "runtimeConfiguration": {
                                    "concurrency": {
                                      "repetitions": 1
                                    }
                                  }
                                },
                                "Parse_JSON_For_Top_Asns_By_IP_Sections_Data": {
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('HTTP_Request_To_Fetch_Top_Asns_By_IP_Sections_Data')",
                                    "schema": {
                                      "properties": {
                                        "end_date": {
                                          "type": "string"
                                        },
                                        "ip": {
                                          "type": "string"
                                        },
                                        "request_id": {
                                          "type": "string"
                                        },
                                        "sections": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "size": {
                                          "type": "integer"
                                        },
                                        "start_date": {
                                          "type": "string"
                                        },
                                        "top_asns_by_ip": {
                                          "properties": {
                                            "data": {
                                              "properties": {
                                                "datasets": {
                                                  "items": {
                                                    "properties": {
                                                      "css_color": {
                                                        "type": "string"
                                                      },
                                                      "data": {
                                                        "type": "array"
                                                      },
                                                      "label": {
                                                        "type": "string"
                                                      },
                                                      "tag_id": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "required": [
                                                      "label",
                                                      "tag_id",
                                                      "data",
                                                      "css_color"
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "type": "array"
                                                },
                                                "dates": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "end_date": {
                                              "type": "string"
                                            },
                                            "ip": {
                                              "type": "string"
                                            },
                                            "request_id": {
                                              "type": "string"
                                            },
                                            "size": {
                                              "type": "integer"
                                            },
                                            "start_date": {
                                              "type": "string"
                                            },
                                            "total": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "usage": {
                                          "properties": {
                                            "foundation_api_usage": {
                                              "properties": {
                                                "query_limit": {
                                                  "type": "integer"
                                                },
                                                "remaining_queries": {
                                                  "type": "integer"
                                                },
                                                "used_queries": {
                                                  "type": "integer"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "query_limit": {
                                              "type": "integer"
                                            },
                                            "remaining_queries": {
                                              "type": "integer"
                                            },
                                            "used_queries": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Send_Top_Asns_By_IP_Sections_Data_To_Log_Analytics_Table": {
                                  "runAfter": {
                                    "Set_Top_Asns_Data_Object": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{variables('top_asns_data_obj')}",
                                    "headers": {
                                      "Log-Type": "@variables('top_asns_by_ip_table_name')"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                },
                                "Set_Top_Asns_Data_Object": {
                                  "runAfter": {
                                    "For_Each_Dataset_Of_Asns": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "top_asns_data_obj",
                                    "value": {
                                      "data": {
                                        "datasets": "@variables('top_asns_data')",
                                        "dates": "@body('Parse_JSON_For_Top_Asns_By_IP_Sections_Data')?['top_asns_by_ip']?['data']?['dates']"
                                      },
                                      "end_date": "@body('Parse_JSON_For_Top_Asns_By_IP_Sections_Data')?['top_asns_by_ip']?['end_date']",
                                      "ip": "@body('Parse_JSON_For_Top_Asns_By_IP_Sections_Data')?['top_asns_by_ip']?['ip']",
                                      "request_id": "@body('Parse_JSON_For_Top_Asns_By_IP_Sections_Data')?['top_asns_by_ip']?['request_id']",
                                      "size": "@body('Parse_JSON_For_Top_Asns_By_IP_Sections_Data')?['top_asns_by_ip']?['size']",
                                      "start_date": "@body('Parse_JSON_For_Top_Asns_By_IP_Sections_Data')?['top_asns_by_ip']?['start_date']",
                                      "total": "@body('Parse_JSON_For_Top_Asns_By_IP_Sections_Data')?['top_asns_by_ip']?['total']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "HTTP_Request_To_Fetch_Top_Asns_By_IP_Sections_Data": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Terminate_Due_To_Failure_While_Fetching_Top_Asns_By_IP_Sections_Data": {
                                    "type": "Terminate",
                                    "inputs": {
                                      "runError": {
                                        "code": "@{outputs('HTTP_Request_To_Fetch_Top_Asns_By_IP_Sections_Data')['statusCode']}",
                                        "message": "@{body('HTTP_Request_To_Fetch_Top_Asns_By_IP_Sections_Data')}"
                                      },
                                      "runStatus": "Failed"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@outputs('HTTP_Request_To_Fetch_Top_Asns_By_IP_Sections_Data')['statusCode']",
                                      200
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Condition_To_Ingest_Top_Certs_Data_If_It_Is_Not_Null": {
                              "actions": {
                                "Compose_Object_From_Top_Certs_Data": {
                                  "runAfter": {
                                    "For_Each_Top_Certs": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Compose",
                                  "inputs": "@variables('certs_data')"
                                },
                                "For_Each_Top_Certs": {
                                  "foreach": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['certs']?['top_certs']",
                                  "actions": {
                                    "Append_IP_Address_To_Top_Certs_Data": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "certs_data",
                                        "value": "@setProperty(items('For_Each_Top_Certs'), 'ip', body('Parse_JSON_For_IP_Indicator_Details_Data')?['ip'])"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                },
                                "Send_Top_Certs_Data_To_Log_Analytics_Table": {
                                  "runAfter": {
                                    "Compose_Object_From_Top_Certs_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{outputs('Compose_Object_From_Top_Certs_Data')}",
                                    "headers": {
                                      "Log-Type": "@variables('certs_table_name')"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                }
                              },
                              "runAfter": {
                                "Condition_To_Ingest_Top_Open_Ports_Data_If_It_Is_Not_Null": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "not": {
                                      "equals": [
                                        "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['certs']?['top_certs']",
                                        "@null"
                                      ]
                                    }
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Condition_To_Ingest_Top_Country_Codes_By_IP_Data_If_It_is_Fetched_Successfully": {
                              "actions": {
                                "For_Each_Dataset_Of_Country_Codes": {
                                  "foreach": "@body('Parse_JSON_For_Top_Country_Codes_Sections_Data')?['top_country_codes_by_ip']?['data']?['datasets']",
                                  "actions": {
                                    "Append_Dataset_Object_To_Top_Country_Codes_Data_Array": {
                                      "runAfter": {
                                        "Compose_Each_Country_Codes_Dataset_Object_To_Add_Dates_Array_In_It": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "top_country_codes_data",
                                        "value": "@outputs('Compose_Each_Country_Codes_Dataset_Object_To_Add_Dates_Array_In_It')"
                                      }
                                    },
                                    "Compose_Each_Country_Codes_Dataset_Object_To_Add_Dates_Array_In_It": {
                                      "type": "Compose",
                                      "inputs": "@setProperty(items('For_Each_Dataset_Of_Country_Codes'), 'dates', body('Parse_JSON_For_Top_Country_Codes_Sections_Data')?['top_country_codes_by_ip']?['data']?['dates'])"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_JSON_For_Top_Country_Codes_Sections_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach",
                                  "runtimeConfiguration": {
                                    "concurrency": {
                                      "repetitions": 1
                                    }
                                  }
                                },
                                "Parse_JSON_For_Top_Country_Codes_Sections_Data": {
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('HTTP_Request_To_Fetch_Top_Country_Codes_By_IP_Sections_Data')",
                                    "schema": {
                                      "properties": {
                                        "end_date": {
                                          "type": "string"
                                        },
                                        "ip": {
                                          "type": "string"
                                        },
                                        "request_id": {
                                          "type": "string"
                                        },
                                        "sections": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "size": {
                                          "type": "integer"
                                        },
                                        "start_date": {
                                          "type": "string"
                                        },
                                        "top_country_codes_by_ip": {
                                          "properties": {
                                            "data": {
                                              "properties": {
                                                "datasets": {
                                                  "items": {
                                                    "properties": {
                                                      "country": {
                                                        "type": "string"
                                                      },
                                                      "css_color": {
                                                        "type": "string"
                                                      },
                                                      "data": {
                                                        "items": {
                                                          "type": "number"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "label": {
                                                        "type": "string"
                                                      },
                                                      "tag_id": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "required": [
                                                      "label",
                                                      "tag_id",
                                                      "data",
                                                      "country",
                                                      "css_color"
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "type": "array"
                                                },
                                                "dates": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "end_date": {
                                              "type": "string"
                                            },
                                            "ip": {
                                              "type": "string"
                                            },
                                            "request_id": {
                                              "type": "string"
                                            },
                                            "size": {
                                              "type": "integer"
                                            },
                                            "start_date": {
                                              "type": "string"
                                            },
                                            "total": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "usage": {
                                          "properties": {
                                            "foundation_api_usage": {
                                              "properties": {
                                                "query_limit": {
                                                  "type": "integer"
                                                },
                                                "remaining_queries": {
                                                  "type": "integer"
                                                },
                                                "used_queries": {
                                                  "type": "integer"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "query_limit": {
                                              "type": "integer"
                                            },
                                            "remaining_queries": {
                                              "type": "integer"
                                            },
                                            "used_queries": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Send_Top_Country_Codes_Sections_Data_To_Log_Analytics_Table_Name": {
                                  "runAfter": {
                                    "Set_Top_Country_Codes_Data_Object": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{variables('top_country_codes_data_obj')}",
                                    "headers": {
                                      "Log-Type": "@variables('top_country_codes_by_ip_table_name')"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                },
                                "Set_Top_Country_Codes_Data_Object": {
                                  "runAfter": {
                                    "For_Each_Dataset_Of_Country_Codes": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "top_country_codes_data_obj",
                                    "value": {
                                      "data": {
                                        "datasets": "@variables('top_country_codes_data')",
                                        "dates": "@body('Parse_JSON_For_Top_Country_Codes_Sections_Data')?['top_country_codes_by_ip']?['data']?['dates']"
                                      },
                                      "end_date": "@body('Parse_JSON_For_Top_Country_Codes_Sections_Data')?['top_country_codes_by_ip']?['end_date']",
                                      "ip": "@body('Parse_JSON_For_Top_Country_Codes_Sections_Data')?['top_country_codes_by_ip']?['ip']",
                                      "request_id": "@body('Parse_JSON_For_Top_Country_Codes_Sections_Data')?['top_country_codes_by_ip']?['request_id']",
                                      "size": "@body('Parse_JSON_For_Top_Country_Codes_Sections_Data')?['top_country_codes_by_ip']?['size']",
                                      "start_date": "@body('Parse_JSON_For_Top_Country_Codes_Sections_Data')?['top_country_codes_by_ip']?['start_date']",
                                      "total": "@body('Parse_JSON_For_Top_Country_Codes_Sections_Data')?['top_country_codes_by_ip']?['total']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "HTTP_Request_To_Fetch_Top_Country_Codes_By_IP_Sections_Data": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Terminate_Due_To_Failure_While_Fetching_Top_Country_Codes_By_IP_Data": {
                                    "type": "Terminate",
                                    "inputs": {
                                      "runError": {
                                        "code": "@{outputs('HTTP_Request_To_Fetch_Top_Country_Codes_By_IP_Sections_Data')['statusCode']}",
                                        "message": "@{body('HTTP_Request_To_Fetch_Top_Country_Codes_By_IP_Sections_Data')}"
                                      },
                                      "runStatus": "Failed"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@outputs('HTTP_Request_To_Fetch_Top_Country_Codes_By_IP_Sections_Data')['statusCode']",
                                      200
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Condition_To_Ingest_Top_Fingerprints_Data_If_It_Is_Not_Null": {
                              "actions": {
                                "Compose_Object_From_Fingerprints_Data": {
                                  "runAfter": {
                                    "For_Each_Fingerprint_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Compose",
                                  "inputs": "@variables('fingerprints_data')"
                                },
                                "For_Each_Fingerprint_Data": {
                                  "foreach": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['fingerprints']?['top_fingerprints']",
                                  "actions": {
                                    "Append_IP_Address_To_Fingerprints_Data": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "fingerprints_data",
                                        "value": "@setProperty(items('For_Each_Fingerprint_Data'), 'ip', body('Parse_JSON_For_IP_Indicator_Details_Data')?['ip'])"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                },
                                "Send_Top_Fingerprints_Data_To_Log_Analytics_Table": {
                                  "runAfter": {
                                    "Compose_Object_From_Fingerprints_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{outputs('Compose_Object_From_Fingerprints_Data')}",
                                    "headers": {
                                      "Log-Type": "@variables('fingerprints_table_name')"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                }
                              },
                              "runAfter": {
                                "Condition_To_Ingest_Top_Certs_Data_If_It_Is_Not_Null": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "not": {
                                      "equals": [
                                        "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['fingerprints']?['top_fingerprints']",
                                        "@null"
                                      ]
                                    }
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Condition_To_Ingest_Top_Open_Ports_Data_If_It_Is_Not_Null": {
                              "actions": {
                                "Compose_An_Object_From_Top_Open_Ports_Data": {
                                  "runAfter": {
                                    "For_Each_Top_Open_Ports_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Compose",
                                  "inputs": "@variables('open_ports_data')"
                                },
                                "For_Each_Top_Open_Ports_Data": {
                                  "foreach": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['open_ports']?['top_open_ports']",
                                  "actions": {
                                    "Append_IP_Address_To_Top_Open_Ports_Data": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "open_ports_data",
                                        "value": "@setProperty(items('For_Each_Top_Open_Ports_Data'), 'ip', body('Parse_JSON_For_IP_Indicator_Details_Data')?['ip'])"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                },
                                "Send_Open_Ports_Section_Data_To_Log_Analytics_Table": {
                                  "runAfter": {
                                    "Compose_An_Object_From_Top_Open_Ports_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{outputs('Compose_An_Object_From_Top_Open_Ports_Data')}",
                                    "headers": {
                                      "Log-Type": "@variables('open_ports_table_name')"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                }
                              },
                              "runAfter": {
                                "Condition_To_Ingest_Top_Pdns_Data_If_It_Is_Not_Null": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "not": {
                                      "equals": [
                                        "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['open_ports']?['top_open_ports']",
                                        "@null"
                                      ]
                                    }
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Condition_To_Ingest_Top_Pdns_Data_If_It_Is_Not_Null": {
                              "actions": {
                                "Compose_An_Object_From_Top_Pdns_Data": {
                                  "runAfter": {
                                    "For_Each_Pdns": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Compose",
                                  "inputs": "@variables('pdns_data')"
                                },
                                "For_Each_Pdns": {
                                  "foreach": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['pdns']?['top_pdns']",
                                  "actions": {
                                    "Append_IP_Address_To_Every_Pdns_Object": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "pdns_data",
                                        "value": "@setProperty(items('For_Each_Pdns'), 'ip', body('Parse_JSON_For_IP_Indicator_Details_Data')?['ip'])"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                },
                                "Send_Top_Pdns_Data_To_Log_Analytics_Table": {
                                  "runAfter": {
                                    "Compose_An_Object_From_Top_Pdns_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{outputs('Compose_An_Object_From_Top_Pdns_Data')}",
                                    "headers": {
                                      "Log-Type": "@variables('pdns_table_name')"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                }
                              },
                              "runAfter": {
                                "Parse_JSON_For_IP_Indicator_Details_Data": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "not": {
                                      "equals": [
                                        "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['pdns']?['top_pdns']",
                                        "@null"
                                      ]
                                    }
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Condition_To_Ingest_Top_Services_By_IP_Data_If_It_is_Fetched_Successfully": {
                              "actions": {
                                "For_Each_Dataset_Of_Services": {
                                  "foreach": "@body('Parse_JSON_For_Top_Services_By_IP_Sections_Data')?['top_services_by_ip']?['data']?['datasets']",
                                  "actions": {
                                    "Append_Dataset_Object_To_Top_Services_Data_Array": {
                                      "runAfter": {
                                        "Compose_Each_Services_Dataset_Object_To_Add_Dates_Array_In_It": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "top_services_data",
                                        "value": "@outputs('Compose_Each_Services_Dataset_Object_To_Add_Dates_Array_In_It')"
                                      }
                                    },
                                    "Compose_Each_Services_Dataset_Object_To_Add_Dates_Array_In_It": {
                                      "type": "Compose",
                                      "inputs": "@setProperty(items('For_Each_Dataset_Of_Services'), 'dates', body('Parse_JSON_For_Top_Services_By_IP_Sections_Data')?['top_services_by_ip']?['data']?['dates'])"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_JSON_For_Top_Services_By_IP_Sections_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach",
                                  "runtimeConfiguration": {
                                    "concurrency": {
                                      "repetitions": 1
                                    }
                                  }
                                },
                                "Parse_JSON_For_Top_Services_By_IP_Sections_Data": {
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('HTTP_Request_To_Fetch_Top_Services_By_IP_Sections_Data')",
                                    "schema": {
                                      "properties": {
                                        "end_date": {
                                          "type": "string"
                                        },
                                        "ip": {
                                          "type": "string"
                                        },
                                        "request_id": {
                                          "type": "string"
                                        },
                                        "sections": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "size": {
                                          "type": "integer"
                                        },
                                        "start_date": {
                                          "type": "string"
                                        },
                                        "top_services_by_ip": {
                                          "properties": {
                                            "data": {
                                              "properties": {
                                                "datasets": {
                                                  "items": {
                                                    "properties": {
                                                      "css_color": {
                                                        "type": "string"
                                                      },
                                                      "data": {
                                                        "type": "array"
                                                      },
                                                      "label": {
                                                        "type": "string"
                                                      },
                                                      "tag_id": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "required": [
                                                      "label",
                                                      "tag_id",
                                                      "data",
                                                      "css_color"
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "type": "array"
                                                },
                                                "dates": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "end_date": {
                                              "type": "string"
                                            },
                                            "ip": {
                                              "type": "string"
                                            },
                                            "request_id": {
                                              "type": "string"
                                            },
                                            "size": {
                                              "type": "integer"
                                            },
                                            "start_date": {
                                              "type": "string"
                                            },
                                            "total": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "usage": {
                                          "properties": {
                                            "foundation_api_usage": {
                                              "properties": {
                                                "query_limit": {
                                                  "type": "integer"
                                                },
                                                "remaining_queries": {
                                                  "type": "integer"
                                                },
                                                "used_queries": {
                                                  "type": "integer"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "query_limit": {
                                              "type": "integer"
                                            },
                                            "remaining_queries": {
                                              "type": "integer"
                                            },
                                            "used_queries": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Send_Top_Services_By_IP_Sections_Data_To_Log_Analytics_Table": {
                                  "runAfter": {
                                    "Set_Top_Services_Data_Object": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{variables('top_services_data_obj')}",
                                    "headers": {
                                      "Log-Type": "@variables('top_services_by_ip_table_name')"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                },
                                "Set_Top_Services_Data_Object": {
                                  "runAfter": {
                                    "For_Each_Dataset_Of_Services": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "top_services_data_obj",
                                    "value": {
                                      "data": {
                                        "datasets": "@variables('top_services_data')",
                                        "dates": "@body('Parse_JSON_For_Top_Services_By_IP_Sections_Data')?['top_services_by_ip']?['data']?['dates']"
                                      },
                                      "end_date": "@body('Parse_JSON_For_Top_Services_By_IP_Sections_Data')?['top_services_by_ip']?['end_date']",
                                      "ip": "@body('Parse_JSON_For_Top_Services_By_IP_Sections_Data')?['top_services_by_ip']?['ip']",
                                      "request_id": "@body('Parse_JSON_For_Top_Services_By_IP_Sections_Data')?['top_services_by_ip']?['request_id']",
                                      "size": "@body('Parse_JSON_For_Top_Services_By_IP_Sections_Data')?['top_services_by_ip']?['size']",
                                      "start_date": "@body('Parse_JSON_For_Top_Services_By_IP_Sections_Data')?['top_services_by_ip']?['start_date']",
                                      "total": "@body('Parse_JSON_For_Top_Services_By_IP_Sections_Data')?['top_services_by_ip']?['total']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "HTTP_Request_To_Fetch_Top_Services_By_IP_Sections_Data": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Terminate_Due_To_Failure_While_Fetching_Top_Services_By_IP_Sections_Data": {
                                    "type": "Terminate",
                                    "inputs": {
                                      "runError": {
                                        "code": "@{outputs('HTTP_Request_To_Fetch_Top_Services_By_IP_Sections_Data')['statusCode']}",
                                        "message": "@{body('HTTP_Request_To_Fetch_Top_Services_By_IP_Sections_Data')}"
                                      },
                                      "runStatus": "Failed"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@outputs('HTTP_Request_To_Fetch_Top_Services_By_IP_Sections_Data')['statusCode']",
                                      200
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Condition_To_Ingest_Top_Tags_By_IP_Sections_Data_If_It_is_Fetched_Successfully": {
                              "actions": {
                                "For_Each_Dataset_Of_Tags": {
                                  "foreach": "@body('Parse_JSON_For_Top_Tags_By_IP_Sections_Data')?['top_tags_by_ip']?['data']?['datasets']",
                                  "actions": {
                                    "Append_Dataset_Object_To_Top_Tags_Data_Array": {
                                      "runAfter": {
                                        "Compose_Each_Tags_Dataset_Object_To_Add_Dates_Array_In_It": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "top_tags_data",
                                        "value": "@outputs('Compose_Each_Tags_Dataset_Object_To_Add_Dates_Array_In_It')"
                                      }
                                    },
                                    "Compose_Each_Tags_Dataset_Object_To_Add_Dates_Array_In_It": {
                                      "type": "Compose",
                                      "inputs": "@setProperty(items('For_Each_Dataset_Of_Tags'), 'dates', body('Parse_JSON_For_Top_Tags_By_IP_Sections_Data')?['top_tags_by_ip']?['data']?['dates'])"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_JSON_For_Top_Tags_By_IP_Sections_Data": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach",
                                  "runtimeConfiguration": {
                                    "concurrency": {
                                      "repetitions": 1
                                    }
                                  }
                                },
                                "Parse_JSON_For_Top_Tags_By_IP_Sections_Data": {
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('HTTP_Request_To_Fetch_Top_Tags_By_IP_Sections_Data')",
                                    "schema": {
                                      "properties": {
                                        "end_date": {
                                          "type": "string"
                                        },
                                        "ip": {
                                          "type": "string"
                                        },
                                        "request_id": {
                                          "type": "string"
                                        },
                                        "sections": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "size": {
                                          "type": "integer"
                                        },
                                        "start_date": {
                                          "type": "string"
                                        },
                                        "top_tags_by_ip": {
                                          "properties": {
                                            "data": {
                                              "properties": {
                                                "datasets": {
                                                  "items": {
                                                    "properties": {
                                                      "css_color": {
                                                        "type": "string"
                                                      },
                                                      "data": {
                                                        "type": "array"
                                                      },
                                                      "label": {
                                                        "type": "string"
                                                      },
                                                      "tag_id": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "required": [
                                                      "label",
                                                      "tag_id",
                                                      "data",
                                                      "css_color"
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "type": "array"
                                                },
                                                "dates": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "end_date": {
                                              "type": "string"
                                            },
                                            "ip": {
                                              "type": "string"
                                            },
                                            "request_id": {
                                              "type": "string"
                                            },
                                            "size": {
                                              "type": "integer"
                                            },
                                            "start_date": {
                                              "type": "string"
                                            },
                                            "total": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "usage": {
                                          "properties": {
                                            "foundation_api_usage": {
                                              "properties": {
                                                "query_limit": {
                                                  "type": "integer"
                                                },
                                                "remaining_queries": {
                                                  "type": "integer"
                                                },
                                                "used_queries": {
                                                  "type": "integer"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "query_limit": {
                                              "type": "integer"
                                            },
                                            "remaining_queries": {
                                              "type": "integer"
                                            },
                                            "used_queries": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Send_Top_Tags_By_IP_Sections_Data_To_Log_Analytics_Table": {
                                  "runAfter": {
                                    "Set_Top_Tags_Data_Object": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": "@{variables('top_tags_data_obj')}",
                                    "headers": {
                                      "Log-Type": "@variables('top_tags_by_ip_table_name')"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/api/logs"
                                  }
                                },
                                "Set_Top_Tags_Data_Object": {
                                  "runAfter": {
                                    "For_Each_Dataset_Of_Tags": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "top_tags_data_obj",
                                    "value": {
                                      "data": {
                                        "datasets": "@variables('top_tags_data')",
                                        "dates": "@body('Parse_JSON_For_Top_Tags_By_IP_Sections_Data')?['top_tags_by_ip']?['data']?['dates']"
                                      },
                                      "end_date": "@body('Parse_JSON_For_Top_Tags_By_IP_Sections_Data')?['top_tags_by_ip']?['end_date']",
                                      "ip": "@body('Parse_JSON_For_Top_Tags_By_IP_Sections_Data')?['top_tags_by_ip']?['ip']",
                                      "request_id": "@body('Parse_JSON_For_Top_Tags_By_IP_Sections_Data')?['top_tags_by_ip']?['request_id']",
                                      "size": "@body('Parse_JSON_For_Top_Tags_By_IP_Sections_Data')?['top_tags_by_ip']?['size']",
                                      "start_date": "@body('Parse_JSON_For_Top_Tags_By_IP_Sections_Data')?['top_tags_by_ip']?['start_date']",
                                      "total": "@body('Parse_JSON_For_Top_Tags_By_IP_Sections_Data')?['top_tags_by_ip']?['total']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "HTTP_Request_To_Fetch_Top_Tags_By_IP_Sections_Data": [
                                  "Succeeded",
                                  "TimedOut",
                                  "Failed"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Terminate_Due_To_Failure_While_Fetching_Top_Tags_By_IP_Sections_Data": {
                                    "type": "Terminate",
                                    "inputs": {
                                      "runError": {
                                        "code": "@{outputs('HTTP_Request_To_Fetch_Top_Tags_By_IP_Sections_Data')['statusCode']}",
                                        "message": "@{body('HTTP_Request_To_Fetch_Top_Tags_By_IP_Sections_Data')}"
                                      },
                                      "runStatus": "Failed"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@outputs('HTTP_Request_To_Fetch_Top_Tags_By_IP_Sections_Data')['statusCode']",
                                      200
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "HTTP_Request_To_Fetch_Proto_By_IP_Sections_Data": {
                              "runAfter": {
                                "Send_IP_Indicator_Data_To_IP_Details_Table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "password": "@parameters('password')",
                                  "type": "Basic",
                                  "username": "@variables('username')"
                                },
                                "method": "GET",
                                "queries": {
                                  "sections": "proto_by_ip"
                                },
                                "uri": "@{variables('base_url')}/api/scout/ip/@{variables('indicator_value')}/details"
                              },
                              "runtimeConfiguration": {
                                "secureData": {
                                  "properties": [
                                    "inputs",
                                    "outputs"
                                  ]
                                }
                              }
                            },
                            "HTTP_Request_To_Fetch_Top_Asns_By_IP_Sections_Data": {
                              "runAfter": {
                                "Send_IP_Indicator_Data_To_IP_Details_Table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "password": "@parameters('password')",
                                  "type": "Basic",
                                  "username": "@variables('username')"
                                },
                                "method": "GET",
                                "queries": {
                                  "sections": "top_asns_by_ip"
                                },
                                "uri": "@{variables('base_url')}/api/scout/ip/@{variables('indicator_value')}/details"
                              },
                              "runtimeConfiguration": {
                                "secureData": {
                                  "properties": [
                                    "inputs",
                                    "outputs"
                                  ]
                                }
                              }
                            },
                            "HTTP_Request_To_Fetch_Top_Country_Codes_By_IP_Sections_Data": {
                              "runAfter": {
                                "Send_IP_Indicator_Data_To_IP_Details_Table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "password": "@parameters('password')",
                                  "type": "Basic",
                                  "username": "@variables('username')"
                                },
                                "method": "GET",
                                "queries": {
                                  "sections": "top_country_codes_by_ip"
                                },
                                "uri": "@{variables('base_url')}/api/scout/ip/@{variables('indicator_value')}/details"
                              },
                              "runtimeConfiguration": {
                                "secureData": {
                                  "properties": [
                                    "inputs",
                                    "outputs"
                                  ]
                                }
                              }
                            },
                            "HTTP_Request_To_Fetch_Top_Services_By_IP_Sections_Data": {
                              "runAfter": {
                                "Send_IP_Indicator_Data_To_IP_Details_Table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "password": "@parameters('password')",
                                  "type": "Basic",
                                  "username": "@variables('username')"
                                },
                                "method": "GET",
                                "queries": {
                                  "sections": "top_services_by_ip"
                                },
                                "uri": "@{variables('base_url')}/api/scout/ip/@{variables('indicator_value')}/details"
                              },
                              "runtimeConfiguration": {
                                "secureData": {
                                  "properties": [
                                    "inputs",
                                    "outputs"
                                  ]
                                }
                              }
                            },
                            "HTTP_Request_To_Fetch_Top_Tags_By_IP_Sections_Data": {
                              "runAfter": {
                                "Send_IP_Indicator_Data_To_IP_Details_Table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "password": "@parameters('password')",
                                  "type": "Basic",
                                  "username": "@variables('username')"
                                },
                                "method": "GET",
                                "queries": {
                                  "sections": "top_tags_by_ip"
                                },
                                "uri": "@{variables('base_url')}/api/scout/ip/@{variables('indicator_value')}/details"
                              },
                              "runtimeConfiguration": {
                                "secureData": {
                                  "properties": [
                                    "inputs",
                                    "outputs"
                                  ]
                                }
                              }
                            },
                            "Parse_JSON_For_IP_Indicator_Details_Data": {
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('HTTP_Request_To_Fetch_Details_Of_IP_Indicator')",
                                "schema": {
                                  "properties": {
                                    "communications": {
                                      "properties": {
                                        "event_count": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "peers": {
                                          "items": {
                                            "properties": {
                                              "event_count": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "first_seen": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "last_seen": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "local": {
                                                "properties": {
                                                  "as_info": {
                                                    "items": {
                                                      "properties": {
                                                        "as_name": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        },
                                                        "asn": {
                                                          "type": [
                                                            "integer",
                                                            "null"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "asn",
                                                        "as_name"
                                                      ],
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ]
                                                    },
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ]
                                                  },
                                                  "country_codes": {
                                                    "items": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ]
                                                  },
                                                  "ip": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "max_port": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "min_port": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "tags": {
                                                    "items": {
                                                      "properties": {
                                                        "children": {
                                                          "items": {
                                                            "properties": {
                                                              "id": {
                                                                "type": [
                                                                  "integer",
                                                                  "null"
                                                                ]
                                                              },
                                                              "name": {
                                                                "type": [
                                                                  "string",
                                                                  "null"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "id",
                                                              "name",
                                                              "children"
                                                            ],
                                                            "type": [
                                                              "object",
                                                              "null"
                                                            ]
                                                          },
                                                          "type": [
                                                            "array",
                                                            "null"
                                                          ]
                                                        },
                                                        "id": {
                                                          "type": [
                                                            "integer",
                                                            "null"
                                                          ]
                                                        },
                                                        "name": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "name",
                                                        "children"
                                                      ],
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ]
                                                    },
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ]
                                                  },
                                                  "top_services": {
                                                    "items": {
                                                      "properties": {
                                                        "description": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        },
                                                        "port": {
                                                          "type": [
                                                            "integer",
                                                            "null"
                                                          ]
                                                        },
                                                        "proto_number": {
                                                          "type": [
                                                            "integer",
                                                            "null"
                                                          ]
                                                        },
                                                        "service_name": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "service_name",
                                                        "port",
                                                        "proto_number",
                                                        "description"
                                                      ],
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ]
                                                    },
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ]
                                                  },
                                                  "unique_ports": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "peer": {
                                                "properties": {
                                                  "as_info": {
                                                    "items": {
                                                      "properties": {
                                                        "as_name": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        },
                                                        "asn": {
                                                          "type": [
                                                            "integer",
                                                            "null"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "asn",
                                                        "as_name"
                                                      ],
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ]
                                                    },
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ]
                                                  },
                                                  "country_codes": {
                                                    "items": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ]
                                                  },
                                                  "ip": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "max_port": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "min_port": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "top_services": {
                                                    "items": {
                                                      "properties": {
                                                        "description": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        },
                                                        "port": {
                                                          "type": [
                                                            "integer",
                                                            "null"
                                                          ]
                                                        },
                                                        "proto_number": {
                                                          "type": [
                                                            "integer",
                                                            "null"
                                                          ]
                                                        },
                                                        "service_name": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "service_name",
                                                        "port",
                                                        "proto_number",
                                                        "description"
                                                      ],
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ]
                                                    },
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ]
                                                  },
                                                  "unique_ports": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "proto": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "proto_text": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "proto",
                                              "proto_text",
                                              "local",
                                              "peer",
                                              "event_count",
                                              "first_seen",
                                              "last_seen"
                                            ],
                                            "type": [
                                              "object",
                                              "null"
                                            ]
                                          },
                                          "type": [
                                            "array",
                                            "null"
                                          ]
                                        }
                                      },
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    },
                                    "end_date": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "fingerprints": {
                                      "properties": {
                                        "event_count": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "fingerprints": {
                                          "items": {
                                            "properties": {
                                              "active_days": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "distinct_ips": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "event_count": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "fingerprint": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "first_seen": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "ip": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "last_seen": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "port": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "type": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "ip",
                                              "type",
                                              "fingerprint",
                                              "port",
                                              "first_seen",
                                              "last_seen",
                                              "distinct_ips",
                                              "active_days",
                                              "event_count"
                                            ],
                                            "type": [
                                              "object",
                                              "null"
                                            ]
                                          },
                                          "type": [
                                            "array",
                                            "null"
                                          ]
                                        }
                                      },
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    },
                                    "identity": {
                                      "properties": {
                                        "as_name": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "asn": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "net_name": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "org_name": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    },
                                    "ip": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "open_ports": {
                                      "properties": {
                                        "event_count": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "open_ports": {
                                          "items": {
                                            "properties": {
                                              "as_info": {
                                                "items": {
                                                  "properties": {
                                                    "as_name": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "asn": {
                                                      "type": [
                                                        "integer",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "asn",
                                                    "as_name"
                                                  ],
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              },
                                              "banner": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "banner_sha1": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "country_codes": {
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              },
                                              "event_count": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "first_seen": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "ip": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "last_seen": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "port": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "protocol": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "protocol_text": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "service": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "tags": {
                                                "items": {
                                                  "properties": {
                                                    "children": {
                                                      "items": {
                                                        "properties": {
                                                          "id": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "name": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "name",
                                                          "children"
                                                        ],
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ]
                                                      },
                                                      "type": [
                                                        "array",
                                                        "null"
                                                      ]
                                                    },
                                                    "id": {
                                                      "type": [
                                                        "integer",
                                                        "null"
                                                      ]
                                                    },
                                                    "name": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "name",
                                                    "children"
                                                  ],
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "ip",
                                              "port",
                                              "protocol",
                                              "protocol_text",
                                              "service",
                                              "banner",
                                              "banner_sha1",
                                              "first_seen",
                                              "last_seen",
                                              "country_codes",
                                              "as_info",
                                              "tags",
                                              "event_count"
                                            ],
                                            "type": [
                                              "object",
                                              "null"
                                            ]
                                          },
                                          "type": [
                                            "array",
                                            "null"
                                          ]
                                        },
                                        "unique_ports": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        }
                                      },
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    },
                                    "pdns": {
                                      "properties": {
                                        "event_count": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "pdns": {
                                          "items": {
                                            "properties": {
                                              "active_days": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "as_info": {
                                                "items": {
                                                  "properties": {
                                                    "as_name": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "asn": {
                                                      "type": [
                                                        "integer",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "asn",
                                                    "as_name"
                                                  ],
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              },
                                              "country_codes": {
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              },
                                              "distinct_ips": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "domain": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "domain_created": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "domain_expires": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "event_count": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "first_seen": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "ip": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "last_seen": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "nameservers": {
                                                "items": {
                                                  "properties": {
                                                    "nameservers": {
                                                      "items": {
                                                        "type": [
                                                          "string",
                                                          "null"
                                                        ]
                                                      },
                                                      "type": [
                                                        "array",
                                                        "null"
                                                      ]
                                                    },
                                                    "root": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "root",
                                                    "nameservers"
                                                  ],
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              },
                                              "registrar": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "root": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "tld": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "type": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "ip",
                                              "domain",
                                              "root",
                                              "tld",
                                              "type",
                                              "registrar",
                                              "domain_created",
                                              "domain_expires",
                                              "nameservers",
                                              "country_codes",
                                              "as_info",
                                              "tags",
                                              "distinct_ips",
                                              "active_days",
                                              "event_count",
                                              "first_seen",
                                              "last_seen"
                                            ],
                                            "type": [
                                              "object",
                                              "null"
                                            ]
                                          },
                                          "type": [
                                            "array",
                                            "null"
                                          ]
                                        }
                                      },
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    },
                                    "request_id": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "sections": {
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "type": [
                                        "array",
                                        "null"
                                      ]
                                    },
                                    "size": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "start_date": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "summary": {
                                      "properties": {
                                        "bgp_asn": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "bgp_asname": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "certs": {
                                          "properties": {
                                            "top_certs": {
                                              "items": {
                                                "properties": {
                                                  "common_name": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "css_color": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "first_seen": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "issuer": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "issuer_common_name": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "last_seen": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "md5": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "not_after": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "not_before": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "port": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "self_signed": {
                                                    "type": "boolean"
                                                  },
                                                  "sha1": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "sha256": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "subject": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "valid_days": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "issuer",
                                                  "issuer_common_name",
                                                  "common_name",
                                                  "subject",
                                                  "port",
                                                  "first_seen",
                                                  "last_seen",
                                                  "self_signed",
                                                  "not_before",
                                                  "not_after",
                                                  "valid_days",
                                                  "md5",
                                                  "sha1",
                                                  "sha256",
                                                  "css_color"
                                                ],
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "type": [
                                                "array",
                                                "null"
                                              ]
                                            }
                                          },
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        },
                                        "end_date": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "fingerprints": {
                                          "properties": {
                                            "top_fingerprints": {
                                              "items": {
                                                "properties": {
                                                  "count": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "first_seen": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "last_seen": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "port": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "signature": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "type": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "signature",
                                                  "port",
                                                  "first_seen",
                                                  "last_seen",
                                                  "count"
                                                ],
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "type": [
                                                "array",
                                                "null"
                                              ]
                                            }
                                          },
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        },
                                        "geo_ip_cc": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "insights": {
                                          "properties": {
                                            "insights": {
                                              "items": {
                                                "properties": {
                                                  "message": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "rating": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "rating",
                                                  "message"
                                                ],
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "type": [
                                                "array",
                                                "null"
                                              ]
                                            },
                                            "overall_rating": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "total": {
                                              "type": [
                                                "integer",
                                                "null"
                                              ]
                                            }
                                          },
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        },
                                        "ip": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "open_ports": {
                                          "properties": {
                                            "top_open_ports": {
                                              "items": {
                                                "properties": {
                                                  "css_color": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "event_count": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "first_seen": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "last_seen": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "port": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "protocol": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "protocol_text": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "service": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "event_count",
                                                  "port",
                                                  "protocol",
                                                  "protocol_text",
                                                  "service",
                                                  "inferred_service_name",
                                                  "first_seen",
                                                  "last_seen",
                                                  "css_color"
                                                ],
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "type": [
                                                "array",
                                                "null"
                                              ]
                                            },
                                            "total": {
                                              "type": [
                                                "integer",
                                                "null"
                                              ]
                                            },
                                            "unique_ports": {
                                              "type": [
                                                "integer",
                                                "null"
                                              ]
                                            }
                                          },
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        },
                                        "pdns": {
                                          "properties": {
                                            "top_pdns": {
                                              "items": {
                                                "properties": {
                                                  "css_color": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "domain": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "event_count": {
                                                    "type": [
                                                      "integer",
                                                      "null"
                                                    ]
                                                  },
                                                  "first_seen": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "last_seen": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "event_count",
                                                  "domain",
                                                  "first_seen",
                                                  "last_seen",
                                                  "css_color"
                                                ],
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "type": [
                                                "array",
                                                "null"
                                              ]
                                            },
                                            "total": {
                                              "type": [
                                                "integer",
                                                "null"
                                              ]
                                            }
                                          },
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        },
                                        "start_date": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "tag_timeline": {
                                          "properties": {
                                            "data": {
                                              "items": {
                                                "properties": {
                                                  "first_seen": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "last_seen": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "tag": {
                                                    "properties": {
                                                      "css_color": {
                                                        "type": [
                                                          "string",
                                                          "null"
                                                        ]
                                                      },
                                                      "description": {
                                                        "type": [
                                                          "string",
                                                          "null"
                                                        ]
                                                      },
                                                      "id": {
                                                        "type": [
                                                          "integer",
                                                          "null"
                                                        ]
                                                      },
                                                      "name": {
                                                        "type": [
                                                          "string",
                                                          "null"
                                                        ]
                                                      }
                                                    },
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "tag",
                                                  "first_seen",
                                                  "last_seen"
                                                ],
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "type": [
                                                "array",
                                                "null"
                                              ]
                                            }
                                          },
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        },
                                        "tags": {
                                          "items": {
                                            "properties": {
                                              "children": {
                                                "items": {
                                                  "properties": {
                                                    "id": {
                                                      "type": [
                                                        "integer",
                                                        "null"
                                                      ]
                                                    },
                                                    "name": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "name",
                                                    "children"
                                                  ],
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              },
                                              "id": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "name": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "name",
                                              "children"
                                            ],
                                            "type": [
                                              "object",
                                              "null"
                                            ]
                                          },
                                          "type": [
                                            "array",
                                            "null"
                                          ]
                                        },
                                        "total": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "whois": {
                                          "properties": {
                                            "as_name": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "asn": {
                                              "type": [
                                                "integer",
                                                "null"
                                              ]
                                            },
                                            "net_name": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "org_name": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          },
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        }
                                      },
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    },
                                    "usage": {
                                      "properties": {
                                        "foundation_api_usage": {
                                          "properties": {
                                            "query_limit": {
                                              "type": [
                                                "integer",
                                                "null"
                                              ]
                                            },
                                            "remaining_queries": {
                                              "type": [
                                                "integer",
                                                "null"
                                              ]
                                            },
                                            "used_queries": {
                                              "type": [
                                                "integer",
                                                "null"
                                              ]
                                            }
                                          },
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        },
                                        "query_limit": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "remaining_queries": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "used_queries": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        }
                                      },
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    },
                                    "whois": {
                                      "properties": {
                                        "about_contact_address": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "about_contact_city": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "about_contact_country": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "about_contact_email": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "about_contact_person": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "about_contact_phone": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "about_contact_role": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "abuse_contact_id": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "address": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "admin_contact_address": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "admin_contact_city": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "admin_contact_country": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "admin_contact_email": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "admin_contact_id": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "admin_contact_person": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "admin_contact_phone": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "admin_contact_role": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "as_name": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "asn": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "bgp_asn": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "bgp_asn_name": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "cc": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "cidr": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "city": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "description": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "mnt_by_email": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "mnt_lower_email": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "mnt_router_email": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "modified": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "net_handle": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "net_name": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "org_address": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "org_city": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "org_country": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "org_email": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "org_id": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "org_name": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "org_phone": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "tech_contact_address": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "tech_contact_city": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "tech_contact_country": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "tech_contact_email": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "tech_contact_id": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "tech_contact_person": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "tech_contact_phone": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "tech_contact_role": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    },
                                    "x509": {
                                      "properties": {
                                        "event_count": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "x509": {
                                          "items": {
                                            "properties": {
                                              "altnames": {
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              },
                                              "as_info": {
                                                "items": {
                                                  "properties": {
                                                    "as_name": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "asn": {
                                                      "type": [
                                                        "integer",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "asn",
                                                    "as_name"
                                                  ],
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              },
                                              "common_name": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "count": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "country_codes": {
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              },
                                              "first_seen": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "ip": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "issuer": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "issuer_common_name": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "last_seen": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "md5": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "not_after": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "not_before": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "port": {
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "self_signed": {
                                                "type": "boolean"
                                              },
                                              "serial": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "sha1": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "sha256": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "subject": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "tags": {
                                                "items": {
                                                  "properties": {
                                                    "children": {
                                                      "items": {
                                                        "properties": {
                                                          "id": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "name": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "name",
                                                          "children"
                                                        ],
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ]
                                                      },
                                                      "type": [
                                                        "array",
                                                        "null"
                                                      ]
                                                    },
                                                    "id": {
                                                      "type": [
                                                        "integer",
                                                        "null"
                                                      ]
                                                    },
                                                    "name": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "name",
                                                    "children"
                                                  ],
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ]
                                                },
                                                "type": [
                                                  "array",
                                                  "null"
                                                ]
                                              },
                                              "validity_period": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "ip",
                                              "issuer",
                                              "issuer_common_name",
                                              "common_name",
                                              "altnames",
                                              "serial",
                                              "subject",
                                              "not_after",
                                              "not_before",
                                              "validity_period",
                                              "md5",
                                              "sha1",
                                              "sha256",
                                              "first_seen",
                                              "last_seen",
                                              "port",
                                              "self_signed",
                                              "country_codes",
                                              "as_info",
                                              "tags",
                                              "count"
                                            ],
                                            "type": [
                                              "object",
                                              "null"
                                            ]
                                          },
                                          "type": [
                                            "array",
                                            "null"
                                          ]
                                        }
                                      },
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    }
                                  },
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "Send_IP_Indicator_Data_To_IP_Details_Table": {
                              "runAfter": {
                                "Set_Summary_Details_Data_Object": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": "@{variables('summary_table_data')}",
                                "headers": {
                                  "Log-Type": "@variables('summary_details_table_name')"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/logs"
                              }
                            },
                            "Send_Identity_Data_To_Log_Analytics_Table": {
                              "runAfter": {
                                "Compose_Identity_Object_To_Add_IP_Address_Property": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": "@{outputs('Compose_Identity_Object_To_Add_IP_Address_Property')}",
                                "headers": {
                                  "Log-Type": "@variables('identity_table_name')"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/logs"
                              }
                            },
                            "Send_Whois_Data_To_Log_Analytics_Workspace": {
                              "runAfter": {
                                "Compose_Whois_Object_To_Add_IP_Address_Property": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": "@{outputs('Compose_Whois_Object_To_Add_IP_Address_Property')}",
                                "headers": {
                                  "Log-Type": "@variables('whois_table_name')"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/logs"
                              }
                            },
                            "Set_Summary_Details_Data_Object": {
                              "runAfter": {
                                "Send_Whois_Data_To_Log_Analytics_Workspace": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "summary_table_data",
                                "value": {
                                  "bgp_asn": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['bgp_asn']",
                                  "bgp_asname": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['bgp_asname']",
                                  "certs": {
                                    "top_certs": "@null"
                                  },
                                  "end_date": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['end_date']",
                                  "fingerprints": {
                                    "top_fingerprints": "@null"
                                  },
                                  "geo_ip_cc": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['geo_ip_cc']",
                                  "insights": {
                                    "insights": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['insights']?['insights']",
                                    "overall_rating": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['insights']?['overall_rating']",
                                    "total": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['insights']?['total']"
                                  },
                                  "ip": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['ip']",
                                  "open_ports": {
                                    "top_open_ports": "@null",
                                    "total": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['open_ports']?['total']",
                                    "unique_ports": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['open_ports']?['unique_ports']"
                                  },
                                  "pdns": {
                                    "top_pdns": "@null",
                                    "total": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['pdns']?['total']"
                                  },
                                  "reverse_hostnames": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['reverse_hostnames']",
                                  "start_date": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['start_date']",
                                  "tag_timeline": {
                                    "data": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['tag_timeline']?['data']"
                                  },
                                  "tags": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['tags']",
                                  "total": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['total']",
                                  "whois": {
                                    "as_name": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['whois']?['as_name']",
                                    "asn": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['whois']?['asn']",
                                    "net_name": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['whois']?['net_name']",
                                    "org_name": "@body('Parse_JSON_For_IP_Indicator_Details_Data')?['summary']?['whois']?['org_name']"
                                  }
                                }
                              }
                            },
                            "Terminate_Due_To_Successfully_Ingested_Data_Into_Log_Analytics_Workspace": {
                              "runAfter": {
                                "Condition_To_Execute_Sub_Playbook_For_Malicious_IP": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Terminate",
                              "inputs": {
                                "runStatus": "Succeeded"
                              }
                            }
                          },
                          "runAfter": {
                            "HTTP_Request_To_Fetch_Details_Of_IP_Indicator": [
                              "Succeeded",
                              "TimedOut",
                              "Failed"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Terminate_Due_To_Error_While_Fetching_IP_Indicator_Details_Data": {
                                "type": "Terminate",
                                "inputs": {
                                  "runError": {
                                    "code": "@{outputs('HTTP_Request_To_Fetch_Details_Of_IP_Indicator')['statusCode']}",
                                    "message": "@{body('HTTP_Request_To_Fetch_Details_Of_IP_Indicator')}"
                                  },
                                  "runStatus": "Failed"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@outputs('HTTP_Request_To_Fetch_Details_Of_IP_Indicator')['statusCode']",
                                  200
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "HTTP_Request_To_Fetch_Details_Of_IP_Indicator": {
                          "type": "Http",
                          "inputs": {
                            "authentication": {
                              "password": "@parameters('password')",
                              "type": "Basic",
                              "username": "@variables('username')"
                            },
                            "method": "GET",
                            "uri": "@{variables('base_url')}/api/scout/ip/@{variables('indicator_value')}/details"
                          },
                          "runtimeConfiguration": {
                            "secureData": {
                              "properties": [
                                "inputs",
                                "outputs"
                              ]
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_Top_Tags_By_IP_Sections_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Condition_To_Fetch_Data_If_Domain_is_Valid": {
                            "actions": {
                              "Condition_To_Verify_Domain_Indicator_Details_Data_Fetched_Successfully": {
                                "actions": {
                                  "Compose_An_Object_From_Array_Of_Ips": {
                                    "runAfter": {
                                      "For_Each_IPs": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@variables('domain_data')"
                                  },
                                  "Condition_To_Terminate_If_No_Data_Found_For_Domain": {
                                    "actions": {
                                      "Terminate_Due_To_No_Data_Found_For_Domain": {
                                        "type": "Terminate",
                                        "inputs": {
                                          "runStatus": "Succeeded"
                                        }
                                      }
                                    },
                                    "runAfter": {
                                      "Parse_JSON_For_Domain_Data": [
                                        "Succeeded"
                                      ]
                                    },
                                    "expression": {
                                      "and": [
                                        {
                                          "equals": [
                                            "@body('Parse_JSON_For_Domain_Data')?['ips']",
                                            "@null"
                                          ]
                                        }
                                      ]
                                    },
                                    "type": "If"
                                  },
                                  "For_Each_IPs": {
                                    "foreach": "@body('Parse_JSON_For_Domain_Data')?['ips']",
                                    "actions": {
                                      "Append_Query_To_Each_IPs_Data": {
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                          "name": "domain_data",
                                          "value": "@setProperty(items('For_Each_IPs'), 'query', body('Parse_JSON_For_Domain_Data')?['query'])"
                                        }
                                      }
                                    },
                                    "runAfter": {
                                      "Condition_To_Terminate_If_No_Data_Found_For_Domain": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "Foreach"
                                  },
                                  "Parse_JSON_For_Domain_Data": {
                                    "type": "ParseJson",
                                    "inputs": {
                                      "content": "@body('HTTP_Request_To_Fetch_Details_Of_Domain_Indicator')",
                                      "schema": {
                                        "properties": {
                                          "end_date": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "ips": {
                                            "items": {
                                              "properties": {
                                                "as_info": {
                                                  "items": {
                                                    "properties": {
                                                      "as_name": {
                                                        "type": [
                                                          "string",
                                                          "null"
                                                        ]
                                                      },
                                                      "asn": {
                                                        "type": [
                                                          "integer",
                                                          "null"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "asn",
                                                      "as_name"
                                                    ],
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ]
                                                  },
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ]
                                                },
                                                "country_codes": {
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ]
                                                },
                                                "event_count": {
                                                  "type": [
                                                    "integer",
                                                    "null"
                                                  ]
                                                },
                                                "ip": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "summary": {
                                                  "properties": {
                                                    "certs": {
                                                      "items": {
                                                        "properties": {
                                                          "common_name": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          },
                                                          "event_count": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "ip": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          },
                                                          "issuer": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          },
                                                          "issuer_common_name": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          },
                                                          "port": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "ip",
                                                          "issuer",
                                                          "issuer_common_name",
                                                          "common_name",
                                                          "port",
                                                          "event_count"
                                                        ],
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ]
                                                      },
                                                      "type": [
                                                        "array",
                                                        "null"
                                                      ]
                                                    },
                                                    "comms_total": {
                                                      "type": [
                                                        "integer",
                                                        "null"
                                                      ]
                                                    },
                                                    "fingerprints": {
                                                      "items": {
                                                        "properties": {
                                                          "event_count": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "ip": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          },
                                                          "signature": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          },
                                                          "type": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "ip",
                                                          "type",
                                                          "signature",
                                                          "event_count"
                                                        ],
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ]
                                                      },
                                                      "type": [
                                                        "array",
                                                        "null"
                                                      ]
                                                    },
                                                    "last_seen": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "open_ports": {
                                                      "items": {
                                                        "properties": {
                                                          "event_count": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "ip": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          },
                                                          "port": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "protocol": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "protocol_text": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          },
                                                          "service": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "ip",
                                                          "port",
                                                          "protocol",
                                                          "protocol_text",
                                                          "service",
                                                          "event_count"
                                                        ],
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ]
                                                      },
                                                      "type": [
                                                        "array",
                                                        "null"
                                                      ]
                                                    },
                                                    "pdns": {
                                                      "items": {
                                                        "properties": {
                                                          "domain": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          },
                                                          "event_count": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "ip": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "ip",
                                                          "domain",
                                                          "event_count"
                                                        ],
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ]
                                                      },
                                                      "type": [
                                                        "array",
                                                        "null"
                                                      ]
                                                    },
                                                    "service_counts": {
                                                      "items": {
                                                        "properties": {
                                                          "event_count": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "port": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "proto": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "proto_text": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          },
                                                          "service": {
                                                            "properties": {
                                                              "description": {
                                                                "type": [
                                                                  "string",
                                                                  "null"
                                                                ]
                                                              },
                                                              "port": {
                                                                "type": [
                                                                  "integer",
                                                                  "null"
                                                                ]
                                                              },
                                                              "proto_number": {
                                                                "type": [
                                                                  "integer",
                                                                  "null"
                                                                ]
                                                              },
                                                              "service_name": {
                                                                "type": [
                                                                  "string",
                                                                  "null"
                                                                ]
                                                              }
                                                            },
                                                            "type": [
                                                              "object",
                                                              "null"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "proto",
                                                          "proto_text",
                                                          "port",
                                                          "event_count",
                                                          "service"
                                                        ],
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ]
                                                      },
                                                      "type": [
                                                        "array",
                                                        "null"
                                                      ]
                                                    },
                                                    "top_peers": {
                                                      "items": {
                                                        "properties": {
                                                          "event_count": {
                                                            "type": [
                                                              "integer",
                                                              "null"
                                                            ]
                                                          },
                                                          "ip": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "ip",
                                                          "event_count"
                                                        ],
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ]
                                                      },
                                                      "type": [
                                                        "array",
                                                        "null"
                                                      ]
                                                    },
                                                    "whois": {
                                                      "properties": {
                                                        "as_name": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        },
                                                        "asn": {
                                                          "type": [
                                                            "integer",
                                                            "null"
                                                          ]
                                                        },
                                                        "net_name": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        },
                                                        "org_name": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        }
                                                      },
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ]
                                                },
                                                "tags": {
                                                  "items": {
                                                    "properties": {
                                                      "children": {
                                                        "items": {
                                                          "properties": {
                                                            "id": {
                                                              "type": [
                                                                "integer",
                                                                "null"
                                                              ]
                                                            },
                                                            "name": {
                                                              "type": [
                                                                "string",
                                                                "null"
                                                              ]
                                                            }
                                                          },
                                                          "required": [
                                                            "id",
                                                            "name",
                                                            "children"
                                                          ],
                                                          "type": [
                                                            "object",
                                                            "null"
                                                          ]
                                                        },
                                                        "type": [
                                                          "array",
                                                          "null"
                                                        ]
                                                      },
                                                      "id": {
                                                        "type": [
                                                          "integer",
                                                          "null"
                                                        ]
                                                      },
                                                      "name": {
                                                        "type": [
                                                          "string",
                                                          "null"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "id",
                                                      "name",
                                                      "children"
                                                    ],
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ]
                                                  },
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "ip",
                                                "country_codes",
                                                "as_info",
                                                "tags",
                                                "event_count",
                                                "summary"
                                              ],
                                              "type": [
                                                "object",
                                                "null"
                                              ]
                                            },
                                            "type": [
                                              "array",
                                              "null"
                                            ]
                                          },
                                          "query": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "request_id": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "size": {
                                            "type": [
                                              "integer",
                                              "null"
                                            ]
                                          },
                                          "start_date": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "total": {
                                            "type": [
                                              "integer",
                                              "null"
                                            ]
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "Send_Domain_Data_To_Log_Analytics_Table": {
                                    "runAfter": {
                                      "Compose_An_Object_From_Array_Of_Ips": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                      "body": "@{outputs('Compose_An_Object_From_Array_Of_Ips')}",
                                      "headers": {
                                        "Log-Type": "@variables('domain_details_table_name')"
                                      },
                                      "host": {
                                        "connection": {
                                          "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                        }
                                      },
                                      "method": "post",
                                      "path": "/api/logs"
                                    }
                                  },
                                  "Terminate_Due_To_Successfully_Ingested_Domain_Data": {
                                    "runAfter": {
                                      "Send_Domain_Data_To_Log_Analytics_Table": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                      "runStatus": "Succeeded"
                                    }
                                  }
                                },
                                "runAfter": {
                                  "HTTP_Request_To_Fetch_Details_Of_Domain_Indicator": [
                                    "Succeeded",
                                    "TimedOut",
                                    "Failed"
                                  ]
                                },
                                "else": {
                                  "actions": {
                                    "Terminate_Due_To_Failure_While_Fetching_Domain_Indicator_Data": {
                                      "type": "Terminate",
                                      "inputs": {
                                        "runError": {
                                          "code": "@{outputs('HTTP_Request_To_Fetch_Details_Of_Domain_Indicator')['statusCode']}",
                                          "message": "@{body('HTTP_Request_To_Fetch_Details_Of_Domain_Indicator')}"
                                        },
                                        "runStatus": "Failed"
                                      }
                                    }
                                  }
                                },
                                "expression": {
                                  "and": [
                                    {
                                      "equals": [
                                        "@outputs('HTTP_Request_To_Fetch_Details_Of_Domain_Indicator')['statusCode']",
                                        200
                                      ]
                                    }
                                  ]
                                },
                                "type": "If"
                              },
                              "HTTP_Request_To_Fetch_Details_Of_Domain_Indicator": {
                                "type": "Http",
                                "inputs": {
                                  "authentication": {
                                    "password": "@parameters('password')",
                                    "type": "Basic",
                                    "username": "@variables('username')"
                                  },
                                  "method": "GET",
                                  "queries": {
                                    "query": "@variables('indicator_value')"
                                  },
                                  "uri": "@{variables('base_url')}/api/scout/search"
                                },
                                "runtimeConfiguration": {
                                  "secureData": {
                                    "properties": [
                                      "inputs",
                                      "outputs"
                                    ]
                                  }
                                }
                              }
                            },
                            "runAfter": {
                              "Verify_User_Has_Entered_Valid_Domain": [
                                "Succeeded"
                              ]
                            },
                            "else": {
                              "actions": {
                                "Terminate_Due_To_Invalid_Domain_Input": {
                                  "type": "Terminate",
                                  "inputs": {
                                    "runError": {
                                      "code": "400",
                                      "message": "Please provide valid domain indicator value."
                                    },
                                    "runStatus": "Failed"
                                  }
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "equals": [
                                    "@body('Verify_User_Has_Entered_Valid_Domain')?['match_found']",
                                    "@true"
                                  ]
                                }
                              ]
                            },
                            "type": "If"
                          },
                          "Verify_User_Has_Entered_Valid_Domain": {
                            "type": "ApiConnection",
                            "inputs": {
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['regexmatchingip']['connectionId']"
                                }
                              },
                              "method": "get",
                              "path": "/api/regexPattern/",
                              "queries": {
                                "pattern": "^(?:[a-zA-Z0-9-]+(?:\\[\\.\\]|\\.))+[a-zA-Z]{2,}(?:\\s*,\\s*(?:[a-zA-Z0-9-]+(?:\\[\\.\\]|\\.))+[a-zA-Z]{2,})*$",
                                "text": "@variables('indicator_value')"
                              }
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@toLower(triggerBody()?['indicator_type'])",
                              "ip"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_Base_URL": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "base_url",
                            "type": "string",
                            "value": "[[parameters('BaseURL')]"
                          }
                        ]
                      }
                    },
                    "Initialize_Data_To_Be_Ingested_Into_Summary_Details_Table": {
                      "runAfter": {
                        "Initialize_Top_Fingerprints_Data": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "summary_table_data",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "Initialize_Domain_Data": {
                      "runAfter": {
                        "Initialize_Data_To_Be_Ingested_Into_Summary_Details_Table": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_data",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_Domain_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Top_Country_Codes_Data_Object": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_details_table_name",
                            "type": "string",
                            "value": "Domain_Data"
                          }
                        ]
                      }
                    },
                    "Initialize_Identity_Sections_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Top_Certs_Section_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "identity_table_name",
                            "type": "string",
                            "value": "Identity_Data"
                          }
                        ]
                      }
                    },
                    "Initialize_Proto_By_IP_Sections_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Whois_Sections_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "proto_by_ip_table_name",
                            "type": "string",
                            "value": "Proto_By_IP_Data"
                          }
                        ]
                      }
                    },
                    "Initialize_Summary_Details_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Domain_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "summary_details_table_name",
                            "type": "string",
                            "value": "Summary_Details"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Asns_By_IP_Sections_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Proto_By_IP_Sections_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_asns_by_ip_table_name",
                            "type": "string",
                            "value": "Top_Asns_By_IP_Data"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Asns_Data_Array": {
                      "runAfter": {
                        "Initialize_Top_Tags_Data_Array": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_asns_data",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Asns_Data_Object": {
                      "runAfter": {
                        "Initialize_Top_Tags_Data_Object": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_asns_data_obj",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Certs_Data": {
                      "runAfter": {
                        "Initialize_Top_Open_Ports_Data": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "certs_data",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Certs_Section_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Top_Open_Ports_Section_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "certs_table_name",
                            "type": "string",
                            "value": "@{concat(variables('summary_details_table_name'),'_Top_Certs_Data')}"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Country_Codes_By_IP_Sections_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Top_Asns_By_IP_Sections_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_country_codes_by_ip_table_name",
                            "type": "string",
                            "value": "Top_Country_Codes_By_IP_Data"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Country_Codes_Data_Array": {
                      "runAfter": {
                        "Initialize_Top_Asns_Data_Array": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_country_codes_data",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Country_Codes_Data_Object": {
                      "runAfter": {
                        "Initialize_Top_Asns_Data_Object": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_country_codes_data_obj",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Fingerprints_Data": {
                      "runAfter": {
                        "Initialize_Top_Certs_Data": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "fingerprints_data",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Fingerprints_Section_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Top_Pdns_Section_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "fingerprints_table_name",
                            "type": "string",
                            "value": "@{concat(variables('summary_details_table_name'),'_Top_Fingerprints_Data')}"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Open_Ports_Data": {
                      "runAfter": {
                        "Initialize_Top_Pdns_Data": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "open_ports_data",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Open_Ports_Section_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Top_Fingerprints_Section_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "open_ports_table_name",
                            "type": "string",
                            "value": "@{concat(variables('summary_details_table_name'),'_Top_Open_Ports_Data')}"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Pdns_Data": {
                      "runAfter": {
                        "Update_Indicator_Value_For_Refang_And_Defang": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "pdns_data",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Pdns_Section_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Summary_Details_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "pdns_table_name",
                            "type": "string",
                            "value": "@{concat(variables('summary_details_table_name'),'_Top_Pdns_Data')}"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Services_By_IP_Sections_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Top_Country_Codes_By_IP_Sections_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_services_by_ip_table_name",
                            "type": "string",
                            "value": "Top_Services_By_IP_Data"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Services_Data_Array": {
                      "runAfter": {
                        "Initialize_Domain_Data": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_services_data",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Services_Data_Object": {
                      "runAfter": {
                        "Initialize_Top_Country_Codes_Data_Array": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_services_data_obj",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Tags_By_IP_Sections_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Top_Services_By_IP_Sections_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_tags_by_ip_table_name",
                            "type": "string",
                            "value": "Top_Tags_By_IP_Data"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Tags_Data_Array": {
                      "runAfter": {
                        "Initialize_Top_Services_Data_Array": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_tags_data",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_Top_Tags_Data_Object": {
                      "runAfter": {
                        "Initialize_Top_Services_Data_Object": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "top_tags_data_obj",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "Initialize_User_Name": {
                      "runAfter": {
                        "Initialize_Base_URL": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "username",
                            "type": "string",
                            "value": "@parameters('username')"
                          }
                        ]
                      }
                    },
                    "Initialize_Whois_Sections_Data_Table_Name": {
                      "runAfter": {
                        "Initialize_Identity_Sections_Data_Table_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "whois_table_name",
                            "type": "string",
                            "value": "Whois_Data"
                          }
                        ]
                      }
                    },
                    "Update_Indicator_Value_For_Refang_And_Defang": {
                      "runAfter": {
                        "Initialize_User_Name": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "indicator_value",
                            "type": "string",
                            "value": "@{replace(replace(triggerBody()?['indicator_value'], '[', ''), ']', '')}"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azureloganalyticsdatacollector": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                        "connectionName": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azureloganalyticsdatacollector')]"
                      },
                      "regexmatchingip": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('RegexmatchingipConnectionName'))]",
                        "connectionName": "[[variables('RegexmatchingipConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Regexmatchingip')]"
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "TeamCymruScoutLiveInvestigation",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('RegexmatchingipConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureloganalyticsdatacollectorConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('RegexmatchingipConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('RegexmatchingipConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Team Cymru Scout",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Team Cymru Scout Live Investigation",
            "description": "This playbook will fetch and ingest IP or Domain Indicator data based on input parameters given in the live investigation dashboard.",
            "prerequisites": [
              "1. Make sure that the TeamCymruScoutCreateIncidentAndNotify playbook is deployed before deploying the TeamCymruScoutLiveInvestigation playbook."
            ],
            "postDeployment": [
              "**a. Authorize connections**",
              "Once deployment is complete, authorize each connection.",
              "1. Go to your logic app → API connections → Select azureloganalyticsdatacollector connection resource",
              "2. Go to General → Edit API connection",
              "3. Enter Workspace ID and Workspace Key of your log analytics workspace.",
              "4. Click Authorize",
              "5. Sign in",
              "6. Click Save",
              "7. Repeat steps for other connections"
            ],
            "entities": [
              "IP"
            ],
            "tags": [
              "Team Cymru Scout",
              "Live Investigation",
              "IP",
              "Domain"
            ],
            "lastUpdateTime": "2024-08-13T11:30:09.145Z",
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "TeamCymruScoutLiveInvestigation",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "TeamCymruScoutCreateIncidentAndNotify Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "TeamCymruScoutCreateIncidentAndNotify",
              "minLength": 1,
              "type": "string",
              "metadata": {
                "description": "Please do not change the playbook name, else you will not be able to run playbook from workbook."
              }
            },
            "EmailId": {
              "minLength": 1,
              "type": "string",
              "metadata": {
                "description": "Enter valid comma separated email ID(s) of receiver without space. (e.g. person1@gmail.com,person2@gmail.com)"
              }
            },
            "WorkspaceName": {
              "minLength": 1,
              "type": "string",
              "metadata": {
                "description": "Enter workspace name in which you want to create an incidents."
              }
            }
          },
          "variables": {
            "AzuremonitorlogsConnectionName": "[[concat('Azuremonitorlogs-', parameters('PlaybookName'))]",
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "OutlookConnectionName": "[[concat('Outlook-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuremonitorlogs')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-3": "[[variables('connection-3')]",
            "connection-4": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Outlook')]",
            "_connection-4": "[[variables('connection-4')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "email_id": {
                      "defaultValue": "[[trim(parameters('EmailId'))]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "manual": {
                      "type": "Request",
                      "kind": "Http",
                      "inputs": {
                        "schema": {
                          "properties": {
                            "country_code": {
                              "type": "string"
                            },
                            "fetch_from_logs": {
                              "type": "boolean"
                            },
                            "indicator_value": {
                              "type": "string"
                            },
                            "insights": {
                              "items": {
                                "required": "[variables('TemplateEmptyArray')]",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "open_ports": {
                              "items": {
                                "required": "[variables('TemplateEmptyArray')]",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "pdns": {
                              "items": {
                                "required": "[variables('TemplateEmptyArray')]",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "time_range": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "actions": {
                    "Add_Insights_Details_To_Incident_Comment_(V3)": {
                      "runAfter": {
                        "Create_Incident_For_Malicious_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Create_Incident_For_Malicious_IP')?['id']",
                          "message": "<p><strong>IP:</strong> @{triggerBody()?['indicator_value']}<br>\n<strong>Country Code:</strong> @{variables('country_code')}<br>\n<strong>Insights:</strong><br>\n@{variables('insights_html_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Add_Open_Ports_Details_To_Incident_Comment_(V3)": {
                      "runAfter": {
                        "Create_Incident_For_Malicious_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Create_Incident_For_Malicious_IP')?['id']",
                          "message": "<p><strong>IP: </strong>@{triggerBody()?['indicator_value']}<br>\n<strong>Country Code: </strong>@{variables('country_code')}<strong><br>\nOpen Ports:<br>\n</strong>@{variables('open_ports_html_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Add_PDNS_Details_To_Incident_Comment_(V3)": {
                      "runAfter": {
                        "Create_Incident_For_Malicious_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Create_Incident_For_Malicious_IP')?['id']",
                          "message": "<p><strong>IP: </strong>@{triggerBody()?['indicator_value']}<br>\n<strong>Country Code:</strong> @{variables('country_code')}<br>\n<strong>PDNS:</strong><br>\n@{variables('pdns_html_table')}</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Condition_To_Fetch_Data_From_Logs_If_Flag_Set_To_True": {
                      "actions": {
                        "Condition_To_Add_Insights_Data_In_HTML_Table_If_It_Is_Available_In_Logs": {
                          "actions": {
                            "Complete_HTML_Table_For_Insights_Data": {
                              "runAfter": {
                                "For_Each_Insights_Data": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "insights_html_table",
                                "value": "</table>"
                              }
                            },
                            "Compose_An_Array_For_Insights_Data": {
                              "type": "Compose",
                              "inputs": "@json(body('Run_Query_And_List_Data_For_Indicator')?['value'][0]?['Insights'])"
                            },
                            "For_Each_Insights_Data": {
                              "foreach": "@outputs('Compose_An_Array_For_Insights_Data')",
                              "actions": {
                                "Append_Insight_To_Insights_HTML_Table": {
                                  "type": "AppendToStringVariable",
                                  "inputs": {
                                    "name": "insights_html_table",
                                    "value": "<tr><td>@{items('For_Each_Insights_Data')?['rating']}</td><td>@{items('For_Each_Insights_Data')?['message']}</td></tr>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Compose_An_Array_For_Insights_Data": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            }
                          },
                          "runAfter": {
                            "Set_Country_Code_From_Logs_Data": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_Insights_HTML_Table_For_No_Insights_Record_Found": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "insights_html_table",
                                  "value": "<b> No Insights Data Found in Logs. </b>"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@empty(body('Run_Query_And_List_Data_For_Indicator')?['value'][0]?['Insights'])",
                                    "@true"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Condition_To_Add_Open_Ports_Data_In_HTML_Table_If_It_Is_Available_In_Logs": {
                          "actions": {
                            "Complete_HTML_Table_For_Open_Ports_Data": {
                              "runAfter": {
                                "For_Each_Port_Data": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "open_ports_html_table",
                                "value": "</table>"
                              }
                            },
                            "Compose_An_Array_For_Open_Ports_Data": {
                              "type": "Compose",
                              "inputs": "@json(body('Run_Query_And_List_Data_For_Indicator')?['value'][0]?['OpenPortsDetails'])"
                            },
                            "For_Each_Port_Data": {
                              "foreach": "@outputs('Compose_An_Array_For_Open_Ports_Data')",
                              "actions": {
                                "Append_Data_To_HTML_Variable": {
                                  "type": "AppendToStringVariable",
                                  "inputs": {
                                    "name": "open_ports_html_table",
                                    "value": "<tr><td>@{items('For_Each_Port_Data')?['port']}</td><td>@{items('For_Each_Port_Data')?['protocol']}</td><td>@{items('For_Each_Port_Data')?['protocol_text']}</td><td>@{items('For_Each_Port_Data')?['event_count']}</td></tr>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Compose_An_Array_For_Open_Ports_Data": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            }
                          },
                          "runAfter": {
                            "Set_Country_Code_From_Logs_Data": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_Open_Ports_HTML_Table_Data_For_No_Open_Ports_Record_Found": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "open_ports_html_table",
                                  "value": "<b> No Open Ports Data Found in Logs. </b>"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@empty(body('Run_Query_And_List_Data_For_Indicator')?['value'][0]?['OpenPortsDetails'])",
                                    "@true"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Condition_To_Add_PDNS_Data_In_HTML_Table_If_It_Is_Available_In_Logs": {
                          "actions": {
                            "Complete_HTML_Table_For_PDNS_Data": {
                              "runAfter": {
                                "For_Each_PDNS_Data": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "pdns_html_table",
                                "value": "</table>"
                              }
                            },
                            "Compose_An_Array_For_PDNS_Data": {
                              "type": "Compose",
                              "inputs": "@json(body('Run_Query_And_List_Data_For_Indicator')?['value'][0]?['PDNSDetails'])"
                            },
                            "For_Each_PDNS_Data": {
                              "foreach": "@outputs('Compose_An_Array_For_PDNS_Data')",
                              "actions": {
                                "Append_Data_To_PDNS_HTML_Table": {
                                  "type": "AppendToStringVariable",
                                  "inputs": {
                                    "name": "pdns_html_table",
                                    "value": "<tr><td>@{items('For_Each_PDNS_Data')?['domain']}</td><td>@{items('For_Each_PDNS_Data')?['event_count']}</td></tr>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Compose_An_Array_For_PDNS_Data": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            }
                          },
                          "runAfter": {
                            "Set_Country_Code_From_Logs_Data": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_PDNS_HTML_Data_For_No_PDNS_Record_Found": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "pdns_html_table",
                                  "value": "<b> No PDNS Data Found in Logs. </b>"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@empty(body('Run_Query_And_List_Data_For_Indicator')?['value'][0]?['PDNSDetails'])",
                                    "@true"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Run_Query_And_List_Data_For_Indicator": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": "CymruScoutIP\n| where Indicator == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by Indicator\n| project PDNSDetails,  OpenPortsDetails, Insights, IPCountryCode",
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/queryData",
                            "queries": {
                              "resourcegroups": "[[resourceGroup().name]",
                              "resourcename": "[[trim(parameters('WorkspaceName'))]",
                              "resourcetype": "Log Analytics Workspace",
                              "subscriptions": "[[subscription().subscriptionId]",
                              "timerange": "@triggerBody()?['time_range']"
                            }
                          }
                        },
                        "Set_Country_Code_From_Logs_Data": {
                          "runAfter": {
                            "Run_Query_And_List_Data_For_Indicator": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "country_code",
                            "value": "@{if(empty(body('Run_Query_And_List_Data_For_Indicator')?['value'][0]?['IPCountryCode']), 'No Country Code Found', body('Run_Query_And_List_Data_For_Indicator')?['value'][0]?['IPCountryCode'])}"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_Country_Code": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Condition_To_Add_Insights_Data_To_HTML_Table_If_It_Is_Available": {
                            "actions": {
                              "Complete_Insights_HTML_Table": {
                                "runAfter": {
                                  "For_Each_Insights": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "AppendToStringVariable",
                                "inputs": {
                                  "name": "insights_html_table",
                                  "value": "</table>"
                                }
                              },
                              "For_Each_Insights": {
                                "foreach": "@triggerBody()?['insights']",
                                "actions": {
                                  "Append_Insights_Information_To_Insights_HTML_Table": {
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                      "name": "insights_html_table",
                                      "value": "<tr><td>@{items('For_Each_Insights')?['rating']}</td><td>@{items('For_Each_Insights')?['message']}</td></tr>"
                                    }
                                  }
                                },
                                "type": "Foreach"
                              }
                            },
                            "runAfter": {
                              "Condition_To_Add_PDNS_Data_To_HTML_Table_If_It_Is_Available": [
                                "Succeeded"
                              ]
                            },
                            "else": {
                              "actions": {
                                "Set_Insights_HTML_Table_Data_For_No_Insights_Found": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "insights_html_table",
                                    "value": "<b> No Insights Found. </b>"
                                  }
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "not": {
                                    "equals": [
                                      "@triggerBody()?['insights']",
                                      "@null"
                                    ]
                                  }
                                }
                              ]
                            },
                            "type": "If"
                          },
                          "Condition_To_Add_Open_Ports_Data_To_HTML_Table_If_It_Is_Available": {
                            "actions": {
                              "Complete_Open_Ports_HTML_Table": {
                                "runAfter": {
                                  "For_Each_Open_Port": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "AppendToStringVariable",
                                "inputs": {
                                  "name": "open_ports_html_table",
                                  "value": "</table>"
                                }
                              },
                              "For_Each_Open_Port": {
                                "foreach": "@triggerBody()?['open_ports']",
                                "actions": {
                                  "Append_Each_Port_Details_To_HTML_Table": {
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                      "name": "open_ports_html_table",
                                      "value": "<tr><td>@{items('For_Each_Open_Port')?['port']}</td><td>@{items('For_Each_Open_Port')?['protocol']}</td><td>@{items('For_Each_Open_Port')?['protocol_text']}</td><td>@{items('For_Each_Open_Port')?['event_count']}</td></tr>"
                                    }
                                  }
                                },
                                "type": "Foreach"
                              }
                            },
                            "else": {
                              "actions": {
                                "Set_Open_Ports_HTML_Table_Data_For_No_Data_Found": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "open_ports_html_table",
                                    "value": "<b> No Open Ports Details Found. </b>"
                                  }
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "not": {
                                    "equals": [
                                      "@triggerBody()?['open_ports']",
                                      "@null"
                                    ]
                                  }
                                }
                              ]
                            },
                            "type": "If"
                          },
                          "Condition_To_Add_PDNS_Data_To_HTML_Table_If_It_Is_Available": {
                            "actions": {
                              "Complete_PDNS_HTML_Table": {
                                "runAfter": {
                                  "For_Each_PDNS": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "AppendToStringVariable",
                                "inputs": {
                                  "name": "pdns_html_table",
                                  "value": "</table>"
                                }
                              },
                              "For_Each_PDNS": {
                                "foreach": "@triggerBody()?['pdns']",
                                "actions": {
                                  "Append_PDNS_To_PDNS_HTML_Table": {
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                      "name": "pdns_html_table",
                                      "value": "<tr><td>@{items('For_Each_PDNS')?['domain']}</td><td>@{items('For_Each_PDNS')?['event_count']}</td></tr>"
                                    }
                                  }
                                },
                                "type": "Foreach"
                              }
                            },
                            "runAfter": {
                              "Condition_To_Add_Open_Ports_Data_To_HTML_Table_If_It_Is_Available": [
                                "Succeeded"
                              ]
                            },
                            "else": {
                              "actions": {
                                "Set_PDNS_HTML_Table_Data_For_No_PDNS_Found": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "pdns_html_table",
                                    "value": "<b> No PDNS Details Found. </b>"
                                  }
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "not": {
                                    "equals": [
                                      "@triggerBody()?['pdns']",
                                      "@null"
                                    ]
                                  }
                                }
                              ]
                            },
                            "type": "If"
                          },
                          "Set_Country_Code": {
                            "runAfter": {
                              "Condition_To_Add_Insights_Data_To_HTML_Table_If_It_Is_Available": [
                                "Succeeded"
                              ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                              "name": "country_code",
                              "value": "@{if(empty(triggerBody()?['country_code']), 'No Country Code Found', triggerBody()?['country_code'])}"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@triggerBody()?['fetch_from_logs']",
                              "@true"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Create_Incident_For_Malicious_IP": {
                      "runAfter": {
                        "Condition_To_Fetch_Data_From_Logs_If_Flag_Set_To_True": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "description": "Found malicious ip: @{triggerBody()?['indicator_value']} for Team Cymru Scout.",
                          "severity": "High",
                          "status": "New",
                          "title": "Found Malicious IP: @{triggerBody()?['indicator_value']}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "put",
                        "path": "[[concat('/Incidents/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/workspaces/', parameters('WorkspaceName'))]"
                      }
                    },
                    "Initialize_Country_Code": {
                      "runAfter": {
                        "Initialize_Insights_HTML_Table": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "country_code",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_Email_ID": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "email_recipient",
                            "type": "string",
                            "value": "@parameters('email_id')"
                          }
                        ]
                      }
                    },
                    "Initialize_HTML_Table_For_Open_Ports_Data": {
                      "runAfter": {
                        "Initialize_Email_ID": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "open_ports_html_table",
                            "type": "string",
                            "value": "<table border=\"1\"><tr><th>Port</th><th>Protocol</th><th>Protocol Name</th><th>Events</th></tr>"
                          }
                        ]
                      }
                    },
                    "Initialize_Insights_HTML_Table": {
                      "runAfter": {
                        "Initialize_PDNS_HTML_Table": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "insights_html_table",
                            "type": "string",
                            "value": "<table border=\"1\"><tr><th>Rating</th><th>Message</th></tr>"
                          }
                        ]
                      }
                    },
                    "Initialize_PDNS_HTML_Table": {
                      "runAfter": {
                        "Initialize_HTML_Table_For_Open_Ports_Data": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "pdns_html_table",
                            "type": "string",
                            "value": "<table border=\"1\"><tr><th>Domain</th><th>Events</th></tr>"
                          }
                        ]
                      }
                    },
                    "Response_To_Indicate_Failure": {
                      "runAfter": {
                        "Send_An_Email_(V2)": [
                          "Failed"
                        ]
                      },
                      "type": "Response",
                      "kind": "Http",
                      "inputs": {
                        "body": {
                          "status": "failure"
                        },
                        "statusCode": 400
                      }
                    },
                    "Response_To_Indicate_Success": {
                      "runAfter": {
                        "Send_An_Email_(V2)": [
                          "Succeeded"
                        ]
                      },
                      "type": "Response",
                      "kind": "Http",
                      "inputs": {
                        "body": {
                          "status": "success"
                        },
                        "statusCode": 200
                      }
                    },
                    "Send_An_Email_(V2)": {
                      "runAfter": {
                        "Add_Insights_Details_To_Incident_Comment_(V3)": [
                          "Succeeded",
                          "FAILED",
                          "TIMEDOUT"
                        ],
                        "Add_Open_Ports_Details_To_Incident_Comment_(V3)": [
                          "Succeeded",
                          "TIMEDOUT",
                          "FAILED"
                        ],
                        "Add_PDNS_Details_To_Incident_Comment_(V3)": [
                          "Succeeded",
                          "TIMEDOUT",
                          "FAILED"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Body": "<p>A malicious IP address @{triggerBody()?['indicator_value']} has been identified, and an incident has been created for it in Sentinel.<br>\n<br>\n<strong>Incident URL: </strong>@{body('Create_Incident_For_Malicious_IP')?['properties']?['incidentUrl']}<br>\n<br>\n<strong>IP: </strong>@{triggerBody()?['indicator_value']}<br>\n<strong>Country Code: </strong>@{variables('country_code')}<br>\n<strong>Open Ports:</strong><br>\n@{variables('open_ports_html_table')}<br>\n<br>\n<strong>PDNS:</strong><br>\n@{variables('pdns_html_table')}<br>\n<br>\n<strong>Insights:</strong><br>\n@{variables('insights_html_table')}</p>",
                          "Importance": "High",
                          "Subject": "A malicious IP address has been identified, and an incident has been created for it in Sentinel.\nIP: @{triggerBody()?['indicator_value']}",
                          "To": "@variables('email_recipient')"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['outlook']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/Mail"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                        "connectionName": "[[variables('AzuremonitorlogsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuremonitorlogs')]"
                      },
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "outlook": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('OutlookConnectionName'))]",
                        "connectionName": "[[variables('OutlookConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Outlook')]"
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "TeamCymruScoutCreateIncidentAndNotify",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('OutlookConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzuremonitorlogsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzuremonitorlogsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('OutlookConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('OutlookConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-4')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Team Cymru Scout",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Team Cymru Scout Create Incident And Notify",
            "description": "This playbook will create an incident for malicious ip and notify to pre-defined or user customizable email id.",
            "prerequisites": [
              "1. User should have an outlook mail account in order to use this playbook."
            ],
            "postDeployment": [
              "**a. Authorize connections**",
              "Once deployment is complete, authorize each connection.",
              "1. Go to your logic app → API connections → Select outlook connection resource",
              "2. Go to General → Edit API connection",
              "3. Click Authorize",
              "5. Sign in",
              "6. Click Save",
              "7. Repeat steps for other connections",
              "**b. Assign Role to add comment in incident**",
              "Assign role to this playbook.",
              "1. Go to Log Analytics Workspace → <your workspace> → Access Control → Add",
              "2.Add role assignment",
              "3.Assignment type: Job function roles",
              "4.Role: Microsoft Sentinel Contributor",
              "5.Members: select managed identity for assigned access to and add your logic app as member",
              "6.Click on review+assign"
            ],
            "entities": [
              "IP"
            ],
            "tags": [
              "Team Cymru Scout",
              "Incident",
              "IP",
              "Mail"
            ],
            "lastUpdateTime": "2024-08-13T11:30:10.866Z",
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "TeamCymruScoutCreateIncidentAndNotify",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutAccountUsage Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutAccountUsage",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutAccountUsage",
                "query": "let CymruScoutAccountUsage = view(){\nCymru_Scout_Account_Usage_Data_CL\n| top 1 by TimeGenerated desc\n| extend UsedQueries = iff(query_limit_d!=0, round((used_queries_d/query_limit_d)*100, 3), toreal(-1)), UsedFoundationQueries = iff(foundation_api_usage_query_limit_d!=0, round((foundation_api_usage_used_queries_d/foundation_api_usage_query_limit_d)*100, 3), toreal(-1))\n| project [\"Query Limit\"] = query_limit_d, [\"Used Queries\"] = used_queries_d, [\"Remaining Queries\"] = remaining_queries_d, [\"Used Queries (%)\"] = UsedQueries, [\"Foundation Query Limit\"] = foundation_api_usage_query_limit_d, [\"Used Foundation Queries\"] = foundation_api_usage_used_queries_d, [\"Remaining Foundation Queries\"] = foundation_api_usage_remaining_queries_d, [\"Used Foundation Queries (%)\"] = UsedFoundationQueries\n};\nCymruScoutAccountUsage\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutAccountUsage')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutAccountUsage",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutAccountUsage",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutAccountUsage",
        "query": "let CymruScoutAccountUsage = view(){\nCymru_Scout_Account_Usage_Data_CL\n| top 1 by TimeGenerated desc\n| extend UsedQueries = iff(query_limit_d!=0, round((used_queries_d/query_limit_d)*100, 3), toreal(-1)), UsedFoundationQueries = iff(foundation_api_usage_query_limit_d!=0, round((foundation_api_usage_used_queries_d/foundation_api_usage_query_limit_d)*100, 3), toreal(-1))\n| project [\"Query Limit\"] = query_limit_d, [\"Used Queries\"] = used_queries_d, [\"Remaining Queries\"] = remaining_queries_d, [\"Used Queries (%)\"] = UsedQueries, [\"Foundation Query Limit\"] = foundation_api_usage_query_limit_d, [\"Used Foundation Queries\"] = foundation_api_usage_used_queries_d, [\"Remaining Foundation Queries\"] = foundation_api_usage_remaining_queries_d, [\"Used Foundation Queries (%)\"] = UsedFoundationQueries\n};\nCymruScoutAccountUsage\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutAccountUsage')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutCorrelate Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutCorrelate",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutCorrelate",
                "query": "let ThreatIntelligenceData = (indicatortype: string=\"\")\n{\n    ThreatIntelligenceIndicator\n    | extend ipIndicator = iff(\"*\" == indicatortype  or \"IP\" == indicatortype, NetworkIP, \"\"),\n        domainIndicator = iff(\"*\" == indicatortype  or \"Domain\" == indicatortype, DomainName, \"\")\n};\nlet AsimParsersData = (indicatortype: string=\"\", asimParsers: dynamic=dynamic([]))\n{\n    union isfuzzy=true\n        (ASimNetworkSession| where \"*\" in (asimParsers) or \"NetworkSession\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = pack_array(SrcIpAddr, DstIpAddr), domain = pack_array(SrcDomain, DstDomain)),\n        (ASimWebSession| where \"*\" in (asimParsers) or \"WebSession\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = pack_array(SrcIpAddr, DstIpAddr), domain = pack_array(SrcDomain, DstDomain)),\n        (ASimDns| where \"*\" in (asimParsers) or \"DNS\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = pack_array(SrcIpAddr, DstIpAddr), domain = pack_array(SrcDomain, DstDomain)),\n        (ASimDhcpEvent| where \"*\" in (asimParsers) or \"DHCP\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = SrcIpAddr, domain = SrcDomain),\n        (ASimAuditEvent| where \"*\" in (asimParsers) or \"Audit\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = pack_array(SrcIpAddr, TargetIpAddr), domain = pack_array(SrcDomain, TargetIpAddr)),\n        (ASimAuthentication| where \"*\" in (asimParsers) or \"Authentication\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = pack_array(SrcIpAddr, TargetIpAddr), domain = pack_array(SrcDomain, TargetIpAddr))\n        | extend ipIndicator = iff( \"*\" == indicatortype  or \"IP\" == indicatortype, ip, \"\"),\n            domainIndicator = iff(\"*\" == indicatortype  or \"Domain\" == indicatortype, domain, \"\")\n};\nlet OtherSourcesData = (indicatorType: string=\"\", asimParsers: dynamic=dynamic([]), searchAlgo: string=\"\")\n{\n    union isfuzzy=true\n        (AsimParsersData(indicatortype=indicatorType, asimParsers=asimParsers)| where searchAlgo == \"ASIM Parsers\"),\n        (ThreatIntelligenceData(indicatortype=indicatorType)| where searchAlgo == \"ThreatIntelligenceIndicator\")\n};\nlet ipdata = (indicatorType: string=\"\", searchAlgo: string=\"\", asimParsers: dynamic=dynamic([]))\n{\n    OtherSourcesData(indicatorType=indicatorType, searchAlgo=searchAlgo, asimParsers=asimParsers)\n    | mv-expand todynamic(ipIndicator)\n    | where isnotempty(ipIndicator)\n    | extend ipIndicator = tostring(ipIndicator)\n    | join kind=inner (CymruScoutIP| distinct Indicator, IndicatorType) on $left.ipIndicator == $right.Indicator\n};\nlet domaindata = (indicatorType: string=\"\", searchAlgo: string=\"\", asimParsers: dynamic=dynamic([]))\n{\n    OtherSourcesData(indicatorType=indicatorType, searchAlgo=searchAlgo, asimParsers=asimParsers)\n    | mv-expand todynamic(domainIndicator)\n    | where isnotempty(domainIndicator)\n    | extend domainIndicator = tostring(domainIndicator)\n    | join kind=inner (CymruScoutDomain| distinct Indicator, IndicatorType) on $left.domainIndicator == $right.Indicator\n};\nlet CymruScoutCorrelate = (indicatorType: string=\"\", searchAlgo: string=\"\", asimParsers: dynamic=dynamic([]))\n{\n    union isfuzzy=true\n        (ipdata(indicatorType=indicatorType, searchAlgo=searchAlgo, asimParsers=asimParsers)| where \"IP\" == indicatorType or indicatorType has '*'),\n        (domaindata(indicatorType=indicatorType, searchAlgo=searchAlgo, asimParsers=asimParsers)| where \"Domain\" == indicatorType or indicatorType has '*')\n};\nCymruScoutCorrelate(\n    indicatorType=indicatorType,\n    searchAlgo=searchAlgo,\n    asimParsers=asimParsers\n)\n",
                "functionParameters": "indicatorType:dynamic=dynamic([]),searchAlgo:string='',asimParsers:dynamic=dynamic([])",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutCorrelate')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutCorrelate",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutCorrelate",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutCorrelate",
        "query": "let ThreatIntelligenceData = (indicatortype: string=\"\")\n{\n    ThreatIntelligenceIndicator\n    | extend ipIndicator = iff(\"*\" == indicatortype  or \"IP\" == indicatortype, NetworkIP, \"\"),\n        domainIndicator = iff(\"*\" == indicatortype  or \"Domain\" == indicatortype, DomainName, \"\")\n};\nlet AsimParsersData = (indicatortype: string=\"\", asimParsers: dynamic=dynamic([]))\n{\n    union isfuzzy=true\n        (ASimNetworkSession| where \"*\" in (asimParsers) or \"NetworkSession\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = pack_array(SrcIpAddr, DstIpAddr), domain = pack_array(SrcDomain, DstDomain)),\n        (ASimWebSession| where \"*\" in (asimParsers) or \"WebSession\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = pack_array(SrcIpAddr, DstIpAddr), domain = pack_array(SrcDomain, DstDomain)),\n        (ASimDns| where \"*\" in (asimParsers) or \"DNS\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = pack_array(SrcIpAddr, DstIpAddr), domain = pack_array(SrcDomain, DstDomain)),\n        (ASimDhcpEvent| where \"*\" in (asimParsers) or \"DHCP\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = SrcIpAddr, domain = SrcDomain),\n        (ASimAuditEvent| where \"*\" in (asimParsers) or \"Audit\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = pack_array(SrcIpAddr, TargetIpAddr), domain = pack_array(SrcDomain, TargetIpAddr)),\n        (ASimAuthentication| where \"*\" in (asimParsers) or \"Authentication\" in (asimParsers)|where EventVendor !contains \"Cymru\"| extend ip = pack_array(SrcIpAddr, TargetIpAddr), domain = pack_array(SrcDomain, TargetIpAddr))\n        | extend ipIndicator = iff( \"*\" == indicatortype  or \"IP\" == indicatortype, ip, \"\"),\n            domainIndicator = iff(\"*\" == indicatortype  or \"Domain\" == indicatortype, domain, \"\")\n};\nlet OtherSourcesData = (indicatorType: string=\"\", asimParsers: dynamic=dynamic([]), searchAlgo: string=\"\")\n{\n    union isfuzzy=true\n        (AsimParsersData(indicatortype=indicatorType, asimParsers=asimParsers)| where searchAlgo == \"ASIM Parsers\"),\n        (ThreatIntelligenceData(indicatortype=indicatorType)| where searchAlgo == \"ThreatIntelligenceIndicator\")\n};\nlet ipdata = (indicatorType: string=\"\", searchAlgo: string=\"\", asimParsers: dynamic=dynamic([]))\n{\n    OtherSourcesData(indicatorType=indicatorType, searchAlgo=searchAlgo, asimParsers=asimParsers)\n    | mv-expand todynamic(ipIndicator)\n    | where isnotempty(ipIndicator)\n    | extend ipIndicator = tostring(ipIndicator)\n    | join kind=inner (CymruScoutIP| distinct Indicator, IndicatorType) on $left.ipIndicator == $right.Indicator\n};\nlet domaindata = (indicatorType: string=\"\", searchAlgo: string=\"\", asimParsers: dynamic=dynamic([]))\n{\n    OtherSourcesData(indicatorType=indicatorType, searchAlgo=searchAlgo, asimParsers=asimParsers)\n    | mv-expand todynamic(domainIndicator)\n    | where isnotempty(domainIndicator)\n    | extend domainIndicator = tostring(domainIndicator)\n    | join kind=inner (CymruScoutDomain| distinct Indicator, IndicatorType) on $left.domainIndicator == $right.Indicator\n};\nlet CymruScoutCorrelate = (indicatorType: string=\"\", searchAlgo: string=\"\", asimParsers: dynamic=dynamic([]))\n{\n    union isfuzzy=true\n        (ipdata(indicatorType=indicatorType, searchAlgo=searchAlgo, asimParsers=asimParsers)| where \"IP\" == indicatorType or indicatorType has '*'),\n        (domaindata(indicatorType=indicatorType, searchAlgo=searchAlgo, asimParsers=asimParsers)| where \"Domain\" == indicatorType or indicatorType has '*')\n};\nCymruScoutCorrelate(\n    indicatorType=indicatorType,\n    searchAlgo=searchAlgo,\n    asimParsers=asimParsers\n)\n",
        "functionParameters": "indicatorType:dynamic=dynamic([]),searchAlgo:string='',asimParsers:dynamic=dynamic([])",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutCorrelate')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject3').parserTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutDomain Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject3').parserVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject3')._parserName3]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutDomain",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutDomain",
                "query": "let CymruScoutDomain = view(){\nCymru_Scout_Domain_Data_CL\n| summarize arg_max(TimeGenerated, *) by query_s,ip_s\n| extend IndicatorType=\"Domain\", \n        Indicator=column_ifexists(\"query_s\", \"\"), \n        IP = column_ifexists(\"ip_s\", \"\"), \n        Domain = column_ifexists(\"query_s\", \"\"), \n        ASInfo = column_ifexists(\"as_info_s\", \"\"), \n        SummaryWhoIsASName = column_ifexists(\"summary_whois_as_name_s\", \"\"),\n        SummaryWhoIsASN = column_ifexists(\"summary_whois_asn_d\", \"\"), \n        SummaryWhoIsNetName = column_ifexists(\"summary_whois_net_name_s\", \"\"), \n        SummaryWhoIsOrgName = column_ifexists(\"summary_whois_org_name_s\", \"\"), \n        CountryCodes = column_ifexists(\"country_codes_s\", \"\"), \n        SummaryOpenPorts = column_ifexists(\"summary_open_ports_s\", \"\"), \n        SummaryPDNS = column_ifexists(\"summary_pdns_s\", \"\"),\n        TagsIds = strcat_array(todynamic(column_ifexists(\"tags_id_s\", \"\")), \",\"),\n        TagsNames = strcat_array(todynamic(column_ifexists(\"tags_name_s\", \"\")), \",\")\n| project TimeGenerated, \n        Indicator, \n        IndicatorType, \n        IP, \n        Domain, \n        ASInfo, \n        SummaryWhoIsASName, \n        SummaryWhoIsASN, \n        SummaryWhoIsNetName, \n        SummaryWhoIsOrgName, \n        CountryCodes, \n        SummaryOpenPorts, \n        SummaryPDNS,\n        TagsIds,\n        TagsNames\n};\nCymruScoutDomain\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
              "dependsOn": [
                "[variables('parserObject3')._parserId3]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutDomain')]",
                "contentId": "[variables('parserObject3').parserContentId3]",
                "kind": "Parser",
                "version": "[variables('parserObject3').parserVersion3]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutDomain",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "version": "[variables('parserObject3').parserVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject3')._parserName3]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutDomain",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutDomain",
        "query": "let CymruScoutDomain = view(){\nCymru_Scout_Domain_Data_CL\n| summarize arg_max(TimeGenerated, *) by query_s,ip_s\n| extend IndicatorType=\"Domain\", \n        Indicator=column_ifexists(\"query_s\", \"\"), \n        IP = column_ifexists(\"ip_s\", \"\"), \n        Domain = column_ifexists(\"query_s\", \"\"), \n        ASInfo = column_ifexists(\"as_info_s\", \"\"), \n        SummaryWhoIsASName = column_ifexists(\"summary_whois_as_name_s\", \"\"),\n        SummaryWhoIsASN = column_ifexists(\"summary_whois_asn_d\", \"\"), \n        SummaryWhoIsNetName = column_ifexists(\"summary_whois_net_name_s\", \"\"), \n        SummaryWhoIsOrgName = column_ifexists(\"summary_whois_org_name_s\", \"\"), \n        CountryCodes = column_ifexists(\"country_codes_s\", \"\"), \n        SummaryOpenPorts = column_ifexists(\"summary_open_ports_s\", \"\"), \n        SummaryPDNS = column_ifexists(\"summary_pdns_s\", \"\"),\n        TagsIds = strcat_array(todynamic(column_ifexists(\"tags_id_s\", \"\")), \",\"),\n        TagsNames = strcat_array(todynamic(column_ifexists(\"tags_name_s\", \"\")), \",\")\n| project TimeGenerated, \n        Indicator, \n        IndicatorType, \n        IP, \n        Domain, \n        ASInfo, \n        SummaryWhoIsASName, \n        SummaryWhoIsASN, \n        SummaryWhoIsNetName, \n        SummaryWhoIsOrgName, \n        CountryCodes, \n        SummaryOpenPorts, \n        SummaryPDNS,\n        TagsIds,\n        TagsNames\n};\nCymruScoutDomain\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
      "dependsOn": [
        "[variables('parserObject3')._parserId3]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutDomain')]",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "kind": "Parser",
        "version": "[variables('parserObject3').parserVersion3]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject4').parserTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutDomainData Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject4').parserVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject4')._parserName4]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutDomainData",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutDomainData",
                "query": "let CymruScoutDomainData = view(){\nDomain_Data_CL\n| extend\n       Domain = column_ifexists(\"query_s\", \"\"),\n       IP = column_ifexists(\"ip_s\", \"\"),\n       ['As Info'] = column_ifexists(\"as_info_s\", \"\"),\n       ['Country Codes'] = column_ifexists(\"country_codes_s\", \"\"),\n       ['Comms Total'] = column_ifexists(\"summary_comms_total_d\", \"\")\n| project \n       Domain,\n       IP,\n       TimeGenerated,\n       ['As Info'],\n       ['Country Codes'],\n       ['Comms Total']\n};\nCymruScoutDomainData\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
              "dependsOn": [
                "[variables('parserObject4')._parserId4]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutDomainData')]",
                "contentId": "[variables('parserObject4').parserContentId4]",
                "kind": "Parser",
                "version": "[variables('parserObject4').parserVersion4]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutDomainData",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "version": "[variables('parserObject4').parserVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject4')._parserName4]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutDomainData",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutDomainData",
        "query": "let CymruScoutDomainData = view(){\nDomain_Data_CL\n| extend\n       Domain = column_ifexists(\"query_s\", \"\"),\n       IP = column_ifexists(\"ip_s\", \"\"),\n       ['As Info'] = column_ifexists(\"as_info_s\", \"\"),\n       ['Country Codes'] = column_ifexists(\"country_codes_s\", \"\"),\n       ['Comms Total'] = column_ifexists(\"summary_comms_total_d\", \"\")\n| project \n       Domain,\n       IP,\n       TimeGenerated,\n       ['As Info'],\n       ['Country Codes'],\n       ['Comms Total']\n};\nCymruScoutDomainData\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
      "dependsOn": [
        "[variables('parserObject4')._parserId4]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutDomainData')]",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "kind": "Parser",
        "version": "[variables('parserObject4').parserVersion4]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject5').parserTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutIdentity Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject5').parserVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject5')._parserName5]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutIdentity",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutIdentity",
                "query": "let CymruScoutIdentity = view() {\nIdentity_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Asn = column_ifexists(\"asn_d\", \"\"),\n    ['Reverse Hostnames'] = column_ifexists(\"reverse_hostnames_s\", \"\"),\n    ['As Name'] = column_ifexists(\"as_name_s\", \"\"),\n    ['Net Name'] = column_ifexists(\"net_name_s\", \"\"),\n    ['Org Name'] = column_ifexists(\"org_name_s\", \"\")\n| project\n    IP,\n    Asn,\n    TimeGenerated,\n    ['Reverse Hostnames'],\n    ['As Name'],\n    ['Net Name'],\n    ['Org Name']\n};\nCymruScoutIdentity\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject5')._parserId5,'/'))))]",
              "dependsOn": [
                "[variables('parserObject5')._parserId5]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutIdentity')]",
                "contentId": "[variables('parserObject5').parserContentId5]",
                "kind": "Parser",
                "version": "[variables('parserObject5').parserVersion5]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject5').parserContentId5]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutIdentity",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject5').parserContentId5,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject5').parserContentId5,'-', '1.0.0')))]",
        "version": "[variables('parserObject5').parserVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject5')._parserName5]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutIdentity",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutIdentity",
        "query": "let CymruScoutIdentity = view() {\nIdentity_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Asn = column_ifexists(\"asn_d\", \"\"),\n    ['Reverse Hostnames'] = column_ifexists(\"reverse_hostnames_s\", \"\"),\n    ['As Name'] = column_ifexists(\"as_name_s\", \"\"),\n    ['Net Name'] = column_ifexists(\"net_name_s\", \"\"),\n    ['Org Name'] = column_ifexists(\"org_name_s\", \"\")\n| project\n    IP,\n    Asn,\n    TimeGenerated,\n    ['Reverse Hostnames'],\n    ['As Name'],\n    ['Net Name'],\n    ['Org Name']\n};\nCymruScoutIdentity\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject5')._parserId5,'/'))))]",
      "dependsOn": [
        "[variables('parserObject5')._parserId5]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutIdentity')]",
        "contentId": "[variables('parserObject5').parserContentId5]",
        "kind": "Parser",
        "version": "[variables('parserObject5').parserVersion5]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject6').parserTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutIP Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject6').parserVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject6')._parserName6]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutIP",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutIP",
                "query": "let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator: string, IP: string, Insights: string, InsightsOverallRating: string, SummaryWhoIsASName: string, SummaryWhoIsASN: string, SummaryWhoIsNetName: string, SummaryWhoIsOrgName: string, SummaryReverseHostNames: string, IdentityASN: string, IdentityASName: string, IdentityNetName: string, IdentityOrgName: string, ASInfo: string, IPCountryCode: string, IdentityReverseHostNames: string, TagsIds: string, TagsNames: string, IPPdnsDomain: string, PDNSDetails: dynamic, OpenPorts:string, OpenPortsDetails: dynamic, ProtocolID: string, ProtocolType: string, OpenPortServices: string , CertificateDetails: string , FingerprintsDetails: string) [];\nlet CymruScoutIP = view(){\nlet pdnsfields = Cymru_Scout_IP_Data_Summary_PDNS_CL\n| summarize arg_max(TimeGenerated, *) by ip_s, domain_s\n| extend domain_s = column_ifexists(\"domain_s\", \"\"),\n        event_count_d = column_ifexists(\"event_count_d\", \"\")\n| extend PDNSDetailRecord = bag_pack(\"domain\", domain_s,\"event_count\", toint(event_count_d))\n| summarize IPPdnsDomain = strcat_array(make_list(domain_s), \",\"), PDNSDetails = make_list(PDNSDetailRecord) by ip_s;\nlet open_portsfields = Cymru_Scout_IP_Data_Summary_OpenPorts_CL\n| summarize arg_max(TimeGenerated, *) by ip_s, port_d\n| extend port_d = column_ifexists(\"port_d\", \"\"), protocol_d = column_ifexists(\"protocol_d\", \"\"), protocol_text_s = column_ifexists(\"protocol_text_s\", \"\"), service_s = column_ifexists(\"service_s\", \"\"), event_count_d = column_ifexists(\"event_count_d\", \"\")\n| extend OpenPortsRecord = bag_pack(\"port\", toint(port_d), \"protocol\", toint(protocol_d), \"protocol_text\", protocol_text_s, \"event_count\", toint(event_count_d))\n| summarize OpenPorts = strcat_array(make_list(toint(port_d)), \",\"), ProtocolID = strcat_array(make_list(toint(protocol_d)), \",\"), ProtocolType = strcat_array(make_list(protocol_text_s), \",\"), OpenPortServices = strcat_array(make_list(service_s), \",\"), OpenPortsDetails = make_list(OpenPortsRecord) by ip_s;\nlet certificates = Cymru_Scout_IP_Data_Summary_Certs_CL\n| summarize arg_max(TimeGenerated, *) by ip_s, port_d, md5_g\n| extend issuer_s = column_ifexists(\"issuer_s\", \"\"), issuer_common_name_s = column_ifexists(\"issuer_common_name_s\", \"\"), common_name_s = column_ifexists(\"common_name_s\", \"\"), subject_s = column_ifexists(\"subject_s\", \"\"), port_d = column_ifexists(\"port_d\", \"\"), first_seen_s = column_ifexists(\"first_seen_s\", \"\"), last_seen_s = column_ifexists(\"last_seen_s\", \"\"), self_signed_b = column_ifexists(\"self_signed_b\", \"\"), not_before_s = column_ifexists(\"not_before_s\", \"\"), not_after_s = column_ifexists(\"not_after_s\", \"\"), valid_days_d = column_ifexists(\"valid_days_d\", \"\"), md5_g = column_ifexists(\"md5_g\", \"\"), sha1_s = column_ifexists(\"sha1_s\", \"\"), sha256_s = column_ifexists(\"sha256_s\", \"\"), css_color_s = column_ifexists(\"css_color_s\", \"\")\n| extend Certificates = bag_pack(\"issuer\",issuer_s, \"issuer_common_name\",issuer_common_name_s, \"common_name\", common_name_s, \"subject\",subject_s, \"port\",toint(port_d), \"first_seen\", first_seen_s, \"last_seen\", last_seen_s, \"self_signed\",self_signed_b, \"not_before\", not_before_s, \"not_after\", not_after_s, \"valid_days\", toint(valid_days_d), \"md5\", md5_g, \"sha1\", sha1_s, \"sha256\", sha256_s, \"css_color\", css_color_s)\n| summarize CertificateDetails = strcat_array(make_list(Certificates), \",\") by ip_s;\nlet fingerprints = Cymru_Scout_IP_Data_Summary_Fingerprints_CL\n| summarize arg_max(TimeGenerated, *) by ip_s, signature_g\n| extend type_s = column_ifexists(\"type_s\", \"\"), signature_g = column_ifexists(\"signature_g\", \"\"), port_d = column_ifexists(\"port_d\", \"\"), first_seen_s = column_ifexists(\"first_seen_s\", \"\"), last_seen_s = column_ifexists(\"last_seen_s\", \"\"), count_d = column_ifexists(\"count_d\", \"\")\n| extend Fingerprints = bag_pack(\"type\", type_s, \"signature\", signature_g, \"port\", toint(port_d), \"first_seen\", first_seen_s, \"last_seen\", last_seen_s, \"count\", toint(count_d))\n| summarize FingerprintsDetails = strcat_array(make_list(Fingerprints), \",\") by ip_s;\nunion isfuzzy=true dummy_table,\n(Cymru_Scout_IP_Data_Details_CL\n| summarize arg_max(TimeGenerated, *) by ip_s\n| join kind=leftouter (Cymru_Scout_IP_Data_Summary_Details_CL| summarize arg_max(TimeGenerated, *) by ip_s) on ip_s\n| join kind=leftouter pdnsfields on ip_s\n| join kind=leftouter open_portsfields on ip_s\n| join kind=leftouter certificates on ip_s\n| join kind=leftouter fingerprints on ip_s),\n( Cymru_Scout_IP_Data_Foundation_CL)\n| summarize arg_max(TimeGenerated, *) by ip_s\n| extend IndicatorType=\"IP\", \n        Indicator=column_ifexists(\"ip_s\", \"\"), \n        IP = column_ifexists(\"ip_s\", \"\"), \n        Insights = column_ifexists(\"insights_insights_s\", \"\"), \n        InsightsOverallRating = column_ifexists(\"insights_overall_rating_s\", \"\"), \n        SummaryWhoIsASName = column_ifexists(\"whois_as_name_s1\", \"\"), \n        SummaryWhoIsASN = column_ifexists(\"whois_asn_d1\", \"\"), \n        SummaryWhoIsNetName = column_ifexists(\"whois_net_name_s1\", \"\"), \n        SummaryWhoIsOrgName = column_ifexists(\"whois_org_name_s1\", \"\"), \n        SummaryReverseHostNames = strcat_array(todynamic(column_ifexists(\"reverse_hostnames_s\", \"\")), \",\"), \n        IdentityASN = column_ifexists(\"identity_asn_d\", \"\"), \n        IdentityASName = column_ifexists(\"identity_as_name_s\", \"\"),\n        IdentityNetName = column_ifexists(\"identity_net_name_s\", \"\"), \n        IdentityOrgName = column_ifexists(\"identity_org_name_s\", \"\"), \n        ASInfo = column_ifexists(\"as_info_s\", \"\"), \n        IPCountryCode = coalesce(column_ifexists(\"country_code_s\", \"\"), column_ifexists(\"geo_ip_cc_s\", \"\")), \n        IdentityReverseHostNames = strcat_array(todynamic(column_ifexists(\"identity_reverse_hostnames_s\", \"\")), \",\"),\n        TagsIds = strcat_array(todynamic(column_ifexists(\"tags_id_s\", \"\")), \",\"),\n        TagsNames = strcat_array(todynamic(column_ifexists(\"tags_name_s\", \"\")), \",\")\n| project TimeGenerated,\n        IndicatorType, \n        Indicator, \n        IP, \n        Insights, \n        InsightsOverallRating, \n        SummaryWhoIsASName, \n        SummaryWhoIsASN, \n        SummaryWhoIsNetName, \n        SummaryWhoIsOrgName, \n        SummaryReverseHostNames, \n        IdentityASN, \n        IdentityASName,\n        IdentityNetName, \n        IdentityOrgName, \n        ASInfo, \n        IPCountryCode, \n        IdentityReverseHostNames, \n        IPPdnsDomain, \n        PDNSDetails,\n        OpenPorts, \n        OpenPortsDetails, \n        ProtocolID, \n        ProtocolType, \n        OpenPortServices, \n        CertificateDetails, \n        FingerprintsDetails,\n        TagsIds,\n        TagsNames\n};\nCymruScoutIP\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject6')._parserId6,'/'))))]",
              "dependsOn": [
                "[variables('parserObject6')._parserId6]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutIP')]",
                "contentId": "[variables('parserObject6').parserContentId6]",
                "kind": "Parser",
                "version": "[variables('parserObject6').parserVersion6]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject6').parserContentId6]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutIP",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject6').parserContentId6,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject6').parserContentId6,'-', '1.0.0')))]",
        "version": "[variables('parserObject6').parserVersion6]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject6')._parserName6]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutIP",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutIP",
        "query": "let dummy_table = datatable(TimeGenerated: datetime, IndicatorType: string, Indicator: string, IP: string, Insights: string, InsightsOverallRating: string, SummaryWhoIsASName: string, SummaryWhoIsASN: string, SummaryWhoIsNetName: string, SummaryWhoIsOrgName: string, SummaryReverseHostNames: string, IdentityASN: string, IdentityASName: string, IdentityNetName: string, IdentityOrgName: string, ASInfo: string, IPCountryCode: string, IdentityReverseHostNames: string, TagsIds: string, TagsNames: string, IPPdnsDomain: string, PDNSDetails: dynamic, OpenPorts:string, OpenPortsDetails: dynamic, ProtocolID: string, ProtocolType: string, OpenPortServices: string , CertificateDetails: string , FingerprintsDetails: string) [];\nlet CymruScoutIP = view(){\nlet pdnsfields = Cymru_Scout_IP_Data_Summary_PDNS_CL\n| summarize arg_max(TimeGenerated, *) by ip_s, domain_s\n| extend domain_s = column_ifexists(\"domain_s\", \"\"),\n        event_count_d = column_ifexists(\"event_count_d\", \"\")\n| extend PDNSDetailRecord = bag_pack(\"domain\", domain_s,\"event_count\", toint(event_count_d))\n| summarize IPPdnsDomain = strcat_array(make_list(domain_s), \",\"), PDNSDetails = make_list(PDNSDetailRecord) by ip_s;\nlet open_portsfields = Cymru_Scout_IP_Data_Summary_OpenPorts_CL\n| summarize arg_max(TimeGenerated, *) by ip_s, port_d\n| extend port_d = column_ifexists(\"port_d\", \"\"), protocol_d = column_ifexists(\"protocol_d\", \"\"), protocol_text_s = column_ifexists(\"protocol_text_s\", \"\"), service_s = column_ifexists(\"service_s\", \"\"), event_count_d = column_ifexists(\"event_count_d\", \"\")\n| extend OpenPortsRecord = bag_pack(\"port\", toint(port_d), \"protocol\", toint(protocol_d), \"protocol_text\", protocol_text_s, \"event_count\", toint(event_count_d))\n| summarize OpenPorts = strcat_array(make_list(toint(port_d)), \",\"), ProtocolID = strcat_array(make_list(toint(protocol_d)), \",\"), ProtocolType = strcat_array(make_list(protocol_text_s), \",\"), OpenPortServices = strcat_array(make_list(service_s), \",\"), OpenPortsDetails = make_list(OpenPortsRecord) by ip_s;\nlet certificates = Cymru_Scout_IP_Data_Summary_Certs_CL\n| summarize arg_max(TimeGenerated, *) by ip_s, port_d, md5_g\n| extend issuer_s = column_ifexists(\"issuer_s\", \"\"), issuer_common_name_s = column_ifexists(\"issuer_common_name_s\", \"\"), common_name_s = column_ifexists(\"common_name_s\", \"\"), subject_s = column_ifexists(\"subject_s\", \"\"), port_d = column_ifexists(\"port_d\", \"\"), first_seen_s = column_ifexists(\"first_seen_s\", \"\"), last_seen_s = column_ifexists(\"last_seen_s\", \"\"), self_signed_b = column_ifexists(\"self_signed_b\", \"\"), not_before_s = column_ifexists(\"not_before_s\", \"\"), not_after_s = column_ifexists(\"not_after_s\", \"\"), valid_days_d = column_ifexists(\"valid_days_d\", \"\"), md5_g = column_ifexists(\"md5_g\", \"\"), sha1_s = column_ifexists(\"sha1_s\", \"\"), sha256_s = column_ifexists(\"sha256_s\", \"\"), css_color_s = column_ifexists(\"css_color_s\", \"\")\n| extend Certificates = bag_pack(\"issuer\",issuer_s, \"issuer_common_name\",issuer_common_name_s, \"common_name\", common_name_s, \"subject\",subject_s, \"port\",toint(port_d), \"first_seen\", first_seen_s, \"last_seen\", last_seen_s, \"self_signed\",self_signed_b, \"not_before\", not_before_s, \"not_after\", not_after_s, \"valid_days\", toint(valid_days_d), \"md5\", md5_g, \"sha1\", sha1_s, \"sha256\", sha256_s, \"css_color\", css_color_s)\n| summarize CertificateDetails = strcat_array(make_list(Certificates), \",\") by ip_s;\nlet fingerprints = Cymru_Scout_IP_Data_Summary_Fingerprints_CL\n| summarize arg_max(TimeGenerated, *) by ip_s, signature_g\n| extend type_s = column_ifexists(\"type_s\", \"\"), signature_g = column_ifexists(\"signature_g\", \"\"), port_d = column_ifexists(\"port_d\", \"\"), first_seen_s = column_ifexists(\"first_seen_s\", \"\"), last_seen_s = column_ifexists(\"last_seen_s\", \"\"), count_d = column_ifexists(\"count_d\", \"\")\n| extend Fingerprints = bag_pack(\"type\", type_s, \"signature\", signature_g, \"port\", toint(port_d), \"first_seen\", first_seen_s, \"last_seen\", last_seen_s, \"count\", toint(count_d))\n| summarize FingerprintsDetails = strcat_array(make_list(Fingerprints), \",\") by ip_s;\nunion isfuzzy=true dummy_table,\n(Cymru_Scout_IP_Data_Details_CL\n| summarize arg_max(TimeGenerated, *) by ip_s\n| join kind=leftouter (Cymru_Scout_IP_Data_Summary_Details_CL| summarize arg_max(TimeGenerated, *) by ip_s) on ip_s\n| join kind=leftouter pdnsfields on ip_s\n| join kind=leftouter open_portsfields on ip_s\n| join kind=leftouter certificates on ip_s\n| join kind=leftouter fingerprints on ip_s),\n( Cymru_Scout_IP_Data_Foundation_CL)\n| summarize arg_max(TimeGenerated, *) by ip_s\n| extend IndicatorType=\"IP\", \n        Indicator=column_ifexists(\"ip_s\", \"\"), \n        IP = column_ifexists(\"ip_s\", \"\"), \n        Insights = column_ifexists(\"insights_insights_s\", \"\"), \n        InsightsOverallRating = column_ifexists(\"insights_overall_rating_s\", \"\"), \n        SummaryWhoIsASName = column_ifexists(\"whois_as_name_s1\", \"\"), \n        SummaryWhoIsASN = column_ifexists(\"whois_asn_d1\", \"\"), \n        SummaryWhoIsNetName = column_ifexists(\"whois_net_name_s1\", \"\"), \n        SummaryWhoIsOrgName = column_ifexists(\"whois_org_name_s1\", \"\"), \n        SummaryReverseHostNames = strcat_array(todynamic(column_ifexists(\"reverse_hostnames_s\", \"\")), \",\"), \n        IdentityASN = column_ifexists(\"identity_asn_d\", \"\"), \n        IdentityASName = column_ifexists(\"identity_as_name_s\", \"\"),\n        IdentityNetName = column_ifexists(\"identity_net_name_s\", \"\"), \n        IdentityOrgName = column_ifexists(\"identity_org_name_s\", \"\"), \n        ASInfo = column_ifexists(\"as_info_s\", \"\"), \n        IPCountryCode = coalesce(column_ifexists(\"country_code_s\", \"\"), column_ifexists(\"geo_ip_cc_s\", \"\")), \n        IdentityReverseHostNames = strcat_array(todynamic(column_ifexists(\"identity_reverse_hostnames_s\", \"\")), \",\"),\n        TagsIds = strcat_array(todynamic(column_ifexists(\"tags_id_s\", \"\")), \",\"),\n        TagsNames = strcat_array(todynamic(column_ifexists(\"tags_name_s\", \"\")), \",\")\n| project TimeGenerated,\n        IndicatorType, \n        Indicator, \n        IP, \n        Insights, \n        InsightsOverallRating, \n        SummaryWhoIsASName, \n        SummaryWhoIsASN, \n        SummaryWhoIsNetName, \n        SummaryWhoIsOrgName, \n        SummaryReverseHostNames, \n        IdentityASN, \n        IdentityASName,\n        IdentityNetName, \n        IdentityOrgName, \n        ASInfo, \n        IPCountryCode, \n        IdentityReverseHostNames, \n        IPPdnsDomain, \n        PDNSDetails,\n        OpenPorts, \n        OpenPortsDetails, \n        ProtocolID, \n        ProtocolType, \n        OpenPortServices, \n        CertificateDetails, \n        FingerprintsDetails,\n        TagsIds,\n        TagsNames\n};\nCymruScoutIP\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject6')._parserId6,'/'))))]",
      "dependsOn": [
        "[variables('parserObject6')._parserId6]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutIP')]",
        "contentId": "[variables('parserObject6').parserContentId6]",
        "kind": "Parser",
        "version": "[variables('parserObject6').parserVersion6]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject7').parserTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutProtoByIP Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject7').parserVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject7')._parserName7]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutProtoByIP",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutProtoByIP",
                "query": "let CymruScoutProtoByIP = view() {\nProto_By_IP_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Total = column_ifexists(\"total_d\", \"\"),\n    size = column_ifexists(\"size_d\", \"\"),\n    Date = column_ifexists(\"data_dates_s\", \"\"),\n    Protocols = column_ifexists(\"data_protocols_s\", \"\"),\n    ['Request Id' ] = column_ifexists(\"request_id_g\", \"\"),\n    ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n    ['End Date'] = column_ifexists(\"end_date_s\", \"\"),\n    ['Proto By Date'] = column_ifexists(\"data_proto_by_date_s\", \"\")\n| project\n    IP,\n    Total,\n    size,\n    Date,\n    Protocols,\n    TimeGenerated,\n    ['Request Id'],\n    ['Start Date'],\n    ['End Date'],\n    ['Proto By Date']\n};\nCymruScoutProtoByIP\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject7')._parserId7,'/'))))]",
              "dependsOn": [
                "[variables('parserObject7')._parserId7]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutProtoByIP')]",
                "contentId": "[variables('parserObject7').parserContentId7]",
                "kind": "Parser",
                "version": "[variables('parserObject7').parserVersion7]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject7').parserContentId7]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutProtoByIP",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject7').parserContentId7,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject7').parserContentId7,'-', '1.0.0')))]",
        "version": "[variables('parserObject7').parserVersion7]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject7')._parserName7]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutProtoByIP",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutProtoByIP",
        "query": "let CymruScoutProtoByIP = view() {\nProto_By_IP_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Total = column_ifexists(\"total_d\", \"\"),\n    size = column_ifexists(\"size_d\", \"\"),\n    Date = column_ifexists(\"data_dates_s\", \"\"),\n    Protocols = column_ifexists(\"data_protocols_s\", \"\"),\n    ['Request Id' ] = column_ifexists(\"request_id_g\", \"\"),\n    ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n    ['End Date'] = column_ifexists(\"end_date_s\", \"\"),\n    ['Proto By Date'] = column_ifexists(\"data_proto_by_date_s\", \"\")\n| project\n    IP,\n    Total,\n    size,\n    Date,\n    Protocols,\n    TimeGenerated,\n    ['Request Id'],\n    ['Start Date'],\n    ['End Date'],\n    ['Proto By Date']\n};\nCymruScoutProtoByIP\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject7')._parserId7,'/'))))]",
      "dependsOn": [
        "[variables('parserObject7')._parserId7]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutProtoByIP')]",
        "contentId": "[variables('parserObject7').parserContentId7]",
        "kind": "Parser",
        "version": "[variables('parserObject7').parserVersion7]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject8').parserTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutSummary Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject8').parserVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject8')._parserName8]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutSummary",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutSummary",
                "query": "let CymruScoutSummary = view(){\nSummary_Details_CL\n| extend\n        Insights = column_ifexists(\"insights_insights_s\", \"\"),\n        IP = column_ifexists(\"ip_s\", \"\"),\n        Tags = column_ifexists(\"tags_s\", \"\"),\n        ['Reverse Host Name'] = column_ifexists(\"reverse_hostnames_s\", \"\"),\n        ['BGP ASN'] = column_ifexists(\"bgp_asn_d\", \"\"),\n        ['BGP As Name'] = column_ifexists(\"bgp_asname_s\", \"\"),\n        ['End Date'] = column_ifexists(\"end_date_s\", \"\"),\n        ['Geo IP CC'] = column_ifexists(\"geo_ip_cc_s\", \"\"),\n        ['Overall Rating'] = column_ifexists(\"insights_overall_rating_s\", \"\"),\n        ['Total Insights'] = column_ifexists(\"insights_total_d\", \"\"),\n        ['Total Open Ports'] = column_ifexists(\"insights_total_d\", \"\"),\n        ['Unique Ports'] = column_ifexists(\"open_ports_unique_ports_d\", \"\"),\n        ['Total PDNS'] = column_ifexists(\"pdns_total_d\", \"\"),\n        ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n        ['Tag Timeline Data'] = column_ifexists('tag_timeline_data_s', \"\"),\n        ['Total Summary'] = column_ifexists(\"total_d\", \"\"),\n        ['Whois As Name'] = column_ifexists(\"whois_as_name_s\", \"\"),\n        ['Whois Asn'] = column_ifexists(\"whois_asn_d\", \"\"),\n        ['Whois Net Name'] = column_ifexists(\"whois_net_name_s\", \"\"),\n        ['Whois Org Name'] = column_ifexists(\"whois_org_name_s\", \"\")\n| project\n        Insights,\n        IP,\n        Tags,\n        TimeGenerated,\n        ['Reverse Host Name'],\n        ['BGP ASN'],\n        ['BGP As Name'],\n        ['End Date'],\n        ['Geo IP CC'],\n        ['Overall Rating'],\n        ['Total Insights'],\n        ['Total Open Ports'],\n        ['Unique Ports'],\n        ['Total PDNS'],\n        ['Start Date'],\n        ['Tag Timeline Data'],\n        ['Total Summary'],\n        ['Whois As Name'],\n        ['Whois Asn'],\n        ['Whois Net Name'],\n        ['Whois Org Name']\n};\nCymruScoutSummary\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject8')._parserId8,'/'))))]",
              "dependsOn": [
                "[variables('parserObject8')._parserId8]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummary')]",
                "contentId": "[variables('parserObject8').parserContentId8]",
                "kind": "Parser",
                "version": "[variables('parserObject8').parserVersion8]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject8').parserContentId8]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutSummary",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject8').parserContentId8,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject8').parserContentId8,'-', '1.0.0')))]",
        "version": "[variables('parserObject8').parserVersion8]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject8')._parserName8]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutSummary",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutSummary",
        "query": "let CymruScoutSummary = view(){\nSummary_Details_CL\n| extend\n        Insights = column_ifexists(\"insights_insights_s\", \"\"),\n        IP = column_ifexists(\"ip_s\", \"\"),\n        Tags = column_ifexists(\"tags_s\", \"\"),\n        ['Reverse Host Name'] = column_ifexists(\"reverse_hostnames_s\", \"\"),\n        ['BGP ASN'] = column_ifexists(\"bgp_asn_d\", \"\"),\n        ['BGP As Name'] = column_ifexists(\"bgp_asname_s\", \"\"),\n        ['End Date'] = column_ifexists(\"end_date_s\", \"\"),\n        ['Geo IP CC'] = column_ifexists(\"geo_ip_cc_s\", \"\"),\n        ['Overall Rating'] = column_ifexists(\"insights_overall_rating_s\", \"\"),\n        ['Total Insights'] = column_ifexists(\"insights_total_d\", \"\"),\n        ['Total Open Ports'] = column_ifexists(\"insights_total_d\", \"\"),\n        ['Unique Ports'] = column_ifexists(\"open_ports_unique_ports_d\", \"\"),\n        ['Total PDNS'] = column_ifexists(\"pdns_total_d\", \"\"),\n        ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n        ['Tag Timeline Data'] = column_ifexists('tag_timeline_data_s', \"\"),\n        ['Total Summary'] = column_ifexists(\"total_d\", \"\"),\n        ['Whois As Name'] = column_ifexists(\"whois_as_name_s\", \"\"),\n        ['Whois Asn'] = column_ifexists(\"whois_asn_d\", \"\"),\n        ['Whois Net Name'] = column_ifexists(\"whois_net_name_s\", \"\"),\n        ['Whois Org Name'] = column_ifexists(\"whois_org_name_s\", \"\")\n| project\n        Insights,\n        IP,\n        Tags,\n        TimeGenerated,\n        ['Reverse Host Name'],\n        ['BGP ASN'],\n        ['BGP As Name'],\n        ['End Date'],\n        ['Geo IP CC'],\n        ['Overall Rating'],\n        ['Total Insights'],\n        ['Total Open Ports'],\n        ['Unique Ports'],\n        ['Total PDNS'],\n        ['Start Date'],\n        ['Tag Timeline Data'],\n        ['Total Summary'],\n        ['Whois As Name'],\n        ['Whois Asn'],\n        ['Whois Net Name'],\n        ['Whois Org Name']\n};\nCymruScoutSummary\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject8')._parserId8,'/'))))]",
      "dependsOn": [
        "[variables('parserObject8')._parserId8]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummary')]",
        "contentId": "[variables('parserObject8').parserContentId8]",
        "kind": "Parser",
        "version": "[variables('parserObject8').parserVersion8]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject9').parserTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutSummaryTopCerts Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject9').parserVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject9')._parserName9]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutSummaryTopCerts",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutSummaryTopCerts",
                "query": "let CymruScoutSummaryTopCerts = view(){\nSummary_Details_Top_Certs_Data_CL\n| extend\n        Issuer = column_ifexists(\"issuer_s\", \"\"),\n        Subject = column_ifexists(\"subject_s\", \"\"),\n        MD5 = column_ifexists(\"md5_g\", \"\"),\n        SHA1 = column_ifexists(\"sha1_s\", \"\"),\n        SHA256 = column_ifexists(\"sha256_s\", \"\"),\n        IP = column_ifexists(\"ip_s\", \"\"),\n        Port = column_ifexists(\"port_d\", \"\"),\n        ['Issuer Common Name'] = column_ifexists(\"issuer_common_name_s\", \"\"),\n        ['Common Name'] = column_ifexists(\"common_name_s\", \"\"),\n        ['First Seen'] = column_ifexists(\"first_seen_s\", \"\"),\n        ['Last Seen'] = column_ifexists(\"last_seen_s\", \"\"),\n        ['Self Signed'] = column_ifexists(\"self_signed_b\", \"\"),\n        ['Not Before'] = column_ifexists(\"not_before_s\", \"\"),\n        ['Not After'] = column_ifexists(\"not_after_s\", \"\"),\n        ['Valid Days'] = column_ifexists(\"valid_days_d\", \"\"),\n        ['CSS Color'] = column_ifexists('css_color_s', \"\")\n| project\n        Issuer,\n        Subject,\n        Port,\n        MD5,\n        SHA1,\n        SHA256,\n        IP,\n        TimeGenerated,\n        ['Issuer Common Name'],\n        ['Common Name'],\n        ['First Seen'],\n        ['Last Seen'],\n        ['Self Signed'],\n        ['Not Before'],\n        ['Not After'],\n        ['Valid Days'],\n        ['CSS Color']\n};\nCymruScoutSummaryTopCerts\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject9')._parserId9,'/'))))]",
              "dependsOn": [
                "[variables('parserObject9')._parserId9]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopCerts')]",
                "contentId": "[variables('parserObject9').parserContentId9]",
                "kind": "Parser",
                "version": "[variables('parserObject9').parserVersion9]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject9').parserContentId9]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutSummaryTopCerts",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject9').parserContentId9,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject9').parserContentId9,'-', '1.0.0')))]",
        "version": "[variables('parserObject9').parserVersion9]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject9')._parserName9]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutSummaryTopCerts",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutSummaryTopCerts",
        "query": "let CymruScoutSummaryTopCerts = view(){\nSummary_Details_Top_Certs_Data_CL\n| extend\n        Issuer = column_ifexists(\"issuer_s\", \"\"),\n        Subject = column_ifexists(\"subject_s\", \"\"),\n        MD5 = column_ifexists(\"md5_g\", \"\"),\n        SHA1 = column_ifexists(\"sha1_s\", \"\"),\n        SHA256 = column_ifexists(\"sha256_s\", \"\"),\n        IP = column_ifexists(\"ip_s\", \"\"),\n        Port = column_ifexists(\"port_d\", \"\"),\n        ['Issuer Common Name'] = column_ifexists(\"issuer_common_name_s\", \"\"),\n        ['Common Name'] = column_ifexists(\"common_name_s\", \"\"),\n        ['First Seen'] = column_ifexists(\"first_seen_s\", \"\"),\n        ['Last Seen'] = column_ifexists(\"last_seen_s\", \"\"),\n        ['Self Signed'] = column_ifexists(\"self_signed_b\", \"\"),\n        ['Not Before'] = column_ifexists(\"not_before_s\", \"\"),\n        ['Not After'] = column_ifexists(\"not_after_s\", \"\"),\n        ['Valid Days'] = column_ifexists(\"valid_days_d\", \"\"),\n        ['CSS Color'] = column_ifexists('css_color_s', \"\")\n| project\n        Issuer,\n        Subject,\n        Port,\n        MD5,\n        SHA1,\n        SHA256,\n        IP,\n        TimeGenerated,\n        ['Issuer Common Name'],\n        ['Common Name'],\n        ['First Seen'],\n        ['Last Seen'],\n        ['Self Signed'],\n        ['Not Before'],\n        ['Not After'],\n        ['Valid Days'],\n        ['CSS Color']\n};\nCymruScoutSummaryTopCerts\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject9')._parserId9,'/'))))]",
      "dependsOn": [
        "[variables('parserObject9')._parserId9]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopCerts')]",
        "contentId": "[variables('parserObject9').parserContentId9]",
        "kind": "Parser",
        "version": "[variables('parserObject9').parserVersion9]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject10').parserTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutSummaryTopFingerprints Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject10').parserVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject10')._parserName10]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutSummaryTopFingerprints",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutSummaryTopFingerprints",
                "query": "let CymruScoutSummaryTopFingerprints = view(){\nSummary_Details_Top_Fingerprints_Data_CL\n| extend\n        IP = column_ifexists(\"ip_s\", \"\"),\n        Port = column_ifexists(\"port_d\", \"\"),\n        ['Signature G'] = column_ifexists(\"signature_g\", \"\"),\n        ['Signature S'] = column_ifexists(\"signature_s\", \"\"),\n        ['Signature Type'] = column_ifexists(\"type_s\", \"\"),\n        ['First Seen'] = column_ifexists(\"first_seen_s\", \"\"),\n        ['Last Seen'] = column_ifexists(\"last_seen_s\", \"\"),\n        ['Fingerprint Count'] = column_ifexists('count_d', \"\")\n| project\n        Port,\n        IP,\n        TimeGenerated,\n        ['Signature G'],\n        ['Signature S'],\n        ['Signature Type'],\n        ['First Seen'],\n        ['Last Seen'],\n        ['Fingerprint Count']\n};\nCymruScoutSummaryTopFingerprints\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject10')._parserId10,'/'))))]",
              "dependsOn": [
                "[variables('parserObject10')._parserId10]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopFingerprints')]",
                "contentId": "[variables('parserObject10').parserContentId10]",
                "kind": "Parser",
                "version": "[variables('parserObject10').parserVersion10]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject10').parserContentId10]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutSummaryTopFingerprints",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject10').parserContentId10,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject10').parserContentId10,'-', '1.0.0')))]",
        "version": "[variables('parserObject10').parserVersion10]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject10')._parserName10]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutSummaryTopFingerprints",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutSummaryTopFingerprints",
        "query": "let CymruScoutSummaryTopFingerprints = view(){\nSummary_Details_Top_Fingerprints_Data_CL\n| extend\n        IP = column_ifexists(\"ip_s\", \"\"),\n        Port = column_ifexists(\"port_d\", \"\"),\n        ['Signature G'] = column_ifexists(\"signature_g\", \"\"),\n        ['Signature S'] = column_ifexists(\"signature_s\", \"\"),\n        ['Signature Type'] = column_ifexists(\"type_s\", \"\"),\n        ['First Seen'] = column_ifexists(\"first_seen_s\", \"\"),\n        ['Last Seen'] = column_ifexists(\"last_seen_s\", \"\"),\n        ['Fingerprint Count'] = column_ifexists('count_d', \"\")\n| project\n        Port,\n        IP,\n        TimeGenerated,\n        ['Signature G'],\n        ['Signature S'],\n        ['Signature Type'],\n        ['First Seen'],\n        ['Last Seen'],\n        ['Fingerprint Count']\n};\nCymruScoutSummaryTopFingerprints\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject10')._parserId10,'/'))))]",
      "dependsOn": [
        "[variables('parserObject10')._parserId10]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopFingerprints')]",
        "contentId": "[variables('parserObject10').parserContentId10]",
        "kind": "Parser",
        "version": "[variables('parserObject10').parserVersion10]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject11').parserTemplateSpecName11]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutSummaryTopOpenPorts Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject11').parserVersion11]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject11')._parserName11]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutSummaryTopOpenPorts",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutSummaryTopOpenPorts",
                "query": "let CymruScoutSummaryTopOpenPorts = view(){\nSummary_Details_Top_Open_Ports_Data_CL\n| extend\n        IP = column_ifexists(\"ip_s\", \"\"),\n        Protocol = column_ifexists(\"protocol_d\", \"\"),\n        Port = column_ifexists(\"port_d\", \"\"),\n        Service = column_ifexists(\"service_s\", \"\"),\n        ['Event Count'] = column_ifexists(\"event_count_d\", \"\"),\n        ['Protocol Name'] = column_ifexists(\"protocol_text_s\", \"\"),\n        ['First Seen'] = column_ifexists(\"first_seen_s\", \"\"),\n        ['Last Seen'] = column_ifexists(\"last_seen_s\", \"\"),\n        ['CSS Color'] = column_ifexists('css_color_s', \"\")\n| project\n        IP,\n        Protocol,\n        Port,\n        Service,\n        TimeGenerated,\n        ['Event Count'],\n        ['Protocol Name'],\n        ['First Seen'],\n        ['Last Seen'],\n        ['CSS Color']\n};\nCymruScoutSummaryTopOpenPorts\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject11')._parserId11,'/'))))]",
              "dependsOn": [
                "[variables('parserObject11')._parserId11]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopOpenPorts')]",
                "contentId": "[variables('parserObject11').parserContentId11]",
                "kind": "Parser",
                "version": "[variables('parserObject11').parserVersion11]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject11').parserContentId11]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutSummaryTopOpenPorts",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject11').parserContentId11,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject11').parserContentId11,'-', '1.0.0')))]",
        "version": "[variables('parserObject11').parserVersion11]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject11')._parserName11]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutSummaryTopOpenPorts",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutSummaryTopOpenPorts",
        "query": "let CymruScoutSummaryTopOpenPorts = view(){\nSummary_Details_Top_Open_Ports_Data_CL\n| extend\n        IP = column_ifexists(\"ip_s\", \"\"),\n        Protocol = column_ifexists(\"protocol_d\", \"\"),\n        Port = column_ifexists(\"port_d\", \"\"),\n        Service = column_ifexists(\"service_s\", \"\"),\n        ['Event Count'] = column_ifexists(\"event_count_d\", \"\"),\n        ['Protocol Name'] = column_ifexists(\"protocol_text_s\", \"\"),\n        ['First Seen'] = column_ifexists(\"first_seen_s\", \"\"),\n        ['Last Seen'] = column_ifexists(\"last_seen_s\", \"\"),\n        ['CSS Color'] = column_ifexists('css_color_s', \"\")\n| project\n        IP,\n        Protocol,\n        Port,\n        Service,\n        TimeGenerated,\n        ['Event Count'],\n        ['Protocol Name'],\n        ['First Seen'],\n        ['Last Seen'],\n        ['CSS Color']\n};\nCymruScoutSummaryTopOpenPorts\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject11')._parserId11,'/'))))]",
      "dependsOn": [
        "[variables('parserObject11')._parserId11]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopOpenPorts')]",
        "contentId": "[variables('parserObject11').parserContentId11]",
        "kind": "Parser",
        "version": "[variables('parserObject11').parserVersion11]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject12').parserTemplateSpecName12]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutSummaryTopPdns Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject12').parserVersion12]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject12')._parserName12]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutSummaryTopPdns",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutSummaryTopPdns",
                "query": "let CymruScoutSummaryTopPdns = view() {\nSummary_Details_Top_Pdns_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Domain = column_ifexists(\"domain_s\", \"\"),\n    ['Event Count'] = column_ifexists(\"event_count_d\", \"\"),\n    ['First Seen'] = column_ifexists(\"first_seen_s\", \"\"),\n    ['Last Seen'] = column_ifexists(\"last_seen_s\", \"\"),\n    ['CSS Color'] = column_ifexists(\"css_color_s\", \"\")\n| project\n    IP,\n    Domain,\n    TimeGenerated,\n    ['Event Count'],\n    ['First Seen'],\n    ['Last Seen'],\n    ['CSS Color']\n};\nCymruScoutSummaryTopPdns\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject12')._parserId12,'/'))))]",
              "dependsOn": [
                "[variables('parserObject12')._parserId12]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopPdns')]",
                "contentId": "[variables('parserObject12').parserContentId12]",
                "kind": "Parser",
                "version": "[variables('parserObject12').parserVersion12]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject12').parserContentId12]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutSummaryTopPdns",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject12').parserContentId12,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject12').parserContentId12,'-', '1.0.0')))]",
        "version": "[variables('parserObject12').parserVersion12]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject12')._parserName12]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutSummaryTopPdns",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutSummaryTopPdns",
        "query": "let CymruScoutSummaryTopPdns = view() {\nSummary_Details_Top_Pdns_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Domain = column_ifexists(\"domain_s\", \"\"),\n    ['Event Count'] = column_ifexists(\"event_count_d\", \"\"),\n    ['First Seen'] = column_ifexists(\"first_seen_s\", \"\"),\n    ['Last Seen'] = column_ifexists(\"last_seen_s\", \"\"),\n    ['CSS Color'] = column_ifexists(\"css_color_s\", \"\")\n| project\n    IP,\n    Domain,\n    TimeGenerated,\n    ['Event Count'],\n    ['First Seen'],\n    ['Last Seen'],\n    ['CSS Color']\n};\nCymruScoutSummaryTopPdns\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject12')._parserId12,'/'))))]",
      "dependsOn": [
        "[variables('parserObject12')._parserId12]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutSummaryTopPdns')]",
        "contentId": "[variables('parserObject12').parserContentId12]",
        "kind": "Parser",
        "version": "[variables('parserObject12').parserVersion12]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject13').parserTemplateSpecName13]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutTopAsnsByIP Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject13').parserVersion13]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject13')._parserName13]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutTopAsnsByIP",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutTopAsnsByIP",
                "query": "let CymruScoutTopAsnsByIP = view() {\nTop_Asns_By_IP_Data_CL\n| extend\n    Total = column_ifexists(\"total_d\", \"\"),\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Size = column_ifexists(\"size_d\", \"\"),\n    Dates = column_ifexists(\"data_dates_s\", \"\"),\n    Datasets = column_ifexists(\"data_datasets_s\", \"\"),\n    ['Request Id'] = column_ifexists(\"request_id_g\", \"\"),\n    ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n    ['End Date'] = column_ifexists(\"end_date_s\", \"\")\n| project\n    Total,\n    IP,\n    Size,\n    Dates,\n    Datasets,\n    TimeGenerated,\n    ['Request Id'],\n    ['Start Date'],\n    ['End Date']\n};\nCymruScoutTopAsnsByIP\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject13')._parserId13,'/'))))]",
              "dependsOn": [
                "[variables('parserObject13')._parserId13]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopAsnsByIP')]",
                "contentId": "[variables('parserObject13').parserContentId13]",
                "kind": "Parser",
                "version": "[variables('parserObject13').parserVersion13]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject13').parserContentId13]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutTopAsnsByIP",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject13').parserContentId13,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject13').parserContentId13,'-', '1.0.0')))]",
        "version": "[variables('parserObject13').parserVersion13]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject13')._parserName13]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutTopAsnsByIP",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutTopAsnsByIP",
        "query": "let CymruScoutTopAsnsByIP = view() {\nTop_Asns_By_IP_Data_CL\n| extend\n    Total = column_ifexists(\"total_d\", \"\"),\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Size = column_ifexists(\"size_d\", \"\"),\n    Dates = column_ifexists(\"data_dates_s\", \"\"),\n    Datasets = column_ifexists(\"data_datasets_s\", \"\"),\n    ['Request Id'] = column_ifexists(\"request_id_g\", \"\"),\n    ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n    ['End Date'] = column_ifexists(\"end_date_s\", \"\")\n| project\n    Total,\n    IP,\n    Size,\n    Dates,\n    Datasets,\n    TimeGenerated,\n    ['Request Id'],\n    ['Start Date'],\n    ['End Date']\n};\nCymruScoutTopAsnsByIP\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject13')._parserId13,'/'))))]",
      "dependsOn": [
        "[variables('parserObject13')._parserId13]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopAsnsByIP')]",
        "contentId": "[variables('parserObject13').parserContentId13]",
        "kind": "Parser",
        "version": "[variables('parserObject13').parserVersion13]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject14').parserTemplateSpecName14]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutTopCountryCodesByIP Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject14').parserVersion14]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject14')._parserName14]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutTopCountryCodesByIP",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutTopCountryCodesByIP",
                "query": "let CymruScoutTopCountryCodesByIP = view() {\nTop_Country_Codes_By_IP_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Size = column_ifexists(\"size_d\", \"\"),\n    Total = column_ifexists(\"total_d\", \"\"),\n    Dates = column_ifexists(\"data_dates_s\", \"\"),\n    Datasets = column_ifexists(\"data_datasets_s\", \"\"),\n    ['Request Id'] = column_ifexists(\"request_id_g\", \"\"),\n    ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n    ['End Date'] = column_ifexists(\"end_date_s\", \"\")\n| project\n    IP,\n    Size,\n    Total,\n    Dates,\n    Datasets,\n    TimeGenerated,\n    ['Request Id'],\n    ['Start Date'],\n    ['End Date']\n};\nCymruScoutTopCountryCodesByIP\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject14')._parserId14,'/'))))]",
              "dependsOn": [
                "[variables('parserObject14')._parserId14]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopCountryCodesByIP')]",
                "contentId": "[variables('parserObject14').parserContentId14]",
                "kind": "Parser",
                "version": "[variables('parserObject14').parserVersion14]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject14').parserContentId14]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutTopCountryCodesByIP",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject14').parserContentId14,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject14').parserContentId14,'-', '1.0.0')))]",
        "version": "[variables('parserObject14').parserVersion14]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject14')._parserName14]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutTopCountryCodesByIP",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutTopCountryCodesByIP",
        "query": "let CymruScoutTopCountryCodesByIP = view() {\nTop_Country_Codes_By_IP_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Size = column_ifexists(\"size_d\", \"\"),\n    Total = column_ifexists(\"total_d\", \"\"),\n    Dates = column_ifexists(\"data_dates_s\", \"\"),\n    Datasets = column_ifexists(\"data_datasets_s\", \"\"),\n    ['Request Id'] = column_ifexists(\"request_id_g\", \"\"),\n    ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n    ['End Date'] = column_ifexists(\"end_date_s\", \"\")\n| project\n    IP,\n    Size,\n    Total,\n    Dates,\n    Datasets,\n    TimeGenerated,\n    ['Request Id'],\n    ['Start Date'],\n    ['End Date']\n};\nCymruScoutTopCountryCodesByIP\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject14')._parserId14,'/'))))]",
      "dependsOn": [
        "[variables('parserObject14')._parserId14]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopCountryCodesByIP')]",
        "contentId": "[variables('parserObject14').parserContentId14]",
        "kind": "Parser",
        "version": "[variables('parserObject14').parserVersion14]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject15').parserTemplateSpecName15]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutTopServicesByIP Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject15').parserVersion15]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject15')._parserName15]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutTopServicesByIP",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutTopServicesByIP",
                "query": "let CymruScoutTopServicesByIP = view() { \nTop_Services_By_IP_Data_CL\n| extend \n    IP = column_ifexists(\"ip_s\", \"\"),\n    Size = column_ifexists(\"size_d\", \"\"),\n    Total = column_ifexists(\"total_d\", \"\"),\n    Dates = column_ifexists(\"data_dates_s\", \"\"),\n    Datasets = column_ifexists(\"data_datasets_s\", \"\"),\n    ['Request Id'] = column_ifexists(\"request_id_g\", \"\"),\n    ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n    ['End Date'] = column_ifexists(\"end_date_s\", \"\")\n| project\n    IP,\n    Size,\n    Total,\n    Dates,\n    Datasets,\n    TimeGenerated,\n    ['Request Id'],\n    ['Start Date'],\n    ['End Date']\n};\nCymruScoutTopServicesByIP\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject15')._parserId15,'/'))))]",
              "dependsOn": [
                "[variables('parserObject15')._parserId15]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopServicesByIP')]",
                "contentId": "[variables('parserObject15').parserContentId15]",
                "kind": "Parser",
                "version": "[variables('parserObject15').parserVersion15]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject15').parserContentId15]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutTopServicesByIP",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject15').parserContentId15,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject15').parserContentId15,'-', '1.0.0')))]",
        "version": "[variables('parserObject15').parserVersion15]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject15')._parserName15]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutTopServicesByIP",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutTopServicesByIP",
        "query": "let CymruScoutTopServicesByIP = view() { \nTop_Services_By_IP_Data_CL\n| extend \n    IP = column_ifexists(\"ip_s\", \"\"),\n    Size = column_ifexists(\"size_d\", \"\"),\n    Total = column_ifexists(\"total_d\", \"\"),\n    Dates = column_ifexists(\"data_dates_s\", \"\"),\n    Datasets = column_ifexists(\"data_datasets_s\", \"\"),\n    ['Request Id'] = column_ifexists(\"request_id_g\", \"\"),\n    ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n    ['End Date'] = column_ifexists(\"end_date_s\", \"\")\n| project\n    IP,\n    Size,\n    Total,\n    Dates,\n    Datasets,\n    TimeGenerated,\n    ['Request Id'],\n    ['Start Date'],\n    ['End Date']\n};\nCymruScoutTopServicesByIP\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject15')._parserId15,'/'))))]",
      "dependsOn": [
        "[variables('parserObject15')._parserId15]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopServicesByIP')]",
        "contentId": "[variables('parserObject15').parserContentId15]",
        "kind": "Parser",
        "version": "[variables('parserObject15').parserVersion15]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject16').parserTemplateSpecName16]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutTopTagsByIP Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject16').parserVersion16]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject16')._parserName16]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutTopTagsByIP",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutTopTagsByIP",
                "query": "let CymruScoutTopTagsByIP = view() {\nTop_Tags_By_IP_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Size = column_ifexists(\"size_d\", \"\"),\n    Total = column_ifexists(\"total_d\", \"\"),\n    Dates = column_ifexists(\"data_dates_s\", \"\"),\n    Datasets = column_ifexists(\"data_datasets_s\", \"\"),\n    ['Request Id'] = column_ifexists(\"request_id_g\", \"\"),\n    ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n    ['End Date'] = column_ifexists(\"end_date_s\", \"\")\n| project\n    IP,\n    Size,\n    Total,\n    Dates,\n    Datasets,\n    TimeGenerated,\n    ['Request Id'],\n    ['Start Date'],\n    ['End Date']\n};\nCymruScoutTopTagsByIP\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject16')._parserId16,'/'))))]",
              "dependsOn": [
                "[variables('parserObject16')._parserId16]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopTagsByIP')]",
                "contentId": "[variables('parserObject16').parserContentId16]",
                "kind": "Parser",
                "version": "[variables('parserObject16').parserVersion16]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject16').parserContentId16]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutTopTagsByIP",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject16').parserContentId16,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject16').parserContentId16,'-', '1.0.0')))]",
        "version": "[variables('parserObject16').parserVersion16]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject16')._parserName16]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutTopTagsByIP",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutTopTagsByIP",
        "query": "let CymruScoutTopTagsByIP = view() {\nTop_Tags_By_IP_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Size = column_ifexists(\"size_d\", \"\"),\n    Total = column_ifexists(\"total_d\", \"\"),\n    Dates = column_ifexists(\"data_dates_s\", \"\"),\n    Datasets = column_ifexists(\"data_datasets_s\", \"\"),\n    ['Request Id'] = column_ifexists(\"request_id_g\", \"\"),\n    ['Start Date'] = column_ifexists(\"start_date_s\", \"\"),\n    ['End Date'] = column_ifexists(\"end_date_s\", \"\")\n| project\n    IP,\n    Size,\n    Total,\n    Dates,\n    Datasets,\n    TimeGenerated,\n    ['Request Id'],\n    ['Start Date'],\n    ['End Date']\n};\nCymruScoutTopTagsByIP\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject16')._parserId16,'/'))))]",
      "dependsOn": [
        "[variables('parserObject16')._parserId16]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutTopTagsByIP')]",
        "contentId": "[variables('parserObject16').parserContentId16]",
        "kind": "Parser",
        "version": "[variables('parserObject16').parserVersion16]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject17').parserTemplateSpecName17]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CymruScoutWhois Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject17').parserVersion17]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject17')._parserName17]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for CymruScoutWhois",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CymruScoutWhois",
                "query": "let CymruScoutWhois = view(){\nWhois_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Asn = column_ifexists(\"asn_d\", \"\"),\n    Cidr = column_ifexists(\"cidr_s\", \"\"),\n    CC = column_ifexists(\"cc_s\", \"\"),\n    City = column_ifexists(\"city_s\", \"\"),\n    Address = column_ifexists(\"address_s\", \"\"),\n    Modified = column_ifexists(\"modified_s\", \"\"),\n    ['As Name'] = column_ifexists(\"as_name_s\", \"\"),\n    ['Bgp Asn'] = column_ifexists(\"bgp_asn_d\", \"\"),\n    ['Bgp Asn Name'] = column_ifexists(\"bgp_asn_name_s\", \"\"),\n    ['Net Name'] = column_ifexists(\"net_name_s\", \"\"),\n    ['Net Handle'] = column_ifexists(\"net_handle_s\", \"\"),\n    ['Description'] = column_ifexists(\"description_s\", \"\"),\n    ['Abuse Contact Id'] = column_ifexists(\"abuse_contact_id_s\", \"\"),\n    ['About Contact Role'] = column_ifexists(\"about_contact_role_s\", \"\"),\n    ['About Contact Person'] = column_ifexists(\"about_contact_person_s\", \"\"),\n    ['About Contact Email'] = column_ifexists(\"about_contact_email_s\", \"\"),\n    ['About Contact Phone'] = column_ifexists(\"about_contact_phone_s\", \"\"),\n    ['About Contact Country'] = column_ifexists(\"about_contact_country_s\", \"\"),\n    ['About Contact City'] = column_ifexists(\"about_contact_city_s\", \"\"),\n    ['About Contact Address'] = column_ifexists(\"about_contact_address_s\", \"\"),\n    ['Admin Contact Id'] = column_ifexists(\"admin_contact_id_s\", \"\"),\n    ['Admin Contact Role'] = column_ifexists(\"admin_contact_role_s\", \"\"),\n    ['Admin Contact Person'] = column_ifexists(\"admin_contact_person_s\", \"\"),\n    ['Admin Contact Email'] = column_ifexists(\"admin_contact_email_s\", \"\"),\n    ['Admin Contact Phone'] = column_ifexists(\"admin_contact_phone_s\", \"\"),\n    ['Admin Contact Country'] = column_ifexists(\"admin_contact_country_s\", \"\"),\n    ['Admin Contact City'] = column_ifexists(\"admin_contact_city_s\", \"\"),\n    ['Admin Contact Address'] = column_ifexists(\"admin_contact_address_s\", \"\"),\n    ['Tech Contact Id'] = column_ifexists(\"tech_contact_id_s\", \"\"),\n    ['Tech Contact Role'] = column_ifexists(\"tech_contact_role_s\", \"\"),\n    ['Tech Contact Person'] = column_ifexists(\"tech_contact_person_s\", \"\"),\n    ['Tech Contact Email'] = column_ifexists(\"tech_contact_email_s\", \"\"),\n    ['Tech Contact Phone'] = column_ifexists(\"tech_contact_phone_s\", \"\"),\n    ['Tech Contact Country'] = column_ifexists(\"tech_contact_country_s\", \"\"),\n    ['Tech Contact City'] = column_ifexists(\"tech_contact_city_s\", \"\"),\n    ['Tech Contact Address'] = column_ifexists(\"tech_contact_address_s\", \"\"),\n    ['Org Id'] = column_ifexists(\"org_id_s\", \"\"),\n    ['Org Name'] = column_ifexists(\"org_name_s\", \"\"),\n    ['Org Email'] = column_ifexists(\"org_email_s\", \"\"),\n    ['Org Phone'] = column_ifexists(\"org_phone_s\", \"\"),\n    ['Org Country'] = column_ifexists(\"org_country_s\", \"\"),\n    ['Org City'] = column_ifexists(\"org_city_s\", \"\"),\n    ['Org Address'] = column_ifexists(\"org_address_s\", \"\"),\n    ['Mnt By Email'] = column_ifexists(\"mnt_by_email_s\", \"\"),\n    ['Mnt Lower Email'] = column_ifexists(\"mnt_lower_email_s\", \"\"),\n    ['Mnt Router Email'] = column_ifexists(\"mnt_router_email_s\", \"\")\n| project\n    IP,\n    Asn,\n    Cidr,\n    CC,\n    City,\n    Address,\n    Modified,\n    TimeGenerated,\n    ['As Name'],\n    ['Bgp Asn'],\n    ['Bgp Asn Name'],\n    ['Net Name'],\n    ['Net Handle'],\n    ['Description'],\n    ['Abuse Contact Id'],\n    ['About Contact Role'],\n    ['About Contact Person'],\n    ['About Contact Email'],\n    ['About Contact Phone'],\n    ['About Contact Country'],\n    ['About Contact City'],\n    ['About Contact Address'],\n    ['Admin Contact Id'],\n    ['Admin Contact Role'],\n    ['Admin Contact Person'],\n    ['Admin Contact Email'],\n    ['Admin Contact Phone'],\n    ['Admin Contact Country'],\n    ['Admin Contact City'],\n    ['Admin Contact Address'],\n    ['Tech Contact Id'],\n    ['Tech Contact Role'],\n    ['Tech Contact Person'],\n    ['Tech Contact Email'],\n    ['Tech Contact Phone'],\n    ['Tech Contact Country'],\n    ['Tech Contact City'],\n    ['Tech Contact Address'],\n    ['Org Id'],\n    ['Org Name'],\n    ['Org Email'],\n    ['Org Phone'],\n    ['Org Country'],\n    ['Org City'],\n    ['Org Address'],\n    ['Mnt By Email'],\n    ['Mnt Lower Email'],\n    ['Mnt Router Email']\n};\nCymruScoutWhois\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject17')._parserId17,'/'))))]",
              "dependsOn": [
                "[variables('parserObject17')._parserId17]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutWhois')]",
                "contentId": "[variables('parserObject17').parserContentId17]",
                "kind": "Parser",
                "version": "[variables('parserObject17').parserVersion17]",
                "source": {
                  "name": "Team Cymru Scout",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject17').parserContentId17]",
        "contentKind": "Parser",
        "displayName": "Parser for CymruScoutWhois",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject17').parserContentId17,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject17').parserContentId17,'-', '1.0.0')))]",
        "version": "[variables('parserObject17').parserVersion17]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject17')._parserName17]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for CymruScoutWhois",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CymruScoutWhois",
        "query": "let CymruScoutWhois = view(){\nWhois_Data_CL\n| extend\n    IP = column_ifexists(\"ip_s\", \"\"),\n    Asn = column_ifexists(\"asn_d\", \"\"),\n    Cidr = column_ifexists(\"cidr_s\", \"\"),\n    CC = column_ifexists(\"cc_s\", \"\"),\n    City = column_ifexists(\"city_s\", \"\"),\n    Address = column_ifexists(\"address_s\", \"\"),\n    Modified = column_ifexists(\"modified_s\", \"\"),\n    ['As Name'] = column_ifexists(\"as_name_s\", \"\"),\n    ['Bgp Asn'] = column_ifexists(\"bgp_asn_d\", \"\"),\n    ['Bgp Asn Name'] = column_ifexists(\"bgp_asn_name_s\", \"\"),\n    ['Net Name'] = column_ifexists(\"net_name_s\", \"\"),\n    ['Net Handle'] = column_ifexists(\"net_handle_s\", \"\"),\n    ['Description'] = column_ifexists(\"description_s\", \"\"),\n    ['Abuse Contact Id'] = column_ifexists(\"abuse_contact_id_s\", \"\"),\n    ['About Contact Role'] = column_ifexists(\"about_contact_role_s\", \"\"),\n    ['About Contact Person'] = column_ifexists(\"about_contact_person_s\", \"\"),\n    ['About Contact Email'] = column_ifexists(\"about_contact_email_s\", \"\"),\n    ['About Contact Phone'] = column_ifexists(\"about_contact_phone_s\", \"\"),\n    ['About Contact Country'] = column_ifexists(\"about_contact_country_s\", \"\"),\n    ['About Contact City'] = column_ifexists(\"about_contact_city_s\", \"\"),\n    ['About Contact Address'] = column_ifexists(\"about_contact_address_s\", \"\"),\n    ['Admin Contact Id'] = column_ifexists(\"admin_contact_id_s\", \"\"),\n    ['Admin Contact Role'] = column_ifexists(\"admin_contact_role_s\", \"\"),\n    ['Admin Contact Person'] = column_ifexists(\"admin_contact_person_s\", \"\"),\n    ['Admin Contact Email'] = column_ifexists(\"admin_contact_email_s\", \"\"),\n    ['Admin Contact Phone'] = column_ifexists(\"admin_contact_phone_s\", \"\"),\n    ['Admin Contact Country'] = column_ifexists(\"admin_contact_country_s\", \"\"),\n    ['Admin Contact City'] = column_ifexists(\"admin_contact_city_s\", \"\"),\n    ['Admin Contact Address'] = column_ifexists(\"admin_contact_address_s\", \"\"),\n    ['Tech Contact Id'] = column_ifexists(\"tech_contact_id_s\", \"\"),\n    ['Tech Contact Role'] = column_ifexists(\"tech_contact_role_s\", \"\"),\n    ['Tech Contact Person'] = column_ifexists(\"tech_contact_person_s\", \"\"),\n    ['Tech Contact Email'] = column_ifexists(\"tech_contact_email_s\", \"\"),\n    ['Tech Contact Phone'] = column_ifexists(\"tech_contact_phone_s\", \"\"),\n    ['Tech Contact Country'] = column_ifexists(\"tech_contact_country_s\", \"\"),\n    ['Tech Contact City'] = column_ifexists(\"tech_contact_city_s\", \"\"),\n    ['Tech Contact Address'] = column_ifexists(\"tech_contact_address_s\", \"\"),\n    ['Org Id'] = column_ifexists(\"org_id_s\", \"\"),\n    ['Org Name'] = column_ifexists(\"org_name_s\", \"\"),\n    ['Org Email'] = column_ifexists(\"org_email_s\", \"\"),\n    ['Org Phone'] = column_ifexists(\"org_phone_s\", \"\"),\n    ['Org Country'] = column_ifexists(\"org_country_s\", \"\"),\n    ['Org City'] = column_ifexists(\"org_city_s\", \"\"),\n    ['Org Address'] = column_ifexists(\"org_address_s\", \"\"),\n    ['Mnt By Email'] = column_ifexists(\"mnt_by_email_s\", \"\"),\n    ['Mnt Lower Email'] = column_ifexists(\"mnt_lower_email_s\", \"\"),\n    ['Mnt Router Email'] = column_ifexists(\"mnt_router_email_s\", \"\")\n| project\n    IP,\n    Asn,\n    Cidr,\n    CC,\n    City,\n    Address,\n    Modified,\n    TimeGenerated,\n    ['As Name'],\n    ['Bgp Asn'],\n    ['Bgp Asn Name'],\n    ['Net Name'],\n    ['Net Handle'],\n    ['Description'],\n    ['Abuse Contact Id'],\n    ['About Contact Role'],\n    ['About Contact Person'],\n    ['About Contact Email'],\n    ['About Contact Phone'],\n    ['About Contact Country'],\n    ['About Contact City'],\n    ['About Contact Address'],\n    ['Admin Contact Id'],\n    ['Admin Contact Role'],\n    ['Admin Contact Person'],\n    ['Admin Contact Email'],\n    ['Admin Contact Phone'],\n    ['Admin Contact Country'],\n    ['Admin Contact City'],\n    ['Admin Contact Address'],\n    ['Tech Contact Id'],\n    ['Tech Contact Role'],\n    ['Tech Contact Person'],\n    ['Tech Contact Email'],\n    ['Tech Contact Phone'],\n    ['Tech Contact Country'],\n    ['Tech Contact City'],\n    ['Tech Contact Address'],\n    ['Org Id'],\n    ['Org Name'],\n    ['Org Email'],\n    ['Org Phone'],\n    ['Org Country'],\n    ['Org City'],\n    ['Org Address'],\n    ['Mnt By Email'],\n    ['Mnt Lower Email'],\n    ['Mnt Router Email']\n};\nCymruScoutWhois\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject17')._parserId17,'/'))))]",
      "dependsOn": [
        "[variables('parserObject17')._parserId17]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CymruScoutWhois')]",
        "contentId": "[variables('parserObject17').parserContentId17]",
        "kind": "Parser",
        "version": "[variables('parserObject17').parserVersion17]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Team Cymru Scout data connector with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Team Cymru Scout Data Connector (using Azure Functions)",
                  "publisher": "Team Cymru Scout",
                  "descriptionMarkdown": "The [TeamCymruScout](https://scout.cymru.com/) Data Connector allows users to bring Team Cymru Scout IP, domain and account usage data in Microsoft Sentinel for enrichment.",
                  "graphQueries": [
                    {
                      "metricName": "Total Domain data received",
                      "legend": "Cymru_Scout_Domain_Data_CL",
                      "baseQuery": "Cymru_Scout_Domain_Data_CL"
                    },
                    {
                      "metricName": "Total IP Foundation data received",
                      "legend": "Cymru_Scout_IP_Data_Foundation_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_Foundation_CL"
                    },
                    {
                      "metricName": "Total IP Details data received",
                      "legend": "Cymru_Scout_IP_Data_Details_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_Details_CL"
                    },
                    {
                      "metricName": "Total IP Communications data received",
                      "legend": "Cymru_Scout_IP_Data_Communications_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_Communications_CL"
                    },
                    {
                      "metricName": "Total IP PDNS data received",
                      "legend": "Cymru_Scout_IP_Data_PDNS_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_PDNS_CL"
                    },
                    {
                      "metricName": "Total IP Fingerprints data received",
                      "legend": "Cymru_Scout_IP_Data_Fingerprints_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_Fingerprints_CL"
                    },
                    {
                      "metricName": "Total IP OpenPorts data received",
                      "legend": "Cymru_Scout_IP_Data_OpenPorts_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_OpenPorts_CL"
                    },
                    {
                      "metricName": "Total IP x509 data received",
                      "legend": "Cymru_Scout_IP_Data_x509_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_x509_CL"
                    },
                    {
                      "metricName": "Total IP Summary Details data received",
                      "legend": "Cymru_Scout_IP_Data_Summary_Details_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_Summary_Details_CL"
                    },
                    {
                      "metricName": "Total IP Summary PDNS data received",
                      "legend": "Cymru_Scout_IP_Data_Summary_PDNS_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_Summary_PDNS_CL"
                    },
                    {
                      "metricName": "Total IP Summary OpenPorts data received",
                      "legend": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL"
                    },
                    {
                      "metricName": "Total IP Summary Certs data received",
                      "legend": "Cymru_Scout_IP_Data_Summary_Certs_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_Summary_Certs_CL"
                    },
                    {
                      "metricName": "Total IP Summary Fingerprints data received",
                      "legend": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL",
                      "baseQuery": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL"
                    },
                    {
                      "metricName": "Total Account Usage data received",
                      "legend": "Cymru_Scout_Account_Usage_Data_CL",
                      "baseQuery": "Cymru_Scout_Account_Usage_Data_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Team Cymru Scout Domain Data",
                      "query": "Cymru_Scout_Domain_Data_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data Foundation",
                      "query": "Cymru_Scout_IP_Data_Foundation_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data Details",
                      "query": "Cymru_Scout_IP_Data_Details_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data Communications",
                      "query": "Cymru_Scout_IP_Data_Communications_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data PDNS",
                      "query": "Cymru_Scout_IP_Data_PDNS_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data Fingerprints",
                      "query": "Cymru_Scout_IP_Data_Fingerprints_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data OpenPorts",
                      "query": "Cymru_Scout_IP_Data_OpenPorts_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data x509",
                      "query": "Cymru_Scout_IP_Data_x509_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data Summary Details",
                      "query": "Cymru_Scout_IP_Data_Summary_Details_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data Summary PDNS",
                      "query": "Cymru_Scout_IP_Data_Summary_PDNS_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data Summary OpenPorts",
                      "query": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data Summary Certs",
                      "query": "Cymru_Scout_IP_Data_Summary_Certs_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout IP Data Summary Fingerprints",
                      "query": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Team Cymru Scout Account Usage Data",
                      "query": "Cymru_Scout_Account_Usage_Data_CL\n | sort by TimeGenerated desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "Cymru_Scout_Domain_Data_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_Domain_Data_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_Foundation_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Foundation_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_Details_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Details_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_Communications_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Communications_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_PDNS_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_PDNS_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_Fingerprints_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Fingerprints_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_OpenPorts_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_OpenPorts_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_x509_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_x509_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_Summary_Details_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Summary_Details_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_Summary_PDNS_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Summary_PDNS_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_Summary_Certs_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Summary_Certs_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "Cymru_Scout_Account_Usage_Data_CL",
                      "lastDataReceivedQuery": "Cymru_Scout_Account_Usage_Data_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_Domain_Data_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_Foundation_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_Details_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_Communications_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_PDNS_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_Fingerprints_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_OpenPorts_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_x509_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_Summary_Details_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_Summary_PDNS_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_Summary_OpenPorts_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_Summary_Certs_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_IP_Data_Summary_Fingerprints_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Cymru_Scout_Account_Usage_Data_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions on the workspace are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Microsoft.Web/sites permissions",
                        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                      },
                      {
                        "name": "Team Cymru Scout Credentials/permissions",
                        "description": "Team Cymru Scout account credentials(Username, Password) is required."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This connector uses Azure Functions to connect to the Team Cymru Scout API to pull its logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                    },
                    {
                      "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
                    },
                    {
                      "description": "**STEP 1 - Steps to Create Team Cymru Scout API Key**\n\n Follow these instructions to create a Team Cymru Scout API Key.\n 1. Refer to the [API Keys](https://scout.cymru.com/docs/api#api-keys) document to generate an API key to use as an alternate form of authorization.\n"
                    },
                    {
                      "description": "**STEP 2 - App Registration steps for the Application in Microsoft Entra ID**\n\n This integration requires an App registration in the Azure portal. Follow the steps in this section to create a new application in Microsoft Entra ID:\n 1. Sign in to the [Azure portal](https://portal.azure.com/).\n 2. Search for and select **Microsoft Entra ID**.\n 3. Under **Manage**, select **App registrations > New registration**.\n 4. Enter a display **Name** for your application.\n 5. Select **Register** to complete the initial app registration.\n 6. When registration finishes, the Azure portal displays the app registration's Overview pane. You see the **Application (client) ID** and **Tenant ID**. The client ID and Tenant ID is required as configuration parameters for the execution of TeamCymruScout Data Connector. \n\n> **Reference link:** [https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app](https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app)"
                    },
                    {
                      "description": "**STEP 3 - Add a client secret for application in Microsoft Entra ID**\n\n Sometimes called an application password, a client secret is a string value required for the execution of TeamCymruScout Data Connector. Follow the steps in this section to create a new Client Secret:\n 1. In the Azure portal, in **App registrations**, select your application.\n 2. Select **Certificates & secrets > Client secrets > New client secret**.\n 3. Add a description for your client secret.\n 4. Select an expiration for the secret or specify a custom lifetime. Limit is 24 months.\n 5. Select **Add**. \n 6. *Record the secret's value for use in your client application code. This secret value is never displayed again after you leave this page.* The secret value is required as configuration parameter for the execution of TeamCymruScout Data Connector. \n\n> **Reference link:** [https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app#add-a-client-secret](https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app#add-a-client-secret)"
                    },
                    {
                      "description": "**STEP 4 - Assign role of Contributor to application in Microsoft Entra ID**\n\n Follow the steps in this section to assign the role:\n 1. In the Azure portal, Go to **Resource Group** and select your resource group.\n 2. Go to **Access control (IAM)** from left panel.\n 3. Click on **Add**, and then select **Add role assignment**.\n 4. Select **Contributor** as role and click on next.\n 5. In **Assign access to**, select `User, group, or service principal`.\n 6. Click on **add members** and type **your app name** that you have created and select it.\n 7. Now click on **Review + assign** and then again click on **Review + assign**. \n\n> **Reference link:** [https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal](https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal)"
                    },
                    {
                      "description": "**STEP 5 - Upload csv with indictaors in Watchlist**\n\n Follow the steps in this section to upload csv containing indicators in watchlist:\n 1. In the Azure portal, Go to **Microsoft Sentinel** and select your workspace.\n 2. Go to **Watchlist** under **Configuration** section from left panel.\n 3. Click on **TeamCymruScoutDomainData**, and then select **Bulk update** from **Update watchlist**.\n 4. Upload your csv files with domain indicators in **Upload file** input and click on **Next: Review+Create**.\n 5. Once validation is successful, click on **Update**.\n 6. Follow the same steps to update *TeamCymruScoutIPData* watchlist for ip indicators. \n\n> **Reference link:** [Bulk update a watchlist](https://learn.microsoft.com/en-us/azure/sentinel/watchlists-manage#bulk-update-a-watchlist)"
                    },
                    {
                      "description": "**STEP 6 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the TeamCymruScout data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following) readily available.., as well as the TeamCymruScout Credentials.",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Primary Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ]
                    },
                    {
                      "description": "Use this method for automated deployment of the TeamCymruScout data connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-TeamCymruScout-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the below information : \n\t\tFunction Name \n\t\tTeamCymruScoutBaseURL \n\t\tAuthenticationType \n\t\tUsername \n\t\tPassword \n\t\tAPIKey \n\t\tIPValues \n\t\tDomainValues \n\t\tAPIType \n\t\tAzureClientId \n\t\tAzureClientSecret \n\t\tTenantId \n\t\tWorkspaceID \n\t\tWorkspaceKey \n\t\tIPTableName \n\t\tDomainTableName \n\t\tAccountUsageTableName \n\t\tSchedule \n\t\tAccountUsageSchedule \n\t\tLog Level \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
                      "title": "Option 1 - Azure Resource Manager (ARM) Template"
                    },
                    {
                      "description": "Use the following step-by-step instructions to deploy the TeamCymruScout data connector manually with Azure Functions (Deployment via Visual Studio Code).",
                      "title": "Option 2 - Manual Deployment of Azure Functions"
                    },
                    {
                      "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-TeamCymruScout-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. CymruScoutXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.9 or above.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
                    },
                    {
                      "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following application settings individually, with their respective values (case-sensitive): \n\t\tFunction Name \n\t\tTeamCymruScoutBaseURL \n\t\tAuthenticationType \n\t\tUsername \n\t\tPassword \n\t\tAPIKey \n\t\tIPValues \n\t\tDomainValues \n\t\tAPIType \n\t\tAzureClientId \n\t\tAzureClientSecret \n\t\tTenantId \n\t\tWorkspaceID \n\t\tWorkspaceKey \n\t\tIPTableName \n\t\tDomainTableName \n\t\tAccountUsageTableName \n\t\tSchedule \n\t\tAccountUsageSchedule \n\t\tLog Level \n4. Once all application settings have been entered, click **Save**."
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Team Cymru Scout",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Team Cymru",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Team Cymru",
                  "email": "support@cymru.com",
                  "tier": "Partner",
                  "link": "http://team-cymru.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Team Cymru Scout Data Connector (using Azure Functions)",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Team Cymru Scout Data Connector (using Azure Functions)",
          "publisher": "Team Cymru Scout",
          "descriptionMarkdown": "The [TeamCymruScout](https://scout.cymru.com/) Data Connector allows users to bring Team Cymru Scout IP, domain and account usage data in Microsoft Sentinel for enrichment.",
          "graphQueries": [
            {
              "metricName": "Total Domain data received",
              "legend": "Cymru_Scout_Domain_Data_CL",
              "baseQuery": "Cymru_Scout_Domain_Data_CL"
            },
            {
              "metricName": "Total IP Foundation data received",
              "legend": "Cymru_Scout_IP_Data_Foundation_CL",
              "baseQuery": "Cymru_Scout_IP_Data_Foundation_CL"
            },
            {
              "metricName": "Total IP Details data received",
              "legend": "Cymru_Scout_IP_Data_Details_CL",
              "baseQuery": "Cymru_Scout_IP_Data_Details_CL"
            },
            {
              "metricName": "Total IP Communications data received",
              "legend": "Cymru_Scout_IP_Data_Communications_CL",
              "baseQuery": "Cymru_Scout_IP_Data_Communications_CL"
            },
            {
              "metricName": "Total IP PDNS data received",
              "legend": "Cymru_Scout_IP_Data_PDNS_CL",
              "baseQuery": "Cymru_Scout_IP_Data_PDNS_CL"
            },
            {
              "metricName": "Total IP Fingerprints data received",
              "legend": "Cymru_Scout_IP_Data_Fingerprints_CL",
              "baseQuery": "Cymru_Scout_IP_Data_Fingerprints_CL"
            },
            {
              "metricName": "Total IP OpenPorts data received",
              "legend": "Cymru_Scout_IP_Data_OpenPorts_CL",
              "baseQuery": "Cymru_Scout_IP_Data_OpenPorts_CL"
            },
            {
              "metricName": "Total IP x509 data received",
              "legend": "Cymru_Scout_IP_Data_x509_CL",
              "baseQuery": "Cymru_Scout_IP_Data_x509_CL"
            },
            {
              "metricName": "Total IP Summary Details data received",
              "legend": "Cymru_Scout_IP_Data_Summary_Details_CL",
              "baseQuery": "Cymru_Scout_IP_Data_Summary_Details_CL"
            },
            {
              "metricName": "Total IP Summary PDNS data received",
              "legend": "Cymru_Scout_IP_Data_Summary_PDNS_CL",
              "baseQuery": "Cymru_Scout_IP_Data_Summary_PDNS_CL"
            },
            {
              "metricName": "Total IP Summary OpenPorts data received",
              "legend": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL",
              "baseQuery": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL"
            },
            {
              "metricName": "Total IP Summary Certs data received",
              "legend": "Cymru_Scout_IP_Data_Summary_Certs_CL",
              "baseQuery": "Cymru_Scout_IP_Data_Summary_Certs_CL"
            },
            {
              "metricName": "Total IP Summary Fingerprints data received",
              "legend": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL",
              "baseQuery": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL"
            },
            {
              "metricName": "Total Account Usage data received",
              "legend": "Cymru_Scout_Account_Usage_Data_CL",
              "baseQuery": "Cymru_Scout_Account_Usage_Data_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "Cymru_Scout_Domain_Data_CL",
              "lastDataReceivedQuery": "Cymru_Scout_Domain_Data_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_Foundation_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Foundation_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_Details_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Details_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_Communications_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Communications_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_PDNS_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_PDNS_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_Fingerprints_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Fingerprints_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_OpenPorts_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_OpenPorts_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_x509_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_x509_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_Summary_Details_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Summary_Details_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_Summary_PDNS_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Summary_PDNS_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_Summary_Certs_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Summary_Certs_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL",
              "lastDataReceivedQuery": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "Cymru_Scout_Account_Usage_Data_CL",
              "lastDataReceivedQuery": "Cymru_Scout_Account_Usage_Data_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_Domain_Data_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_Foundation_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_Details_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_Communications_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_PDNS_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_Fingerprints_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_OpenPorts_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_x509_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_Summary_Details_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_Summary_PDNS_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_Summary_OpenPorts_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_Summary_Certs_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_IP_Data_Summary_Fingerprints_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Cymru_Scout_Account_Usage_Data_CL\n | summarize LastLogReceived = max(TimeGenerated)\n | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Team Cymru Scout Domain Data",
              "query": "Cymru_Scout_Domain_Data_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data Foundation",
              "query": "Cymru_Scout_IP_Data_Foundation_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data Details",
              "query": "Cymru_Scout_IP_Data_Details_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data Communications",
              "query": "Cymru_Scout_IP_Data_Communications_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data PDNS",
              "query": "Cymru_Scout_IP_Data_PDNS_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data Fingerprints",
              "query": "Cymru_Scout_IP_Data_Fingerprints_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data OpenPorts",
              "query": "Cymru_Scout_IP_Data_OpenPorts_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data x509",
              "query": "Cymru_Scout_IP_Data_x509_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data Summary Details",
              "query": "Cymru_Scout_IP_Data_Summary_Details_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data Summary PDNS",
              "query": "Cymru_Scout_IP_Data_Summary_PDNS_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data Summary OpenPorts",
              "query": "Cymru_Scout_IP_Data_Summary_OpenPorts_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data Summary Certs",
              "query": "Cymru_Scout_IP_Data_Summary_Certs_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout IP Data Summary Fingerprints",
              "query": "Cymru_Scout_IP_Data_Summary_Fingerprints_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Team Cymru Scout Account Usage Data",
              "query": "Cymru_Scout_Account_Usage_Data_CL\n | sort by TimeGenerated desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "Team Cymru Scout Credentials/permissions",
                "description": "Team Cymru Scout account credentials(Username, Password) is required."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the Team Cymru Scout API to pull its logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": "**STEP 1 - Steps to Create Team Cymru Scout API Key**\n\n Follow these instructions to create a Team Cymru Scout API Key.\n 1. Refer to the [API Keys](https://scout.cymru.com/docs/api#api-keys) document to generate an API key to use as an alternate form of authorization.\n"
            },
            {
              "description": "**STEP 2 - App Registration steps for the Application in Microsoft Entra ID**\n\n This integration requires an App registration in the Azure portal. Follow the steps in this section to create a new application in Microsoft Entra ID:\n 1. Sign in to the [Azure portal](https://portal.azure.com/).\n 2. Search for and select **Microsoft Entra ID**.\n 3. Under **Manage**, select **App registrations > New registration**.\n 4. Enter a display **Name** for your application.\n 5. Select **Register** to complete the initial app registration.\n 6. When registration finishes, the Azure portal displays the app registration's Overview pane. You see the **Application (client) ID** and **Tenant ID**. The client ID and Tenant ID is required as configuration parameters for the execution of TeamCymruScout Data Connector. \n\n> **Reference link:** [https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app](https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app)"
            },
            {
              "description": "**STEP 3 - Add a client secret for application in Microsoft Entra ID**\n\n Sometimes called an application password, a client secret is a string value required for the execution of TeamCymruScout Data Connector. Follow the steps in this section to create a new Client Secret:\n 1. In the Azure portal, in **App registrations**, select your application.\n 2. Select **Certificates & secrets > Client secrets > New client secret**.\n 3. Add a description for your client secret.\n 4. Select an expiration for the secret or specify a custom lifetime. Limit is 24 months.\n 5. Select **Add**. \n 6. *Record the secret's value for use in your client application code. This secret value is never displayed again after you leave this page.* The secret value is required as configuration parameter for the execution of TeamCymruScout Data Connector. \n\n> **Reference link:** [https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app#add-a-client-secret](https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app#add-a-client-secret)"
            },
            {
              "description": "**STEP 4 - Assign role of Contributor to application in Microsoft Entra ID**\n\n Follow the steps in this section to assign the role:\n 1. In the Azure portal, Go to **Resource Group** and select your resource group.\n 2. Go to **Access control (IAM)** from left panel.\n 3. Click on **Add**, and then select **Add role assignment**.\n 4. Select **Contributor** as role and click on next.\n 5. In **Assign access to**, select `User, group, or service principal`.\n 6. Click on **add members** and type **your app name** that you have created and select it.\n 7. Now click on **Review + assign** and then again click on **Review + assign**. \n\n> **Reference link:** [https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal](https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal)"
            },
            {
              "description": "**STEP 5 - Upload csv with indictaors in Watchlist**\n\n Follow the steps in this section to upload csv containing indicators in watchlist:\n 1. In the Azure portal, Go to **Microsoft Sentinel** and select your workspace.\n 2. Go to **Watchlist** under **Configuration** section from left panel.\n 3. Click on **TeamCymruScoutDomainData**, and then select **Bulk update** from **Update watchlist**.\n 4. Upload your csv files with domain indicators in **Upload file** input and click on **Next: Review+Create**.\n 5. Once validation is successful, click on **Update**.\n 6. Follow the same steps to update *TeamCymruScoutIPData* watchlist for ip indicators. \n\n> **Reference link:** [Bulk update a watchlist](https://learn.microsoft.com/en-us/azure/sentinel/watchlists-manage#bulk-update-a-watchlist)"
            },
            {
              "description": "**STEP 6 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the TeamCymruScout data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following) readily available.., as well as the TeamCymruScout Credentials.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the TeamCymruScout data connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-TeamCymruScout-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the below information : \n\t\tFunction Name \n\t\tTeamCymruScoutBaseURL \n\t\tAuthenticationType \n\t\tUsername \n\t\tPassword \n\t\tAPIKey \n\t\tIPValues \n\t\tDomainValues \n\t\tAPIType \n\t\tAzureClientId \n\t\tAzureClientSecret \n\t\tTenantId \n\t\tWorkspaceID \n\t\tWorkspaceKey \n\t\tIPTableName \n\t\tDomainTableName \n\t\tAccountUsageTableName \n\t\tSchedule \n\t\tAccountUsageSchedule \n\t\tLog Level \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the TeamCymruScout data connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-TeamCymruScout-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. CymruScoutXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.9 or above.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
            },
            {
              "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following application settings individually, with their respective values (case-sensitive): \n\t\tFunction Name \n\t\tTeamCymruScoutBaseURL \n\t\tAuthenticationType \n\t\tUsername \n\t\tPassword \n\t\tAPIKey \n\t\tIPValues \n\t\tDomainValues \n\t\tAPIType \n\t\tAzureClientId \n\t\tAzureClientSecret \n\t\tTenantId \n\t\tWorkspaceID \n\t\tWorkspaceKey \n\t\tIPTableName \n\t\tDomainTableName \n\t\tAccountUsageTableName \n\t\tSchedule \n\t\tAccountUsageSchedule \n\t\tLog Level \n4. Once all application settings have been entered, click **Save**."
            }
          ],
          "id": "[variables('_uiConfigId1')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Team Cymru Scout",
        "publisherDisplayName": "Team Cymru",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Team%20Cymru%20Scout/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>Team Cymru Scout brings the most advanced AI-powered real-time intelligence into Microsoft Sentinel. The Microsoft Sentinel Integration allows you to perform LiveInvestigation on Indicators like IP, Domain and perform Correlation of Team Cymru Scout Data with Other Sources. It also leverage the capability to generate incident and notify when malicious ip found.</p>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 17, <strong>Workbooks:</strong> 1, <strong>Watchlists:</strong> 2, <strong>Playbooks:</strong> 2</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/TeamCymruScout.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Team Cymru Scout",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Team Cymru",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Team Cymru",
          "email": "support@cymru.com",
          "tier": "Partner",
          "link": "http://team-cymru.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_TeamCymruScoutDomainData')]",
              "version": "3.0.0"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_TeamCymruScoutIPData')]",
              "version": "3.0.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_TeamCymruScoutLiveInvestigation')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_TeamCymruScoutCreateIncidentAndNotify')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject3').parserContentId3]",
              "version": "[variables('parserObject3').parserVersion3]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject4').parserContentId4]",
              "version": "[variables('parserObject4').parserVersion4]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject5').parserContentId5]",
              "version": "[variables('parserObject5').parserVersion5]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject6').parserContentId6]",
              "version": "[variables('parserObject6').parserVersion6]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject7').parserContentId7]",
              "version": "[variables('parserObject7').parserVersion7]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject8').parserContentId8]",
              "version": "[variables('parserObject8').parserVersion8]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject9').parserContentId9]",
              "version": "[variables('parserObject9').parserVersion9]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject10').parserContentId10]",
              "version": "[variables('parserObject10').parserVersion10]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject11').parserContentId11]",
              "version": "[variables('parserObject11').parserVersion11]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject12').parserContentId12]",
              "version": "[variables('parserObject12').parserVersion12]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject13').parserContentId13]",
              "version": "[variables('parserObject13').parserVersion13]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject14').parserContentId14]",
              "version": "[variables('parserObject14').parserVersion14]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject15').parserContentId15]",
              "version": "[variables('parserObject15').parserVersion15]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject16').parserContentId16]",
              "version": "[variables('parserObject16').parserVersion16]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject17').parserContentId17]",
              "version": "[variables('parserObject17').parserVersion17]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2024-07-16",
        "lastPublishDate": "2023-07-16",
        "providers": [
          "Team Cymru Scout"
        ],
        "categories": {
          "domains": [
            "Security - Others",
            "Security - Threat Intelligence",
            "Security - Automation (SOAR)"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
