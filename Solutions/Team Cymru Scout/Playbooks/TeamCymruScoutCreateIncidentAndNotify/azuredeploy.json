{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Team Cymru Scout Create Incident And Notify",
        "description": "This playbook will create an incident for suspicious or malicious ip and notify to pre-defined or user customizable email id.",
        "prerequisites": [
            "1. User should have an outlook mail account in order to use this playbook."
        ],
        "postDeployment": [
            "**a. Authorize connections**",
            "Once deployment is complete, authorize each connection.",
            "1. Go to your logic app → API connections → Select outlook connection resource",
            "2. Go to General → Edit API connection",
            "3. Click Authorize",
            "5. Sign in",
            "6. Click Save",
            "7. Repeat steps for other connections",
            "**b. Assign Role to add comment in incident**",
            "Assign role to this playbook.",
            "1. Go to Log Analytics Workspace → <your workspace> → Access Control → Add",
            "2.Add role assignment",
            "3.Assignment type: Job function roles",
            "4.Role: Microsoft Sentinel Contributor",
            "5.Members: select managed identity for assigned access to and add your logic app as member",
            "6.Click on review+assign"
        ],
        "lastUpdateTime": "2024-08-13T11:30:10.866Z",
        "entities": ["IP"],
        "tags": [
            "Team Cymru Scout",
            "Incident",
            "IP",
            "Mail"
        ],
        "support": {
            "tier": "community",
            "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author": {
            "name": "Team Cymru"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "TeamCymruScoutCreateIncidentAndNotify",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please do not change the playbook name, else you will not be able to run playbook from workbook."
            }
        },
        "EmailId": {
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Enter valid comma separated email ID(s) of receiver without space. (e.g. person1@gmail.com,person2@gmail.com)"
            }
        },
        "WorkspaceName": {
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Enter workspace name in which you want to create an incidents."
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "OutlookConnectionName": "[concat('Outlook-', parameters('PlaybookName'))]",
        "AzuremonitorlogsConnectionName": "[concat('Azuremonitorlogs-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "email_id": {
                            "defaultValue": "[trim(parameters('EmailId'))]",
                            "type": "String"
                        },
                        "cymru_scout_ip_table_name": {
                            "defaultValue": "Cymru_Scout_IP_Data",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "country_code": {
                                            "type": "string"
                                        },
                                        "is_first_run": {
                                            "type": "boolean"
                                        },
                                        "base_url": {
                                            "type": "string"
                                        },
                                        "overall_rating": {
                                            "type": "string"
                                        },
                                        "indicator_value": {
                                            "type": "string"
                                        },
                                        "whois_table_name": {
                                            "type": "string"
                                        },
                                        "whois_data": {
                                            "properties": {
                                            },
                                            "type": "object"
                                        },
                                        "insights_table_name": {
                                            "type": "string"
                                        },
                                        "insights_data": {
                                            "items": {
                                                "properties": {
                                                },
                                                "required": [
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "open_ports_table_name": {
                                            "type": "string"
                                        },
                                        "open_ports_data": {
                                            "items": {
                                                "properties": {
                                                },
                                                "required": [
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "certs_table_name": {
                                            "type": "string"
                                        },
                                        "certs_data": {
                                            "items": {
                                                "properties": {
                                                },
                                                "required": [
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "fingerprints_table_name": {
                                            "type": "string"
                                        },
                                        "fingerprints_data": {
                                            "items": {
                                                "properties": {
                                                },
                                                "required": [
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "pdns_table_name": {
                                            "type": "string"
                                        },
                                        "pdns_data": {
                                            "items": {
                                                "properties": {
                                                },
                                                "required": [
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "time_range": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Add_Insights_Details_To_Incident_Comment_(V3)": {
                            "runAfter": {
                                "Create_Incident_For_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "incidentArmId": "@body('Create_Incident_For_IP')?['id']",
                                    "message": "\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eTop Insights:\u003c/strong\u003e\u003c/b\u003e\u003cbr\u003e@{variables('insights_html_table')}\u003c/p\u003e"
                                },
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Add_Open_Ports_Details_To_Incident_Comment_(V3)": {
                            "runAfter": {
                                "Create_Incident_For_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "incidentArmId": "@body('Create_Incident_For_IP')?['id']",
                                    "message": "\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eTop Open Ports:\u003c/strong\u003e\u003c/b\u003e\u003cbr\u003e@{variables('open_ports_html_table')}\u003c/p\u003e"
                                },
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Add_PDNS_Details_To_Incident_Comment_(V3)": {
                            "runAfter": {
                                "Create_Incident_For_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "incidentArmId": "@body('Create_Incident_For_IP')?['id']",
                                    "message": "\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eTop PDNS:\u003c/strong\u003e\u003c/b\u003e\u003cbr\u003e@{variables('pdns_html_table')}\u003c/p\u003e"
                                },
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Create_Incident_For_IP": {
                            "runAfter": {
                                "Condition_To_Add_Insights_Data_In_HTML_Table_If_It_Is_Available_In_Logs": [
                                    "Succeeded"
                                ],
                                "Condition_To_Add_PDNS_Data_To_HTML_Table_If_It_Is_Available": [
                                    "Succeeded"
                                ],
                                "Condition_To_Add_Certs_Data_To_HTML_Table_If_It_Is_Available": [
                                    "Succeeded"
                                ],
                                "Condition_To_Add_Open_Ports_Data_To_HTML_Table_If_It_Is_Available": [
                                    "Succeeded"
                                ],
                                "Condition_To_Add_Fingerprints_Data_To_HTML_Table_If_It_Is_Available": [
                                    "Succeeded"
                                ],
                                "Condition_To_Add_Whois_Data_To_HTML_Table_If_It_Is_Available": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "put",
                                "body": {
                                    "title": "Found @{variables('overall_rating')} IP: @{triggerBody()?['indicator_value']}",
                                    "severity": "@if(equals(variables('overall_rating'), 'suspicious'), 'Medium', 'High')",
                                    "status": "New",
                                    "description": "Found @{variables('overall_rating')} ip: @{triggerBody()?['indicator_value']} for Team Cymru Scout."
                                },
                                "path": "[concat('/Incidents/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/workspaces/', trim(parameters('WorkspaceName')))]"
                            }
                        },
                        "Initialize_Country_Code": {
                            "runAfter": {
                                "Initialize_Fingerprints_HTML_Table": [
                                    "Succeeded"
                                ],
                                "Initialize_HTML_Table_For_Open_Ports_Data": [
                                    "Succeeded"
                                ],
                                "Initialize_Insights_HTML_Table": [
                                    "Succeeded"
                                ],
                                "Initialize_PDNS_HTML_Table": [
                                    "Succeeded"
                                ],
                                "Initialize_Certs_HTML_Table": [
                                    "Succeeded"
                                ],
                                "Initialize_HTML_Table_For_Whois_General": [
                                    "Succeeded"
                                ],
                                "Initialize_HTML_Table_For_Whois_Admin": [
                                    "Succeeded"
                                ],
                                "Initialize_HTML_Table_For_Whois_Tech": [
                                    "Succeeded"
                                ],
                                "Initialize_HTML_Table_For_Whois_Organization": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "country_code",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Email_ID": {
                            "runAfter": {
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "email_recipient",
                                        "type": "string",
                                        "value": "@parameters('email_id')"
                                    }
                                ]
                            }
                        },
                        "Initialize_HTML_Table_For_Open_Ports_Data": {
                            "runAfter": {
                                "Initialize_Scout_Link": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "open_ports_html_table",
                                        "type": "string",
                                        "value": "\u003ctable border=\"1\"\u003e\u003ctr\u003e\u003cth\u003ePort\u003c/th\u003e\u003cth\u003eProtocol\u003c/th\u003e\u003cth\u003eProtocol Name\u003c/th\u003e\u003cth\u003eEvents\u003c/th\u003e\u003c/tr\u003e"
                                    }
                                ]
                            }
                        },
                        "Initialize_Insights_HTML_Table": {
                            "runAfter": {
                                "Initialize_Scout_Link": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "insights_html_table",
                                        "type": "string",
                                        "value": "\u003ctable border=\"1\"\u003e\u003ctr\u003e\u003cth\u003eRating\u003c/th\u003e\u003cth\u003eMessage\u003c/th\u003e\u003c/tr\u003e"
                                    }
                                ]
                            }
                        },
                        "Initialize_PDNS_HTML_Table": {
                            "runAfter": {
                                "Initialize_Scout_Link": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "pdns_html_table",
                                        "type": "string",
                                        "value": "\u003ctable border=\"1\"\u003e\u003ctr\u003e\u003cth\u003eDomain\u003c/th\u003e\u003cth\u003eEvents\u003c/th\u003e\u003c/tr\u003e"
                                    }
                                ]
                            }
                        },
                        "Response_To_Indicate_Failure": {
                            "runAfter": {
                                "Send_An_Email_(V2)": [
                                    "Failed"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 400,
                                "body": {
                                    "status": "failure"
                                }
                            }
                        },
                        "Response_To_Indicate_Success": {
                            "runAfter": {
                                "Send_An_Email_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200,
                                "body": {
                                    "status": "success"
                                }
                            }
                        },
                        "Send_An_Email_(V2)": {
                            "runAfter": {
                                "Add_Scout_link_And_General_Information_To_Incident_Comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['outlook']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "To": "@variables('email_recipient')",
                                    "Subject": "A @{variables('overall_rating')} IP address has been identified, and an incident has been created for it in Sentinel.\nIP: @{triggerBody()?['indicator_value']}",
                                    "Body": "\u003cp class=\"editor-paragraph\"\u003eA @{variables('overall_rating')} IP address @{triggerBody()?['indicator_value']} has been identified, and an incident has been created for it in Sentinel.\u003cbr\u003e\u003cbr\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eIncident URL: \u003c/strong\u003e\u003c/b\u003e@{body('Create_Incident_For_IP')?['properties']?['incidentUrl']}\u003cbr\u003e\u003cbr\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eIP: \u003c/strong\u003e\u003c/b\u003e@{triggerBody()?['indicator_value']}\u003cbr\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eCountry Code: \u003c/strong\u003e\u003c/b\u003e@{variables('country_code')}\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eFor More Information:\u003c/strong\u003e\u003c/b\u003e \u003ca href=\"https://\" class=\"editor-link\"\u003e@{variables('scout_link')}\u003c/a\u003e\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cbr\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eTop \u003c/strong\u003e\u003c/b\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eOpen Ports:\u003c/strong\u003e\u003c/b\u003e\u003cbr\u003e@{variables('open_ports_html_table')}\u003cbr\u003e\u003cbr\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eTop \u003c/strong\u003e\u003c/b\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003ePDNS:\u003c/strong\u003e\u003c/b\u003e\u003cbr\u003e@{variables('pdns_html_table')}\u003cbr\u003e\u003cbr\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eTop \u003c/strong\u003e\u003c/b\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eInsights:\u003c/strong\u003e\u003c/b\u003e\u003cbr\u003e@{variables('insights_html_table')}\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eTop Certificates\u003c/strong\u003e\u003c/b\u003e\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e@{variables('certs_html_table')}\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eTop Fingerprints\u003c/strong\u003e\u003c/b\u003e\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e@{variables('fingerprints_html_table')}\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eWhois General Information\u003c/strong\u003e\u003c/b\u003e\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e@{variables('whois_general_html_table')}\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eWhois Admin Information\u003c/strong\u003e\u003c/b\u003e\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e@{variables('whois_admin_html_table')}\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eWhois Tech Information\u003c/strong\u003e\u003c/b\u003e\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e@{variables('whois_tech_html_table')}\u003c/p\u003e\u003cbr\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eWhois Organization Information\u003c/strong\u003e\u003c/b\u003e\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e@{variables('whois_organization_html_table')}\u003c/p\u003e",
                                    "Importance": "High"
                                },
                                "path": "/v2/Mail"
                            }
                        },
                        "Initialize_Base_URL": {
                            "runAfter": {
                                "Initialize_Email_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "base_url",
                                        "type": "string",
                                        "value": "@{if(empty(triggerBody()?['base_url']), 'https://scout.cymru.com', triggerBody()?['base_url']) }"
                                    }
                                ]
                            }
                        },
                        "Initialize_Scout_Link": {
                            "runAfter": {
                                "Initialize_Base_URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "scout_link",
                                        "type": "string",
                                        "value": "Team Cymru Scout link for more information: \u003ca href=\"@{variables('base_url')}/scout/details?query=@{triggerBody()?['indicator_value']}\"\u003e@{variables('base_url')}/scout/details?query=@{triggerBody()?['indicator_value']}\u003c/a\u003e"
                                    }
                                ]
                            }
                        },
                        "Initialize_Certs_HTML_Table": {
                            "runAfter": {
                                "Initialize_Scout_Link": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "certs_html_table",
                                        "type": "string",
                                        "value": "\u003ctable border=\"1\"\u003e\u003ctr\u003e\u003cth\u003eIssuer\u003c/th\u003e\u003cth\u003eSubject\u003c/th\u003e\u003cth\u003eFirst Seen\u003c/th\u003e\u003cth\u003eLast Seen\u003c/th\u003e\u003cth\u003eValid Days\u003c/th\u003e\u003c/tr\u003e"
                                    }
                                ]
                            }
                        },
                        "Initialize_Fingerprints_HTML_Table": {
                            "runAfter": {
                                "Initialize_Scout_Link": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "fingerprints_html_table",
                                        "type": "string",
                                        "value": "\u003ctable border=\"1\"\u003e\u003ctr\u003e\u003cth\u003eType\u003c/th\u003e\u003cth\u003eSignature\u003c/th\u003e\u003cth\u003ePort\u003c/th\u003e\u003cth\u003eFirst Seen\u003c/th\u003e\u003cth\u003eLast Seen\u003c/th\u003e\u003cth\u003eCount\u003c/th\u003e\u003c/tr\u003e"
                                    }
                                ]
                            }
                        },
                        "Add_Certs_Details_To_Incident_Comment_(V3)": {
                            "runAfter": {
                                "Create_Incident_For_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "incidentArmId": "@body('Create_Incident_For_IP')?['id']",
                                    "message": "\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eTop Certificates:\u003c/strong\u003e\u003c/b\u003e\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e@{variables('certs_html_table')}\u003c/p\u003e\u003cbr\u003e"
                                },
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Add_Fingerprints_Details_To_Incident_Comment_(V3)": {
                            "runAfter": {
                                "Create_Incident_For_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "incidentArmId": "@body('Create_Incident_For_IP')?['id']",
                                    "message": "\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eTop Fingerprints\u003c/strong\u003e\u003c/b\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003e:\u003c/strong\u003e\u003c/b\u003e\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e@{variables('fingerprints_html_table')}\u003c/p\u003e\u003cbr\u003e"
                                },
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Initialize_HTML_Table_For_Whois_General": {
                            "runAfter": {
                                "Initialize_Scout_Link": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "whois_general_html_table",
                                        "type": "string",
                                        "value": "\u003ctable border=\"1\"\u003e\u003ctr\u003e\u003cth\u003eModified\u003c/th\u003e\u003cth\u003eASN\u003c/th\u003e\u003cth\u003eCIDR\u003c/th\u003e\u003cth\u003eAs Name\u003c/th\u003e\u003cth\u003eBGP ASN\u003c/th\u003e\u003cth\u003eBGP AS Name\u003c/th\u003e\u003cth\u003eNet Name\u003c/th\u003e\u003cth\u003eCC\u003c/th\u003e\u003cth\u003eDescription\u003c/th\u003e\u003c/tr\u003e"
                                    }
                                ]
                            }
                        },
                        "Initialize_HTML_Table_For_Whois_Admin": {
                            "runAfter": {
                                "Initialize_Scout_Link": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "whois_admin_html_table",
                                        "type": "string",
                                        "value": "\u003ctable border=\"1\"\u003e\u003ctr\u003e\u003cth\u003eAdmin Contact ID\u003c/th\u003e\u003cth\u003eAdmin Contact Role\u003c/th\u003e\u003cth\u003eAdmin Contact Email\u003c/th\u003e\u003cth\u003eAdmin Contact Phone\u003c/th\u003e\u003cth\u003eAdmin Contact Country\u003c/th\u003e\u003cth\u003eAdmin Contact Address\u003c/th\u003e\u003c/tr\u003e"
                                    }
                                ]
                            }
                        },
                        "Initialize_HTML_Table_For_Whois_Tech": {
                            "runAfter": {
                                "Initialize_Scout_Link": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "whois_tech_html_table",
                                        "type": "string",
                                        "value": "\u003ctable border=\"1\"\u003e\u003ctr\u003e\u003cth\u003eTech Contact ID\u003c/th\u003e\u003cth\u003eTech Contact Role\u003c/th\u003e\u003cth\u003eTech Contact Email\u003c/th\u003e\u003cth\u003eTech Contact Phone\u003c/th\u003e\u003cth\u003eTech Contact Country\u003c/th\u003e\u003cth\u003eTech Contact Address\u003c/th\u003e\u003c/tr\u003e"
                                    }
                                ]
                            }
                        },
                        "Initialize_HTML_Table_For_Whois_Organization": {
                            "runAfter": {
                                "Initialize_Scout_Link": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "whois_organization_html_table",
                                        "type": "string",
                                        "value": "\u003ctable border=\"1\"\u003e\u003ctr\u003e\u003cth\u003eOrganization ID\u003c/th\u003e\u003cth\u003eOrganization Name\u003c/th\u003e\u003cth\u003eOrganization Email\u003c/th\u003e\u003cth\u003eOrganization Phone\u003c/th\u003e\u003cth\u003eOrganization Country\u003c/th\u003e\u003cth\u003eOrganization Address\u003c/th\u003e\u003cth\u003eMaintained By Email\u003c/th\u003e\u003cth\u003eMaintained Router Email\u003c/th\u003e\u003c/tr\u003e"
                                    }
                                ]
                            }
                        },
                        "Add_Whois_Details_To_Incident_Comment_(V3)": {
                            "runAfter": {
                                "Create_Incident_For_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "incidentArmId": "@body('Create_Incident_For_IP')?['id']",
                                    "message": "\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eWhois - General:\u003c/strong\u003e\u003c/b\u003e@{variables('whois_general_html_table')}\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eWhois - Admin:\u003c/strong\u003e\u003c/b\u003e @{variables('whois_admin_html_table')}\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eWhois - Tech:\u003c/strong\u003e\u003c/b\u003e @{variables('whois_tech_html_table')}\u003c/p\u003e\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eWhois - Organization:\u003c/strong\u003e\u003c/b\u003e @{variables('whois_organization_html_table')}\u003c/p\u003e"
                                },
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Add_Scout_link_And_General_Information_To_Incident_Comment": {
                            "runAfter": {
                                "Add_Insights_Details_To_Incident_Comment_(V3)": [
                                    "Succeeded",
                                    "Failed",
                                    "TimedOut"
                                ],
                                "Add_Open_Ports_Details_To_Incident_Comment_(V3)": [
                                    "Succeeded",
                                    "TimedOut",
                                    "Failed"
                                ],
                                "Add_PDNS_Details_To_Incident_Comment_(V3)": [
                                    "Succeeded",
                                    "TimedOut",
                                    "Failed"
                                ],
                                "Add_Certs_Details_To_Incident_Comment_(V3)": [
                                    "Succeeded",
                                    "TimedOut",
                                    "Failed"
                                ],
                                "Add_Fingerprints_Details_To_Incident_Comment_(V3)": [
                                    "Succeeded",
                                    "TimedOut",
                                    "Failed"
                                ],
                                "Add_Whois_Details_To_Incident_Comment_(V3)": [
                                    "Succeeded",
                                    "TimedOut",
                                    "Failed"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "incidentArmId": "@body('Create_Incident_For_IP')?['id']",
                                    "message": "\u003cp class=\"editor-paragraph\"\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eIP: \u003c/strong\u003e\u003c/b\u003e@{triggerBody()?['indicator_value']}\u003cbr\u003e\u003cb\u003e\u003cstrong class=\"editor-text-bold\"\u003eCountry Code:\u003c/strong\u003e\u003c/b\u003e @{variables('country_code')}\u003cbr\u003e@{variables('scout_link')}\u003c/p\u003e"
                                },
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Initialize_Time_Range_To_Query_Data": {
                            "runAfter": {
                                "Initialize_Overall_Rating": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "time_range_to_filter_data",
                                        "type": "string",
                                        "value": "@{if(empty(triggerBody()?['time_range']), 'Last hour', triggerBody()?['time_range'])}"
                                    }
                                ]
                            }
                        },
                        "Initialize_PDNS_Table_Name": {
                            "runAfter": {
                                "Initialize_Time_Range_To_Query_Data": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "pdns_table_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Open_Ports_Table_Name": {
                            "runAfter": {
                                "Initialize_Time_Range_To_Query_Data": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "open_ports_table_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Certs_Table_Name": {
                            "runAfter": {
                                "Initialize_Time_Range_To_Query_Data": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "certs_table_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Fingerprints_Table_Name": {
                            "runAfter": {
                                "Initialize_Time_Range_To_Query_Data": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "fingerprints_table_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Insights_Table_Name": {
                            "runAfter": {
                                "Initialize_Time_Range_To_Query_Data": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "insights_table_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Overall_Rating": {
                            "runAfter": {
                                "Initialize_Country_Code": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "overall_rating",
                                        "type": "string",
                                        "value": "@{triggerBody()?['overall_rating']}"
                                    }
                                ]
                            }
                        },
                        "Condition_To_Check_Whether_This_is_First_Run_Or_Not": {
                            "actions": {
                                "Set_Insights_Data_From_Request_Body": {
                                    "runAfter": {
                                        "Set_Fingerprints_Data_From_Request_Data": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "insights_data",
                                        "value": "@chunk(triggerBody()?['insights_data'], 10)[0]"
                                    }
                                },
                                "Set_Whois_Data": {
                                    "runAfter": {
                                        "Set_Insights_Data_From_Request_Body": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "whois_data",
                                        "value": "@triggerBody()?['whois_data']"
                                    }
                                },
                                "Set_PDNS_Data_From_Request_Body": {
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "pdns_data",
                                        "value": "@chunk(triggerBody()?['pdns_data'], 10)[0]"
                                    }
                                },
                                "Set_Open_Ports_Data_From_Request_Body": {
                                    "runAfter": {
                                        "Set_PDNS_Data_From_Request_Body": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "open_ports_data",
                                        "value": "@chunk(triggerBody()?['open_ports_data'], 10)[0]"
                                    }
                                },
                                "Set_Certs_Data_From_Request_Body": {
                                    "runAfter": {
                                        "Set_Open_Ports_Data_From_Request_Body": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "certs_data",
                                        "value": "@chunk(triggerBody()?['certs_data'], 10)[0]"
                                    }
                                },
                                "Set_Fingerprints_Data_From_Request_Data": {
                                    "runAfter": {
                                        "Set_Certs_Data_From_Request_Body": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "fingerprints_data",
                                        "value": "@chunk(triggerBody()?['fingerprints_data'], 10)[0]"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_PDNS_Data": [
                                    "Succeeded"
                                ],
                                "Initialize_Open_Ports_Data": [
                                    "Succeeded"
                                ],
                                "Initialize_Certs_Data": [
                                    "Succeeded"
                                ],
                                "Initialize_Fingerprints_Data": [
                                    "Succeeded"
                                ],
                                "Initialize_Insights_Data": [
                                    "Succeeded"
                                ],
                                "Initialize_Whois_Data": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Condition_To_Update_Table_Names_Based_on_Fetch_Logs_Flag": {
                                        "actions": {
                                            "Run_Query_And_List_Insights_Data_And_Country_Code_For_Indicator": {
                                                "runAfter": {
                                                    "Set_PDNS_Query": [
                                                        "Succeeded"
                                                    ],
                                                    "Set_Certs_Query": [
                                                        "Succeeded"
                                                    ],
                                                    "Set_Open_Ports_Query": [
                                                        "Succeeded"
                                                    ],
                                                    "Set_Fingerprints_Query": [
                                                        "Succeeded"
                                                    ],
                                                    "Set_Whois_Query_For_Fetch_Logs_True": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "body": "@{variables('insights_table_name')}_CL\n| where ip == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by ip\n| mv-expand insights_insights\n| extend InsightScore = case(tolower(insights_overall_rating) == \"malicious\", 3, tolower( insights_overall_rating) == \"suspicious\", 2, 1)\n| sort by InsightScore\n| take 10 \n| project geo_ip_cc, rating=insights_insights.rating, message=insights_insights.message, insights_overall_rating",
                                                    "path": "/queryData",
                                                    "queries": {
                                                    "subscriptions": "[subscription().subscriptionId]",
                                                    "resourcegroups": "[resourceGroup().name]",
                                                        "resourcetype": "Log Analytics Workspace",
                                                        "resourcename": "[trim(parameters('WorkspaceName'))]",
                                                        "timerange": "@variables('time_range_to_filter_data')"
                                                    }
                                                }
                                            },
                                            "Set_Country_Code_From_Logs_Data": {
                                                "runAfter": {
                                                    "Set_Overall_Rating": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "country_code",
                                                    "value": "@if(empty(body('Run_Query_And_List_Insights_Data_And_Country_Code_For_Indicator')?['value'][0]?['geo_ip_cc']), 'No Country Code Found', body('Run_Query_And_List_Insights_Data_And_Country_Code_For_Indicator')?['value'][0]?['geo_ip_cc'])"
                                                }
                                            },
                                            "Set_PDNS_Table_Name_For_Fetch_Logs_True": {
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "pdns_table_name",
                                                    "value": "@concat(parameters('cymru_scout_ip_table_name'), '_Summary_PDNS')"
                                                }
                                            },
                                            "Set_Certs_Table_Name_For_Fetch_Logs_True": {
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "certs_table_name",
                                                    "value": "@concat(parameters('cymru_scout_ip_table_name'), '_Summary_Certs')"
                                                }
                                            },
                                            "Set_Open_Ports_Table_Name_For_Fetch_Logs_True": {
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "open_ports_table_name",
                                                    "value": "@concat(parameters('cymru_scout_ip_table_name'), '_Summary_OpenPorts')"
                                                }
                                            },
                                            "Set_Fingerprints_Table_Name_For_Fetch_Logs_True": {
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "fingerprints_table_name",
                                                    "value": "@concat(parameters('cymru_scout_ip_table_name'), '_Summary_Fingerprints')"
                                                }
                                            },
                                            "Set_Insights_Table_Name_For_Fetch_Logs_True": {
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "insights_table_name",
                                                    "value": "@concat(parameters('cymru_scout_ip_table_name'), '_Summary_Details')"
                                                }
                                            },
                                            "Set_Overall_Rating": {
                                                "runAfter": {
                                                    "Run_Query_And_List_Insights_Data_And_Country_Code_For_Indicator": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "overall_rating",
                                                    "value": "@if(empty(body('Run_Query_And_List_Insights_Data_And_Country_Code_For_Indicator')?['value'][0]?['insights_overall_rating']), 'suspicious', body('Run_Query_And_List_Insights_Data_And_Country_Code_For_Indicator')?['value'][0]?['insights_overall_rating'])"
                                                }
                                            },
                                            "Set_Insights_Data_From_Query_Results": {
                                                "runAfter": {
                                                    "Set_Country_Code_From_Logs_Data": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "insights_data",
                                                    "value": "@body('Run_Query_And_List_Insights_Data_And_Country_Code_For_Indicator')?['value']"
                                                }
                                            },
                                            "Set_PDNS_Query": {
                                                "runAfter": {
                                                    "Set_PDNS_Table_Name_For_Fetch_Logs_True": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "pdns_query",
                                                    "value": "@{variables('pdns_table_name')}_CL\n| where ip == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by ip, domain\n| sort by event_count\n| project domain, event_count\n| take 10 "
                                                }
                                            },
                                            "Set_Certs_Query": {
                                                "runAfter": {
                                                    "Set_Certs_Table_Name_For_Fetch_Logs_True": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "certs_query",
                                                    "value": "@{variables('certs_table_name')}_CL\n| where ip == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by issuer, subject, not_after, not_before, md5, valid_days, sha1, sha256\n| sort by valid_days asc \n| take 10"
                                                }
                                            },
                                            "Set_Open_Ports_Query": {
                                                "runAfter": {
                                                    "Set_Open_Ports_Table_Name_For_Fetch_Logs_True": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "open_ports_query",
                                                    "value": "@{variables('open_ports_table_name')}_CL\n| where ip == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by service, port, protocol, protocol_text\n| sort by event_count\n| take 10 "
                                                }
                                            },
                                            "Set_Fingerprints_Query": {
                                                "runAfter": {
                                                    "Set_Fingerprints_Table_Name_For_Fetch_Logs_True": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "fingerprints_query",
                                                    "value": "@{variables('fingerprints_table_name')}_CL\n| where ip == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by summary_fingerprint_type, signature, port\n| project-rename type=summary_fingerprint_type\n| sort by count\n| take 10 "
                                                }
                                            },
                                            "Set_Whois_Query_For_Fetch_Logs_True": {
                                                "runAfter": {
                                                    "Set_Insights_Table_Name_For_Fetch_Logs_True": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "whois_query",
                                                    "value": "@{variables('whois_table_name')}_CL\n| where ip == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by ip\n| project whois_about_contact_address, whois_about_contact_city, whois_about_contact_country, whois_about_contact_email, whois_about_contact_person, whois_about_contact_phone, whois_about_contact_role, whois_abuse_contact_id, whois_address, whois_admin_contact_address, whois_admin_contact_city, whois_admin_contact_country, whois_admin_contact_email, whois_admin_contact_id, whois_admin_contact_person, whois_admin_contact_phone, whois_admin_contact_role, whois_as_name, whois_asn, whois_bgp_asn, whois_bgp_asn_name, whois_cc, whois_cidr, whois_city, whois_description, whois_mnt_by_email, whois_mnt_lower_email, whois_mnt_router_email, whois_modified, whois_net_handle, whois_net_name, whois_org_address, whois_org_city, whois_org_country, whois_org_email, whois_org_id, whois_org_name, whois_org_phone, whois_tech_contact_address, whois_tech_contact_city, whois_tech_contact_country, whois_tech_contact_email, whois_tech_contact_id, whois_tech_contact_person, whois_tech_contact_phone, whois_tech_contact_role"
                                                }
                                            }
                                        },
                                        "else": {
                                            "actions": {
                                                "Set_PDNS_Table_Name_For_Fetch_Logs_False": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "pdns_table_name",
                                                        "value": "@triggerBody()?['pdns_table_name']"
                                                    }
                                                },
                                                "Set_Certs_Table_Name_For_Fetch_Logs_False": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "certs_table_name",
                                                        "value": "@triggerBody()?['certs_table_name']"
                                                    }
                                                },
                                                "Set_Open_Ports_Table_Name_For_Fetch_Logs_False": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "open_ports_table_name",
                                                        "value": "@triggerBody()?['open_ports_table_name']"
                                                    }
                                                },
                                                "Set_Fingerprints_Table_Name_For_Fetch_Logs_False": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "fingerprints_table_name",
                                                        "value": "@triggerBody()?['fingerprints_table_name']"
                                                    }
                                                },
                                                "Set_Insights_Table_Name_For_Fetch_Logs_False": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "insights_table_name",
                                                        "value": "@triggerBody()?['insights_table_name']"
                                                    }
                                                },
                                                "Set_Country_Code": {
                                                    "runAfter": {
                                                        "Set_Insights_Table_Name_For_Fetch_Logs_False": [
                                                            "Succeeded"
                                                        ],
                                                        "Set_PDNS_Query_For_Live_Investigation_Search": [
                                                            "Succeeded"
                                                        ],
                                                        "Set_Certs_Query_For_Live_Investigation_Search": [
                                                            "Succeeded"
                                                        ],
                                                        "Set_Open_Ports_Query_For_Live_Investigation_Search": [
                                                            "Succeeded"
                                                        ],
                                                        "Set_Fingerprints_Query_For_Live_Investigation_Search": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "country_code",
                                                        "value": "@{if(empty(triggerBody()?['country_code']), 'No Country Code Found', triggerBody()?['country_code'])}"
                                                    }
                                                },
                                                "Run_Query_and_List_Results_for_Insights": {
                                                    "runAfter": {
                                                        "Set_Country_Code": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": "@{variables('insights_table_name')}_CL\n| where ip_s == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by rating_s, Message, ip_s\n| project-rename rating=rating_s, message=Message\n| sort by rank_d\n| take 10",
                                                        "path": "/queryData",
                                                        "queries": {
                                                            "subscriptions": "[subscription().subscriptionId]",
                                                            "resourcegroups": "[resourceGroup().name]",
                                                            "resourcetype": "Log Analytics Workspace",
                                                            "resourcename": "[trim(parameters('WorkspaceName'))]",
                                                            "timerange": "@variables('time_range_to_filter_data')"
                                                        }
                                                    }
                                                },
                                                "Set_Insights_Data_From_Query_Results_For_Fetch_Logs_False": {
                                                    "runAfter": {
                                                        "Run_Query_and_List_Results_for_Insights": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "insights_data",
                                                        "value": "@body('Run_Query_and_List_Results_for_Insights')?['value']"
                                                    }
                                                },
                                                "Set_PDNS_Query_For_Live_Investigation_Search": {
                                                    "runAfter": {
                                                        "Set_PDNS_Table_Name_For_Fetch_Logs_False": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "pdns_query",
                                                        "value": "@{variables('pdns_table_name')}_CL\n| where ip_s == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by ip_s, domain_s\n| project-rename domain=domain_s, event_count=event_count_d\n| sort by event_count\n| take 10 "
                                                    }
                                                },
                                                "Set_Certs_Query_For_Live_Investigation_Search": {
                                                    "runAfter": {
                                                        "Set_Certs_Table_Name_For_Fetch_Logs_False": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "certs_query",
                                                        "value": "@{variables('certs_table_name')}_CL\n| where ip_s == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by issuer_s, subject_s, not_after_s, not_before_s, md5_g, valid_days_d, sha1_s, sha256_s\n| project-rename issuer=issuer_s, subject=subject_s, first_seen=first_seen_s, last_seen=last_seen_s, valid_days=valid_days_d\n| sort by valid_days asc \n| take 10 "
                                                    }
                                                },
                                                "Set_Open_Ports_Query_For_Live_Investigation_Search": {
                                                    "runAfter": {
                                                        "Set_Open_Ports_Table_Name_For_Fetch_Logs_False": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "open_ports_query",
                                                        "value": "@{variables('open_ports_table_name')}_CL\n| where ip_s == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by service_s, port_d, protocol_d, protocol_text_s\n| project-rename port=port_d, protocol=protocol_d, protocol_text=protocol_text_s, event_count=event_count_d\n| sort by event_count\n| take 10 "
                                                    }
                                                },
                                                "Set_Fingerprints_Query_For_Live_Investigation_Search": {
                                                    "runAfter": {
                                                        "Set_Fingerprints_Table_Name_For_Fetch_Logs_False": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "fingerprints_query",
                                                        "value": "@{variables('fingerprints_table_name')}_CL\n| where ip_s == \"@{triggerBody()?['indicator_value']}\"\n| extend SignatureG = column_ifexists('signature_g', '')\n| extend SignatureS = column_ifexists('signature_s', '')\n| extend Signature = coalesce(SignatureG, SignatureS)\n| summarize arg_max(TimeGenerated, *) by type_s, Signature, port_d\n| project-rename type=type_s, port=port_d, first_seen=first_seen_s, last_seen=last_seen_s, signature=Signature, count=count_d\n| sort by count\n| take 10 "
                                                    }
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "equals": [
                                                        "@triggerBody()?['fetch_from_logs']",
                                                        "@true"
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "Run_Query_and_List_Results_for_Top_PDNS": {
                                        "runAfter": {
                                            "Condition_To_Update_Table_Names_Based_on_Fetch_Logs_Flag": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "body": "@variables('pdns_query')",
                                            "path": "/queryData",
                                            "queries": {
                                                "subscriptions": "[subscription().subscriptionId]",
                                                "resourcegroups": "[resourceGroup().name]",
                                                "resourcetype": "Log Analytics Workspace",
                                                "resourcename": "[trim(parameters('WorkspaceName'))]",
                                                "timerange": "@variables('time_range_to_filter_data')"
                                            }
                                        }
                                    },
                                    "Run_Query_and_List_Results_for_Top_Certs": {
                                        "runAfter": {
                                            "Condition_To_Update_Table_Names_Based_on_Fetch_Logs_Flag": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "body": "@variables('certs_query')",
                                            "path": "/queryData",
                                            "queries": {
                                                "subscriptions": "[subscription().subscriptionId]",
                                                "resourcegroups": "[resourceGroup().name]",
                                                "resourcetype": "Log Analytics Workspace",
                                                "resourcename": "[trim(parameters('WorkspaceName'))]",
                                                "timerange": "@variables('time_range_to_filter_data')"
                                            }
                                        }
                                    },
                                    "Run_Query_and_List_Results_for_Top_Open_Ports": {
                                        "runAfter": {
                                            "Condition_To_Update_Table_Names_Based_on_Fetch_Logs_Flag": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "body": "@variables('open_ports_query')",
                                            "path": "/queryData",
                                            "queries": {
                                                "subscriptions": "[subscription().subscriptionId]",
                                                "resourcegroups": "[resourceGroup().name]",
                                                "resourcetype": "Log Analytics Workspace",
                                                "resourcename": "[trim(parameters('WorkspaceName'))]",
                                                "timerange": "@variables('time_range_to_filter_data')"
                                            }
                                        }
                                    },
                                    "Run_Query_and_List_Results_for_Top_Fingerprints": {
                                        "runAfter": {
                                            "Condition_To_Update_Table_Names_Based_on_Fetch_Logs_Flag": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "body": "@variables('fingerprints_query')",
                                            "path": "/queryData",
                                            "queries": {
                                                "subscriptions": "[subscription().subscriptionId]",
                                                "resourcegroups": "[resourceGroup().name]",
                                                "resourcetype": "Log Analytics Workspace",
                                                "resourcename": "[trim(parameters('WorkspaceName'))]",
                                                "timerange": "@variables('time_range_to_filter_data')"
                                            }
                                        }
                                    },
                                    "Run_Query_and_List_Results_for_Whois": {
                                        "runAfter": {
                                            "Condition_To_Update_Table_Names_Based_on_Fetch_Logs_Flag": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "body": "@variables('whois_query')",
                                            "path": "/queryData",
                                            "queries": {
                                                "subscriptions": "[subscription().subscriptionId]",
                                                "resourcegroups": "[resourceGroup().name]",
                                                "resourcetype": "Log Analytics Workspace",
                                                "resourcename": "[trim(parameters('WorkspaceName'))]",
                                                "timerange": "@variables('time_range_to_filter_data')"
                                            }
                                        }
                                    },
                                    "Set_PDNS_Data_From_Query_Data": {
                                        "runAfter": {
                                            "Run_Query_and_List_Results_for_Top_PDNS": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "pdns_data",
                                            "value": "@body('Run_Query_and_List_Results_for_Top_PDNS')?['value']"
                                        }
                                    },
                                    "Set_Certs_Data_From_Query_Data": {
                                        "runAfter": {
                                            "Run_Query_and_List_Results_for_Top_Certs": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "certs_data",
                                            "value": "@body('Run_Query_and_List_Results_for_Top_Certs')?['value']"
                                        }
                                    },
                                    "Set_Open_Ports_Data_From_Query_Data": {
                                        "runAfter": {
                                            "Run_Query_and_List_Results_for_Top_Open_Ports": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "open_ports_data",
                                            "value": "@body('Run_Query_and_List_Results_for_Top_Open_Ports')?['value']"
                                        }
                                    },
                                    "Set_Fingerprints_Data_From_Query_Data": {
                                        "runAfter": {
                                            "Run_Query_and_List_Results_for_Top_Fingerprints": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "fingerprints_data",
                                            "value": "@body('Run_Query_and_List_Results_for_Top_Fingerprints')?['value']"
                                        }
                                    },
                                    "Set_Whois_Data_From_Query_Data": {
                                        "runAfter": {
                                            "Run_Query_and_List_Results_for_Whois": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "whois_data",
                                            "value": "@if(empty(body('Run_Query_and_List_Results_for_Whois')?['value']), null, body('Run_Query_and_List_Results_for_Whois')?['value'][0])"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['is_first_run']",
                                            "@true"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_PDNS_Data": {
                            "runAfter": {
                                "Initialize_PDNS_Query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "pdns_data",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_Open_Ports_Data": {
                            "runAfter": {
                                "Initialize_Open_Ports_Query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "open_ports_data",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_Certs_Data": {
                            "runAfter": {
                                "Initialize_Certs_Query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "certs_data",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_Fingerprints_Data": {
                            "runAfter": {
                                "Initialize_Fingerprints_Query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "fingerprints_data",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_Insights_Data": {
                            "runAfter": {
                                "Initialize_Insights_Table_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "insights_data",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_Whois_Data": {
                            "runAfter": {
                                "Initialize_Whois_Query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "whois_data",
                                        "type": "object"
                                    }
                                ]
                            }
                        },
                        "Condition_To_Add_Insights_Data_In_HTML_Table_If_It_Is_Available_In_Logs": {
                            "actions": {
                                "Complete_HTML_Table_For_Insights_Data": {
                                    "runAfter": {
                                        "For_Each_Insights_Data": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "insights_html_table",
                                        "value": "\u003c/table\u003e"
                                    }
                                },
                                "For_Each_Insights_Data": {
                                    "foreach": "@variables('insights_data')",
                                    "actions": {
                                        "Append_Insight_To_Insights_HTML_Table": {
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "insights_html_table",
                                                "value": "\u003ctr\u003e\u003ctd\u003e@{items('For_Each_Insights_Data')?['rating']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Insights_Data')?['message']}\u003c/td\u003e\u003c/tr\u003e"
                                            }
                                        }
                                    },
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "Condition_To_Check_Whether_This_is_First_Run_Or_Not": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_Insights_HTML_Table_For_No_Insights_Record_Found": {
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "insights_html_table",
                                            "value": "\u003cb\u003e No Insights Data Found in Logs. \u003c/b\u003e"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@empty(variables('insights_data'))",
                                                "@true"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Add_PDNS_Data_To_HTML_Table_If_It_Is_Available": {
                            "actions": {
                                "Complete_PDNS_HTML_Table": {
                                    "runAfter": {
                                        "For_Each_PDNS": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "pdns_html_table",
                                        "value": "\u003c/table\u003e"
                                    }
                                },
                                "For_Each_PDNS": {
                                    "foreach": "@variables('pdns_data')",
                                    "actions": {
                                        "Append_PDNS_To_PDNS_HTML_Table": {
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "pdns_html_table",
                                                "value": "\u003ctr\u003e\u003ctd\u003e@{items('For_Each_PDNS')?['domain']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_PDNS')?['event_count']}\u003c/td\u003e\u003c/tr\u003e"
                                            }
                                        }
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_To_Check_Whether_This_is_First_Run_Or_Not": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_PDNS_HTML_Table_Data_For_No_PDNS_Found": {
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "pdns_html_table",
                                            "value": "\u003cb\u003e No PDNS Details Found. \u003c/b\u003e"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@empty(variables('pdns_data'))",
                                                "@true"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Add_Certs_Data_To_HTML_Table_If_It_Is_Available": {
                            "actions": {
                                "For_Each_Certs": {
                                    "foreach": "@variables('certs_data')",
                                    "actions": {
                                        "Append_Certs_Information_To_Certs_HTML_Table": {
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "certs_html_table",
                                                "value": "\u003ctr\u003e\u003ctd\u003e@{items('For_Each_Certs')?['issuer']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Certs')?['subject']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Certs')?['first_seen']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Certs')?['last_seen']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Certs')?['valid_days']}\u003c/td\u003e\u003c/tr\u003e"
                                            }
                                        }
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "Complete_Certs_HTML_Table": {
                                    "runAfter": {
                                        "For_Each_Certs": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "certs_html_table",
                                        "value": "\u003c/table\u003e"
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_To_Check_Whether_This_is_First_Run_Or_Not": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_Certs_HTML_Table_Data_For_No_Certs_Data_Found": {
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "certs_html_table",
                                            "value": "\u003cb\u003e No Certs Data Found. \u003c/b\u003e"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@empty(variables('certs_data'))",
                                                "@true"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Add_Open_Ports_Data_To_HTML_Table_If_It_Is_Available": {
                            "actions": {
                                "Complete_Open_Ports_HTML_Table": {
                                    "runAfter": {
                                        "For_Each_Open_Port": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "open_ports_html_table",
                                        "value": "\u003c/table\u003e"
                                    }
                                },
                                "For_Each_Open_Port": {
                                    "foreach": "@variables('open_ports_data')",
                                    "actions": {
                                        "Append_Each_Port_Details_To_HTML_Table": {
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "open_ports_html_table",
                                                "value": "\u003ctr\u003e\u003ctd\u003e@{items('For_Each_Open_Port')?['port']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Open_Port')?['protocol']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Open_Port')?['protocol_text']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Open_Port')?['event_count']}\u003c/td\u003e\u003c/tr\u003e"
                                            }
                                        }
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_To_Check_Whether_This_is_First_Run_Or_Not": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_Open_Ports_HTML_Table_Data_For_No_Data_Found": {
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "open_ports_html_table",
                                            "value": "\u003cb\u003e No Open Ports Details Found. \u003c/b\u003e"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@empty(variables('open_ports_data'))",
                                                "@true"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Add_Fingerprints_Data_To_HTML_Table_If_It_Is_Available": {
                            "actions": {
                                "For_Each_Fingerprints": {
                                    "foreach": "@variables('fingerprints_data')",
                                    "actions": {
                                        "Append_Fingerprints_Information_To_Fingerprints_HTML_Table": {
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "fingerprints_html_table",
                                                "value": "\u003ctr\u003e\u003ctd\u003e@{items('For_Each_Fingerprints')?['type']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Fingerprints')?['signature']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Fingerprints')?['port']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Fingerprints')?['first_seen']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Fingerprints')?['last_seen']}\u003c/td\u003e\u003ctd\u003e@{items('For_Each_Fingerprints')?['count']}\u003c/td\u003e\u003c/tr\u003e"
                                            }
                                        }
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "Complete_Fingerprints_HTML_Table": {
                                    "runAfter": {
                                        "For_Each_Fingerprints": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "fingerprints_html_table",
                                        "value": "\u003c/table\u003e"
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_To_Check_Whether_This_is_First_Run_Or_Not": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_Fingerprints_HTML_Table_Data_For_No_Fingerprints_Data_Found": {
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "fingerprints_html_table",
                                            "value": "\u003cb\u003e No Fingerprints Data Found. \u003c/b\u003e"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@empty(variables('fingerprints_data'))",
                                                "@true"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Add_Whois_Data_To_HTML_Table_If_It_Is_Available": {
                            "actions": {
                                "Condition_To_Add_Whois_Data_Based_On_First_Run": {
                                    "actions": {
                                        "Append_Whois_General_Information_To_Whois_General_HTML_Table_For_First_Run": {
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "whois_general_html_table",
                                                "value": "\u003ctr\u003e\u003ctd\u003e@{variables('whois_data')?['modified']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['asn']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['cidr']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['as_name']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['bgp_asn']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['bgp_asn_name']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['net_name']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['cc']}\u003c/td\u003e\u003ctd\u003e@{replace(replace(replace(variables('whois_data')?['description'], '[\"', ''), '\"]', ''), '\",\"', '\n')}\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e"
                                            }
                                        },
                                        "Append_Whois_Admin_Information_To_Whois_Admin_HTML_Table_For_First_Run": {
                                            "runAfter": {
                                                "Append_Whois_General_Information_To_Whois_General_HTML_Table_For_First_Run": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "whois_admin_html_table",
                                                "value": "\u003ctr\u003e\u003ctd\u003e@{variables('whois_data')?['admin_contact_id']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['admin_contact_role']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['admin_contact_email']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['admin_contact_phone']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['admin_contact_country']}\u003c/td\u003e\u003ctd\u003e@{replace(replace(variables('whois_data')?['admin_contact_address'], '[\"', ''), '\"]', '')}\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e"
                                            }
                                        },
                                        "Append_Whois_Tech_Information_To_Whois_Tech_HTML_Table_For_First_Run": {
                                            "runAfter": {
                                                "Append_Whois_Admin_Information_To_Whois_Admin_HTML_Table_For_First_Run": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "whois_tech_html_table",
                                                "value": "\u003ctr\u003e\u003ctd\u003e@{variables('whois_data')?['tech_contact_id']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['tech_contact_role']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['tech_contact_email']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['tech_contact_phone']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['tech_contact_country']}\u003c/td\u003e\u003ctd\u003e@{replace(replace(variables('whois_data')?['tech_contact_address'], '[\"', ''), '\"]', '')}\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e"
                                            }
                                        },
                                        "Append_Whois_Org_Information_To_Whois_Organization_HTML_Table_For_First_Run": {
                                            "runAfter": {
                                                "Append_Whois_Tech_Information_To_Whois_Tech_HTML_Table_For_First_Run": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "whois_organization_html_table",
                                                "value": "\u003ctr\u003e\u003ctd\u003e@{variables('whois_data')?['org_id']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['org_name']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['org_email']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['org_phone']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['org_country']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['org_address']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['mnt_by_email']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['mnt_router_email']}\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e"
                                            }
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "Append_Whois_General_Information_To_Whois_General_HTML_Table": {
                                                "type": "AppendToStringVariable",
                                                "inputs": {
                                                    "name": "whois_general_html_table",
                                                    "value": "\u003ctr\u003e\u003ctd\u003e@{variables('whois_data')?['whois_modified']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_asn']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_cidr']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_as_name']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_bgp_asn']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_bgp_asn_name']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_net_name']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_cc']}\u003c/td\u003e\u003ctd\u003e@{replace(replace(replace(variables('whois_data')?['whois_description'], '[\"', ''), '\"]', ''), '\",\"', '\n')}\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e"
                                                }
                                            },
                                            "Append_Whois_Admin_Information_To_Whois_Admin_HTML_Table": {
                                                "runAfter": {
                                                    "Append_Whois_General_Information_To_Whois_General_HTML_Table": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "AppendToStringVariable",
                                                "inputs": {
                                                    "name": "whois_admin_html_table",
                                                    "value": "\u003ctr\u003e\u003ctd\u003e@{variables('whois_data')?['whois_admin_contact_id']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_admin_contact_role']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_admin_contact_email']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_admin_contact_phone']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_admin_contact_country']}\u003c/td\u003e\u003ctd\u003e@{replace(replace(variables('whois_data')?['whois_admin_contact_address'], '[\"', ''), '\"]', '')}\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e"
                                                }
                                            },
                                            "Append_Whois_Tech_Information_To_Whois_Tech_HTML_Table": {
                                                "runAfter": {
                                                    "Append_Whois_Admin_Information_To_Whois_Admin_HTML_Table": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "AppendToStringVariable",
                                                "inputs": {
                                                    "name": "whois_tech_html_table",
                                                    "value": "\u003ctr\u003e\u003ctd\u003e@{variables('whois_data')?['whois_tech_contact_id']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_tech_contact_role']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_tech_contact_email']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_tech_contact_phone']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_tech_contact_country']}\u003c/td\u003e\u003ctd\u003e@{replace(replace(variables('whois_data')?['whois_tech_contact_address'], '[\"', ''), '\"]', '')}\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e"
                                                }
                                            },
                                            "Append_Whois_Organization_Information_To_Whois_Organization_HTML_Table": {
                                                "runAfter": {
                                                    "Append_Whois_Tech_Information_To_Whois_Tech_HTML_Table": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "AppendToStringVariable",
                                                "inputs": {
                                                    "name": "whois_organization_html_table",
                                                    "value": "\u003ctr\u003e\u003ctd\u003e@{variables('whois_data')?['whois_org_id']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_org_name']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_org_email']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_org_phone']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_org_country']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_org_address']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_mnt_by_email']}\u003c/td\u003e\u003ctd\u003e@{variables('whois_data')?['whois_mnt_router_email']}\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['is_first_run']",
                                                    "@true"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Condition_To_Check_Whether_This_is_First_Run_Or_Not": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_Whois_HTML_Table_Data_For_No_Whois_General_Data_Found": {
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "whois_general_html_table",
                                            "value": "\u003cb\u003e No Whois General Data Found. \u003c/b\u003e"
                                        }
                                    },
                                    "Set_Whois_HTML_Table_Data_For_No_Whois_Admin_Data_Found": {
                                        "runAfter": {
                                            "Set_Whois_HTML_Table_Data_For_No_Whois_General_Data_Found": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "whois_admin_html_table",
                                            "value": "\u003cb\u003e No Whois Admin Data Found. \u003c/b\u003e"
                                        }
                                    },
                                    "Set_Whois_HTML_Table_Data_For_No_Whois_Tech_Data_Found": {
                                        "runAfter": {
                                            "Set_Whois_HTML_Table_Data_For_No_Whois_Admin_Data_Found": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "whois_tech_html_table",
                                            "value": "\u003cb\u003e No Whois Tech Data Found. \u003c/b\u003e"
                                        }
                                    },
                                    "Set_Whois_HTML_Table_Data_For_No_Whois_Org_Data_Found": {
                                        "runAfter": {
                                            "Set_Whois_HTML_Table_Data_For_No_Whois_Tech_Data_Found": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "whois_organization_html_table",
                                            "value": "\u003cb\u003e No Whois Organization Data Found. \u003c/b\u003e"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@variables('whois_data')",
                                                "@null"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_PDNS_Query": {
                            "runAfter": {
                                "Initialize_PDNS_Table_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "pdns_query",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Open_Ports_Query": {
                            "runAfter": {
                                "Initialize_Open_Ports_Table_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "open_ports_query",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Certs_Query": {
                            "runAfter": {
                                "Initialize_Certs_Table_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "certs_query",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Fingerprints_Query": {
                            "runAfter": {
                                "Initialize_Fingerprints_Table_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "fingerprints_query",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Whois_Query": {
                            "runAfter": {
                                "Initialize_Whois_Table_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "whois_query",
                                        "type": "string",
                                        "value": "@{variables('whois_table_name')}_CL\n| where ip_s == \"@{triggerBody()?['indicator_value']}\"\n| summarize arg_max(TimeGenerated, *) by ip_s\n| project whois_about_contact_address=about_contact_address_s, whois_about_contact_city=about_contact_city_s, whois_about_contact_country=about_contact_country_s, whois_about_contact_email=about_contact_email_s, whois_about_contact_person=about_contact_person_s, whois_about_contact_phone=about_contact_phone_s, whois_about_contact_role=about_contact_role_s, whois_abuse_contact_id=abuse_contact_id_s, whois_address=address_s, whois_admin_contact_address=admin_contact_address_s, whois_admin_contact_city=admin_contact_city_s, whois_admin_contact_country=admin_contact_country_s, whois_admin_contact_email=admin_contact_email_s, whois_admin_contact_id=admin_contact_id_s, whois_admin_contact_person=admin_contact_person_s, whois_admin_contact_phone=admin_contact_phone_s, whois_admin_contact_role=admin_contact_role_s, whois_as_name=as_name_s, whois_asn=asn_d, whois_bgp_asn=bgp_asn_d, whois_bgp_asn_name=bgp_asn_name_s, whois_cc=cc_s, whois_cidr=cidr_s, whois_city=city_s, whois_description=description_s, whois_mnt_by_email=mnt_by_email_s, whois_mnt_lower_email=mnt_lower_email_s, whois_mnt_router_email=mnt_router_email_s, whois_modified=modified_s, whois_net_handle=net_handle_s, whois_net_name=net_name_s, whois_org_address=org_address_s, whois_org_city=org_city_s, whois_org_country=org_country_s, whois_org_email=org_email_s, whois_org_id=org_id_s, whois_org_name=org_name_s, whois_org_phone=org_phone_s, whois_tech_contact_address=tech_contact_address_s, whois_tech_contact_city=tech_contact_city_s, whois_tech_contact_country=tech_contact_country_s, whois_tech_contact_email=tech_contact_email_s, whois_tech_contact_id=tech_contact_id_s, whois_tech_contact_person=tech_contact_person_s, whois_tech_contact_phone=tech_contact_phone_s, whois_tech_contact_role=tech_contact_role_s"
                                    }
                                ]
                            }
                        },
                        "Initialize_Whois_Table_Name": {
                            "runAfter": {
                                "Initialize_Time_Range_To_Query_Data": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "whois_table_name",
                                        "type": "string",
                                        "value": "@{if(empty(triggerBody()?['whois_table_name']), 'Cymru_Scout_IP_Data_Details', triggerBody()?['whois_table_name'])}"
                                    }
                                ]
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "outlook": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('OutlookConnectionName'))]",
                                "connectionName": "[variables('OutlookConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Outlook')]"
                            },
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                                "connectionName": "[variables('AzuremonitorlogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "TeamCymruScoutCreateIncidentAndNotify",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('OutlookConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {
                },
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('OutlookConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('OutlookConnectionName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Outlook')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzuremonitorlogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzuremonitorlogsConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
                }
            }
        }
    ]
}
