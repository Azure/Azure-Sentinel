{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "FileHash Enrichment - Zscaler",
        "description": "This playbook post a Zscaler Sandbox report for each FileHash found in the incident.",
        "prerequisites": [
            "1. This playbook leverages a nested playbook: Zscaler authentication. The **Zscaler-Authentication-Playbook** can be deployed using below steps:\n\n 1. Using direct ARM template (github)\n\n 2. By navigating to Automation --> Playbook templates --> ZScalar Authentication",
            "2. Create a block category in Zscaler, which this playbook will add IPs to."
        ],
        "lastUpdateTime": "2021-07-28T00:00:00.000Z",
        "entities": [ "FileHash" ],
        "tags": [ "Enrichment" ],
        "support": {
            "tier": "microsoft"
        },
        "author": {
            "name": "microsoft"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Zscaler-Get-Sandbox-Report-For-Hash",
            "type": "String",
            "metadata": {
                "description": "Name of the Logic App/Playbook"
            }
        },
        "Zscaler Authentation Playbook": {
            "defaultValue": "Zscaler-Authentication-Playbook",
            "type": "String",
            "metadata": {
                "description": "Name of the Zscaler Authentication Playbook"
            }
        },
        "Zscaler Admin Url": {
            "defaultValue": "https://admin.<zscaler_instance_domain>.net",
            "type": "string",
            "metadata": {
                "description": "Update to a valid Zscaler admin url."
            }
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "ZscalerAuthenticationFlow": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('Zscaler Authentation Playbook'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "FileHashEnrichment-Zscaler",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Entities_-_Get_FileHashes": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/filehash"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
                            "actions": {
                                "Append_to_Result_variable": {
                                    "runAfter": {
                                        "Parse_Result": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "Result",
                                        "value": "Summary: @{body('Parse_Result')?['Summary']}<br/>"
                                    }
                                },
                                "Compose": {
                                    "runAfter": {
                                        "Append_to_Result_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "<img src=\"https://www.zscaler.com//themes/custom/zscaler/logo.svg\" alt=\"Zscaler\">"
                                },
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>@{outputs('Compose')}<br>\nFileHash report from Zscaler playbook:<br>\n<br>\nSummary:<br>\nStatus: @{body('Parse_Result')?['Summary']?['Summary']?['Status']}<br>\nCategory: @{body('Parse_Result')?['Summary']?['Summary']?['Category']}<br>\nFileType: @{body('Parse_Result')?['Summary']?['Summary']?['FileType']}<br>\n<br>\nClassification:<br>\nType: @{body('Parse_Result')?['Summary']?['Classification']?['Type']}<br>\nCategory: @{body('Parse_Result')?['Summary']?['Classification']?['Category']}<br>\nScore: @{body('Parse_Result')?['Summary']?['Classification']?['Score']}<br>\nDetected Malware: @{body('Parse_Result')?['Summary']?['Classification']?['DetectedMalware']}<br>\n<br>\nFile properties:<br>\nFile type: @{body('Parse_Result')?['Summary']?['FileProperties']?['FileType']}<br>\nFile size: @{body('Parse_Result')?['Summary']?['FileProperties']?['FileSize']}<br>\nMD5: @{body('Parse_Result')?['Summary']?['FileProperties']?['MD5']}<br>\nSHA1: @{body('Parse_Result')?['Summary']?['FileProperties']?['SHA1']}<br>\nSha256: @{body('Parse_Result')?['Summary']?['FileProperties']?['Sha256']}<br>\nIssuer: @{body('Parse_Result')?['Summary']?['FileProperties']?['Issuer']}<br>\nDigital certificate: @{body('Parse_Result')?['Summary']?['FileProperties']?['DigitalCerificate']}<br>\nSSDeep: @{body('Parse_Result')?['Summary']?['FileProperties']?['SSDeep']}<br>\nRootCA: @{body('Parse_Result')?['Summary']?['FileProperties']?['RootCA']}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "cookie": "@body('Parse_Authentication_Response')?['cookie']",
                                        "headers": {
                                            "Cache-Control": "no-cache",
                                            "Content-Type": "application/json"
                                        },
                                        "method": "GET",
                                        "uri": "[uriComponentToString(uri(parameters('Zscaler Admin Url'), '/api/v1/sandbox/report/@{items(''For_each'')?[''Value'']}?details=summary'))]"
                                    }
                                },
                                "Parse_Result": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP')",
                                        "schema": {
                                            "properties": {
                                                "Summary": {
                                                    "properties": {
                                                        "Classification": {
                                                            "properties": {
                                                                "Category": {
                                                                    "type": "string"
                                                                },
                                                                "DetectedMalware": {
                                                                    "type": "string"
                                                                },
                                                                "Score": {
                                                                    "type": "integer"
                                                                },
                                                                "Type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "FileProperties": {
                                                            "properties": {
                                                                "DigitalCerificate": {
                                                                    "type": "string"
                                                                },
                                                                "FileSize": {
                                                                    "type": "integer"
                                                                },
                                                                "FileType": {
                                                                    "type": "string"
                                                                },
                                                                "Issuer": {
                                                                    "type": "string"
                                                                },
                                                                "MD5": {
                                                                    "type": "string"
                                                                },
                                                                "RootCA": {
                                                                    "type": "string"
                                                                },
                                                                "SHA1": {
                                                                    "type": "string"
                                                                },
                                                                "SSDeep": {
                                                                    "type": "string"
                                                                },
                                                                "Sha256": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Summary": {
                                                            "properties": {
                                                                "Category": {
                                                                    "type": "string"
                                                                },
                                                                "Duration": {
                                                                    "type": "integer"
                                                                },
                                                                "FileType": {
                                                                    "type": "string"
                                                                },
                                                                "StartTime": {
                                                                    "type": "integer"
                                                                },
                                                                "Status": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_Response_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP_Delete_Api_Session": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "cookie": "@body('Parse_Authentication_Response')?['cookie']",
                                "method": "DELETE",
                                "uri": "[uriComponentToString(uri(parameters('Zscaler Admin Url'), '/api/v1/authenticatedSession'))]"
                            }
                        },
                        "Initialize_Response_variable": {
                            "runAfter": {
                                "Parse_Authentication_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Result",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Parse_Authentication_Response": {
                            "runAfter": {
                                "zscaler": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('zscaler')",
                                "schema": {
                                    "properties": {
                                        "cookie": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "zscaler": {
                            "runAfter": {
                                "Entities_-_Get_FileHashes": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[variables('ZscalerAuthenticationFlow')]"
                                    }
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}