{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Zscaler API authentication",
        "description": "This playbook generates access token in Zscaler API. Call this playbook as a step in functional Zscaler playbooks. The output is a JSessionID which can be used to do other API actions",
        "prerequisites": [
            "Playbook templates leverage the Zscaler API. To use the Zscaler capabilities, you need a Zscaler API key. Refer this link: [API Developers Guide: Getting Started](https://help.zscaler.com/zia/api-getting-started)",
            "Please deploy the function app before the Zscaler API authentication playbook."
        ],
        "lastUpdateTime": "2021-07-28T00:00:00.000Z",
        "entities": [],
        "tags": [
            "Utilities"
        ],
        "support": {
            "tier": "microsoft"
        },
        "author": {
            "name": "microsoft"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Zscaler-Authentication-Playbook",
            "type": "String",
            "metadata": {
                "description": "Name of the playbook, used as name for the resources. Use only letters and dashes."
            }
        },
        "Keyvault name": {
            "defaultValue": "zscalerauthenticationkv",
            "type": "String",
            "metadata": {
                "description": "Name of the Azure Keyvault, which will be created by the playbook. A vault's name must be between 3-24 alphanumeric characters. The name must begin with a letter, end with a letter or digit, and not contain consecutive hyphens."
            }
        },
        "FunctionAppname": {
            "defaultValue": "zscalerauthenticationfa",
            "type": "String",
            "metadata": {
                "description": "Name of the Azure Function App, which will be created by the playbook."
            }
        },
        "Zscaler Admin Url": {
            "defaultValue": "https://admin.<zscaler_instance_domain>.net",
            "type": "string",
            "metadata": {
                "description": "Update to a valid Zscaler admin url."
            }
        }
    },
    "variables": {
        "functionAppName": "[parameters('FunctionAppname')]",
        "keyvault_name": "[toLower(parameters('Keyvault name'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('keyvault_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "properties": {
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                },
                "parameterValues": {
                    "token:TenantId": "[subscription().tenantId]",
                    "token:grantType": "code",
                    "vaultName": "[variables('KeyVault_name')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('keyvault_name'))]"
            ],
            "tags": {
                "hidden-SentinelTemplateName": "Zscaler-Authentication",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {}
                        }
                    },
                    "actions": {
                        "GetApiKey": {
                            "runAfter": {
                                "Get_Zscaler_Password": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "key": "@body('Get_Zscaler_Key')?['value']"
                                },
                                "function": {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('functionAppName'), '/functions/GetApiKey')]"
                                }
                            }
                        },
                        "Get_Zscaler_Key": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('Zscaler-Key')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Get_Zscaler_Username": {
                            "runAfter": {
                                "Get_Zscaler_Key": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('Zscaler-Username')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Get_Zscaler_Password": {
                            "runAfter": {
                                "Get_Zscaler_Username": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('Zscaler-Password')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "Parse_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "apiKey": "@{body('Parse_Response')?['apiKey']}",
                                    "password": "@{body('Get_Zscaler_Password')?['value']}",
                                    "timestamp": "@{body('Parse_Response')?['timestamp']}",
                                    "username": "@{body('Get_Zscaler_Username')?['value']}"
                                },
                                "headers": {
                                    "Cache-Control": "no-cache",
                                    "Content-Type": "application/json"
                                },
                                "method": "POST",
                                "uri": "[uriComponentToString(uri(parameters('Zscaler Admin Url'), '/api/v1/authenticatedSession'))]"
                            }
                        },
                        "Parse_Headers": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@outputs('HTTP')['headers']",
                                "schema": {
                                    "properties": {
                                        "Connection": {
                                            "type": "string"
                                        },
                                        "Content-Length": {
                                            "type": "string"
                                        },
                                        "Content-Type": {
                                            "type": "string"
                                        },
                                        "Date": {
                                            "type": "string"
                                        },
                                        "Keep-Alive": {
                                            "type": "string"
                                        },
                                        "Server": {
                                            "type": "string"
                                        },
                                        "Set-Cookie": {
                                            "type": "string"
                                        },
                                        "Strict-Transport-Security": {
                                            "type": "string"
                                        },
                                        "X-Content-Type-Options": {
                                            "type": "string"
                                        },
                                        "X-Frame-Options": {
                                            "type": "string"
                                        },
                                        "X-XSS-Protection": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_Response": {
                            "runAfter": {
                                "GetApiKey": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('GetApiKey')",
                                "schema": {
                                    "properties": {
                                        "apiKey": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Parse_Headers": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "cookie": "@{body('Parse_Headers')?['Set-Cookie']}"
                                },
                                "headers": "@outputs('HTTP')['headers']",
                                "statusCode": "@outputs('HTTP')['statusCode']"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('keyvault_name'))]",
                                "connectionName": "keyvault",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId ,'/providers/Microsoft.Web/locations/', resourceGroup().location ,'/managedApis/keyvault')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}