id: # A new UUID will be generated here by the system, or I can generate one. For now, let's use a placeholder.
Function:
  Title: ASIM Parser for Authentication (Auth) logs
  Version: '1.0.0'
  LastUpdated: May 12th 2025
Category: OpenSystemsParser
FunctionName: AuthASIMParser
FunctionAlias: AuthASIMParser
FunctionQuery: |
  let parser = () { 
      OSAGAuthenticationLogs_CL | 
        extend
            EventProduct = "OpenSystems",
            EventVendor = "OpenSystems",
            EventSchema = "Authentication",
            EventSchemaVersion = "0.1.3",
            EventType = "Logon",
            EventResult = case(
                              result has_cs "successful", "Success",
                              result has_cs "failure", "Failure",
                              "Other"
                            ),
            EventResultDetails = iff(result == "failure", tostring(result), ""),
            EventStartTime = todatetime(TimeGenerated),
            EventEndTime = todatetime(TimeGenerated),
            EventCount = 1,
            ActorUsername = tostring(login),
            ActorUsernameType = "UPN",
            SrcIpAddr = remoteAddress[0],
            Dvc = "OpenSystems",
            AdditionalFields = pack(
                                  "OriginalResult", result,
                                  "OriginalRemoteAddress", remoteAddress,
                                  "OriginalLogin", login,
                                  "OriginalEventTime", TimeGenerated
                              )
        | project-rename
            EventTime = TimeGenerated
        | project
            EventTime,
            EventStartTime,
            EventEndTime,
            EventProduct,
            EventVendor,
            EventSchema,
            EventSchemaVersion,
            EventType,
            EventResult,
            EventResultDetails,
            EventCount,
            ActorUsername,
            ActorUsernameType,
            SrcIpAddr,
            Dvc,
            AdditionalFields,
            RawData
  };
  parser
