id:
Function:
  Title: ASIM Parser for OpenSystems Proxy logs
  Version: '1.0.0'
  LastUpdated: May 12th 2025
Category: OpenSystemsParser
FunctionName: ProxyASIMParser
FunctionAlias: ProxyASIMParser
FunctionParams: []
RelevantTable:
  - OpenSystems_Proxy_CL
FunctionQuery: |
    let parser = () {
      OpenSystems_Proxy_CL
      | extend
          EventProduct = "OpenSystems",
          EventVendor = "OpenSystems",
          EventSchemaVersion = "0.2.6",
          EventSchema = "WebSession",
          EventCount = 1,
          EventType = case(url startswith "https://", "Https", url startswith "http://", "Http", "Http"),
          EventStartTime = TimeGenerated,
          _parsedDuration = todouble(duration),
          Duration = iff(isnotnull(_parsedDuration), tolong(_parsedDuration), long(null)),
          EventEndTime = iff(isnotnull(Duration) and Duration > 0, EventStartTime + totimespan(Duration * 1ms), EventStartTime),
          Dvc = "OpenSystemsProxy",
          SrcIpAddr = client_ip,
          DstIpAddr = server_ip,
          NetworkProtocol = case(url startswith "https://", "HTTPS", url startswith "http://", "HTTP", "Other"),
          NetworkBytesSent = tolong(client_request_size),
          NetworkBytesReceived = tolong(client_response_size),
          Url = url,
          UrlCategory = url_filter_categories,
          HttpRequestMethod = http_method,
          HttpUserAgent = user_agent,
          HttpStatusCode = tostring(client_response_status),
          HttpContentType = content_type,
          SrcUsername = user_id,
          SrcUsernameType = iff(isnotempty(user_id), "Simple", ""),
          EventResult = case(
                          url_filter_action has_cs "allow", "Success",
                          url_filter_action has_cs "block", "Failure",
                          url_filter_action has_cs "monitor", "Success",
                          isnotempty(client_response_status) and tostring(client_response_status) startswith "2", "Success",
                          isnotempty(client_response_status) and tostring(client_response_status) startswith "3", "Success",
                          isnotempty(client_response_status), "Failure",
                          "NA"
                        ),
          EventResultDetails = coalesce(error_details, url_filter_result, ""),
          ThreatRiskLevel = case(
                              casb_risk_score == "1", "Low",
                              casb_risk_score == "2", "Low",
                              casb_risk_score == "3", "Medium",
                              casb_risk_score == "4", "High",
                              casb_risk_score == "5", "Critical",
                              ""
                            ),
          RuleName = coalesce(tostring(url_filter_result), tostring(url_filter_action), ""),
          AdditionalFields = pack(
                                "CasbApplication", casb_application,
                                "CasbCategory", casb_category,
                                "CasbOperation", casb_operation,
                                "TimeDns", time_dns,
                                "TimeIcap", time_icap,
                                "TimeServer", time_server,
                                "TlsCertErrors", tls_cert_errors,
                                "TlsClientCipher", tls_client_cipher,
                                "TlsClientMaxVersion", tls_client_max_version,
                                "TlsClientVersion", tls_client_version,
                                "TlsServerCipher", tls_server_cipher,
                                "TlsServerMaxVersion", tls_server_max_version,
                                "TlsServerVersion", tls_server_version
                             )
      | project-rename
          EventOriginalUid = RawData
      | project
          EventSchema,
          EventCount,
          EventType,
          EventResult,
          EventStartTime,
          EventProduct,
          EventVendor,
          EventSchemaVersion,
          Dvc,
          EventEndTime,
          EventOriginalUid,
          EventResultDetails,
          Duration,
          SrcIpAddr,
          DstIpAddr,
          NetworkProtocol,
          Url,
          UrlCategory,
          HttpRequestMethod,
          HttpUserAgent,
          HttpStatusCode,
          HttpContentType,
          NetworkBytesSent,
          NetworkBytesReceived,
          SrcUsername,
          SrcUsernameType,
          ThreatRiskLevel,
          RuleName,
          AdditionalFields
    };
    parser
