{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "OpenSystems - support@opensystems.com",
    "comments": "Solution template for OpenSystems"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@opensystems.com",
    "_email": "[variables('email')]",
    "_solutionName": "OpenSystems",
    "_solutionVersion": "3.0.0",
    "solutionId": "opensystems.osag-sentinel",
    "_solutionId": "[variables('solutionId')]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','AuthASIMParser')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'AuthASIMParser')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('AuthASIMParser-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "AuthASIMParser-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','FirewallASIMParser')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'FirewallASIMParser')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('FirewallASIMParser-Parser')))]",
      "parserVersion2": "1.0.0",
      "parserContentId2": "FirewallASIMParser-Parser"
    },
    "uiConfigId1": "OpenSystemsLogstash",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "OpenSystemsLogstash",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AuthASIMParser Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "ASIM Parser for Authentication (Auth) logs",
                "category": "OpenSystemsParser",
                "functionAlias": "AuthASIMParser",
                "query": "let parser = () { \n    OSAGAuthenticationLogs_CL | \n      extend\n          EventProduct = \"OpenSystems\",\n          EventVendor = \"OpenSystems\",\n          EventSchema = \"Authentication\",\n          EventSchemaVersion = \"0.1.3\",\n          EventType = \"Logon\",\n          EventResult = case(\n                            result has_cs \"successful\", \"Success\",\n                            result has_cs \"failure\", \"Failure\",\n                            \"Other\"\n                          ),\n          EventResultDetails = iff(result == \"failure\", tostring(result), \"\"),\n          EventStartTime = todatetime(TimeGenerated),\n          EventEndTime = todatetime(TimeGenerated),\n          EventCount = 1,\n          ActorUsername = tostring(login),\n          ActorUsernameType = \"UPN\",\n          SrcIpAddr = remoteAddress[0],\n          Dvc = \"OpenSystems\",\n          AdditionalFields = pack(\n                                \"OriginalResult\", result,\n                                \"OriginalRemoteAddress\", remoteAddress,\n                                \"OriginalLogin\", login,\n                                \"OriginalEventTime\", TimeGenerated\n                            )\n      | project-rename\n          EventTime = TimeGenerated\n      | project\n          EventTime,\n          EventStartTime,\n          EventEndTime,\n          EventProduct,\n          EventVendor,\n          EventSchema,\n          EventSchemaVersion,\n          EventType,\n          EventResult,\n          EventResultDetails,\n          EventCount,\n          ActorUsername,\n          ActorUsernameType,\n          SrcIpAddr,\n          Dvc,\n          AdditionalFields,\n          RawData\n};\nparser\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'AuthASIMParser')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "OpenSystems",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "OpenSystems",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "OpenSystems",
                  "email": "support@opensystems.com",
                  "tier": "Partner",
                  "link": "https://www.opensystems.com/support"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "ASIM Parser for Authentication (Auth) logs",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "ASIM Parser for Authentication (Auth) logs",
        "category": "OpenSystemsParser",
        "functionAlias": "AuthASIMParser",
        "query": "let parser = () { \n    OSAGAuthenticationLogs_CL | \n      extend\n          EventProduct = \"OpenSystems\",\n          EventVendor = \"OpenSystems\",\n          EventSchema = \"Authentication\",\n          EventSchemaVersion = \"0.1.3\",\n          EventType = \"Logon\",\n          EventResult = case(\n                            result has_cs \"successful\", \"Success\",\n                            result has_cs \"failure\", \"Failure\",\n                            \"Other\"\n                          ),\n          EventResultDetails = iff(result == \"failure\", tostring(result), \"\"),\n          EventStartTime = todatetime(TimeGenerated),\n          EventEndTime = todatetime(TimeGenerated),\n          EventCount = 1,\n          ActorUsername = tostring(login),\n          ActorUsernameType = \"UPN\",\n          SrcIpAddr = remoteAddress[0],\n          Dvc = \"OpenSystems\",\n          AdditionalFields = pack(\n                                \"OriginalResult\", result,\n                                \"OriginalRemoteAddress\", remoteAddress,\n                                \"OriginalLogin\", login,\n                                \"OriginalEventTime\", TimeGenerated\n                            )\n      | project-rename\n          EventTime = TimeGenerated\n      | project\n          EventTime,\n          EventStartTime,\n          EventEndTime,\n          EventProduct,\n          EventVendor,\n          EventSchema,\n          EventSchemaVersion,\n          EventType,\n          EventResult,\n          EventResultDetails,\n          EventCount,\n          ActorUsername,\n          ActorUsernameType,\n          SrcIpAddr,\n          Dvc,\n          AdditionalFields,\n          RawData\n};\nparser\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'AuthASIMParser')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "OpenSystems",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "OpenSystems",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "OpenSystems",
          "email": "support@opensystems.com",
          "tier": "Partner",
          "link": "https://www.opensystems.com/support"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "FirewallASIMParser Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "ASIM Parser for OpenSystems Firewall logs",
                "category": "OpenSystemsParser",
                "functionAlias": "FirewallASIMParser",
                "query": "let parser = () {\n  OSAGFirewallLogs_CL\n  | extend\n      EventProduct = \"OpenSystems\",\n      EventVendor = \"OpenSystems\",\n      EventSchema = \"NetworkSession\",\n      EventSchemaVersion = \"0.2.7\",\n      EventType = iff(action in (\"accept\", \"allow\"), \"NetworkSession\", \"NetworkFlow\"),\n      EventCount = 1,\n      EventStartTime = TimeGenerated,\n      EventEndTime = TimeGenerated,\n      SrcIpAddr = ip_src,\n      DstIpAddr = ip_dst,\n      SrcPortNumber = toint(port_src),\n      DstPortNumber = toint(port_dst),\n      NetworkProtocol = case( toint(port_dst) == 53 or toint(port_src) == 53, \"UDP\",\n                               toint(port_dst) == 80 or toint(port_src) == 80, \"TCP\",\n                               toint(port_dst) == 443 or toint(port_src) == 443, \"TCP\",\n                               \"Other\"\n                              ),\n      NetworkDirection = case(\n                            isnotempty(iface_in) and isnotempty(iface_out) and iface_in != iface_out, \"Other\",\n                            \"Unknown\"\n                          ),\n      EventResult = case(\n                      action in (\"accept\", \"allow\", \"permit\"), \"Success\",\n                      action in (\"deny\", \"drop\", \"reject\"), \"Failure\",\n                      \"Other\"\n                    ),\n      EventResultDetails = action,\n      Dvc = host_name,\n      DvcHostname = host_name,\n      DvcInboundInterface = iface_in,\n      DvcOutboundInterface = iface_out,\n      AdditionalFields = pack(\n                            \"ZoneSrc\", zone_src,\n                            \"ZoneDst\", zone_dst,\n                            \"OriginalAction\", action,\n                            \"OriginalTimestamp\", timestamp\n                         )\n  | project-rename\n      EventOriginalUid = RawData\n  | project\n      EventStartTime,\n      EventEndTime,\n      EventProduct,\n      EventVendor,\n      EventSchema,\n      EventSchemaVersion,\n      EventType,\n      EventResult,\n      EventCount,\n      EventResultDetails,\n      EventOriginalUid,\n      SrcIpAddr,\n      DstIpAddr,\n      SrcPortNumber,\n      DstPortNumber,\n      NetworkProtocol,\n      NetworkDirection,\n      Dvc,\n      DvcHostname,\n      DvcInboundInterface,\n      DvcOutboundInterface,\n      AdditionalFields\n};\nparser\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'FirewallASIMParser')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "OpenSystems",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "OpenSystems",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "OpenSystems",
                  "email": "support@opensystems.com",
                  "tier": "Partner",
                  "link": "https://www.opensystems.com/support"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "ASIM Parser for OpenSystems Firewall logs",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "ASIM Parser for OpenSystems Firewall logs",
        "category": "OpenSystemsParser",
        "functionAlias": "FirewallASIMParser",
        "query": "let parser = () {\n  OSAGFirewallLogs_CL\n  | extend\n      EventProduct = \"OpenSystems\",\n      EventVendor = \"OpenSystems\",\n      EventSchema = \"NetworkSession\",\n      EventSchemaVersion = \"0.2.7\",\n      EventType = iff(action in (\"accept\", \"allow\"), \"NetworkSession\", \"NetworkFlow\"),\n      EventCount = 1,\n      EventStartTime = TimeGenerated,\n      EventEndTime = TimeGenerated,\n      SrcIpAddr = ip_src,\n      DstIpAddr = ip_dst,\n      SrcPortNumber = toint(port_src),\n      DstPortNumber = toint(port_dst),\n      NetworkProtocol = case( toint(port_dst) == 53 or toint(port_src) == 53, \"UDP\",\n                               toint(port_dst) == 80 or toint(port_src) == 80, \"TCP\",\n                               toint(port_dst) == 443 or toint(port_src) == 443, \"TCP\",\n                               \"Other\"\n                              ),\n      NetworkDirection = case(\n                            isnotempty(iface_in) and isnotempty(iface_out) and iface_in != iface_out, \"Other\",\n                            \"Unknown\"\n                          ),\n      EventResult = case(\n                      action in (\"accept\", \"allow\", \"permit\"), \"Success\",\n                      action in (\"deny\", \"drop\", \"reject\"), \"Failure\",\n                      \"Other\"\n                    ),\n      EventResultDetails = action,\n      Dvc = host_name,\n      DvcHostname = host_name,\n      DvcInboundInterface = iface_in,\n      DvcOutboundInterface = iface_out,\n      AdditionalFields = pack(\n                            \"ZoneSrc\", zone_src,\n                            \"ZoneDst\", zone_dst,\n                            \"OriginalAction\", action,\n                            \"OriginalTimestamp\", timestamp\n                         )\n  | project-rename\n      EventOriginalUid = RawData\n  | project\n      EventStartTime,\n      EventEndTime,\n      EventProduct,\n      EventVendor,\n      EventSchema,\n      EventSchemaVersion,\n      EventType,\n      EventResult,\n      EventCount,\n      EventResultDetails,\n      EventOriginalUid,\n      SrcIpAddr,\n      DstIpAddr,\n      SrcPortNumber,\n      DstPortNumber,\n      NetworkProtocol,\n      NetworkDirection,\n      Dvc,\n      DvcHostname,\n      DvcInboundInterface,\n      DvcOutboundInterface,\n      AdditionalFields\n};\nparser\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'FirewallASIMParser')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "OpenSystems",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "OpenSystems",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "OpenSystems",
          "email": "support@opensystems.com",
          "tier": "Partner",
          "link": "https://www.opensystems.com/support"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "OpenSystems data connector with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "OpenSystems Logstash Connector",
                  "publisher": "OpenSystems",
                  "descriptionMarkdown": "This data connector deploys a Logstash instance to collect logs from your OpenSystems environment via Event Hub and ingest them into Azure Sentinel.",
                  "graphQueries": [
                    {
                      "metricName": "Total ZTNA logs received",
                      "legend": "OSAGZtnaLogs_CL",
                      "baseQuery": "OSAGZtnaLogs_CL"
                    },
                    {
                      "metricName": "Total Firewall logs received",
                      "legend": "OSAGFirewallLogs_CL",
                      "baseQuery": "OSAGFirewallLogs_CL"
                    },
                    {
                      "metricName": "Total Authentication logs received",
                      "legend": "OSAGAuthenticationLogs_CL",
                      "baseQuery": "OSAGAuthenticationLogs_CL"
                    },
                    {
                      "metricName": "Total Proxy logs received",
                      "legend": "OSAGProxyLogs_CL",
                      "baseQuery": "OSAGProxyLogs_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Raw ZTNA logs",
                      "query": "OSAGZtnaLogs_CL | take 100"
                    },
                    {
                      "description": "View normalized ZTNA events (ASIM Authentication)",
                      "query": "OpenSystemsImZTNA | take 100"
                    },
                    {
                      "description": "Raw Firewall logs",
                      "query": "OSAGFirewallLogs_CL | take 100"
                    },
                    {
                      "description": "View normalized Firewall network sessions (ASIM NetworkSession)",
                      "query": "OpenSystemsImNetworkSessionFirewall | take 100"
                    },
                    {
                      "description": "Raw Authentication logs",
                      "query": "OSAGAuthenticationLogs_CL | take 100"
                    },
                    {
                      "description": "View normalized Authentication events (ASIM Authentication)",
                      "query": "OpenSystemsImAuthentication | take 100"
                    },
                    {
                      "description": "Raw Proxy logs",
                      "query": "OSAGProxyLogs_CL | take 100"
                    },
                    {
                      "description": "View normalized Proxy network events (ASIM NetworkSession/HTTP)",
                      "query": "OpenSystemsImNetworkSessionProxy | take 100"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "OSAGZtnaLogs_CL",
                      "lastDataReceivedQuery": "OSAGZtnaLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived"
                    },
                    {
                      "name": "OSAGFirewallLogs_CL",
                      "lastDataReceivedQuery": "OSAGFirewallLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived"
                    },
                    {
                      "name": "OSAGAuthenticationLogs_CL",
                      "lastDataReceivedQuery": "OSAGAuthenticationLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived"
                    },
                    {
                      "name": "OSAGProxyLogs_CL",
                      "lastDataReceivedQuery": "OSAGProxyLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "OSAGZtnaLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived",
                        "OSAGFirewallLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived",
                        "OSAGAuthenticationLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived",
                        "OSAGProxyLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/solutions",
                        "permissionsDisplayText": "read permission is required.",
                        "providerDisplayName": "Solution",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true
                        }
                      }
                    ]
                  },
                  "deploymentSteps": [
                    {
                      "title": "Deploy Logstash and Data Collection Rule",
                      "description": "Click the button below to deploy the ARM template, which will set up the Logstash container instance, data collection rule, and associated resources.",
                      "templateUri": "https://raw.githubusercontent.com/open-ch/Azure-Sentinel/feature/sentinel-solution-package/Solutions/OpenSystems/DataConnectors/mainTemplate.json",
                      "uiFormDefinitionUri": "https://raw.githubusercontent.com/open-ch/Azure-Sentinel/feature/sentinel-solution-package/Solutions/OpenSystems/DataConnectors/createUiDefinition.json"
                    }
                  ],
                  "instructionSteps": [
                    {
                      "description": "Click the 'Deploy to Azure' button below to deploy the Logstash container and associated resources. This will configure the ingestion pipeline from your Event Hub to Azure Sentinel.",
                      "instructions": [
                        {
                          "type": "DeployToAzure",
                          "parameters": {
                            "templateUri": "https://raw.githubusercontent.com/open-ch/Azure-Sentinel/feature/sentinel-solution-package/Solutions/OpenSystems/DataConnectors/mainTemplate.json",
                            "uiFormDefinitionUri": "https://raw.githubusercontent.com/open-ch/Azure-Sentinel/feature/sentinel-solution-package/Solutions/OpenSystems/DataConnectors/createUiDefinition.json"
                          }
                        }
                      ],
                      "title": "Connect to OpenSystems Logstash"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "OpenSystems",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "OpenSystems",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "OpenSystems",
                  "email": "support@opensystems.com",
                  "tier": "Partner",
                  "link": "https://www.opensystems.com/support"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "OpenSystems Logstash Connector",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "OpenSystems",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "OpenSystems",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "OpenSystems",
          "email": "support@opensystems.com",
          "tier": "Partner",
          "link": "https://www.opensystems.com/support"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "OpenSystems Logstash Connector",
          "publisher": "OpenSystems",
          "descriptionMarkdown": "This data connector deploys a Logstash instance to collect logs from your OpenSystems environment via Event Hub and ingest them into Azure Sentinel.",
          "graphQueries": [
            {
              "metricName": "Total ZTNA logs received",
              "legend": "OSAGZtnaLogs_CL",
              "baseQuery": "OSAGZtnaLogs_CL"
            },
            {
              "metricName": "Total Firewall logs received",
              "legend": "OSAGFirewallLogs_CL",
              "baseQuery": "OSAGFirewallLogs_CL"
            },
            {
              "metricName": "Total Authentication logs received",
              "legend": "OSAGAuthenticationLogs_CL",
              "baseQuery": "OSAGAuthenticationLogs_CL"
            },
            {
              "metricName": "Total Proxy logs received",
              "legend": "OSAGProxyLogs_CL",
              "baseQuery": "OSAGProxyLogs_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "OSAGZtnaLogs_CL",
              "lastDataReceivedQuery": "OSAGZtnaLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived"
            },
            {
              "name": "OSAGFirewallLogs_CL",
              "lastDataReceivedQuery": "OSAGFirewallLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived"
            },
            {
              "name": "OSAGAuthenticationLogs_CL",
              "lastDataReceivedQuery": "OSAGAuthenticationLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived"
            },
            {
              "name": "OSAGProxyLogs_CL",
              "lastDataReceivedQuery": "OSAGProxyLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "OSAGZtnaLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived",
                "OSAGFirewallLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived",
                "OSAGAuthenticationLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived",
                "OSAGProxyLogs_CL | summarize LastLogReceived = max(TimeGenerated) | project LastLogReceived"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Raw ZTNA logs",
              "query": "OSAGZtnaLogs_CL | take 100"
            },
            {
              "description": "View normalized ZTNA events (ASIM Authentication)",
              "query": "OpenSystemsImZTNA | take 100"
            },
            {
              "description": "Raw Firewall logs",
              "query": "OSAGFirewallLogs_CL | take 100"
            },
            {
              "description": "View normalized Firewall network sessions (ASIM NetworkSession)",
              "query": "OpenSystemsImNetworkSessionFirewall | take 100"
            },
            {
              "description": "Raw Authentication logs",
              "query": "OSAGAuthenticationLogs_CL | take 100"
            },
            {
              "description": "View normalized Authentication events (ASIM Authentication)",
              "query": "OpenSystemsImAuthentication | take 100"
            },
            {
              "description": "Raw Proxy logs",
              "query": "OSAGProxyLogs_CL | take 100"
            },
            {
              "description": "View normalized Proxy network events (ASIM NetworkSession/HTTP)",
              "query": "OpenSystemsImNetworkSessionProxy | take 100"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/solutions",
                "permissionsDisplayText": "read permission is required.",
                "providerDisplayName": "Solution",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Click the 'Deploy to Azure' button below to deploy the Logstash container and associated resources. This will configure the ingestion pipeline from your Event Hub to Azure Sentinel.",
              "instructions": [
                {
                  "type": "DeployToAzure",
                  "parameters": {
                    "templateUri": "https://raw.githubusercontent.com/open-ch/Azure-Sentinel/feature/sentinel-solution-package/Solutions/OpenSystems/DataConnectors/mainTemplate.json",
                    "uiFormDefinitionUri": "https://raw.githubusercontent.com/open-ch/Azure-Sentinel/feature/sentinel-solution-package/Solutions/OpenSystems/DataConnectors/createUiDefinition.json"
                  }
                }
              ],
              "title": "Connect to OpenSystems Logstash"
            }
          ],
          "id": "[variables('_uiConfigId1')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "OpenSystems",
        "publisherDisplayName": "OpenSystems",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/OpenSystems/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>This solution integrates OpenSystems Logs-API with Microsoft Sentinel, enabling customers to ingest security logs and leverage them for threat detection and response. It includes parsers to normalize the data and supports various security monitoring use cases.</p>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 2</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/OpenSystems/Images/opensystems_logo.png\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "OpenSystems",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "OpenSystems",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "OpenSystems",
          "email": "support@opensystems.com",
          "tier": "Partner",
          "link": "https://www.opensystems.com/support"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2025-05-12",
        "providers": [
          "OpenSystems"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection",
            "Security - Network Security"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
