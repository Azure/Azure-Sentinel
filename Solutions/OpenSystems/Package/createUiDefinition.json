{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "config": {
      "isWizard": true,
      "basics": {
        "description": "This solution deploys a Logstash instance to collect OpenSystems logs from an Event Hub and send them to Azure Sentinel. Please provide the necessary details for your Event Hub and the target Sentinel workspace.",
        "options": {
          "text": "Learn more about this solution (link to your docs)"
        },
        "resourceGroup": {
          "allowExisting": true
        }
      }
    },
    "basics": [
      {
        "name": "logAnalyticsWorkspace",
        "type": "Microsoft.Solutions.ResourceSelector",
        "label": "Log Analytics workspace",
        "toolTip": "Select the Log Analytics workspace that Azure Sentinel is built on.",
        "resourceType": "Microsoft.OperationalInsights/workspaces",
        "options": {
          "filter": {
            "subscription": "onBasics",
            "location": "onBasics"
          }
        },
        "visible": true
      }
    ],
    "steps": [
      {
        "name": "logSourceSelection",
        "label": "Log Source Configuration",
        "elements": [
          {
            "name": "proxy",
            "type": "Microsoft.Common.CheckBox",
            "label": "Enable Proxy Logs",
            "defaultValue": true,
            "toolTip": "Ingest proxy logs."
          },
          {
            "name": "auth",
            "type": "Microsoft.Common.CheckBox",
            "label": "Enable Authentication Logs",
            "defaultValue": true,
            "toolTip": "Ingest authentication logs."
          },
          {
            "name": "firewall",
            "type": "Microsoft.Common.CheckBox",
            "label": "Enable Firewall Logs",
            "defaultValue": true,
            "toolTip": "Ingest firewall logs."
          },
          {
            "name": "ztna",
            "type": "Microsoft.Common.CheckBox",
            "label": "Enable ZTNA Logs",
            "defaultValue": true,
            "toolTip": "Ingest ZTNA logs."
          },
          {
            "name": "mail",
            "type": "Microsoft.Common.CheckBox",
            "label": "Enable Mail Logs",
            "defaultValue": false,
            "toolTip": "Ingest mail logs."
          },
          {
            "name": "zeek",
            "type": "Microsoft.Common.CheckBox",
            "label": "Enable Zeek Logs",
            "defaultValue": false,
            "toolTip": "Ingest Zeek logs."
          }
        ]
      },
      {
        "name": "eventHubDetails",
        "label": "Event Hub Details",
        "elements": [
          {
            "name": "eventhubEndpoint",
            "type": "Microsoft.Common.TextBox",
            "label": "Event Hub-compatible endpoint FQDN",
            "toolTip": "The FQDN of your Event Hubs Namespace (e.g., yournamespace.servicebus.windows.net)",
            "constraints": {
              "required": true
            },
            "visible": true
          },
          {
            "name": "eventhubConnectionString",
            "type": "Microsoft.Common.PasswordBox",
            "label": "Event Hub Connection String (Primary or Secondary)",
            "toolTip": "The connection string for the Event Hub Namespace. Ensure it has Listen permissions for all configured Event Hubs (proxy, auth, firewall, etc.). Example: Endpoint=sb://<namespace>.servicebus.windows.net/;SharedAccessKeyName=<keyName>;SharedAccessKey=<key>",
            "constraints": {
              "required": true
            },
            "visible": true
          }
        ]
      },
      {
        "name": "servicePrincipalDetails",
        "label": "Service Principal Details",
        "elements": [
          {
            "name": "principalClientId",
            "type": "Microsoft.Common.TextBox",
            "label": "Service Principal Client ID",
            "toolTip": "Client ID of the Azure AD App Registration that has 'Azure Sentinel Contributor' or 'Log Analytics Contributor' role on the workspace and 'Monitoring Metrics Publisher' on the Data Collection Rules.",
            "constraints": {
              "required": true
            },
            "visible": true
          },
          {
            "name": "principalObjectId",
            "type": "Microsoft.Common.TextBox",
            "label": "Service Principal Object ID",
            "toolTip": "Object ID (not Application ID) of the Azure AD App Registration (Service Principal). This is required for assigning necessary roles.",
            "constraints": {
              "required": true
            },
            "visible": true
          },
          {
            "name": "principalClientSecret",
            "type": "Microsoft.Common.PasswordBox",
            "label": "Service Principal Client Secret",
            "toolTip": "Client Secret of the Azure AD App Registration.",
            "constraints": {
              "required": true
            },
            "visible": true
          }
        ]
      }
    ],
    "outputs": {
      "logAnalyticsWorkspaceName": "[basics('workspace').name]",
      "location": "[basics('workspace').location]",
      "proxy": "[if(contains(steps('logSourceSelection').logSources, 'proxy'), bool('true'), bool('false'))]",
      "auth": "[if(contains(steps('logSourceSelection').logSources, 'auth'), bool('true'), bool('false'))]",
      "firewall": "[if(contains(steps('logSourceSelection').logSources, 'firewall'), bool('true'), bool('false'))]",
      "ztna": "[if(contains(steps('logSourceSelection').logSources, 'ztna'), bool('true'), bool('false'))]",
      "mail": "[if(contains(steps('logSourceSelection').logSources, 'mail'), bool('true'), bool('false'))]",
      "zeek": "[if(contains(steps('logSourceSelection').logSources, 'zeek'), bool('true'), bool('false'))]",
      "eventhubEndpoint": "[concat(steps('eventHubDetails').eventHubNamespace, '.servicebus.windows.net')]",
      "eventHubName": "[steps('eventHubDetails').eventHubName]",
      "eventHubConnectionString": "[steps('eventHubDetails').eventHubConnectionString]",
      "principalClientId": "[steps('servicePrincipalDetails').applicationId]",
      "principalId": "[array(steps('servicePrincipalDetails').principalObjectId)]",
      "principalSecret": "[steps('servicePrincipalDetails').servicePrincipalKey]"
    }
  }
}
