{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Domain ASIM Enrichment - DomainTools Iris Enrich", 
        "description": "Given a domain or set of domains associated with an alert return all Iris Enrich data for those domains and adds the enrichment data to the custom table.",
        "prerequisites": "A DomainTools API Key provisioned for Iris Enrich. Visit https://www.domaintools.com/integrations to request a trial key.",       
        "prerequisitesDeployTemplateFile": "../DomainTools_FunctionAppConnector/azuredeploy.json",
        "postDeploymentSteps": ["None"],      
        "lastUpdateTime": "2024-06-27T00:00:00.000Z", 
        "entities": ["dnsresolution"], 
        "tags": ["Enrichment"], 
        "support": {
            "tier": "community" 
        },
        "author": {
            "name": "DomainTools"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "DomainTools-ASIM-DNS-Playbook",
            "type": "string",
            "metadata": {
                "description": "Name of the Logic App/Playbook"
            }
        },
        "FunctionAppName": {
            "defaultValue": "dtirisfuncapp",
            "type": "string",
			"metadata": {
                "description": "Name of the Function App"
            }
        }
    },
    "variables": {
		"functionappName": "[concat(toLower(parameters('FunctionAppName')), take(uniqueString(resourceGroup().id), 3))]",
		"AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
	},
    "resources": [
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('AzureSentinelConnectionName')]",
			"location": "[resourceGroup().location]",
			"kind": "V1",
			"properties": {
				"displayName": "[variables('AzureSentinelConnectionName')]",
				"customParameterValues": {},
				"parameterValueType": "Alternative",
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
				}
			}
		},
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
			"identity": {
				"type": "SystemAssigned"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
			],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
						"Workspace ID": {
							"defaultValue": "",
							"type": "string",
							"metadata": {
								"description": "Log Analytics Workspace ID"
							}
						},
						"Workspace Key": {
							
							"type": "SecureString",
							"metadata": {
								"description": "Log Analytics Workspace Key"
							}
						}
                    },
                    "triggers": {
                        "Microsoft_Sentinel_alert": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Check_if_got_entities": {
                            "actions": {
                                "EnrichDomain": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "asim": "@true",
                                            "domain": "@variables('domains_list')",
                                            "workspace_id": "@parameters('Workspace ID')",
                                            "workspace_key": "@parameters('Workspace Key')"
                                        },
                                        "function": {
                                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('Functionappname'), '/functions/EnrichDomain')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_DNS": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('domains_list'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "DNS_Name_Variable": {
                            "runAfter": {
                                "Host_Name_Variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "dns_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Domain_Name_Variable": {
                            "runAfter": {
                                "DNS_Name_Variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "domain_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "For_each_DNS": {
                            "foreach": "@triggerBody()?['Entities']",
                            "actions": {
                                "Add_Dns_Domain_to_Domains_List": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "domains_list",
                                        "value": "@items('For_each_DNS')?['DomainName']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Playbook_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Host_Name_Variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "host_name",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "List_Of_Domains": {
                            "runAfter": {
                                "URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "domains_list",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "List_Of_Urls": {
                            "runAfter": {
                                "List_Of_Domains": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "urls_list",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Playbook_Response": {
                            "runAfter": {
                                "List_Of_Urls": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "custom_response",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "URL": {
                            "runAfter": {
                                "Domain_Name_Variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "url",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
								"connectionProperties": {
									"authentication": {
										"type": "ManagedServiceIdentity"
									}
								}
                            }
                        }
                    }
                }
            }
        }
    ]
}