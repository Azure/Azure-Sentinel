{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Get-SOC-Actions",
        "description": "This playbook uses the SOCRA Watchlist to automatically enrich incidents generated by Microsoft Sentinel with Actions to review and take. Actions will be evaluated per Customer Organization and edited/modified per their standards of conduct",
        "prerequisites": [
            "This playbook does a watchlist lookup using an API connection created with in the LogicApp of this playbook to the SOCRA Watchlist and writes the recommended actions to the working incident as a tasks. Ensure you have deployed the SOCRA Watchlist prior to deploying this playbook."
        ],
        "postDeployment": [
            "After deploying the playbook, you must authorize the connections leveraged.",
            "1. Visit the playbook resource.",
            "2. Under \"Development Tools\" (located on the left), click \"API Connections\".",
            "3. Ensure each connection has been authorized."
        ],
        "prerequisitesDeployTemplateFile": "",
        "lastUpdateTime": "2023-04-21T00:00:00.000Z",
        "entities": [
        ],
        "tags": [
        ],
        "support": {
            "tier": "community",
            "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  "Benji Kovacevic"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Get-SOCActions",
            "type": "string"
        },
        "Resource Group": {
            "defaultValue": "Resource Group name",
            "type": "string",
            "metadata": {
                "description": "Name of the Resource Group where Microsoft Sentinel is deployed."
            }
        },
        "Workspace Name": {
            "defaultValue": "Workspace Name",
            "type": "string",
            "metadata": {
                "description": "Name of the Log Analytics Workspace on which Microsoft Sentinel is deployed."
            }
        }
    },
    "variables": {
        "AzuremonitorlogsConnectionName": "[concat('Azuremonitorlogs-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                            },
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "For_each_-_alert": {
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions": {
                                "For_each_-_task": {
                                    "foreach": "@body('Run_query_and_list_results')?['value']",
                                    "actions": {
                                        "Add_task_to_incident": {
                                            "runAfter": {
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                    "taskDescription": "\u003cp\u003e@{items('For_each_-_task')?['Description']}\u003c/p\u003e",
                                                    "taskTitle": "@items('For_each_-_task')?['Title']"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Incidents/CreateTask"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Run_query_and_list_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Run_query_and_list_results": {
                                    "runAfter": {
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "_GetWatchlist('SocRA')\n| where SearchKey == \"@{items('For_each_-_alert')?['properties']?['alertDisplayName']}\"\n| project-away _DTItemId, LastUpdatedTimeUTC, SearchKey, Alert, Date\n| extend PackedIgnoreNullEmpty=pack_all(true)\n| mv-expand PackedIgnoreNullEmpty\n| extend Task = split(PackedIgnoreNullEmpty, '\"', 3)\n| extend Title = split(Task.[0], '^', 0)\n| extend Description = split(Task.[0], '^', 1)\n| project Title = Title.[0], Description = Description.[0]",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/queryData",
                                        "queries": {
                                            "resourcegroups": "[parameters('Resource Group')]",
                                            "resourcename": "[parameters('Workspace Name')]",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "[subscription().subscriptionId]",
                                            "timerange": "@{utcNow()}"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                            },
                            "type": "Foreach"
                        }
                    },
                    "outputs": {
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                                "connectionName": "[variables('AzuremonitorlogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "microsoftsentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "hidden-SentinelTemplateName": "Get-SOCActions",
                "hidden-SentinelTemplateVersion": "1.1.0"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzuremonitorlogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzuremonitorlogsConnectionName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {
                },
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        }
    ]
}
