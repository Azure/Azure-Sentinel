id: 4696e072-aca8-4a4f-bf05-89fddc5ac3c9
name: Interactive STS refresh token modifications
description: |
  'This query monitors STS refresh token changes by Service Principals/Applications excluding DirectorySync. It could be due to admins adjusting tokens or for improved login experience. Includes an allowlist. Analyze for unusual operations.'
description-detailed: |
  'This query searches for Microsoft Entra ID Security Token Service (STS) refresh token modifications by Service Principals and Applications other than DirectorySync. Refresh tokens are used to validate identification and obtain access tokens.
  This event is not necessarily an indication of malicious activity but can also be generated when legitimate administrators manually expire token validation or keep longer refresh tokens for better login experience with less prompts.
  Also an allowlist has been included to filter known accounts which can be customized after careful review of past historical activity.
  Analyze the results for unusual operations performed by administrators to extend a refresh token of a compromised account in order to extend the time they can use it without the need to re-authenticate (and thus potentially lose access).
  For in-depth documentation of Microsoft Entra ID Security Tokens, see https://docs.microsoft.com/azure/active-directory/develop/security-tokens.
  For further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.
  For valid use cases of altering token lifetime values, refer https://docs.microsoft.com/azure/active-directory/develop/access-tokens#token-timeouts
  More information about risky use-cases, refer https://docs.microsoft.com/azure/active-directory/develop/active-directory-configurable-token-lifetimes#token-lifetimes-with-public-client-refresh-tokens'
severity: Low
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - AuditLogs
triggerOperator: gt
triggerThreshold: 0
tactics:
  - CredentialAccess
relevantTechniques:
  - T1550.001
query: |
  // Include your additions to the allow list below as needed
  let AllowedUserList = dynamic(["Microsoft Cloud App Security","ADConnectSyncAccount1","SyncAccount2"]);
  AuditLogs
  | where OperationName has 'StsRefreshTokenValidFrom'
  | where TargetResources[0].modifiedProperties != '[]'
  | where TargetResources[0].modifiedProperties !has 'DirectorySync'
  | extend TargetResourcesModProps = TargetResources[0].modifiedProperties
  | mv-expand TargetResourcesModProps
  | where tostring(TargetResourcesModProps.displayName) =~ 'StsRefreshTokensValidFrom'
  | extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))
  | where InitiatingUserOrApp !in~ (AllowedUserList)
  | extend targetUserOrApp = TargetResources[0].userPrincipalName
  | extend eventName = tostring(TargetResourcesModProps.displayName)
  | extend oldStsRefreshValidFrom = todatetime(parse_json(tostring(TargetResourcesModProps.oldValue))[0])
  | extend newStsRefreshValidFrom = todatetime(parse_json(tostring(TargetResourcesModProps.newValue))[0])
  | extend tokenMinutesAdded = datetime_diff('minute',newStsRefreshValidFrom,oldStsRefreshValidFrom)
  | extend tokenMinutesRemaining = datetime_diff('minute',TimeGenerated,newStsRefreshValidFrom)
  | project-reorder Result, AADOperationType
  | extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))
  | extend UserName = iff(InitiatingUserOrApp has '@', tostring(split(InitiatingUserOrApp, '@')[0]), '')
  | extend UPNSuffix = iff(InitiatingUserOrApp has '@', tostring(split(InitiatingUserOrApp, '@')[1]), '')
  | extend CloudApplicationName = iff(InitiatingUserOrApp !has '@', tostring(InitiatingUserOrApp), '')
  | extend Account_0_Name = UserName
  | extend Account_0_UPNSuffix = UPNSuffix
  | extend IP_0_Address = InitiatingIpAddress
  | extend CloudApplication_0_Name = CloudApplicationName

entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: Name
        columnName: UserName
      - identifier: UPNSuffix
        columnName: UPNSuffix
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: InitiatingIpAddress
  - entityType: CloudApplication
    fieldMappings:
      - identifier: Name
        columnName: CloudApplicationName
version: 1.0.1
