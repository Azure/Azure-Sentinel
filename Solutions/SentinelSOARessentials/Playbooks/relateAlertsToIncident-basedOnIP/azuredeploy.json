{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Relate alerts to incident by IP",
        "description": "This playbook looks for other alerts with the same IP as the triggered incident. When such an alert is found, this playbook will add the alert to the incident (only if it isn't related to another incident).",
        "mainSteps": [
            "When a new incident is created:",
            "1. Get the first IP entity of the incident",
            "2. Make a list of alerts with the IP fetched in the previous step. Please note we exclude all the alerts with the same IP already related to the triggered incident.",
            "3. For each alert in the list:",
            "3.1 Get the incident of the alert",
            "3.2 If the last step fails (meaning the current alert is not related to another incident): add this alert to the incident.",
            "4. Add a comment to the incident specifying all the alerts added to it by listing their \"SystemAlertId\" field."
        ],
        "postDeployment":  ["1. Authorize Microsoft Sentinel and Azure Monitor Logs API connections.", "2. Add playbook as an action to the automation rule: Trigger = When incident is created;  Condition: (as needed for your use case). [click here for detail steps](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/SentinelSOARessentials/Playbooks/relateAlertsToIncident-basedOnIP/readme.md)"],
        "lastUpdateTime": "2025-05-26T00:00:00.000Z",
        "entities": ["Ip"],
        "tags": [
            "grouping"
        ],
        "support": {
            "tier": "community"
        },
        "author": {
            "name": "Gal Berger"
        },
        "releaseNotes": [
            {
                "version": "1.0.0",
                "title": "Relate alerts to incident by IP",
                "notes": [ "Initial version" ]
            }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "relateAlertsToIncident-basedOnIP",
            "type": "string",
            "metadata": {
                "description": "Name of the playbook (Logic Apps resource) which will be created"
            }
        },
        "WorkspaceName": {
            "defaultValue": "WorkspaceName",
            "type": "String",
            "metadata": {
                "description": "Name of the worksapce where related alerts are found"
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('microsoftsentinel-', parameters('PlaybookName'))]",
        "azuremonitorlogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuremonitorlogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('azuremonitorlogsConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "relateAlertsToIncident-basedOnIP",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Add_comment_to_incident": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p>Alerts \"@{string(variables('addedAlerts'))}\" were added by a playbook based on same the IP @{variables('firstIPAddress')}.</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            },
                            "runAfter": {
                                "For_each_alert_found_in_the_query": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Entities_-_Get_IPs": {
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                        },
                        "For_each_alert_found_in_the_query": {
                            "actions": {
                                "Add_alert_to_incident": {
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "relatedResourceId": "@{items('For_each_alert_found_in_the_query')}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Relation/Create"
                                    },
                                    "runAfter": {
                                        "Alert_-_Get_incident": [
                                            "Failed"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Alert_-_Get_incident": {
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/workspaces/@{encodeURIComponent(triggerBody()?['workspaceId'])}/alerts/@{encodeURIComponent(items('For_each_alert_found_in_the_query'))}"
                                    },
                                    "runAfter": {},
                                    "type": "ApiConnection"
                                },
                                "Append_the_Id_of_the_added_alert_into_\"addedAlerts\"_variable": {
                                    "inputs": {
                                        "name": "addedAlerts",
                                        "value": "@items('For_each_alert_found_in_the_query')"
                                    },
                                    "runAfter": {
                                        "Add_alert_to_incident": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable"
                                }
                            },
                            "foreach": "@json(body('Run_query_and_list_results')?['value'][0]['list_SystemAlertId'])",
                            "runAfter": {
                                "Wait_for_3_minutes": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            },
                            "type": "Foreach"
                        },
                        "Initialize_a_string_variable_with_the_first_IP_entity": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "firstIPAddress",
                                        "type": "string",
                                        "value": "@{first(body('Entities_-_Get_IPs')?['IPs'])?['Address']}"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_an_array_variable_for_logging_added_alerts": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "addedAlerts",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_a_string_variable_with_the_first_IP_entity": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Run_query_and_list_results": {
                            "inputs": {
                                "body": "let excludedAlerts=toscalar ( SecurityIncident |\nwhere IncidentName ==\"@{triggerBody()?['object']?['name']}\" | summarize make_set(AlertIds));\nSecurityAlert\n| where SystemAlertId !in (excludedAlerts)\n| mv-expand entitiesJson = todynamic(Entities)\n| where entitiesJson.Type == \"ip\" and entitiesJson.Address == \"@{variables('firstIPAddress')}\"\n| summarize time_gen = max(TimeGenerated) by SystemAlertId\n| sort by time_gen desc\n| summarize make_list(SystemAlertId, maxSize=149)",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/queryData",
                                "queries": {
                                    "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                                    "resourcename": "@parameters('workspaceName')",
                                    "resourcetype": "Log Analytics Workspace",
                                    "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                                    "timerange": "Last 7 days"
                                }
                            },
                            "runAfter": {
                                "Initialize_an_array_variable_for_logging_added_alerts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Wait_for_3_minutes": {
                            "inputs": {
                                "interval": {
                                    "count": 3,
                                    "unit": "Minute"
                                }
                            },
                            "runAfter": {
                                "Run_query_and_list_results": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Wait"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "workspaceName": {
                            "defaultValue": "[parameters('WorkspaceName')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            },
                            "type": "ApiConnectionWebhook"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]",
                                "connectionName": "[variables('azuremonitorlogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}
