{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "2.2.0.0",
    "metadata": {
        "title": "Incident Assignment Shifts",
        "description": "This playbook will assign an Incident to an owner based on the Shifts schedule in Microsoft Teams. When an incident is assigned, the incident owner will be notified via email. Incidents are assigned to users based on the following criteria:<br> *Only users who have started their shifts during the time the Logic App runs will be considered. *Users who still have at least 1 hours left before going off shift (can be configured in playbook) *User with the least incidents assigned on the current Shift will be assigned incident first. <br> Refer to [Automate Incident Assignment with Shifts for Teams](https://techcommunity.microsoft.com/t5/azure-sentinel/automate-incident-assignment-with-shifts-for-teams/ba-p/2297549) for more details.",
        "prerequisites": [
            "1. Have [Shifts](https://support.microsoft.com/office/get-started-in-shifts-5f3e30d8-1821-4904-be26-c3cd25a497d6) schedule setup in Microsoft Teams.",
            "2. Have user account with Owner role in Microsoft Teams",
            "3. Have user account or Service Principal or Managed Identity with Microsoft Sentinel Responder role for HTTP and Microsoft Sentinel connectors",
            "4. Have user account or Service Principal with Log Analytics Reader role on Microsoft Sentinel workspace for Azure Monitor Logs connector",
            "5. Have An O365 account to be used to send email notification"
        ],
        "postDeployment": [
            "**1. Enable Managed Identity and configure role assignment**",
            "- Once deployed, go to the Logic App's blade and click on **Identity** under Settings.",
            "- Select **On** under the **System assigned** tab. Click **Save** and select **Yes** when prompted.",
            "- Click on **Azure role assignments** to assign role to the Managed Identity.",
            "- Click on **+ Add role assignment**.",
            "- Select **Resource group** under Scope and select the **Subscription** and **Resource group** where the Microsoft Sentinel **Workspace** is located.",
            "- Select **Microsoft Sentinel Responder** under Role and click **Save**.",
            "**2. Configure connections**",
            "- Edit the Logic App or go to Logic app designer.",
            "- Expand each step to find the following connectors (6 in total)",
            "1. Incident Trigger\n2. Update Incident\n3. Add comment to incident\n4. List all shifts\n5. Run query and list results\n6. Send an email",
            "- Fix these connectors by adding a new connection to each connector and sign in with the accounts described under pre-requisites.",
            "**3. Select the Shifts schedule**",
            "- Edit the Logic App or go to Logic app designer.",
            "- Find the **List all shifts** connector, click on the **X** sign next to Team field for the drop-down list to appear.",
            "- Select the Teams channel with your Shifts schedule from the drop-down list.",
            "- Save the Logic App once you have completed the above steps."
        ],
        "lastUpdateTime": "2022-08-05T00:00:00.000Z",
        "entities": [],
        "tags": [ "Incident management" ],
        "support": {
            "tier": "community"
        },
        "author": {
            "name": "Jeremy Tan"
        },
        "releaseNotes": [
            {
                "version": "1.0.0",
                "title": "Sentinel_Incident_Assignment_Shifts",
                "notes": [ "Initial version" ]
            }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Sentinel_Incident_Assignment_Shifts",
            "type": "String"
        },
        "EmailAddress": {
            "defaultValue": "Your email address",
            "type": "string"
        }
    },
    "variables": {
        "AzureMonitorLogs": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
        "AzureSentinel": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "office365": "[concat('office365-', parameters('PlaybookName'))]",
        "Shifts": "[concat('shifts-', parameters('PlaybookName'))]",
        "azure": "[concat('https://management','.azure','.com')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureMonitorLogs')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('EmailAddress')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinel')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('EmailAddress')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('EmailAddress')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Shifts')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('EmailAddress')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/shifts')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "IncidentAssignmentShifts",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogs'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinel'))]",
                "[resourceId('Microsoft.Web/connections', variables('office365'))]",
                "[resourceId('Microsoft.Web/connections', variables('Shifts'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation",
                                "retryPolicy": {
                                    "type": "none"
                                }
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "runs": 1,
                                    "maximumWaitingRuns": 100
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition_-_Check_Incident_Owner": {
                            "actions": {
                                "Condition_-_Check_User_Array": {
                                    "actions": {
                                        "Add_comment_to_incident_(V3)": {
                                            "runAfter": {
                                                "Update_incident": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                    "message": "<p><span style=\"font-size: 18px\"><strong>Incident assigned to </strong></span><span style=\"color: rgb(85,57,130); font-size: 18px\"><strong></strong></span><span style=\"color: rgb(147,101,184); font-size: 18px\"><strong>@{body('Update_incident')?['properties']?['owner']?['assignedTo']}</strong></span><span style=\"color: rgb(147,101,184); font-size: 18px\"><strong></strong></span><span style=\"color: rgb(147,101,184); font-size: 18px\"><strong> </strong></span><br>\n<span style=\"font-size: 12px; color: rgb(41,105,176)\">Incident assigned to </span><span style=\"font-size: 12px; color: rgb(41,105,176)\"><strong>@{body('Update_incident')?['properties']?['owner']?['assignedTo']}</strong></span><span style=\"font-size: 12px; color: rgb(41,105,176)\"> </span><span style=\"font-size: 12px; color: rgb(41,105,176)\">by '</span><span style=\"font-size: 12px; color: rgb(41,105,176)\"><em>@{workflow().name}</em></span><span style=\"font-size: 12px; color: rgb(41,105,176)\">' Playbook.</span></p>"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Incidents/Comment"
                                            }
                                        },
                                        "Compose_HTML_Email": {
                                            "runAfter": {
                                                "Add_comment_to_incident_(V3)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "<!DOCTYPE html>\n<html>\n<head>    \n<style>\n.header-Informational{background-color: grey;color: white;}.header-Low{background-color: yellow;color: black;}.header-Medium{background-color: orange;color: black;}.header-High{background-color: red;color: white;}\nspan{display: none;}.severity-1{display: inline;text-decoration:none;}\n{display: inline;text-decoration:none;}.cell{float: left;overflow: hidden;text-overflow: ellipsis;white-space: nowrap; max-width: 100%;}\n</style>\n</head>\n<body>\n<table class=\"header-@{triggerBody()?['object']?['properties']?['severity']}\" style=\"table-layout: auto; width: 100%; padding-left: 10px; padding-right:10px;font-size:20px\" ><tr>\n<td class=\"align-middle\" height=\"50\" align=\"left\" style=\"width: 20%;\">Severity:<b><i>@{triggerBody()?['object']?['properties']?['severity']}</b></i></td>\n<td class=\"align-middle\" height=\"50\" align=\"left\" style=\"width: 75%;\">Title: <b><i>@{triggerBody()?['object']?['properties']?['title']}</b></i></td></tr><tr>\n</table>\n<div style=\"margin-top: 20px\">\n\n  The following incident in Microsoft Sentinel has been assigned to <b>@{body('Update_incident')?['properties']?['owner']?['assignedTo']}</b>.\n\n\n  <h1>Incident Details:</h1>\n\n  <b>Incident Number:</b> @{triggerBody()?['object']?['properties']?['incidentNumber']}<br />\n  <b>Title:</b> @{triggerBody()?['object']?['properties']?['title']} <br />\n  <b>Owner:</b> @{body('Update_incident')?['properties']?['owner']?['assignedTo']} <br />\n  <b>Severity:</b> @{triggerBody()?['object']?['properties']?['severity']}<br />\n  <b>TimeGenerated(UTC):</b> @{triggerBody()?['object']?['properties']?['createdTimeUtc']} <br />\n  <b>Status:</b> @{triggerBody()?['object']?['properties']?['status']} <br />\n  <br />\n  <b>Incident link:</b> <a href=\"https://portal.azure.com/#asset/Microsoft_Azure_Security_Insights/Incident@{triggerBody()?['object']?['id']}\">View Incident</a><br />\n\n  </body>\n  </html>\n\n"
                                        },
                                        "Run_query_and_list_results_-_Get_user_with_low_assignment_": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "let Shifts = datatable ( User:string, Count:string )\n@{replace(string(variables('User')),'\\','')};\nShifts\n| extend Count = toint(Count)\n| sort by User\n| top 1 by Count asc",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/queryData",
                                                "queries": {
                                                    "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                                                    "resourcename": "@triggerBody()?['workspaceInfo']?['WorkspaceName']",
                                                    "resourcetype": "Log Analytics Workspace",
                                                    "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                                                    "timerange": "Last 24 hours"
                                                }
                                            }
                                        },
                                        "Send_an_email_(V2)": {
                                            "runAfter": {
                                                "Compose_HTML_Email": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "Body": "<p>@{outputs('Compose_HTML_Email')}</p>",
                                                    "Subject": "Microsoft Sentinel Incident Assignment Notification - Incident Number: @{triggerBody()?['object']?['properties']?['incidentNumber']}",
                                                    "To": "@body('Update_incident')?['properties']?['owner']?['email']"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v2/Mail"
                                            }
                                        },
                                        "Update_incident": {
                                            "runAfter": {
                                                "Run_query_and_list_results_-_Get_user_with_low_assignment_": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                    "owner": "@{body('Run_query_and_list_results_-_Get_user_with_low_assignment_')['value'][0]['User']}",
                                                    "ownerAction": "Assign"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "put",
                                                "path": "/Incidents"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "For_each_Shifts_list": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(variables('User'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "For_each_Shifts_list": {
                                    "foreach": "@body('List_all_shifts')?['value']",
                                    "actions": {
                                        "Condition_-_Start_and_End_date": {
                                            "actions": {
                                                "Append_to_User_array_variable": {
                                                    "runAfter": {
                                                        "Set_variable_-_JsonResult": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "User",
                                                        "value": "@{items('For_each_Shifts_list')?['userId']}\",\"@{length(variables('JsonResult'))}"
                                                    }
                                                },
                                                "HTTP_-_Get_total_incidents_for_user": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "[uriComponentToString(uri(variables('azure'),'subscriptions/@{triggerBody()?[''workspaceInfo'']?[''SubscriptionId'']}/resourceGroups/@{triggerBody()?[''workspaceInfo'']?[''ResourceGroupName'']}/providers/Microsoft.OperationalInsights/workspaces/@{triggerBody()?[''workspaceInfo'']?[''WorkspaceName'']}/providers/Microsoft.SecurityInsights/Incidents?api-version=2020-01-01&$filter=(properties/owner/objectId eq ''@{items(''For_each_Shifts_list'')?[''userId'']}'' and properties/createdTimeUtc ge @{items(''For_each_Shifts_list'')?[''sharedShift'']?[''startDateTime'']})&$top=1000'))]"
                                                    }
                                                },
                                                "Parse_JSON_-_HTTP": {
                                                    "runAfter": {
                                                        "HTTP_-_Get_total_incidents_for_user": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('HTTP_-_Get_total_incidents_for_user')",
                                                        "schema": {
                                                            "properties": {
                                                                "value": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "etag": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "properties": {
                                                                                "properties": {
                                                                                    "additionalData": {
                                                                                        "properties": {
                                                                                            "alertProductNames": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            },
                                                                                            "alertsCount": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "bookmarksCount": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "commentsCount": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "tactics": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "classification": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "createdTimeUtc": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "description": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "firstActivityTimeGenerated": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "firstActivityTimeUtc": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "incidentNumber": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "incidentUrl": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "labels": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelName": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "labelType": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "labelName",
                                                                                                "labelType"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "lastActivityTimeGenerated": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "lastActivityTimeUtc": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "lastModifiedTimeUtc": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "owner": {
                                                                                        "properties": {
                                                                                            "assignedTo": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "email": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "objectId": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "userPrincipalName": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "relatedAnalyticRuleIds": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "severity": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "status": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "title": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "id",
                                                                            "name",
                                                                            "etag",
                                                                            "type",
                                                                            "properties"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "Set_variable_-_JsonResult": {
                                                    "runAfter": {
                                                        "Parse_JSON_-_HTTP": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "JsonResult",
                                                        "value": "@body('Parse_JSON_-_HTTP')?['value']"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "lessOrEquals": [
                                                            "@ticks(formatDateTime(items('For_each_Shifts_list')?['sharedShift']?['startDateTime']))",
                                                            "@ticks(formatDateTime(utcNow()))"
                                                        ]
                                                    },
                                                    {
                                                        "greaterOrEquals": [
                                                            "@ticks(formatDateTime(items('For_each_Shifts_list')?['sharedShift']?['endDateTime']))",
                                                            "@ticks(formatDateTime(addHours(utcNow(),variables('ExpectedWorkHoursPerIncident'))))"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "List_all_shifts": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "List_all_shifts": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['shifts']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/v1.0/teams/@{encodeURIComponent('')}/schedule/shifts",
                                        "queries": {
                                            "endTime": "@{addDays(utcNow(),1)}",
                                            "startTime": "@{addDays(utcNow(),-1)}"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_-_JsonResult": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['object']?['properties']?['owner']?['assignedTo']",
                                            "@null"
                                        ]
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@triggerBody()?['object']?['properties']?['status']",
                                                "Closed"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_variable_-_ExpectedWorkHoursPerIncident": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExpectedWorkHoursPerIncident",
                                        "type": "integer",
                                        "value": 1
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_JsonResult": {
                            "runAfter": {
                                "Initialize_variable_-_User": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "JsonResult",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_User": {
                            "runAfter": {
                                "Initialize_variable_-_ExpectedWorkHoursPerIncident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "User",
                                        "type": "array"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogs'))]",
                                "connectionName": "[variables('AzureMonitorLogs')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"

                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinel'))]",
                                "connectionName": "[variables('AzureSentinel')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"

                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365'))]",
                                "connectionName": "[variables('office365')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"

                            },
                            "shifts": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Shifts'))]",
                                "connectionName": "[variables('Shifts')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/shifts')]"

                            }
                        }
                    }
                }
            }
        }
    ]
}
