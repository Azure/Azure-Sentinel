{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "FunctionName": {
            "defaultValue": "BitSight",
            "minLength": 1,
            "maxLength": 11,
            "type": "string"
        },
        "API_token": {
            "type": "securestring",
			"minLength": 1,
            "metadata": {
                "description": "Enter API Token of your BitSight account"
            }
        },
        "Azure_Client_Id": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Azure Client Id that you have created during app registration"
            }
        },
        "Azure_Client_Secret": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "Enter Azure Client Secret that you have created during creating the client secret"
            }
        },
        "Azure_Tenant_Id": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Azure Tenant Id of your Microsoft Entra ID"
            }
        },
        "Companies":{
            "type": "string",
            "defaultValue": "ALL",
            "metadata": {
                "description": "Please add valid company names separated by slash(*). For example: Actors Films*Goliath Investments LLC*HCL Group*Saperix, Inc."
            }
        },
        "WorkspaceID": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Workspace ID of log analytics Workspace"
            }
        },
        "WorkspaceKey": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "Enter Workspace Key of log analytics Workspace"
            }
        },
        "Portfolio_Companies_Table_Name":{
            "type": "string",
            "defaultValue": "Portfolio_Companies"
        },
		"Alerts_Table_Name":{
            "type": "string",
            "defaultValue": "Alerts_data"
        },
        "Breaches_Table_Name":{
            "type": "string",
            "defaultValue": "BitsightBreaches_data"
        },
		"Company_Table_Name":{
            "type": "string",
            "defaultValue": "BitsightCompany_details"
        },
		"Company_Rating_Details_Table_Name":{
            "type": "string",
            "defaultValue": "BitsightCompany_rating_details"
        },
		"Diligence_Historical_Statistics_Table_Name":{
            "type": "string",
            "defaultValue": "BitsightDiligence_historical_statistics"
        },
		"Diligence_Statistics_Table_Name":{
            "type": "string",
            "defaultValue": "BitsightDiligence_statistics"
        },
		"Findings_Summary_Table_Name":{
            "type": "string",
            "defaultValue": "BitsightFindings_summary"
        },
		"Findings_Table_Name":{
            "type": "string",
            "defaultValue": "BitsightFindings_data"
        },
		"Graph_Table_Name":{
            "type": "string",
            "defaultValue": "BitsightGraph_data"
        },
		"Industrial_Statistics_Table_Name":{
            "type": "string",
            "defaultValue": "BitsightIndustrial_statistics"
        },
		"Observation_Statistics_Table_Name":{
            "type": "string",
            "defaultValue": "BitsightObservation_statistics"
        },
        "LogLevel":{
            "type": "string",
            "defaultValue": "INFO",
            "metadata": {
                "description": "Select log level or log severity value from DEBUG, INFO, ERROR. By default it is set to INFO."
            },
			"allowedValues": [
                "DEBUG",
				"INFO",
				"ERROR"
                ]
        },
        "Schedule":{
            "type": "string",
            "defaultValue": "0 0 * * * *",
            "metadata": {
                "description": "Please enter a valid Quartz cron-expression. (Example: 0 0 * * * *)"
            }
        },
        "Schedule_Portfolio":{
            "type": "string",
            "defaultValue": "0 */30 *  * * *",
            "metadata": {
                "description": "Please enter a valid Quartz cron-expression. (Example: 0 */30 *  * * *)"
            }
        },
        "AppInsightsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Migrate Classic Application Insights to Log Analytic Workspace which is retiring by 29 Febraury 2024. Use 'Log Analytic Workspace-->Properties' blade having 'Resource ID' property value. This is a fully qualified resourceId which is in format '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}'"
            }
        }
    },
    "variables": {
        "FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",
         "StorageSuffix": "[environment().suffixes.storage]",
         "LogAnaltyicsUri": "[replace(environment().portal, 'https://portal', concat('https://', toLower(parameters('WorkspaceID')), '.ods.opinsights'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('FunctionName')]",
                "WorkspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[tolower(variables('FunctionName'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
            ],
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('FunctionName')]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "alwaysOn": true,
                "reserved": true,
                "siteConfig": {
                    "linuxFxVersion": "python|3.11"
                }
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('FunctionName'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "FUNCTIONS_WORKER_RUNTIME": "python",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('FunctionName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('FunctionName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "logAnalyticsUri": "[variables('LogAnaltyicsUri')]",
                        "WorkspaceID": "[parameters('WorkspaceID')]",
                        "WorkspaceKey": "[parameters('WorkspaceKey')]",
                        "API_token": "[parameters('API_token')]",
						"Companies": "[parameters('Companies')]",
						"Alerts_Table_Name": "[parameters('Alerts_Table_Name')]",
                        "Breaches_Table_Name": "[parameters('Breaches_Table_Name')]",
						"Company_Table_Name": "[parameters('Company_Table_Name')]",
						"Company_Rating_Details_Table_Name": "[parameters('Company_Rating_Details_Table_Name')]",
						"Diligence_Historical_Statistics_Table_Name": "[parameters('Diligence_Historical_Statistics_Table_Name')]",
						"Diligence_Statistics_Table_Name": "[parameters('Diligence_Statistics_Table_Name')]",
						"Findings_Summary_Table_Name": "[parameters('Findings_Summary_Table_Name')]",
						"Findings_Table_Name": "[parameters('Findings_Table_Name')]",
						"Graph_Table_Name": "[parameters('Graph_Table_Name')]",
						"Industrial_Statistics_Table_Name": "[parameters('Industrial_Statistics_Table_Name')]",
						"Observation_Statistics_Table_Name": "[parameters('Observation_Statistics_Table_Name')]",
                        "LogLevel": "[parameters('LogLevel')]",
                        "Schedule": "[parameters('Schedule')]",
                        "Schedule_Portfolio": "[parameters('Schedule_Portfolio')]",
                        "Azure_Client_Id": "[parameters('Azure_Client_Id')]",
                        "Azure_Client_Secret": "[parameters('Azure_Client_Secret')]",
                        "Azure_Tenant_Id": "[parameters('Azure_Tenant_Id')]",
                        "Portfolio_Companies_Table_Name": "[parameters('Portfolio_Companies_Table_Name')]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/sentinel-BitSight-functionapp"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/', tolower(variables('FunctionName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        }
    ]
}