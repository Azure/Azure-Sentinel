{
    "id": "AzureSql",
    "title": "Azure SQL Databases",
    "publisher": "Microsoft",
    "descriptionMarkdown": "Azure SQL is a fully managed, Platform-as-a-Service (PaaS) database engine that handles most database management functions, such as upgrading, patching, backups, and monitoring, without necessitating user involvement. This connector lets you stream your Azure SQL databases audit and diagnostic logs into Microsoft Sentinel, allowing you to continuously monitor activity in all your instances.",
    "logo": "AzureSql.svg",
    "lastDataReceivedInfoBalloon": "If no new data has been received in the last 14 days, the connector will display as being \"not connected.\" When the connector will recive data , the \"connected\" status will return.",
    "graphQueries": [
        {
            "metricName": "Total data received",
            "legend": "SQLSecurityAuditEvents",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"SQLSecurityAuditEvents\""
        },
        {
            "metricName": "Total data received",
            "legend": "SQLInsights",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"SQLInsights\""
        },
        {
            "metricName": "Total data received",
            "legend": "AutomaticTuning",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"AutomaticTuning\""
        },
        {
            "metricName": "Total data received",
            "legend": "QueryStoreWaitStatistics",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"QueryStoreWaitStatistics\""
        },
        {
            "metricName": "Total data received",
            "legend": "Errors",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Errors\""
        },
        {
            "metricName": "Total data received",
            "legend": "DatabaseWaitStatistics",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"DatabaseWaitStatistics\""
        },
        {
            "metricName": "Total data received",
            "legend": "Timeouts",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Timeouts\""
        },
        {
            "metricName": "Total data received",
            "legend": "Blocks",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Blocks\""
        },
        {
            "metricName": "Total data received",
            "legend": "Deadlocks",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Deadlocks\""
        },
        {
            "metricName": "Total data received",
            "legend": "Basic",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Basic\""
        },
        {
            "metricName": "Total data received",
            "legend": "InstanceAndAppAdvanced",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"InstanceAndAppAdvanced\""
        },
        {
            "metricName": "Total data received",
            "legend": "WorkloadManagement",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"WorkloadManagement\""
        },
        {
            "metricName": "Total data received",
            "legend": "DevOpsOperationsAudit",
            "baseQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"DevOpsOperationsAudit\""
        }
    ],
    "sampleQueries": [
        {
            "description": "SQL Diagnostics logs",
            "query": "AzureDiagnostics | where ResourceProvider == \"MICROSOFT.SQL\"|  where ResourceType == \"SERVERS/DATABASES\" | where TimeGenerated > ago(7d)"
        },
        {
            "description": "SQL Audit Logs",
            "query": "AzureDiagnostics | where Category contains \"SQLSecurityAuditEvents\" | where TimeGenerated > ago(7d)"
        }
    ],
    "dataTypes": [
        {
            "name": "SQLSecurityAuditEvents",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"SQLSecurityAuditEvents\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "SQLInsights",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"SQLInsights\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "AutomaticTuning",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"AutomaticTuning\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "QueryStoreWaitStatistics",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"QueryStoreWaitStatistics\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Errors",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Errors\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "DatabaseWaitStatistics",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"DatabaseWaitStatistics\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Timeouts",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Timeouts\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Blocks",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Blocks\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Deadlocks",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Deadlocks\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Basic",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Basic\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "InstanceAndAppAdvanced",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"InstanceAndAppAdvanced\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "WorkloadManagement",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"WorkloadManagement\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "DevOpsOperationsAudit",
            "lastDataReceivedQuery": "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"DevOpsOperationsAudit\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        }
    ],
    "connectivityCriterias": [
        {
            "type": "IsConnectedQuery",
            "value": [
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"SQLSecurityAuditEvents\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"SQLInsights\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"AutomaticTuning\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"QueryStoreWaitStatistics\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Errors\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"DatabaseWaitStatistics\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Timeouts\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Blocks\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Deadlocks\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"Basic\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"InstanceAndAppAdvanced\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"WorkloadManagement\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "AzureDiagnostics | where ResourceType == \"SERVERS/DATABASES\" | where ResourceProvider == \"MICROSOFT.SQL\" | where Category == \"DevOpsOperationsAudit\"\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
            ]
        }
    ],
    "availability": {
        "status": 1,
        "isPreview": false
    },
    "permissions": {
        "resourceProvider": [
            {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                    "read": true,
                    "write": true,
                    "delete": true
                }
            }
        ],
        "customs": [
            {
                "name": "Policy​",
                "description": "owner role assigned for each policy assignment scope.​"
            },
            {
                "name": "Auditing",
                "description": "read and write permissions to Azure SQL Server audit settings."
            }
        ]
    },
    "ascAssessment": {
        "assessmentKey": "58d72d9d-0310-4792-9a3b-6dd111093cdb",
        "assessmentLinkText": "Enable Microsoft Defender for SQL Databases and Servers now",
        "assessmentDescriptions": "Microsoft Defender for SQL Database and Servers provides real-time protection for your Azure SQL and Database Services. Enable Microsoft Defender for Azure SQL, connect it into Sentinel, and use SQL diagnostic logs in order to investigate Microsoft Defender alerts into a root cause in Sentinel.",
        "assessmentSectionTitleText": "Enable Microsoft Defender for Azure SQL - Recommended!"
    },
    "instructionSteps": [
        {
            "title": "Connect your Azure SQL databases diagnostics logs into Sentinel.",
            "description": "This connector uses Azure Policy to apply a single Azure SQL Database log-streaming configuration to a collection of instances, defined as a scope.   \nFollow the instructions below to create and apply a policy to all current and future instances. **Note**, you may already have an active policy for this resource type.",
            "instructions": [
                {
                    "parameters": {
                        "instructionSteps": [
                            {
                                "title": "Stream diagnostics logs from your Azure SQL Databases at scale",
                                "innerSteps": [
                                    {
                                        "title": "Launch the Azure Policy Assignment wizard and follow the steps.​",
                                        "description": ">1. In the **Basics** tab, click the button with the three dots under **Scope** to select your resources assignment scope.\n        >2. In the **Parameters** tab, choose your Microsoft Sentinel workspace from the **Log Analytics workspace** drop-down list, and leave marked as \"True\" all the log and metric types you want to ingest.\n        >3. To apply the policy on your existing resources, select the **Remediation tab** and mark the **Create a remediation task** checkbox.",
                                        "instructions": [
                                            {
                                                "parameters": {
                                                    "linkType": "OpenPolicyAssignment",
                                                    "policyDefinitionGuid": "b79fa14e-238a-4c2d-b376-442ce508fc84",
                                                    "assignMode": 1
                                                },
                                                "type": "InstallAgent"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "type": "InstructionStepsGroup"
                },
                {
                    "parameters": {
                        "instructionSteps": [
                            {
                                "title": "Stream audit logs from your Azure SQL Databases at the server level at scale",
                                "innerSteps": [
                                    {
                                        "title": "Launch the Azure Policy Assignment wizard and follow the steps.​",
                                        "description": ">1. In the **Basics** tab, click the button with the three dots under **Scope** to select your resources assignment scope.\n        >2. In the **Parameters** tab, choose your Microsoft Sentinel workspace from the **Log Analytics workspace** drop-down list, and leave marked as \"True\" all the log and metric types you want to ingest.\n        >3. To apply the policy on your existing resources, select the **Remediation tab** and mark the **Create a remediation task** checkbox.",
                                        "instructions": [
                                            {
                                                "parameters": {
                                                    "linkType": "OpenPolicyAssignment",
                                                    "policyDefinitionGuid": "7ea8a143-05e3-4553-abfe-f56bef8b0b70",
                                                    "assignMode": 1
                                                },
                                                "type": "InstallAgent"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "type": "InstructionStepsGroup"
                }
            ]
        }
    ]
}