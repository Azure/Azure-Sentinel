{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Infoblox",
    "comments": "Solution template for Infoblox NIOS"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Infoblox NIOS",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "watchlist1-id": {
      "type": "string",
      "defaultValue": "Sources_by_SourceType",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    }
  },
  "variables": {
    "_solutionName": "Infoblox NIOS",
    "_solutionVersion": "3.0.3",
    "solutionId": "azuresentinel.azure-sentinel-solution-infobloxnios",
    "_solutionId": "[variables('solutionId')]",
    "uiConfigId1": "InfobloxNIOS",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "InfobloxNIOS",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "workbookVersion1": "1.1.0",
    "workbookContentId1": "InfobloxNIOSWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','Infoblox')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "Infoblox-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','Infoblox_allotherdhcpdTypes')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_allotherdhcpdTypes')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_allotherdhcpdTypes-Parser')))]",
      "parserVersion2": "1.1.0",
      "parserContentId2": "Infoblox_allotherdhcpdTypes-Parser"
    },
    "parserObject3": {
      "_parserName3": "[concat(parameters('workspace'),'/','Infoblox_allotherdnsTypes')]",
      "_parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_allotherdnsTypes')]",
      "parserTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_allotherdnsTypes-Parser')))]",
      "parserVersion3": "1.1.0",
      "parserContentId3": "Infoblox_allotherdnsTypes-Parser"
    },
    "parserObject4": {
      "_parserName4": "[concat(parameters('workspace'),'/','Infoblox_allotherlogTypes')]",
      "_parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_allotherlogTypes')]",
      "parserTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_allotherlogTypes-Parser')))]",
      "parserVersion4": "1.1.0",
      "parserContentId4": "Infoblox_allotherlogTypes-Parser"
    },
    "parserObject5": {
      "_parserName5": "[concat(parameters('workspace'),'/','Infoblox_dhcp_consolidated')]",
      "_parserId5": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcp_consolidated')]",
      "parserTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcp_consolidated-Parser')))]",
      "parserVersion5": "1.0.0",
      "parserContentId5": "Infoblox_dhcp_consolidated-Parser"
    },
    "parserObject6": {
      "_parserName6": "[concat(parameters('workspace'),'/','Infoblox_dhcpack')]",
      "_parserId6": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpack')]",
      "parserTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpack-Parser')))]",
      "parserVersion6": "1.1.0",
      "parserContentId6": "Infoblox_dhcpack-Parser"
    },
    "parserObject7": {
      "_parserName7": "[concat(parameters('workspace'),'/','Infoblox_dhcpadded')]",
      "_parserId7": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpadded')]",
      "parserTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpadded-Parser')))]",
      "parserVersion7": "1.1.0",
      "parserContentId7": "Infoblox_dhcpadded-Parser"
    },
    "parserObject8": {
      "_parserName8": "[concat(parameters('workspace'),'/','Infoblox_dhcpbindupdate')]",
      "_parserId8": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpbindupdate')]",
      "parserTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpbindupdate-Parser')))]",
      "parserVersion8": "1.1.0",
      "parserContentId8": "Infoblox_dhcpbindupdate-Parser"
    },
    "parserObject9": {
      "_parserName9": "[concat(parameters('workspace'),'/','Infoblox_dhcpdiscover')]",
      "_parserId9": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpdiscover')]",
      "parserTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpdiscover-Parser')))]",
      "parserVersion9": "1.1.0",
      "parserContentId9": "Infoblox_dhcpdiscover-Parser"
    },
    "parserObject10": {
      "_parserName10": "[concat(parameters('workspace'),'/','Infoblox_dhcpexpire')]",
      "_parserId10": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpexpire')]",
      "parserTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpexpire-Parser')))]",
      "parserVersion10": "1.1.0",
      "parserContentId10": "Infoblox_dhcpexpire-Parser"
    },
    "parserObject11": {
      "_parserName11": "[concat(parameters('workspace'),'/','Infoblox_dhcpinform')]",
      "_parserId11": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpinform')]",
      "parserTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpinform-Parser')))]",
      "parserVersion11": "1.1.0",
      "parserContentId11": "Infoblox_dhcpinform-Parser"
    },
    "parserObject12": {
      "_parserName12": "[concat(parameters('workspace'),'/','Infoblox_dhcpoffer')]",
      "_parserId12": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpoffer')]",
      "parserTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpoffer-Parser')))]",
      "parserVersion12": "1.1.0",
      "parserContentId12": "Infoblox_dhcpoffer-Parser"
    },
    "parserObject13": {
      "_parserName13": "[concat(parameters('workspace'),'/','Infoblox_dhcpoption')]",
      "_parserId13": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpoption')]",
      "parserTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpoption-Parser')))]",
      "parserVersion13": "1.1.0",
      "parserContentId13": "Infoblox_dhcpoption-Parser"
    },
    "parserObject14": {
      "_parserName14": "[concat(parameters('workspace'),'/','Infoblox_dhcpother')]",
      "_parserId14": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpother')]",
      "parserTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpother-Parser')))]",
      "parserVersion14": "1.1.0",
      "parserContentId14": "Infoblox_dhcpother-Parser"
    },
    "parserObject15": {
      "_parserName15": "[concat(parameters('workspace'),'/','Infoblox_dhcprelease')]",
      "_parserId15": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcprelease')]",
      "parserTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcprelease-Parser')))]",
      "parserVersion15": "1.1.0",
      "parserContentId15": "Infoblox_dhcprelease-Parser"
    },
    "parserObject16": {
      "_parserName16": "[concat(parameters('workspace'),'/','Infoblox_dhcpremoved')]",
      "_parserId16": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpremoved')]",
      "parserTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpremoved-Parser')))]",
      "parserVersion16": "1.1.0",
      "parserContentId16": "Infoblox_dhcpremoved-Parser"
    },
    "parserObject17": {
      "_parserName17": "[concat(parameters('workspace'),'/','Infoblox_dhcprequest')]",
      "_parserId17": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcprequest')]",
      "parserTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcprequest-Parser')))]",
      "parserVersion17": "1.1.0",
      "parserContentId17": "Infoblox_dhcprequest-Parser"
    },
    "parserObject18": {
      "_parserName18": "[concat(parameters('workspace'),'/','Infoblox_dhcpsession')]",
      "_parserId18": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpsession')]",
      "parserTemplateSpecName18": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dhcpsession-Parser')))]",
      "parserVersion18": "1.1.0",
      "parserContentId18": "Infoblox_dhcpsession-Parser"
    },
    "parserObject19": {
      "_parserName19": "[concat(parameters('workspace'),'/','Infoblox_dns_consolidated')]",
      "_parserId19": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dns_consolidated')]",
      "parserTemplateSpecName19": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dns_consolidated-Parser')))]",
      "parserVersion19": "1.0.0",
      "parserContentId19": "Infoblox_dns_consolidated-Parser"
    },
    "parserObject20": {
      "_parserName20": "[concat(parameters('workspace'),'/','Infoblox_dnsclient')]",
      "_parserId20": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dnsclient')]",
      "parserTemplateSpecName20": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dnsclient-Parser')))]",
      "parserVersion20": "1.1.0",
      "parserContentId20": "Infoblox_dnsclient-Parser"
    },
    "parserObject21": {
      "_parserName21": "[concat(parameters('workspace'),'/','Infoblox_dnsgss')]",
      "_parserId21": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dnsgss')]",
      "parserTemplateSpecName21": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dnsgss-Parser')))]",
      "parserVersion21": "1.1.0",
      "parserContentId21": "Infoblox_dnsgss-Parser"
    },
    "parserObject22": {
      "_parserName22": "[concat(parameters('workspace'),'/','Infoblox_dnszone')]",
      "_parserId22": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dnszone')]",
      "parserTemplateSpecName22": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Infoblox_dnszone-Parser')))]",
      "parserVersion22": "1.1.0",
      "parserContentId22": "Infoblox_dnszone-Parser"
    },
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.0.4",
      "_analyticRulecontentId1": "b8266f81-2715-41a6-9062-42486cbc9c73",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b8266f81-2715-41a6-9062-42486cbc9c73')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b8266f81-2715-41a6-9062-42486cbc9c73')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b8266f81-2715-41a6-9062-42486cbc9c73','-', '1.0.4')))]"
    },
    "analyticRuleObject2": {
      "analyticRuleVersion2": "1.0.4",
      "_analyticRulecontentId2": "57e56fc9-417a-4f41-a579-5475aea7b8ce",
      "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '57e56fc9-417a-4f41-a579-5475aea7b8ce')]",
      "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('57e56fc9-417a-4f41-a579-5475aea7b8ce')))]",
      "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','57e56fc9-417a-4f41-a579-5475aea7b8ce','-', '1.0.4')))]"
    },
    "Sources_by_SourceType": "Sources_by_SourceType",
    "_Sources_by_SourceType": "[variables('Sources_by_SourceType')]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox NIOS data connector with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "[Deprecated] Infoblox NIOS",
                  "publisher": "Infoblox",
                  "descriptionMarkdown": "The [Infoblox Network Identity Operating System (NIOS)](https://www.infoblox.com/glossary/network-identity-operating-system-nios/) connector allows you to easily connect your Infoblox NIOS logs with Microsoft Sentinel, to view dashboards, create custom alerts, and improve investigation. This gives you more insight into your organization's network and improves your security operation capabilities.",
                  "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "InfobloxNIOS",
                      "baseQuery": "Infoblox"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Total Count by DHCP Request Message Types",
                      "query": "union isfuzzy=true \n Infoblox_dhcpdiscover,Infoblox_dhcprequest,Infoblox_dhcpinform \n| summarize count() by Log_Type"
                    },
                    {
                      "description": "Top 5 Source IP address",
                      "query": "Infoblox_dnsclient \n | summarize count() by SrcIpAddr \n | top 10 by count_ desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "Syslog (InfobloxNIOS)",
                      "lastDataReceivedQuery": "Infoblox \n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Infoblox \n | where TimeGenerated > ago(3d)\n |take 1 \n | project IsConnected = true"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "write permission is required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Infoblox NIOS",
                        "description": "must be configured to export logs via Syslog"
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected which is deployed as part of the solution. To view the function code in Log Analytics, open Log Analytics/Microsoft Sentinel Logs blade, click Functions and search for the alias Infoblox and load the function code or click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20NIOS/Parser/Infoblox.yaml), on the second line of the query, enter any unique identifiers for the logstream. The function usually takes 10-15 minutes to activate after solution installation/update."
                    },
                    {
                      "description": "Typically, you should install the agent on a different computer from the one on which the logs are generated.\n\n>  Syslog logs are collected only from **Linux** agents.",
                      "instructions": [
                        {
                          "parameters": {
                            "title": "Choose where to install the agent:",
                            "instructionSteps": [
                              {
                                "title": "Install agent on Azure Linux Virtual Machine",
                                "description": "Select the machine to install the agent on and then click **Connect**.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxVirtualMachine"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              },
                              {
                                "title": "Install agent on a non-Azure Linux Machine",
                                "description": "Download the agent on the relevant machine and follow the instructions.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxNonAzure"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ],
                      "title": "1. Install and onboard the agent for Linux"
                    },
                    {
                      "description": "Configure the facilities you want to collect and their severities.\n 1. Under workspace advanced settings **Configuration**, select **Data** and then **Syslog**.\n 2. Select **Apply below configuration to my machines** and select the facilities and severities.\n 3.  Click **Save**.",
                      "instructions": [
                        {
                          "parameters": {
                            "linkType": "OpenSyslogSettings"
                          },
                          "type": "InstallAgent"
                        }
                      ],
                      "title": "2. Configure the logs to be collected"
                    },
                    {
                      "description": "[Follow these instructions](https://www.infoblox.com/wp-content/uploads/infoblox-deployment-guide-slog-and-snmp-configuration-for-nios.pdf) to enable syslog forwarding of Infoblox NIOS Logs. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
                      "title": "3. Configure and connect the Infoblox NIOS"
                    },
                    {
                      "description": "Update the watchlist 'Sources_by_Source' with the hostname(s) of your Infoblox device(s). Set SourceType to 'InfobloxNIOS' and Source to the value of 'Computer' seen in the logs seen in Syslog table.",
                      "title": "4. Configure the Sentinel parser"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox NIOS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "[Deprecated] Infoblox NIOS",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "[Deprecated] Infoblox NIOS",
          "publisher": "Infoblox",
          "descriptionMarkdown": "The [Infoblox Network Identity Operating System (NIOS)](https://www.infoblox.com/glossary/network-identity-operating-system-nios/) connector allows you to easily connect your Infoblox NIOS logs with Microsoft Sentinel, to view dashboards, create custom alerts, and improve investigation. This gives you more insight into your organization's network and improves your security operation capabilities.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "InfobloxNIOS",
              "baseQuery": "Infoblox"
            }
          ],
          "dataTypes": [
            {
              "name": "Syslog (InfobloxNIOS)",
              "lastDataReceivedQuery": "Infoblox \n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "Infoblox \n | where TimeGenerated > ago(3d)\n |take 1 \n | project IsConnected = true"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Total Count by DHCP Request Message Types",
              "query": "union isfuzzy=true \n Infoblox_dhcpdiscover,Infoblox_dhcprequest,Infoblox_dhcpinform \n| summarize count() by Log_Type"
            },
            {
              "description": "Top 5 Source IP address",
              "query": "Infoblox_dnsclient \n | summarize count() by SrcIpAddr \n | top 10 by count_ desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "write permission is required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Infoblox NIOS",
                "description": "must be configured to export logs via Syslog"
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected which is deployed as part of the solution. To view the function code in Log Analytics, open Log Analytics/Microsoft Sentinel Logs blade, click Functions and search for the alias Infoblox and load the function code or click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20NIOS/Parser/Infoblox.yaml), on the second line of the query, enter any unique identifiers for the logstream. The function usually takes 10-15 minutes to activate after solution installation/update."
            },
            {
              "description": "Typically, you should install the agent on a different computer from the one on which the logs are generated.\n\n>  Syslog logs are collected only from **Linux** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "1. Install and onboard the agent for Linux"
            },
            {
              "description": "Configure the facilities you want to collect and their severities.\n 1. Under workspace advanced settings **Configuration**, select **Data** and then **Syslog**.\n 2. Select **Apply below configuration to my machines** and select the facilities and severities.\n 3.  Click **Save**.",
              "instructions": [
                {
                  "parameters": {
                    "linkType": "OpenSyslogSettings"
                  },
                  "type": "InstallAgent"
                }
              ],
              "title": "2. Configure the logs to be collected"
            },
            {
              "description": "[Follow these instructions](https://www.infoblox.com/wp-content/uploads/infoblox-deployment-guide-slog-and-snmp-configuration-for-nios.pdf) to enable syslog forwarding of Infoblox NIOS Logs. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
              "title": "3. Configure and connect the Infoblox NIOS"
            },
            {
              "description": "Update the watchlist 'Sources_by_Source' with the hostname(s) of your Infoblox device(s). Set SourceType to 'InfobloxNIOS' and Source to the value of 'Computer' seen in the logs seen in Syslog table.",
              "title": "4. Configure the Sentinel parser"
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox-Workbook-V2 Workbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Gain insight into Infoblox NIOS by analyzing, collecting and correlating DHCP and DNS data.\nThis workbook provides visibility into DHCP and DNS traffic"
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"26773226-79a9-4dd2-9de6-ade1f250ace6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":2419200000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true}},{\"id\":\"00be31a6-f3f8-4de8-845d-7a4985d41ef3\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"InfobloxDevice\",\"label\":\"Infoblox Device\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"edf8a22f-492e-4c73-b113-31cb1bfee2ff\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"DHCP\",\"subTarget\":\"DHCPTab\",\"preText\":\"DHCP\",\"style\":\"link\"},{\"id\":\"f6c0c04f-5e57-43fb-9daf-f18a44dd1d87\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"DNS\",\"subTarget\":\"DNSTab\",\"style\":\"link\"}]},\"name\":\"links - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dhcp_consolidated\\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| where Log_Type startswith \\\"DHCP\\\"\\r\\n| summarize count() by Log_Type, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"title\":\"Total Events by DHCP Message Type\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DHCPTab\"},\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union \\r\\nInfoblox_dhcpdiscover,Infoblox_dhcprequest,Infoblox_dhcpinform\\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| summarize count() by Log_Type, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"title\":\"DHCP Requests by Message Type\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"DHCPREQUEST\",\"color\":\"magenta\"},{\"seriesName\":\"DHCPDISCOVER\",\"color\":\"green\"},{\"seriesName\":\"DHCPINFORM\",\"color\":\"blue\"}],\"xSettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DHCPTab\"},\"customWidth\":\"50\",\"name\":\"query - 4 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union \\r\\nInfoblox_dhcpoffer,Infoblox_dhcpack\\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| summarize count() by Log_Type, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"title\":\"DHCP Responses by Message Type\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"DHCPOFFER\",\"color\":\"blue\"},{\"seriesName\":\"DHCPACK\",\"color\":\"magenta\"}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DHCPTab\"},\"customWidth\":\"50\",\"name\":\"query - 4 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dhcpdiscover\\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| summarize count() by tostring(SrcMacAddr)\\r\\n| top 10 by count_\",\"size\":0,\"title\":\"Top 10 Clients by Requests\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"coldHot\"}}],\"labelSettings\":[{\"columnId\":\"SrcMacAddr\",\"label\":\"Client MAC Address\"},{\"columnId\":\"count_\",\"label\":\"Total\"}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DHCPTab\"},\"customWidth\":\"50\",\"name\":\"query - 4 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dhcpdiscover\\r\\n| summarize count() by tostring(Network)\\r\\n| distinct Network\\r\\n\\r\\n\",\"size\":0,\"title\":\"Top 10 Clients by Requests\",\"timeContext\":{\"durationMs\":604800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"coldHot\"}}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DHCPTab\"},\"customWidth\":\"50\",\"name\":\"query - 4 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dns_consolidated \\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| summarize count() by Computer, bin(TimeGenerated,15m)\",\"size\":0,\"showAnnotations\":true,\"title\":\"DNS Activity by Server\",\"color\":\"magenta\",\"timeContext\":{\"durationMs\":604800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNSTab\"},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dnsclient \\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| summarize Response = countif(isnotempty(DnsResponseCode)), Request = countif(isnotempty(DnsQueryClassName) and isempty(DnsResponseCode)), count() by bin(TimeGenerated, {TimeRange:grain})\\r\\n| project-away count_\",\"size\":0,\"showAnnotations\":true,\"title\":\"DNS Requests vs Responses\",\"color\":\"magenta\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\",\"graphSettings\":{\"type\":0}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNSTab\"},\"customWidth\":\"50\",\"name\":\"query - 6 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dnsclient \\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| where isnotempty(DnsResponseCode)\\r\\n| summarize count() by tostring(DnsResponseCode), bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\"size\":0,\"title\":\"DNS Response Code\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"turquoise\"}}],\"labelSettings\":[{\"columnId\":\"count_\",\"label\":\"Total\"}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNSTab\"},\"customWidth\":\"50\",\"name\":\"query - 7 - Copy - Copy\",\"styleSettings\":{\"margin\":\"50\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dnsclient \\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| where isempty(DnsResponseCode) and isnotempty(DnsQueryClassName)\\r\\n| summarize count() by tostring(SrcIpAddr)\\r\\n| top 10 by count_\",\"size\":0,\"title\":\"Top 10 DNS Request Clients\",\"timeContext\":{\"durationMs\":604800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"turquoise\"}}],\"labelSettings\":[{\"columnId\":\"SrcIpAddr\",\"label\":\"SrcIpAddr\"},{\"columnId\":\"count_\",\"label\":\"Total\"}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNSTab\"},\"customWidth\":\"50\",\"name\":\"query - 7\",\"styleSettings\":{\"margin\":\"50\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dnsclient \\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| where isempty(DnsResponseCode) and isnotempty(DnsQueryClassName)\\r\\n| summarize count() by tostring(DnsQueryClassName)\\r\\n| top 10 by count_\",\"size\":0,\"title\":\"Top 10 DNS Request Domains\",\"timeContext\":{\"durationMs\":604800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"turquoise\"}}],\"labelSettings\":[{\"columnId\":\"DnsQueryClassName\",\"label\":\"Domain Name\"},{\"columnId\":\"count_\",\"label\":\"Total\"}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNSTab\"},\"customWidth\":\"50\",\"name\":\"query - 7 - Copy\",\"styleSettings\":{\"margin\":\"50\"}}],\"fromTemplateId\":\"sentinel-InfobloxWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=InfobloxNIOSWorkbook; logoFileName=infoblox_logo.svg; description=Gain insight into Infoblox NIOS by analyzing, collecting and correlating DHCP and DNS data.\nThis workbook provides visibility into DHCP and DNS traffic; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.1.0; title=Infoblox NIOS; templateRelativePath=Infoblox-Workbook-V2.json; subtitle=; provider=Infoblox}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox NIOS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "Syslog",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "InfobloxNIOS",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox",
                "query": "union\nInfoblox_dnsclient,Infoblox_dnsgss,Infoblox_dnszone,Infoblox_allotherdnsTypes,Infoblox_dhcpadded, Infoblox_dhcpbindupdate,Infoblox_dhcpdiscover,Infoblox_dhcpexpire,Infoblox_dhcpinform,Infoblox_dhcpoffer,Infoblox_dhcpoption,Infoblox_dhcpother,Infoblox_dhcprelease,Infoblox_dhcpremoved,Infoblox_dhcprequest,Infoblox_dhcpsession,Infoblox_dnsclient,Infoblox_allotherdhcpdTypes\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox",
        "query": "union\nInfoblox_dnsclient,Infoblox_dnsgss,Infoblox_dnszone,Infoblox_allotherdnsTypes,Infoblox_dhcpadded, Infoblox_dhcpbindupdate,Infoblox_dhcpdiscover,Infoblox_dhcpexpire,Infoblox_dhcpinform,Infoblox_dhcpoffer,Infoblox_dhcpoption,Infoblox_dhcpother,Infoblox_dhcprelease,Infoblox_dhcpremoved,Infoblox_dhcprequest,Infoblox_dhcpsession,Infoblox_dnsclient,Infoblox_allotherdhcpdTypes\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_allotherdhcpdTypes Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_allotherdhcpdTypes",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_allotherdhcpdTypes",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog \n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where not(SyslogMessage has_any (\"DHCPEXPIRE\",\"DHCPOFFER\",\"DHCPINFORM\",\"DHCPACK\",\"DHCPDISCOVER\",\"DHCPRELEASE\",\"DHCPACK\",\"r-l-e\", \"bind\",\"Added\",\"Option\", \"Removed\",\"balanced\",\"balancing\",\"failover\"))\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1])\n        | project-away Parser;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_allotherdhcpdTypes')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_allotherdhcpdTypes",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.1.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_allotherdhcpdTypes",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_allotherdhcpdTypes",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog \n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where not(SyslogMessage has_any (\"DHCPEXPIRE\",\"DHCPOFFER\",\"DHCPINFORM\",\"DHCPACK\",\"DHCPDISCOVER\",\"DHCPRELEASE\",\"DHCPACK\",\"r-l-e\", \"bind\",\"Added\",\"Option\", \"Removed\",\"balanced\",\"balancing\",\"failover\"))\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1])\n        | project-away Parser;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_allotherdhcpdTypes')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject3').parserTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_allotherdnsTypes Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject3').parserVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject3')._parserName3]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_allotherdnsTypes",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_allotherdnsTypes",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog \n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where not(SyslogMessage has_any (\"client\",\"gss_accept_sec_context\"))\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1])\n    | project-away Parser;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
              "dependsOn": [
                "[variables('parserObject3')._parserId3]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_allotherdnsTypes')]",
                "contentId": "[variables('parserObject3').parserContentId3]",
                "kind": "Parser",
                "version": "[variables('parserObject3').parserVersion3]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_allotherdnsTypes",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.1.0')))]",
        "version": "[variables('parserObject3').parserVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject3')._parserName3]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_allotherdnsTypes",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_allotherdnsTypes",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog \n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where not(SyslogMessage has_any (\"client\",\"gss_accept_sec_context\"))\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1])\n    | project-away Parser;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
      "dependsOn": [
        "[variables('parserObject3')._parserId3]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_allotherdnsTypes')]",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "kind": "Parser",
        "version": "[variables('parserObject3').parserVersion3]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject4').parserTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_allotherlogTypes Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject4').parserVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject4')._parserName4]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_allotherlogTypes",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_allotherlogTypes",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog \n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1])            \n    | project-away Parser;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
              "dependsOn": [
                "[variables('parserObject4')._parserId4]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_allotherlogTypes')]",
                "contentId": "[variables('parserObject4').parserContentId4]",
                "kind": "Parser",
                "version": "[variables('parserObject4').parserVersion4]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_allotherlogTypes",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.1.0')))]",
        "version": "[variables('parserObject4').parserVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject4')._parserName4]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_allotherlogTypes",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_allotherlogTypes",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog \n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1])            \n    | project-away Parser;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
      "dependsOn": [
        "[variables('parserObject4')._parserId4]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_allotherlogTypes')]",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "kind": "Parser",
        "version": "[variables('parserObject4').parserVersion4]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject5').parserTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcp_consolidated Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject5').parserVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject5')._parserName5]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcp_consolidated",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcp_consolidated",
                "query": "union\nInfoblox_dhcpadded,Infoblox_dhcpbindupdate,Infoblox_dhcpdiscover,Infoblox_dhcpexpire,Infoblox_dhcpinform,Infoblox_dhcpoffer,Infoblox_dhcpoption,Infoblox_dhcpother,Infoblox_dhcprelease,Infoblox_dhcpremoved,Infoblox_dhcprequest,Infoblox_dhcpsession,Infoblox_allotherdhcpdTypes\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject5')._parserId5,'/'))))]",
              "dependsOn": [
                "[variables('parserObject5')._parserId5]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcp_consolidated')]",
                "contentId": "[variables('parserObject5').parserContentId5]",
                "kind": "Parser",
                "version": "[variables('parserObject5').parserVersion5]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject5').parserContentId5]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcp_consolidated",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject5').parserContentId5,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject5').parserContentId5,'-', '1.0.0')))]",
        "version": "[variables('parserObject5').parserVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject5')._parserName5]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcp_consolidated",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcp_consolidated",
        "query": "union\nInfoblox_dhcpadded,Infoblox_dhcpbindupdate,Infoblox_dhcpdiscover,Infoblox_dhcpexpire,Infoblox_dhcpinform,Infoblox_dhcpoffer,Infoblox_dhcpoption,Infoblox_dhcpother,Infoblox_dhcprelease,Infoblox_dhcpremoved,Infoblox_dhcprequest,Infoblox_dhcpsession,Infoblox_allotherdhcpdTypes\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject5')._parserId5,'/'))))]",
      "dependsOn": [
        "[variables('parserObject5')._parserId5]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcp_consolidated')]",
        "contentId": "[variables('parserObject5').parserContentId5]",
        "kind": "Parser",
        "version": "[variables('parserObject5').parserVersion5]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject6').parserTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpack Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject6').parserVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject6')._parserName6]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpack",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpack",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage startswith_cs \"DHCPACK\"\n    | extend Parser = extract_all(@\"^([^\\s]+)\\s(?:on\\s([\\d\\.]+)\\s)?(?:to\\s([^\\s]+)(?:\\s\\(([^\\)]+)\\))?)(?:\\svia\\s([^\\s]+))?(?:\\srelay\\s([^\\s]+))?(?:\\slease-duration\\s([\\d]+))?(?:\\s\\(([^\\)]+)\\))?(?:\\suid\\s([^\\s]+))?\", dynamic([1,2,3,4,5,6,7,8,9]), SyslogMessage)[0]\n    | extend responseTime = EventTime,\n            Log_Type = tostring(Parser[0]),\n            IPAddress = tostring(Parser[1]), \n            SrcMacAddr = tostring(Parser[2]),\n            SrcHostname = tostring(Parser[3]),\n            Interface = tostring(Parser[4]),\n            Relay = tostring(Parser[5]), \n            LeaseDuration = tostring(Parser[6]),\n            State = tostring(Parser[8])\n    | project-away Parser\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject6')._parserId6,'/'))))]",
              "dependsOn": [
                "[variables('parserObject6')._parserId6]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpack')]",
                "contentId": "[variables('parserObject6').parserContentId6]",
                "kind": "Parser",
                "version": "[variables('parserObject6').parserVersion6]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject6').parserContentId6]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpack",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject6').parserContentId6,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject6').parserContentId6,'-', '1.1.0')))]",
        "version": "[variables('parserObject6').parserVersion6]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject6')._parserName6]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpack",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpack",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage startswith_cs \"DHCPACK\"\n    | extend Parser = extract_all(@\"^([^\\s]+)\\s(?:on\\s([\\d\\.]+)\\s)?(?:to\\s([^\\s]+)(?:\\s\\(([^\\)]+)\\))?)(?:\\svia\\s([^\\s]+))?(?:\\srelay\\s([^\\s]+))?(?:\\slease-duration\\s([\\d]+))?(?:\\s\\(([^\\)]+)\\))?(?:\\suid\\s([^\\s]+))?\", dynamic([1,2,3,4,5,6,7,8,9]), SyslogMessage)[0]\n    | extend responseTime = EventTime,\n            Log_Type = tostring(Parser[0]),\n            IPAddress = tostring(Parser[1]), \n            SrcMacAddr = tostring(Parser[2]),\n            SrcHostname = tostring(Parser[3]),\n            Interface = tostring(Parser[4]),\n            Relay = tostring(Parser[5]), \n            LeaseDuration = tostring(Parser[6]),\n            State = tostring(Parser[8])\n    | project-away Parser\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject6')._parserId6,'/'))))]",
      "dependsOn": [
        "[variables('parserObject6')._parserId6]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpack')]",
        "contentId": "[variables('parserObject6').parserContentId6]",
        "kind": "Parser",
        "version": "[variables('parserObject6').parserVersion6]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject7').parserTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpadded Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject7').parserVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject7')._parserName7]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpadded",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpadded",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"Added\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpadded = extract_all(@\"([\\w\\s]+)\\sfrom\\s(\\S+)\\sto\\s(\\S+)\", dynamic([1,2,3,4,5]), RawData_subString)[0]\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpadded[0])),\n        Source = tostring(dhcpadded[1]),  \n        Dest = tostring(dhcpadded[2])\n    | project-away SyslogMessage, dhcpadded, RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject7')._parserId7,'/'))))]",
              "dependsOn": [
                "[variables('parserObject7')._parserId7]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpadded')]",
                "contentId": "[variables('parserObject7').parserContentId7]",
                "kind": "Parser",
                "version": "[variables('parserObject7').parserVersion7]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject7').parserContentId7]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpadded",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject7').parserContentId7,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject7').parserContentId7,'-', '1.1.0')))]",
        "version": "[variables('parserObject7').parserVersion7]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject7')._parserName7]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpadded",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpadded",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"Added\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpadded = extract_all(@\"([\\w\\s]+)\\sfrom\\s(\\S+)\\sto\\s(\\S+)\", dynamic([1,2,3,4,5]), RawData_subString)[0]\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpadded[0])),\n        Source = tostring(dhcpadded[1]),  \n        Dest = tostring(dhcpadded[2])\n    | project-away SyslogMessage, dhcpadded, RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject7')._parserId7,'/'))))]",
      "dependsOn": [
        "[variables('parserObject7')._parserId7]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpadded')]",
        "contentId": "[variables('parserObject7').parserContentId7]",
        "kind": "Parser",
        "version": "[variables('parserObject7').parserVersion7]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject8').parserTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpbindupdate Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject8').parserVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject8')._parserName8]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpbindupdate",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpbindupdate",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"bind\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;    \nRawData\n    | extend dhcpbindupdate = extract_all(@\"^\\s?(\\w+)\\s\\w+\\s([0-9.]+)\\sfrom\\s(\\S+)\\s(\\w+)\\:\\s(.*)\", dynamic([1,2,3,4,5]),  RawData_subString)[0]\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpbindupdate[0])),\n        DvcIpAddr = tostring(dhcpbindupdate[1]),  \n        Source = tostring(dhcpbindupdate[2]),\n        DvcAction = tostring(dhcpbindupdate[3]),  \n        EventMessage = tostring(dhcpbindupdate[4])\n    | project-away SyslogMessage, dhcpbindupdate,RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject8')._parserId8,'/'))))]",
              "dependsOn": [
                "[variables('parserObject8')._parserId8]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpbindupdate')]",
                "contentId": "[variables('parserObject8').parserContentId8]",
                "kind": "Parser",
                "version": "[variables('parserObject8').parserVersion8]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject8').parserContentId8]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpbindupdate",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject8').parserContentId8,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject8').parserContentId8,'-', '1.1.0')))]",
        "version": "[variables('parserObject8').parserVersion8]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject8')._parserName8]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpbindupdate",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpbindupdate",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"bind\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;    \nRawData\n    | extend dhcpbindupdate = extract_all(@\"^\\s?(\\w+)\\s\\w+\\s([0-9.]+)\\sfrom\\s(\\S+)\\s(\\w+)\\:\\s(.*)\", dynamic([1,2,3,4,5]),  RawData_subString)[0]\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpbindupdate[0])),\n        DvcIpAddr = tostring(dhcpbindupdate[1]),  \n        Source = tostring(dhcpbindupdate[2]),\n        DvcAction = tostring(dhcpbindupdate[3]),  \n        EventMessage = tostring(dhcpbindupdate[4])\n    | project-away SyslogMessage, dhcpbindupdate,RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject8')._parserId8,'/'))))]",
      "dependsOn": [
        "[variables('parserObject8')._parserId8]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpbindupdate')]",
        "contentId": "[variables('parserObject8').parserContentId8]",
        "kind": "Parser",
        "version": "[variables('parserObject8').parserVersion8]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject9').parserTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpdiscover Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject9').parserVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject9')._parserName9]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpdiscover",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpdiscover",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage startswith_cs \"DHCPDISCOVER\"\n    | extend responseTime = EventTime\n    | extend Parser = extract_all(@\"^(\\w+)\\sfrom\\s([a-z0-9\\:]+)(?:\\s\\(([^\\)]+)\\)|)(?:\\svia\\s([^\\s\\:]+[^\\:\\s]))(?:\\sTransID\\s([^\\s\\:]+)?)?(?:\\suid\\s([\\S]+))?(?:\\:?\\snetwork\\s([^\\s\\:]+)?)?(:?\\:\\s(.*))?\", dynamic([1,2,3,4,5,6,7,8,9,10]), SyslogMessage)[0]\n    | extend Log_Type = tostring(Parser[0]),\n        SrcMacAddr = tostring(Parser[1]), \n        SrcHostName = tostring(Parser[2]), \n        SrcRouterAddress = tostring(Parser[3]), \n        DhcpSessionId = tostring(Parser[4]),\n        SrcUserIdType = tostring(Parser[5]), \n        Network = tostring(Parser[6]),\n        EventMessage = tostring(Parser[8])\n    | project-away SrcHostName,SrcRouterAddress,Parser;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject9')._parserId9,'/'))))]",
              "dependsOn": [
                "[variables('parserObject9')._parserId9]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpdiscover')]",
                "contentId": "[variables('parserObject9').parserContentId9]",
                "kind": "Parser",
                "version": "[variables('parserObject9').parserVersion9]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject9').parserContentId9]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpdiscover",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject9').parserContentId9,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject9').parserContentId9,'-', '1.1.0')))]",
        "version": "[variables('parserObject9').parserVersion9]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject9')._parserName9]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpdiscover",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpdiscover",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage startswith_cs \"DHCPDISCOVER\"\n    | extend responseTime = EventTime\n    | extend Parser = extract_all(@\"^(\\w+)\\sfrom\\s([a-z0-9\\:]+)(?:\\s\\(([^\\)]+)\\)|)(?:\\svia\\s([^\\s\\:]+[^\\:\\s]))(?:\\sTransID\\s([^\\s\\:]+)?)?(?:\\suid\\s([\\S]+))?(?:\\:?\\snetwork\\s([^\\s\\:]+)?)?(:?\\:\\s(.*))?\", dynamic([1,2,3,4,5,6,7,8,9,10]), SyslogMessage)[0]\n    | extend Log_Type = tostring(Parser[0]),\n        SrcMacAddr = tostring(Parser[1]), \n        SrcHostName = tostring(Parser[2]), \n        SrcRouterAddress = tostring(Parser[3]), \n        DhcpSessionId = tostring(Parser[4]),\n        SrcUserIdType = tostring(Parser[5]), \n        Network = tostring(Parser[6]),\n        EventMessage = tostring(Parser[8])\n    | project-away SrcHostName,SrcRouterAddress,Parser;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject9')._parserId9,'/'))))]",
      "dependsOn": [
        "[variables('parserObject9')._parserId9]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpdiscover')]",
        "contentId": "[variables('parserObject9').parserContentId9]",
        "kind": "Parser",
        "version": "[variables('parserObject9').parserVersion9]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject10').parserTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpexpire Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject10').parserVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject10')._parserName10]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpexpire",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpexpire",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"DHCPEXPIRE\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1]),\n            RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpexpire = extract_all(@\"\\w+\\s(\\S+)\\s\\w+\\s(\\S+)\", dynamic([1,2]), RawData_subString)[0]\n    | extend SrcIpAddr = tostring(dhcpexpire[0]),  \n        DvcMacAddr = tostring(dhcpexpire[1])        \n    | project-away SyslogMessage, dhcpexpire, RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject10')._parserId10,'/'))))]",
              "dependsOn": [
                "[variables('parserObject10')._parserId10]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpexpire')]",
                "contentId": "[variables('parserObject10').parserContentId10]",
                "kind": "Parser",
                "version": "[variables('parserObject10').parserVersion10]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject10').parserContentId10]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpexpire",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject10').parserContentId10,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject10').parserContentId10,'-', '1.1.0')))]",
        "version": "[variables('parserObject10').parserVersion10]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject10')._parserName10]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpexpire",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpexpire",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"DHCPEXPIRE\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1]),\n            RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpexpire = extract_all(@\"\\w+\\s(\\S+)\\s\\w+\\s(\\S+)\", dynamic([1,2]), RawData_subString)[0]\n    | extend SrcIpAddr = tostring(dhcpexpire[0]),  \n        DvcMacAddr = tostring(dhcpexpire[1])        \n    | project-away SyslogMessage, dhcpexpire, RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject10')._parserId10,'/'))))]",
      "dependsOn": [
        "[variables('parserObject10')._parserId10]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpexpire')]",
        "contentId": "[variables('parserObject10').parserContentId10]",
        "kind": "Parser",
        "version": "[variables('parserObject10').parserVersion10]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject11').parserTemplateSpecName11]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpinform Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject11').parserVersion11]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject11')._parserName11]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpinform",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpinform",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"DHCPINFORM\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1]),\n            RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpinform = extract_all(@\"\\w+\\s(\\S+)\\svia\\s(\\S+)\\sTransID\\s([a-z0-9]+)\", dynamic([1,2,3]), RawData_subString)[0]\n    | extend SrcIpAddr = tostring(dhcpinform[0]), \n        Relay = tostring(dhcpinform[1]), \n        DhcpSessionId = tostring(dhcpinform[2])        \n    | project-away SyslogMessage, dhcpinform,RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject11')._parserId11,'/'))))]",
              "dependsOn": [
                "[variables('parserObject11')._parserId11]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpinform')]",
                "contentId": "[variables('parserObject11').parserContentId11]",
                "kind": "Parser",
                "version": "[variables('parserObject11').parserVersion11]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject11').parserContentId11]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpinform",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject11').parserContentId11,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject11').parserContentId11,'-', '1.1.0')))]",
        "version": "[variables('parserObject11').parserVersion11]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject11')._parserName11]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpinform",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpinform",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"DHCPINFORM\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1]),\n            RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpinform = extract_all(@\"\\w+\\s(\\S+)\\svia\\s(\\S+)\\sTransID\\s([a-z0-9]+)\", dynamic([1,2,3]), RawData_subString)[0]\n    | extend SrcIpAddr = tostring(dhcpinform[0]), \n        Relay = tostring(dhcpinform[1]), \n        DhcpSessionId = tostring(dhcpinform[2])        \n    | project-away SyslogMessage, dhcpinform,RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject11')._parserId11,'/'))))]",
      "dependsOn": [
        "[variables('parserObject11')._parserId11]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpinform')]",
        "contentId": "[variables('parserObject11').parserContentId11]",
        "kind": "Parser",
        "version": "[variables('parserObject11').parserVersion11]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject12').parserTemplateSpecName12]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpoffer Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject12').parserVersion12]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject12')._parserName12]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpoffer",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpoffer",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"DHCPOFFER\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1]),\n            RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpoffer = extract_all(@\"\\w+\\s(\\S+)(\\s\\w+\\s((\\S+)(\\s\\(\\S+\\))?))?\\svia\\s(\\S+)(\\srelay\\s(\\S+))?(\\slease-duration\\s(\\d+))?(\\soffered-duration\\s(\\d+))?(\\sUID\\s(\\S+))?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14]), RawData_subString)[0]\n    | extend SrcIpAddr = tostring(dhcpoffer[0]),  \n        SrcMacAddr = tostring(dhcpoffer[3]),\n        Interface = tostring(dhcpoffer[5]),\n        Relay = tostring(dhcpoffer[7]), \n        LeaseDuration = tostring(dhcpoffer[9]),\n        OfferedDuration = tostring(dhcpoffer[11]),\n        SrcHostname = tostring(dhcpoffer[4]),\n        SrcUserIdType = tostring(dhcpoffer[13])\n       | project-away SyslogMessage, dhcpoffer,RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject12')._parserId12,'/'))))]",
              "dependsOn": [
                "[variables('parserObject12')._parserId12]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpoffer')]",
                "contentId": "[variables('parserObject12').parserContentId12]",
                "kind": "Parser",
                "version": "[variables('parserObject12').parserVersion12]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject12').parserContentId12]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpoffer",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject12').parserContentId12,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject12').parserContentId12,'-', '1.1.0')))]",
        "version": "[variables('parserObject12').parserVersion12]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject12')._parserName12]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpoffer",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpoffer",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"DHCPOFFER\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1]),\n            RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpoffer = extract_all(@\"\\w+\\s(\\S+)(\\s\\w+\\s((\\S+)(\\s\\(\\S+\\))?))?\\svia\\s(\\S+)(\\srelay\\s(\\S+))?(\\slease-duration\\s(\\d+))?(\\soffered-duration\\s(\\d+))?(\\sUID\\s(\\S+))?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14]), RawData_subString)[0]\n    | extend SrcIpAddr = tostring(dhcpoffer[0]),  \n        SrcMacAddr = tostring(dhcpoffer[3]),\n        Interface = tostring(dhcpoffer[5]),\n        Relay = tostring(dhcpoffer[7]), \n        LeaseDuration = tostring(dhcpoffer[9]),\n        OfferedDuration = tostring(dhcpoffer[11]),\n        SrcHostname = tostring(dhcpoffer[4]),\n        SrcUserIdType = tostring(dhcpoffer[13])\n       | project-away SyslogMessage, dhcpoffer,RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject12')._parserId12,'/'))))]",
      "dependsOn": [
        "[variables('parserObject12')._parserId12]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpoffer')]",
        "contentId": "[variables('parserObject12').parserContentId12]",
        "kind": "Parser",
        "version": "[variables('parserObject12').parserVersion12]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject13').parserTemplateSpecName13]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpoption Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject13').parserVersion13]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject13')._parserName13]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpoption",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpoption",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"Option\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpoption = extract_all(@'(\\d+)\\:\\s\\w+\\s\\w+\\s([A-Z\\s]+)\\s\\w+\\sfrom\\s\\S+\\s(\\S+)\\s[\\w\\s\\-]+\\\"([a-z0-9:]+)\\\"\\,\\s[\\w\\s\\-]+\\\"([a-z0-9:]+)\\\"\\sfor\\s(\\S+)\\s\\((\\S+)\\)\\s([\\w\\s]+)\\.\\s\\((\\S+)\\)', dynamic([1,2,3,4,5,6,7,8,9]), RawData_subString)[0]\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpoption[0])),\n        Relay = tostring(dhcpoption[2]),  \n        PacketType = tostring(dhcpoption[1]),  \n        CircuitID = tostring(dhcpoption[3]),  \n        RemoteID = tostring(dhcpoption[4]),  \n        DvcIpAddr = tostring(dhcpoption[5]),  \n        DvcMacAddr = tostring(dhcpoption[6]),  \n        EventMessage = tostring(dhcpoption[7]),\n        State = tostring(dhcpoption[8])\n    | project-away SyslogMessage, dhcpoption,RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject13')._parserId13,'/'))))]",
              "dependsOn": [
                "[variables('parserObject13')._parserId13]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpoption')]",
                "contentId": "[variables('parserObject13').parserContentId13]",
                "kind": "Parser",
                "version": "[variables('parserObject13').parserVersion13]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject13').parserContentId13]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpoption",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject13').parserContentId13,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject13').parserContentId13,'-', '1.1.0')))]",
        "version": "[variables('parserObject13').parserVersion13]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject13')._parserName13]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpoption",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpoption",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"Option\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpoption = extract_all(@'(\\d+)\\:\\s\\w+\\s\\w+\\s([A-Z\\s]+)\\s\\w+\\sfrom\\s\\S+\\s(\\S+)\\s[\\w\\s\\-]+\\\"([a-z0-9:]+)\\\"\\,\\s[\\w\\s\\-]+\\\"([a-z0-9:]+)\\\"\\sfor\\s(\\S+)\\s\\((\\S+)\\)\\s([\\w\\s]+)\\.\\s\\((\\S+)\\)', dynamic([1,2,3,4,5,6,7,8,9]), RawData_subString)[0]\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpoption[0])),\n        Relay = tostring(dhcpoption[2]),  \n        PacketType = tostring(dhcpoption[1]),  \n        CircuitID = tostring(dhcpoption[3]),  \n        RemoteID = tostring(dhcpoption[4]),  \n        DvcIpAddr = tostring(dhcpoption[5]),  \n        DvcMacAddr = tostring(dhcpoption[6]),  \n        EventMessage = tostring(dhcpoption[7]),\n        State = tostring(dhcpoption[8])\n    | project-away SyslogMessage, dhcpoption,RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject13')._parserId13,'/'))))]",
      "dependsOn": [
        "[variables('parserObject13')._parserId13]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpoption')]",
        "contentId": "[variables('parserObject13').parserContentId13]",
        "kind": "Parser",
        "version": "[variables('parserObject13').parserVersion13]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject14').parserTemplateSpecName14]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpother Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject14').parserVersion14]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject14')._parserName14]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpother",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpother",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where not(SyslogMessage has_any (\"balanced\",\"balancing\",\"failover\"))\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1])\n    | project-away Parser;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject14')._parserId14,'/'))))]",
              "dependsOn": [
                "[variables('parserObject14')._parserId14]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpother')]",
                "contentId": "[variables('parserObject14').parserContentId14]",
                "kind": "Parser",
                "version": "[variables('parserObject14').parserVersion14]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject14').parserContentId14]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpother",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject14').parserContentId14,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject14').parserContentId14,'-', '1.1.0')))]",
        "version": "[variables('parserObject14').parserVersion14]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject14')._parserName14]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpother",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpother",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nSyslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where not(SyslogMessage has_any (\"balanced\",\"balancing\",\"failover\"))\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1])\n    | project-away Parser;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject14')._parserId14,'/'))))]",
      "dependsOn": [
        "[variables('parserObject14')._parserId14]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpother')]",
        "contentId": "[variables('parserObject14').parserContentId14]",
        "kind": "Parser",
        "version": "[variables('parserObject14').parserVersion14]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject15').parserTemplateSpecName15]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcprelease Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject15').parserVersion15]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject15')._parserName15]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcprelease",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcprelease",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n   | where CollectorHostName in (datasource) or Computer in (datasource)\n   | where SyslogMessage has \"DHCPRELEASE\"\n   | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n   | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1]),\n            RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n   | extend dhcprelease = extract_all(@\"of\\s(\\S+)\\sfrom\\s((\\S+)(\\s\\(\\S+\\))?)\\svia\\s(\\S+)(\\s\\((\\w+)\\))?(\\sTransID\\s([a-z0-9]+)\\s)?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12]), RawData_subString)[0]\n    | extend SrcIpAddr = tostring(dhcprelease[0]), \n        SrcMacAddr = tostring(dhcprelease[2]),\n        SrcHostname = extract(@'\\((\\S+)\\)',1,tostring(dhcprelease[3])),\n        Relay = tostring(dhcprelease[4]), \n        DhcpSessionId = tostring(dhcprelease[8]),\n        State = tostring(dhcprelease[6])       \n    | project-away SyslogMessage, dhcprelease,RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject15')._parserId15,'/'))))]",
              "dependsOn": [
                "[variables('parserObject15')._parserId15]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcprelease')]",
                "contentId": "[variables('parserObject15').parserContentId15]",
                "kind": "Parser",
                "version": "[variables('parserObject15').parserVersion15]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject15').parserContentId15]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcprelease",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject15').parserContentId15,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject15').parserContentId15,'-', '1.1.0')))]",
        "version": "[variables('parserObject15').parserVersion15]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject15')._parserName15]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcprelease",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcprelease",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n   | where CollectorHostName in (datasource) or Computer in (datasource)\n   | where SyslogMessage has \"DHCPRELEASE\"\n   | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n   | extend responseTime = todatetime(Parser[0]),\n            Log_Type = tostring(Parser[1]),\n            RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n   | extend dhcprelease = extract_all(@\"of\\s(\\S+)\\sfrom\\s((\\S+)(\\s\\(\\S+\\))?)\\svia\\s(\\S+)(\\s\\((\\w+)\\))?(\\sTransID\\s([a-z0-9]+)\\s)?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12]), RawData_subString)[0]\n    | extend SrcIpAddr = tostring(dhcprelease[0]), \n        SrcMacAddr = tostring(dhcprelease[2]),\n        SrcHostname = extract(@'\\((\\S+)\\)',1,tostring(dhcprelease[3])),\n        Relay = tostring(dhcprelease[4]), \n        DhcpSessionId = tostring(dhcprelease[8]),\n        State = tostring(dhcprelease[6])       \n    | project-away SyslogMessage, dhcprelease,RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject15')._parserId15,'/'))))]",
      "dependsOn": [
        "[variables('parserObject15')._parserId15]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcprelease')]",
        "contentId": "[variables('parserObject15').parserContentId15]",
        "kind": "Parser",
        "version": "[variables('parserObject15').parserVersion15]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject16').parserTemplateSpecName16]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpremoved Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject16').parserVersion16]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject16')._parserName16]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpremoved",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpremoved",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"Removed\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpremoved = extract_all(@\"([\\w\\s]+)(from|on)\\s(\\S+)(\\sto\\s(\\S+))?\", dynamic([1,2,3,4,5]), RawData_subString)[0]\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpremoved[0])),\n        SrcHostname = tostring(dhcpremoved[2]),  \n        DvcHostname = tostring(dhcpremoved[4])\n    | project-away SyslogMessage, dhcpremoved, RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject16')._parserId16,'/'))))]",
              "dependsOn": [
                "[variables('parserObject16')._parserId16]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpremoved')]",
                "contentId": "[variables('parserObject16').parserContentId16]",
                "kind": "Parser",
                "version": "[variables('parserObject16').parserVersion16]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject16').parserContentId16]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpremoved",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject16').parserContentId16,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject16').parserContentId16,'-', '1.1.0')))]",
        "version": "[variables('parserObject16').parserVersion16]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject16')._parserName16]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpremoved",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpremoved",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"Removed\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpremoved = extract_all(@\"([\\w\\s]+)(from|on)\\s(\\S+)(\\sto\\s(\\S+))?\", dynamic([1,2,3,4,5]), RawData_subString)[0]\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpremoved[0])),\n        SrcHostname = tostring(dhcpremoved[2]),  \n        DvcHostname = tostring(dhcpremoved[4])\n    | project-away SyslogMessage, dhcpremoved, RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject16')._parserId16,'/'))))]",
      "dependsOn": [
        "[variables('parserObject16')._parserId16]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpremoved')]",
        "contentId": "[variables('parserObject16').parserContentId16]",
        "kind": "Parser",
        "version": "[variables('parserObject16').parserVersion16]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject17').parserTemplateSpecName17]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcprequest Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject17').parserVersion17]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject17')._parserName17]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcprequest",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcprequest",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog \n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"DHCPREQUEST\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             Log_Type = tostring(Parser[1]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcprequest = extract_all(@\"for\\s((\\S+)(\\s\\(\\S+\\))?)\\sfrom\\s((\\S+)(\\s\\(\\S+\\))?)\\svia\\s(\\S+)(\\sTransID\\s([a-z0-9]+)\\s)?(uid\\s([a-z0-9:]+)|uid$|uid)?(\\s\\(([a-zA-Z]+)\\)$)?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12]), RawData_subString)[0]\n    | extend SrcIpAddr = tostring(dhcprequest[1]), \n        SrcMacAddr = tostring(dhcprequest[4]),\n        SrcHostname = extract(@\"\\((\\S+)\\)\",1,tostring(dhcprequest[5])),\n        Relay = tostring(dhcprequest[6]), \n        DhcpSessionId = tostring(dhcprequest[8]),\n        SrcUserIdType = tostring(dhcprequest[10]),\n        State = tostring(dhcprequest[11])        \n    | project-away SyslogMessage, dhcprequest,RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject17')._parserId17,'/'))))]",
              "dependsOn": [
                "[variables('parserObject17')._parserId17]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcprequest')]",
                "contentId": "[variables('parserObject17').parserContentId17]",
                "kind": "Parser",
                "version": "[variables('parserObject17').parserVersion17]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject17').parserContentId17]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcprequest",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject17').parserContentId17,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject17').parserContentId17,'-', '1.1.0')))]",
        "version": "[variables('parserObject17').parserVersion17]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject17')._parserName17]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcprequest",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcprequest",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog \n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"DHCPREQUEST\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             Log_Type = tostring(Parser[1]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcprequest = extract_all(@\"for\\s((\\S+)(\\s\\(\\S+\\))?)\\sfrom\\s((\\S+)(\\s\\(\\S+\\))?)\\svia\\s(\\S+)(\\sTransID\\s([a-z0-9]+)\\s)?(uid\\s([a-z0-9:]+)|uid$|uid)?(\\s\\(([a-zA-Z]+)\\)$)?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12]), RawData_subString)[0]\n    | extend SrcIpAddr = tostring(dhcprequest[1]), \n        SrcMacAddr = tostring(dhcprequest[4]),\n        SrcHostname = extract(@\"\\((\\S+)\\)\",1,tostring(dhcprequest[5])),\n        Relay = tostring(dhcprequest[6]), \n        DhcpSessionId = tostring(dhcprequest[8]),\n        SrcUserIdType = tostring(dhcprequest[10]),\n        State = tostring(dhcprequest[11])        \n    | project-away SyslogMessage, dhcprequest,RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject17')._parserId17,'/'))))]",
      "dependsOn": [
        "[variables('parserObject17')._parserId17]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcprequest')]",
        "contentId": "[variables('parserObject17').parserContentId17]",
        "kind": "Parser",
        "version": "[variables('parserObject17').parserVersion17]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject18').parserTemplateSpecName18]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpsession Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject18').parserVersion18]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject18')._parserName18]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dhcpsession",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dhcpsession",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"r-l-e\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             Log_Type = tostring(Parser[1]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpsession = extract_all(@\"\\:?([0-9.]+)\\,([a-zA-Z]+)\\,([a-zA-Z0-9-]+)\\,([a-z0-9:]+)\\,([0-9]+)\\,([0-9]+)\\,([0-9]+)?\\,([\\w$\\s]+)\\,([0-9.]+)\\,([0-9]+)\\,([0-9-.]+)\", dynamic([1,2,3,4,5,6,7,8,9,10,11]), RawData_subString)[0]\n    | extend DvcIpAddr = tostring(dhcpsession[0]),  \n        Signature = tostring(dhcpsession[1]),\n        SrcHostname = tostring(dhcpsession[2]),  \n        DvcMacAddr = tostring(dhcpsession[3]),\n        StartTime = tostring(dhcpsession[4]),  \n        EndTime = tostring(dhcpsession[5]),  \n        Network = tostring(dhcpsession[8]),\n        NetworkRange = tostring(dhcpsession[10])\n    | project-away SyslogMessage, dhcpsession,RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject18')._parserId18,'/'))))]",
              "dependsOn": [
                "[variables('parserObject18')._parserId18]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpsession')]",
                "contentId": "[variables('parserObject18').parserContentId18]",
                "kind": "Parser",
                "version": "[variables('parserObject18').parserVersion18]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject18').parserContentId18]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dhcpsession",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject18').parserContentId18,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject18').parserContentId18,'-', '1.1.0')))]",
        "version": "[variables('parserObject18').parserVersion18]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject18')._parserName18]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dhcpsession",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dhcpsession",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"r-l-e\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             Log_Type = tostring(Parser[1]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;\nRawData\n    | extend dhcpsession = extract_all(@\"\\:?([0-9.]+)\\,([a-zA-Z]+)\\,([a-zA-Z0-9-]+)\\,([a-z0-9:]+)\\,([0-9]+)\\,([0-9]+)\\,([0-9]+)?\\,([\\w$\\s]+)\\,([0-9.]+)\\,([0-9]+)\\,([0-9-.]+)\", dynamic([1,2,3,4,5,6,7,8,9,10,11]), RawData_subString)[0]\n    | extend DvcIpAddr = tostring(dhcpsession[0]),  \n        Signature = tostring(dhcpsession[1]),\n        SrcHostname = tostring(dhcpsession[2]),  \n        DvcMacAddr = tostring(dhcpsession[3]),\n        StartTime = tostring(dhcpsession[4]),  \n        EndTime = tostring(dhcpsession[5]),  \n        Network = tostring(dhcpsession[8]),\n        NetworkRange = tostring(dhcpsession[10])\n    | project-away SyslogMessage, dhcpsession,RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject18')._parserId18,'/'))))]",
      "dependsOn": [
        "[variables('parserObject18')._parserId18]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dhcpsession')]",
        "contentId": "[variables('parserObject18').parserContentId18]",
        "kind": "Parser",
        "version": "[variables('parserObject18').parserVersion18]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject19').parserTemplateSpecName19]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dns_consolidated Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject19').parserVersion19]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject19')._parserName19]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dns_consolidated",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dns_consolidated",
                "query": "union\nInfoblox_dnsclient,Infoblox_dnsgss,Infoblox_dnszone\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject19')._parserId19,'/'))))]",
              "dependsOn": [
                "[variables('parserObject19')._parserId19]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dns_consolidated')]",
                "contentId": "[variables('parserObject19').parserContentId19]",
                "kind": "Parser",
                "version": "[variables('parserObject19').parserVersion19]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject19').parserContentId19]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dns_consolidated",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject19').parserContentId19,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject19').parserContentId19,'-', '1.0.0')))]",
        "version": "[variables('parserObject19').parserVersion19]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject19')._parserName19]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dns_consolidated",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dns_consolidated",
        "query": "union\nInfoblox_dnsclient,Infoblox_dnsgss,Infoblox_dnszone\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject19')._parserId19,'/'))))]",
      "dependsOn": [
        "[variables('parserObject19')._parserId19]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dns_consolidated')]",
        "contentId": "[variables('parserObject19').parserContentId19]",
        "kind": "Parser",
        "version": "[variables('parserObject19').parserVersion19]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject20').parserTemplateSpecName20]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dnsclient Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject20').parserVersion20]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject20')._parserName20]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dnsclient",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dnsclient",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\n// Parse Response Logs\nlet response =\n    Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has_all (\"client\", \"query:\", \"response:\")\n    | parse SyslogMessage with *\n        \"client \" SrcIpAddr: string\n        \"#\" SrcPortNumber: string\n        \" \" NetworkProtocol: string\n        \": query: \" DnsQuery: string\n        \" \" DnsQueryClassName: string\n        \" \" DnsQueryType: string\n        \" response: \" DnsResponseCode: string\n        \" \" DnsFlags: string\n    | extend DnsResponseNameIndex= indexof(DnsFlags, \" \")\n    | extend EventMessage =iif(DnsResponseNameIndex != \"-1\", substring(DnsFlags, DnsResponseNameIndex+1), \"\")\n    | extend DnsFlags =iif(DnsResponseNameIndex != \"-1\", substring(DnsFlags, 0, DnsResponseNameIndex), DnsFlags)\n    | extend SrcPortNumber = iif(SrcPortNumber has ':',replace_string(SrcPortNumber,':',''),SrcPortNumber)\n    | extend SrcPortNumber = toint(SrcPortNumber)\n    | extend EventSubType = \"response\"\n    | project-away DnsResponseNameIndex,SyslogMessage;\n//\n// Parse Request Logs\n//\nlet request =\n    Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has_all (\"client\", \"query:\")\n        and SyslogMessage !has \"response:\"\n    | extend SyslogMessage = (split(SyslogMessage,\"client \"))[1]\n    | extend SyslogMessage = iif(SyslogMessage startswith \"@\", (substring(SyslogMessage, indexof(SyslogMessage, \" \")+1)), SyslogMessage)\n    | extend SyslogMessage = replace_string(SyslogMessage,\"\\\\ \",\"@@@\")\n    | parse SyslogMessage with \n        SrcIpAddr: string\n        \"#\" SrcPortNumber: int *\n        \"query: \" DnsQuery: string\n        \" \" DnsQueryClassName: string\n        \" \" DnsQueryType: string\n        \" \" DnsFlags: string\n    | extend DnsQuery = replace_string (DnsQuery, '@@@', ' ')\n    | extend DnsFlags= tostring((split(DnsFlags,\" \"))[0])\n    | extend EventSubType = \"request\",DnsResponseCode = \"NA\"\n    | project-away SyslogMessage\n    ;\n//\n// Union Request and Response Logs\n//\nlet Infoblox_NIOS_ParsedData =\n    union response, request\n    | extend\n        EventProduct=\"NIOS\",\n        EventVendor=\"Infoblox\",\n        EventType=\"Query\",\n        EventResult=iff(EventSubType==\"request\" or DnsResponseCode==\"NOERROR\",\"Success\",\"Failure\"),\n        Log_Type=\"client\",\n        responseTime=EventTime;\nInfoblox_NIOS_ParsedData\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject20')._parserId20,'/'))))]",
              "dependsOn": [
                "[variables('parserObject20')._parserId20]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dnsclient')]",
                "contentId": "[variables('parserObject20').parserContentId20]",
                "kind": "Parser",
                "version": "[variables('parserObject20').parserVersion20]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject20').parserContentId20]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dnsclient",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject20').parserContentId20,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject20').parserContentId20,'-', '1.1.0')))]",
        "version": "[variables('parserObject20').parserVersion20]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject20')._parserName20]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dnsclient",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dnsclient",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\n// Parse Response Logs\nlet response =\n    Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has_all (\"client\", \"query:\", \"response:\")\n    | parse SyslogMessage with *\n        \"client \" SrcIpAddr: string\n        \"#\" SrcPortNumber: string\n        \" \" NetworkProtocol: string\n        \": query: \" DnsQuery: string\n        \" \" DnsQueryClassName: string\n        \" \" DnsQueryType: string\n        \" response: \" DnsResponseCode: string\n        \" \" DnsFlags: string\n    | extend DnsResponseNameIndex= indexof(DnsFlags, \" \")\n    | extend EventMessage =iif(DnsResponseNameIndex != \"-1\", substring(DnsFlags, DnsResponseNameIndex+1), \"\")\n    | extend DnsFlags =iif(DnsResponseNameIndex != \"-1\", substring(DnsFlags, 0, DnsResponseNameIndex), DnsFlags)\n    | extend SrcPortNumber = iif(SrcPortNumber has ':',replace_string(SrcPortNumber,':',''),SrcPortNumber)\n    | extend SrcPortNumber = toint(SrcPortNumber)\n    | extend EventSubType = \"response\"\n    | project-away DnsResponseNameIndex,SyslogMessage;\n//\n// Parse Request Logs\n//\nlet request =\n    Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has_all (\"client\", \"query:\")\n        and SyslogMessage !has \"response:\"\n    | extend SyslogMessage = (split(SyslogMessage,\"client \"))[1]\n    | extend SyslogMessage = iif(SyslogMessage startswith \"@\", (substring(SyslogMessage, indexof(SyslogMessage, \" \")+1)), SyslogMessage)\n    | extend SyslogMessage = replace_string(SyslogMessage,\"\\\\ \",\"@@@\")\n    | parse SyslogMessage with \n        SrcIpAddr: string\n        \"#\" SrcPortNumber: int *\n        \"query: \" DnsQuery: string\n        \" \" DnsQueryClassName: string\n        \" \" DnsQueryType: string\n        \" \" DnsFlags: string\n    | extend DnsQuery = replace_string (DnsQuery, '@@@', ' ')\n    | extend DnsFlags= tostring((split(DnsFlags,\" \"))[0])\n    | extend EventSubType = \"request\",DnsResponseCode = \"NA\"\n    | project-away SyslogMessage\n    ;\n//\n// Union Request and Response Logs\n//\nlet Infoblox_NIOS_ParsedData =\n    union response, request\n    | extend\n        EventProduct=\"NIOS\",\n        EventVendor=\"Infoblox\",\n        EventType=\"Query\",\n        EventResult=iff(EventSubType==\"request\" or DnsResponseCode==\"NOERROR\",\"Success\",\"Failure\"),\n        Log_Type=\"client\",\n        responseTime=EventTime;\nInfoblox_NIOS_ParsedData\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject20')._parserId20,'/'))))]",
      "dependsOn": [
        "[variables('parserObject20')._parserId20]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dnsclient')]",
        "contentId": "[variables('parserObject20').parserContentId20]",
        "kind": "Parser",
        "version": "[variables('parserObject20').parserVersion20]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject21').parserTemplateSpecName21]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dnsgss Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject21').parserVersion21]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject21')._parserName21]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dnsgss",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dnsgss",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"gss_accept_sec_context\"\n     | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             Log_Type = tostring(Parser[1]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;  \nRawData\n    | extend dnsgss = extract_all(@\":\\s(.*)\", dynamic([1,2]), RawData_subString)[0]\n    | extend EventMessage = tostring(dnsgss[0])\n    | project-away dnsgss, SyslogMessage,RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject21')._parserId21,'/'))))]",
              "dependsOn": [
                "[variables('parserObject21')._parserId21]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dnsgss')]",
                "contentId": "[variables('parserObject21').parserContentId21]",
                "kind": "Parser",
                "version": "[variables('parserObject21').parserVersion21]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject21').parserContentId21]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dnsgss",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject21').parserContentId21,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject21').parserContentId21,'-', '1.1.0')))]",
        "version": "[variables('parserObject21').parserVersion21]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject21')._parserName21]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dnsgss",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dnsgss",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"gss_accept_sec_context\"\n     | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             Log_Type = tostring(Parser[1]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;  \nRawData\n    | extend dnsgss = extract_all(@\":\\s(.*)\", dynamic([1,2]), RawData_subString)[0]\n    | extend EventMessage = tostring(dnsgss[0])\n    | project-away dnsgss, SyslogMessage,RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject21')._parserId21,'/'))))]",
      "dependsOn": [
        "[variables('parserObject21')._parserId21]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dnsgss')]",
        "contentId": "[variables('parserObject21').parserContentId21]",
        "kind": "Parser",
        "version": "[variables('parserObject21').parserVersion21]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject22').parserTemplateSpecName22]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dnszone Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject22').parserVersion22]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject22')._parserName22]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Infoblox_dnszone",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Infoblox_dnszone",
                "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"zone\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             Log_Type = tostring(Parser[1]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;  \nRawData\n    | extend dnszone = extract_all(@\"([a-z0-9\\.\\-]+)\\/([A-Z]+)\\:(\\s[A-Z]+)?\\s(\\w+\\s\\w+)\\s(for\\s\\'(\\S+)?\\':)?((\\d+)\\.?)?(\\s(\\with\\s|(\\d+)\\sIN\\s)([A-Z]+)\\s)?(\\(?serial\\s(\\d+)\\)?)?(.*)\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]), RawData_subString)[0]\n    | extend Zone = tostring(dnszone[0]),\n        DvcAction = tostring(dnszone[3]),\n        SrcHostname = tostring(dnszone[5]),\n        TransactionIdHex = tostring(dnszone[7]),\n        Serial = tostring(dnszone[13]),\n        TTL = tostring(dnszone[10]),\n        DnsQueryType = tostring(dnszone[11])\n    | extend dnszone_substring = extract_all(@\"\\s?([a-zA-Z0-9\\.\\-\\_]+)\\.\\s(.*)\", dynamic([1,2]),tostring(dnszone[14]))[0]\n    | extend Src = tostring(dnszone_substring[0]),\n        EventMessage = tostring(dnszone_substring[1])\n    | project-away SyslogMessage, dnszone_substring, dnszone,RawData_subString;\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject22')._parserId22,'/'))))]",
              "dependsOn": [
                "[variables('parserObject22')._parserId22]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dnszone')]",
                "contentId": "[variables('parserObject22').parserContentId22]",
                "kind": "Parser",
                "version": "[variables('parserObject22').parserVersion22]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject22').parserContentId22]",
        "contentKind": "Parser",
        "displayName": "Parser for Infoblox_dnszone",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject22').parserContentId22,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject22').parserContentId22,'-', '1.1.0')))]",
        "version": "[variables('parserObject22').parserVersion22]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject22')._parserName22]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Infoblox_dnszone",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Infoblox_dnszone",
        "query": "let datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\nlet RawData = Syslog\n    | where CollectorHostName in (datasource) or Computer in (datasource)\n    | where SyslogMessage has \"zone\"\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\n    | extend responseTime = todatetime(Parser[0]),\n             Log_Type = tostring(Parser[1]),\n             RawData_subString = tostring(Parser[3])\n    | project-away Parser;  \nRawData\n    | extend dnszone = extract_all(@\"([a-z0-9\\.\\-]+)\\/([A-Z]+)\\:(\\s[A-Z]+)?\\s(\\w+\\s\\w+)\\s(for\\s\\'(\\S+)?\\':)?((\\d+)\\.?)?(\\s(\\with\\s|(\\d+)\\sIN\\s)([A-Z]+)\\s)?(\\(?serial\\s(\\d+)\\)?)?(.*)\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]), RawData_subString)[0]\n    | extend Zone = tostring(dnszone[0]),\n        DvcAction = tostring(dnszone[3]),\n        SrcHostname = tostring(dnszone[5]),\n        TransactionIdHex = tostring(dnszone[7]),\n        Serial = tostring(dnszone[13]),\n        TTL = tostring(dnszone[10]),\n        DnsQueryType = tostring(dnszone[11])\n    | extend dnszone_substring = extract_all(@\"\\s?([a-zA-Z0-9\\.\\-\\_]+)\\.\\s(.*)\", dynamic([1,2]),tostring(dnszone[14]))[0]\n    | extend Src = tostring(dnszone_substring[0]),\n        EventMessage = tostring(dnszone_substring[1])\n    | project-away SyslogMessage, dnszone_substring, dnszone,RawData_subString;\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject22')._parserId22,'/'))))]",
      "dependsOn": [
        "[variables('parserObject22')._parserId22]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Infoblox_dnszone')]",
        "contentId": "[variables('parserObject22').parserContentId22]",
        "kind": "Parser",
        "version": "[variables('parserObject22').parserVersion22]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ExcessiveNXDOMAINDNSQueries_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This creates an incident in the event a client generates excessive amounts of DNS queries for non-existent domains.",
                "displayName": "Excessive NXDOMAIN DNS Queries",
                "enabled": false,
                "query": "let threshold = 200;\nInfoblox_dnsclient\n| where isnotempty(DnsResponseCode)\n| where DnsResponseCode =~ \"NXDOMAIN\"\n| summarize count() by SrcIpAddr, bin(TimeGenerated,15m)\n| where count_ > threshold\n| join kind=inner (Infoblox_dnsclient\n    | where isnotempty(DnsResponseCode)\n    | where DnsResponseCode =~ \"NXDOMAIN\"\n    ) on SrcIpAddr\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "InfobloxNIOS",
                    "dataTypes": [
                      "Syslog"
                    ]
                  },
                  {
                    "connectorId": "SyslogAma",
                    "datatypes": [
                      "Syslog"
                    ]
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1568",
                  "T1008"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "SrcIpAddr",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Infoblox NIOS Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox NIOS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Excessive NXDOMAIN DNS Queries",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PotentialDHCPStarvationAttack_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This creates an incident in the event that an excessive amount of DHCPREQUEST have been recieved by a DHCP Server and could potentially be an indication of a DHCP Starvation Attack.",
                "displayName": "Potential DHCP Starvation Attack",
                "enabled": false,
                "query": "let threshold = 1000;\nInfoblox\n| where ProcessName =~ \"dhcpd\" and Log_Type =~ \"DHCPREQUEST\"\n| summarize count() by SrcIpAddr, bin(TimeGenerated,5m)\n| where count_ > threshold\n| join kind=inner (Infoblox\n    | where ProcessName =~ \"dhcpd\" and Log_Type =~ \"DHCPREQUEST\"\n    ) on SrcIpAddr\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "InfobloxNIOS",
                    "dataTypes": [
                      "Syslog"
                    ]
                  },
                  {
                    "connectorId": "SyslogAma",
                    "datatypes": [
                      "Syslog"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1200"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "SrcIpAddr",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
              "properties": {
                "description": "Infoblox NIOS Analytics Rule 2",
                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox NIOS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
        "contentKind": "AnalyticsRule",
        "displayName": "Potential DHCP Starvation Attack",
        "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist1-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "kind": "",
      "properties": {
        "displayName": "Sources_by_SourceType",
        "source": "Sources_by_SourceType.csv",
        "description": "The watchlist is used by parsers to specify Sources and their types.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "SourceType",
        "rawContent": "SourceType,Source\r\nContosoDns,contoso_machine1"
      },
      "apiVersion": "2021-04-01"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.3",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Infoblox NIOS",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Infoblox%20NIOS/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://www.infoblox.com/glossary/network-identity-operating-system-nios/\">Infoblox Network Identity Operating System (NIOS)</a> solution for Microsoft Sentinel enables you to easily connect your Infoblox NIOS logs with Microsoft Sentinel, to view dashboards, create custom alerts, and improve investigation. This gives you more insight into your organization's network and improves your security operation capabilities.</p>\n<p>This solution is dependent on the Syslog solution containing the Syslog via AMA connector to collect the logs. The Syslog solution will be installed as part of this solution installation.</p>\n<p><strong>NOTE</strong>: Microsoft recommends installation of Syslog via AMA Connector. Legacy connector uses the Log Analytics agent which is about to be deprecated by <strong>Aug 31, 2024</strong>. Using MMA and AMA on same machine can cause log duplication and extra ingestion cost <a href=\"https://learn.microsoft.com/en-us/azure/sentinel/ama-migrate\">more details</a>.</p>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 22, <strong>Workbooks:</strong> 1, <strong>Analytic Rules:</strong> 2, <strong>Watchlists:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/infoblox_logo.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject3').parserContentId3]",
              "version": "[variables('parserObject3').parserVersion3]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject4').parserContentId4]",
              "version": "[variables('parserObject4').parserVersion4]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject5').parserContentId5]",
              "version": "[variables('parserObject5').parserVersion5]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject6').parserContentId6]",
              "version": "[variables('parserObject6').parserVersion6]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject7').parserContentId7]",
              "version": "[variables('parserObject7').parserVersion7]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject8').parserContentId8]",
              "version": "[variables('parserObject8').parserVersion8]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject9').parserContentId9]",
              "version": "[variables('parserObject9').parserVersion9]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject10').parserContentId10]",
              "version": "[variables('parserObject10').parserVersion10]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject11').parserContentId11]",
              "version": "[variables('parserObject11').parserVersion11]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject12').parserContentId12]",
              "version": "[variables('parserObject12').parserVersion12]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject13').parserContentId13]",
              "version": "[variables('parserObject13').parserVersion13]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject14').parserContentId14]",
              "version": "[variables('parserObject14').parserVersion14]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject15').parserContentId15]",
              "version": "[variables('parserObject15').parserVersion15]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject16').parserContentId16]",
              "version": "[variables('parserObject16').parserVersion16]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject17').parserContentId17]",
              "version": "[variables('parserObject17').parserVersion17]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject18').parserContentId18]",
              "version": "[variables('parserObject18').parserVersion18]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject19').parserContentId19]",
              "version": "[variables('parserObject19').parserVersion19]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject20').parserContentId20]",
              "version": "[variables('parserObject20').parserVersion20]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject21').parserContentId21]",
              "version": "[variables('parserObject21').parserVersion21]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject22').parserContentId22]",
              "version": "[variables('parserObject22').parserVersion22]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_Sources_by_SourceType')]",
              "version": "3.0.3"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-syslog"
            }
          ]
        },
        "firstPublishDate": "2022-04-01",
        "providers": [
          "Infoblox"
        ],
        "categories": {
          "domains": [
            "Networking",
            "Security - Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
