{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Workspace": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Enter name of a workspace where you are going to receive your security incidents from Cohesity DataHawk. If this workspace doesn't exist yet, please create it at https://portal.azure.com/#view/HubsExtension/BrowseResource/resourceType/microsoft.securityinsightsarg%2Fsentinel before continuing your deployment"
            }
        },
        "StartDaysAgo": {
            "defaultValue": "-30",
            "type": "String",
            "metadata": {
                "description": "How many days of historical data about security incidents would you like after you deploy it? For ex, -30 means that your Incidents table will be populated with all security incidents that happend between 30 days ago and now. 0 would mean that your Incidents table will be empty until you receive a new incident. To make sure that everything works as expected we recommend to populate it with some historical incidents"
            }
        },
        "ApiKey": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Enter your Cohesity DataHawk API key. To get your API key go to the Cohesity DataHawk login page. Enter your credentials and select Log In. Then navigate to Settings > Access Management and  select Add API Key. Enter a name for the API key and select Save. The API Key Token is displayed. Copy and paste it here."
            }
        },
        "ClientId": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Enter your ClientId (ApplicationId). In order to get access to Azure resources, you need to register a client application in Azure Active Directory at https://portal.azure.com/#view/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/~/RegisteredApps (see steps at https://learn.microsoft.com/en-us/azure/healthcare-apis/register-application), add Azure Storage (user_impersonation) permission and assign the 'Microsoft Sentinel Responder' role to the registered app in the appropriate subscription. Then copy ClientId from this app and paste it here"
            }
        },
        "ClientKey": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Enter your Client Secret Value. In order to get access to Azure resources, you need to register a client application in Azure Active Directory at https://portal.azure.com/#view/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/~/RegisteredApps (see steps at https://learn.microsoft.com/en-us/azure/healthcare-apis/register-application), add AzureStorage (user_impersonation) permission and assign the 'Microsoft Sentinel Responder' role to the registered app in the appropriate subscription. Then copy the Client Secret value from the Certificates & Secrets pane of the app and paste it here"
            }
        },
        "AppInsightsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Migrate Classic Application Insights to Log Analytic Workspace which is retiring by 29 Febraury 2024. Use 'Log Analytic Workspace-->Properties' blade having 'Resource ID' property value. This is a fully qualified resourceId which is in format '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}'"
            }
        }
    },
    "variables": {
        "hostingPlanName": "windows-host",
        "applicationInsightsName": "Cohesity Insights",
        "ProducerFunctionName": "[concat('cohesitypro', uniqueString(resourceGroup().id))]",
        "ConsumerFunctionName": "[concat('cohesitycon', uniqueString(resourceGroup().id))]",
        "ApiKeyName": "ApiKey",
        "StorageSuffix": "[environment().suffixes.storage]",
        "QueueName": "cohesity-incidents",
        "BlobName": "cohesity-extra-parameters"
    },
    "resources": [{
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('ProducerFunctionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('ProducerFunctionName')]",
                "WorkspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]"
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('ConsumerFunctionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('ConsumerFunctionName')]",
                "WorkspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y"
            },
            "properties": {
                "computeMode": "Dynamic"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[variables('ProducerFunctionName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('ProducerFunctionName'))]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [{
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('ProducerFunctionName')),'2019-08-01', 'full').identity.principalId]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List"
                            ],
                            "certificates": []
                        }
                    },
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('ConsumerFunctionName')),'2019-08-01', 'full').identity.principalId]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List"
                            ],
                            "certificates": []
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(variables('ProducerFunctionName'), '/', variables('ApiKeyName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('ProducerFunctionName'))]"
            ],
            "properties": {
                "value": "[parameters('ApiKey')]",
                "contentType": "string",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(variables('ProducerFunctionName'), '/', 'ClientId')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('ProducerFunctionName'))]"
            ],
            "properties": {
                "value": "[parameters('ClientId')]",
                "contentType": "string",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(variables('ProducerFunctionName'), '/', 'ClientKey')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('ProducerFunctionName'))]"
            ],
            "properties": {
                "value": "[parameters('ClientKey')]",
                "contentType": "string",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[tolower(variables('ProducerFunctionName'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('ProducerFunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('ProducerFunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2022-05-01",
            "name": "[concat(variables('ProducerFunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('ProducerFunctionName')))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('ProducerFunctionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('ProducerFunctionName')))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "name": "[variables('ProducerFunctionName')]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "alwaysOn": true,
                "reserved": true
            },
            "resources": [{
                "type": "config",
                "apiVersion": "2018-11-01",
                "name": "appsettings",
                "dependsOn": [
                    "[concat('Microsoft.Web/sites/', variables('ProducerFunctionName'))]"
                ],
                "properties": {
                    "FUNCTIONS_EXTENSION_VERSION": "~4",
                    "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                    "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('ProducerFunctionName')), '2015-05-01').InstrumentationKey]",
                    "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('ProducerFunctionName')), '2015-05-01').ConnectionString]",
                    "CohesityQueueName": "[variables('QueueName')]",
                    "keyVaultName": "[variables('ProducerFunctionName')]",
                    "Workspace": "[parameters('Workspace')]",
                    "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('ProducerFunctionName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('ProducerFunctionName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                    "startDaysAgo": "[parameters('StartDaysAgo')]",
                    "periodicFetchHoursAgo": "-24",
                    "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/sentinel-Cohesity-functionapp-IncidentProducer"
                }
            }]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('ConsumerFunctionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('ProducerFunctionName')))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "name": "[variables('ConsumerFunctionName')]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "alwaysOn": true,
                "reserved": true
            },
            "resources": [{
                "type": "config",
                "apiVersion": "2018-11-01",
                "name": "appsettings",
                "dependsOn": [
                    "[concat('Microsoft.Web/sites/', variables('ConsumerFunctionName'))]"
                ],
                "properties": {
                    "FUNCTIONS_EXTENSION_VERSION": "~4",
                    "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                    "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('ConsumerFunctionName')), '2015-05-01').InstrumentationKey]",
                    "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('ConsumerFunctionName')), '2015-05-01').ConnectionString]",
                    "CohesityQueueName": "[variables('QueueName')]",
                    "keyVaultName": "[variables('ProducerFunctionName')]",
                    "resourceGroup": "[resourceGroup().Name]",
                    "subscription": "[subscription().subscriptionId]",
                    "TenantId": "[subscription().tenantId]",
                    "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('ProducerFunctionName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('ProducerFunctionName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                    "Workspace": "[parameters('Workspace')]",
                    "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/sentinel-Cohesity-functionapp-IncidentConsumer"
                }
            }]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('ProducerFunctionName'), '/default/', variables('BlobName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('ProducerFunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('ProducerFunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('ProducerFunctionName'), '/default/', variables('QueueName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', variables('ProducerFunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('ProducerFunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        }
    ]
}
