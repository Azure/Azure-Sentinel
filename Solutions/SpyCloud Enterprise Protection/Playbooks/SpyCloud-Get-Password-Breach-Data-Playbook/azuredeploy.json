{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
     "metadata": {
        "title": "Password Breach Data - SpyCloud Enterprise", 
        "description": "The SpyCloud Enterprise API is able to provide breach data for a provided password.",
        "prerequisites": "SpyCloud Enterprise API Key.",       
        "lastUpdateTime": "2022-09-05T00:00:00.000Z", 
        "postDeploymentSteps": ["None"],
        "tags": ["Enrichment"], 
        "support": {
            "tier": "community" 
        },
        "author": {
            "name": "SpyCloud Integrations"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "SpyCloud-Get-Password-Breach-Data-Playbook",
            "type": "string",
            "metadata": {
                "description": "Name of the Logic App/Playbook"
            }
        },
        "SpyCloudConnectorName":{
            "defaultValue": "SpyCloud-Enterprise-Protection",
            "type": "String",
            "metadata": {
                "description": "SpyCloud Enterprise custom connector name"
            }
        }
    },
    "variables": {
		"SpyCloudEnterpriseConnectionName": "[concat('spycloudconnector-', parameters('PlaybookName'))]"
	},
    "resources": [
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('SpyCloudEnterpriseConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"displayName": "[variables('SpyCloudEnterpriseConnectionName')]",
				"customParameterValues": {},
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('SpyCloudConnectorName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
			"identity": {
				"type": "SystemAssigned"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/connections', variables('SpyCloudEnterpriseConnectionName'))]"
			],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "GET"
                            }
                        }
                    },
                    "actions": {
                        "Check_if_records_exists": {
                            "actions": {
                                "Create_HTML_table": {
                                    "runAfter": {
                                        "For_each_response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "format": "HTML",
                                        "from": "@variables('password_breach_data_array')"
                                    }
                                },
                                "For_each_response": {
                                    "foreach": "@body('Get_Breach_Data_by_Password_Search')?['results']",
                                    "actions": {
                                        "Append_to_array_variable": {
                                            "runAfter": {
                                                "Compose": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "password_breach_data_array",
                                                "value": "@outputs('Compose')"
                                            }
                                        },
                                        "Check_if_ip_address_exists": {
                                            "actions": {
                                                "For_each_ip": {
                                                    "foreach": "@items('For_each_response')?['ip_addresses']",
                                                    "actions": {
                                                        "Append_to_ip_address_variable": {
                                                            "runAfter": {},
                                                            "type": "AppendToStringVariable",
                                                            "inputs": {
                                                                "name": "ip_address",
                                                                "value": "@{items('For_each_ip')},"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "type": "Foreach"
                                                }
                                            },
                                            "runAfter": {
                                                "Set_ip_address_to_empty": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@items('For_each_response')?['ip_addresses']",
                                                                "@null"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Compose": {
                                            "runAfter": {
                                                "Check_if_ip_address_exists": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": {
                                                "Document Id": "@items('For_each_response')?['document_id']",
                                                "Domain": "@items('For_each_response')?['domain']",
                                                "Email": "@items('For_each_response')?['email']",
                                                "IP Addresses": "@substring(variables('ip_address'), 0, sub(length(variables('ip_address')), 1))",
                                                "Infected Machine Id": "@items('For_each_response')?['infected_machine_id']",
                                                "Infected Path": "@items('For_each_response')?['infected_path']",
                                                "Infected Time": "@items('For_each_response')?['infected_time']",
                                                "Password": "@items('For_each_response')?['password']",
                                                "Password Plaintext": "@items('For_each_response')?['password_plaintext']",
                                                "Severity": "@items('For_each_response')?['severity']",
                                                "Source Id": "@items('For_each_response')?['source_id']",
                                                "Spycloud Publish Date": "@items('For_each_response')?['spycloud_publish_date']",
                                                "Target Domain": "@items('For_each_response')?['target_domain']",
                                                "Target Subdomain": "@items('For_each_response')?['target_subdomain']",
                                                "Target Url": "@items('For_each_response')?['target_url']",
                                                "User Hostname": "@items('For_each_response')?['user_hostname']",
                                                "User OS": "@items('For_each_response')?['user_os']",
                                                "Username": "@items('For_each_response')?['username']"
                                            }
                                        },
                                        "Set_ip_address_to_empty": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "ip_address",
                                                "value": " "
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_array_to_Empty": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Set_array_to_Empty": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "password_breach_data_array",
                                        "value": []
                                    }
                                }
                            },
                            "runAfter": {
                                "set_total_records": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@variables('total_records')",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Get_Breach_Data_by_Password_Search": {
                            "runAfter": {
                                "Provide_Password_to_search": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['SpyCloud-Enterprise-Connector']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/breach/data/passwords/@{encodeURIComponent(variables('password_to_search'))}"
                            }
                        },
                        "Outputs_Variable": {
                            "runAfter": {
                                "more_records_desplay_text": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "password_breach_data_array",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Provide_Password_to_search": {
                            "runAfter": {
                                "ip_address": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "password_to_search",
                                        "type": "string",
                                        "value": "welcome@123"
                                    }
                                ]
                            }
                        },
                        "ip_address": {
                            "runAfter": {
                                "Outputs_Variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ip_address",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "minimum_records": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "min_records",
                                        "type": "integer",
                                        "value": 15
                                    }
                                ]
                            }
                        },
                        "more_records_desplay_text": {
                            "runAfter": {
                                "total_records": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "more_records_display_text",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "set_total_records": {
                            "runAfter": {
                                "Get_Breach_Data_by_Password_Search": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "total_records",
                                "value": "@body('Get_Breach_Data_by_Password_Search')?['hits']"
                            }
                        },
                        "total_records": {
                            "runAfter": {
                                "minimum_records": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "total_records",
                                        "type": "integer"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "SpyCloud-Enterprise-Connector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('SpyCloudEnterpriseConnectionName'))]",
                                "connectionName": "[variables('SpyCloudEnterpriseConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('SpyCloudConnectorName'))]"
                            }
                        }
                    }
                }
            }
        }
    ]
}