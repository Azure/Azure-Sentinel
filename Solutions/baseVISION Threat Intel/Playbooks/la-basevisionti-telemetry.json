{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "1793580885286887718"
    },
    "title": "baseVISION Threat Intel - Telemetry",
    "description": "This playbook is triggered every four hours and sends basic telemetry to baseVISION to improve the feeds. The telemetry data only contains IOC's provided by baseVISION together with the analysts classification of incidents associated with it.",
    "mainSteps": [
      "1. Collect Telemetry",
      "2. Send data to baseVISION"
    ],
    "prerequisites": [
      "baseVISION TI Feed in TAXII connector configured"
    ],
    "lastUpdateTime": "2025-02-17T00:00:00.000Z",
    "entities": [],
    "tags": [],
    "support": {
      "tier": "community"
    },
    "author": {
      "name": "Thomas Kurth"
    }
  },
  "parameters": {
    "PlaybookName": {
      "type": "string",
      "defaultValue": "la-basevisionti-telemetry",
      "metadata": {
        "description": "Name of the playbook (Logic Apps resource) which will be created"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "laName": "[parameters('PlaybookName')]",
    "azureSentinelConnectionName": "[format('{0}-azmon-connection', parameters('PlaybookName'))]",
    "uamiName": "[format('{0}-uami', parameters('PlaybookName'))]",
    "roleDefinitionSentinelReaderId": "8d289c81-5878-46d4-8554-54e1e3d8b5cb"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('uamiName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('azureSentinelConnectionName')]",
      "location": "[parameters('location')]",
      "tags": {},
      "properties": {
        "displayName": "[variables('azureSentinelConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azuremonitorlogs', subscription().subscriptionId, parameters('location'))]"
        },
        "parameterValueSet": {
          "name": "managedIdentityAuth",
          "values": {}
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('laName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')))]": {}
        }
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "TaxiiFeedName": {
              "defaultValue": "baseVISION-SOC-TI-Feed",
              "type": "String"
            },
            "SubscriptionId": {
              "defaultValue": "bdefc725-6a12-4979-979c-bf039261f5de",
              "type": "String"
            },
            "ResourceGroupName": {
              "defaultValue": "rg-Sentinel",
              "type": "String"
            },
            "SentinelName": {
              "defaultValue": "log-Sentinel",
              "type": "String"
            },
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Sliding_Window": {
              "recurrence": {
                "interval": 4,
                "frequency": "Hour"
              },
              "evaluatedRecurrence": {
                "interval": 4,
                "frequency": "Hour"
              },
              "type": "SlidingWindow"
            }
          },
          "actions": {
            "Get_Telemetry_Data": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "query": "let tiObservables = ThreatIntelligenceIndicator\n    | where TimeGenerated < now()\n    | where SourceSystem == \"@{parameters('TaxiiFeedName')}\"\n    | project\n        IndicatorId,\n        ThreatType,\n        Description,\n        Active,\n        IndicatorTime = TimeGenerated,\n        Indicator = strcat(NetworkSourceIP, NetworkIP, NetworkDestinationIP, Url, FileHashValue, EmailSourceIpAddress, EmailSenderAddress, DomainName),\n        SourceSystem;\nlet alertEntity = SecurityAlert\n    | where TimeGenerated > ago(1d)\n    | project parse_json(Entities), SystemAlertId, AlertTime = TimeGenerated\n    | mvexpand(Entities)\n    | extend entity = iif(isnotempty(Entities.Address), Entities.Address, iif(isnotempty(Entities.HostName), strcat(Entities.HostName, \" .\", Entities.DnsDomain), iif(isnotempty(Entities.Url), Entities.Url, iif(isnotempty(Entities.Value), Entities.Value, iif(Entities.Type == \" account\", strcat(Entities.Name, \" @\", Entities.UPNSuffix), \" \")))))\n    | where isnotempty(entity)\n    | project entity, SystemAlertId, AlertTime;\nlet IncidentAlerts = SecurityIncident\n    | project\n        IncidentTime = TimeGenerated,\n        IncidentNumber,\n        Title,\n        parse_json(AlertIds),\n        Classification = iif(isempty(Classification), \"Unclassified\", Classification)\n    | mv-expand AlertIds\n    | project IncidentTime, IncidentNumber, Title, tostring(AlertIds), Classification;\nlet AlertsWithTiObservables = alertEntity\n    | join kind=inner tiObservables on $left.entity == $right.Indicator;\nlet IncidentsWithAlertsWithTiObservables = AlertsWithTiObservables\n    | join kind=inner IncidentAlerts on $left.SystemAlertId == $right.AlertIds;\nIncidentsWithAlertsWithTiObservables\n| where Indicator contains '' or Indicator == \" *\"\n| summarize Incidents=dcount(IncidentNumber), Alerts=dcount(SystemAlertId) by Indicator, ThreatType, Source = SourceSystem, Description, Classification,Version=1\n",
                  "timerangetype": "Exact",
                  "timerange": {
                    "exactTimeRangeFrom": "@triggerOutputs()['windowStartTime']",
                    "exactTimeRangeTo": "@triggerOutputs()['windowEndTime']"
                  }
                },
                "path": "/queryDataV2",
                "queries": {
                  "subscriptions": "@parameters('SubscriptionId')",
                  "resourcegroups": "@parameters('ResourceGroupName')",
                  "resourcetype": "Log Analytics Workspace",
                  "resourcename": "@parameters('SentinelName')"
                }
              }
            },
            "Send_Telemetry_to_baseVISION": {
              "runAfter": {
                "Get_Telemetry_Data": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "uri": "https://prod-107.westeurope.logic.azure.com:443/workflows/e2cf31f981fe4d70aca7c7ab82f75db6/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=5QMAcbt2_hls1-u14qMLWLv7SyjL0oWd8B0cqUnbQGA",
                "method": "POST",
                "body": "@body('Get_Telemetry_Data')?['value']"
              },
              "runtimeConfiguration": {
                "contentTransfer": {
                  "transferMode": "Chunked"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuremonitorlogs": {
                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azuremonitorlogs', subscription().subscriptionId, parameters('location'))]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureSentinelConnectionName'))]",
                "connectionName": "azuremonitorlogs",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity",
                    "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
                  }
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('azureSentinelConnectionName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.Logic/workflows', variables('laName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionSentinelReaderId')))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionSentinelReaderId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')), '2018-11-30').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('laName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
      ]
    }
  ]
}