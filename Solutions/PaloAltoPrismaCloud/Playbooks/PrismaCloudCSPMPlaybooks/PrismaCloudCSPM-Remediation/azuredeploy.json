{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Remediate assets on prisma cloud",
        "description": "This playbook provides/updates the compliance security posture details of asset in comments section of triggered incident so that SOC analysts can directly take corrective measure to prevent the attack",
        "prerequisites": [
            "1. PrismaCloudCSPM Custom Connector needs to be deployed prior to the deployment of this playbook under the same subscription.",
            "2. API Key and User ID . To get this, login into your Prisma cloud instance dashboard and navigate to Settings --> Access Control --> Access Keys --> Add",
            "3. TeamsID and channelID of your tenant is needed for posting messages on Microsoft teams",
            "4. [Important step]Store the API secret key in Key vault then provide the keyvault name and key name of the stored secret during deployment"
        ],
        "postDeployment": [
            "1. During deployment you need to provide your Key vault name ,TeamsID , channelID , User ID and API key name of stored secret key."
        ],
        "prerequisitesDeployTemplateFile": "../../CustomConnector/PrismaCloudCSPMCustomConnector/azuredeploy.json",
        "lastUpdateTime": "2023-02-03T00:00:00.000Z",
        "entities": [ "host" ],
        "tags": [ "Remediation", "Notification", "CSPM", "PrismaCloud", "Compliance", "Posture", "Policy" ],
        "support": {
            "tier": "Microsoft",
            "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author": {
            "name": "Microsoft"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "PrismaCloudCSPM-Remediation",
            "type": "string"
        },
        "Keyvault name": {
            "type": "String",
            "metadata": {
                "description": "Enter the key vault name where secret key is stored"
            }
        },
        "PrismaSecretName": {
            "type": "string",
            "metadata": {
                "description": "Enter value for Prisma Secret Key Name"
            }
        },
        "PrismaUserID": {
            "type": "string",
            "metadata": {
                "description": "Enter value for Prisma User ID"
            }
        },
        "TeamsID": {
            "type": "string",
            "metadata": {
                "description": "Enter value for TeamsID"
            }
        },
        "ChannelID": {
            "type": "string",
            "metadata": {
                "description": "Enter value for Teams ChannelID"
            }
        },
        "CustomConnectorName": {
            "defaultValue": "PrismaCloudCSPMCustomConnector",
            "type": "string",
            "metadata": {
                "description": "Name of the custom connector, if you want to change the default name, make sure to use the same in all Prisma Cloud automation playbooks as well"
            }
        }
    },
    "variables": {
        "PrismacloudcspmcustomconnectorConnectionName": "[concat('Prismacloudcspmcustomconnector-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]",
        "TeamsConnectionName": "[concat('Teams-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "ChannelID": {
                            "defaultValue": "[parameters('ChannelID')]",
                            "type": "string"
                        },
                        "PrismaSecretName": {
                            "defaultValue": "[parameters('PrismaSecretName')]",
                            "type": "string"
                        },
                        "PrismaUserID": {
                            "defaultValue": "[parameters('PrismaUserID')]",
                            "type": "string"
                        },
                        "TeamsID": {
                            "defaultValue": "[parameters('TeamsID')]",
                            "type": "string"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Condition_-_check_if_any_entity_is_collected": {
                            "actions": {
                                "Add_comment_to_incident_(V3)_2": {
                                    "runAfter": {
                                        "Create_HTML_table": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>Remediable Alert Summary:<br>\n<br>\n@{body('Create_HTML_table')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Create_HTML_table": {
                                    "runAfter": {
                                        "For_each_2_-_fetching_response_from_teams_channel_and_taking_action": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "format": "HTML",
                                        "from": "@variables('Collect_response')"
                                    }
                                },
                                "For_each_-_valid_alert_list": {
                                    "foreach": "@variables('collect_entities')",
                                    "actions": {
                                        "For_each": {
                                            "foreach": "@body('Parse_JSON_-_list_alerts_response')",
                                            "actions": {
                                                "Condition": {
                                                    "actions": {
                                                        "Append_to_array_variable_-_collect_alerts_info_with_remediation_command": {
                                                            "runAfter": {
                                                                "Parse_JSON_-_List_remediation_command_response": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "AppendToArrayVariable",
                                                            "inputs": {
                                                                "name": "collected_alerts",
                                                                "value": {
                                                                    "Account": "@items('For_each')?['resource']?['account']",
                                                                    "Alert id": "@items('For_each')['id']",
                                                                    "Policy Name": "@items('For_each')?['policy']?['name']",
                                                                    "Resource Name": "@items('For_each')?['resource']?['name']",
                                                                    "Script Impact": "@{body('Parse_JSON_-_List_remediation_command_response')?['scriptImpact']} ",
                                                                    "alertIdVsCliScript": "@replace(string(body('Parse_JSON_-_List_remediation_command_response')?['alertIdVsCliScript']),'\"','')",
                                                                    "cli Description": "@body('Parse_JSON_-_List_remediation_command_response')?['cliDescription']"
                                                                }
                                                            }
                                                        },
                                                        "Parse_JSON_-_List_remediation_command_response": {
                                                            "runAfter": {},
                                                            "type": "ParseJson",
                                                            "inputs": {
                                                                "content": "@body('List_Remediation_command')",
                                                                "schema": {
                                                                    "properties": {
                                                                        "alertIdVsCliScript": {
                                                                            "properties": {},
                                                                            "type": "object"
                                                                        },
                                                                        "cliDescription": {
                                                                            "type": "string"
                                                                        },
                                                                        "scriptImpact": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "List_Remediation_command": [
                                                            "Succeeded",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Append_to_array_variable_2_-_collect_alerts_info_with_remediation_command": {
                                                                "runAfter": {
                                                                    "Parse_JSON_2_-_List_Remediation_command_response": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "AppendToArrayVariable",
                                                                "inputs": {
                                                                    "name": "collected_alerts",
                                                                    "value": {
                                                                        "Account": "@items('For_each')?['resource']?['account']",
                                                                        "Alert id": "@items('For_each')['id']",
                                                                        "Policy Name": "@items('For_each')?['policy']?['name']",
                                                                        "Resource Name": "@items('For_each')?['resource']?['name']",
                                                                        "Script Impact": "@{body('Parse_JSON_2_-_List_Remediation_command_response')?['scriptImpact']} ",
                                                                        "alertIdVsCliScript": "@replace(string(body('Parse_JSON_2_-_List_Remediation_command_response')?['alertIdVsCliScript']),'\"','')",
                                                                        "cli Description": "@body('Parse_JSON_2_-_List_Remediation_command_response')?['cliDescription']"
                                                                    }
                                                                }
                                                            },
                                                            "Parse_JSON_2_-_List_Remediation_command_response": {
                                                                "runAfter": {},
                                                                "type": "ParseJson",
                                                                "inputs": {
                                                                    "content": "@body('List_Remediation_command')",
                                                                    "schema": {
                                                                        "properties": {
                                                                            "alertIdVsCliScript": {
                                                                                "properties": {},
                                                                                "type": "object"
                                                                            },
                                                                            "cliDescription": {
                                                                                "type": "string"
                                                                            },
                                                                            "scriptImpact": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@actions('List_Remediation_command').outputs.statusCode",
                                                                    200
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "List_Remediation_command": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "alerts": [
                                                                "@items('For_each')['id']"
                                                            ],
                                                            "filter": {
                                                                "timeRange": {
                                                                    "relativeTimeType": "BACKWARD",
                                                                    "type": "to_now",
                                                                    "value": "epoch"
                                                                }
                                                            }
                                                        },
                                                        "headers": {
                                                            "content-type": "application/json; charset=UTF-8",
                                                            "x-redlock-auth": "@body('Login_Generate_Token')?['token']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['PrismaCloudCSPMCustomConnector']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/alert/remediation"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_JSON_-_list_alerts_response": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "List_Alerts": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "headers": {
                                                    "x-redlock-auth": "@body('Login_Generate_Token')?['token']"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['PrismaCloudCSPMCustomConnector']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/alert",
                                                "queries": {
                                                    "detailed": "false",
                                                    "fields": "alert.id, alert.status, alert.time, cloud.accountId, cloud.account, cloud.region, resource.id, resource.name,policy.name",
                                                    "resource.name": "@{items('For_each_-_valid_alert_list')}",
                                                    "timeAmount": "90",
                                                    "timeType": "relative",
                                                    "timeUnit": "day"
                                                }
                                            }
                                        },
                                        "Parse_JSON_-_list_alerts_response": {
                                            "runAfter": {
                                                "List_Alerts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('List_Alerts')",
                                                "schema": {
                                                    "items": {
                                                        "properties": {
                                                            "alertRules": {
                                                                "type": "array"
                                                            },
                                                            "alertTime": {
                                                                "type": "integer"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "remediable": {
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resource": {
                                                                "properties": {
                                                                    "account": {
                                                                        "type": "string"
                                                                    },
                                                                    "accountId": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "region": {
                                                                        "type": "string"
                                                                    },
                                                                    "resourceConfigJsonAvailable": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "resourceDetailsAvailable": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "resourceTs": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "status": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "status",
                                                            "alertTime",
                                                            "policy",
                                                            "alertRules",
                                                            "resource"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Login_Generate_Token": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "For_each_2_-_fetching_response_from_teams_channel_and_taking_action": {
                                    "foreach": "@body('Parse_JSON_-_parsing_collected_alerts')",
                                    "actions": {
                                        "Condition_to_check_for_non_remediable_alerts": {
                                            "actions": {
                                                "Parse_JSON_-_Output_of_teams_adaptive_card_2": {
                                                    "runAfter": {
                                                        "Post_adaptive_card_and_wait_for_a_response_2": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('Post_adaptive_card_and_wait_for_a_response_2')",
                                                        "schema": {
                                                            "properties": {
                                                                "data": {
                                                                    "properties": {
                                                                        "incidentStatus": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "messageId": {
                                                                    "type": "string"
                                                                },
                                                                "messageLink": {
                                                                    "type": "string"
                                                                },
                                                                "responder": {
                                                                    "properties": {
                                                                        "displayName": {
                                                                            "type": "string"
                                                                        },
                                                                        "email": {
                                                                            "type": "string"
                                                                        },
                                                                        "objectId": {
                                                                            "type": "string"
                                                                        },
                                                                        "tenantId": {
                                                                            "type": "string"
                                                                        },
                                                                        "userPrincipalName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "responseTime": {
                                                                    "type": "string"
                                                                },
                                                                "submitActionId": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "Post_adaptive_card_and_wait_for_a_response_2": {
                                                    "runAfter": {},
                                                    "type": "ApiConnectionWebhook",
                                                    "inputs": {
                                                        "body": {
                                                            "body": {
                                                                "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"large\",\n            \"weight\": \"bolder\",\n            \"text\": \"Suspicious Asset - Prisma cloud CSPM\",\n            \"wrap\": true\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Asset Name : @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Resource Name']}\",\n                            \"wrap\": true,\n                            \"weight\": \"Bolder\"\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"weight\": \"bolder\",\n                            \"text\": \"Prisma CSPM Report\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Alert ID :  @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Alert id']}\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Policy Name : @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Policy Name']}\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Account :  @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Account']}\",\n                            \"wrap\": true\n                        }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Close Azure Sentinal incident?\"\n        },\n        {\n            \"choices\": [\n                {\n                    \"isSelected\": true,\n                    \"title\": \"Close incident - False Positive\",\n                    \"value\": \"False Positive - Incorrect Alert Logic\"\n                },\n                {\n                    \"title\": \"Close incident - True Positive\",\n                    \"value\": \"True Positive - Suspicious Activity\"\n                },\n                {\n                    \"title\": \"Close incident - Benign Positive\",\n                    \"value\": \"Benign Positive - Suspicious But Expected\"\n                },\n                {\n                    \"title\": \"Undetermined\",\n                    \"value\": \"Undetermined\"\n                }\n            ],\n            \"id\": \"incidentStatus\",\n            \"style\": \"compact\",\n            \"type\": \"Input.ChoiceSet\",\n            \"value\": \"Benign Positive - Suspicious But Expected\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Change Microsoft Sentinel incident severity?\"\n        },\n        {\n            \"choices\": [\n                {\n                    \"title\": \"Medium\",\n                    \"value\": \"Medium\"\n                },\n                {\n                    \"title\": \"High\",\n                    \"value\": \"High\"\n                },\n                {\n                    \"title\": \"Low\",\n                    \"value\": \"Low\"\n                },\n                {\n                    \"title\": \"Don't change\",\n                    \"value\": \"same\"\n                }\n            ],\n            \"id\": \"incidentSeverity\",\n            \"style\": \"compact\",\n            \"type\": \"Input.ChoiceSet\",\n            \"value\": \"\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Provided Alert is not remediable by Prisma Cloud\",\n            \"size\": \"Medium\",\n            \"weight\": \"Bolder\"\n        }\n    ],\n\"actions\": [\n        {\n            \"type\": \"Action.Submit\",\n            \"title\": \"Submit\",\n        },\n        {\n            \"type\": \"Action.Submit\",\n            \"title\": \"Ignore\"\n        }\n    ],\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.2\"\n}",
                                                                "recipient": {
                                                                    "channelId": "@parameters('ChannelID')",
                                                                    "groupId": "@parameters('TeamsID')"
                                                                }
                                                            },
                                                            "notificationUrl": "@{listCallbackUrl()}"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['teams']['connectionId']"
                                                            }
                                                        },
                                                        "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Channel')}/$subscriptions"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Parse_JSON_-_Output_of_teams_adaptive_card": {
                                                        "runAfter": {
                                                            "Post_adaptive_card_and_wait_for_a_response": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ParseJson",
                                                        "inputs": {
                                                            "content": "@body('Post_adaptive_card_and_wait_for_a_response')",
                                                            "schema": {
                                                                "properties": {
                                                                    "data": {
                                                                        "properties": {
                                                                            "incidentStatus": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "messageId": {
                                                                        "type": "string"
                                                                    },
                                                                    "messageLink": {
                                                                        "type": "string"
                                                                    },
                                                                    "responder": {
                                                                        "properties": {
                                                                            "displayName": {
                                                                                "type": "string"
                                                                            },
                                                                            "email": {
                                                                                "type": "string"
                                                                            },
                                                                            "objectId": {
                                                                                "type": "string"
                                                                            },
                                                                            "tenantId": {
                                                                                "type": "string"
                                                                            },
                                                                            "userPrincipalName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "responseTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "submitActionId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "Post_adaptive_card_and_wait_for_a_response": {
                                                        "runAfter": {},
                                                        "type": "ApiConnectionWebhook",
                                                        "inputs": {
                                                            "body": {
                                                                "body": {
                                                                    "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"large\",\n            \"weight\": \"bolder\",\n            \"text\": \"Suspicious Asset - Prisma cloud CSPM\",\n            \"wrap\": true\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Asset Name : @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Resource Name']}\",\n                            \"wrap\": true,\n                            \"weight\": \"Bolder\"\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"weight\": \"bolder\",\n                            \"text\": \"Prisma CSPM Report\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Alert ID :  @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Alert id']}\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Policy Name : @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Policy Name']}\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Account :  @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Account']}\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"weight\": \"bolder\",\n                            \"text\": \"Remediation Details :  \",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"cli Description : @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['cli Description']}\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Script Impact :@{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Script Impact']} \",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"alertIdVsCliScript : @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['alertIdVsCliScript']}\",\n                            \"wrap\": true\n                        }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Close Azure Sentinal incident?\"\n        },\n        {\n            \"choices\": [\n                {\n                    \"isSelected\": true,\n                    \"title\": \"Close incident - False Positive\",\n                    \"value\": \"False Positive - Incorrect Alert Logic\"\n                },\n                {\n                    \"title\": \"Close incident - True Positive\",\n                    \"value\": \"True Positive - Suspicious Activity\"\n                },\n                {\n                    \"title\": \"Close incident - Benign Positive\",\n                    \"value\": \"Benign Positive - Suspicious But Expected\"\n                },\n                {\n                    \"title\": \"Undetermined\",\n                    \"value\": \"Undetermined\"\n                }\n            ],\n            \"id\": \"incidentStatus\",\n            \"style\": \"compact\",\n            \"type\": \"Input.ChoiceSet\",\n            \"value\": \"Benign Positive - Suspicious But Expected\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Change Microsoft Sentinel incident severity?\"\n        },\n        {\n            \"choices\": [\n                {\n                    \"title\": \"Medium\",\n                    \"value\": \"Medium\"\n                },\n                {\n                    \"title\": \"High\",\n                    \"value\": \"High\"\n                },\n                {\n                    \"title\": \"Low\",\n                    \"value\": \"Low\"\n                },\n                {\n                    \"title\": \"Don't change\",\n                    \"value\": \"same\"\n                }\n            ],\n            \"id\": \"incidentSeverity\",\n            \"style\": \"compact\",\n            \"type\": \"Input.ChoiceSet\",\n            \"value\": \"\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Prisma Cloud CSPM Actions\",\n            \"size\": \"Medium\",\n            \"weight\": \"Bolder\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"type\": \"Action.Submit\",\n            \"title\": \"Run Remediation steps on asset\",\n        },\n        {\n            \"type\": \"Action.Submit\",\n            \"title\": \"Submit without Running Remediation steps\",\n        },\n        {\n            \"type\": \"Action.Submit\",\n            \"title\": \"Ignore\"\n        }\n    ],\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.2\"\n}",
                                                                    "recipient": {
                                                                        "channelId": "@parameters('ChannelID')",
                                                                        "groupId": "@parameters('TeamsID')"
                                                                    }
                                                                },
                                                                "notificationUrl": "@{listCallbackUrl()}"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['teams']['connectionId']"
                                                                }
                                                            },
                                                            "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Channel')}/$subscriptions"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Script Impact']",
                                                            " "
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_to_check_for_submit_responses": {
                                            "actions": {
                                                "Append_to_collect_response_variable": {
                                                    "runAfter": {
                                                        "Update_an_adaptive_card_in_a_chat_or_channel": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "Collect_response",
                                                        "value": {
                                                            "Alert id": "@{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Alert id']}",
                                                            "Asset": "@{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Resource Name']}",
                                                            "Response Given": " @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['submitActionId']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['submitActionId']}",
                                                            "Response submitter": " @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['responder']?['email']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['responder']?['email']}",
                                                            "Status": "Alert Cant be Remediated or choosen not to"
                                                        }
                                                    }
                                                },
                                                "Update_an_adaptive_card_in_a_chat_or_channel": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"large\",\n            \"weight\": \"bolder\",\n            \"text\": \"Suspicious Asset @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Resource Name']}  - Microsoft Sentinel\",\n            \"wrap\": true\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \" Response - @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['submitActionId']} @{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['submitActionId']} by @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['responder']?['email']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['responder']?['email']} \",\n                            \"wrap\": true,\n                            \"weight\": \"Bolder\"\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \" Alert - @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Alert id']}\",\n                            \"wrap\": true,\n                            \"weight\": \"Bolder\"\n                        }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        }\n    ],\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.2\"\n}",
                                                            "messageId": "@{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['messageId']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['messageId']}",
                                                            "recipient": {
                                                                "channelId": "@parameters('ChannelID')",
                                                                "groupId": "@parameters('TeamsID')"
                                                            }
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['teams']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v1.0/teams/conversation/updateAdaptivecard/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Condition_to_check_for_non_remediable_alerts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Condition_2": {
                                                        "actions": {
                                                            "Append_to_collect_response_variable_2": {
                                                                "runAfter": {
                                                                    "Update_an_adaptive_card_in_a_chat_or_channel_2": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "AppendToArrayVariable",
                                                                "inputs": {
                                                                    "name": "Collect_response",
                                                                    "value": {
                                                                        "Alert id": "@{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Alert id']}",
                                                                        "Asset": "@{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Resource Name']}",
                                                                        "Response Given": " @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['submitActionId']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['submitActionId']}",
                                                                        "Response submitter": " @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['responder']?['email']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['responder']?['email']}",
                                                                        "Status": "Alert Ignored"
                                                                    }
                                                                }
                                                            },
                                                            "Update_an_adaptive_card_in_a_chat_or_channel_2": {
                                                                "runAfter": {},
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"large\",\n            \"weight\": \"bolder\",\n            \"text\": \"Suspicious Asset @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Resource Name']}  - Microsoft Sentinel\",\n            \"wrap\": true\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \" Response - @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['submitActionId']} @{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['submitActionId']} by @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['responder']?['email']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['responder']?['email']} \",\n                            \"wrap\": true,\n                            \"weight\": \"Bolder\"\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \" Alert - @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Alert id']}\",\n                            \"wrap\": true,\n                            \"weight\": \"Bolder\"\n                        }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        }\n    ],\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.2\"\n}",
                                                                        "messageId": "@{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['messageId']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['messageId']}",
                                                                        "recipient": {
                                                                            "channelId": "@parameters('ChannelID')",
                                                                            "groupId": "@parameters('TeamsID')"
                                                                        }
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['teams']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/v1.0/teams/conversation/updateAdaptivecard/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "else": {
                                                            "actions": {
                                                                "Append_to_collect_response_variable_3": {
                                                                    "runAfter": {
                                                                        "Remediate_Alert": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "Collect_response",
                                                                        "value": {
                                                                            "Alert id": "@{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Alert id']}",
                                                                            "Asset": "@{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Resource Name']}",
                                                                            "Response Given": " @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['submitActionId']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['submitActionId']}",
                                                                            "Response submitter": " @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['responder']?['email']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['responder']?['email']}",
                                                                            "Status": "Alert remediated succesfully"
                                                                        }
                                                                    }
                                                                },
                                                                "Remediate_Alert": {
                                                                    "runAfter": {
                                                                        "Update_an_adaptive_card_in_a_chat_or_channel_3": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "headers": {
                                                                            "x-redlock-auth": "@body('Login_Generate_Token')?['token']"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['PrismaCloudCSPMCustomConnector']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "patch",
                                                                        "path": "/alert/remediation/@{encodeURIComponent(items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Alert id'])}"
                                                                    }
                                                                },
                                                                "Update_an_adaptive_card_in_a_chat_or_channel_3": {
                                                                    "runAfter": {},
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"large\",\n            \"weight\": \"bolder\",\n            \"text\": \"Suspicious Asset @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Resource Name']}  - Microsoft Sentinel\",\n            \"wrap\": true\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \" Response - @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['submitActionId']} @{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['submitActionId']} by @{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['responder']?['email']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['responder']?['email']} \",\n                            \"wrap\": true,\n                            \"weight\": \"Bolder\"\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \" Alert - @{items('For_each_2_-_fetching_response_from_teams_channel_and_taking_action')['Alert id']}\",\n                            \"wrap\": true,\n                            \"weight\": \"Bolder\"\n                        }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        }\n    ],\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.2\"\n}",
                                                                            "messageId": "@{body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['messageId']}@{body('Parse_JSON_-_Output_of_teams_adaptive_card')?['messageId']}",
                                                                            "recipient": {
                                                                                "channelId": "@parameters('ChannelID')",
                                                                                "groupId": "@parameters('TeamsID')"
                                                                            }
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['teams']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/v1.0/teams/conversation/updateAdaptivecard/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "or": [
                                                                {
                                                                    "equals": [
                                                                        "@body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['submitActionId']",
                                                                        "Ignore"
                                                                    ]
                                                                },
                                                                {
                                                                    "equals": [
                                                                        "@body('Parse_JSON_-_Output_of_teams_adaptive_card')?['submitActionId']",
                                                                        "Ignore"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "or": [
                                                    {
                                                        "equals": [
                                                            "@body('Parse_JSON_-_Output_of_teams_adaptive_card_2')?['submitActionId']",
                                                            "Submit"
                                                        ]
                                                    },
                                                    {
                                                        "equals": [
                                                            "@body('Parse_JSON_-_Output_of_teams_adaptive_card')?['submitActionId']",
                                                            "Submit without Running Remediation steps"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON_-_parsing_collected_alerts": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Login_Generate_Token": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "password": "@body('Get_secret')?['value']",
                                            "username": "@parameters('PrismaUserID')"
                                        },
                                        "headers": {
                                            "content-type": "application/json; charset=UTF-8"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['PrismaCloudCSPMCustomConnector']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/login"
                                    }
                                },
                                "Parse_JSON_-_parsing_collected_alerts": {
                                    "runAfter": {
                                        "For_each_-_valid_alert_list": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@variables('collected_alerts')",
                                        "schema": {
                                            "items": {
                                                "properties": {
                                                    "Account": {
                                                        "type": "string"
                                                    },
                                                    "Alert id": {
                                                        "type": "string"
                                                    },
                                                    "Policy Name": {
                                                        "type": "string"
                                                    },
                                                    "Resource Name": {
                                                        "type": "string"
                                                    },
                                                    "Script Impact": {
                                                        "type": "string"
                                                    },
                                                    "alertIdVsCliScript": {
                                                        "type": "string"
                                                    },
                                                    "cli Description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Account",
                                                    "Alert id",
                                                    "Policy Name",
                                                    "Resource Name",
                                                    "Script Impact",
                                                    "alertIdVsCliScript",
                                                    "cli Description"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Add_comment_to_incident_(V3)": {
                                        "runAfter": {},
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                "message": "<p>No Entity is Mapped to \"hostname\" in analytic rule.<br>\n<br>\nNote : Assets column should be mapped to Hostname in entity mapping</p>"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/Incidents/Comment"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('collect_entities'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_each_-_collect_all_entity_in_one_array": {
                            "foreach": "@body('Parse_JSON_-_entities_')",
                            "actions": {
                                "Append_to_array_variable": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "collect_entities",
                                        "value": "@items('For_each_-_collect_all_entity_in_one_array')?['properties']?['hostName']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_-_collect_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_secret": {
                            "runAfter": {
                                "For_each_-_collect_all_entity_in_one_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent(parameters('PrismaSecretName'))}/value"
                            }
                        },
                        "Initialize_variable_-_collect_alerts": {
                            "runAfter": {
                                "Initialize_variable_-_collect_entity": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "collected_alerts",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_collect_entity": {
                            "runAfter": {
                                "Parse_JSON_-_entities_": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "collect_entities",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_collect_response": {
                            "runAfter": {
                                "Initialize_variable_-_collect_alerts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Collect_response",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON_-_entities_": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "kind": {
                                                "type": "string"
                                            },
                                            "properties": {
                                                "properties": {
                                                    "friendlyName": {
                                                        "type": "string"
                                                    },
                                                    "hostName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "kind",
                                            "properties",
                                            "type"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "PrismaCloudCSPMCustomConnector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('PrismacloudcspmcustomconnectorConnectionName'))]",
                                "connectionName": "[variables('PrismacloudcspmcustomconnectorConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName": "[variables('KeyvaultConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "connectionName": "[variables('TeamsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {},
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('PrismacloudcspmcustomconnectorConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('PrismacloudcspmcustomconnectorConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('PrismacloudcspmcustomconnectorConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/Connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('KeyvaultConnectionName')]",
            "kind": "V1",
            "location": "[resourceGroup().location]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'keyvault')]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('keyvault name')]"
                },
                "displayName": "[variables('KeyvaultConnectionName')]",
                "nonSecretParameterValues": {
                    "vaultName": "[parameters('keyvault name')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('TeamsConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('TeamsConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                }
            }
        }
    ]
}
