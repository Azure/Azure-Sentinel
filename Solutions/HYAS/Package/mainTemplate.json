{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for HYAS"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "HYAS",
    "_solutionVersion": "3.0.0",
    "solutionId": "hyas.a-hyas-insight-azure-sentinel-solutions-gallery",
    "_solutionId": "[variables('solutionId')]",
    "HYAS-Insight-Domain-C2-Attribution-Data": "HYAS-Insight-Domain-C2-Attribution-Data",
    "_HYAS-Insight-Domain-C2-Attribution-Data": "[variables('HYAS-Insight-Domain-C2-Attribution-Data')]",
    "TemplateEmptyArray": "[json('[]')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "HYAS-Insight-Domain-C2-Attribution-Data",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "blanks": "[replace('b', 'b', '')]",
    "HYAS-Insight-Domain-Dynamic-DNS-Data": "HYAS-Insight-Domain-Dynamic-DNS-Data",
    "_HYAS-Insight-Domain-Dynamic-DNS-Data": "[variables('HYAS-Insight-Domain-Dynamic-DNS-Data')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "HYAS-Insight-Domain-Dynamic-DNS-Data",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "HYAS-Insight-Domain-Malware-Sample-Data": "HYAS-Insight-Domain-Malware-Sample-Data",
    "_HYAS-Insight-Domain-Malware-Sample-Data": "[variables('HYAS-Insight-Domain-Malware-Sample-Data')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "HYAS-Insight-Domain-Malware-Sample-Data",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3'))))]",
    "_playbookcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId3'),'-', variables('playbookVersion3'))))]",
    "HYAS-Insight-Domain-OS-Indicator-Data": "HYAS-Insight-Domain-OS-Indicator-Data",
    "_HYAS-Insight-Domain-OS-Indicator-Data": "[variables('HYAS-Insight-Domain-OS-Indicator-Data')]",
    "playbookVersion4": "1.0",
    "playbookContentId4": "HYAS-Insight-Domain-OS-Indicator-Data",
    "_playbookContentId4": "[variables('playbookContentId4')]",
    "playbookId4": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId4'))]",
    "playbookTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId4'))))]",
    "_playbookcontentProductId4": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId4'),'-', variables('playbookVersion4'))))]",
    "HYAS-Insight-Domain-Passive-Hash-Data": "HYAS-Insight-Domain-Passive-Hash-Data",
    "_HYAS-Insight-Domain-Passive-Hash-Data": "[variables('HYAS-Insight-Domain-Passive-Hash-Data')]",
    "playbookVersion5": "1.0",
    "playbookContentId5": "HYAS-Insight-Domain-Passive-Hash-Data",
    "_playbookContentId5": "[variables('playbookContentId5')]",
    "playbookId5": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId5'))]",
    "playbookTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId5'))))]",
    "_playbookcontentProductId5": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId5'),'-', variables('playbookVersion5'))))]",
    "HYAS-Insight-Domain-SSL-Certificate-Data": "HYAS-Insight-Domain-SSL-Certificate-Data",
    "_HYAS-Insight-Domain-SSL-Certificate-Data": "[variables('HYAS-Insight-Domain-SSL-Certificate-Data')]",
    "playbookVersion6": "1.0",
    "playbookContentId6": "HYAS-Insight-Domain-SSL-Certificate-Data",
    "_playbookContentId6": "[variables('playbookContentId6')]",
    "playbookId6": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId6'))]",
    "playbookTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId6'))))]",
    "_playbookcontentProductId6": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId6'),'-', variables('playbookVersion6'))))]",
    "HYAS-Insight-Domain-Whois-Current-Data": "HYAS-Insight-Domain-Whois-Current-Data",
    "_HYAS-Insight-Domain-Whois-Current-Data": "[variables('HYAS-Insight-Domain-Whois-Current-Data')]",
    "playbookVersion7": "1.0",
    "playbookContentId7": "HYAS-Insight-Domain-Whois-Current-Data",
    "_playbookContentId7": "[variables('playbookContentId7')]",
    "playbookId7": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId7'))]",
    "playbookTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId7'))))]",
    "_playbookcontentProductId7": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId7'),'-', variables('playbookVersion7'))))]",
    "HYAS-Insight-Domain-Whois-Data": "HYAS-Insight-Domain-Whois-Data",
    "_HYAS-Insight-Domain-Whois-Data": "[variables('HYAS-Insight-Domain-Whois-Data')]",
    "playbookVersion8": "1.0",
    "playbookContentId8": "HYAS-Insight-Domain-Whois-Data",
    "_playbookContentId8": "[variables('playbookContentId8')]",
    "playbookId8": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId8'))]",
    "playbookTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId8'))))]",
    "_playbookcontentProductId8": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId8'),'-', variables('playbookVersion8'))))]",
    "HYAS-Insight-Email-C2-Attribution-Data": "HYAS-Insight-Email-C2-Attribution-Data",
    "_HYAS-Insight-Email-C2-Attribution-Data": "[variables('HYAS-Insight-Email-C2-Attribution-Data')]",
    "playbookVersion9": "1.0",
    "playbookContentId9": "HYAS-Insight-Email-C2-Attribution-Data",
    "_playbookContentId9": "[variables('playbookContentId9')]",
    "playbookId9": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId9'))]",
    "playbookTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId9'))))]",
    "_playbookcontentProductId9": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId9'),'-', variables('playbookVersion9'))))]",
    "HYAS-Insight-Email-Dynamic-DNS-Data": "HYAS-Insight-Email-Dynamic-DNS-Data",
    "_HYAS-Insight-Email-Dynamic-DNS-Data": "[variables('HYAS-Insight-Email-Dynamic-DNS-Data')]",
    "playbookVersion10": "1.0",
    "playbookContentId10": "HYAS-Insight-Email-Dynamic-DNS-Data",
    "_playbookContentId10": "[variables('playbookContentId10')]",
    "playbookId10": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId10'))]",
    "playbookTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId10'))))]",
    "_playbookcontentProductId10": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId10'),'-', variables('playbookVersion10'))))]",
    "HYAS-Insight-Email-Whois-Data": "HYAS-Insight-Email-Whois-Data",
    "_HYAS-Insight-Email-Whois-Data": "[variables('HYAS-Insight-Email-Whois-Data')]",
    "playbookVersion11": "1.0",
    "playbookContentId11": "HYAS-Insight-Email-Whois-Data",
    "_playbookContentId11": "[variables('playbookContentId11')]",
    "playbookId11": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId11'))]",
    "playbookTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId11'))))]",
    "_playbookcontentProductId11": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId11'),'-', variables('playbookVersion11'))))]",
    "HYAS-Insight-File-Hash-C2-Attribution-Data": "HYAS-Insight-File-Hash-C2-Attribution-Data",
    "_HYAS-Insight-File-Hash-C2-Attribution-Data": "[variables('HYAS-Insight-File-Hash-C2-Attribution-Data')]",
    "playbookVersion12": "1.0",
    "playbookContentId12": "HYAS-Insight-File-Hash-C2-Attribution-Data",
    "_playbookContentId12": "[variables('playbookContentId12')]",
    "playbookId12": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId12'))]",
    "playbookTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId12'))))]",
    "_playbookcontentProductId12": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId12'),'-', variables('playbookVersion12'))))]",
    "HYAS-Insight-File-Hash-Malware-Information-Data": "HYAS-Insight-File-Hash-Malware-Information-Data",
    "_HYAS-Insight-File-Hash-Malware-Information-Data": "[variables('HYAS-Insight-File-Hash-Malware-Information-Data')]",
    "playbookVersion13": "1.0",
    "playbookContentId13": "HYAS-Insight-File-Hash-Malware-Information-Data",
    "_playbookContentId13": "[variables('playbookContentId13')]",
    "playbookId13": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId13'))]",
    "playbookTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId13'))))]",
    "_playbookcontentProductId13": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId13'),'-', variables('playbookVersion13'))))]",
    "HYAS-Insight-File-Hash-OS-Indicator-Data": "HYAS-Insight-File-Hash-OS-Indicator-Data",
    "_HYAS-Insight-File-Hash-OS-Indicator-Data": "[variables('HYAS-Insight-File-Hash-OS-Indicator-Data')]",
    "playbookVersion14": "1.0",
    "playbookContentId14": "HYAS-Insight-File-Hash-OS-Indicator-Data",
    "_playbookContentId14": "[variables('playbookContentId14')]",
    "playbookId14": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId14'))]",
    "playbookTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId14'))))]",
    "_playbookcontentProductId14": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId14'),'-', variables('playbookVersion14'))))]",
    "HYAS-Insight-File-Hash-SSL-Certificate-Data": "HYAS-Insight-File-Hash-SSL-Certificate-Data",
    "_HYAS-Insight-File-Hash-SSL-Certificate-Data": "[variables('HYAS-Insight-File-Hash-SSL-Certificate-Data')]",
    "playbookVersion15": "1.0",
    "playbookContentId15": "HYAS-Insight-File-Hash-SSL-Certificate-Data",
    "_playbookContentId15": "[variables('playbookContentId15')]",
    "playbookId15": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId15'))]",
    "playbookTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId15'))))]",
    "_playbookcontentProductId15": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId15'),'-', variables('playbookVersion15'))))]",
    "HYAS-Insight-IP-C2-Attribution-Data": "HYAS-Insight-IP-C2-Attribution-Data",
    "_HYAS-Insight-IP-C2-Attribution-Data": "[variables('HYAS-Insight-IP-C2-Attribution-Data')]",
    "playbookVersion16": "1.0",
    "playbookContentId16": "HYAS-Insight-IP-C2-Attribution-Data",
    "_playbookContentId16": "[variables('playbookContentId16')]",
    "playbookId16": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId16'))]",
    "playbookTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId16'))))]",
    "_playbookcontentProductId16": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId16'),'-', variables('playbookVersion16'))))]",
    "HYAS-Insight-IP-Dynamic-DNS-Data": "HYAS-Insight-IP-Dynamic-DNS-Data",
    "_HYAS-Insight-IP-Dynamic-DNS-Data": "[variables('HYAS-Insight-IP-Dynamic-DNS-Data')]",
    "playbookVersion17": "1.0",
    "playbookContentId17": "HYAS-Insight-IP-Dynamic-DNS-Data",
    "_playbookContentId17": "[variables('playbookContentId17')]",
    "playbookId17": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId17'))]",
    "playbookTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId17'))))]",
    "_playbookcontentProductId17": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId17'),'-', variables('playbookVersion17'))))]",
    "HYAS-Insight-IP-Geo-Location-Data": "HYAS-Insight-IP-Geo-Location-Data",
    "_HYAS-Insight-IP-Geo-Location-Data": "[variables('HYAS-Insight-IP-Geo-Location-Data')]",
    "playbookVersion18": "1.0",
    "playbookContentId18": "HYAS-Insight-IP-Geo-Location-Data",
    "_playbookContentId18": "[variables('playbookContentId18')]",
    "playbookId18": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId18'))]",
    "playbookTemplateSpecName18": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId18'))))]",
    "_playbookcontentProductId18": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId18'),'-', variables('playbookVersion18'))))]",
    "HYAS-Insight-IP-Malware-Sample-Data": "HYAS-Insight-IP-Malware-Sample-Data",
    "_HYAS-Insight-IP-Malware-Sample-Data": "[variables('HYAS-Insight-IP-Malware-Sample-Data')]",
    "playbookVersion19": "1.0",
    "playbookContentId19": "HYAS-Insight-IP-Malware-Sample-Data",
    "_playbookContentId19": "[variables('playbookContentId19')]",
    "playbookId19": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId19'))]",
    "playbookTemplateSpecName19": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId19'))))]",
    "_playbookcontentProductId19": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId19'),'-', variables('playbookVersion19'))))]",
    "HYAS-Insight-IP-OS-Indicator-Data": "HYAS-Insight-IP-OS-Indicator-Data",
    "_HYAS-Insight-IP-OS-Indicator-Data": "[variables('HYAS-Insight-IP-OS-Indicator-Data')]",
    "playbookVersion20": "1.0",
    "playbookContentId20": "HYAS-Insight-IP-OS-Indicator-Data",
    "_playbookContentId20": "[variables('playbookContentId20')]",
    "playbookId20": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId20'))]",
    "playbookTemplateSpecName20": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId20'))))]",
    "_playbookcontentProductId20": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId20'),'-', variables('playbookVersion20'))))]",
    "HYAS-Insight-IP-Passive-DNS-Data": "HYAS-Insight-IP-Passive-DNS-Data",
    "_HYAS-Insight-IP-Passive-DNS-Data": "[variables('HYAS-Insight-IP-Passive-DNS-Data')]",
    "playbookVersion21": "1.0",
    "playbookContentId21": "HYAS-Insight-IP-Passive-DNS-Data",
    "_playbookContentId21": "[variables('playbookContentId21')]",
    "playbookId21": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId21'))]",
    "playbookTemplateSpecName21": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId21'))))]",
    "_playbookcontentProductId21": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId21'),'-', variables('playbookVersion21'))))]",
    "HYAS-Insight-IP-Passive-Hash-Data": "HYAS-Insight-IP-Passive-Hash-Data",
    "_HYAS-Insight-IP-Passive-Hash-Data": "[variables('HYAS-Insight-IP-Passive-Hash-Data')]",
    "playbookVersion22": "1.0",
    "playbookContentId22": "HYAS-Insight-IP-Passive-Hash-Data",
    "_playbookContentId22": "[variables('playbookContentId22')]",
    "playbookId22": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId22'))]",
    "playbookTemplateSpecName22": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId22'))))]",
    "_playbookcontentProductId22": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId22'),'-', variables('playbookVersion22'))))]",
    "HYAS-Insight-IP-Sinkhole-Data": "HYAS-Insight-IP-Sinkhole-Data",
    "_HYAS-Insight-IP-Sinkhole-Data": "[variables('HYAS-Insight-IP-Sinkhole-Data')]",
    "playbookVersion23": "1.0",
    "playbookContentId23": "HYAS-Insight-IP-Sinkhole-Data",
    "_playbookContentId23": "[variables('playbookContentId23')]",
    "playbookId23": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId23'))]",
    "playbookTemplateSpecName23": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId23'))))]",
    "_playbookcontentProductId23": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId23'),'-', variables('playbookVersion23'))))]",
    "HYAS-Insight-IP-SSL-Certificate-Data": "HYAS-Insight-IP-SSL-Certificate-Data",
    "_HYAS-Insight-IP-SSL-Certificate-Data": "[variables('HYAS-Insight-IP-SSL-Certificate-Data')]",
    "playbookVersion24": "1.0",
    "playbookContentId24": "HYAS-Insight-IP-SSL-Certificate-Data",
    "_playbookContentId24": "[variables('playbookContentId24')]",
    "playbookId24": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId24'))]",
    "playbookTemplateSpecName24": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId24'))))]",
    "_playbookcontentProductId24": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId24'),'-', variables('playbookVersion24'))))]",
    "HYAS-Insight-PhoneNumber-Whois-Data": "HYAS-Insight-PhoneNumber-Whois-Data",
    "_HYAS-Insight-PhoneNumber-Whois-Data": "[variables('HYAS-Insight-PhoneNumber-Whois-Data')]",
    "playbookVersion25": "1.0",
    "playbookContentId25": "HYAS-Insight-PhoneNumber-Whois-Data",
    "_playbookContentId25": "[variables('playbookContentId25')]",
    "playbookId25": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId25'))]",
    "playbookTemplateSpecName25": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId25'))))]",
    "_playbookcontentProductId25": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId25'),'-', variables('playbookVersion25'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Domain-C2Attribution Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Domain-C2Attribution",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Hosts": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "Foreach_Hosts": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Check_DNSname_is_not_Empty": {
                          "actions": {
                            "Set_Domainname": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "domain_name",
                                "value": "@{variables('host_name')}.@{variables('dns_name')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_DNSname": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_Domainname_2": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "domain_name",
                                  "value": "@variables('host_name')"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@variables('dns_name')",
                                    ""
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>C2 Attribution Information for Domain: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{variables('domain_name')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\">Showing <strong>3</strong> records out of total<strong>@{variables('RecordsLength')} </strong> records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?domain=@{variables('domain_name')}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_C2_Attribution_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "Actor IPv4": "@items('For_each')?['actor_ipv4']",
                                      "C2 Domain": "@items('For_each')?['c2_domain']",
                                      "C2 IPv4": "@items('For_each')?['c2_ip']",
                                      "C2 URL": "@items('For_each')?['c2_url']",
                                      "DateTime": "@items('For_each')?['datetime']",
                                      "Email": "@items('For_each')?['email']",
                                      "Email Domain": "@items('For_each')?['email_domain']",
                                      "Referrer Domain": "@items('For_each')?['referrer_domain']",
                                      "Referrer IPv4": "@items('For_each')?['referrer_ipv4']",
                                      "Referrer URL": "@items('For_each')?['referrer_url']",
                                      "SHA256": "@items('For_each')?['sha256']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_JSon_Output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_JSon_Output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>C2 Attribution Information for Domain: </strong></span><span style=\"font-size: 16px\"><strong>@{variables('domain_name')}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_C2_Attribution_Information": {
                          "runAfter": {
                            "Check_DNSname_is_not_Empty": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/c2attribution",
                            "queries": {
                              "indicator_type": "domain",
                              "indicator_value": "@variables('domain_name')"
                            }
                          }
                        },
                        "Set_DNSname": {
                          "runAfter": {
                            "Set_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "dns_name",
                            "value": "@items('Foreach_Hosts')?['DnsDomain']"
                          }
                        },
                        "Set_Hostname": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "host_name",
                            "value": "@items('Foreach_Hosts')?['HostName']"
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_C2_Attribution_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_C2_Attribution_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By C2Attribution Info",
            "description": "This playbook enriches hosts asscociated with an incident with C2Attribution information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Domain-C2Attribution",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Domain-DynamicDNS Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Domain-DynamicDNS",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Hosts": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "Foreach_Hosts": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Check_DNSname_is_not_Empty": {
                          "actions": {
                            "Set_Domainname": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "domain_name",
                                "value": "@{variables('host_name')}.@{variables('dns_name')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_DNSname": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_Domainname_2": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "domain_name",
                                  "value": "@variables('host_name')"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@variables('dns_name')",
                                    ""
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Dynamic DNS Information for Domain: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{variables('domain_name')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?domain=@{variables('domain_name')}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Dynamic_DNS_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "A Record": "@items('For_each')?['a_record']",
                                      "Account": "@items('For_each')?['account']",
                                      "Created DateTime": "@items('For_each')?['created']",
                                      "Domain": "@items('For_each')?['domain']",
                                      "Domain Creator IP": "@items('For_each')?['domain_creator_ip']",
                                      "Email": "@items('For_each')?['email']",
                                      "IP Address": "@items('For_each')?['created_ip']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Dynamic DNS Information for Domain: </strong></span><span style=\"font-size: 16px\"><strong>@{variables('domain_name')}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Dynamic_DNS_Information": {
                          "runAfter": {
                            "Check_DNSname_is_not_Empty": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/dynamicdns",
                            "queries": {
                              "indicator_type": "domain",
                              "indicator_value": "@variables('domain_name')"
                            }
                          }
                        },
                        "Set_DNSname": {
                          "runAfter": {
                            "Set_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "dns_name",
                            "value": "@items('Foreach_Hosts')?['DnsDomain']"
                          }
                        },
                        "Set_Hostname": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "host_name",
                            "value": "@items('Foreach_Hosts')?['HostName']"
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Dynamic_DNS_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Dynamic_DNS_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By DynamicDNS Info",
            "description": "This playbook enriches hosts asscociated with an incident with Dynamic DNS information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Domain-DynamicDNS",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Domain-Malware-Sample Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Domain-Malware-Sample",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Hosts": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "Foreach_Hosts": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Check_DNSname_is_not_Empty": {
                          "actions": {
                            "Set_Domainname": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "domain_name",
                                "value": "@{variables('host_name')}.@{variables('dns_name')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_DNSname": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_Domainname_2": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "domain_name",
                                  "value": "@variables('host_name')"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@variables('dns_name')",
                                    ""
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Malware sample records for Domain: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{variables('domain_name')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?domain=@{variables('domain_name')}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Malware_Sample_Record_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "DateTime": "@items('For_each')?['datetime']",
                                      "Domain": "@items('For_each')?['domain']",
                                      "IPV4": "@items('For_each')?['ipv4']",
                                      "IPV6": "@items('For_each')?['ipv6']",
                                      "MD5": "@items('For_each')?['md5']",
                                      "SHA1": "@items('For_each')?['sha1']",
                                      "SHA256": "@items('For_each')?['sha256']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Malware sample records for Domain: </strong></span><span style=\"font-size: 16px\"><strong>@{variables('domain_name')}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Malware_Sample_Record_Information": {
                          "runAfter": {
                            "Check_DNSname_is_not_Empty": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/sample",
                            "queries": {
                              "indicator_type": "domain",
                              "indicator_value": "@variables('domain_name')"
                            }
                          }
                        },
                        "Set_DNSname": {
                          "runAfter": {
                            "Set_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "dns_name",
                            "value": "@items('Foreach_Hosts')?['DnsDomain']"
                          }
                        },
                        "Set_Hostname": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "host_name",
                            "value": "@items('Foreach_Hosts')?['HostName']"
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Malware_Sample_Record_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Malware_Sample_Record_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By Malware Sample Info",
            "description": "This playbook enriches hosts asscociated with an incident with Malware Sample information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId3')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Domain-Malware-Sample",
        "contentProductId": "[variables('_playbookcontentProductId3')]",
        "id": "[variables('_playbookcontentProductId3')]",
        "version": "[variables('playbookVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Domain-OS-Indicators Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion4')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Domain-OS-Indicators",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Hosts": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "Foreach_Hosts": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Check_DNSname_is_not_Empty": {
                          "actions": {
                            "Set_Domainname": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "domain_name",
                                "value": "@{variables('host_name')}.@{variables('dns_name')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_DNSname": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_Domainname_2": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "domain_name",
                                  "value": "@variables('host_name')"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@variables('dns_name')",
                                    ""
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Open Source Indicators<br>\n Information for Domain: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{variables('domain_name')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?domain=@{variables('domain_name')}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_02')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Open_Source_Indicators_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "DateTime": "@items('For_each')?['datetime']",
                                      "Domain": "@items('For_each')?['domain']",
                                      "Domain 2TLD": "@items('For_each')?['domain_2tld']",
                                      "First Seen": "@items('For_each')?['first_seen']",
                                      "IPV4": "@items('For_each')?['ipv4']",
                                      "IPV6": "@items('For_each')?['ipv6']",
                                      "Last Seen": "@items('For_each')?['last_seen']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_02",
                                    "value": {
                                      "Context": "@items('For_each')?['context']",
                                      "MD5": "@items('For_each')?['md5']",
                                      "SHA1": "@items('For_each')?['sha1']",
                                      "SHA256": "@items('For_each')?['sha256']",
                                      "Source Name": "@items('For_each')?['source_name']",
                                      "Source URL": "@items('For_each')?['source_url']",
                                      "URI": "@items('For_each')?['uri']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_variable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_json_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable": {
                              "runAfter": {
                                "Set_json_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Open Source Indicators<br>\n Information for Domain: </strong></span><span style=\"font-size: 16px\"><strong>@{variables('domain_name')}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Open_Source_Indicators_Information": {
                          "runAfter": {
                            "Check_DNSname_is_not_Empty": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/os_indicators",
                            "queries": {
                              "indicator_type": "domain",
                              "indicator_value": "@variables('domain_name')"
                            }
                          }
                        },
                        "Set_DNSname": {
                          "runAfter": {
                            "Set_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "dns_name",
                            "value": "@items('Foreach_Hosts')?['DnsDomain']"
                          }
                        },
                        "Set_Hostname": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "host_name",
                            "value": "@items('Foreach_Hosts')?['HostName']"
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Open_Source_Indicators_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Open_Source_Indicators_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId4'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId4')]",
                "contentId": "[variables('_playbookContentId4')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By OS Indicator Info",
            "description": "This playbook enriches hosts asscociated with an incident with By OS Indicator information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId4')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Domain-OS-Indicators",
        "contentProductId": "[variables('_playbookcontentProductId4')]",
        "id": "[variables('_playbookcontentProductId4')]",
        "version": "[variables('playbookVersion4')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Domain-Passive-Hash Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion5')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Domain-Passive-Hash",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Hosts": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "Foreach_Hosts": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Check_DNSname_is_not_Empty": {
                          "actions": {
                            "Set_Domainname": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "domain_name",
                                "value": "@{variables('host_name')}.@{variables('dns_name')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_DNSname": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_Domainname_2": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "domain_name",
                                  "value": "@variables('host_name')"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@variables('dns_name')",
                                    ""
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Passive Hash Information for Domain: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{variables('domain_name')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?domain=@{variables('domain_name')}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Passive_Hash_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "Domain": "@items('For_each')?['domain']",
                                      "MD5 Count": "@items('For_each')?['md5_count']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_Output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_Output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Passive Hash Information for Domain: </strong></span><span style=\"font-size: 16px\"><strong>@{variables('domain_name')}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Passive_Hash_Information": {
                          "runAfter": {
                            "Check_DNSname_is_not_Empty": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/passivehash",
                            "queries": {
                              "indicator_type": "domain",
                              "indicator_value": "@variables('domain_name')"
                            }
                          }
                        },
                        "Set_DNSname": {
                          "runAfter": {
                            "Set_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "dns_name",
                            "value": "@items('Foreach_Hosts')?['DnsDomain']"
                          }
                        },
                        "Set_Hostname": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "host_name",
                            "value": "@items('Foreach_Hosts')?['HostName']"
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Passive_Hash_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Passive_Hash_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId5'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId5')]",
                "contentId": "[variables('_playbookContentId5')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By Passive Hash Info",
            "description": "This playbook enriches hosts asscociated with an incident with By Passive Hash information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId5')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Domain-Passive-Hash",
        "contentProductId": "[variables('_playbookcontentProductId5')]",
        "id": "[variables('_playbookcontentProductId5')]",
        "version": "[variables('playbookVersion5')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Domain-SSL-Certificate Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion6')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Domain-SSL-Certificate",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Hosts": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "Foreach_Hosts": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Check_DNSname_is_not_Empty": {
                          "actions": {
                            "Set_Domainname": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "domain_name",
                                "value": "@{variables('host_name')}.@{variables('dns_name')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_DNSname": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_Domainname_2": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "domain_name",
                                  "value": "@variables('host_name')"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@variables('dns_name')",
                                    ""
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>SSL Certificate Information for Domain: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{variables('domain_name')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_3')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_4')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?domain=@{variables('domain_name')}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_4": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_02')"
                              }
                            },
                            "Create_HTML_table_3": {
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_03')"
                              }
                            },
                            "Create_HTML_table_4": {
                              "runAfter": {
                                "Create_HTML_table_3": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_04')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_SSL_Certificate_Information')?['ssl_certs'],3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "City Name": "@items('For_each')?['geo']?['geo']?['city_name']",
                                      "Country ISO Code": "@items('For_each')?['geo']?['geo']?['country_iso_code']",
                                      "Country Name": "@items('For_each')?['geo']?['geo']?['country_name']",
                                      "IP Address": "@items('For_each')?['ip']",
                                      "Latitude": "@items('For_each')?['geo']?['geo']?['location_latitude']",
                                      "Longitude": "@items('For_each')?['geo']?['geo']?['location_longitude']",
                                      "Postal Code": "@items('For_each')?['geo']?['geo']?['postal_code']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_02",
                                    "value": {
                                      "ISP": "@items('For_each')?['geo']?['isp']?['isp']",
                                      "ISP organization": "@items('For_each')?['geo']?['isp']?['organization']",
                                      "The ASN of IP": "@items('For_each')?['geo']?['isp']?['autonomous_system_number']",
                                      "The ASO of IP": "@items('For_each')?['geo']?['isp']?['autonomous_system_organization']",
                                      "The IP": "@items('For_each')?['geo']?['isp']?['ip_address']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_3": {
                                  "runAfter": {
                                    "Append_to_array_variable_2": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_03",
                                    "value": {
                                      "cert_key": "@items('For_each')?['ssl_cert']?['cert_key']",
                                      "expire_date": "@items('For_each')?['ssl_cert']?['expire_date']",
                                      "issue_date": "@items('For_each')?['ssl_cert']?['issue_date']",
                                      "issuer_countryName": "@items('For_each')?['ssl_cert']?['issuer_commonName']",
                                      "issuer_localityName": "@items('For_each')?['ssl_cert']?['issuer_localityName']",
                                      "issuer_organizationName": "@items('For_each')?['ssl_cert']?['issuer_organizationName']",
                                      "issuer_stateOrProvinceName": "@items('For_each')?['ssl_cert']?['issuer_stateOrProvinceName']",
                                      "serial_number": "@items('For_each')?['ssl_cert']?['serial_number']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_4": {
                                  "runAfter": {
                                    "Append_to_array_variable_3": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_04",
                                    "value": {
                                      "sha1": "@items('For_each')?['ssl_cert']?['sha1']",
                                      "sha_256": "@items('For_each')?['ssl_cert']?['sha_256']",
                                      "sig_algo": "@items('For_each')?['ssl_cert']?['sig_algo']",
                                      "signature": "@items('For_each')?['ssl_cert']?['signature']",
                                      "ssl_version": "@items('For_each')?['ssl_cert']?['ssl_version']",
                                      "subject_commonName": "@items('For_each')?['ssl_cert']?['subject_commonName']",
                                      "subject_countryName": "@items('For_each')?['ssl_cert']?['subject_countryName']",
                                      "subject_localityName": "@items('For_each')?['ssl_cert']?['subject_localityName']",
                                      "subject_organizationName": "@items('For_each')?['ssl_cert']?['subject_organizationName']",
                                      "subject_stateOrProvinceName": "@items('For_each')?['ssl_cert']?['subject_stateOrProvinceName']",
                                      "timestamp": "@items('For_each')?['ssl_cert']?['timestamp']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_variable_3": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_json_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable": {
                              "runAfter": {
                                "Set_json_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable_2": {
                              "runAfter": {
                                "Set_variable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_03",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable_3": {
                              "runAfter": {
                                "Set_variable_2": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_04",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>SSL Certificate Information for Domain: </strong></span><span style=\"font-size: 16px\"><strong>@{variables('domain_name')}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_SSL_Certificate_Information": {
                          "runAfter": {
                            "Check_DNSname_is_not_Empty": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/ssl_certificate",
                            "queries": {
                              "indicator_type": "domain",
                              "indicator_value": "@variables('domain_name')"
                            }
                          }
                        },
                        "Set_DNSname": {
                          "runAfter": {
                            "Set_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "dns_name",
                            "value": "@items('Foreach_Hosts')?['DnsDomain']"
                          }
                        },
                        "Set_Hostname": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "host_name",
                            "value": "@items('Foreach_Hosts')?['HostName']"
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_SSL_Certificate_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_SSL_Certificate_Information')?['ssl_certs'])"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_2": {
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_03",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_3": {
                      "runAfter": {
                        "Initialize_variable_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_04",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "Initialize_variable_3": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId6'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId6')]",
                "contentId": "[variables('_playbookContentId6')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By SSL Certificate Info",
            "description": "This playbook enriches hosts asscociated with an incident with By SSL Certificate information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId6')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Domain-SSL-Certificate",
        "contentProductId": "[variables('_playbookcontentProductId6')]",
        "id": "[variables('_playbookcontentProductId6')]",
        "version": "[variables('playbookVersion6')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Domain-WHOIS-Current Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion7')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Domain-WHOIS-Current",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Address_details_variable": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "address_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "City_details_variable": {
                      "runAfter": {
                        "Address_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "city_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Country_details_variable": {
                      "runAfter": {
                        "City_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "country_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Email_details_varibale": {
                      "runAfter": {
                        "Country_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "emails",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Hosts": {
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "Foreach_Hosts": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Check_DNSname_is_not_Empty": {
                          "actions": {
                            "Set_Domainname": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "domain_name",
                                "value": "@{variables('host_name')}.@{variables('dns_name')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_DNSname": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_Domainname_2": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "domain_name",
                                  "value": "@variables('host_name')"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@variables('dns_name')",
                                    ""
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Whois Current Information for Domain: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{variables('domain_name')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\">Showing <strong>3</strong> records out of total<strong>@{variables('RecordsLength')} </strong> records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?domain=@{variables('domain_name')}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json_Output_01')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json_Output_02')"
                              }
                            },
                            "For_each": {
                              "foreach": "@body('Get_Current_Whois_Information')?['items']",
                              "actions": {
                                "Append_to_array_variable": {
                                  "runAfter": {
                                    "Condition_2": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json_Output_01",
                                    "value": {
                                      "Domain": "@items('For_each')?['domain']",
                                      "Domain 2TLD": "@items('For_each')?['domain_2tld']",
                                      "Domain Created Datetime": "@items('For_each')?['domain_created_datetime']",
                                      "Domain Expires Datetime": "@items('For_each')?['domain_expires_datetime']",
                                      "Domain Updated Datetime": "@items('For_each')?['domain_updated_datetime']",
                                      "Idn Name": "@items('For_each')?['idn_name']",
                                      "Registrar": "@items('For_each')?['registrar']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json_Output_02",
                                    "value": {
                                      "Abuse Emails": "@join(variables('abuse_emails'),',')",
                                      "Address": "@join(variables('address_details'),',')",
                                      "City": "@join(variables('city_details'),',')",
                                      "Country": "@join(variables('country_details'),',')",
                                      "Email": "@join(variables('emails'),',')",
                                      "Nameserver": "@join(variables('nameserver_details'),',')",
                                      "Phone": "@variables('phone_number')",
                                      "State": "@join(variables('state_details'),',')"
                                    }
                                  }
                                },
                                "Condition_2": {
                                  "actions": {
                                    "set_phone_number": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_number",
                                        "value": " @{items('For_each')?['phone'][0]?['phone']}"
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Set_abuse_emails": [
                                      "Succeeded"
                                    ]
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greater": [
                                          "@length(items('For_each')?['phone'])",
                                          0
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "Set_abuse_emails": {
                                  "runAfter": {
                                    "Set_state": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "abuse_emails",
                                    "value": "@items('For_each')?['abuse_emails']"
                                  }
                                },
                                "Set_state": {
                                  "runAfter": {
                                    "set_nameserver": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "state_details",
                                    "value": "@items('For_each')?['state']"
                                  }
                                },
                                "set_address": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "address_details",
                                    "value": "@items('For_each')?['address']"
                                  }
                                },
                                "set_city": {
                                  "runAfter": {
                                    "set_address": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "city_details",
                                    "value": "@items('For_each')?['city']"
                                  }
                                },
                                "set_country": {
                                  "runAfter": {
                                    "set_city": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "country_details",
                                    "value": "@items('For_each')?['country']"
                                  }
                                },
                                "set_nameserver": {
                                  "runAfter": {
                                    "sset_emails": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "nameserver_details",
                                    "value": "@items('For_each')?['nameserver']"
                                  }
                                },
                                "sset_emails": {
                                  "runAfter": {
                                    "set_country": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "emails",
                                    "value": "@items('For_each')?['email']"
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_variable_6": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_jsonoutput_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json_Output_01",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable_6": {
                              "runAfter": {
                                "Set_jsonoutput_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json_Output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Get_Current_Whois_Information": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Whois Current Information for Domain: </strong></span><span style=\"font-size: 16px\"><strong>@{variables('domain_name')}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@body('Get_Current_Whois_Information')?['total_count']",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Current_Whois_Information": {
                          "runAfter": {
                            "Check_DNSname_is_not_Empty": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "applied_filters": {
                                "current": true,
                                "domain": "@variables('domain_name')"
                              }
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/whois/v1"
                          }
                        },
                        "Set_DNSname": {
                          "runAfter": {
                            "Set_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "dns_name",
                            "value": "@items('Foreach_Hosts')?['DnsDomain']"
                          }
                        },
                        "Set_Hostname": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "host_name",
                            "value": "@items('Foreach_Hosts')?['HostName']"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_variable": {
                      "runAfter": {
                        "State_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_number",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "take_records": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json_Output_01",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable_2": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json_Output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Nameserver_details_variable": {
                      "runAfter": {
                        "Email_details_varibale": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "nameserver_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Organization_details_variable": {
                      "runAfter": {
                        "Nameserver_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "abuse_emails",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    },
                    "State_details_variable": {
                      "runAfter": {
                        "Organization_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "state_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "take_records": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "take_records",
                            "type": "array"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId7'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId7')]",
                "contentId": "[variables('_playbookContentId7')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By WHOIS Current Info",
            "description": "This playbook enriches hosts asscociated with an incident with By WHOIS Current information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId7')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Domain-WHOIS-Current",
        "contentProductId": "[variables('_playbookcontentProductId7')]",
        "id": "[variables('_playbookcontentProductId7')]",
        "version": "[variables('playbookVersion7')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Domain-WHOIS Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion8')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Domain-WHOIS",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Address_details_variable": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "address_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "City_details_variable": {
                      "runAfter": {
                        "Address_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "city_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Country_details_variable": {
                      "runAfter": {
                        "City_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "country_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Email_details_varibale": {
                      "runAfter": {
                        "Country_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "emails",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Hosts": {
                      "runAfter": {
                        "phone_geo_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      }
                    },
                    "Foreach_Hosts": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Check_DNSname_is_not_Empty": {
                          "actions": {
                            "Set_Domainname": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "domain_name",
                                "value": "@{variables('host_name')}.@{variables('dns_name')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_DNSname": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_Domainname_2": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "domain_name",
                                  "value": "@variables('host_name')"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@variables('dns_name')",
                                    ""
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Whois Information for Domain: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{variables('domain_name')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\">Showing <strong>3</strong> records out of total<strong>@{variables('RecordsLength')} </strong> records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?domain=@{variables('domain_name')}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "loop_through_the_reponse_object": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json_Output_01')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json_Output_02')"
                              }
                            },
                            "Set_jsonoutput_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json_Output_01",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "loop_through_the_reponse_object": {
                              "foreach": "@take(body('Get_Whois_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "runAfter": {
                                    "check_phone_object_length": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json_Output_01",
                                    "value": {
                                      "Domain": "@items('loop_through_the_reponse_object')?['domain']",
                                      "Domain 2TLD": "@items('loop_through_the_reponse_object')?['domain_2tld']",
                                      "Domain Created Datetime": "@items('loop_through_the_reponse_object')?['domain_created_datetime']",
                                      "Domain Expires Datetime": "@items('loop_through_the_reponse_object')?['domain_expires_datetime']",
                                      "Domain Updated Datetime": "@items('loop_through_the_reponse_object')?['domain_updated_datetime']",
                                      "Idn Name": "@items('loop_through_the_reponse_object')?['idn_name']",
                                      "Privacy Punch": "@items('loop_through_the_reponse_object')?['privacy_punch']",
                                      "Registrar": "@items('loop_through_the_reponse_object')?['registrar']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json_Output_02",
                                    "value": {
                                      "Address": "@join(variables('address_details'),',')",
                                      "City": "@join(variables('city_details'),',')",
                                      "Country": "@join(variables('country_details'),',')",
                                      "Email": "@join(variables('emails'),',')",
                                      "Nameserver": "@join(variables('nameserver_details'),',')",
                                      "Phone": "@variables('phone_number')",
                                      "Phone Carrier": "@variables('phone_carrier')",
                                      "Phone Country": "@variables('phone_country')",
                                      "Phone Geo": "@variables('phone_geo')"
                                    }
                                  }
                                },
                                "Set_city": {
                                  "runAfter": {
                                    "set_address": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "city_details",
                                    "value": "@items('loop_through_the_reponse_object')?['city']"
                                  }
                                },
                                "Set_country": {
                                  "runAfter": {
                                    "Set_city": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "country_details",
                                    "value": "@items('loop_through_the_reponse_object')?['country']"
                                  }
                                },
                                "Set_emails": {
                                  "runAfter": {
                                    "Set_country": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "emails",
                                    "value": "@items('loop_through_the_reponse_object')?['email']"
                                  }
                                },
                                "Set_nameserver": {
                                  "runAfter": {
                                    "Set_emails": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "nameserver_details",
                                    "value": "@items('loop_through_the_reponse_object')?['nameserver']"
                                  }
                                },
                                "check_phone_object_length": {
                                  "actions": {
                                    "Set_phone": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_number",
                                        "value": "@{items('loop_through_the_reponse_object')?['phone'][0]?['phone']}"
                                      }
                                    },
                                    "Set_phone_carrier": {
                                      "runAfter": {
                                        "Set_phone": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_carrier",
                                        "value": "@{items('loop_through_the_reponse_object')?['phone'][0]?['phone_info']?['carrier']}"
                                      }
                                    },
                                    "Set_phone_country": {
                                      "runAfter": {
                                        "Set_phone_carrier": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_country",
                                        "value": "@{items('loop_through_the_reponse_object')?['phone'][0]?['phone_info']?['country']}"
                                      }
                                    },
                                    "Set_phone_geo": {
                                      "runAfter": {
                                        "Set_phone_country": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_geo",
                                        "value": "@items('loop_through_the_reponse_object')?['phone'][0]?['phone_info']?['geo']"
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Set_nameserver": [
                                      "Succeeded"
                                    ]
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greater": [
                                          "@length(items('loop_through_the_reponse_object')?['phone'])",
                                          0
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "set_address": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "address_details",
                                    "value": "@items('loop_through_the_reponse_object')?['address']"
                                  }
                                }
                              },
                              "runAfter": {
                                "set_json_outout_2_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "set_json_outout_2_to_empty": {
                              "runAfter": {
                                "Set_jsonoutput_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json_Output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Whois Information for Domain: </strong></span><span style=\"font-size: 16px\"><strong>@{variables('domain_name')}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Whois_Information": {
                          "runAfter": {
                            "Check_DNSname_is_not_Empty": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/whois",
                            "queries": {
                              "indicator_type": "domain",
                              "indicator_value": "@variables('domain_name')"
                            }
                          }
                        },
                        "Set_DNSname": {
                          "runAfter": {
                            "Set_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "dns_name",
                            "value": "@items('Foreach_Hosts')?['DnsDomain']"
                          }
                        },
                        "Set_Hostname": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "host_name",
                            "value": "@items('Foreach_Hosts')?['HostName']"
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Whois_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Whois_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "take_records": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json_Output_01",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable_2": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json_Output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Nameserver_details_variable": {
                      "runAfter": {
                        "Email_details_varibale": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "nameserver_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Organization_details_variable": {
                      "runAfter": {
                        "Nameserver_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "organization_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Phone_number_variable": {
                      "runAfter": {
                        "State_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_number",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    },
                    "State_details_variable": {
                      "runAfter": {
                        "Organization_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "state_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "phone_carrier_variable": {
                      "runAfter": {
                        "Phone_number_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_carrier",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "phone_country_variable": {
                      "runAfter": {
                        "phone_carrier_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_country",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "phone_geo_variable": {
                      "runAfter": {
                        "phone_country_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_geo",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "take_records": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "take_records",
                            "type": "array"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId8'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId8')]",
                "contentId": "[variables('_playbookContentId8')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By WHOIS Info",
            "description": "This playbook enriches hosts asscociated with an incident with By WHOIS information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId8')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Domain-WHOIS",
        "contentProductId": "[variables('_playbookcontentProductId8')]",
        "id": "[variables('_playbookcontentProductId8')]",
        "version": "[variables('playbookVersion8')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Email-C2-Attribution Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion9')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Email-C2-Attribution",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Accounts": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "Foreach_Account": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>C2 Attribution Information for Email: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{concat(variables('account_name'),variables('email_connector'),variables('account_upn_suffix'))}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\">Showing <strong>3</strong> records out of total<strong>@{variables('RecordsLength')} </strong> records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?email=@{concat(variables('account_name'),variables('email_connector'),variables('account_upn_suffix'))}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_C2_Attribution_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "Actor IPv4": "@items('For_each')?['actor_ipv4']",
                                      "C2 Domain": "@items('For_each')?['c2_domain']",
                                      "C2 IPv4": "@items('For_each')?['c2_ip']",
                                      "C2 URL": "@items('For_each')?['c2_url']",
                                      "DateTime": "@items('For_each')?['datetime']",
                                      "Email": "@items('For_each')?['email']",
                                      "Email Domain": "@items('For_each')?['email_domain']",
                                      "Referrer Domain": "@items('For_each')?['referrer_domain']",
                                      "Referrer IPv4": "@items('For_each')?['referrer_ipv4']",
                                      "Referrer URL": "@items('For_each')?['referrer_url']",
                                      "SHA256": "@items('For_each')?['sha256']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_JSon_Output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_JSon_Output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>C2 Attribution Information for Email: </strong></span><span style=\"font-size: 16px\"><strong>@{concat(variables('account_name'),variables('email_connector'),variables('account_upn_suffix'))}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_C2_Attribution_Information": {
                          "runAfter": {
                            "Set_account_suffix": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/c2attribution",
                            "queries": {
                              "indicator_type": "email",
                              "indicator_value": "@{concat(variables('account_name'),variables('email_connector'),variables('account_upn_suffix'))}"
                            }
                          }
                        },
                        "Set_account_suffix": {
                          "runAfter": {
                            "Set_accountname": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "account_upn_suffix",
                            "value": "@items('Foreach_Account')?['UPNSuffix']"
                          }
                        },
                        "Set_accountname": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "account_name",
                            "value": "@items('Foreach_Account')?['Name']"
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_C2_Attribution_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_C2_Attribution_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "email_connector": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    },
                    "account_name_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "account_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "account_upn_suffix_": {
                      "runAfter": {
                        "account_name_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "account_upn_suffix",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "email_connector": {
                      "runAfter": {
                        "account_upn_suffix_": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "email_connector",
                            "type": "string",
                            "value": "@"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId9'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId9')]",
                "contentId": "[variables('_playbookContentId9')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By C2 Attribution",
            "description": "This playbook enriches emails asscociated with an incident with By C2 Attribution information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Account"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId9')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Email-C2-Attribution",
        "contentProductId": "[variables('_playbookcontentProductId9')]",
        "id": "[variables('_playbookcontentProductId9')]",
        "version": "[variables('playbookVersion9')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Email-Dynamic-DNS Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion10')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Email-Dynamic-DNS",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Accountname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "account_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Accounts": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "Foreach_Accounts": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Dynamic DNS Information for Email: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{concat(variables('account_name'),variables('email_connector'),variables('account_suffix'))}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?email=@{concat(variables('account_name'),variables('email_connector'),variables('account_suffix'))}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Dynamic_DNS_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "A Record": "@items('For_each')?['a_record']",
                                      "Account": "@items('For_each')?['account']",
                                      "Created DateTime": "@items('For_each')?['created']",
                                      "Domain": "@items('For_each')?['domain']",
                                      "Domain Creator IP": "@items('For_each')?['domain_creator_ip']",
                                      "Email": "@items('For_each')?['email']",
                                      "IP Address": "@items('For_each')?['created_ip']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Dynamic DNS Information for Email: </strong></span><span style=\"font-size: 16px\"><strong>@{concat(variables('account_name'),variables('email_connector'),variables('account_suffix'))}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 16px\">No records found</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Dynamic_DNS_Information": {
                          "runAfter": {
                            "Set_account_vpn_suffix": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/dynamicdns",
                            "queries": {
                              "indicator_type": "email",
                              "indicator_value": "@{concat(variables('account_name'),variables('email_connector'),variables('account_suffix'))}"
                            }
                          }
                        },
                        "Set_Account_Name": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "account_name",
                            "value": "@items('Foreach_Accounts')?['Name']"
                          }
                        },
                        "Set_account_vpn_suffix": {
                          "runAfter": {
                            "Set_Account_Name": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "account_suffix",
                            "value": "@items('Foreach_Accounts')?['UPNSuffix']"
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Dynamic_DNS_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Dynamic_DNS_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "email_connector": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    },
                    "account_Suffix_Variable": {
                      "runAfter": {
                        "Accountname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "account_suffix",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "email_connector": {
                      "runAfter": {
                        "account_Suffix_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "email_connector",
                            "type": "string",
                            "value": "@"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId10'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId10')]",
                "contentId": "[variables('_playbookContentId10')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By Dynamic DNS",
            "description": "This playbook enriches emails asscociated with an incident with By Dynamic DNS information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Account"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId10')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Email-Dynamic-DNS",
        "contentProductId": "[variables('_playbookcontentProductId10')]",
        "id": "[variables('_playbookcontentProductId10')]",
        "version": "[variables('playbookVersion10')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName11')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Email-WHOIS Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion11')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Email-WHOIS",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Address_details_variable": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "address_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "City_details_variable": {
                      "runAfter": {
                        "Address_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "city_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Country_details_variable": {
                      "runAfter": {
                        "City_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "country_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Email_account_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "email_acount",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Email_details_varibale": {
                      "runAfter": {
                        "Country_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "emails",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Accounts": {
                      "runAfter": {
                        "phone_geo_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "Foreach_Accounts": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Whois Information for Email: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{concat(variables('email_acount'),variables('email_connector'),variables('email_upn_suffix'))}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\">Showing <strong>3</strong> records out of total<strong>@{variables('RecordsLength')} </strong> records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?email=@{concat(variables('email_acount'),variables('email_connector'),variables('email_upn_suffix'))}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "loop_through_the_reponse_object": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json_Output_01')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json_Output_02')"
                              }
                            },
                            "Set_jsonoutput_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json_Output_01",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "loop_through_the_reponse_object": {
                              "foreach": "@take(body('Get_Whois_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "runAfter": {
                                    "check_phone_object_length": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json_Output_01",
                                    "value": {
                                      "Domain": "@items('loop_through_the_reponse_object')?['domain']",
                                      "Domain 2TLD": "@items('loop_through_the_reponse_object')?['domain_2tld']",
                                      "Domain Created Datetime": "@items('loop_through_the_reponse_object')?['domain_created_datetime']",
                                      "Domain Expires Datetime": "@items('loop_through_the_reponse_object')?['domain_expires_datetime']",
                                      "Domain Updated Datetime": "@items('loop_through_the_reponse_object')?['domain_updated_datetime']",
                                      "Idn Name": "@items('loop_through_the_reponse_object')?['idn_name']",
                                      "Privacy Punch": "@items('loop_through_the_reponse_object')?['privacy_punch']",
                                      "Registrar": "@items('loop_through_the_reponse_object')?['registrar']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json_Output_02",
                                    "value": {
                                      "Address": "@join(variables('address_details'),',')",
                                      "City": "@join(variables('city_details'),',')",
                                      "Country": "@join(variables('country_details'),',')",
                                      "Email": "@join(variables('emails'),',')",
                                      "Nameserver": "@join(variables('nameserver_details'),',')",
                                      "Phone": "@variables('phone_number')",
                                      "Phone Carrier": "@variables('phone_carrier')",
                                      "Phone Country": "@variables('phone_country')",
                                      "Phone Geo": "@variables('phone_geo')"
                                    }
                                  }
                                },
                                "Set_city": {
                                  "runAfter": {
                                    "set_address": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "city_details",
                                    "value": "@items('loop_through_the_reponse_object')?['city']"
                                  }
                                },
                                "Set_country": {
                                  "runAfter": {
                                    "Set_city": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "country_details",
                                    "value": "@items('loop_through_the_reponse_object')?['country']"
                                  }
                                },
                                "Set_emails": {
                                  "runAfter": {
                                    "Set_country": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "emails",
                                    "value": "@items('loop_through_the_reponse_object')?['email']"
                                  }
                                },
                                "Set_nameserver": {
                                  "runAfter": {
                                    "Set_emails": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "nameserver_details",
                                    "value": "@items('loop_through_the_reponse_object')?['nameserver']"
                                  }
                                },
                                "check_phone_object_length": {
                                  "actions": {
                                    "Set_phone": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_number",
                                        "value": "@{items('loop_through_the_reponse_object')?['phone'][0]?['phone']}"
                                      }
                                    },
                                    "Set_phone_carrier": {
                                      "runAfter": {
                                        "Set_phone": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_carrier",
                                        "value": "@{items('loop_through_the_reponse_object')?['phone'][0]?['phone_info']?['carrier']}"
                                      }
                                    },
                                    "Set_phone_country": {
                                      "runAfter": {
                                        "Set_phone_carrier": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_country",
                                        "value": "@{items('loop_through_the_reponse_object')?['phone'][0]?['phone_info']?['country']}"
                                      }
                                    },
                                    "Set_phone_geo": {
                                      "runAfter": {
                                        "Set_phone_country": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_geo",
                                        "value": "@items('loop_through_the_reponse_object')?['phone'][0]?['phone_info']?['geo']"
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Set_nameserver": [
                                      "Succeeded"
                                    ]
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greater": [
                                          "@length(items('loop_through_the_reponse_object')?['phone'])",
                                          0
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "set_address": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "address_details",
                                    "value": "@items('loop_through_the_reponse_object')?['address']"
                                  }
                                }
                              },
                              "runAfter": {
                                "set_json_outout_2_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "set_json_outout_2_to_empty": {
                              "runAfter": {
                                "Set_jsonoutput_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json_Output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Whois Information for Email: </strong></span><span style=\"font-size: 16px\"><strong>@{concat(variables('email_acount'),variables('email_connector'),variables('email_upn_suffix'))}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Whois_Information": {
                          "runAfter": {
                            "Set_email_upn_suffix": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/whois",
                            "queries": {
                              "indicator_type": "email",
                              "indicator_value": "@{concat(variables('email_acount'),variables('email_connector'),variables('email_upn_suffix'))}"
                            }
                          }
                        },
                        "Set_accountname": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "email_acount",
                            "value": "@items('Foreach_Accounts')?['Name']"
                          }
                        },
                        "Set_email_upn_suffix": {
                          "runAfter": {
                            "Set_accountname": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "email_upn_suffix",
                            "value": "@items('Foreach_Accounts')?['UPNSuffix']"
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Whois_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Whois_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "take_records": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json_Output_01",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable_2": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json_Output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Nameserver_details_variable": {
                      "runAfter": {
                        "Email_details_varibale": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "nameserver_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Organization_details_variable": {
                      "runAfter": {
                        "Nameserver_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "organization_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Phone_number_variable": {
                      "runAfter": {
                        "State_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_number",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    },
                    "State_details_variable": {
                      "runAfter": {
                        "Organization_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "state_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "email_connector": {
                      "runAfter": {
                        "email_upn_suffix": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "email_connector",
                            "type": "string",
                            "value": "@"
                          }
                        ]
                      }
                    },
                    "email_upn_suffix": {
                      "runAfter": {
                        "Email_account_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "email_upn_suffix",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "phone_carrier_variable": {
                      "runAfter": {
                        "Phone_number_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_carrier",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "phone_country_variable": {
                      "runAfter": {
                        "phone_carrier_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_country",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "phone_geo_variable": {
                      "runAfter": {
                        "phone_country_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_geo",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "take_records": {
                      "runAfter": {
                        "email_connector": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "take_records",
                            "type": "array"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId11'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId11')]",
                "contentId": "[variables('_playbookContentId11')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion11')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By WHOIS",
            "description": "This playbook enriches emails asscociated with an incident with By WHOIS information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Account"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId11')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Email-WHOIS",
        "contentProductId": "[variables('_playbookcontentProductId11')]",
        "id": "[variables('_playbookcontentProductId11')]",
        "version": "[variables('playbookVersion11')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName12')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-FileHash-C2-Attribution Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion12')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-FileHash-C2-Attribution",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_FileHashes": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/filehash"
                      }
                    },
                    "Foreach_FileHash": {
                      "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>C2 Attribution Information for Hash: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_FileHash')?['Value']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\">Showing <strong>3</strong> records out of total<strong>@{variables('RecordsLength')} </strong> records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?hash=@{items('Foreach_FileHash')?['Value']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_C2_Attribution_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "Actor IPv4": "@items('For_each')?['actor_ipv4']",
                                      "C2 Domain": "@items('For_each')?['c2_domain']",
                                      "C2 IPv4": "@items('For_each')?['c2_ip']",
                                      "C2 URL": "@items('For_each')?['c2_url']",
                                      "DateTime": "@items('For_each')?['datetime']",
                                      "Email": "@items('For_each')?['email']",
                                      "Email Domain": "@items('For_each')?['email_domain']",
                                      "Referrer Domain": "@items('For_each')?['referrer_domain']",
                                      "Referrer IPv4": "@items('For_each')?['referrer_ipv4']",
                                      "Referrer URL": "@items('For_each')?['referrer_url']",
                                      "SHA256": "@items('For_each')?['sha256']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_JSon_Output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_JSon_Output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>C2 Attribution Information for Hash: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_FileHash')?['Value']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_C2_Attribution_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/c2attribution",
                            "queries": {
                              "indicator_type": "sha256",
                              "indicator_value": "@items('Foreach_FileHash')?['Value']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_C2_Attribution_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_C2_Attribution_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_FileHashes": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId12'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId12')]",
                "contentId": "[variables('_playbookContentId12')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion12')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By C2 Attribution",
            "description": "This playbook enriches file hashes asscociated with an incident with By C2 Attribution information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "FileHash"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId12')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-FileHash-C2-Attribution",
        "contentProductId": "[variables('_playbookcontentProductId12')]",
        "id": "[variables('_playbookcontentProductId12')]",
        "version": "[variables('playbookVersion12')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName13')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-FileHash-Malware-Information Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion13')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-FileHash-Malware-Information",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_FileHashes": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/filehash"
                      }
                    },
                    "Foreach_FileHash": {
                      "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Sample Malware Information for Hash: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_FileHash')?['Value']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Append_to_array_variable": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": {
                                  "avscan_score": "@body('Get_Malware_Sample_Information')?['avscan_score']",
                                  "md5": "@body('Get_Malware_Sample_Information')?['md5']",
                                  "sha1": "@body('Get_Malware_Sample_Information')?['sha1']",
                                  "sha256": "@body('Get_Malware_Sample_Information')?['sha256']",
                                  "sha512": "@body('Get_Malware_Sample_Information')?['sha512']"
                                }
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\">Showing <strong>3</strong> records out of total<strong>@{variables('RecordsLength')} </strong> records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?hash=@{items('Foreach_FileHash')?['Value']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "Append_to_array_variable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            }
                          },
                          "runAfter": {
                            "Get_Malware_Sample_Information": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Sample Malware Information for Hash: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_FileHash')?['Value']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@body('Get_Malware_Sample_Information')",
                                    ""
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Malware_Sample_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/sample/information",
                            "queries": {
                              "indicator_type": "hash",
                              "indicator_value": "@items('Foreach_FileHash')?['Value']"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_FileHashes": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId13'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId13')]",
                "contentId": "[variables('_playbookContentId13')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion13')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By Malware Information",
            "description": "This playbook enriches file hashes asscociated with an incident with by malware information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "FileHash"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId13')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-FileHash-Malware-Information",
        "contentProductId": "[variables('_playbookcontentProductId13')]",
        "id": "[variables('_playbookcontentProductId13')]",
        "version": "[variables('playbookVersion13')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName14')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-FileHash-OS-Indicator Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion14')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-FileHash-OS-Indicator",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_FileHashes": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/filehash"
                      }
                    },
                    "Foreach_FileHash": {
                      "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Open Source Indicators<br>\nInformation for File Hash: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_FileHash')?['Value']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?hash=@{items('Foreach_FileHash')?['Value']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_02')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Open_Source_Indicators_Information_SHA1'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "DateTime": "@items('For_each')?['datetime']",
                                      "Domain": "@items('For_each')?['domain']",
                                      "Domain 2TLD": "@items('For_each')?['domain_2tld']",
                                      "First Seen": "@items('For_each')?['first_seen']",
                                      "IPV4": "@items('For_each')?['ipv4']",
                                      "IPV6": "@items('For_each')?['ipv6']",
                                      "Last Seen": "@items('For_each')?['last_seen']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_02",
                                    "value": {
                                      "Context": "@items('For_each')?['context']",
                                      "MD5": "@items('For_each')?['md5']",
                                      "SHA1": "@items('For_each')?['sha1']",
                                      "SHA256": "@items('For_each')?['sha256']",
                                      "Source Name": "@items('For_each')?['source_name']",
                                      "Source URL": "@items('For_each')?['source_url']",
                                      "URI": "@items('For_each')?['uri']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_variable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_json_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable": {
                              "runAfter": {
                                "Set_json_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_4": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Open Source Indicators<br>\nInformation for File Hash: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_FileHash')?['Value']}</strong></span><span style=\"font-size: 16px\"><strong></strong></span><br>\nNo Records Found<br>\n<br>\n</p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Open_Source_Indicators_Information_SHA1": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight_1']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/os_indicators",
                            "queries": {
                              "indicator_type": "sha1",
                              "indicator_value": "@items('Foreach_FileHash')?['Value']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Open_Source_Indicators_Information_SHA1": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Open_Source_Indicators_Information_SHA1'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_FileHashes": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId14'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId14')]",
                "contentId": "[variables('_playbookContentId14')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion14')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By OS Indicator Information",
            "description": "This playbook enriches file hashes asscociated with an incident with by os indicator information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId14')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-FileHash-OS-Indicator",
        "contentProductId": "[variables('_playbookcontentProductId14')]",
        "id": "[variables('_playbookcontentProductId14')]",
        "version": "[variables('playbookVersion14')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName15')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-FileHash-SSL-Certificate Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion15')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-FileHash-SSL-Certificate",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_FileHashes": {
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/filehash"
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Foreach_FileHash": {
                      "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>SSL Certificate Information for IP: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_FileHash')?['Address']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_3')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_4')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_FileHash')?['Address']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_4": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_02')"
                              }
                            },
                            "Create_HTML_table_3": {
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_03')"
                              }
                            },
                            "Create_HTML_table_4": {
                              "runAfter": {
                                "Create_HTML_table_3": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_04')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_SSL_Certificate_Information')?['ssl_certs'],3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "City Name": "@items('For_each')?['geo']?['geo']?['city_name']",
                                      "Country ISO Code": "@items('For_each')?['geo']?['geo']?['country_iso_code']",
                                      "Country Name": "@items('For_each')?['geo']?['geo']?['country_name']",
                                      "IP Address": "@items('For_each')?['ip']",
                                      "Latitude": "@items('For_each')?['geo']?['geo']?['location_latitude']",
                                      "Longitude": "@items('For_each')?['geo']?['geo']?['location_longitude']",
                                      "Postal Code": "@items('For_each')?['geo']?['geo']?['postal_code']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_02",
                                    "value": {
                                      "ISP": "@items('For_each')?['geo']?['isp']?['isp']",
                                      "ISP organization": "@items('For_each')?['geo']?['isp']?['organization']",
                                      "The ASN of IP": "@items('For_each')?['geo']?['isp']?['autonomous_system_number']",
                                      "The ASO of IP": "@items('For_each')?['geo']?['isp']?['autonomous_system_organization']",
                                      "The IP": "@items('For_each')?['geo']?['isp']?['ip_address']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_3": {
                                  "runAfter": {
                                    "Append_to_array_variable_2": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_03",
                                    "value": {
                                      "cert_key": "@items('For_each')?['ssl_cert']?['cert_key']",
                                      "expire_date": "@items('For_each')?['ssl_cert']?['expire_date']",
                                      "issue_date": "@items('For_each')?['ssl_cert']?['issue_date']",
                                      "issuer_countryName": "@items('For_each')?['ssl_cert']?['issuer_commonName']",
                                      "issuer_localityName": "@items('For_each')?['ssl_cert']?['issuer_localityName']",
                                      "issuer_organizationName": "@items('For_each')?['ssl_cert']?['issuer_organizationName']",
                                      "issuer_stateOrProvinceName": "@items('For_each')?['ssl_cert']?['issuer_stateOrProvinceName']",
                                      "serial_number": "@items('For_each')?['ssl_cert']?['serial_number']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_4": {
                                  "runAfter": {
                                    "Append_to_array_variable_3": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_04",
                                    "value": {
                                      "sha1": "@items('For_each')?['ssl_cert']?['sha1']",
                                      "sha_256": "@items('For_each')?['ssl_cert']?['sha_256']",
                                      "sig_algo": "@items('For_each')?['ssl_cert']?['sig_algo']",
                                      "signature": "@items('For_each')?['ssl_cert']?['signature']",
                                      "ssl_version": "@items('For_each')?['ssl_cert']?['ssl_version']",
                                      "subject_commonName": "@items('For_each')?['ssl_cert']?['subject_commonName']",
                                      "subject_countryName": "@items('For_each')?['ssl_cert']?['subject_countryName']",
                                      "subject_localityName": "@items('For_each')?['ssl_cert']?['subject_localityName']",
                                      "subject_organizationName": "@items('For_each')?['ssl_cert']?['subject_organizationName']",
                                      "subject_stateOrProvinceName": "@items('For_each')?['ssl_cert']?['subject_stateOrProvinceName']",
                                      "timestamp": "@items('For_each')?['ssl_cert']?['timestamp']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_variable_3": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_json_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable": {
                              "runAfter": {
                                "Set_json_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable_2": {
                              "runAfter": {
                                "Set_variable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_03",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable_3": {
                              "runAfter": {
                                "Set_variable_2": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_04",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>SSL Certificate Information for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_FileHash')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_SSL_Certificate_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/ssl_certificate",
                            "queries": {
                              "indicator_type": "hash",
                              "indicator_value": "@items('Foreach_FileHash')?['Value']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_SSL_Certificate_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_SSL_Certificate_Information')?['ssl_certs'])"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_FileHashes": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_2": {
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_03",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_3": {
                      "runAfter": {
                        "Initialize_variable_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_04",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "Initialize_variable_3": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId15'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId15')]",
                "contentId": "[variables('_playbookContentId15')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion15')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By C2 Attribution Information",
            "description": "This playbook enriches file hashes asscociated with an incident with ssl_certificate information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId15')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-FileHash-SSL-Certificate",
        "contentProductId": "[variables('_playbookcontentProductId15')]",
        "id": "[variables('_playbookcontentProductId15')]",
        "version": "[variables('playbookVersion15')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName16')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-IP-C2-Attribution Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion16')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-IP-C2-Attribution",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Foreach_IP": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>C2 Attribution Information for IP: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_IP')?['Address']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\">Showing <strong>3</strong> records out of total<strong>@{variables('RecordsLength')} </strong> records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_IP')?['Address']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_C2_Attribution_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "Actor IPv4": "@items('For_each')?['actor_ipv4']",
                                      "C2 Domain": "@items('For_each')?['c2_domain']",
                                      "C2 IPv4": "@items('For_each')?['c2_ip']",
                                      "C2 URL": "@items('For_each')?['c2_url']",
                                      "DateTime": "@items('For_each')?['datetime']",
                                      "Email": "@items('For_each')?['email']",
                                      "Email Domain": "@items('For_each')?['email_domain']",
                                      "Referrer Domain": "@items('For_each')?['referrer_domain']",
                                      "Referrer IPv4": "@items('For_each')?['referrer_ipv4']",
                                      "Referrer URL": "@items('For_each')?['referrer_url']",
                                      "SHA256": "@items('For_each')?['sha256']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_JSon_Output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_JSon_Output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>C2 Attribution Information for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_IP')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_C2_Attribution_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/c2attribution",
                            "queries": {
                              "indicator_type": "ip",
                              "indicator_value": "@items('Foreach_IP')?['Address']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_C2_Attribution_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_C2_Attribution_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId16'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId16')]",
                "contentId": "[variables('_playbookContentId16')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion16')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By C2 Attribution Information",
            "description": "This playbook enriches ip addresses asscociated with an incident with by c2 attribution information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId16')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-IP-C2-Attribution",
        "contentProductId": "[variables('_playbookcontentProductId16')]",
        "id": "[variables('_playbookcontentProductId16')]",
        "version": "[variables('playbookVersion16')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName17')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-IP-Dynamic-DNS Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion17')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-IP-Dynamic-DNS",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Foreach_IPS": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Dynamic DNS Information for IP: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_IPS')?['Address']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_IPS')?['Address']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Dynamic_DNS_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "A Record": "@items('For_each')?['a_record']",
                                      "Account": "@items('For_each')?['account']",
                                      "Created DateTime": "@items('For_each')?['created']",
                                      "Domain": "@items('For_each')?['domain']",
                                      "Domain Creator IP": "@items('For_each')?['domain_creator_ip']",
                                      "Email": "@items('For_each')?['email']",
                                      "IP Address": "@items('For_each')?['created_ip']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Dynamic DNS Information for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_IPS')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Dynamic_DNS_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/dynamicdns",
                            "queries": {
                              "indicator_type": "ip",
                              "indicator_value": "@items('Foreach_IPS')?['Address']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Dynamic_DNS_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Dynamic_DNS_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId17'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId17')]",
                "contentId": "[variables('_playbookContentId17')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion17')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By Dynamic DNS Information",
            "description": "This playbook enriches ip addresses asscociated with an incident with by dynamic dns information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId17')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-IP-Dynamic-DNS",
        "contentProductId": "[variables('_playbookcontentProductId17')]",
        "id": "[variables('_playbookcontentProductId17')]",
        "version": "[variables('playbookVersion17')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName18')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-IP-Geo-Location Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion18')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-IP-Geo-Location",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Foreach_IPs": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Geo Location Information for IP: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_IPs')?['Address']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_IPs')?['Address']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Mobile_Geolocation_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "DateTime": "@items('For_each')?['datetime']",
                                      "Device User Agent": "@items('For_each')?['device_user_agent']",
                                      "Geo Country Alpha2": "@items('For_each')?['geo_country_alpha_2']",
                                      "Geo Horizontal Accuracy": "@items('For_each')?['geo_horizontal_accuracy']",
                                      "IPV4": "@items('For_each')?['ipv4']",
                                      "IPV6": "@items('For_each')?['ipv6']",
                                      "Latitude": "@items('For_each')?['latitude']",
                                      "Longitude": "@items('For_each')?['longitude']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_Output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_Output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Condition_2": {
                                "actions": {
                                  "Add_comment_to_incident_(V3)_2": {
                                    "runAfter": {
                                      "Condition_3": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                      "body": {
                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                        "message": "<p><span style=\"font-size: 16px\"><strong>Geo Location Information for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_IPs')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong></strong></span><br>\n@{body('Create_HTML_table_2')}<br>\n@{variables('link_text')}</p>"
                                      },
                                      "host": {
                                        "connection": {
                                          "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                        }
                                      },
                                      "method": "post",
                                      "path": "/Incidents/Comment"
                                    }
                                  },
                                  "Condition_3": {
                                    "actions": {
                                      "Set_variable_3": {
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "link_text",
                                          "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_IPs')?['Address']}</strong></span></p>"
                                        }
                                      }
                                    },
                                    "runAfter": {
                                      "Create_HTML_table_2": [
                                        "Succeeded"
                                      ]
                                    },
                                    "expression": {
                                      "and": [
                                        {
                                          "greater": [
                                            "@variables('RecordsLength')",
                                            3
                                          ]
                                        }
                                      ]
                                    },
                                    "type": "If"
                                  },
                                  "Create_HTML_table_2": {
                                    "runAfter": {
                                      "For_each_2": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                      "format": "HTML",
                                      "from": "@variables('Json Output')"
                                    }
                                  },
                                  "For_each_2": {
                                    "foreach": "@take(body('Get_Mobile_Geolocation_Information_2'),3)",
                                    "actions": {
                                      "Append_to_array_variable_2": {
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                          "name": "Json Output",
                                          "value": {
                                            "DateTime": "@items('For_each_2')?['datetime']",
                                            "Device User Agent": "@items('For_each_2')?['device_user_agent']",
                                            "Geo Country Alpha2": "@items('For_each_2')?['geo_country_alpha_2']",
                                            "Geo Horizontal Accuracy": "@items('For_each_2')?['geo_horizontal_accuracy']",
                                            "IPV4": "@items('For_each_2')?['ipv4']",
                                            "IPV6": "@items('For_each_2')?['ipv6']",
                                            "Latitude": "@items('For_each_2')?['latitude']",
                                            "Longitude": "@items('For_each_2')?['longitude']"
                                          }
                                        }
                                      }
                                    },
                                    "runAfter": {
                                      "Set_variable_2": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "Foreach"
                                  },
                                  "Set_variable_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Json Output",
                                      "value": "[variables('TemplateEmptyArray')]"
                                    }
                                  }
                                },
                                "runAfter": {
                                  "Set_variable": [
                                    "Succeeded"
                                  ]
                                },
                                "else": {
                                  "actions": {
                                    "Add_comment_to_incident_(V3)_3": {
                                      "type": "ApiConnection",
                                      "inputs": {
                                        "body": {
                                          "incidentArmId": "@triggerBody()?['object']?['id']",
                                          "message": "<p><span style=\"font-size: 16px\"><strong>Geo Location Information for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_IPs')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong></strong></span><br>\nNo recors Found<br>\n</p>"
                                        },
                                        "host": {
                                          "connection": {
                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                          }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                      }
                                    }
                                  }
                                },
                                "expression": {
                                  "and": [
                                    {
                                      "greater": [
                                        "@variables('RecordsLength')",
                                        0
                                      ]
                                    }
                                  ]
                                },
                                "type": "If"
                              },
                              "Get_Mobile_Geolocation_Information_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                                    }
                                  },
                                  "method": "get",
                                  "path": "/device_geo",
                                  "queries": {
                                    "indicator_type": "ipv6",
                                    "indicator_value": "@items('Foreach_IPs')?['Address']"
                                  }
                                }
                              },
                              "Set_variable": {
                                "runAfter": {
                                  "Get_Mobile_Geolocation_Information_2": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "RecordsLength",
                                  "value": "@length(body('Get_Mobile_Geolocation_Information_2'))"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Mobile_Geolocation_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/device_geo",
                            "queries": {
                              "indicator_type": "ipv4",
                              "indicator_value": "@items('Foreach_IPs')?['Address']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Mobile_Geolocation_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Mobile_Geolocation_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId18'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId18')]",
                "contentId": "[variables('_playbookContentId18')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion18')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By Geo Location Information",
            "description": "This playbook enriches ip addresses asscociated with an incident with by geo location information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId18')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-IP-Geo-Location",
        "contentProductId": "[variables('_playbookcontentProductId18')]",
        "id": "[variables('_playbookcontentProductId18')]",
        "version": "[variables('playbookVersion18')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName19')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-IP-Sample-Data Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion19')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-IP-Sample-Data",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Foreach_Hosts": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Malware sample records for IP: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_Hosts')?['Address']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_Hosts')?['Address']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Malware_Sample_Record_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "DateTime": "@items('For_each')?['datetime']",
                                      "Domain": "@items('For_each')?['domain']",
                                      "IPV4": "@items('For_each')?['ipv4']",
                                      "IPV6": "@items('For_each')?['ipv6']",
                                      "MD5": "@items('For_each')?['md5']",
                                      "SHA1": "@items('For_each')?['sha1']",
                                      "SHA256": "@items('For_each')?['sha256']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Malware sample records for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_Hosts')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Malware_Sample_Record_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/sample",
                            "queries": {
                              "indicator_type": "ipv4",
                              "indicator_value": "@items('Foreach_Hosts')?['Address']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Malware_Sample_Record_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Malware_Sample_Record_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId19'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId19')]",
                "contentId": "[variables('_playbookContentId19')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion19')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By Sample Data Information",
            "description": "This playbook enriches ip addresses asscociated with an incident with by sample information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId19')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-IP-Sample-Data",
        "contentProductId": "[variables('_playbookcontentProductId19')]",
        "id": "[variables('_playbookcontentProductId19')]",
        "version": "[variables('playbookVersion19')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName20')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-IP-OS-Indicators Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion20')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-IP-OS-Indicators",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Foreach_IPs": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Open Source Indicators<br>\nInformation for IP: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_IPs')?['Address']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_IPs')}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_02')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Open_Source_Indicators_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "DateTime": "@items('For_each')?['datetime']",
                                      "Domain": "@items('For_each')?['domain']",
                                      "Domain 2TLD": "@items('For_each')?['domain_2tld']",
                                      "First Seen": "@items('For_each')?['first_seen']",
                                      "IPV4": "@items('For_each')?['ipv4']",
                                      "IPV6": "@items('For_each')?['ipv6']",
                                      "Last Seen": "@items('For_each')?['last_seen']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_02",
                                    "value": {
                                      "Context": "@items('For_each')?['context']",
                                      "MD5": "@items('For_each')?['md5']",
                                      "SHA1": "@items('For_each')?['sha1']",
                                      "SHA256": "@items('For_each')?['sha256']",
                                      "Source Name": "@items('For_each')?['source_name']",
                                      "Source URL": "@items('For_each')?['source_url']",
                                      "URI": "@items('For_each')?['uri']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_variable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_json_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable": {
                              "runAfter": {
                                "Set_json_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Open Source Indicators<br>\nInformation for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_IPs')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Open_Source_Indicators_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/os_indicators",
                            "queries": {
                              "indicator_type": "ipv4",
                              "indicator_value": "@items('Foreach_IPs')?['Address']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Open_Source_Indicators_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Open_Source_Indicators_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId20'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId20')]",
                "contentId": "[variables('_playbookContentId20')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion20')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By OS Indicator Information",
            "description": "This playbook enriches ip addresses asscociated with an incident with by os indicator information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId20')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-IP-OS-Indicators",
        "contentProductId": "[variables('_playbookcontentProductId20')]",
        "id": "[variables('_playbookcontentProductId20')]",
        "version": "[variables('playbookVersion20')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName21')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-IP-Passive-DNS Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion21')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-IP-Passive-DNS",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Foreach_IPs": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Passive DNS Information for IP: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_IPs')?['Address']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_3')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_IPs')?['Address']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_3": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_02')"
                              }
                            },
                            "Create_HTML_table_3": {
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_03')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Passive_DNS_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "Count": "@items('For_each')?['count']",
                                      "Domain": "@items('For_each')?['domain']",
                                      "First Seen": "@items('For_each')?['first_seen']",
                                      "IPV4": "@items('For_each')?['ipv4']",
                                      "Last Seen": "@items('For_each')?['last_seen']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_02",
                                    "value": {
                                      "City Name": "@items('For_each')?['ip']?['geo']?['city_name']",
                                      "Country ISO Code": "@items('For_each')?['ip']?['geo']?['country_iso_code']",
                                      "Country Name": "@items('For_each')?['ip']?['geo']?['country_name']",
                                      "Latitude": "@items('For_each')?['ip']?['geo']?['location_latitude']",
                                      "Longitude": "@items('For_each')?['ip']?['geo']?['location_longitude']",
                                      "Postal Code": "@items('For_each')?['ip']?['geo']?['postal_code']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_3": {
                                  "runAfter": {
                                    "Append_to_array_variable_2": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_03",
                                    "value": {
                                      "ISP": "@items('For_each')?['ip']?['isp']?['isp']",
                                      "ISP organization": "@items('For_each')?['ip']?['isp']?['organization']",
                                      "The ASN of IP": "@items('For_each')?['ip']?['isp']?['autonomous_system_number']",
                                      "The ASO of IP": "@items('For_each')?['ip']?['isp']?['autonomous_system_organization']",
                                      "The IP": "@items('For_each')?['ip']?['isp']?['ip_address']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_output_03_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_output_02_to_empty": {
                              "runAfter": {
                                "Set_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_output_03_to_empty": {
                              "runAfter": {
                                "Set_output_02_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_03",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Passive DNS Information for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_IPs')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Passive_DNS_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/passivedns",
                            "queries": {
                              "indicator_type": "ipv4",
                              "indicator_value": "@items('Foreach_IPs')?['Address']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Passive_DNS_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Passive_DNS_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_2": {
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_03",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "Initialize_variable_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId21'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId21')]",
                "contentId": "[variables('_playbookContentId21')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion21')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By Passive DNS Information",
            "description": "This playbook enriches ip addresses asscociated with an incident with by passivedns information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId21')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-IP-Passive-DNS",
        "contentProductId": "[variables('_playbookcontentProductId21')]",
        "id": "[variables('_playbookcontentProductId21')]",
        "version": "[variables('playbookVersion21')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName22')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-IP-Passive-Hash Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion22')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-IP-Passive-Hash",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Foreach_IPs": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Passive Hash Information for IP: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_IPs')?['Address']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_IPs')?['Address']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Passive_Hash_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "Domain": "@items('For_each')?['domain']",
                                      "MD5 Count": "@items('For_each')?['md5_count']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_Output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_Output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Passive Hash Information for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_IPs')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Passive_Hash_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/passivehash",
                            "queries": {
                              "indicator_type": "ipv4",
                              "indicator_value": "@items('Foreach_IPs')?['Address']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Passive_Hash_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Passive_Hash_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId22'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId22')]",
                "contentId": "[variables('_playbookContentId22')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion22')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By Passive Hash Information",
            "description": "This playbook enriches ip addresses asscociated with an incident with by passivehash information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId22')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-IP-Passive-Hash",
        "contentProductId": "[variables('_playbookcontentProductId22')]",
        "id": "[variables('_playbookcontentProductId22')]",
        "version": "[variables('playbookVersion22')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName23')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-IP-SinkHole Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion23')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-IP-SinkHole",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Foreach_IPs": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>SinkHole Information for IP: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_IPs')?['Address']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_IPs')?['Address']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_Sinkhole_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "Count": "@items('For_each')?['count']",
                                      "Country Name": "@items('For_each')?['country_name']",
                                      "Data Port": "@items('For_each')?['data_port']",
                                      "DatetTime": "@items('For_each')?['datetime']",
                                      "IPV4": "@items('For_each')?['ipv4']",
                                      "Last Seen": "@items('For_each')?['last_seen']",
                                      "Organization Name": "@items('For_each')?['organization_name']",
                                      "Sink Source": "@items('For_each')?['sink_source']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_Output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_Output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Sinkhole Information for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_IPs')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Sinkhole_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/sinkhole",
                            "queries": {
                              "indicator_type": "ipv4",
                              "indicator_value": "@items('Foreach_IPs')?['Address']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Sinkhole_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Sinkhole_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId23'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId23')]",
                "contentId": "[variables('_playbookContentId23')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion23')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By SinkHole Information",
            "description": "This playbook enriches ip addresses asscociated with an incident with by sinkhole information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId23')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-IP-SinkHole",
        "contentProductId": "[variables('_playbookcontentProductId23')]",
        "id": "[variables('_playbookcontentProductId23')]",
        "version": "[variables('playbookVersion23')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName24')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-IP-SSL-Certificate Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion24')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-IP-SSL-Certificate",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "DNSname_Variable": {
                      "runAfter": {
                        "Hostname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "dns_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Domain_name_variable": {
                      "runAfter": {
                        "DNSname_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "domain_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      }
                    },
                    "Foreach_IPs": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>SSL Certificate Information for IP: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_IPs')?['Address']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_3')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_4')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\"><strong>Showing 3 records out of toal@{variables('RecordsLength')} records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?ip=@{items('Foreach_IPs')?['Address']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_4": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "For_each": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json Output')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_02')"
                              }
                            },
                            "Create_HTML_table_3": {
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_03')"
                              }
                            },
                            "Create_HTML_table_4": {
                              "runAfter": {
                                "Create_HTML_table_3": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('json_output_04')"
                              }
                            },
                            "For_each": {
                              "foreach": "@take(body('Get_SSL_Certificate_Information')?['ssl_certs'],3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json Output",
                                    "value": {
                                      "City Name": "@items('For_each')?['geo']?['geo']?['city_name']",
                                      "Country ISO Code": "@items('For_each')?['geo']?['geo']?['country_iso_code']",
                                      "Country Name": "@items('For_each')?['geo']?['geo']?['country_name']",
                                      "IP Address": "@items('For_each')?['ip']",
                                      "Latitude": "@items('For_each')?['geo']?['geo']?['location_latitude']",
                                      "Longitude": "@items('For_each')?['geo']?['geo']?['location_longitude']",
                                      "Postal Code": "@items('For_each')?['geo']?['geo']?['postal_code']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_02",
                                    "value": {
                                      "ISP": "@items('For_each')?['geo']?['isp']?['isp']",
                                      "ISP organization": "@items('For_each')?['geo']?['isp']?['organization']",
                                      "The ASN of IP": "@items('For_each')?['geo']?['isp']?['autonomous_system_number']",
                                      "The ASO of IP": "@items('For_each')?['geo']?['isp']?['autonomous_system_organization']",
                                      "The IP": "@items('For_each')?['geo']?['isp']?['ip_address']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_3": {
                                  "runAfter": {
                                    "Append_to_array_variable_2": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_03",
                                    "value": {
                                      "cert_key": "@items('For_each')?['ssl_cert']?['cert_key']",
                                      "expire_date": "@items('For_each')?['ssl_cert']?['expire_date']",
                                      "issue_date": "@items('For_each')?['ssl_cert']?['issue_date']",
                                      "issuer_countryName": "@items('For_each')?['ssl_cert']?['issuer_commonName']",
                                      "issuer_localityName": "@items('For_each')?['ssl_cert']?['issuer_localityName']",
                                      "issuer_organizationName": "@items('For_each')?['ssl_cert']?['issuer_organizationName']",
                                      "issuer_stateOrProvinceName": "@items('For_each')?['ssl_cert']?['issuer_stateOrProvinceName']",
                                      "serial_number": "@items('For_each')?['ssl_cert']?['serial_number']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_4": {
                                  "runAfter": {
                                    "Append_to_array_variable_3": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "json_output_04",
                                    "value": {
                                      "sha1": "@items('For_each')?['ssl_cert']?['sha1']",
                                      "sha_256": "@items('For_each')?['ssl_cert']?['sha_256']",
                                      "sig_algo": "@items('For_each')?['ssl_cert']?['sig_algo']",
                                      "signature": "@items('For_each')?['ssl_cert']?['signature']",
                                      "ssl_version": "@items('For_each')?['ssl_cert']?['ssl_version']",
                                      "subject_commonName": "@items('For_each')?['ssl_cert']?['subject_commonName']",
                                      "subject_countryName": "@items('For_each')?['ssl_cert']?['subject_countryName']",
                                      "subject_localityName": "@items('For_each')?['ssl_cert']?['subject_localityName']",
                                      "subject_organizationName": "@items('For_each')?['ssl_cert']?['subject_organizationName']",
                                      "subject_stateOrProvinceName": "@items('For_each')?['ssl_cert']?['subject_stateOrProvinceName']",
                                      "timestamp": "@items('For_each')?['ssl_cert']?['timestamp']"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Set_variable_3": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "Set_json_output_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json Output",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable": {
                              "runAfter": {
                                "Set_json_output_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable_2": {
                              "runAfter": {
                                "Set_variable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_03",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "Set_variable_3": {
                              "runAfter": {
                                "Set_variable_2": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "json_output_04",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>SSL Certificate Information for IP: </strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_IPs')?['Address']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_SSL_Certificate_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/ssl_certificate",
                            "queries": {
                              "indicator_type": "ip",
                              "indicator_value": "@items('Foreach_IPs')?['Address']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_SSL_Certificate_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_SSL_Certificate_Information')?['ssl_certs'])"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Hostname_Variable": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "host_name",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_variable": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_2": {
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_03",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_3": {
                      "runAfter": {
                        "Initialize_variable_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "json_output_04",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "Domain_name_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json Output",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "Initialize_variable_3": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId24'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId24')]",
                "contentId": "[variables('_playbookContentId24')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion24')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By SSL Certificate Information",
            "description": "This playbook enriches ip addresses asscociated with an incident with by ssl certificate information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "IP"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId24')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-IP-SSL-Certificate",
        "contentProductId": "[variables('_playbookcontentProductId24')]",
        "id": "[variables('_playbookcontentProductId24')]",
        "version": "[variables('playbookVersion24')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName25')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "HYASInsight-Phonenumber-Whois Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion25')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "HYASInsight-Phonenumber-Whois",
              "type": "string",
              "metadata": {
                "description": "Name of the Logic App/Playbook"
              }
            }
          },
          "variables": {
            "HYASInsightConnectionName": "[[concat('hyasinsight-', parameters('PlaybookName'))]",
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('HYASInsightConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('HYASInsightConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Disabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Address_details_variable": {
                      "runAfter": {
                        "Link_Text": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "address_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "City_details_variable": {
                      "runAfter": {
                        "Address_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "city_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Country_details_variable": {
                      "runAfter": {
                        "City_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "country_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Email_details_varibale": {
                      "runAfter": {
                        "Country_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "emails",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Entities_-_Get_Accounts": {
                      "runAfter": {
                        "phone_geo_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "Foreach_Accounts": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Check_records_exists": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Condition": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 16px\"><strong>Whois Information for Phone Number: </strong></span><span style=\"font-size: 16px\"></span><span style=\"font-size: 16px\">@{items('Foreach_Accounts')?['Name']}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 16px\"><br>\n</span><span style=\"font-size: 16px\">@{variables('link_text')}</span><span style=\"font-size: 16px\"></span></p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Condition": {
                              "actions": {
                                "Set_LinkText": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "link_text",
                                    "value": "<p><span style=\"font-size: 12px\">Showing <strong>3</strong> records out of total<strong>@{variables('RecordsLength')} </strong> records</strong></span>\n<span style=\"font-size: 14px\"><strong>For detailed information, see https://insight.hyas.com/static/details?phone=@{items('Foreach_Accounts')?['Name']}</strong></span></p>"
                                  }
                                }
                              },
                              "runAfter": {
                                "Create_HTML_table_2": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_LinkText_2": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "link_text",
                                      "value": " "
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@variables('RecordsLength')",
                                      3
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "loop_through_the_reponse_object": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json_Output_01')"
                              }
                            },
                            "Create_HTML_table_2": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@variables('Json_Output_02')"
                              }
                            },
                            "Set_jsonoutput_to_empty": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json_Output_01",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            },
                            "loop_through_the_reponse_object": {
                              "foreach": "@take(body('Get_Whois_Information'),3)",
                              "actions": {
                                "Append_to_array_variable": {
                                  "runAfter": {
                                    "check_phone_object_length": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json_Output_01",
                                    "value": {
                                      "Domain": "@items('loop_through_the_reponse_object')?['domain']",
                                      "Domain 2TLD": "@items('loop_through_the_reponse_object')?['domain_2tld']",
                                      "Domain Created Datetime": "@items('loop_through_the_reponse_object')?['domain_created_datetime']",
                                      "Domain Expires Datetime": "@items('loop_through_the_reponse_object')?['domain_expires_datetime']",
                                      "Domain Updated Datetime": "@items('loop_through_the_reponse_object')?['domain_updated_datetime']",
                                      "Idn Name": "@items('loop_through_the_reponse_object')?['idn_name']",
                                      "Privacy Punch": "@items('loop_through_the_reponse_object')?['privacy_punch']",
                                      "Registrar": "@items('loop_through_the_reponse_object')?['registrar']"
                                    }
                                  }
                                },
                                "Append_to_array_variable_2": {
                                  "runAfter": {
                                    "Append_to_array_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "Json_Output_02",
                                    "value": {
                                      "Address": "@join(variables('address_details'),',')",
                                      "City": "@join(variables('city_details'),',')",
                                      "Country": "@join(variables('country_details'),',')",
                                      "Email": "@join(variables('emails'),',')",
                                      "Nameserver": "@join(variables('nameserver_details'),',')",
                                      "Phone": "@variables('phone_number')",
                                      "Phone Carrier": "@variables('phone_carrier')",
                                      "Phone Country": "@variables('phone_country')",
                                      "Phone Geo": "@variables('phone_geo')"
                                    }
                                  }
                                },
                                "Set_city": {
                                  "runAfter": {
                                    "set_address": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "city_details",
                                    "value": "@items('loop_through_the_reponse_object')?['city']"
                                  }
                                },
                                "Set_country": {
                                  "runAfter": {
                                    "Set_city": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "country_details",
                                    "value": "@items('loop_through_the_reponse_object')?['country']"
                                  }
                                },
                                "Set_emails": {
                                  "runAfter": {
                                    "Set_country": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "emails",
                                    "value": "@items('loop_through_the_reponse_object')?['email']"
                                  }
                                },
                                "Set_nameserver": {
                                  "runAfter": {
                                    "Set_emails": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "nameserver_details",
                                    "value": "@items('loop_through_the_reponse_object')?['nameserver']"
                                  }
                                },
                                "check_phone_object_length": {
                                  "actions": {
                                    "Set_phone": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_number",
                                        "value": "@{items('loop_through_the_reponse_object')?['phone'][0]?['phone']}"
                                      }
                                    },
                                    "Set_phone_carrier": {
                                      "runAfter": {
                                        "Set_phone": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_carrier",
                                        "value": "@{items('loop_through_the_reponse_object')?['phone'][0]?['phone_info']?['carrier']}"
                                      }
                                    },
                                    "Set_phone_country": {
                                      "runAfter": {
                                        "Set_phone_carrier": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_country",
                                        "value": "@{items('loop_through_the_reponse_object')?['phone'][0]?['phone_info']?['country']}"
                                      }
                                    },
                                    "Set_phone_geo": {
                                      "runAfter": {
                                        "Set_phone_country": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "phone_geo",
                                        "value": "@items('loop_through_the_reponse_object')?['phone'][0]?['phone_info']?['geo']"
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Set_nameserver": [
                                      "Succeeded"
                                    ]
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greater": [
                                          "@length(items('loop_through_the_reponse_object')?['phone'])",
                                          0
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "set_address": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "address_details",
                                    "value": "@items('loop_through_the_reponse_object')?['address']"
                                  }
                                }
                              },
                              "runAfter": {
                                "set_json_outout_2_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "set_json_outout_2_to_empty": {
                              "runAfter": {
                                "Set_jsonoutput_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Json_Output_02",
                                "value": "[variables('TemplateEmptyArray')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Set_records_length": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Whois Information for Phone:</strong></span><span style=\"font-size: 16px\"><strong>@{items('Foreach_Accounts')?['Name']}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 14px\">No records found.</span></p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@variables('RecordsLength')",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Whois_Information": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['hyasinsight']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/whois",
                            "queries": {
                              "indicator_type": "phone",
                              "indicator_value": "@items('Foreach_Accounts')?['Name']"
                            }
                          }
                        },
                        "Set_records_length": {
                          "runAfter": {
                            "Get_Whois_Information": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "RecordsLength",
                            "value": "@length(body('Get_Whois_Information'))"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "JSON_Output_Variable": {
                      "runAfter": {
                        "take_records": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json_Output_01",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "JSON_Output_Variable_2": {
                      "runAfter": {
                        "JSON_Output_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Json_Output_02",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Link_Text": {
                      "runAfter": {
                        "Response_Length_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "link_text",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Nameserver_details_variable": {
                      "runAfter": {
                        "Email_details_varibale": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "nameserver_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Organization_details_variable": {
                      "runAfter": {
                        "Nameserver_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "organization_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Phone_number_variable": {
                      "runAfter": {
                        "State_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_number",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Response_Length_Variable": {
                      "runAfter": {
                        "JSON_Output_Variable_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RecordsLength",
                            "type": "integer",
                            "value": 0
                          }
                        ]
                      }
                    },
                    "State_details_variable": {
                      "runAfter": {
                        "Organization_details_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "state_details",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "phone_carrier_variable": {
                      "runAfter": {
                        "Phone_number_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_carrier",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "phone_country_variable": {
                      "runAfter": {
                        "phone_carrier_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_country",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "phone_geo_variable": {
                      "runAfter": {
                        "phone_country_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "phone_geo",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "take_records": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "take_records",
                            "type": "array"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "hyasinsight": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('HYASInsightConnectionName'))]",
                        "connectionName": "[[variables('HYASInsightConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/hyasinsight')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId25'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId25')]",
                "contentId": "[variables('_playbookContentId25')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion25')]",
                "source": {
                  "kind": "Solution",
                  "name": "HYAS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "HYAS",
                  "tier": "Partner",
                  "link": "https://www.hyas.com/contact"
                }
              }
            }
          ],
          "metadata": {
            "title": "HYASInsight Enrich Incident By WHOIS Info",
            "description": "This playbook enriches phone numbers asscociated with an incident with WHOIS information.",
            "prerequisites": "https://www.hyas.com/contact to request a trial key.",
            "postDeploymentSteps": [
              "None"
            ],
            "lastUpdateTime": "2023-02-21T00:00:00Z",
            "entities": [
              "Account"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId25')]",
        "contentKind": "Playbook",
        "displayName": "HYASInsight-Phonenumber-Whois",
        "contentProductId": "[variables('_playbookcontentProductId25')]",
        "id": "[variables('_playbookcontentProductId25')]",
        "version": "[variables('playbookVersion25')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "HYAS",
        "publisherDisplayName": "HYAS",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/HYAS/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p><a href=\"https://www.hyas.com/hyas-insight\">HYAS Insight</a> is a threat investigation and attribution solution that uses exclusive data sources and non-traditional mechanisms to improve visibility and productivity for analysts, researchers, and investigators while increasing the accuracy of findings. HYAS Insight connects attack instances and campaigns to billions of indicators of compromise to deliver insights and visibility. With an easy-to-use user interface, transforms, and API access, HYAS Insight combines rich threat data into a powerful research and attribution solution. HYAS Insight is complemented by the HYAS Intelligence team that helps organizations to better understand the nature of the threats they face on a daily basis.</p>\n<p><strong>Playbooks:</strong> 25</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Hyas.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "HYAS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "HYAS",
          "tier": "Partner",
          "link": "https://www.hyas.com/contact"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Domain-C2-Attribution-Data')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Domain-Dynamic-DNS-Data')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Domain-Malware-Sample-Data')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Domain-OS-Indicator-Data')]",
              "version": "[variables('playbookVersion4')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Domain-Passive-Hash-Data')]",
              "version": "[variables('playbookVersion5')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Domain-SSL-Certificate-Data')]",
              "version": "[variables('playbookVersion6')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Domain-Whois-Current-Data')]",
              "version": "[variables('playbookVersion7')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Domain-Whois-Data')]",
              "version": "[variables('playbookVersion8')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Email-C2-Attribution-Data')]",
              "version": "[variables('playbookVersion9')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Email-Dynamic-DNS-Data')]",
              "version": "[variables('playbookVersion10')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-Email-Whois-Data')]",
              "version": "[variables('playbookVersion11')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-File-Hash-C2-Attribution-Data')]",
              "version": "[variables('playbookVersion12')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-File-Hash-Malware-Information-Data')]",
              "version": "[variables('playbookVersion13')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-File-Hash-OS-Indicator-Data')]",
              "version": "[variables('playbookVersion14')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-File-Hash-SSL-Certificate-Data')]",
              "version": "[variables('playbookVersion15')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-IP-C2-Attribution-Data')]",
              "version": "[variables('playbookVersion16')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-IP-Dynamic-DNS-Data')]",
              "version": "[variables('playbookVersion17')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-IP-Geo-Location-Data')]",
              "version": "[variables('playbookVersion18')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-IP-Malware-Sample-Data')]",
              "version": "[variables('playbookVersion19')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-IP-OS-Indicator-Data')]",
              "version": "[variables('playbookVersion20')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-IP-Passive-DNS-Data')]",
              "version": "[variables('playbookVersion21')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-IP-Passive-Hash-Data')]",
              "version": "[variables('playbookVersion22')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-IP-Sinkhole-Data')]",
              "version": "[variables('playbookVersion23')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-IP-SSL-Certificate-Data')]",
              "version": "[variables('playbookVersion24')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_HYAS-Insight-PhoneNumber-Whois-Data')]",
              "version": "[variables('playbookVersion25')]"
            }
          ]
        },
        "firstPublishDate": "2021-10-20",
        "providers": [
          "HYAS"
        ],
        "categories": {
          "domains": [
            "Security - Threat Intelligence",
            "Security - Automation (SOAR)"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
