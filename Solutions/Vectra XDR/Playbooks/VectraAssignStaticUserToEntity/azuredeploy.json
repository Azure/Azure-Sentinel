{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Vectra Assign Static User To Entity",
        "description": "This playbook will assign a predefined user to an entity in Vectra when the status of an incident changes from 'New' to 'Active'.",
        "prerequisites": [
            "1. The Vectra XDR data connector should be configured to create alerts and generate an incident based on entity data in Microsoft Sentinel.",
            "2. Obtain keyvault name and tenantId where client credentials are stored using which access token will be generated.",
            "a. Create a Key Vault with unique name",
            "b. Go to Keyvaults → <your keyvault> → Overview and copy DirectoryID which will be used as tenantId",
            "NOTE: Make sure the Permission model in the Access Configuration of Keyvault is selected to the Vault access policy. If not then change it to 'Vault access policy'",
            "3. Make sure that VectraGenerateAccessToken playbook is deployed before deploying VectraAssignStaticUserToEntity playbook."
        ],
        "postDeployment": [
            "**a. Authorize connections**",
            "Once deployment is complete, authorize each connection.",
            "1. Go to your logic app → API connections → Select keyvault connection resource",
            "2. Go to General → edit API connection",
            "3. Click Authorize",
            "4. Sign in",
            "5. Click Save",
            "6. Repeat steps for other connections",
            "**b. Add Access policy in Keyvault**",
            "Add access policy for the playbook's managed identity and authorized user to read, and write secrets of key vault.",
            "1. Go to logic app → <your logic app> → identity → System assigned Managed identity and copy Object (principal) ID.",
            "2. Go to keyvaults → <your keyvault> → Access policies → create.",
            "3. Select all keys & secrets permissions. Click next.",
            "4. In the principal section, search by copied object ID. Click next.",
            "5. Click review + create.",
            "6. Repeat the above step 2 to 5 to add access policy for the user account using which connection is authorized.",
            "**c. Configurations in Microsoft Sentinel**",
            "1. In Microsoft sentinel, analytical rule should be configured to trigger an incident based on data ingested from Vectra. Incident should have Entity mapping.",
            "2. In Microsoft Sentinel, Configure the automation rules to trigger the playbook.",
            "a. Go to Microsoft Sentinel → <your workspace> → Automation",
            "b. Click on Create → Automation rule",
            "c. Provide name for your rule",
            "d. Select Trigger as When incident is updated.",
            "e. In Conditions, select Status changed from 'New' and status changed to 'Active'.",
            "f. In Actions dropdown select Run playbook",
            "g. In second dropdown select your deployed playbook",
            "h. Click on Apply",
            "i. Save the Automation rule.",
            "NOTE: If you want to manually run the playbook on a particular incident follow the below steps:",
            "a. Go to Microsoft Sentinel → <your workspace> → Incidents",
            "b. Select an incident.",
            "c. In the right pane, click on Actions, and from the dropdown select the 'Run Playbook' option.",
            "d. click on the Run button beside this playbook."
        ],
        "entities": ["Account", "Host"],
        "tags": ["Vectra", "Assign", "Static", "User"],
        "support": {
            "tier": "community",
            "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author": {
            "name": "Vectra"
        },
        "lastUpdateTime": "2024-09-02T00:00:00.000Z"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "VectraAssignStaticUserToEntity",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please do not keep 'PlaybookName' parameter empty, else you will receive validation failure"
            }
        },
        "KeyVaultName": {
            "type": "string",
            "minLength": 1
        },
        "TenantId": {
            "type": "string",
            "minLength": 1
        },
        "BaseURL": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter baseurl for your vectra account.(e.g. https://host.portal.vectra.ai)"
            }
        },
        "UserId": {
            "type": "int",
            "metadata": {
                "description": "Enter a user id which will be assign to entity "
            }
        },
        "GenerateAccessCredPlaybookName": {
            "type": "string",
            "metadata": {
                "description": "Playbook name that you have given while deployment of playbook VectraGenerateAccessToken(e.g.VectraGenerateAccessToken)"
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', trim(parameters('PlaybookName')))]",
        "KeyvaultConnectionName": "[concat('Keyvault-', trim(parameters('PlaybookName')))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Condition_To_Decide_Assign_Entity_Type": {
                            "actions": {
                                "Set_Assign_Entity_Type_for_Host": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "assign_entity_type",
                                        "value": "assign_host_id"
                                    }
                                }
                            },
                            "runAfter": {
                                "Set_Entity_ID": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_Assign_Entity_Type_for_Account": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "assign_entity_type",
                                            "value": "assign_account_id"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('entity_type')",
                                            "host"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Decide_Assign_Or_Reassign_User_To_Vectra_Entity": {
                            "actions": {
                                "Until_Retry_Count_is_Zero_For_Assigning_User_To_Vectra_Entity": {
                                    "actions": {
                                        "Condition_To_Verify_User_Assigned_To_Entity_Successfully": {
                                            "actions": {
                                                "Set_Retry_Count_As_Zero_For_Assigning_User_To_Entity": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "retry_count",
                                                        "value": 0
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "HTTP_Request_To_Assign_Static_User_To_Entity_In_Vectra": [
                                                    "Succeeded",
                                                    "TimedOut",
                                                    "Failed"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Condition_To_Generate_New_Access_Token_For_Assigning_User": {
                                                        "actions": {
                                                            "Condition_To_Verify_Access_Token_Generated_Successfully_For_Assigning_User": {
                                                                "actions": {
                                                                    "Decrement_Retry_Count_For_Assigning_User": {
                                                                        "runAfter": {},
                                                                        "type": "DecrementVariable",
                                                                        "inputs": {
                                                                            "name": "retry_count",
                                                                            "value": 1
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {
                                                                    "GenerateAccessTokenVectra": [
                                                                        "Succeeded",
                                                                        "TimedOut",
                                                                        "Failed"
                                                                    ]
                                                                },
                                                                "else": {
                                                                    "actions": {
                                                                        "Decrement_Retry_Count_For_Error_While_Generating_Access_Token_For_Assigning_User": {
                                                                            "runAfter": {
                                                                                "Set_Error_True_While_Generating_Access_Token_For_Assigning_User": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "DecrementVariable",
                                                                            "inputs": {
                                                                                "name": "retry_count",
                                                                                "value": 1
                                                                            }
                                                                        },
                                                                        "Set_Error_True_While_Generating_Access_Token_For_Assigning_User": {
                                                                            "runAfter": {},
                                                                            "type": "SetVariable",
                                                                            "inputs": {
                                                                                "name": "access_token_generate_error",
                                                                                "value": "@true"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "equals": [
                                                                                "@body('GenerateAccessTokenVectra')?['status']",
                                                                                "success"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            },
                                                            "GenerateAccessTokenVectra": {
                                                                "runAfter": {},
                                                                "type": "Workflow",
                                                                "inputs": {
                                                                    "host": {
                                                                        "triggerName": "manual",
                                                                        "workflow": {
                                                                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/',trim(parameters('GenerateAccessCredPlaybookName')))]"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "else": {
                                                            "actions": {
                                                                "Set_Error_True_While_Assigning_User_To_Vectra_Entity": {
                                                                    "runAfter": {},
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "user_add_error",
                                                                        "value": "@true"
                                                                    }
                                                                },
                                                                "Set_Retry_Count_As_Zero_For_Error_While_Assigning_User_To_Vectra_Entity": {
                                                                    "runAfter": {
                                                                        "Set_Error_True_While_Assigning_User_To_Vectra_Entity": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "retry_count",
                                                                        "value": 0
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@outputs('HTTP_Request_To_Assign_Static_User_To_Entity_In_Vectra')['statusCode']",
                                                                        401
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@outputs('HTTP_Request_To_Assign_Static_User_To_Entity_In_Vectra')['statusCode']",
                                                            201
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Get_Access_Token_For_Assigning_User_To_Entity": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/secrets/@{encodeURIComponent('Vectra-Access-Token')}/value"
                                            },
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "inputs",
                                                        "outputs"
                                                    ]
                                                }
                                            }
                                        },
                                        "HTTP_Request_To_Assign_Static_User_To_Entity_In_Vectra": {
                                            "runAfter": {
                                                "Get_Access_Token_For_Assigning_User_To_Entity": [
                                                    "Succeeded",
                                                    "Failed"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "body": {
                                                    "@variables('assign_entity_type')": "@int(variables('entity_id'))",
                                                    "assign_to_user_id": "@variables('user_id')"
                                                },
                                                "headers": {
                                                    "Authorization": "Bearer @{body('Get_Access_Token_For_Assigning_User_To_Entity')?['value']}",
                                                    "Content-Type": "application/json"
                                                },
                                                "method": "POST",
                                                "uri": "@{variables('base_url')}/api/@{variables('api_version')}/assignments"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": "@equals(variables('retry_count'), 0)",
                                    "limit": {
                                        "timeout": "PT1H"
                                    },
                                    "type": "Until"
                                }
                            },
                            "runAfter": {
                                "Set_Retry_Count_For_Assigning_User_To_Vectra_Entity": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Until_Retry_Count_is_Zero_For_Reassigning_User_To_Vectra_Entity": {
                                        "actions": {
                                            "Condition_To_Verify_User_Reassigned_To_Entity_Successfully": {
                                                "actions": {
                                                    "Set_Retry_Count_As_Zero_For_Reassigning_User_To_Entity": {
                                                        "runAfter": {},
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "retry_count",
                                                            "value": 0
                                                        }
                                                    }
                                                },
                                                "runAfter": {
                                                    "HTTP_Request_To_Reassign_Static_User_To_Entity_In_Vectra": [
                                                        "Succeeded",
                                                        "TimedOut",
                                                        "Failed"
                                                    ]
                                                },
                                                "else": {
                                                    "actions": {
                                                        "Condition_To_Generate_New_Access_Token_For_Reassigning_User": {
                                                            "actions": {
                                                                "Condition_To_Verify_Access_Token_Generated_Successfully_For_Reassigning_User": {
                                                                    "actions": {
                                                                        "Decrement_Retry_Count_For_Reassigning_User": {
                                                                            "runAfter": {},
                                                                            "type": "DecrementVariable",
                                                                            "inputs": {
                                                                                "name": "retry_count",
                                                                                "value": 1
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "GenerateAccessTokenVectra_4": [
                                                                            "Succeeded",
                                                                            "TimedOut",
                                                                            "Failed"
                                                                        ]
                                                                    },
                                                                    "else": {
                                                                        "actions": {
                                                                            "Decrement_Retry_Count_For_Error_While_Generating_Token_For_Reassigning_User": {
                                                                                "runAfter": {
                                                                                    "Set_Error_True_While_Generating_Access_Token_For_Reassigning_User": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "DecrementVariable",
                                                                                "inputs": {
                                                                                    "name": "retry_count",
                                                                                    "value": 1
                                                                                }
                                                                            },
                                                                            "Set_Error_True_While_Generating_Access_Token_For_Reassigning_User": {
                                                                                "runAfter": {},
                                                                                "type": "SetVariable",
                                                                                "inputs": {
                                                                                    "name": "access_token_generate_error",
                                                                                    "value": "@true"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@body('GenerateAccessTokenVectra_4')?['status']",
                                                                                    "success"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "GenerateAccessTokenVectra_4": {
                                                                    "runAfter": {},
                                                                    "type": "Workflow",
                                                                    "inputs": {
                                                                        "host": {
                                                                            "triggerName": "manual",
                                                                            "workflow": {
                                                                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/',trim(parameters('GenerateAccessCredPlaybookName')))]"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "else": {
                                                                "actions": {
                                                                    "Set_Error_True_While_Reassigning_User_To_Vectra_Entity": {
                                                                        "runAfter": {},
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "user_add_error",
                                                                            "value": "@true"
                                                                        }
                                                                    },
                                                                    "Set_Retry_Count_As_Zero_For_Error_While_Reassigning_User_To_Vectra_Entity": {
                                                                        "runAfter": {
                                                                            "Set_Error_True_While_Reassigning_User_To_Vectra_Entity": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "retry_count",
                                                                            "value": 0
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@outputs('HTTP_Request_To_Reassign_Static_User_To_Entity_In_Vectra')['statusCode']",
                                                                            401
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "equals": [
                                                                "@outputs('HTTP_Request_To_Reassign_Static_User_To_Entity_In_Vectra')['statusCode']",
                                                                200
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "Get_Access_Token_For_Reassigning_User_To_Entity": {
                                                "runAfter": {},
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                        }
                                                    },
                                                    "method": "get",
                                                    "path": "/secrets/@{encodeURIComponent('Vectra-Access-Token')}/value"
                                                },
                                                "runtimeConfiguration": {
                                                    "secureData": {
                                                        "properties": [
                                                            "inputs",
                                                            "outputs"
                                                        ]
                                                    }
                                                }
                                            },
                                            "HTTP_Request_To_Reassign_Static_User_To_Entity_In_Vectra": {
                                                "runAfter": {
                                                    "Get_Access_Token_For_Reassigning_User_To_Entity": [
                                                        "Succeeded",
                                                        "Failed"
                                                    ]
                                                },
                                                "type": "Http",
                                                "inputs": {
                                                    "body": {
                                                        "@variables('assign_entity_type')": "@int(variables('entity_id'))",
                                                        "assign_to_user_id": "@variables('user_id')"
                                                    },
                                                    "headers": {
                                                        "Authorization": "Bearer @{body('Get_Access_Token_For_Reassigning_User_To_Entity')?['value']}",
                                                        "Content-Type": "application/json"
                                                    },
                                                    "method": "PUT",
                                                    "uri": "@{variables('base_url')}/api/@{variables('api_version')}/assignments/@{variables('assignment_id')}"
                                                }
                                            }
                                        },
                                        "runAfter": {},
                                        "expression": "@equals(variables('retry_count'), 0)",
                                        "limit": {
                                            "timeout": "PT1H"
                                        },
                                        "type": "Until"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('assignment_id')",
                                            -1
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Fetch_Associated_Entity_Data_Based_On_Entity_Type": {
                            "actions": {
                                "Until_Retry_Count_is_Zero_For_Fetching_Associated_Host_Data": {
                                    "actions": {
                                        "Condition_To_Verify_Host_Data_Fetched_Successfully": {
                                            "actions": {
                                                "Condition_To_Verify_If_The_Host_Entity_Does_Not_Have_An_Open_Assignment": {
                                                    "actions": {},
                                                    "runAfter": {
                                                        "Parse_JSON_For_Associated_Host_Entity_Data": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Set_Assignment_ID_For_Host_Entity": {
                                                                "runAfter": {},
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "assignment_id",
                                                                    "value": "@body('Parse_JSON_For_Associated_Host_Entity_Data')?['assignment']?['id']"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@body('Parse_JSON_For_Associated_Host_Entity_Data')?['assignment']",
                                                                    "@null"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Parse_JSON_For_Associated_Host_Entity_Data": {
                                                    "runAfter": {},
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('HTTP_Request_To_Fetch_Associated_Host_Entity_Data')",
                                                        "schema": {
                                                            "properties": {
                                                                "account_access_history": {
                                                                    "items": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "active_traffic": {
                                                                    "type": "boolean"
                                                                },
                                                                "assigned_date": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "assigned_to": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "assignment": {
                                                                    "properties": {
                                                                        "account_id": {
                                                                            "type": [
                                                                                "integer",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "assigned_by": {
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "username": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "assigned_to": {
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "username": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "type": [
                                                                                "object",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "date_assigned": {
                                                                            "type": "string"
                                                                        },
                                                                        "date_resolved": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "events": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "actor": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "assignment_id": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "context": {
                                                                                        "properties": {
                                                                                            "entity_c_score": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "entity_t_score": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "from": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "to": {
                                                                                                "type": "integer"
                                                                                            }
                                                                                        },
                                                                                        "type": [
                                                                                            "object",
                                                                                            "null"
                                                                                        ]
                                                                                    },
                                                                                    "datetime": {
                                                                                        "type": [
                                                                                            "string",
                                                                                            "null"
                                                                                        ]
                                                                                    },
                                                                                    "event_type": {
                                                                                        "type": [
                                                                                            "string",
                                                                                            "null"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "assignment_id",
                                                                                    "actor",
                                                                                    "event_type",
                                                                                    "datetime",
                                                                                    "context"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": [
                                                                                "array",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "host_id": {
                                                                            "type": [
                                                                                "integer"
                                                                            ]
                                                                        },
                                                                        "id": {
                                                                            "type": "integer"
                                                                        },
                                                                        "outcome": {
                                                                            "type": "null"
                                                                        },
                                                                        "resolved_by": {
                                                                            "type": "null"
                                                                        },
                                                                        "triaged_detections": {
                                                                            "properties": {},
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": [
                                                                        "object",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "c_score": {
                                                                    "type": "integer"
                                                                },
                                                                "campaign_summaries": {},
                                                                "certainty": {
                                                                    "type": "integer"
                                                                },
                                                                "detection_profile": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "detection_set": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "detection_summaries": {
                                                                    "items": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "edrs": {},
                                                                "groups": {
                                                                    "items": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "has_active_traffic": {
                                                                    "type": "boolean"
                                                                },
                                                                "has_custom_model": {
                                                                    "type": "boolean"
                                                                },
                                                                "has_shell_knocker_learnings": {
                                                                    "type": "boolean"
                                                                },
                                                                "host_artifact_set": {},
                                                                "host_luid": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "host_session_luids": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "ip": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "is_key_asset": {
                                                                    "type": "boolean"
                                                                },
                                                                "is_targeting_key_asset": {
                                                                    "type": "boolean"
                                                                },
                                                                "key_asset": {
                                                                    "type": "boolean"
                                                                },
                                                                "last_detection_timestamp": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "last_modified": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "last_seen": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "last_source": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "name": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "note": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "note_modified_by": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "note_modified_timestamp": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "notes": {
                                                                    "items": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "past_assignments": {
                                                                    "items": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "previous_ips": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "privilege_category": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "privilege_level": {
                                                                    "type": [
                                                                        "integer",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "probable_owner": {},
                                                                "roles": {},
                                                                "sensor": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "sensor_name": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "service_access_history": {
                                                                    "items": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "severity": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "shell_knocker": {},
                                                                "state": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "suspicious_admin_learnings": {
                                                                    "properties": {},
                                                                    "type": "object"
                                                                },
                                                                "t_score": {
                                                                    "type": "integer"
                                                                },
                                                                "tags": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "targets_key_asset": {
                                                                    "type": "boolean"
                                                                },
                                                                "threat": {
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "Set_Retry_Count_As_Zero_For_Host_Entity": {
                                                    "runAfter": {
                                                        "Condition_To_Verify_If_The_Host_Entity_Does_Not_Have_An_Open_Assignment": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "retry_count",
                                                        "value": 0
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "HTTP_Request_To_Fetch_Associated_Host_Entity_Data": [
                                                    "Succeeded",
                                                    "TimedOut",
                                                    "Failed"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Condition_To_Generate_New_Access_Token_For_Associated_Host_Entity": {
                                                        "actions": {
                                                            "Condition_To_Verify_Access_Token_Generated_Successfully_For_Host_Entity": {
                                                                "actions": {
                                                                    "Decrement_Retry_Count_For_Host_Entity": {
                                                                        "runAfter": {},
                                                                        "type": "DecrementVariable",
                                                                        "inputs": {
                                                                            "name": "retry_count",
                                                                            "value": 1
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {
                                                                    "GenerateAccessTokenVectra_2": [
                                                                        "Succeeded",
                                                                        "TimedOut",
                                                                        "Failed"
                                                                    ]
                                                                },
                                                                "else": {
                                                                    "actions": {
                                                                        "Decrement_Retry_Count_For_Error_While_Generating_Token_For_Host_Entity": {
                                                                            "runAfter": {
                                                                                "Set_Error_True_While_Generating_Access_Token_For_Host_Entity": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "DecrementVariable",
                                                                            "inputs": {
                                                                                "name": "retry_count",
                                                                                "value": 1
                                                                            }
                                                                        },
                                                                        "Set_Error_True_While_Generating_Access_Token_For_Host_Entity": {
                                                                            "runAfter": {},
                                                                            "type": "SetVariable",
                                                                            "inputs": {
                                                                                "name": "access_token_generate_error",
                                                                                "value": "@true"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "equals": [
                                                                                "@body('GenerateAccessTokenVectra_2')?['status']",
                                                                                "success"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            },
                                                            "GenerateAccessTokenVectra_2": {
                                                                "runAfter": {},
                                                                "type": "Workflow",
                                                                "inputs": {
                                                                    "host": {
                                                                        "triggerName": "manual",
                                                                        "workflow": {
                                                                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/',trim(parameters('GenerateAccessCredPlaybookName')))]"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "else": {
                                                            "actions": {
                                                                "Set_Host_Entity_Data_Fetch_Error_True": {
                                                                    "runAfter": {},
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "fetch_error",
                                                                        "value": "@true"
                                                                    }
                                                                },
                                                                "Set_Retry_Count_As_Zero_For_Host_Entity_Data_Fetch_Error": {
                                                                    "runAfter": {
                                                                        "Set_Host_Entity_Data_Fetch_Error_True": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "retry_count",
                                                                        "value": 0
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@outputs('HTTP_Request_To_Fetch_Associated_Host_Entity_Data')['statusCode']",
                                                                        401
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@outputs('HTTP_Request_To_Fetch_Associated_Host_Entity_Data')['statusCode']",
                                                            200
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Get_Access_Token_For_Host_Entity": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/secrets/@{encodeURIComponent('Vectra-Access-Token')}/value"
                                            },
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "inputs",
                                                        "outputs"
                                                    ]
                                                }
                                            }
                                        },
                                        "HTTP_Request_To_Fetch_Associated_Host_Entity_Data": {
                                            "runAfter": {
                                                "Get_Access_Token_For_Host_Entity": [
                                                    "Succeeded",
                                                    "Failed"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "headers": {
                                                    "Authorization": "Bearer @{body('Get_Access_Token_For_Host_Entity')?['value']}"
                                                },
                                                "method": "GET",
                                                "uri": "@{variables('base_url')}/api/@{variables('api_version')}/hosts/@{int(variables('entity_id'))}"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": "@equals(variables('retry_count'), 0)",
                                    "limit": {
                                        "timeout": "PT1H"
                                    },
                                    "type": "Until"
                                }
                            },
                            "runAfter": {
                                "Condition_To_Decide_Assign_Entity_Type": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Until_Retry_Count_is_Zero_For_Fetching_Associated_Account_Data": {
                                        "actions": {
                                            "Condition_To_Verify_Account_Data_Fetched_Successfully": {
                                                "actions": {
                                                    "Condition_To_Verify_If_The_Account_Entity_Does_Not_Have_An_Open_Assignment": {
                                                        "actions": {},
                                                        "runAfter": {
                                                            "Parse_JSON_For_Associated_Account_Entity_Data": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "else": {
                                                            "actions": {
                                                                "Set_Assignment_ID_For_Account_Entity": {
                                                                    "runAfter": {},
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "assignment_id",
                                                                        "value": "@body('Parse_JSON_For_Associated_Account_Entity_Data')?['assignment']?['id']"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@body('Parse_JSON_For_Associated_Account_Entity_Data')?['assignment']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    },
                                                    "Parse_JSON_For_Associated_Account_Entity_Data": {
                                                        "runAfter": {},
                                                        "type": "ParseJson",
                                                        "inputs": {
                                                            "content": "@body('HTTP_Request_To_Fetch_Associated_Account_Entity_Data')",
                                                            "schema": {
                                                                "properties": {
                                                                    "account_type": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "assignment": {
                                                                        "properties": {
                                                                            "account_id": {
                                                                                "type": [
                                                                                    "integer",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "assigned_by": {
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "username": {
                                                                                        "type": [
                                                                                            "string",
                                                                                            "null"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "type": [
                                                                                    "object",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "assigned_to": {
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "username": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": [
                                                                                    "object",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "date_assigned": {
                                                                                "type": "string"
                                                                            },
                                                                            "date_resolved": {
                                                                                "type": [
                                                                                    "string",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "events": {
                                                                                "items": {
                                                                                    "properties": {},
                                                                                    "type": "object"
                                                                                },
                                                                                "type": [
                                                                                    "array",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "host_id": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": [
                                                                                    "array",
                                                                                    "integer",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "id": {
                                                                                "type": "integer"
                                                                            },
                                                                            "outcome": {
                                                                                "type": "null"
                                                                            },
                                                                            "resolved_by": {
                                                                                "type": "null"
                                                                            },
                                                                            "triaged_detections": {
                                                                                "properties": {},
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": [
                                                                            "object",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "certainty": {
                                                                        "type": "integer"
                                                                    },
                                                                    "data_source": {
                                                                        "properties": {},
                                                                        "type": [
                                                                            "object",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "detection_set": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "detection_summaries": {
                                                                        "items": {
                                                                            "properties": {},
                                                                            "type": "object"
                                                                        },
                                                                        "type": [
                                                                            "array",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "last_detection_timestamp": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "note": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "note_modified_by": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "note_modified_timestamp": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "notes": {
                                                                        "items": {
                                                                            "properties": {},
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "past_assignments": {
                                                                        "items": {
                                                                            "properties": {},
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "privilege_category": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "privilege_level": {
                                                                        "type": [
                                                                            "integer",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "probable_home": {},
                                                                    "sensors": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": [
                                                                            "array",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "severity": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "state": {
                                                                        "type": "string"
                                                                    },
                                                                    "subaccounts": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": [
                                                                            "array",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "tags": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "threat": {
                                                                        "type": "integer"
                                                                    },
                                                                    "url": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "Set_Retry_Count_As_Zero_For_Account_Entity": {
                                                        "runAfter": {
                                                            "Condition_To_Verify_If_The_Account_Entity_Does_Not_Have_An_Open_Assignment": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "retry_count",
                                                            "value": 0
                                                        }
                                                    }
                                                },
                                                "runAfter": {
                                                    "HTTP_Request_To_Fetch_Associated_Account_Entity_Data": [
                                                        "Succeeded",
                                                        "Failed",
                                                        "TimedOut"
                                                    ]
                                                },
                                                "else": {
                                                    "actions": {
                                                        "Condition_To_Generate_New_Access_Token_For_Associated_Account_Entity": {
                                                            "actions": {
                                                                "Condition_To_Verify_Access_Token_Generated_Successfully_For_Account_Entity": {
                                                                    "actions": {
                                                                        "Decrement_Retry_Count_For_Account_Entity": {
                                                                            "runAfter": {},
                                                                            "type": "DecrementVariable",
                                                                            "inputs": {
                                                                                "name": "retry_count",
                                                                                "value": 1
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "GenerateAccessTokenVectra_3": [
                                                                            "Succeeded",
                                                                            "TimedOut",
                                                                            "Failed"
                                                                        ]
                                                                    },
                                                                    "else": {
                                                                        "actions": {
                                                                            "Decrement_Retry_Count_For_Error_While_Generating_Token_For_Account_Entity": {
                                                                                "runAfter": {
                                                                                    "Set_Error_True_While_Generating_Access_Token_For_Account_Entity": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "DecrementVariable",
                                                                                "inputs": {
                                                                                    "name": "retry_count",
                                                                                    "value": 1
                                                                                }
                                                                            },
                                                                            "Set_Error_True_While_Generating_Access_Token_For_Account_Entity": {
                                                                                "runAfter": {},
                                                                                "type": "SetVariable",
                                                                                "inputs": {
                                                                                    "name": "access_token_generate_error",
                                                                                    "value": "@true"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@body('GenerateAccessTokenVectra_3')?['status']",
                                                                                    "success"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "GenerateAccessTokenVectra_3": {
                                                                    "runAfter": {},
                                                                    "type": "Workflow",
                                                                    "inputs": {
                                                                        "host": {
                                                                            "triggerName": "manual",
                                                                            "workflow": {
                                                                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/',trim(parameters('GenerateAccessCredPlaybookName')))]"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "else": {
                                                                "actions": {
                                                                    "Set_Account_Entity_Data_Fetch_Error_True": {
                                                                        "runAfter": {},
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "fetch_error",
                                                                            "value": "@true"
                                                                        }
                                                                    },
                                                                    "Set_Retry_Count_As_Zero_For_Account_Entity_Data_Fetch_Error": {
                                                                        "runAfter": {
                                                                            "Set_Account_Entity_Data_Fetch_Error_True": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "retry_count",
                                                                            "value": 0
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@outputs('HTTP_Request_To_Fetch_Associated_Account_Entity_Data')['statusCode']",
                                                                            401
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "equals": [
                                                                "@outputs('HTTP_Request_To_Fetch_Associated_Account_Entity_Data')['statusCode']",
                                                                200
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "Get_Access_Token_For_Account_Entity": {
                                                "runAfter": {},
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                        }
                                                    },
                                                    "method": "get",
                                                    "path": "/secrets/@{encodeURIComponent('Vectra-Access-Token')}/value"
                                                },
                                                "runtimeConfiguration": {
                                                    "secureData": {
                                                        "properties": [
                                                            "inputs",
                                                            "outputs"
                                                        ]
                                                    }
                                                }
                                            },
                                            "HTTP_Request_To_Fetch_Associated_Account_Entity_Data": {
                                                "runAfter": {
                                                    "Get_Access_Token_For_Account_Entity": [
                                                        "Succeeded",
                                                        "Failed"
                                                    ]
                                                },
                                                "type": "Http",
                                                "inputs": {
                                                    "headers": {
                                                        "Authorization": "Bearer @{body('Get_Access_Token_For_Account_Entity')?['value']}"
                                                    },
                                                    "method": "GET",
                                                    "uri": "@{variables('base_url')}/api/@{variables('api_version')}/accounts/@{int(variables('entity_id'))}"
                                                }
                                            }
                                        },
                                        "runAfter": {},
                                        "expression": "@equals(variables('retry_count'), 0)",
                                        "limit": {
                                            "timeout": "PT1H"
                                        },
                                        "type": "Until"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('entity_type')",
                                            "host"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Terminate_Execution_If_No_Alerts_Found": {
                            "actions": {
                                "Terminate_Due_To_No_Alerts_Found": {
                                    "runAfter": {},
                                    "type": "Terminate",
                                    "inputs": {
                                        "runError": {
                                            "code": "400",
                                            "message": "No Alerts found associated with this Incident."
                                        },
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_Error_False_While_Adding_User_To_Vectra_Entity": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(triggerBody()?['object']?['properties']?['Alerts'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Terminate_If_Error_Occurred_While_Assigning_User_To_Vectra_Entity": {
                            "actions": {
                                "Terminate_Due_To_Error_While_Assigning_User_To_Entity": {
                                    "runAfter": {},
                                    "type": "Terminate",
                                    "inputs": {
                                        "runError": {
                                            "message": "Error occurred while creating or updating assignment."
                                        },
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_To_Decide_Assign_Or_Reassign_User_To_Vectra_Entity": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('user_add_error')",
                                            "@true"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Terminate_If_Error_Occurred_While_Fetching_Associated_Entity_Data": {
                            "actions": {
                                "Terminate_Due_To_Error_Occurred_While_Fetching_Associated_Entity_Data": {
                                    "runAfter": {},
                                    "type": "Terminate",
                                    "inputs": {
                                        "runError": {
                                            "message": "Error occurred while fetching data of associated entity."
                                        },
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_To_Fetch_Associated_Entity_Data_Based_On_Entity_Type": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('fetch_error')",
                                            "@true"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Terminate_If_Error_Occurred_While_Generating_Access_Token": {
                            "actions": {
                                "Terminate_Due_To_Failure_While_Generating_Access_Token": {
                                    "runAfter": {},
                                    "type": "Terminate",
                                    "inputs": {
                                        "runError": {
                                            "code": "400",
                                            "message": "Error occurred while generating access token."
                                        },
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_To_Terminate_If_Error_Occurred_While_Assigning_User_To_Vectra_Entity": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('access_token_generate_error')",
                                            "@true"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Terminate_If_Error_Occurred_While_Generating_Token_For_Entity_Data": {
                            "actions": {
                                "Terminate_Due_To_Failure_While_Generating_Access_Token_For_Associated_Entity": {
                                    "runAfter": {},
                                    "type": "Terminate",
                                    "inputs": {
                                        "runError": {
                                            "code": "400",
                                            "message": "Error occurred while generating access token for associated entity."
                                        },
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_To_Terminate_If_Error_Occurred_While_Fetching_Associated_Entity_Data": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('access_token_generate_error')",
                                            "@true"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_API_Version": {
                            "runAfter": {
                                "Initialize_Base_URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "api_version",
                                        "type": "string",
                                        "value": "v3.3"
                                    }
                                ]
                            }
                        },
                        "Initialize_Assign_Entity_Type": {
                            "runAfter": {
                                "Initialize_User_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "assign_entity_type",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Assignment_ID": {
                            "runAfter": {
                                "Initialize_Retry_Count": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "assignment_id",
                                        "type": "integer",
                                        "value": -1
                                    }
                                ]
                            }
                        },
                        "Initialize_Base_URL": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "base_url",
                                        "type": "string",
                                        "value": "[trim(parameters('BaseURL'))]"
                                    }
                                ]
                            }
                        },
                        "Initialize_Data_Fetch_Error_False": {
                            "runAfter": {
                                "Initialize_Assignment_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "fetch_error",
                                        "type": "boolean",
                                        "value": "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_Entity_ID": {
                            "runAfter": {
                                "Initialize_Entity_Type": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "entity_id",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Entity_Type": {
                            "runAfter": {
                                "Initialize_Assign_Entity_Type": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "entity_type",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Error_False_While_Adding_User_To_Vectra_Entity": {
                            "runAfter": {
                                "Initialize_Error_False_While_Generating_Access_Token": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "user_add_error",
                                        "type": "boolean",
                                        "value": "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_Error_False_While_Generating_Access_Token": {
                            "runAfter": {
                                "Initialize_Data_Fetch_Error_False": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "access_token_generate_error",
                                        "type": "boolean",
                                        "value": "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_Retry_Count": {
                            "runAfter": {
                                "Initialize_Entity_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "retry_count",
                                        "type": "integer",
                                        "value": 2
                                    }
                                ]
                            }
                        },
                        "Initialize_User_ID": {
                            "runAfter": {
                                "Initialize_API_Version": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "user_id",
                                        "type": "integer",
                                        "value": "[parameters('UserId')]"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON_For_Custom_Entities_Mapping_Data": {
                            "runAfter": {
                                "Condition_To_Terminate_Execution_If_No_Alerts_Found": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['object']?['properties']?['Alerts'][0]?['properties']?['additionalData']?['Custom Details']",
                                "schema": {
                                    "properties": {
                                        "entity_id": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "entity_type": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "tags": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "attack_profile": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "entity_importance": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "ip_address": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "detection_id": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "mitre_techniques": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "entity_id",
                                        "entity_type"
                                    ],
                                    "type": "object"
                                }
                            }
                        },
                        "Set_Entity_ID": {
                            "runAfter": {
                                "Set_Entity_Type": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "entity_id",
                                "value": "@{split(body('Parse_JSON_For_Custom_Entities_Mapping_Data')?['entity_id'][0], '.')[0]}"
                            }
                        },
                        "Set_Entity_Type": {
                            "runAfter": {
                                "Parse_JSON_For_Custom_Entities_Mapping_Data": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "entity_type",
                                "value": "@{body('Parse_JSON_For_Custom_Entities_Mapping_Data')?['entity_type'][0]}"
                            }
                        },
                        "Set_Retry_Count_For_Assigning_User_To_Vectra_Entity": {
                            "runAfter": {
                                "Condition_To_Terminate_If_Error_Occurred_While_Generating_Token_For_Entity_Data": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "retry_count",
                                "value": 2
                            }
                        },
                        "Terminate_Due_To_Playbook_Triggered_From_Wrong_Incident": {
                            "runAfter": {
                                "Parse_JSON_For_Custom_Entities_Mapping_Data": [
                                    "Failed"
                                ]
                            },
                            "type": "Terminate",
                            "inputs": {
                                "runError": {
                                    "message": "Playbook Triggered from Wrong Incident."
                                },
                                "runStatus": "Failed"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName": "[variables('KeyvaultConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "hidden-SentinelTemplateName": "VectraAssignStaticUserToEntity",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('KeyvaultConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('KeyvaultConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
                },
                "parameterValues": {
                    "token:TenantId": "[trim(parameters('TenantId'))]",
                    "token:grantType": "code",
                    "vaultName": "[trim(parameters('KeyVaultName'))]"
                }
            }
        }
    ]
}
