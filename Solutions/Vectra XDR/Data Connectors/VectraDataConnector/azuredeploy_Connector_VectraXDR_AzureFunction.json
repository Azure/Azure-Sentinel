{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "FunctionName": {
            "defaultValue": "Vectra",
            "minLength": 1,
            "maxLength": 11,
            "type": "string"
        },
        "WorkspaceID": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Workspace ID of Log Analytics Workspace"
            }
        },
        "WorkspaceKey": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "Enter Primary Key of Log Analytics Workspace"
            }
        },
        "VectraBaseURL": {
            "type": "string",
            "metadata": {
                "description": "Enter BaseURL starting with \"https://\" followed by hostname (Example: https://[your-vectra-instance-name])"
            }
        },
        "VectraClientId - Health": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client ID for Health API Authentication"
            }
        },
        "VectraClientSecretKey - Health": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client Secret for Health API Authentication"
            }
        },
        "VectraClientId - Entity Scoring": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client ID for Entity Scoring API Authentication"
            }
        },
        "VectraClientSecretKey - Entity Scoring": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client Secret for Entity Scoring API Authentication"
            }
        },
        "VectraClientId - Detections": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client ID for Detection API Authentication"
            }
        },
        "VectraClientSecretKey - Detections": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client Secret for Detection API Authentication"
            }
        },
        "VectraClientId - Audits": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client ID for Audit API Authentication"
            }
        },
        "VectraClientSecretKey - Audits": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client Secret for Audit API Authentication"
            }
        },
        "VectraClientId - Lockdown": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client ID for Lockdown API Authentication"
            }
        },
        "VectraClientSecretKey - Lockdown": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client Secret for Lockdown API Authentication"
            }
        },
        "VectraClientId - Host-Entity": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client ID for Host Entity API Authentication"
            }
        },
        "VectraClientSecretKey - Host-Entity": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client Secret for Host Entity API Authentication"
            }
        },
        "VectraClientId - Account-Entity": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client ID for Account Entity API Authentication"
            }
        },
        "VectraClientSecretKey - Account-Entity": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Enter Vectra Client Secret for Account Entity API Authentication"
            }
        },
        "KeyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Enter name of keyvault where tokens will be stored"
            }
        },
        "AzureClientID": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Azure Client Id that you have created during app registration"
            }
        },
        "AzureClientSecret": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "Enter Azure Client Secret that you have created during creating the client secret"
            }
        },
        "TenantID":{
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Tenant Id of your Microsoft Entra Id"
            }
        },
        "StartTime": {
            "type": "string",
            "metadata": {
                "description": "Optional. Start Time for data collection in UTC (MM/DD/YYYY HH:MM:SS) Format (Ex: 07/19/2022 14:36:12). Default will be Current time."
            },
            "defaultValue": ""
        },
        "IncludeScoreDecrease": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Select true to include ingesting data for Entity Scoring when the score decreases. Default is false."
            }
        },
        "AuditsTableName": {
            "type": "string",
            "defaultValue": "Audits_Data",
            "metadata": {
                "description": "Enter name of the table used to store Audit logs. Default is 'Audits_Data'"
            },
            "allowedValues": [
                "Audits_Data"
            ]
        },
        "DetectionsTableName": {
            "type": "string",
            "defaultValue": "Detections_Data",
            "metadata": {
                "description": "Enter name of the table used to store Detection logs. Default is 'Detections_Data'"
            },
            "allowedValues": [
                "Detections_Data"
            ]
        },
        "EntityScoringTableName": {
            "type": "string",
            "defaultValue": "Entity_Scoring_Data",
            "metadata": {
                "description": "Enter name of the table used to store Entity Scoring logs. Default is 'Entity_Scoring_Data'"
            },
            "allowedValues": [
                "Entity_Scoring_Data"
            ]
        },
        "LockdownTableName": {
            "type": "string",
            "defaultValue": "Lockdown_Data",
            "metadata": {
                "description": "Enter name of the table used to store Lockdown logs. Default is 'Lockdown_Data'"
            },
            "allowedValues": [
                "Lockdown_Data"
            ]
        },
        "HealthTableName": {
            "type": "string",
            "defaultValue": "Health_Data",
            "metadata": {
                "description": "Enter name of the table used to store Health logs. Default is 'Health_Data'"
            },
            "allowedValues": [
                "Health_Data"
            ]
        },
        "EntitiesTableName": {
            "type": "string",
            "defaultValue": "Entities_Data",
            "metadata": {
                "description": "Enter name of the table used to store Entities logs. Default is 'Entities_Data'"
            },
            "allowedValues": [
                "Entities_Data"
            ]
        },
        "LogLevel": {
            "type": "string",
            "metadata": {
                "description": "Add log level or log severity value. Default is 'INFO'"
            },
            "allowedValues": [
                "Debug",
                "Info",
                "Error",
                "Warning"
            ],
            "defaultValue": "Info"
        },
        "LockdownSchedule": {
            "type": "string",
            "defaultValue": "0 0/10 * * * *",
            "metadata": {
                "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :00 of every hour"
            }
        },
        "HealthSchedule": {
            "type": "string",
            "defaultValue": "0 1/10 * * * *",
            "metadata": {
                "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :01 of every hour"
            }
        },
        "DetectionsSchedule": {
            "type": "string",
            "defaultValue": "0 2/10 * * * *",
            "metadata": {
                "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :02 of every hour"
            }
        },
        "AuditsSchedule": {
            "type": "string",
            "defaultValue": "0 5/10 * * * *",
            "metadata": {
                "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :05 of every hour"
            }
        },
        "EntityScoringSchedule": {
            "type": "string",
            "defaultValue": "0 8/10 * * * *",
            "metadata": {
                "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :08 of every hour"
            }
        },
        "EntitiesSchedule": {
            "type": "string",
            "defaultValue": "0 9/10 * * * *",
            "metadata": {
                "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :09 of every hour"
            }
        },
        "AppInsightsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Migrate Classic Application Insights to Log Analytic Workspace which is retiring by 29 Febraury 2024. Use 'Log Analytic Workspace-->Properties' blade having 'Resource ID' property value. This is a fully qualified resourceId which is in format '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}'"
            }
        }
    },
    "variables": {
        "FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",
        "StorageSuffix": "[environment().suffixes.storage]",
        "LogAnaltyicsUri": "[replace(environment().portal, 'https://portal', concat('https://', toLower(parameters('WorkspaceID')), '.ods.opinsights'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('FunctionName')]",
                "WorkspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[tolower(variables('FunctionName'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "encryption": {
                    "requireInfrastructureEncryption": true,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "minimumTlsVersion": "TLS1_2"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
            ],
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('FunctionName')]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "alwaysOn": true,
                "reserved": true,
                "siteConfig": {
                    "linuxFxVersion": "python|3.9"
                }
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('FunctionName'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "FUNCTIONS_WORKER_RUNTIME": "python",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('FunctionName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('FunctionName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "logAnalyticsUri": "[variables('LogAnaltyicsUri')]",
                        "WorkspaceID": "[parameters('WorkspaceID')]",
                        "WorkspaceKey": "[parameters('WorkspaceKey')]",
                        "Health_Client_Id": "[parameters('VectraClientId - Health')]",
                        "Health_Client_Secret_Key": "[parameters('VectraClientSecretKey - Health')]",
                        "Entity_Scoring_Client_Id": "[parameters('VectraClientId - Entity Scoring')]",
                        "Entity_Scoring_Client_Secret_Key": "[parameters('VectraClientSecretKey - Entity Scoring')]",
                        "Detections_Client_Id": "[parameters('VectraClientId - Detections')]",
                        "Detections_Client_Secret_Key": "[parameters('VectraClientSecretKey - Detections')]",
                        "Audit_Client_Id": "[parameters('VectraClientId - Audits')]",
                        "Audit_Client_Secret_Key": "[parameters('VectraClientSecretKey - Audits')]",
                        "Lockdown_Client_Id": "[parameters('VectraClientId - Lockdown')]",
                        "Lockdown_Client_Secret_Key": "[parameters('VectraClientSecretKey - Lockdown')]",
                        "Host_Entity_Client_Id": "[parameters('VectraClientId - Host-Entity')]",
                        "Host_Entity_Client_Secret_Key": "[parameters('VectraClientSecretKey - Host-Entity')]",
                        "Account_Entity_Client_Id": "[parameters('VectraClientId - Account-Entity')]",
                        "Account_Entity_Client_Secret_Key": "[parameters('VectraClientSecretKey - Account-Entity')]",
                        "BaseURL": "[parameters('VectraBaseURL')]",
                        "StartTime": "[parameters('StartTime')]",
                        "Audits_Table_Name": "[parameters('AuditsTableName')]",
                        "Detections_Table_Name": "[parameters('DetectionsTableName')]",
                        "Entity_Scoring_Table_Name": "[parameters('EntityScoringTableName')]",
                        "Lockdown_Table_Name": "[parameters('LockdownTableName')]",
                        "Health_Table_Name": "[parameters('HealthTableName')]",
                        "Entities_Table_Name": "[parameters('EntitiesTableName')]",
                        "LogLevel": "[parameters('LogLevel')]",
                        "DetectionsSchedule": "[parameters('DetectionsSchedule')]",
                        "AuditsSchedule": "[parameters('AuditsSchedule')]",
                        "EntityScoringSchedule": "[parameters('EntityScoringSchedule')]",
                        "LockdownSchedule": "[parameters('LockdownSchedule')]",
                        "HealthSchedule": "[parameters('HealthSchedule')]",
                        "EntitiesSchedule": "[parameters('EntitiesSchedule')]",
                        "KeyVaultName": "[parameters('KeyvaultName')]",
                        "AZURE_CLIENT_ID": "[parameters('AzureClientID')]",
                        "AZURE_CLIENT_SECRET": "[parameters('AzureClientSecret')]",
                        "AZURE_TENANT_ID": "[parameters('TenantID')]",
                        "IncludeScoreDecrease": "[parameters('IncludeScoreDecrease')]",
                        "Function_App_Name": "[variables('FunctionName')]",
                        "Azure_Resource_Group_Name": "[resourceGroup().name]",
                        "Azure_Subscription_Id": "[subscription().subscriptionId]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/sentinel-VectraXDR320-functionapp"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/', tolower(variables('FunctionName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        }
    ]
}