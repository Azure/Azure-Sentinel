{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "FunctionName": {
      "defaultValue": "Vectra",
      "minLength": 1,
      "maxLength": 11,
      "type": "string"
    },
    "Location": {
      "defaultValue": "[resourceGroup().location]",
      "type": "string",
      "metadata": {
        "description": "The location in which the data collection rules and data collection endpoints should be deployed."
      }
    },
    "WorkspaceName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Log analytics workspace name. Can be found under Log analytics \"Settings\"."
      }
    },
    "VectraBaseURL": {
      "type": "string",
      "metadata": {
        "description": "Enter BaseURL starting with \"https://\" followed by hostname (Example: https://[your-vectra-instance-name])"
      }
    },
    "VectraClientId - Health": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client ID for Health API Authentication"
      }
    },
    "VectraClientSecretKey - Health": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client Secret for Health API Authentication"
      }
    },
    "VectraClientId - Entity Scoring": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client ID for Entity Scoring API Authentication"
      }
    },
    "VectraClientSecretKey - Entity Scoring": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client Secret for Entity Scoring API Authentication"
      }
    },
    "VectraClientId - Detections": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client ID for Detection API Authentication"
      }
    },
    "VectraClientSecretKey - Detections": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client Secret for Detection API Authentication"
      }
    },
    "VectraClientId - Audits": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client ID for Audit API Authentication"
      }
    },
    "VectraClientSecretKey - Audits": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client Secret for Audit API Authentication"
      }
    },
    "VectraClientId - Lockdown": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client ID for Lockdown API Authentication"
      }
    },
    "VectraClientSecretKey - Lockdown": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client Secret for Lockdown API Authentication"
      }
    },
    "VectraClientId - Host-Entity": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client ID for Host Entity API Authentication"
      }
    },
    "VectraClientSecretKey - Host-Entity": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client Secret for Host Entity API Authentication"
      }
    },
    "VectraClientId - Account-Entity": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client ID for Account Entity API Authentication"
      }
    },
    "VectraClientSecretKey - Account-Entity": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Enter Vectra Client Secret for Account Entity API Authentication"
      }
    },
    "KeyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Enter name of keyvault where tokens will be stored"
      }
    },
    "AzureClientID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Enter Azure Client Id that you have created during app registration"
      }
    },
    "AzureClientSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Enter Azure Client Secret that you have created during creating the client secret"
      }
    },
    "TenantID":{
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Enter Tenant Id of your Microsoft Entra Id"
      }
    },
    "AzureEntraObjectID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Enter Object id of your Microsoft Entra App"
      }
    },
    "StartTime": {
      "type": "string",
      "metadata": {
        "description": "Optional. Start Time for data collection in UTC (MM/DD/YYYY HH:MM:SS) Format (Ex: 07/19/2022 14:36:12). Default will be Current time."
      },
      "defaultValue": ""
    },
    "IncludeScoreDecrease": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
          true,
          false
      ],
      "metadata": {
        "description": "Select true to include ingesting data for Entity Scoring when the score decreases. Default is false."
      }
    },
    "AuditsTableName": {
      "type": "string",
      "defaultValue": "Audits_Data",
      "metadata": {
        "description": "Enter name of the table used to store Audit logs. Default is 'Audits_Data'"
      }
    },
    "DetectionsTableName": {
      "type": "string",
      "defaultValue": "Detections_Data",
      "metadata": {
        "description": "Enter name of the table used to store Detection logs. Default is 'Detections_Data'"
      }
    },
    "EntityScoringTableName": {
      "type": "string",
      "defaultValue": "Entity_Scoring_Data",
      "metadata": {
        "description": "Enter name of the table used to store Entity Scoring logs. Default is 'Entity_Scoring_Data'"
      }
    },
    "LockdownTableName": {
      "type": "string",
      "defaultValue": "Lockdown_Data",
      "metadata": {
        "description": "Enter name of the table used to store Lockdown logs. Default is 'Lockdown_Data'"
      }
    },
    "HealthTableName": {
      "type": "string",
      "defaultValue": "Health_Data",
      "metadata": {
        "description": "Enter name of the table used to store Health logs. Default is 'Health_Data'"
      }
    },
    "EntitiesTableName": {
      "type": "string",
      "defaultValue": "Entities_Data",
      "metadata": {
        "description": "Enter name of the table used to store Entities logs. Default is 'Entities_Data'"
      }
    },
        "ExcludeGroupDetailsFromDetections": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Select true to exclude group details from detections. Default is false."
            }
        },
    "LogLevel": {
      "type": "string",
      "metadata": {
        "description": "Add log level or log severity value. Default is 'INFO'"
      },
      "allowedValues": [
          "Debug",
          "Info",
          "Error",
          "Warning"
      ],
      "defaultValue": "Info"
    },
    "LockdownSchedule": {
      "type": "string",
      "defaultValue": "0 0/10 * * * *",
      "metadata": {
        "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :00 of every hour"
      }
    },
    "HealthSchedule": {
      "type": "string",
      "defaultValue": "0 1/10 * * * *",
      "metadata": {
        "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :01 of every hour"
      }
    },
    "DetectionsSchedule": {
      "type": "string",
      "defaultValue": "0 2/10 * * * *",
      "metadata": {
        "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :02 of every hour"
      }
    },
    "AuditsSchedule": {
      "type": "string",
      "defaultValue": "0 5/10 * * * *",
      "metadata": {
        "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :05 of every hour"
      }
    },
    "EntityScoringSchedule": {
      "type": "string",
      "defaultValue": "0 8/10 * * * *",
      "metadata": {
        "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :08 of every hour"
      }
    },
    "EntitiesSchedule": {
      "type": "string",
      "defaultValue": "0 9/10 * * * *",
      "metadata": {
        "description": "Enter a valid Quartz Cron-Expression. The default value is every 10 minutes starting from Minute :09 of every hour"
      }
    },
    "AppInsightsWorkspaceResourceID": {
      "type": "string",
      "metadata": {
        "description": "Migrate Classic Application Insights to Log Analytic Workspace which is retiring by 29 Febraury 2024. Use 'Log Analytic Workspace-->Properties' blade having 'Resource ID' property value. This is a fully qualified resourceId which is in format '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}'"
      }
    }
  },
  "variables": {
    "FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",
    "StorageSuffix": "[environment().suffixes.storage]",
    "suffix": "[concat('A', uniqueString(resourceGroup().id))]",
    "endpointName": "[concat(toLower(parameters('FunctionName')),'LogsEndpoint', variables('suffix'))]",
    "logWsResId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('WorkspaceName'))]",
    "dataRuleName": "[concat(toLower(parameters('FunctionName')),'dataCollectionRule', variables('suffix'))]",
    "dcrRoleName": "[concat(toLower(parameters('FunctionName')),'EntraRole', variables('suffix'))]",
    "dcrRoleId": "[guid(subscription().id, string(variables('dcrRoleName')))]",
    "scope": "[concat(replace(environment().portal, 'portal', 'monitor'), '/.default')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/dataCollectionEndpoints",
      "apiVersion": "2022-06-01",
      "name": "[variables('endpointName')]",
      "location": "[parameters('Location')]",
      "kind": "Linux",
      "properties": {
        "description": "Data collection endpoint for ingestion api",
        "networkAcls": {
          "publicNetworkAccess": "Enabled"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/tables",
      "apiVersion": "2022-10-01",
      "name": "[concat(parameters('WorkspaceName'), '/', parameters('AuditsTableName'), '_CL')]",
      "properties": {
        "plan": "Analytics",
        "schema": {
          "name": "[concat(parameters('AuditsTableName'), '_CL')]",
          "columns": [
            {
              "name": "id",
              "type": "real"
            },
            {
              "name": "user_id",
              "type": "real"
            },
            {
              "name": "username",
              "type": "string"
            },
            {
              "name": "user_type",
              "type": "string"
            },
            {
              "name": "api_client_id",
              "type": "string"
            },
            {
              "name": "user_role",
              "type": "string"
            },
            {
              "name": "version",
              "type": "string"
            },
            {
              "name": "source_ip",
              "type": "string"
            },
            {
              "name": "event_timestamp",
              "type": "datetime"
            },
            {
              "name": "message",
              "type": "string"
            },
            {
              "name": "result_status",
              "type": "string"
            },
            {
              "name": "event_data",
              "type": "dynamic"
            },
            {
              "name": "event_object",
              "type": "string"
            },
            {
              "name": "event_action",
              "type": "string"
            },
            {
              "name": "entity_type",
              "type": "string"
            },
            {
              "name": "TimeGenerated",
              "type": "datetime"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/tables",
      "apiVersion": "2022-10-01",
      "name": "[concat(parameters('WorkspaceName'), '/', parameters('DetectionsTableName'), '_CL')]",
      "properties": {
        "plan": "Analytics",
        "schema": {
          "name": "[concat(parameters('DetectionsTableName'), '_CL')]",
          "columns": [
            {
              "name": "category",
              "type": "string"
            },
            {
              "name": "threat",
              "type": "real"
            },
            {
              "name": "certainty",
              "type": "real"
            },
            {
              "name": "detail",
              "type": "dynamic"
            },
            {
              "name": "mitre",
              "type": "dynamic"
            },
            {
              "name": "severity",
              "type": "real"
            },
            {
              "name": "detection_id",
              "type": "real"
            },
            {
              "name": "triaged",
              "type": "boolean"
            },
            {
              "name": "entity_id",
              "type": "real"
            },
            {
              "name": "d_type_vname",
              "type": "string"
            },
            {
              "name": "entity_uid",
              "type": "string"
            },
            {
              "name": "id",
              "type": "real"
            },
            {
              "name": "detection_href",
              "type": "string"
            },
            {
              "name": "event_timestamp",
              "type": "datetime"
            },
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "entity_name",
              "type": "string"
            },
            {
              "name": "detection_type",
              "type": "string"
            },
            {
              "name": "d_detection_details",
              "type": "dynamic"
            },
            {
              "name": "tags",
              "type": "dynamic"
            },
            {
              "name": "is_targeting_key_asset",
              "type": "string"
            },
            {
              "name": "src_host",
              "type": "dynamic"
            },
            {
              "name": "normal_domains",
              "type": "dynamic"
            },
            {
              "name": "src_ip",
              "type": "string"
            },
            {
              "name": "summary",
              "type": "dynamic"
            },
            {
              "name": "grouped_details",
              "type": "dynamic"
            },
            {
              "name": "entity_type",
              "type": "string"
            },
            {
              "name": "TimeGenerated",
              "type": "datetime"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/tables",
      "apiVersion": "2022-10-01",
      "name": "[concat(parameters('WorkspaceName'), '/', parameters('EntityScoringTableName'), '_CL')]",
      "properties": {
        "plan": "Analytics",
        "schema": {
          "name": "[concat(parameters('EntityScoringTableName'), '_CL')]",
          "columns": [
            {
              "name": "id",
              "type": "real"
            },
            {
              "name": "entity_id",
              "type": "real"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "breadth_contrib",
              "type": "real"
            },
            {
              "name": "importance",
              "type": "real"
            },
            {
              "name": "entity_type",
              "type": "string"
            },
            {
              "name": "is_prioritized",
              "type": "boolean"
            },
            {
              "name": "severity",
              "type": "string"
            },
            {
              "name": "urgency_score",
              "type": "real"
            },
            {
              "name": "velocity_contrib",
              "type": "real"
            },
            {
              "name": "attack_rating",
              "type": "real"
            },
            {
              "name": "active_detection_types",
              "type": "dynamic"
            },
            {
              "name": "category",
              "type": "string"
            },
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "event_timestamp",
              "type": "datetime"
            },
            {
              "name": "last_detection",
              "type": "dynamic"
            },
            {
              "name": "last_detection_id",
              "type": "real"
            },
            {
              "name": "last_detection_type",
              "type": "string"
            },
            {
              "name": "last_detection_url",
              "type": "string"
            },
            {
              "name": "TimeGenerated",
              "type": "datetime"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/tables",
      "apiVersion": "2022-10-01",
      "name": "[concat(parameters('WorkspaceName'), '/', parameters('LockdownTableName'), '_CL')]",
      "properties": {
        "plan": "Analytics",
        "schema": {
          "name": "[concat(parameters('LockdownTableName'), '_CL')]",
          "columns": [
            {
              "name": "id",
              "type": "real"
            },
            {
              "name": "entity_type",
              "type": "string"
            },
            {
              "name": "entity_id",
              "type": "real"
            },
            {
              "name": "entity_name",
              "type": "string"
            },
            {
              "name": "lock_event_timestamp",
              "type": "datetime"
            },
            {
              "name": "locked_by",
              "type": "string"
            },
            {
              "name": "certainty",
              "type": "real"
            },
            {
              "name": "unlock_event_timestamp",
              "type": "datetime"
            },
            {
              "name": "TimeGenerated",
              "type": "datetime"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/tables",
      "apiVersion": "2022-10-01",
      "name": "[concat(parameters('WorkspaceName'), '/', parameters('HealthTableName'), '_CL')]",
      "properties": {
        "plan": "Analytics",
        "schema": {
          "name": "[concat(parameters('HealthTableName'), '_CL')]",
          "columns": [
            {
              "name": "memory",
              "type": "dynamic"
            },
            {
              "name": "memory_usage_percent",
              "type": "real"
            },
            {
              "name": "memory_free_bytes",
              "type": "real"
            },
            {
              "name": "memory_used_bytes",
              "type": "real"
            },
            {
              "name": "memory_total_bytes",
              "type": "real"
            },
            {
              "name": "memory_updated_at",
              "type": "string"
            },
            {
              "name": "sensors",
              "type": "dynamic"
            },
            {
              "name": "disk",
              "type": "dynamic"
            },
            {
              "name": "disk_disk_utilization",
              "type": "dynamic"
            },
            {
              "name": "disk_disk_utilization_total_bytes",
              "type": "real"
            },
            {
              "name": "disk_disk_utilization_free_bytes",
              "type": "real"
            },
            {
              "name": "disk_disk_utilization_used_bytes",
              "type": "real"
            },
            {
              "name": "disk_disk_utilization_usage_percent",
              "type": "real"
            },
            {
              "name": "disk_updated_at",
              "type": "string"
            },
            {
              "name": "network",
              "type": "dynamic"
            },
            {
              "name": "system",
              "type": "dynamic"
            },
            {
              "name": "system_uptime",
              "type": "string"
            },
            {
              "name": "system_serial_number",
              "type": "string"
            },
            {
              "name": "system_version",
              "type": "dynamic"
            },
            {
              "name": "system_version_model",
              "type": "string"
            },
            {
              "name": "system_version_mode",
              "type": "string"
            },
            {
              "name": "system_version_cloud_bridge",
              "type": "boolean"
            },
            {
              "name": "system_version_gmt",
              "type": "datetime"
            },
            {
              "name": "system_version_last_update",
              "type": "string"
            },
            {
              "name": "system_version_last_update_utc",
              "type": "datetime"
            },
            {
              "name": "system_version_vm_type",
              "type": "string"
            },
            {
              "name": "system_version_vectra_instance_type",
              "type": "string"
            },
            {
              "name": "system_version_vectra_version",
              "type": "string"
            },
            {
              "name": "system_updated_at",
              "type": "string"
            },
            {
              "name": "detection",
              "type": "dynamic"
            },
            {
              "name": "hostid",
              "type": "dynamic"
            },
            {
              "name": "hostid_artifact_counts",
              "type": "dynamic"
            },
            {
              "name": "hostid_artifact_counts_TestEDR",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_arsenic",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_carbon_black",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_cb_cloud",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_clear_state",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_cookie",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_crowdstrike",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_cybereason",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_dhcp",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_dns",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_end_time",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_fireeye",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_generic_edr",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_idle_end",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_idle_start",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_invalid",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_kerberos",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_kerberos_user",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_mdns",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_netbios",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_proxy_ip",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_rdns",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_sentinelone",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_split",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_src_port",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_static_ip",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_total",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_uagent",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_vmachine_info",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_windows_defender",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_zia_device",
              "type": "real"
            },
            {
              "name": "hostid_artifact_counts_zpa_user",
              "type": "real"
            },
            {
              "name": "hostid_ip_always_percent",
              "type": "real"
            },
            {
              "name": "hostid_ip_sometimes_percent",
              "type": "real"
            },
            {
              "name": "hostid_ip_never_percent",
              "type": "real"
            },
            {
              "name": "hostid_updated_at",
              "type": "string"
            },
            {
              "name": "connectivity",
              "type": "dynamic"
            },
            {
              "name": "connectivity_sensors",
              "type": "dynamic"
            },
            {
              "name": "connectivity_updated_at",
              "type": "string"
            },
            {
              "name": "trafficdrop",
              "type": "dynamic"
            },
            {
              "name": "trafficdrop_sensors",
              "type": "dynamic"
            },
            {
              "name": "trafficdrop_updated_at",
              "type": "string"
            },
            {
              "name": "cpu",
              "type": "dynamic"
            },
            {
              "name": "cpu_user_percent",
              "type": "real"
            },
            {
              "name": "cpu_nice_percent",
              "type": "real"
            },
            {
              "name": "cpu_system_percent",
              "type": "real"
            },
            {
              "name": "cpu_idle_percent",
              "type": "real"
            },
            {
              "name": "cpu_updated_at",
              "type": "string"
            },
            {
              "name": "power",
              "type": "dynamic"
            },
            {
              "name": "power_status",
              "type": "string"
            },
            {
              "name": "power_error",
              "type": "string"
            },
            {
              "name": "power_updated_at",
              "type": "string"
            },
            {
              "name": "TimeGenerated",
              "type": "datetime"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/tables",
      "apiVersion": "2022-10-01",
      "name": "[concat(parameters('WorkspaceName'), '/', parameters('EntitiesTableName'), '_CL')]",
      "properties": {
        "plan": "Analytics",
        "schema": {
          "name": "[concat(parameters('EntitiesTableName'), '_CL')]",
          "columns": [
            {
              "name": "id",
              "type": "real"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "breadth_contrib",
              "type": "real"
            },
            {
              "name": "importance",
              "type": "real"
            },
            {
              "name": "entity_type",
              "type": "string"
            },
            {
              "name": "is_prioritized",
              "type": "boolean"
            },
            {
              "name": "severity",
              "type": "string"
            },
            {
              "name": "urgency_score",
              "type": "real"
            },
            {
              "name": "velocity_contrib",
              "type": "real"
            },
            {
              "name": "detection_set",
              "type": "dynamic"
            },
            {
              "name": "last_detection_timestamp",
              "type": "datetime"
            },
            {
              "name": "last_modified_timestamp",
              "type": "datetime"
            },
            {
              "name": "notes",
              "type": "dynamic"
            },
            {
              "name": "attack_rating",
              "type": "real"
            },
            {
              "name": "privilege_level",
              "type": "real"
            },
            {
              "name": "privilege_category",
              "type": "string"
            },
            {
              "name": "attack_profile",
              "type": "string"
            },
            {
              "name": "sensors",
              "type": "dynamic"
            },
            {
              "name": "state",
              "type": "string"
            },
            {
              "name": "tags",
              "type": "dynamic"
            },
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "host_type",
              "type": "dynamic"
            },
            {
              "name": "account_type",
              "type": "dynamic"
            },
            {
              "name": "ip",
              "type": "string"
            },
            {
              "name": "assignment",
              "type": "dynamic"
            },
            {
              "name": "assignment_id",
              "type": "real"
            },
            {
              "name": "assignment_assigned_by",
              "type": "dynamic"
            },
            {
              "name": "assignment_assigned_by_id",
              "type": "real"
            },
            {
              "name": "assignment_assigned_by_username",
              "type": "string"
            },
            {
              "name": "assignment_date_assigned",
              "type": "datetime"
            },
            {
              "name": "assignment_assigned_to",
              "type": "dynamic"
            },
            {
              "name": "assignment_assigned_to_id",
              "type": "real"
            },
            {
              "name": "assignment_assigned_to_username",
              "type": "string"
            },
            {
              "name": "TimeGenerated",
              "type": "datetime"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Insights/dataCollectionRules",
      "apiVersion": "2022-06-01",
      "name": "[variables('dataRuleName')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[concat(variables('logWsResId'), '/tables/', parameters('AuditsTableName'), '_CL')]",
        "[concat(variables('logWsResId'), '/tables/', parameters('DetectionsTableName'), '_CL')]",
        "[concat(variables('logWsResId'), '/tables/', parameters('EntityScoringTableName'), '_CL')]",
        "[concat(variables('logWsResId'), '/tables/', parameters('LockdownTableName'), '_CL')]",
        "[concat(variables('logWsResId'), '/tables/', parameters('HealthTableName'), '_CL')]",
        "[concat(variables('logWsResId'), '/tables/', parameters('EntitiesTableName'), '_CL')]"
      ],
      "properties": {
        "dataCollectionEndpointId": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', variables('endpointName'))]",
        "streamDeclarations": {
          "[concat('Custom-', parameters('AuditsTableName'))]": {
            "columns": [
              {
                "name": "id",
                "type": "real"
              },
              {
                "name": "user_id",
                "type": "real"
              },
              {
                "name": "username",
                "type": "string"
              },
              {
                "name": "user_type",
                "type": "string"
              },
              {
                "name": "api_client_id",
                "type": "string"
              },
              {
                "name": "user_role",
                "type": "string"
              },
              {
                "name": "version",
                "type": "string"
              },
              {
                "name": "source_ip",
                "type": "string"
              },
              {
                "name": "event_timestamp",
                "type": "datetime"
              },
              {
                "name": "message",
                "type": "string"
              },
              {
                "name": "result_status",
                "type": "string"
              },
              {
                "name": "event_data",
                "type": "dynamic"
              },
              {
                "name": "event_object",
                "type": "string"
              },
              {
                "name": "event_action",
                "type": "string"
              },
              {
                "name": "entity_type",
                "type": "string"
              },
              {
                "name": "TimeGenerated",
                "type": "datetime"
              }
            ]
          },
          "[concat('Custom-', parameters('DetectionsTableName'))]": {
            "columns": [
              {
                "name": "category",
                "type": "string"
              },
              {
                "name": "threat",
                "type": "real"
              },
              {
                "name": "certainty",
                "type": "real"
              },
              {
                "name": "detail",
                "type": "dynamic"
              },
              {
                "name": "mitre",
                "type": "dynamic"
              },
              {
                "name": "severity",
                "type": "real"
              },
              {
                "name": "detection_id",
                "type": "real"
              },
              {
                "name": "triaged",
                "type": "boolean"
              },
              {
                "name": "entity_id",
                "type": "real"
              },
              {
                "name": "d_type_vname",
                "type": "string"
              },
              {
                "name": "entity_uid",
                "type": "string"
              },
              {
                "name": "id",
                "type": "real"
              },
              {
                "name": "detection_href",
                "type": "string"
              },
              {
                "name": "event_timestamp",
                "type": "datetime"
              },
              {
                "name": "url",
                "type": "string"
              },
              {
                "name": "entity_name",
                "type": "string"
              },
              {
                "name": "detection_type",
                "type": "string"
              },
              {
                "name": "d_detection_details",
                "type": "dynamic"
              },
              {
                "name": "tags",
                "type": "dynamic"
              },
              {
                "name": "is_targeting_key_asset",
                "type": "string"
              },
              {
                "name": "src_host",
                "type": "dynamic"
              },
              {
                "name": "normal_domains",
                "type": "dynamic"
              },
              {
                "name": "src_ip",
                "type": "string"
              },
              {
                "name": "summary",
                "type": "dynamic"
              },
              {
                "name": "grouped_details",
                "type": "dynamic"
              },
              {
                "name": "entity_type",
                "type": "string"
              },
              {
                "name": "TimeGenerated",
                "type": "datetime"
              }
            ]
          },
          "[concat('Custom-', parameters('EntityScoringTableName'))]": {
            "columns": [
              {
                "name": "id",
                "type": "real"
              },
              {
                "name": "entity_id",
                "type": "real"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "breadth_contrib",
                "type": "real"
              },
              {
                "name": "importance",
                "type": "real"
              },
              {
                "name": "entity_type",
                "type": "string"
              },
              {
                "name": "is_prioritized",
                "type": "boolean"
              },
              {
                "name": "severity",
                "type": "string"
              },
              {
                "name": "urgency_score",
                "type": "real"
              },
              {
                "name": "velocity_contrib",
                "type": "real"
              },
              {
                "name": "attack_rating",
                "type": "real"
              },
              {
                "name": "active_detection_types",
                "type": "dynamic"
              },
              {
                "name": "category",
                "type": "string"
              },
              {
                "name": "url",
                "type": "string"
              },
              {
                "name": "event_timestamp",
                "type": "datetime"
              },
              {
                "name": "last_detection",
                "type": "dynamic"
              },
              {
                "name": "last_detection_id",
                "type": "real"
              },
              {
                "name": "last_detection_type",
                "type": "string"
              },
              {
                "name": "last_detection_url",
                "type": "string"
              },
              {
                "name": "TimeGenerated",
                "type": "datetime"
              }
            ]
          },
          "[concat('Custom-', parameters('LockdownTableName'))]": {
            "columns": [
              {
                "name": "id",
                "type": "real"
              },
              {
                "name": "entity_type",
                "type": "string"
              },
              {
                "name": "entity_id",
                "type": "real"
              },
              {
                "name": "entity_name",
                "type": "string"
              },
              {
                "name": "lock_event_timestamp",
                "type": "datetime"
              },
              {
                "name": "locked_by",
                "type": "string"
              },
              {
                "name": "certainty",
                "type": "real"
              },
              {
                "name": "unlock_event_timestamp",
                "type": "datetime"
              },
              {
                "name": "TimeGenerated",
                "type": "datetime"
              }
            ]
          },
          "[concat('Custom-', parameters('HealthTableName'))]": {
            "columns": [
              {
                "name": "memory",
                "type": "dynamic"
              },
              {
                "name": "memory_usage_percent",
                "type": "real"
              },
              {
                "name": "memory_free_bytes",
                "type": "real"
              },
              {
                "name": "memory_used_bytes",
                "type": "real"
              },
              {
                "name": "memory_total_bytes",
                "type": "real"
              },
              {
                "name": "memory_updated_at",
                "type": "string"
              },
              {
                "name": "sensors",
                "type": "dynamic"
              },
              {
                "name": "disk",
                "type": "dynamic"
              },
              {
                "name": "disk_disk_utilization",
                "type": "dynamic"
              },
              {
                "name": "disk_disk_utilization_total_bytes",
                "type": "real"
              },
              {
                "name": "disk_disk_utilization_free_bytes",
                "type": "real"
              },
              {
                "name": "disk_disk_utilization_used_bytes",
                "type": "real"
              },
              {
                "name": "disk_disk_utilization_usage_percent",
                "type": "real"
              },
              {
                "name": "disk_updated_at",
                "type": "string"
              },
              {
                "name": "network",
                "type": "dynamic"
              },
              {
                "name": "system",
                "type": "dynamic"
              },
              {
                "name": "system_uptime",
                "type": "string"
              },
              {
                "name": "system_serial_number",
                "type": "string"
              },
              {
                "name": "system_version",
                "type": "dynamic"
              },
              {
                "name": "system_version_model",
                "type": "string"
              },
              {
                "name": "system_version_mode",
                "type": "string"
              },
              {
                "name": "system_version_cloud_bridge",
                "type": "boolean"
              },
              {
                "name": "system_version_gmt",
                "type": "datetime"
              },
              {
                "name": "system_version_last_update",
                "type": "string"
              },
              {
                "name": "system_version_last_update_utc",
                "type": "datetime"
              },
              {
                "name": "system_version_vm_type",
                "type": "string"
              },
              {
                "name": "system_version_vectra_instance_type",
                "type": "string"
              },
              {
                "name": "system_version_vectra_version",
                "type": "string"
              },
              {
                "name": "system_updated_at",
                "type": "string"
              },
              {
                "name": "detection",
                "type": "dynamic"
              },
              {
                "name": "hostid",
                "type": "dynamic"
              },
              {
                "name": "hostid_artifact_counts",
                "type": "dynamic"
              },
              {
                "name": "hostid_artifact_counts_TestEDR",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_arsenic",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_carbon_black",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_cb_cloud",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_clear_state",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_cookie",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_crowdstrike",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_cybereason",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_dhcp",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_dns",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_end_time",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_fireeye",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_generic_edr",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_idle_end",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_idle_start",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_invalid",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_kerberos",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_kerberos_user",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_mdns",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_netbios",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_proxy_ip",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_rdns",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_sentinelone",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_split",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_src_port",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_static_ip",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_total",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_uagent",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_vmachine_info",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_windows_defender",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_zia_device",
                "type": "real"
              },
              {
                "name": "hostid_artifact_counts_zpa_user",
                "type": "real"
              },
              {
                "name": "hostid_ip_always_percent",
                "type": "real"
              },
              {
                "name": "hostid_ip_sometimes_percent",
                "type": "real"
              },
              {
                "name": "hostid_ip_never_percent",
                "type": "real"
              },
              {
                "name": "hostid_updated_at",
                "type": "string"
              },
              {
                "name": "connectivity",
                "type": "dynamic"
              },
              {
                "name": "connectivity_sensors",
                "type": "dynamic"
              },
              {
                "name": "connectivity_updated_at",
                "type": "string"
              },
              {
                "name": "trafficdrop",
                "type": "dynamic"
              },
              {
                "name": "trafficdrop_sensors",
                "type": "dynamic"
              },
              {
                "name": "trafficdrop_updated_at",
                "type": "string"
              },
              {
                "name": "cpu",
                "type": "dynamic"
              },
              {
                "name": "cpu_user_percent",
                "type": "real"
              },
              {
                "name": "cpu_nice_percent",
                "type": "real"
              },
              {
                "name": "cpu_system_percent",
                "type": "real"
              },
              {
                "name": "cpu_idle_percent",
                "type": "real"
              },
              {
                "name": "cpu_updated_at",
                "type": "string"
              },
              {
                "name": "power",
                "type": "dynamic"
              },
              {
                "name": "power_status",
                "type": "string"
              },
              {
                "name": "power_error",
                "type": "string"
              },
              {
                "name": "power_updated_at",
                "type": "string"
              },
              {
                "name": "TimeGenerated",
                "type": "datetime"
              }
            ]
          },
          "[concat('Custom-', parameters('EntitiesTableName'))]": {
            "columns": [
              {
                "name": "id",
                "type": "real"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "breadth_contrib",
                "type": "real"
              },
              {
                "name": "importance",
                "type": "real"
              },
              {
                "name": "entity_type",
                "type": "string"
              },
              {
                "name": "is_prioritized",
                "type": "boolean"
              },
              {
                "name": "severity",
                "type": "string"
              },
              {
                "name": "urgency_score",
                "type": "real"
              },
              {
                "name": "velocity_contrib",
                "type": "real"
              },
              {
                "name": "detection_set",
                "type": "dynamic"
              },
              {
                "name": "last_detection_timestamp",
                "type": "datetime"
              },
              {
                "name": "last_modified_timestamp",
                "type": "datetime"
              },
              {
                "name": "notes",
                "type": "dynamic"
              },
              {
                "name": "attack_rating",
                "type": "real"
              },
              {
                "name": "privilege_level",
                "type": "real"
              },
              {
                "name": "privilege_category",
                "type": "string"
              },
              {
                "name": "attack_profile",
                "type": "string"
              },
              {
                "name": "sensors",
                "type": "dynamic"
              },
              {
                "name": "state",
                "type": "string"
              },
              {
                "name": "tags",
                "type": "dynamic"
              },
              {
                "name": "url",
                "type": "string"
              },
              {
                "name": "host_type",
                "type": "dynamic"
              },
              {
                "name": "account_type",
                "type": "dynamic"
              },
              {
                "name": "ip",
                "type": "string"
              },
              {
                "name": "assignment",
                "type": "dynamic"
              },
              {
                "name": "assignment_id",
                "type": "real"
              },
              {
                "name": "assignment_assigned_by",
                "type": "dynamic"
              },
              {
                "name": "assignment_assigned_by_id",
                "type": "real"
              },
              {
                "name": "assignment_assigned_by_username",
                "type": "string"
              },
              {
                "name": "assignment_date_assigned",
                "type": "datetime"
              },
              {
                "name": "assignment_assigned_to",
                "type": "dynamic"
              },
              {
                "name": "assignment_assigned_to_id",
                "type": "real"
              },
              {
                "name": "assignment_assigned_to_username",
                "type": "string"
              },
              {
                "name": "TimeGenerated",
                "type": "datetime"
              }
            ]
          }
        },
        "destinations": {
          "logAnalytics": [
            {
              "workspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]",
              "name": "[concat('RuleDest', variables('suffix'))]"
            }
          ]
        },
        "dataFlows": [
          {
            "streams": ["[concat('Custom-', parameters('AuditsTableName'))]"],
            "destinations": ["[concat('RuleDest', variables('suffix'))]"],
            "transformKql": "source\n| extend TimeGenerated = todatetime(now())",
            "outputStream": "[concat('Custom-', parameters('AuditsTableName'), '_CL')]"
          },
          {
            "streams": [
              "[concat('Custom-', parameters('DetectionsTableName'))]"
            ],
            "destinations": ["[concat('RuleDest', variables('suffix'))]"],
            "transformKql": "source\n| extend TimeGenerated = todatetime(now())",
            "outputStream": "[concat('Custom-', parameters('DetectionsTableName'), '_CL')]"
          },
          {
            "streams": [
              "[concat('Custom-', parameters('EntityScoringTableName'))]"
            ],
            "destinations": ["[concat('RuleDest', variables('suffix'))]"],
            "transformKql": "source\n| extend TimeGenerated = todatetime(now()), json_last_detection = parse_json(last_detection)\n| extend last_detection_id = toreal(json_last_detection.id), last_detection_type = tostring(json_last_detection.type), last_detection_url = tostring(json_last_detection.url)\n| project-away json_last_detection, last_detection",
            "outputStream": "[concat('Custom-', parameters('EntityScoringTableName'), '_CL')]"
          },
          {
            "streams": ["[concat('Custom-', parameters('LockdownTableName'))]"],
            "destinations": ["[concat('RuleDest', variables('suffix'))]"],
            "transformKql": "source\n| extend TimeGenerated = todatetime(now())",
            "outputStream": "[concat('Custom-', parameters('LockdownTableName'), '_CL')]"
          },
          {
            "streams": ["[concat('Custom-', parameters('HealthTableName'))]"],
            "destinations": ["[concat('RuleDest', variables('suffix'))]"],
            "transformKql": "source\n| extend TimeGenerated = todatetime(now()), json_memory = parse_json(memory), json_disk = parse_json(disk), json_system = parse_json(system), json_hostid = parse_json(hostid), json_connectivity = parse_json(connectivity), json_trafficdrop = parse_json(trafficdrop), json_cpu = parse_json(cpu), json_power = parse_json(power)\n| extend json_disk_disk_utilization = parse_json(json_disk.disk_utilization), json_system_version = parse_json(json_system.version), json_hostid_artifact_counts = parse_json(json_hostid.artifact_counts)\n| extend memory_usage_percent = toreal(json_memory.usage_percent), memory_free_bytes = toreal(json_memory.free_bytes), memory_used_bytes = toreal(json_memory.used_bytes), memory_total_bytes = toreal(json_memory.total_bytes), memory_updated_at = tostring(json_memory.updated_at), disk_disk_utilization_total_bytes = toreal(json_disk_disk_utilization.total_bytes), disk_disk_utilization_free_bytes = toreal(json_disk_disk_utilization.free_bytes), disk_disk_utilization_used_bytes = toreal(json_disk_disk_utilization.used_bytes), disk_disk_utilization_usage_percent = toreal(json_disk_disk_utilization.usage_percent), disk_updated_at = tostring(json_disk.updated_at), system_uptime = tostring(json_system.uptime), system_serial_number = tostring(json_system.serial_number), system_version_model = tostring(json_system_version.model), system_version_mode = tostring(json_system_version.mode), system_version_cloud_bridge = tobool(json_system_version.cloud_bridge), system_version_gmt = todatetime(json_system_version.gmt), system_version_last_update = tostring(json_system_version.last_update), system_version_last_update_utc = todatetime(json_system_version.last_update_utc), system_version_vm_type = tostring(json_system_version.vm_type), system_version_vectra_instance_type = tostring(json_system_version.vectra_instance_type), system_version_vectra_version = tostring(json_system_version.vectra_version), system_updated_at = tostring(json_system.updated_at), hostid_artifact_counts_TestEDR = toreal(json_hostid_artifact_counts.TestEDR), hostid_artifact_counts_arsenic = toreal(json_hostid_artifact_counts.arsenic), hostid_artifact_counts_carbon_black = toreal(json_hostid_artifact_counts.carbon_black), hostid_artifact_counts_cb_cloud = toreal(json_hostid_artifact_counts.cb_cloud), hostid_artifact_counts_clear_state = toreal(json_hostid_artifact_counts.clear_state), hostid_artifact_counts_cookie = toreal(json_hostid_artifact_counts.cookie), hostid_artifact_counts_crowdstrike = toreal(json_hostid_artifact_counts.crowdstrike), hostid_artifact_counts_cybereason = toreal(json_hostid_artifact_counts.cybereason), hostid_artifact_counts_dhcp = toreal(json_hostid_artifact_counts.dhcp), hostid_artifact_counts_dns = toreal(json_hostid_artifact_counts.dns), hostid_artifact_counts_end_time = toreal(json_hostid_artifact_counts.end_time), hostid_artifact_counts_fireeye = toreal(json_hostid_artifact_counts.fireeye), hostid_artifact_counts_generic_edr = toreal(json_hostid_artifact_counts.generic_edr), hostid_artifact_counts_idle_end = toreal(json_hostid_artifact_counts.idle_end), hostid_artifact_counts_idle_start = toreal(json_hostid_artifact_counts.idle_start), hostid_artifact_counts_invalid = toreal(json_hostid_artifact_counts.invalid), hostid_artifact_counts_kerberos = toreal(json_hostid_artifact_counts.kerberos), hostid_artifact_counts_kerberos_user = toreal(json_hostid_artifact_counts.kerberos_user), hostid_artifact_counts_mdns = toreal(json_hostid_artifact_counts.mdns), hostid_artifact_counts_netbios = toreal(json_hostid_artifact_counts.netbios), hostid_artifact_counts_proxy_ip = toreal(json_hostid_artifact_counts.proxy_ip), hostid_artifact_counts_rdns = toreal(json_hostid_artifact_counts.rdns), hostid_artifact_counts_sentinelone = toreal(json_hostid_artifact_counts.sentinelone), hostid_artifact_counts_split = toreal(json_hostid_artifact_counts.split), hostid_artifact_counts_src_port = toreal(json_hostid_artifact_counts.src_port), hostid_artifact_counts_static_ip = toreal(json_hostid_artifact_counts.static_ip), hostid_artifact_counts_total = toreal(json_hostid_artifact_counts.total), hostid_artifact_counts_uagent = toreal(json_hostid_artifact_counts.uagent), hostid_artifact_counts_vmachine_info = toreal(json_hostid_artifact_counts.vmachine_info), hostid_artifact_counts_windows_defender = toreal(json_hostid_artifact_counts.windows_defender), hostid_artifact_counts_zia_device = toreal(json_hostid_artifact_counts.zia_device), hostid_artifact_counts_zpa_user = toreal(json_hostid_artifact_counts.zpa_user), hostid_ip_always_percent = toreal(json_hostid.ip_always_percent), hostid_ip_sometimes_percent = toreal(json_hostid.ip_sometimes_percent), hostid_ip_never_percent = toreal(json_hostid.ip_never_percent), hostid_updated_at = tostring(json_hostid.updated_at), connectivity_sensors = todynamic(json_connectivity.sensors), connectivity_updated_at = tostring(json_connectivity.updated_at), trafficdrop_sensors = todynamic(json_trafficdrop.sensors), trafficdrop_updated_at = tostring(json_trafficdrop.updated_at), cpu_user_percent = toreal(json_cpu.user_percent), cpu_nice_percent = toreal(json_cpu.nice_percent), cpu_system_percent = toreal(json_cpu.system_percent), cpu_idle_percent = toreal(json_cpu.idle_percent), cpu_updated_at = tostring(json_cpu.updated_at), power_status = tostring(json_power.status), power_error = tostring(json_power.error), power_updated_at = tostring(json_power.updated_at)\n| project-away json_memory, memory, json_disk, disk, json_disk_disk_utilization, disk_disk_utilization, json_system, system, json_system_version, system_version, json_hostid, hostid, json_hostid_artifact_counts, hostid_artifact_counts, json_connectivity, connectivity, json_trafficdrop, trafficdrop, json_cpu, cpu, json_power, power",
            "outputStream": "[concat('Custom-', parameters('HealthTableName'), '_CL')]"
          },
          {
            "streams": ["[concat('Custom-', parameters('EntitiesTableName'))]"],
            "destinations": ["[concat('RuleDest', variables('suffix'))]"],
            "transformKql": "source\n| extend TimeGenerated = todatetime(now()), json_assignment = parse_json(assignment)\n| extend json_assignment_assigned_by = parse_json(json_assignment.assigned_by), json_assignment_assigned_to = parse_json(json_assignment.assigned_to)\n| extend assignment_id = toreal(json_assignment.id), assignment_assigned_by_id = toreal(json_assignment_assigned_by.id), assignment_assigned_by_username = tostring(json_assignment_assigned_by.username), assignment_date_assigned = todatetime(json_assignment.date_assigned), assignment_assigned_to_id = toreal(json_assignment_assigned_to.id), assignment_assigned_to_username = tostring(json_assignment_assigned_to.username)\n| project-away json_assignment, assignment, json_assignment_assigned_by, assignment_assigned_by, json_assignment_assigned_to, assignment_assigned_to",
            "outputStream": "[concat('Custom-', parameters('EntitiesTableName'), '_CL')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2022-04-01",
      "name": "[variables('dcrRoleId')]",
      "properties": {
        "assignableScopes": [
          "[resourceGroup().id]",
          "[resourceId('Microsoft.Insights/dataCollectionRules', variables('dataRuleName'))]"
        ],
        "description": "Entra ID application access role",
        "permissions": [
          {
            "actions": [
              "Microsoft.Insights/Register/Action",
              "Microsoft.Support/*",
              "Microsoft.Resources/subscriptions/resourceGroups/read"
            ],
            "dataActions": [
              "Microsoft.Insights/Metrics/Write",
              "Microsoft.Insights/Telemetry/Write"
            ]
          }
        ],
        "roleName": "[variables('dcrRoleName')]",
        "type": "customRole"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, concat('Non Statistics DCR Role assignment', variables('FunctionName')))]",
      "dependsOn": ["[variables('dcrRoleId')]", "[variables('dataRuleName')]"],
      "scope": "[resourceId('Microsoft.Insights/dataCollectionRules', variables('dataRuleName'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('dcrRoleId'))]",
        "principalId": "[parameters('AzureEntraObjectID')]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('FunctionName')]",
        "WorkspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[tolower(variables('FunctionName'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": false,
        "encryption": {
          "requireInfrastructureEncryption": true,
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('FunctionName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('FunctionName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
        "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
      ],
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('FunctionName')]",
        "httpsOnly": true,
        "clientAffinityEnabled": true,
        "alwaysOn": true,
        "reserved": true,
        "siteConfig": {
          "linuxFxVersion": "python|3.12"
        }
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "type": "config",
          "name": "appsettings",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('FunctionName'))]"
          ],
          "properties": {
            "FUNCTIONS_EXTENSION_VERSION": "~4",
            "FUNCTIONS_WORKER_RUNTIME": "python",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
            "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('FunctionName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('FunctionName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
            "Health_Client_Id": "[parameters('VectraClientId - Health')]",
            "Health_Client_Secret_Key": "[parameters('VectraClientSecretKey - Health')]",
            "Entity_Scoring_Client_Id": "[parameters('VectraClientId - Entity Scoring')]",
            "Entity_Scoring_Client_Secret_Key": "[parameters('VectraClientSecretKey - Entity Scoring')]",
            "Detections_Client_Id": "[parameters('VectraClientId - Detections')]",
            "Detections_Client_Secret_Key": "[parameters('VectraClientSecretKey - Detections')]",
            "Audit_Client_Id": "[parameters('VectraClientId - Audits')]",
            "Audit_Client_Secret_Key": "[parameters('VectraClientSecretKey - Audits')]",
            "Lockdown_Client_Id": "[parameters('VectraClientId - Lockdown')]",
            "Lockdown_Client_Secret_Key": "[parameters('VectraClientSecretKey - Lockdown')]",
            "Host_Entity_Client_Id": "[parameters('VectraClientId - Host-Entity')]",
            "Host_Entity_Client_Secret_Key": "[parameters('VectraClientSecretKey - Host-Entity')]",
            "Account_Entity_Client_Id": "[parameters('VectraClientId - Account-Entity')]",
            "Account_Entity_Client_Secret_Key": "[parameters('VectraClientSecretKey - Account-Entity')]",
            "BaseURL": "[parameters('VectraBaseURL')]",
            "StartTime": "[parameters('StartTime')]",
            "Audits_Table_Name": "[parameters('AuditsTableName')]",
            "Detections_Table_Name": "[parameters('DetectionsTableName')]",
            "Entity_Scoring_Table_Name": "[parameters('EntityScoringTableName')]",
            "Lockdown_Table_Name": "[parameters('LockdownTableName')]",
            "Health_Table_Name": "[parameters('HealthTableName')]",
            "Entities_Table_Name": "[parameters('EntitiesTableName')]",
            "ExcludeGroupDetailsFromDetections": "[parameters('ExcludeGroupDetailsFromDetections')]",
            "LogLevel": "[parameters('LogLevel')]",
            "DetectionsSchedule": "[parameters('DetectionsSchedule')]",
            "AuditsSchedule": "[parameters('AuditsSchedule')]",
            "EntityScoringSchedule": "[parameters('EntityScoringSchedule')]",
            "LockdownSchedule": "[parameters('LockdownSchedule')]",
            "HealthSchedule": "[parameters('HealthSchedule')]",
            "EntitiesSchedule": "[parameters('EntitiesSchedule')]",
            "KeyVaultName": "[parameters('KeyvaultName')]",
            "AZURE_CLIENT_ID": "[parameters('AzureClientID')]",
            "AZURE_CLIENT_SECRET": "[parameters('AzureClientSecret')]",
            "AZURE_TENANT_ID": "[parameters('TenantID')]",
            "IncludeScoreDecrease": "[parameters('IncludeScoreDecrease')]",
            "Function_App_Name": "[variables('FunctionName')]",
            "Azure_Resource_Group_Name": "[resourceGroup().name]",
            "Azure_Subscription_Id": "[subscription().subscriptionId]",
            "AZURE_DATA_COLLECTION_ENDPOINT": "[reference(resourceId('Microsoft.Insights/dataCollectionEndpoints', variables('endpointName'))).logsIngestion.endpoint]",
            "DCR_RULE_ID": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', variables('dataRuleName'))).immutableId]",
            "SCOPE": "[variables('scope')]",
            "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/sentinel-VectraXDR330-functionapp"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('FunctionName'), '/default/', tolower(variables('FunctionName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('FunctionName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    }
  ]
}