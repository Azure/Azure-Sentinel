{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "FunctionName": {
            "minLength": 3,
            "maxLength": 24,
            "type": "string",
            "metadata": {
                "description": "Function Name must be unique, contains max 24 character or number and no special characters."
            }
        },
        "WorkspaceID": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Please copy it from intial deployment screen."
            }
        },
        "WorkspaceKey": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "Please copy it from intial deployment screen."
            }
        },
        "EnterpriseName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Obtain the enterprise name from Lookout (https://mtp.lookout.com)"
            }
        },
        "ApiKey": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Obtain the application key from Lookout (https://mtp.lookout.com)"
            }
        },
        "AppInsightsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Migrate Classic Application Insights to Log Analytic Workspace which is retiring by 29 Febraury 2024. Use 'Log Analytic Workspace-->Properties' blade having 'Resource ID' property value. This is a fully qualified resourceId which is in format '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}'"
            }
        }
    },
    "variables": {
        "FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",
        "KeyVaultName": "[concat(take(variables('FunctionName'), 20), 'kv')]",
        "StorageName": "[tolower(take(variables('FunctionName'), 24))]",
        "EnterpriseName" : "EnterpriseName",
        "ApiKey" : "ApiKey",
        "StorageSuffix": "[environment().suffixes.storage]",
        "LogAnaltyicsUri": "[replace(environment().portal, 'https://portal', concat('https://', toLower(parameters('WorkspaceID')), '.ods.opinsights'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('FunctionName')]",
                "WorkspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('StorageName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageName')))]",
                "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
            ],
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('FunctionName')]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "alwaysOn": true,
                "reserved": true,
                "siteConfig": {
                    "linuxFxVersion": "python|3.11"
                }
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('FunctionName'))]",
                        "[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]",
                        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('EnterpriseName'))]",            
                        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('ApiKey'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "FUNCTIONS_WORKER_RUNTIME": "python",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('StorageName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "WorkspaceID": "[parameters('WorkspaceID')]",
                        "WorkspaceKey": "[parameters('WorkspaceKey')]",
                        "EnterpriseName": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('EnterpriseName')).secretUriWithVersion, ')')]",
			            "ApiKey": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('ApiKey')).secretUriWithVersion, ')')]",
                        "logAnalyticsUri": "[variables('LogAnaltyicsUri')]",
                        "KeyVaultName" : "[variables('KeyVaultName')]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/sentinel-lookoutapi-functionapp"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[variables('KeyVaultName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites', variables('FunctionName'))]"
            ],
            "properties": {
              "sku": {
                "family": "A",
                "name": "Standard"
              },
              "tenantId": "[subscription().tenantId]",
              "accessPolicies": [
                {
                  "tenantId": "[subscription().tenantId]",
                  "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionName')),'2019-08-01', 'full').identity.principalId]",
                  "permissions": {
                    "keys" : ["get", "list", "create", "delete"], 
                    "secrets": [ "get", "list", "set", "delete"]

                  }
                }
              ],
              "enabledForDeployment": false,
              "enabledForDiskEncryption": false,
              "enabledForTemplateDeployment": true,
              "enableSoftDelete": true
            },
            "resources": [
                {
                    "type": "secrets",
                    "apiVersion": "2016-10-01",
                    "name": "[variables('EnterpriseName')]",
                    "dependsOn": [
                    "[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
                    ],
                    "properties": {
                    "value": "[parameters('EnterpriseName')]",
                    "contentType": "string",
                    "attributes": {
                        "enabled": true
                    }
                    }
                },
                {
                    "type": "secrets",
                    "apiVersion": "2016-10-01",
                    "name": "[variables('ApiKey')]",
                    "dependsOn": [
                    "[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
                    ],
                    "properties": {
                    "value": "[parameters('ApiKey')]",
                    "contentType": "string",
                    "attributes": {
                        "enabled": true
                    }
                    }
                }
            ]
        }
    ]
}