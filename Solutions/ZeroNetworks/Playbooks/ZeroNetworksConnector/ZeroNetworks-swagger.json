{
  "swagger": "2.0",
  "info": {
    "title": "Zero Networks",
    "description": "Zero Networks Rest API",
    "version": "1.0"
  },
  "host": "portal.zeronetworks.com",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/assets": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/assetList"
            }
          }
        },
        "operationId": "Search for an Asset",
        "parameters": [
          {
            "name": "_limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "default": 400,
            "format": "int32",
            "x-ms-visibility": "internal"
          },
          {
            "name": "_search",
            "in": "query",
            "required": true,
            "type": "string",
            "format": ""
          }
        ]
      }
    },
    "/entities/encode-ip": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "Encode IP Address to AssetId",
        "parameters": [
          {
            "name": "ip",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "IP Address to encode"
          }
        ]
      }
    },
    "/assets/searchId": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "assetId": {
                  "type": "string",
                  "description": "assetId"
                }
              }
            }
          }
        },
        "operationId": "Get AssetId by FQDN",
        "parameters": [
          {
            "name": "fqdn",
            "in": "query",
            "required": true,
            "type": "string",
            "format": ""
          }
        ]
      }
    },
    "/assets/protect": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "operationId": "Add asset to protection",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of AssetIDs"
                },
                "protectAt": {
                  "type": "integer",
                  "format": "int64",
                  "description": "epoch(ms) when to move from learning to protection, 0 means protectNow"
                }
              }
            }
          }
        ]
      }
    },
    "/assets/unprotect": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "Remove asset from protection",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of AssetIDs"
                }
              }
            }
          }
        ]
      }
    },
    "/protection/rules/inbound-block": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/ruleResponse"
            }
          }
        },
        "operationId": "Create Inbound Block rule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ruleBody"
            }
          }
        ]
      }
    },
    "/protection/rules/outbound-block": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/ruleResponse"
            }
          }
        },
        "operationId": "Create Outbound Block rule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ruleBody"
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "assetList": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/asset"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "asset": {
      "properties": {
        "assetType": {
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        },
        "domain": {
          "example": "domain.local",
          "type": "string"
        },
        "fqdn": {
          "example": "laptoppc.domain.local",
          "type": "string"
        },
        "id": {
          "example": "a:a:6d020055",
          "type": "string"
        },
        "ipAddresses": {
          "items": {
            "example": "1.1.1.1",
            "type": "string"
          },
          "type": "array"
        },
        "isAccessible": {
          "type": "boolean"
        },
        "managers": {
          "items": {
            "$ref": "#/definitions/manager"
          },
          "type": "array"
        },
        "name": {
          "example": "laptoppc",
          "type": "string"
        },
        "operatingSystem": {
          "example": "Windows 10 Pro",
          "type": "string"
        },
        "protectionState": {
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "format": "int32",
          "type": "integer"
        },
        "source": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "type": "integer"
        },
        "state": {
          "$ref": "#/definitions/state"
        }
      },
      "type": "object"
    },
    "manager": {
      "properties": {
        "entityType": {
          "enum": [
            "user"
          ],
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "example": "User Name",
          "type": "string"
        },
        "permission": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "rule": {
      "properties": {
        "action": {
          "format": "int32",
          "type": "integer"
        },
        "createdAt": {
          "description": "epoch timestamp",
          "format": "int32",
          "type": "integer"
        },
        "createdBy": {
          "properties": {
            "createdBy": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "enforcementSource": {
              "format": "int32",
              "type": "integer"
            },
            "userRole": {
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "direction": {
          "format": "int32",
          "type": "integer"
        },
        "expiresAt": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "localEntityId": {
          "type": "string"
        },
        "localEntityInfo": {
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "localProcessesList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "parentId": {
          "type": "string"
        },
        "parentType": {
          "format": "int32",
          "type": "integer"
        },
        "portsList": {
          "items": {
            "properties": {
              "ports": {
                "type": "string"
              },
              "protocolType": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "remoteEntityIdsList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "remoteEntityInfos": {
          "items": {
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "state": {
          "format": "int32",
          "type": "integer"
        },
        "updatedAt": {
          "description": "epoch timestamp",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ruleBody": {
      "properties": {
        "description": {
          "type": "string"
        },
        "expiresAt": {
          "example": 0,
          "format": "int32",
          "type": "integer"
        },
        "localEntityId": {
          "type": "string"
        },
        "localProcessesList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "portsList": {
          "items": {
            "properties": {
              "ports": {
                "type": "string"
              },
              "protocolType": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "remoteEntityIdsList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "state": {
          "example": 1,
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "expiresAt",
        "localEntityId",
        "localProcessesList",
        "portsList",
        "remoteEntityIdsList",
        "state"
      ],
      "type": "object"
    },
    "ruleResponse": {
      "properties": {
        "item": {
          "$ref": "#/definitions/rule"
        }
      },
      "type": "object"
    },
    "state": {
      "properties": {
        "assetId": {
          "type": "string"
        },
        "isAssetConnected": {
          "type": "boolean"
        },
        "lasDisconnectedAt": {
          "description": "epoch timestamp",
          "type": "integer"
        },
        "protectAt": {
          "description": "epoch timestamp",
          "format": "int64",
          "type": "integer"
        },
        "protectionState": {
          "enum": [
            1,
            3,
            5
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": []
}