{
  "swagger": "2.0",
  "info": {
    "title": "Cisco ASA REST API",
    "version": "v1"
  },
  "paths": {
    "/api/access/in": {
      "get": {
        "tags": [
          "AccessIn"
        ],
        "summary": "Fetch inbound access groups",
        "description": "Fetch inbound access groups",
        "operationId": "CiscoAsaGetAccessGroupsInV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to return; maximum of 100",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Index of first item to return",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessGroupCollection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/access/in/{interfaceId}": {
      "get": {
        "tags": [
          "AccessIn"
        ],
        "summary": "Fetch an inbound access group by interface name",
        "description": "Fetch an inbound access group by interface name",
        "operationId": "CiscoAsaGetAccessGroupInV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "interfaceId",
            "description": "The interface of inbound access group to be fetched",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessGroup"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/access/in/{interfaceId}/rules": {
      "get": {
        "tags": [
          "AccessIn"
        ],
        "summary": "Fetch inbound access rules on an interface",
        "description": "Fetch inbound access rules on an interface",
        "operationId": "CiscoAsaGetAccessGroupInRulesV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "interfaceId",
            "description": "The interface to which the inbound access rule applies",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to return; maximum of 100",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Index of first item to return",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtendedACECollection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AccessIn"
        ],
        "summary": "Create an inbound access rule on an interface",
        "description": "Create an inbound access rule on an interface",
        "operationId": "CiscoAsaPostAccessGroupInRuleV1",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "interfaceId",
            "description": "The interface to which the inbound access rule applies",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExtendedACEPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/access/in/{interfaceId}/rules/{objectId}": {
      "get": {
        "tags": [
          "AccessIn"
        ],
        "summary": "Fetch an inbound access rule on an interface",
        "description": "Fetch an inbound access rule on an interface",
        "operationId": "CiscoAsaGetAccessGroupInRuleV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "interfaceId",
            "description": "The interface to which the inbound access rule applies",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "objectId",
            "description": "The object ID of the inbound access rule to be fetched",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtendedACE"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccessIn"
        ],
        "summary": "Remove an inbound access rule on an interface",
        "description": "Remove an inbound access rule on an interface",
        "operationId": "CiscoAsaDeleteAccessGroupInRuleV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "interfaceId",
            "description": "The interface to which the inbound access rule applies",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "objectId",
            "description": "The object ID of the inbound access rule to be removed",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/monitoring/ipaddress": {
      "get": {
        "tags": [
          "MonitoringIpAddress"
        ],
        "summary": "Get the connection statistics of the device",
        "description": "Get the connection statistics of the device",
        "operationId": "CiscoAsaGetMonitoringIPAddressesV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to return; maximum of 100",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Index of first item to return",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IPAddressCollection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/monitoring/ipaddress/{objectId}": {
      "get": {
        "tags": [
          "MonitoringIpAddress"
        ],
        "summary": "Get the ipaddress details of the device",
        "description": "Get the ipaddress details of the device",
        "operationId": "CiscoAsaGetMonitoringIPAddressV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "objectId",
            "description": "Name of the interface (object ID) for which to fetch ipaddress details",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/objects/extendedacls/{aclName}/aces": {
      "get": {
        "tags": [
          "ObjectsExtendedAcls"
        ],
        "summary": "Fetch ACEs on an interface",
        "description": "Fetch ACEs on an interface",
        "operationId": "CiscoAsaGetObjectsExtendedAcesV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aclName",
            "description": "The name of the ACL to which this rule belongs",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to return; maximum of 100",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Index of first item to return",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtendedACECollection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ObjectsExtendedAcls"
        ],
        "summary": "Add a new ACE on an interface",
        "description": "Add a new ACE on an interface",
        "operationId": "CiscoAsaPostObjectsExtendedAceV1",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aclName",
            "description": "The name of the ACL to which this rule belongs",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Configuration of the ACE to be added",
            "schema": {
              "$ref": "#/definitions/ExtendedACEPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/objects/extendedacls/{aclName}/aces/{objectId}": {
      "get": {
        "tags": [
          "ObjectsExtendedAcls"
        ],
        "summary": "Fetch an ACE on an interface",
        "description": "Fetch an ACE on an interface",
        "operationId": "CiscoAsaGetObjectsExtendedAceV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aclName",
            "description": "The name of the ACL to which this rule belongs",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "objectId",
            "description": "The object ID of the ACE to be fetched",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtendedACE"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ObjectsExtendedAcls"
        ],
        "summary": "Delete an ACE",
        "description": "Delete an ACE",
        "operationId": "CiscoAsaDeleteObjectsExtendedAceV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "aclName",
            "description": "The name of the ACL to which this rule belongs",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "objectId",
            "description": "The object ID of the ACE to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/objects/networkobjectgroups": {
      "get": {
        "tags": [
          "ObjectsNetworkObjectGroups"
        ],
        "summary": "Fetch network object groups",
        "description": "Fetch network object groups",
        "operationId": "CiscoAsaGetObjectsNetworkObjectGroupsV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to return; maximum of 100",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Index of first item to return",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkObjGroupCollection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ObjectsNetworkObjectGroups"
        ],
        "summary": "Add a new network object group",
        "description": "Add a new network object group",
        "operationId": "CiscoAsaPostObjectsNetworkObjectGroupV1",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkObjGroupPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/objects/networkobjectgroups/{objectId}": {
      "get": {
        "tags": [
          "ObjectsNetworkObjectGroups"
        ],
        "summary": "Fetch a network object group",
        "description": "Fetch a network object group",
        "operationId": "CiscoAsaGetObjectsNetworkObjectGroupV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "objectId",
            "description": "The ID of the network object group to be fetched",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkObjGroup"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ObjectsNetworkObjectGroups"
        ],
        "summary": "Patch members of a network object group",
        "description": "Patch members of a network object group",
        "operationId": "CiscoAsaPatchObjectsNetworkObjectGroupV1",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "objectId",
            "description": "The ID of the network object group to be patched",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkObjGroupPatch"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/objects/networkobjects": {
      "get": {
        "tags": [
          "ObjectsNetworkObjects"
        ],
        "summary": "Fetch network objects",
        "description": "Fetch network objects",
        "operationId": "CiscoAsaGetObjectsNetworkObjectsV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Number of items to return; maximum of 100",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Index of first item to return",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkObjectCollection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ObjectsNetworkObjects"
        ],
        "summary": "Add a new network object",
        "description": "Add a new network object",
        "operationId": "CiscoAsaPostObjectsNetworkObjectV1",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkObjectPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/api/objects/networkobjects/{objectId}": {
      "get": {
        "tags": [
          "ObjectsNetworkObjects"
        ],
        "summary": "Fetch a network object",
        "description": "Fetch a network object",
        "operationId": "CiscoAsaGetObjectsNetworkObjectV1",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "objectId",
            "description": "The ID of the network object to be fetched",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "User-Agent",
            "description": "You must include the header 'User-Agent: REST API Agent' in all API calls",
            "required": true,
            "type": "string",
            "default": "REST API Agent",
            "enum": [
              "REST API Agent"
            ],
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkObject"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "RangeInfo": {
      "type": "object",
      "properties": {
        "offset": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Offset"
        },
        "limit": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Limit"
        },
        "total": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Total"
        }
      },
      "x-ms-summary": "Range info"
    },
    "Interface": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: objectRef#Interface",
          "type": "string",
          "x-ms-summary": "Interface kind"
        },
        "refLink": {
          "type": "string",
          "x-ms-summary": "Interface refLink"
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "Interface objectId"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Interface name"
        }
      }
    },
    "AccessGroup": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: object#AccessGroup",
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "selfLink": {
          "description": "Unique URI for this resource object",
          "type": "string",
          "x-ms-summary": "SelfLink"
        },
        "aclName": {
          "description": "Name of the ACL used in the access group",
          "type": "string",
          "x-ms-summary": "ACL name"
        },
        "direction": {
          "description": "Direction: IN our OUT",
          "type": "string",
          "x-ms-summary": "Direction"
        },
        "interface": {
          "$ref": "#/definitions/Interface"
        }
      }
    },
    "AccessGroupCollection": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: collection#AccessGroup",
          "type": "string",
          "x-ms-summary": "Collection kind"
        },
        "selfLink": {
          "description": "Unique URI for this resource object",
          "type": "string",
          "x-ms-summary": "Collection selfLink"
        },
        "rangeInfo": {
          "$ref": "#/definitions/RangeInfo"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessGroup"
          },
          "x-ms-summary": "Access group items"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string",
          "x-ms-summary": "Message level"
        },
        "code": {
          "type": "string",
          "x-ms-summary": "Message code"
        },
        "context": {
          "type": "string",
          "x-ms-summary": "Message context"
        },
        "details": {
          "type": "string",
          "x-ms-summary": "Message details"
        }
      }
    },
    "ErrorModel": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          },
          "x-ms-summary": "Error messages"
        }
      }
    },
    "SourceAddress": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: AnyIPAddress, IPv4Address, IPv4FQDN, IPv4Network, IPv4Range, IPv6Address, IPv6FQDN, IPv6Network, IPv6Range, SecurityName, SecurityTag, interfaceIP, objectRef#NetworkObj, objectRef#NetworkObjGroup",
          "enum": [
            "AnyIPAddress",
            "IPv4Address",
            "IPv4FQDN",
            "IPv4Network",
            "IPv4Range",
            "IPv6Address",
            "IPv6FQDN",
            "IPv6Network",
            "IPv6Range",
            "SecurityName",
            "SecurityTag",
            "interfaceIP",
            "objectRef#NetworkObj",
            "objectRef#NetworkObjGroup"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "ObjectId",
          "x-ms-visibility": "important"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value",
          "x-ms-visibility": "important"
        }
      },
      "x-ms-summary": "Source address"
    },
    "DestinationAddress": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: AnyIPAddress, IPv4Address, IPv4FQDN, IPv4Network, IPv4Range, IPv6Address, IPv6FQDN, IPv6Network, IPv6Range, SecurityName, SecurityTag, interfaceIP, objectRef#NetworkObj, objectRef#NetworkObjGroup",
          "enum": [
            "AnyIPAddress",
            "IPv4Address",
            "IPv4FQDN",
            "IPv4Network",
            "IPv4Range",
            "IPv6Address",
            "IPv6FQDN",
            "IPv6Network",
            "IPv6Range",
            "SecurityName",
            "SecurityTag",
            "interfaceIP",
            "objectRef#NetworkObj",
            "objectRef#NetworkObjGroup"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "ObjectId",
          "x-ms-visibility": "important"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value",
          "x-ms-visibility": "important"
        }
      },
      "x-ms-summary": "Destination address"
    },
    "SourceService": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: AnyService, ICMP6Service, ICMPService, NetworkProtocol, NetworkServiceGroups, NetworkServiceObjects, TcpUdpService",
          "enum": [
            "AnyService",
            "ICMP6Service",
            "ICMPService",
            "NetworkProtocol",
            "NetworkServiceGroups",
            "NetworkServiceObjects",
            "TcpUdpService"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "x-ms-summary": "Source service"
    },
    "DestinationService": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: AnyService, ICMP6Service, ICMPService, NetworkProtocol, NetworkServiceGroups, NetworkServiceObjects, TcpUdpService",
          "enum": [
            "AnyService",
            "ICMP6Service",
            "ICMPService",
            "NetworkProtocol",
            "NetworkServiceGroups",
            "NetworkServiceObjects",
            "TcpUdpService"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value",
          "x-ms-visibility": "important"
        }
      },
      "x-ms-summary": "Destination service"
    },
    "Rulelogging": {
      "required": [
        "logStatus"
      ],
      "type": "object",
      "properties": {
        "logInterval": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Log interval"
        },
        "logStatus": {
          "description": "One of: Errors, Debugging, Emergencies, Critical, Informational, Alerts, Disabled, Warnings, Notifications, Default",
          "enum": [
            "Errors",
            "Debugging",
            "Emergencies",
            "Critical",
            "Informational",
            "Alerts",
            "Disabled",
            "Warnings",
            "Notifications",
            "Default"
          ],
          "type": "string",
          "x-ms-summary": "Log status"
        }
      },
      "x-ms-summary": "Rule logging"
    },
    "DestinationSecurity": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: SecurityName, SecurityTag, objectRef#SecurityObjGroup",
          "enum": [
            "SecurityName",
            "SecurityTag",
            "objectRef#SecurityObjGroup"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "ObjectId"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "x-ms-summary": "Destination security"
    },
    "SourceSecurity": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: SecurityName, SecurityTag, objectRef#SecurityObjGroup",
          "enum": [
            "SecurityName",
            "SecurityTag",
            "objectRef#SecurityObjGroup"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "ObjectId"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "x-ms-summary": "Source security"
    },
    "User": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: AnyUser, NoneUser, objectRef#LocalUserObjGroup, objectRef#UserGroupObj, objectRef#UserObj",
          "enum": [
            "AnyUser",
            "NoneUser",
            "objectRef#LocalUserObjGroup",
            "objectRef#UserGroupObj",
            "objectRef#UserObj"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "ObjectId"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "x-ms-summary": "User"
    },
    "TimeRange": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: objectRef#TimeRange",
          "enum": [
            "objectRef#TimeRange"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "objectId": {
          "type": "string",
          "x-ms-summary": "OjectId"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "x-ms-summary": "Time range"
    },
    "ExtendedACE": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: object#ExtendedACE",
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "selfLink": {
          "description": "Unique URI for this resource object",
          "type": "string",
          "x-ms-summary": "SelfLink"
        },
        "permit": {
          "description": "Hows if the action is permit or deny",
          "type": "boolean",
          "x-ms-summary": "Permit"
        },
        "sourceAddress": {
          "$ref": "#/definitions/SourceAddress"
        },
        "destinationAddress": {
          "$ref": "#/definitions/DestinationAddress"
        },
        "sourceService": {
          "$ref": "#/definitions/SourceService"
        },
        "destinationService": {
          "$ref": "#/definitions/DestinationService"
        },
        "active": {
          "description": "Shows if the rule is active or inactive, default is active",
          "type": "boolean",
          "x-ms-summary": "Active"
        },
        "remarks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Remarks"
        },
        "ruleLogging": {
          "$ref": "#/definitions/Rulelogging"
        },
        "position": {
          "format": "int32",
          "description": "The position of the ace inside the ACL",
          "type": "integer",
          "x-ms-summary": "Position"
        },
        "isAccessRule": {
          "type": "boolean",
          "x-ms-summary": "Is access rule"
        },
        "objectId": {
          "description": "Unique ID of this resource object",
          "type": "string",
          "x-ms-summary": "ObjectId"
        },
        "dstSecurity": {
          "$ref": "#/definitions/DestinationSecurity"
        },
        "srcSecurity": {
          "$ref": "#/definitions/SourceSecurity"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "timeRange": {
          "$ref": "#/definitions/TimeRange"
        }
      }
    },
    "ExtendedACECollection": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: collection#ExtendedACE",
          "type": "string",
          "x-ms-summary": "Collection kind"
        },
        "selfLink": {
          "description": "Unique URI for this resource object",
          "type": "string",
          "x-ms-summary": "Collection selfLink"
        },
        "rangeInfo": {
          "$ref": "#/definitions/RangeInfo"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedACE"
          },
          "x-ms-summary": "Extended ACE items"
        }
      }
    },
    "ExtendedACEPost": {
      "required": [
        "active",
        "destinationAddress",
        "destinationService",
        "permit",
        "sourceAddress"
      ],
      "type": "object",
      "properties": {
        "permit": {
          "description": "Hows if the action is permit or deny",
          "type": "boolean",
          "x-ms-summary": "Permit"
        },
        "sourceAddress": {
          "$ref": "#/definitions/SourceAddress"
        },
        "destinationAddress": {
          "$ref": "#/definitions/DestinationAddress"
        },
        "sourceService": {
          "$ref": "#/definitions/SourceService"
        },
        "destinationService": {
          "$ref": "#/definitions/DestinationService"
        },
        "active": {
          "description": "Shows if the rule is active or inactive, default is active",
          "type": "boolean",
          "x-ms-summary": "Active"
        },
        "remarks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Remarks"
        },
        "ruleLogging": {
          "$ref": "#/definitions/Rulelogging"
        },
        "position": {
          "format": "int32",
          "description": "The position of the ace inside the ACL",
          "type": "integer",
          "x-ms-summary": "Position"
        },
        "dstSecurity": {
          "$ref": "#/definitions/DestinationSecurity"
        },
        "srcSecurity": {
          "$ref": "#/definitions/SourceSecurity"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "timeRange": {
          "$ref": "#/definitions/TimeRange"
        }
      }
    },
    "IPAddress": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: object#IPAddress",
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "selfLink": {
          "description": "Unique URI for this resource object",
          "type": "string",
          "x-ms-summary": "SelfLink"
        },
        "ipAddress": {
          "description": "Master IP Address",
          "type": "string",
          "x-ms-summary": "IP address"
        },
        "isClusterInterface": {
          "description": "Cluster Interface",
          "type": "boolean",
          "x-ms-summary": "Is cluster interface"
        },
        "netmask": {
          "description": "Netmask",
          "type": "string",
          "x-ms-summary": "Netmask"
        },
        "interface": {
          "$ref": "#/definitions/Interface"
        },
        "objectId": {
          "description": "Unique ID of this resource object",
          "type": "string",
          "x-ms-summary": "ObjectId"
        },
        "masterIpAddress": {
          "description": "Master IP Address",
          "type": "string",
          "x-ms-summary": "Master IP address"
        },
        "masterIpNetmask": {
          "description": "Master IP Netmask",
          "type": "string",
          "x-ms-summary": "Master IP Netmask"
        }
      }
    },
    "IPAddressCollection": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: collection#IPAddressDetails",
          "type": "string",
          "x-ms-summary": "Collection kind"
        },
        "selfLink": {
          "description": "Unique URI for this resource object",
          "type": "string",
          "x-ms-summary": "Collection selfLink"
        },
        "rangeInfo": {
          "$ref": "#/definitions/RangeInfo"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPAddress"
          },
          "x-ms-summary": "IP Address items"
        }
      }
    },
    "NetworkObjGroupMember": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: IPv4Address, IPv4Network, IPv6Address, IPv6Network, objectRef#NetworkObj",
          "type": "string",
          "x-ms-summary": "Member kind"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Member value"
        },
        "refLink": {
          "type": "string",
          "x-ms-summary": "Member refLink"
        },
        "objectId": {
          "description": "Unique ID of this resource object",
          "type": "string",
          "x-ms-summary": "Member objectId"
        }
      }
    },
    "NetworkObjGroup": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: object#NetworkObjGroup",
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "selfLink": {
          "description": "Unique URI for this resource object",
          "type": "string",
          "x-ms-summary": "SelfLink"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkObjGroupMember"
          },
          "x-ms-summary": "Members"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description"
        },
        "objectId": {
          "description": "Unique ID of this resource object",
          "type": "string",
          "x-ms-summary": "ObjectId"
        }
      }
    },
    "NetworkObjGroupCollection": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: collection#NetworkObjGroup",
          "type": "string",
          "x-ms-summary": "Collection kind"
        },
        "selfLink": {
          "description": "Unique URI for this resource object",
          "type": "string",
          "x-ms-summary": "Collection selfLink"
        },
        "rangeInfo": {
          "$ref": "#/definitions/RangeInfo"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkObjGroup"
          },
          "x-ms-summary": "Network object group items"
        }
      }
    },
    "NetworkObjGroupMemberPost": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: IPv4Address, IPv4Range, IPv4Network, IPv4FQDN, IPv6Address, IPv6Range, IPv6Network, objectRef#NetworkObj",
          "enum": [
            "IPv4Address",
            "IPv4Range",
            "IPv4Network",
            "IPv4FQDN",
            "IPv6Address",
            "IPv6Range",
            "IPv6Network",
            "objectRef#NetworkObj"
          ],
          "type": "string",
          "x-ms-summary": "Member kind"
        },
        "value": {
          "description": "Used when 'Member kind' is IPv4Address, IPv4Network, IPv6Address or IPv6Network",
          "type": "string",
          "x-ms-summary": "Member value"
        },
        "objectId": {
          "description": "Unique ID of this resource object, used when 'Member kind' is objectRef#NetworkObj",
          "type": "string",
          "x-ms-summary": "Member objectId"
        }
      }
    },
    "NetworkObjGroupPost": {
      "required": [
        "kind",
        "members",
        "name"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: object#NetworkObjGroup",
          "default": "object#NetworkObjGroup",
          "enum": [
            "object#NetworkObjGroup"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkObjGroupMemberPost"
          },
          "x-ms-summary": "Members"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description"
        }
      }
    },
    "NetworkObjGroupPatch": {
      "type": "object",
      "properties": {
        "members": {
          "description": "Set this field to replace all the members of the network object group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkObjGroupMemberPost"
          },
          "x-ms-summary": "Override group members"
        },
        "members.add": {
          "description": "Set this field to add members to the network object group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkObjGroupMemberPost"
          },
          "x-ms-summary": "Add group members"
        },
        "members.remove": {
          "description": "Set this field to remove members from the network object group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkObjGroupMemberPost"
          },
          "x-ms-summary": "Remove group members"
        }
      }
    },
    "Host": {
      "required": [
        "kind",
        "value"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "One of: IPv4Address, IPv4Range, IPv4Network, IPv4FQDN, IPv6Address, IPv6Range, IPv6Network",
          "enum": [
            "IPv4Address",
            "IPv4Range",
            "IPv4Network",
            "IPv4FQDN",
            "IPv6Address",
            "IPv6Range",
            "IPv6Network"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Value"
        }
      },
      "x-ms-summary": "Host"
    },
    "NetworkObject": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: object#NetworkObj",
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "selfLink": {
          "description": "Unique URI for this resource object",
          "type": "string",
          "x-ms-summary": "SelfLink"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "host": {
          "$ref": "#/definitions/Host"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description"
        },
        "objectId": {
          "description": "Unique ID of this resource object",
          "type": "string",
          "x-ms-summary": "ObjectId"
        }
      }
    },
    "NetworkObjectCollection": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: collection#NetworkObj",
          "type": "string",
          "x-ms-summary": "Collection kind"
        },
        "selfLink": {
          "description": "Unique URI for this resource object",
          "type": "string",
          "x-ms-summary": "Collection selfLink"
        },
        "rangeInfo": {
          "$ref": "#/definitions/RangeInfo"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkObject"
          },
          "x-ms-summary": "Network object items"
        }
      }
    },
    "NetworkObjectPost": {
      "required": [
        "host",
        "kind",
        "name"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource object: object#NetworkObj",
          "default": "object#NetworkObj",
          "enum": [
            "object#NetworkObj"
          ],
          "type": "string",
          "x-ms-summary": "Kind"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "host": {
          "$ref": "#/definitions/Host"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description"
        }
      }
    }
  },
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic",
      "description": "Basic Authorization header"
    }
  },
  "security": [
    {
      "basic_auth": [ ]
    }
  ]
}