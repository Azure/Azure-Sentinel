id: 974718ae-c0a5-4d4a-bb42-63a0f394d66f
Function:
  Title: Corelight Files Events
  Version: '1.1.0'
  LastUpdated: '2024-08-09'
Category: Microsoft Sentinel Parser
FunctionName: corelight_files
FunctionAlias: corelight_files
FunctionQuery: |
    let dummy_table = datatable(TimeGenerated: datetime) [];
    let corelight_files = view () {
        union isfuzzy=true Corelight_v2_files_CL,
        Corelight_v2_files_red_CL, dummy_table
        | extend
            path = column_ifexists("_path_s", ""),
            system_name = column_ifexists("_system_name_s", ""),
            write_ts = column_ifexists("_write_ts_t", ""),
            analyzers = column_ifexists("analyzers_s", ""),
            conn_uids = column_ifexists("conn_uids_s", ""),
            depth = column_ifexists("depth_d", real(null)),
            duration = column_ifexists("duration_d", real(null)),
            fuid = column_ifexists("fuid_s", ""),
            is_orig = column_ifexists("is_orig_b", ""),
            local_orig = column_ifexists("local_orig_b", ""),
            md5 = column_ifexists("md5_s", ""),
            mime_type = column_ifexists("mime_type_s", ""),
            missing_bytes = column_ifexists("missing_bytes_d", real(null)),
            overflow_bytes = column_ifexists("overflow_bytes_d", real(null)),
            rx_hosts = column_ifexists("rx_hosts_s", ""),
            seen_bytes = column_ifexists("seen_bytes_d", real(null)),
            sha1 = column_ifexists("sha1_s", ""),
            sha256 = column_ifexists("sha256_s", ""),
            source = column_ifexists("source_s", ""),
            timedout = column_ifexists("timedout_b", ""),
            total_bytes = column_ifexists("total_bytes_d", real(null)),
            tx_hosts = column_ifexists("tx_hosts_s", ""),
            vlan = column_ifexists("vlan_d", real(null)),
            filename = column_ifexists("filename_s", ""),
            parent_fuid = column_ifexists("parent_fuid_s", ""),
            extracted = column_ifexists("extracted_s", ""),
            extracted_cutoff = column_ifexists("extracted_cutoff_b", ""),
            extracted_size = column_ifexists("extracted_size_d", real(null)),
            id_orig_h = column_ifexists("id_orig_h_s", ""),
            id_orig_p = column_ifexists("id_orig_p_d", real(null)),
            id_resp_h = column_ifexists("id_resp_h_s", ""),
            id_resp_p = column_ifexists("id_resp_p_d", real(null)),
            num = column_ifexists("num_d", real(null))
        | extend
            EventVendor = "Corelight",
            EventProduct = "CorelightSensor",
            EventType = "files",
            ts = TimeGenerated,
            uid = conn_uids,
            dest_host = rx_hosts,
            bytes = seen_bytes,
            file_size = total_bytes,
            src_host = tx_hosts,
            file_name = filename,
            object = filename,
            src = id_orig_h,
            src_ip = id_orig_h,
            src_port = id_orig_p,
            dest = id_resp_h,
            dest_ip = id_resp_h,
            dest_port = id_resp_p,
            app = source,
            file_hash = coalesce(md5, sha1, sha256, "unknown"),
            sensor_name = coalesce(system_name, "unknown")
        | extend
            is_broadcast =iff(src in("0.0.0.0", "255.255.255.255") or dest in("255.255.255.255", "0.0.0.0"),"true","false"),
            is_dest_internal_ip = iff(ipv4_is_in_range( dest, "10.0.0.0/8") or ipv4_is_in_range( dest, "172.16.0.0/12") or ipv4_is_in_range( dest, "192.168.0.0/16"), "true", "false"),
            is_src_internal_ip = iff(local_orig == true, "true", "false")
        | project
            TimeGenerated,
            path,
            system_name,
            write_ts,
            analyzers,
            conn_uids,
            depth,
            duration,
            fuid,
            is_orig,
            local_orig,
            md5,
            mime_type,
            missing_bytes,
            overflow_bytes,
            rx_hosts,
            seen_bytes,
            sha1,
            sha256,
            source,
            timedout,
            total_bytes,
            tx_hosts,
            vlan,
            filename,
            parent_fuid,
            extracted,
            extracted_cutoff,
            extracted_size,
            id_orig_h,
            id_orig_p,
            id_resp_h,
            id_resp_p,
            num,
            EventVendor,
            EventProduct,
            EventType,
            ts,
            uid,
            dest_host,
            bytes,
            file_size,
            src_host,
            file_name,
            object,
            src,
            src_ip,
            src_port,
            dest,
            dest_ip,
            dest_port,
            app,
            file_hash,
            sensor_name,
            is_broadcast,
            is_dest_internal_ip,
            is_src_internal_ip
    };
    corelight_files