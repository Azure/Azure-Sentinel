id: 1b550e71-be62-4afb-9dcb-a153acae1155
Function:
  Title: Corelight Metrics Zeek Doctor Events
  Version: '1.0.0'
  LastUpdated: '2025-01-01'
Category: Microsoft Sentinel Parser
FunctionName: corelight_corelight_metrics_zeek_doctor
FunctionAlias: corelight_corelight_metrics_zeek_doctor
FunctionQuery: |
    let dummy_table = datatable(TimeGenerated: datetime) [];
    let corelight_corelight_metrics_zeek_doctor = view () {
        union isfuzzy=true Corelight_v2_corelight_metrics_zeek_doctor_CL, dummy_table
        | extend
            timestamp = column_ifexists("_timestamp_t", ""),
            _timestamp = column_ifexists("_timestamp_s", ""),
            check_tcp_scan_percent = column_ifexists("check_tcp_scan_percent_d", real(null)),
            check_remote_to_remote_percent = column_ifexists("check_remote_to_remote_percent_d", real(null)),
            version = column_ifexists("_version_s", ""),
            check_tcp_checksum_errors_percent = column_ifexists("check_tcp_checksum_errors_percent_d", real(null)),
            check_tcp_retransmissions_percent = column_ifexists("check_tcp_retransmissions_percent_d", real(null)),
            check_tcp_byte_counts_wrong_percent = column_ifexists("check_tcp_byte_counts_wrong_percent_d", real(null)),
            system_name = column_ifexists("_system_name_s", ""),
            check_dns_half_duplex_orig_percent = column_ifexists("check_dns_half_duplex_orig_percent_d", real(null)),
            check_tcp_half_duplex_percent = column_ifexists("check_tcp_half_duplex_percent_d", real(null)),
            check_dns_half_duplex_resp_percent = column_ifexists("check_dns_half_duplex_resp_percent_d", real(null)),
            check_tcp_missed_bytes_percent = column_ifexists("check_tcp_missed_bytes_percent_d", real(null)),
            check_tcp_backscatter_percent = column_ifexists("check_tcp_backscatter_percent_d", real(null)),
            check_tcp_no_ssl_on_443_percent = column_ifexists("check_tcp_no_ssl_on_443_percent_d", real(null)),
            write_ts = column_ifexists("_write_ts_t", ""),
            path = column_ifexists("_path_s", ""),
            check_local_to_local_percent = column_ifexists("check_local_to_local_percent_d", real(null)),
            check_tcp_no_three_way_handshake_percent = column_ifexists("check_tcp_no_three_way_handshake_percent_d", real(null)),
            check_bursty_percent = column_ifexists("check_bursty_percent_d", real(null))
        | extend
            EventVendor = "Corelight",
            EventProduct = "CorelightSensor",
            EventType = "corelight_metrics_zeek_doctor",
            ts = TimeGenerated,
            sensor_name = coalesce(system_name, "unknown"),
            timestamp = coalesce(tostring(timestamp), _timestamp)
        | project
            TimeGenerated,
            timestamp,
            check_tcp_scan_percent,
            check_remote_to_remote_percent,
            version,
            check_tcp_checksum_errors_percent,
            check_tcp_retransmissions_percent,
            check_tcp_byte_counts_wrong_percent,
            system_name,
            check_dns_half_duplex_orig_percent,
            check_tcp_half_duplex_percent,
            check_dns_half_duplex_resp_percent,
            check_tcp_missed_bytes_percent,
            check_tcp_backscatter_percent,
            check_tcp_no_ssl_on_443_percent,
            write_ts,
            path,
            check_local_to_local_percent,
            check_tcp_no_three_way_handshake_percent,
            check_bursty_percent,
            EventVendor,
            EventType,
            ts,
            sensor_name
    };
    corelight_corelight_metrics_zeek_doctor

