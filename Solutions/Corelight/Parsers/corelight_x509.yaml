id: 974718ae-c0a5-4d4a-bb42-63a0f394d66f
Function:
  Title: Corelight x509 Events
  Version: '1.1.0'
  LastUpdated: '2024-08-09'
Category: Microsoft Sentinel Parser
FunctionName: corelight_x509
FunctionAlias: corelight_x509
FunctionQuery: |
    let dummy_table = datatable(TimeGenerated: datetime) [];
    let corelight_x509 = view () {
        union isfuzzy=true Corelight_v2_x509_CL, Corelight_v2_x509_red_CL, dummy_table
        | extend 
            path=column_ifexists("_path_s", ""),
            system_name=column_ifexists("_system_name_s", ""),
            write_ts=column_ifexists("_write_ts_t", ""),
            fingerprint=column_ifexists("fingerprint_s", ""),
            certificate_version=column_ifexists("certificate_version_d", real(null)),
            certificate_serial=column_ifexists("certificate_serial_s", ""),
            certificate_subject=column_ifexists("certificate_subject_s", ""),
            certificate_issuer=column_ifexists("certificate_issuer_s", ""),
            certificate_not_valid_before=column_ifexists("certificate_not_valid_before_t", ""),
            certificate_not_valid_after=column_ifexists("certificate_not_valid_after_t", ""),
            certificate_key_alg=column_ifexists("certificate_key_alg_s", ""),
            certificate_sig_alg=column_ifexists("certificate_sig_alg_s", ""),
            certificate_key_type=column_ifexists("certificate_key_type_s", ""),
            certificate_key_length=column_ifexists("certificate_key_length_d", real(null)),
            certificate_exponent=column_ifexists("certificate_exponent_s", ""),
            certificate_curve=column_ifexists("certificate_curve_s", ""),
            san_dns=column_ifexists("san_dns_s", ""),
            san_uri=column_ifexists("san_uri_s", ""),
            san_email=column_ifexists("san_email_s", ""),
            san_ip=column_ifexists("san_ip_s", ""),
            basic_constraints_ca=column_ifexists("basic_constraints_ca_b", ""),
            basic_constraints_path_len=column_ifexists("basic_constraints_path_len_d", real(null)),
            host_cert=column_ifexists("host_cert_b", ""),
            client_cert=column_ifexists("client_cert_b", ""),
            vlan=column_ifexists("vlan_d", real(null)),
            id_orig_h=column_ifexists("id_orig_h_s", ""),
            id_orig_p=column_ifexists("id_orig_p_d", real(null)),
            id_resp_h=column_ifexists("id_resp_h_s", ""),
            id_resp_p=column_ifexists("id_resp_p_d", real(null))
        | extend
            EventVendor="Corelight",
            EventProduct="CorelightSensor",
            EventType="x509",
            ssl_issuer=certificate_issuer,
            ssl_publickey_algorithm=certificate_key_alg,
            not_valid_after=certificate_not_valid_after,
            ssl_end_time=certificate_not_valid_after,
            ssl_start_time=certificate_not_valid_before,
            ssl_serial=certificate_serial,
            ssl_signature_algorithm=certificate_sig_alg,
            ssl_subject=certificate_subject,
            ssl_version=certificate_version,
            ssl_hash = fingerprint,
            ts=TimeGenerated,
            sensor_name=coalesce(system_name, "unknown"),
            src=id_orig_h,
            src_ip=id_orig_h,
            src_port=id_orig_p,
            dest=id_resp_h,
            dest_ip=id_resp_h,
            dest_port=id_resp_p
        | extend 
            days_to_expiry = datetime_diff('day', todatetime(not_valid_after), now()),
            ssl_validity_window=datetime_diff('day', todatetime(ssl_end_time), todatetime(ssl_start_time)),
            ssl_is_valid = iff(ts > todatetime(ssl_start_time) and ts < todatetime(ssl_end_time), "true", "false"),
            ssl_issuer_email_domain = extract('emailAddress=[0-9A-Za-z_]+@(?<ssl_issuer_email_domain>[0-9A-Za-z_]+.[0-9A-Za-z_]+)', 1, ssl_issuer),
            ssl_subject_email_domain = extract('emailAddress=[0-9A-Za-z_]+@(?<ssl_subject_email_domain>[0-9A-Za-z_]+.[0-9A-Za-z_]+)', 1, ssl_subject),
            ssl_subject_common_name = extract('CN=(?<ssl_subject_common_name>[^,"]+)', 1, ssl_subject),
            ssl_issuer_common_name=extract('CN=(?<ssl_issuer_common_name>[^,"]+)', 1, ssl_issuer),
            ssl_issuer_organization = extract('O=(?<ssl_issuer_organization>[^,]+)', 1, ssl_issuer),
            ssl_issuer_unit = extract('OU=(?<ssl_issuer_unit>[^,]+)', 1, ssl_issuer),
            ssl_issuer_locality = extract('L=(?<ssl_issuer_locality>[^,]+)', 1, ssl_issuer),
            ssl_issuer_state = extract('ST=(?<ssl_issuer_state>[^,]+)', 1, ssl_issuer),
            ssl_issuer_country = extract('C=(?<ssl_issuer_country>[^,]+)', 1, ssl_issuer),
            ssl_subject_organization = extract('O=(?<ssl_subject_organization>[^,]+)', 1, ssl_subject),
            ssl_subject_unit = extract('OU=(?<ssl_subject_unit>[^,]+)', 1, ssl_subject),
            ssl_subject_locality = extract('L=(?<ssl_subject_locality>[^,]+)', 1, ssl_subject),
            ssl_subject_state = extract('ST=(?<ssl_subject_state>[^,]+)', 1, ssl_subject),
            ssl_subject_country = extract('C=(?<ssl_subject_country>[^,]+)', 1, ssl_subject),
            ssl_issuer_email = extract('emailAddress=(?<ssl_issuer_email>[^,]+)', 1, ssl_issuer),
            ssl_subject_email = extract('emailAddress=(?<ssl_subject_email>[^,]+)', 1, ssl_subject),
            ssl_issuer_domain = extract('DC=(?<ssl_issuer_domain>[^,]+)', 1, ssl_issuer),
            ssl_name = extract('title=(?<ssl_name>[^,]+)', 1, ssl_issuer),
            ssl_subject_domain = extract('DC=(?<ssl_subject_domain>[^,]+)', 1, ssl_subject),
            ssl_subject_name = extract('title=(?<ssl_name>[^,]+)', 1, ssl_subject),
            is_broadcast = iff(src in("0.0.0.0", "255.255.255.255") or dest in("255.255.255.255", "0.0.0.0"), "true", "false"),
            is_src_internal_ip = iff(ipv4_is_in_any_range(src, "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"), "true", "false"),
            is_dest_internal_ip = iff(ipv4_is_in_any_range(dest, "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"), "true", "false")
        | project 
            TimeGenerated,
            path,
            system_name,
            write_ts,
            fingerprint,
            certificate_version,
            certificate_serial,
            certificate_subject,
            certificate_issuer,
            certificate_not_valid_before,
            certificate_not_valid_after,
            certificate_key_alg,
            certificate_sig_alg,
            certificate_key_type,
            certificate_key_length,
            certificate_exponent,
            certificate_curve,
            san_dns,
            san_uri,
            san_email,
            san_ip,
            basic_constraints_ca,
            basic_constraints_path_len,
            host_cert,
            client_cert,
            vlan,
            id_orig_h,
            id_orig_p,
            id_resp_h,
            id_resp_p,
            EventVendor,
            EventProduct,
            EventType,
            ssl_issuer,
            ssl_publickey_algorithm,
            not_valid_after,
            ssl_end_time,
            ssl_start_time,
            ssl_serial,
            ssl_signature_algorithm,
            ssl_subject,
            ssl_version,
            ssl_hash,
            ts,
            sensor_name,
            src,
            src_ip,
            src_port,
            dest,
            dest_ip,
            dest_port,
            days_to_expiry,
            ssl_validity_window,
            ssl_is_valid,
            ssl_issuer_email_domain,
            ssl_subject_email_domain,
            ssl_subject_common_name,
            ssl_issuer_common_name,
            ssl_issuer_organization,
            ssl_issuer_unit,
            ssl_issuer_locality,
            ssl_issuer_state,
            ssl_issuer_country,
            ssl_subject_organization,
            ssl_subject_unit,
            ssl_subject_locality,
            ssl_subject_state,
            ssl_subject_country,
            ssl_issuer_email,
            ssl_subject_email,
            ssl_issuer_domain,
            ssl_name,
            ssl_subject_domain,
            ssl_subject_name,
            is_broadcast,
            is_src_internal_ip,
            is_dest_internal_ip
    };
    corelight_x509