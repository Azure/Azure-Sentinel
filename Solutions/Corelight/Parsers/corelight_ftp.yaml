id: 974718ae-c0a5-4d4a-bb42-63a0f394d66f
Function:
  Title: Corelight FTP Events
  Version: '1.1.0'
  LastUpdated: '2024-08-09'
Category: Microsoft Sentinel Parser
FunctionName: corelight_ftp
FunctionAlias: corelight_ftp
FunctionQuery: |
    let dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];
    let corelight_ftp = view () {
        union isfuzzy=true Corelight_v2_ftp_CL, dummy_table
        | summarize arg_max(TimeGenerated, *) by uid_s
        | join kind=leftouter 
        ( corelight_conn
        | project uid, local_orig, local_resp
        ) on $left.uid_s == $right.uid
        | project-away uid
        | extend
            path = column_ifexists("_path_s", ""),
            system_name = column_ifexists("_system_name_s", ""),
            write_ts = column_ifexists("_write_ts_t", ""),
            command = column_ifexists("command_s", ""),
            data_channel_orig_h = column_ifexists("data_channel_orig_h_s", ""),
            data_channel_passive = column_ifexists("data_channel_passive_b", ""),
            data_channel_resp_h = column_ifexists("data_channel_resp_h_s", ""),
            arg = column_ifexists("arg_s", ""),
            data_channel_resp_p = column_ifexists("data_channel_resp_p_d", real(null)),
            err = column_ifexists("err_s", ""),
            id_orig_h = column_ifexists("id_orig_h_s", ""),
            id_orig_p = column_ifexists("id_orig_p_d", real(null)),
            id_resp_h = column_ifexists("id_resp_h_s", ""),
            id_resp_p = column_ifexists("id_resp_p_d", real(null)),
            password = column_ifexists("password_s", ""),
            reply_code = column_ifexists("reply_code_d", real(null)),
            reply_msg = column_ifexists("reply_msg_s", ""),
            uid = column_ifexists("uid_s", ""),
            user = column_ifexists("user_s", ""),
            mime_type = column_ifexists("mime_type_s", ""),
            file_size = column_ifexists("file_size_d", real(null)),
            fuid = column_ifexists("fuid_s", "")
        | extend
            EventVendor = "Corelight",
            EventProduct = "CorelightSensor",
            EventType = "ftp",
            ts = TimeGenerated,
            signature_id = toint(reply_code),
            signature = reply_msg,
            src = id_orig_h,
            src_ip = id_orig_h,
            src_port = id_orig_p,
            dest = id_resp_h,
            dest_ip = id_resp_h,
            dest_port = id_resp_p,
            sensor_name = coalesce(system_name, "unknown")
        | extend 
            extract_user = extract("user/(?<user>\\w+)", 1, user),
            action = case(signature_id<300, "Success", "Failure"),
            object = split(arg, '/')[-1],
            is_broadcast =iff(src in("0.0.0.0", "255.255.255.255") or dest in("255.255.255.255", "0.0.0.0"),"true","false"),
            is_dest_internal_ip = iff(local_resp == true, "true", "false"),
            is_src_internal_ip = iff(local_orig == true, "true", "false")
        | project
            TimeGenerated,
            path,
            system_name,
            write_ts,
            command,
            data_channel_orig_h,
            data_channel_passive,
            data_channel_resp_h,
            arg,
            data_channel_resp_p,
            err,
            id_orig_h,
            id_orig_p,
            id_resp_h,
            id_resp_p,
            password,
            reply_code,
            reply_msg,
            uid,
            user,
            mime_type,
            file_size,
            fuid,
            EventVendor,
            EventProduct,
            EventType,
            ts,
            signature_id,
            signature,
            src,
            src_ip,
            src_port,
            dest,
            dest_ip,
            dest_port,
            sensor_name,
            extract_user,
            action,
            object,
            is_broadcast,
            is_dest_internal_ip,
            is_src_internal_ip
    };
    corelight_ftp