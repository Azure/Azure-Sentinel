id: 15572c8e-863b-4d83-99ae-89416554d9f1
Function:
  Title: Corelight Suricata Corelight Events
  Version: '1.0.0'
  LastUpdated: '2025-02-03'
Category: Microsoft Sentinel Parser
FunctionName: corelight_suricata_corelight
FunctionAlias: corelight_suricata_corelight
FunctionQuery: |
  let SeverityLookup = datatable(
        severity_name: string,
        severity_id: real,
        severity_description: string,
        severity_syslog_definition: string
    )[
        "emergencies",0,"System unstable","LOG_EMERG",
        "alerts",1,"Immediate action needed","LOG_ALERT",
        "critical",2,"Critical conditions","LOG_CRIT",
        "errors",3,"Error conditions","LOG_ERR",
        "warnings",4,"Warning conditions","LOG_WARNING",
        "notifications",5,"Normal but significant condition","LOG_NOTICE",
        "informational",6,"Informational messages only","LOG_INFO",
        "debugging",7,"Debugging messages","LOG_DEBUG"
    ];
    let dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];
    let corelight_suricata_corelight = view () {
        union isfuzzy=true Corelight_v2_suricata_corelight_CL, dummy_table
        | summarize arg_max(TimeGenerated, *) by uid_s
        | join kind=leftouter 
        ( corelight_conn
        | project uid, local_orig, local_resp
        ) on $left.uid_s == $right.uid
        | project-away uid
        | extend
            path = column_ifexists("_path_s", ""),
            system_name = column_ifexists("_system_name_s", ""),
            write_ts = column_ifexists("_write_ts_t", ""),
            timestamp_t = column_ifexists("_timestamp_t", ""),
            timestamp = column_ifexists("_timestamp_s", ""),
            ts = column_ifexists("ts_t",""),
            suri_id = column_ifexists("suri_id_s",""),
            service = column_ifexists("service_s",""),
            flow_id = column_ifexists("flow_id_d",real(null)),
            tx_id = column_ifexists("tx_id_d",real(null)),
            pcap_cnt  = column_ifexists("pcap_cnt_d",real(null)),
            alert_action = column_ifexists("alert_action_s",""),
            alert_gid = column_ifexists("alert_gid_d" ,real(null)),
            alert_rev = column_ifexists("alert_rev_d",real(null)),
            alert_signature = column_ifexists("alert_signature_s",""),
            alert_category = column_ifexists("alert_category_s", ""),
            alert_severity = column_ifexists("alert_severity_d", real(null)),
            alert_metadata = column_ifexists("alert_metadata_s", ""),
            community_id = column_ifexists("community_id_s", ""),
            metadata = column_ifexists("metadata_s", ""),
            orig_vulnerable_host_cve = column_ifexists("orig_vulnerable_host_cve_s", ""),
            orig_vulnerable_host_hostname = column_ifexists("orig_vulnerable_host_hostname_s", ""),
            orig_vulnerable_host_host_uid = column_ifexists("orig_vulnerable_host_host_uid_s", ""),
            orig_vulnerable_host_machine_domain = column_ifexists("orig_vulnerable_host_machine_domain_s", ""),
            orig_vulnerable_host_os_version = column_ifexists("orig_vulnerable_host_os_version_s", ""),
            orig_vulnerable_host_source = column_ifexists("orig_vulnerable_host_source_s", ""),
            resp_vulnerable_host_cve = column_ifexists("resp_vulnerable_host_cve_s", ""),
            resp_vulnerable_host_hostname = column_ifexists("resp_vulnerable_host_hostname_s", ""),
            resp_vulnerable_host_host_uid = column_ifexists("resp_vulnerable_host_host_uid_s", ""),
            resp_vulnerable_host_machine_domain = column_ifexists("resp_vulnerable_host_machine_domain_s", ""),
            resp_vulnerable_host_os_version = column_ifexists("resp_vulnerable_host_os_version_s", ""),
            resp_vulnerable_host_source = column_ifexists("resp_vulnerable_host_source_s",""),
            id_orig_h = column_ifexists("id_orig_h_s", ""),
            id_orig_p = column_ifexists("id_orig_p_d", real(null)),
            id_resp_h = column_ifexists("id_resp_h_s", ""),
            id_resp_p = column_ifexists("id_resp_p_d", real(null)),
            uid = column_ifexists("uid_s", ""),
            id_vlan_inner = column_ifexists("id_vlan_inner_d", real(null)),
            id_vlan = column_ifexists("id_vlan_d", real(null)),
            alert_rule = column_ifexists("alert_rule_s", ""),
            alert_references = column_ifexists("alert_references_s", ""),
            icmp_type = column_ifexists("icmp_type_d", real(null)),
            icmp_code = column_ifexists("icmp_code_d", real(null)),
            payload_printable = column_ifexists("payload_printable_s", ""),
            references = column_ifexists("references_s", ""),
            direction = column_ifexists("direction_s", ""),
            eventtype = column_ifexists("eventtype_s",""),
            ids_type = column_ifexists("ids_type_s","network" ),
            severity = column_ifexists("severity_s", ""),
            severity_description = column_ifexists("severity_description_s",""),
            sid = column_ifexists("sid_s",""),
            severity_id = column_ifexists("severity_id_d", real(null)),
            severity_name = column_ifexists("severity_name_s",""),
            severity_syslog_definition = column_ifexists("severity_syslog_definition_s",""),
            signature = column_ifexists("signature_s",""),
            signature_id = column_ifexists("signature_id_d",real(null)),
            alert_signature_id = column_ifexists("alert_signature_id_d",real(null)),
            payload = column_ifexists("payload_s", ""),
            timeendpos = column_ifexists("timeendpos_d", ""),
            timestartpos  = column_ifexists("timestartpos_d", "")
        | extend
            EventVendor = "Corelight",
            EventProduct = "CorelightSensor",
            EventType = "suricata_corelight",
            ts = TimeGenerated,
            action = alert_action,
            category = alert_category,
            severity_id = alert_severity,
            signature = alert_signature ,
            signature_id = alert_signature_id,
            id = suri_id,
            dvc = system_name, 
            session_id = uid,
            src = id_orig_h,
            src_ip = id_orig_h,
            src_host = id_orig_h,
            src_port = id_orig_p,
            dest = id_resp_h,
            dest_ip = id_resp_h,
            dest_host = id_resp_h,
            dest_port = id_resp_p,
            sensor_name = coalesce(system_name, "unknown"),
            timestamp = coalesce(tostring(timestamp_t), timestamp)
        | lookup kind=leftouter SeverityLookup on $left.severity_id == $right.severity_id
        | extend 
            action = case(service=="failed","failure","unknown"),
            severity = case(alert_severity== 0,"informational",alert_severity== 1,"critical",alert_severity==2,"medium",alert_severity==3, "low","unknown"),
            is_broadcast =iff(src in("0.0.0.0", "255.255.255.255") or dest in("255.255.255.255", "0.0.0.0"),"true","false"),
            is_dest_internal_ip = iff(local_resp == true, "true", "false"),
            is_src_internal_ip = iff(local_orig == true, "true", "false"),
            direction=case(local_orig=="true" and local_resp=="true", "internal", local_orig=="true" and local_resp=="false", "outbound", local_orig=="false" and local_resp=="false", "external", local_orig=="false" and local_resp=="true", "inbound", "unknown")
        | project
        TimeGenerated,
            path,
            system_name,
            write_ts,
            ts,
            suri_id,
            payload,
            timeendpos,
            timestartpos,
            service,
            flow_id,
            tx_id,
            pcap_cnt,
            alert_action,
            alert_gid,
            alert_rev,
            alert_signature,
            alert_category,
            alert_severity,
            alert_metadata,
            community_id,
            metadata,
            orig_vulnerable_host_cve,
            orig_vulnerable_host_hostname,
            orig_vulnerable_host_host_uid,
            orig_vulnerable_host_machine_domain,
            orig_vulnerable_host_os_version,
            orig_vulnerable_host_source,
            resp_vulnerable_host_cve,
            resp_vulnerable_host_hostname,
            resp_vulnerable_host_host_uid,
            resp_vulnerable_host_machine_domain,
            resp_vulnerable_host_os_version,
            resp_vulnerable_host_source,
            id_orig_h,
            id_orig_p,
            id_resp_h,
            id_resp_p,
            uid,
            id_vlan_inner,
            id_vlan,
            alert_rule,
            alert_references,
            icmp_type,
            icmp_code,
            payload_printable,
            references,
            direction,
            eventtype,
            ids_type,
            severity,
            severity_description,
            sid,
            severity_id,
            alert_signature_id,
            severity_name,
            severity_syslog_definition,
            signature,
            signature_id,
            EventVendor,
            EventProduct,
            EventType,
            action,
            category,
            id,
            dvc,
            session_id,
            src,
            src_ip,
            src_host,
            src_port,
            dest,
            dest_ip,
            dest_host,
            dest_port,
            sensor_name,
            is_broadcast,
            is_dest_internal_ip,
            is_src_internal_ip
    };
    corelight_suricata_corelight