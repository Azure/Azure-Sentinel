{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": ">**NOTE:** This workbook depends on a parser based on a Kusto Function to work as expected [**Corelight**](https://aka.ms/sentinel-Corelight-parser) which is deployed with the Microsoft Sentinel Solution."
      },
      "name": "text - 23"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "c64d5d3d-90c6-484a-ab88-c70652b75b6e",
            "version": "KqlParameterItem/1.0",
            "name": "GlobalTimeRestriction",
            "label": "Global Time Restriction",
            "type": 4,
            "description": "Select Time Range",
            "isRequired": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": {
              "durationMs": 86400000
            }
          },
          {
            "id": "a076210e-a47c-43c2-97e1-1f663fedbd01",
            "version": "KqlParameterItem/1.0",
            "name": "Sensor",
            "label": "Corelight Sensor",
            "type": 2,
            "description": "Select Corelight Sensor",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "corelight_conn\n| distinct sensor_name\n| sort by sensor_name",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "GlobalTimeRestriction",
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": [
              "value::all"
            ]
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 1"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "d723eef6-b3f0-40be-9a56-125421b32619",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Corelight Main Dashboard",
                  "subTarget": "corelight_main_dashboard",
                  "style": "link"
                },
                {
                  "id": "5736d4f4-bd4c-4a49-bea7-00da2bbc7fd9",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Corelight Connections",
                  "subTarget": "corelight_connections",
                  "style": "link"
                },
                {
                  "id": "5336f601-4da3-4da0-8196-332a97636047",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Corelight DNS",
                  "subTarget": "corelight_dns",
                  "style": "link"
                },
                {
                  "id": "b0e6ac55-179e-4fb5-80ff-ec84edb35324",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Corelight HTTP",
                  "subTarget": "corelight_http",
                  "style": "link"
                },
                {
                  "id": "7aafc143-f7f6-4942-9c87-a14956eed4b8",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Corelight Software",
                  "subTarget": "corelight_software",
                  "style": "link"
                },
                {
                  "id": "713f8a7a-769b-4c9c-9f55-bceafce20d63",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Corelight SSL and x509",
                  "subTarget": "corelight_ssl_x509",
                  "style": "link"
                },
                {
                  "id": "c298ad2a-ee5f-4fb2-8c09-ff8d867926d0",
                  "cellValue": "Tab",
                  "linkTarget": "parameter",
                  "linkLabel": "Corelight Files",
                  "subTarget": "corelight_files",
                  "style": "link"
                }
              ]
            },
            "name": "links - 24"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let dummy_table = datatable(_system_name_s: string, TimeGenerated: datetime, _path_s: string)[];\nunion isfuzzy=true Corelight_v2_*_CL, dummy_table\n| where ('*' in ({Sensor}) or _system_name_s in ({Sensor}))\n| where TimeGenerated {GlobalTimeRestriction}\n|make-series Trend = count() on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step {GlobalTimeRestriction:grain} by _path_s;",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Sensor Events Timechart",
                    "noDataMessage": "No data found.",
                    "showRefreshButton": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "areachart"
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Tab",
                    "comparison": "isEqualTo",
                    "value": "corelight_main_dashboard"
                  },
                  "name": "Sensor Events Timechart"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let dummy_table = datatable(_system_name_s: string, TimeGenerated: datetime, _path_s: string)[];\nunion isfuzzy=true Corelight_v2_*_CL, dummy_table\n| where ('*' in ({Sensor}) or _system_name_s in ({Sensor}))\n| where TimeGenerated {GlobalTimeRestriction}\n| summarize Count=count() by _path_s | sort by Count desc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Sensor Events Count",
                    "noDataMessage": "No data found.",
                    "showRefreshButton": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "categoricalbar"
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "Tab",
                    "comparison": "isEqualTo",
                    "value": "corelight_main_dashboard"
                  },
                  "name": "Sensor Events Count"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "corelight_main_dashboard"
            },
            "name": "corelight_main_dashboard_group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Events",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let QueryResults = ((corelight_notice\r\n| where ('*' in ({Sensor}) or system_name in ({Sensor}))\r\n//| where note != \"LongConnection::found\" and note != \"SSL::Invalid_Server_Cert\"\r\n//| project-rename Alert = note \r\n| union corelight_suricata_corelight)\r\n| where ('*' in ({Sensor}) or system_name in ({Sensor}))\r\n//| where alert_category != \"Not Suspicious Traffic\" and alert_category != \"Attempted Information Leak\" and alert_category != \"Potentially Bad Traffic\"\r\n//| where _path_s == \"notice\"\r\n//| project-rename Alert = alert_category\r\n| extend\r\n    Category = coalesce(note, alert_category),\r\n    Alert = coalesce(msg, alert_signature),\r\n    Severity=coalesce(severity_level, alert_severity, 7.),\r\n    Type = path\r\n| extend PartitionKey = case(path == \"suricata_corelight\", Alert, Category)\r\n| where (isnotempty(uid) or isnotempty(community_id))\r\n| partition hint.strategy=native by PartitionKey\r\n    (\r\n    top 10 by TimeGenerated\r\n    )\r\n| order by Severity asc, TimeGenerated\r\n// hack to hide empty columns\r\n| evaluate narrow()\r\n| where isnotempty(Value) and Value != \"##(null)\" or Column == \"_system_name_s\"\r\n| evaluate pivot(Column, any(Value), Row)\r\n);\r\nlet QueryCount=QueryResults\r\n| summarize count()\r\n| project count_;\r\nlet NoResults = datatable(TimeGenerated: string , Type: string , Category: string, Alert: string, Severity: string, uid: string, id_orig_h: string, id_resp_h: string, id_resp_p: string )[];\r\nunion isfuzzy=true\r\n(QueryResults| where toscalar(QueryCount) != 0),\r\n(NoResults| where toscalar(QueryCount) == 0)\r\n| project-reorder\r\n    TimeGenerated,\r\n    Type,\r\n    Category,\r\n    Alert,\r\n    Severity,\r\n    uid,\r\n    id_orig_h,\r\n    id_resp_h,\r\n    id_resp_p",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Recent Events Summary (10 most recent per message type)",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "uid",
                    "exportParameterName": "Selected_uid",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "name": "events_summary_recent"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "union Corelight_v2_*_CL\r\n| where ('*' in ({Sensor}) or _system_name_s in ({Sensor}))\r\n| where (isnotempty(\"{Selected_uid}\") and (uid_s == \"{Selected_uid}\" or conn_uids_s contains_cs \"{Selected_uid}\"))\r\n| top 300 by TimeGenerated\r\n// hack to hide empty columns\r\n| evaluate narrow()\r\n| where isnotempty(Value) and Value != \"##(null)\" or Column == \"_system_name_s\"\r\n| evaluate pivot(Column, any(Value), Row)\r\n| project-reorder TimeGenerated, _path_s, id_orig_h_s, id_resp_h_s, id_resp_p_d, _system_name_s\r\n| project-away Row",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Related paths (select in Events Summary)",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "_path_s",
                    "exportParameterName": "Selected_path",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "_path_s",
                          "label": "Path"
                        }
                      ]
                    }
                  },
                  "name": "events_related_entries"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_suricata_corelight\r\n| where ('*' in ({Sensor}) or system_name in ({Sensor}))\r\n| summarize alert_count=count() by source_ip=id_orig_h, alert_signature, severity=alert_severity\r\n| top 10 by alert_count\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Suricata Top Alerts by Source",
                    "noDataMessage": "No data found.",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "customWidth": "50",
                  "name": "events_suricata_most_hits_src"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "corelight_main_dashboard"
            },
            "name": "tme_events"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "eb78de55-e30a-4e11-b1df-a94987f625b5",
                        "version": "KqlParameterItem/1.0",
                        "name": "id_orig_h",
                        "label": "Originator IP (id_orig_h)",
                        "type": 1,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "*"
                            }
                          }
                        ]
                      },
                      {
                        "id": "da839a01-802a-448d-ba4f-28c1a5bbfe72",
                        "version": "KqlParameterItem/1.0",
                        "name": "id_orig_p",
                        "label": "Originator Port (id_orig_p)",
                        "type": 1,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "*"
                            }
                          }
                        ]
                      },
                      {
                        "id": "b9c1f005-4e91-4aa0-8842-8fc60f4b4068",
                        "version": "KqlParameterItem/1.0",
                        "name": "id_resp_h",
                        "label": "Responder IP (id_resp_h)",
                        "type": 1,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "*"
                            }
                          }
                        ]
                      },
                      {
                        "id": "a0807d9b-0e96-4bbf-a689-759af75e1f6e",
                        "version": "KqlParameterItem/1.0",
                        "name": "id_resp_p",
                        "label": "Responder Port (id_resp_p)",
                        "type": 1,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "*"
                            }
                          }
                        ]
                      },
                      {
                        "id": "e1c12e0b-0157-4eb2-90c8-7890827de86d",
                        "version": "KqlParameterItem/1.0",
                        "name": "service",
                        "label": "Service",
                        "type": 2,
                        "isRequired": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let pre_services = datatable(service: string) [\r\n    \"dce_rpc\",\r\n    \"dhcp\",\r\n    \"dns\",\r\n    \"ftp\",\r\n    \"gssapi,smb,krb\",\r\n    \"http\",\r\n    \"krb_tcp\",\r\n    \"ntp\",\r\n    \"smb\",\r\n    \"smb,gssapi,ntlm\",\r\n    \"smb,ntlm,gssapi\",\r\n    \"smtp\",\r\n    \"ssh\",\r\n    \"ssl\",\r\n    \"xmpp,ssl\",\r\n    \"vxlan\",\r\n    \"dce_rpc,gssapi,ntlm,smb\",\r\n    \"dce_rpc,smb\",\r\n    \"dnp3_tcp\",\r\n    \"ftp-data\",\r\n    \"gssapi\",\r\n    \"gssapi,ntlm,smb\",\r\n    \"gssapi,smb\",\r\n    \"http,socks\",\r\n    \"imap\",\r\n    \"irc\",\r\n    \"irc-dcc-data\",\r\n    \"mqtt\",\r\n    \"rdp\",\r\n    \"smb,gssapi\",\r\n    \"socks\",\r\n    \"ssl,ftp\",\r\n    \"ssl,socks\",\r\n    \"ssl,xmpp\",\r\n    \"xmpp\",\r\n    \"ftp,ssl\",\r\n    \"ntlm,gssapi,smb\",\r\n    \"ntlm,gssapi,smb,dce_rpc\",\r\n    \"smb,dce_rpc\",\r\n    \"socks,http\",\r\n    \"ssl,smtp\",\r\n    \"bacnet\",\r\n    \"ntlm,smb,gssapi\",\r\n    \"smtp,ssl\",\r\n    \"gssapi,smb,ntlm\",\r\n    \"gssapi,dce_rpc,ntlm,smb\",\r\n    \"smb,dce_rpc,gssapi,ntlm\",\r\n    \"socks,ssl\",\r\n    \"ntlm,dce_rpc,gssapi,smb\",\r\n    \"ntlm,dce_rpc,smb,gssapi\",\r\n    \"gssapi,ntlm,dce_rpc,smb\",\r\n    \"smtp/ssl\",\r\n    \"xmpp/ssl\"\r\n];\r\n\r\ncorelight_conn\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| project service \r\n| union pre_services\r\n| where isnotempty(service)\r\n| extend service_list = split(service, \",\")\r\n| mv-expand service = service_list\r\n| distinct tostring(service)\r\n| sort by tostring(service) asc\r\n",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "GlobalTimeRestriction",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": "value::all"
                      },
                      {
                        "id": "a6972852-6429-4fe8-822a-1b7abe1aa9f4",
                        "version": "KqlParameterItem/1.0",
                        "name": "AdditionalFilter",
                        "label": "Additional Filter",
                        "type": 1,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "*"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "GlobalTimeRestriction"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 1 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_conn\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \n       and (('*' == ('{id_orig_h}') or id_orig_h == ('{id_orig_h}')) )\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\n       and (('*' == ('{id_resp_h}') or id_resp_h == ('{id_resp_h}')) )\n       and (('*' == ('{id_resp_p}') or id_resp_p == ('{id_resp_p}')) )\n| where is_broadcast != \"true\" \n| search '{AdditionalFilter}'\n| extend service_array = split(service, \",\")\n| mv-expand service = service_array\n| where ('*' == ('{service}') or service == ('{service}'))\n| extend service = coalesce(service, \"unknown\")\n| summarize Count = count() by service\n| top 10 by Count ",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Top Services",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "service_top",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "piechart",
                    "chartSettings": {
                      "createOtherGroup": 10
                    }
                  },
                  "customWidth": "50",
                  "name": "top_responder_ports"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_conn\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \n       and (('*' == ('{id_orig_h}') or id_orig_h == ('{id_orig_h}')) )\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\n       and (('*' == ('{id_resp_h}') or id_resp_h == ('{id_resp_h}')) )\n       and (('*' == ('{id_resp_p}') or id_resp_p == ('{id_resp_p}')) )\n| where is_broadcast != \"true\"\n| search '{AdditionalFilter}'\n| extend service_array = split(service, \",\")\n| where ('*' == ('{service}') or (array_index_of(service_array, ('{service}')) != -1))\n| extend id_resp_p = toint(id_resp_p)\n| extend id_resp_p = coalesce(tostring(id_resp_p), \"unknown\")\n| summarize Count = count() by tostring(id_resp_p)\n| top 10 by Count\n",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Top Responder Ports",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "id_resp_p_top",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "piechart",
                    "chartSettings": {
                      "createOtherGroup": 10
                    }
                  },
                  "customWidth": "50",
                  "name": "top_responder_ports"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the sections in the above panel **Top Services** to view more information.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "name": "text - 1"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the sections in the above panel **Top Responder Ports** to view more information.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "name": "text - 1"
                      }
                    ]
                  },
                  "name": "group - 12"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_conn\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \r\n       and (('*' == ('{id_orig_h}') or id_orig_h == ('{id_orig_h}')) )\r\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\r\n       and (('*' == ('{id_resp_h}') or id_resp_h == ('{id_resp_h}')) )\r\n       and (('*' == ('{id_resp_p}') or id_resp_p == ('{id_resp_p}')) )\r\n| where is_broadcast != \"true\"\r\n| extend service_array = split(service, \",\")\r\n| mv-expand service = service_array\r\n| extend service = coalesce(service, \"unknown\")\r\n| where service == ('{service_top}')\r\n| search '{AdditionalFilter}'\r\n| extend tunnel_parents = strcat_array(todynamic(tunnel_parents), \", \"), suri_ids = strcat_array(todynamic(suri_ids), \", \"), apps = strcat_array(todynamic(apps), \", \"),\r\n         app = strcat_array(app, \", \"), id_orig_h_n_vals = strcat_array(todynamic(id_orig_h_n_vals), \", \"),\r\n         id_resp_h_n_vals = strcat_array(todynamic(id_resp_h_n_vals), \", \")\r\n| project-away $table, service_array",
                    "size": 0,
                    "showAnalytics": true,
                    "title": " Details of Service: {service_top}",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "service_top",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "query - 1",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_conn\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \r\n       and (('*' == ('{id_orig_h}') or id_orig_h == ('{id_orig_h}')) )\r\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\r\n       and (('*' == ('{id_resp_h}') or id_resp_h == ('{id_resp_h}')) )\r\n| where is_broadcast != \"true\"\r\n| search '{AdditionalFilter}'\r\n| extend service_array = split(service, \",\")\r\n| where ('*' == ('{service}') or (array_index_of(service_array, ('{service}')) != -1))\r\n| extend id_resp_p = toint(id_resp_p)\r\n| extend id_resp_p = coalesce(tostring(id_resp_p), \"unknown\")\r\n| where tostring(id_resp_p) == ('{id_resp_p_top}')\r\n| extend tunnel_parents = strcat_array(todynamic(tunnel_parents), \", \"), suri_ids = strcat_array(todynamic(suri_ids), \", \"), apps = strcat_array(todynamic(apps), \", \"),\r\n         app = strcat_array(app, \", \"), id_orig_h_n_vals = strcat_array(todynamic(id_orig_h_n_vals), \", \"),\r\n         id_resp_h_n_vals = strcat_array(todynamic(id_resp_h_n_vals), \", \")\r\n| project-away $table, service_array",
                    "size": 0,
                    "showAnalytics": true,
                    "title": " Details of Responder Port: {id_resp_p_top}",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "id_resp_p_top",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "query - 1",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_conn\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \n       and (('*' == ('{id_orig_h}') or id_orig_h == ('{id_orig_h}')) )\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\n       and (('*' == ('{id_resp_h}') or id_resp_h == ('{id_resp_h}')) )\n       and (('*' == ('{id_resp_p}') or id_resp_p == ('{id_resp_p}')) )\n| where is_broadcast != \"true\"\n| search '{AdditionalFilter}'\n| extend service_array = split(service, \",\")\n| where ('*' == ('{service}') or (array_index_of(service_array, ('{service}')) != -1))\n| extend id_orig_h = coalesce(id_orig_h, \"unknown\")\n| summarize Count = count() by tostring (id_orig_h)\n| top 10 by Count",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Top Originators (sources) by # of connections ",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "id_orig_h_top",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "piechart",
                    "chartSettings": {
                      "createOtherGroup": 10
                    }
                  },
                  "customWidth": "50",
                  "name": "top_responder_ports"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_conn\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \n       and (('*' == ('{id_orig_h}') or id_orig_h == ('{id_orig_h}')) )\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\n       and (('*' == ('{id_resp_h}') or id_resp_h == ('{id_resp_h}')) )\n       and (('*' == ('{id_resp_p}') or id_resp_p == ('{id_resp_p}')) )\n| where is_broadcast != \"true\"\n| search '{AdditionalFilter}'\n| extend service_array = split(service, \",\")\n| where ('*' == ('{service}') or (array_index_of(service_array, ('{service}')) != -1))\n| extend id_resp_h = coalesce(id_resp_h, \"unknown\")\n| summarize Count = count() by tostring (id_resp_h)\n| top 10 by Count\n",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Top Responders (destinations) by # of connections",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "id_resp_h_top",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "piechart",
                    "chartSettings": {
                      "createOtherGroup": 10
                    }
                  },
                  "customWidth": "50",
                  "name": "top_responder_ports"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the sections in the above panel **Top Originators (sources) by # of connections** to view more information.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "name": "text - 1"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the sections in the above panel **Top Responders (destinations) by # of connections ** to view more information.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "name": "text - 1"
                      }
                    ]
                  },
                  "name": "group - 13"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_conn\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \r\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\r\n       and (('*' == ('{id_resp_h}') or id_resp_h == ('{id_resp_h}')) )\r\n       and (('*' == ('{id_resp_p}') or id_resp_p == ('{id_resp_p}')) )\r\n| where is_broadcast != \"true\"\r\n| search '{AdditionalFilter}'\r\n| extend service_array = split(service, \",\")\r\n| where ('*' == ('{service}') or (array_index_of(service_array, ('{service}')) != -1))\r\n| extend id_orig_h = coalesce(id_orig_h, \"unknown\")\r\n| where id_orig_h == ('{id_orig_h_top}')\r\n| extend tunnel_parents = strcat_array(todynamic(tunnel_parents), \", \"), suri_ids = strcat_array(todynamic(suri_ids), \", \"), apps = strcat_array(todynamic(apps), \", \"),\r\n         app = strcat_array(app, \", \"), id_orig_h_n_vals = strcat_array(todynamic(id_orig_h_n_vals), \", \"),\r\n         id_resp_h_n_vals = strcat_array(todynamic(id_resp_h_n_vals), \", \")\r\n| project-away $table, service_array",
                    "size": 0,
                    "showAnalytics": true,
                    "title": " Details of Source: {id_orig_h_top}",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "id_orig_h_top",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "query - 1",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_conn\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \r\n       and (('*' == ('{id_orig_h}') or id_orig_h == ('{id_orig_h}')) )\r\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\r\n       and (('*' == ('{id_resp_p}') or id_resp_p == ('{id_resp_p}')) )\r\n| where is_broadcast != \"true\"\r\n| search '{AdditionalFilter}'\r\n| extend service_array = split(service, \",\")\r\n| where ('*' == ('{service}') or (array_index_of(service_array, ('{service}')) != -1))\r\n| extend id_resp_h = coalesce(id_resp_h, \"unknown\")\r\n| where id_resp_h == ('{id_resp_h_top}')\r\n| extend tunnel_parents = strcat_array(todynamic(tunnel_parents), \", \"), suri_ids = strcat_array(todynamic(suri_ids), \", \"), apps = strcat_array(todynamic(apps), \", \"),\r\n         app = strcat_array(app, \", \"), id_orig_h_n_vals = strcat_array(todynamic(id_orig_h_n_vals), \", \"),\r\n         id_resp_h_n_vals = strcat_array(todynamic(id_resp_h_n_vals), \", \")\r\n| project-away $table, service_array",
                    "size": 0,
                    "showAnalytics": true,
                    "title": " Details of Destination: {id_resp_h_top}",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "id_resp_h_top",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "query - 1",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_conn\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \n       and (('*' == ('{id_orig_h}') or id_orig_h == ('{id_orig_h}')) )\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\n       and (('*' == ('{id_resp_h}') or id_resp_h == ('{id_resp_h}')) )\n       and (('*' == ('{id_resp_p}') or id_resp_p == ('{id_resp_p}')) )\n| where is_broadcast != \"true\"\n       and direction == \"outbound\"\n| search '{AdditionalFilter}'\n| extend service_array = split(service, \",\")\n| where ('*' == ('{service}') or (array_index_of(service_array, ('{service}')) != -1))\n| summarize  proto = make_set(proto), Bytes = sum(orig_bytes) by id_orig_h, id_resp_h\n| top 10 by Bytes\n| extend ipinfo = geo_info_from_ip_address(id_resp_h)\n| extend Country = tostring(ipinfo.country)\n| extend Protocol = strcat_array(proto, \", \")\n| project [\"Source IP\"] = id_orig_h, [\"Destination IP\"] = id_resp_h, Country, Bytes, Protocol",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Outbound Data Flows by Originator (id_orig_h) Bytes",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Bytes",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Count"
                          },
                          "numberFormat": {
                            "unit": 36,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "customWidth": "50",
                  "name": "top_outbound_bytes",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_conn\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \n       and (('*' == ('{id_orig_h}') or id_orig_h == ('{id_orig_h}')) )\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\n       and (('*' == ('{id_resp_h}') or id_resp_h == ('{id_resp_h}')) )\n       and (('*' == ('{id_resp_p}') or id_resp_p == ('{id_resp_p}')) )\n| where is_broadcast != \"true\"\n       and direction == \"inbound\"\n| search '{AdditionalFilter}'\n| extend service_array = split(service, \",\")\n| where ('*' == ('{service}') or (array_index_of(service_array, ('{service}')) != -1))\n| summarize  proto = make_set(proto), Bytes = sum(orig_bytes) by id_orig_h, id_resp_h\n| top 10 by Bytes\n| extend ipinfo = geo_info_from_ip_address(id_orig_h)\n| extend Country = tostring(ipinfo.country)\n| extend Protocol = strcat_array(proto, \", \")\n| project [\"Source IP\"] = id_orig_h, [\"Destination IP\"] = id_resp_h, Country, Bytes, Protocol",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Inbound Data Flows by Originator (id_orig_h) Bytes",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Bytes",
                          "formatter": 0,
                          "formatOptions": {
                            "aggregation": "Count"
                          },
                          "numberFormat": {
                            "unit": 36,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "customWidth": "50",
                  "name": "top_inbound_by_orig",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_conn\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) \n       and (('*' == ('{id_orig_h}') or id_orig_h == ('{id_orig_h}')) )\n       and (('*' == ('{id_orig_p}') or id_orig_p == ('{id_orig_p}')) )\n       and (('*' == ('{id_resp_h}') or id_resp_h == ('{id_resp_h}')) )\n       and (('*' == ('{id_resp_p}') or id_resp_p == ('{id_resp_p}')) )\n| where is_broadcast != \"true\"\n       and isnotempty(uid)\n| search '{AdditionalFilter}'\n| extend service_array = split(service, \",\")\n| where ('*' == ('{service}') or (array_index_of(service_array, ('{service}')) != -1))         \n| top 10 by duration\n| project UID = uid, Duration = duration, [\"Source IP\"] = id_orig_h, [\"Destination IP\"] = id_resp_h, Protocol = proto\n\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Open/Active Long Lived Connections (Requires Long Connections Pkg)",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "UID",
                          "exportParameterName": "open_uid",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "filter": true
                          },
                          "chartSettings": {
                            "createOtherGroup": 10,
                            "showMetrics": false,
                            "showLegend": true
                          }
                        },
                        "name": "top_responder_ports",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the records in the above panel **Open/Active Long Lived Connections (Requires Long Connections Pkg) ** to view more information.",
                          "style": "info"
                        },
                        "name": "text - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let dummy_table = datatable(uid_s: string, TenantId: string, SourceSystem: string, MG: string, ManagementGroupName: string, Computer: string, RawData: string, _ResourceId: string)[];\r\n\r\nunion Corelight*, dummy_table\r\n| where uid_s == '{open_uid}'\r\n| project-away TenantId, SourceSystem, MG, ManagementGroupName, Computer, RawData, _ResourceId",
                          "size": 0,
                          "showAnalytics": true,
                          "title": " Details of UID: {open_uid}",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "open_uid",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 1",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "name": "group - 15 - Copy - Copy - Copy - Copy"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "corelight_connections"
            },
            "name": "corelight_connections_group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "2c572253-ce24-4ebd-add0-ec4ce0b07d7c",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResponderPort",
                        "label": "Responder Port (id_resp_p)",
                        "type": 2,
                        "description": "Select Responder Port",
                        "isRequired": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let DNSPorts = datatable(\r\n        id_resp_p: real\r\n    )[\r\n        137,\r\n        53,\r\n        5353,\r\n        5355\r\n    ];\r\nunion DNSPorts, (corelight_dns\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})))\r\n| where isnotempty(id_resp_p)\r\n| distinct id_resp_p\r\n| extend port_number = tostring(toint(id_resp_p))\r\n| lookup _GetWatchlist('CorelightDNSPortDesc') on port_number\r\n| summarize arg_max(LastUpdatedTimeUTC, *) by port_number\r\n| extend label = iff(isnotempty(description),strcat(description, \" (\", port_number, \")\"), port_number)\r\n| project id_resp_p, label\r\n| sort by label asc",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "GlobalTimeRestriction",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": "53"
                      },
                      {
                        "id": "b0a232f8-a2c1-44c1-9cd4-da150e3df8d8",
                        "version": "KqlParameterItem/1.0",
                        "name": "RecordType",
                        "label": "Record Type",
                        "type": 2,
                        "description": "Select Record Type",
                        "isRequired": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let DNSLookup = datatable(\r\n        record_type: string\r\n    )[\r\n        \"A\",\r\n        \"AAAA\",\r\n        \"CNAME\",\r\n        \"MX\",\r\n        \"NB\",\r\n        \"NULL\",\r\n        \"PTR\",\r\n        \"SRV\",\r\n        \"TXT\",\r\n        \"AXFR\",\r\n        \"CAA\",\r\n        \"DNSKEY\",\r\n        \"NS\",\r\n        \"SOA\",\r\n        \"query-38712\"\r\n    ];\r\nunion DNSLookup, (corelight_dns\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})))\r\n| where isnotempty(record_type)\r\n| distinct record_type\r\n| sort by record_type asc\r\n",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "GlobalTimeRestriction",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "55132d85-ab63-4be1-b253-0cd9056e0f69",
                        "version": "KqlParameterItem/1.0",
                        "name": "AdditionalFilter",
                        "label": "Additional Filter",
                        "type": 1,
                        "description": "Enter a keyword to search ",
                        "isRequired": true,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "*"
                            }
                          }
                        ]
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 9"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_dns\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where ('*' == ('{RecordType}') or record_type == ('{RecordType}'))\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\n| search '{AdditionalFilter}'\n| where is_broadcast != \"true\"\n| summarize Sum = count() by record_type\n| top 10 by Sum\n| project RecordType = coalesce(record_type, \"unknown\"), Sum\n",
                    "size": 3,
                    "showAnalytics": true,
                    "title": "Top Query Types",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "series",
                    "exportParameterName": "selected_record_type",
                    "exportDefaultValue": "none",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "piechart",
                    "chartSettings": {
                      "createOtherGroup": 10
                    }
                  },
                  "customWidth": "33",
                  "name": "dns_top_query_types"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\ncorelight_dns\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\n| where ('*' == ('{RecordType}') or record_type == ('{RecordType}'))\n| search '{AdditionalFilter}'\n| where record_type != \"ptr\" and is_broadcast != \"true\"\n| make-series Sparkline = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by query\n| extend Count = array_sum(Sparkline) \n| top 10 by Count\n| project Query = coalesce(query, \"unknown\"), Sparkline, Count\n\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top 10 Queries by Count",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "Query",
                    "exportParameterName": "selected_query",
                    "exportDefaultValue": "none",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Sparkline",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "greenDark"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Count",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "customWidth": "33",
                  "name": "dns_top_queries_by_count"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\ncorelight_dns\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\n| where ('*' == ('{RecordType}') or record_type == ('{RecordType}'))\n| search '{AdditionalFilter}'\n| where record_type != \"ptr\" and reply_code == \"NXDOMAIN\" and is_broadcast != \"true\"\n| make-series Sparkline = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by query\n| extend Count = array_sum(Sparkline) \n| top 10 by Count\n| project Query = coalesce(query, \"unknown\"), Sparkline, Count\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top 10 Queries by Count to Non-Existent Domains",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "Query",
                    "exportParameterName": "selected_nx_query",
                    "exportDefaultValue": "none",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Sparkline",
                          "formatter": 9,
                          "formatOptions": {
                            "palette": "greenDark"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Count",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "customWidth": "33",
                  "name": "dns_top_nxdomain_by_count"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "#### Click on the sections in the above panel **Top Query Types** to view more information.",
                    "style": "info"
                  },
                  "customWidth": "33",
                  "name": "text - 3"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "#### Click on the records in the above panel **Top 10 Queries by Count** to view more information.",
                    "style": "info"
                  },
                  "customWidth": "33",
                  "name": "text - 3"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "#### Click on the records in the above panel **Top 10 Queries by Count to Non-Existent Domains** to view more information.",
                    "style": "info"
                  },
                  "customWidth": "33",
                  "name": "text - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_dns\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\r\n| where ('*' == ('{RecordType}') or record_type == ('{RecordType}'))\r\n| where is_broadcast != \"true\"\r\n| search '{AdditionalFilter}'\r\n| extend record_type = coalesce(record_type, \"unknown\")\r\n| where record_type == '{selected_record_type}'\r\n| extend TTLs = strcat_array(todynamic(TTLs), \",\"), answers = strcat_array(todynamic(answers), \",\"), ttl = strcat_array(todynamic(ttl), \",\")\r\n| project-away $table",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Details for Query Type : {selected_record_type}",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "selected_record_type",
                    "comparison": "isNotEqualTo",
                    "value": "none"
                  },
                  "name": "query - 10",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_dns\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\r\n| where ('*' == ('{RecordType}') or record_type == ('{RecordType}'))\r\n| search '{AdditionalFilter}'\r\n| where record_type != \"ptr\" and is_broadcast != \"true\"\r\n| extend query = coalesce(query, \"unknown\")\r\n| where query =='{selected_query}'\r\n| extend TTLs = strcat_array(todynamic(TTLs), \",\"), answers = strcat_array(todynamic(answers), \",\"), ttl = strcat_array(todynamic(ttl), \",\")\r\n| project-away $table\r\n\r\n",
                    "size": 0,
                    "title": "Details for Query : {selected_query}",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "selected_query",
                    "comparison": "isNotEqualTo",
                    "value": "none"
                  },
                  "name": "query - 11",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_dns\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\r\n| where ('*' == ('{RecordType}') or record_type == ('{RecordType}'))\r\n| search '{AdditionalFilter}'\r\n| where record_type != \"ptr\" and reply_code == \"NXDOMAIN\" and is_broadcast != \"true\"\r\n| extend query = coalesce(query, \"unknown\")\r\n| where query =='{selected_nx_query}'\r\n| extend TTLs = strcat_array(todynamic(TTLs), \",\"), answers = strcat_array(todynamic(answers), \",\"), ttl = strcat_array(todynamic(ttl), \",\")\r\n| project-away $table\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Details of Query having Non-Existent Domains : {selected_nx_query}",
                    "noDataMessage": "No data found",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table"
                  },
                  "conditionalVisibility": {
                    "parameterName": "selected_nx_query",
                    "comparison": "isNotEqualTo",
                    "value": "none"
                  },
                  "name": "query - 12",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_dns\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\n| where ('*' == ('{RecordType}') or record_type == ('{RecordType}'))\n| search '{AdditionalFilter}'\n| where is_broadcast != \"true\"\n| summarize Count = count() by id_orig_h\n| top 10 by Count\n| project ['Source IP'] = coalesce(id_orig_h, \"unknown\"), Count",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Originators by Count",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "Source IP",
                    "exportParameterName": "src",
                    "exportDefaultValue": "none",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "customWidth": "33",
                  "name": "dns_top_originators",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_dns\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\n| search '{AdditionalFilter}'\n| where is_broadcast != \"true\" and isnotempty(query)\n| where record_type==\"PTR\" and reply_code==\"NOERROR\"\n| summarize Count=count() by Query = query\n| top 10 by Count\n\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Successful Reverse Queries by Count",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "Query",
                    "exportParameterName": "selected_reverse_query",
                    "exportDefaultValue": "none",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "customWidth": "33",
                  "name": "dns_top_ptr_by_count",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_dns\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\n| search '{AdditionalFilter}'\n| where isnotempty(query)\n| where record_type == 'PTR' and reply_code == 'NXDOMAIN'\n| summarize Count=count() by Query = query\n| top 10 by Count\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top Reverse Queries by Count to Non-Existent Domains",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "exportFieldName": "Query",
                    "exportParameterName": "selected_reverse_nx_query",
                    "exportDefaultValue": "none",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "customWidth": "33",
                  "name": "dns_top_ptr_nxdomain",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "#### Click on the records in the above panel **Top Originators by Count** to view more information.",
                    "style": "info"
                  },
                  "customWidth": "33",
                  "name": "text - 3"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "#### Click on the records in the above panel **Top Successful Reverse Queries by Count** to view more information.",
                    "style": "info"
                  },
                  "customWidth": "33",
                  "name": "text - 3"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "#### Click on the records in the above panel **Top Reverse Queries by Count to Non-Existent Domains** to view more information.",
                    "style": "info"
                  },
                  "customWidth": "33",
                  "name": "text - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_dns\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\r\n| where ('*' == ('{RecordType}') or record_type == ('{RecordType}'))\r\n| search '{AdditionalFilter}'\r\n| where is_broadcast != \"true\"\r\n| extend id_orig_h = coalesce(id_orig_h, \"unknown\")\r\n| where id_orig_h == '{src}'\r\n| extend TTLs = strcat_array(todynamic(TTLs), \",\"), answers = strcat_array(todynamic(answers), \",\"), ttl = strcat_array(todynamic(ttl), \",\")\r\n| project-away $table",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Details for Originator : {src}",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "src",
                    "comparison": "isNotEqualTo",
                    "value": "none"
                  },
                  "name": "query - 13",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_dns\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\r\n| search '{AdditionalFilter}'\r\n| where is_broadcast != \"true\" and query == '{selected_reverse_query}'\r\n| where record_type==\"PTR\" and reply_code==\"NOERROR\"\r\n| extend TTLs = strcat_array(todynamic(TTLs), \",\"), answers = strcat_array(todynamic(answers), \",\"), ttl = strcat_array(todynamic(ttl), \",\")\r\n| project-away $table\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Details for Successful Reverse Query : {selected_reverse_query}",
                    "noDataMessage": "No data found",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "selected_reverse_query",
                    "comparison": "isNotEqualTo",
                    "value": "none"
                  },
                  "name": "query - 14",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "corelight_dns\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{ResponderPort}') or id_resp_p == ('{ResponderPort}'))\r\n| search '{AdditionalFilter}'\r\n| where record_type == 'PTR' and reply_code == 'NXDOMAIN'\r\n| where query == '{selected_reverse_nx_query}'\r\n| extend TTLs = strcat_array(todynamic(TTLs), \",\"), answers = strcat_array(todynamic(answers), \",\"), ttl = strcat_array(todynamic(ttl), \",\")\r\n| project-away $table\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Details of Reverse Query having Non-Existent Domains : {selected_reverse_nx_query}",
                    "noDataMessage": "No data found.",
                    "timeContextFromParameter": "GlobalTimeRestriction",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "rowLimit": 10000,
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "selected_reverse_nx_query",
                    "comparison": "isNotEqualTo",
                    "value": "none"
                  },
                  "name": "query - 15",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "corelight_dns"
            },
            "name": "corelight_dns_group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "**File analysis is only available for data extracted by Corelight Sensors (open source Zeek sensors not supported)**"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "7893ba65-2d26-4c95-8190-49ce820f2eeb",
                        "version": "KqlParameterItem/1.0",
                        "name": "Mime_Type",
                        "label": "Mime Type",
                        "type": 2,
                        "isRequired": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let pre_mime_type = datatable(mime_type: string) [\r\n\"application/chrome-ext\",\r\n\"application/font-woff\",\r\n\"application/font-woff2\",\r\n\"application/javascript\",\r\n\"application/msword\",\r\n\"application/ocsp-request\",\r\n\"application/ocsp-response\",\r\n\"application/soap+xml\",\r\n\"application/vnd.ms-cab-compressed\",\r\n\"application/vnd.ms-fontobject\",\r\n\"application/x-bzip2\",\r\n\"application/x-debian-package\",\r\n\"application/x-dosexec\",\r\n\"application/x-font-ttf\",\r\n\"application/x-rpm\",\r\n\"application/x-shockwave-flash\",\r\n\"application/x-x509-ca-cert\",\r\n\"application/x-x509-user-cert\",\r\n\"application/xml\",\r\n\"application/zip\",\r\n\"image/gif\",\r\n\"image/jpeg\",\r\n\"image/png\",\r\n\"image/x-icon\",\r\n\"image/x-ms-bmp\",\r\n\"text/html\",\r\n\"text/ini\",\r\n\"text/json\",\r\n\"text/plain\",\r\n\"text/x-php\",\r\n\"application/java-archive\",\r\n\"application/pdf\",\r\n\"application/pgp-signature\",\r\n\"application/x-7z-compressed\",\r\n\"application/x-gzip\",\r\n\"application/x-java-applet\",\r\n\"application/x-java-jnlp-file\",\r\n\"application/xml-rpc\",\r\n\"audio/mpeg\",\r\n\"audio/x-mp4a-latm\",\r\n\"audio/x-wav\",\r\n\"image/svg+xml\",\r\n\"text/x-cross-domain-policy\",\r\n\"video/mp4\",\r\n\"application/ogg\",\r\n\"image/jp2\",\r\n\"video/x-flv\",\r\n\"application/x-xz\",\r\n\"application/EDIFACT\",\r\n\"application/alto-costmap+json\",\r\n\"application/pkixcmp\",\r\n\"application/srgs\",\r\n\"application/ttml+xml\",\r\n\"application/vnd-wap-wmlc\",\r\n\"application/vnd.3gpp.mcptt-signed+xml\",\r\n\"application/vnd.3gpp.pic-bw-large\",\r\n\"application/vnd.3gpp2.sms\",\r\n\"application/vnd.accpac.simply.imp\",\r\n\"application/vnd.cybank\",\r\n\"application/vnd.dvb.ait\",\r\n\"application/vnd.ericsson.quickcall\",\r\n\"application/vnd.geospace\",\r\n\"application/vnd.groove-tool-message\",\r\n\"application/vnd.hcl-bireports\",\r\n\"application/vnd.igloader\",\r\n\"application/vnd.innopath.wamp.notification\",\r\n\"application/vnd.iptc.g2.conceptitem+xml\",\r\n\"application/vnd.japannet-payment-wakeup\",\r\n\"application/vnd.marlin.drm.license+xml\",\r\n\"application/vnd.medcalcdata\",\r\n\"application/vnd.ms-windows.nwprinting.oob\",\r\n\"application/vnd.mseq\",\r\n\"application/vnd.nokia.iSDS-radio-presets\",\r\n\"application/vnd.nokia.ncd\",\r\n\"application/vnd.oasis.opendocument.image-template\",\r\n\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\",\r\n\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\r\n\"application/vnd.openxmlformats-officedocument.theme+xml\",\r\n\"application/vnd.osgi.subsystem\",\r\n\"application/vnd.pvi.ptid1\",\r\n\"application/vnd.radisys.moml+xml\",\r\n\"application/vnd.shana.informed.formdata\",\r\n\"application/vnd.software602.filler.form+xml\",\r\n\"application/vnd.uplanet.listcmd-wbxml\",\r\n\"application/vnd.vcx\",\r\n\"application/vnd.wt.stf\"\r\n];\r\n\r\ncorelight_files\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| project mime_type \r\n| union pre_mime_type\r\n| where isnotempty(mime_type) and mime_type != \"application/pkix-cert\"\r\n| distinct mime_type\r\n| sort by mime_type asc\r\n",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "GlobalTimeRestriction",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": "value::all"
                      },
                      {
                        "id": "a6972852-6429-4fe8-822a-1b7abe1aa9f4",
                        "version": "KqlParameterItem/1.0",
                        "name": "AdditionalFilter",
                        "label": "Additional Filter",
                        "type": 1,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "*"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "GlobalTimeRestriction"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 1"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "e9a49cbe-fe0a-4a9e-b1b0-e52a3f3b2d0f",
                        "cellValue": "Tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Top Values",
                        "subTarget": "TopValues",
                        "style": "link"
                      },
                      {
                        "id": "c409d048-8fd2-493b-abdc-adea927311a3",
                        "cellValue": "Tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Hosts",
                        "subTarget": "Hosts",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_files\n| where isnotempty(mime_type) and\n        is_broadcast != \"true\" and\n        mime_type != \"application/pkix-cert\" and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\n        ('*' == ('{Mime_Type}') or mime_type == ('{Mime_Type}'))\n| search '{AdditionalFilter}'\n| summarize Count = count() by mime_type\n| sort by Count desc \n| take 20\n",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Top 20 Mime Types by File Count",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "exportFieldName": "x",
                                "exportParameterName": "mime_type",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "categoricalbar",
                                "chartSettings": {
                                  "createOtherGroup": 20
                                }
                              },
                              "name": "Top 20 Mime Types by File Count",
                              "styleSettings": {
                                "padding": "20px"
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the bars in the above panel **Top 20 Mime Types by File Count** to view more information.",
                                "style": "info"
                              },
                              "name": "text - 1"
                            }
                          ],
                          "exportParameters": true
                        },
                        "name": "group - 7"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files\r\n| where is_broadcast != \"true\" and\r\n        mime_type == ('{mime_type}') and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}' \r\n| extend analyzers = strcat_array(todynamic(analyzers), \", \"), tx_hosts = strcat_array(todynamic(tx_hosts), \", \"),\r\n         rx_hosts = strcat_array(todynamic(rx_hosts), \", \"), conn_uids = strcat_array(todynamic(conn_uids), \", \"), \r\n         extracted = strcat_array(todynamic(extracted), \", \"), dest_host = strcat_array(todynamic(dest_host), \", \"),\r\n         src_host = strcat_array(todynamic(src_host), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Mime Type: {mime_type}",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "mime_type",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 5 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files\r\n| where isnotempty(mime_type) and\r\n        isnotempty(file_name) and\r\n        file_name !contains \"exe\" and\r\n        ('*' == ('{Mime_Type}') or mime_type == ('{Mime_Type}')) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| summarize Count = count() by mime_type, filename\r\n| top 15 by Count\r\n| project [\"Mime Type\"] = mime_type, [\"File Name\"] = filename, Count",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Corelight Mime Type to Filename Check",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportedParameters": [
                            {
                              "fieldName": "File Name",
                              "parameterName": "file_name"
                            },
                            {
                              "fieldName": "Mime Type",
                              "parameterName": "Mime_Type_For_FileName",
                              "parameterType": 1
                            }
                          ],
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 4"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files\n| where isnotempty(app) and\n        is_broadcast != \"true\" and\n        mime_type != \"application/pkix-cert\" and\n       ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\n       ('*' == ('{Mime_Type}') or mime_type == ('{Mime_Type}'))\n| search '{AdditionalFilter}'\n| summarize Count = count() by app\n| top 10 by Count\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Top File Protocols by File Count",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "series",
                          "exportParameterName": "app",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "piechart"
                        },
                        "customWidth": "50",
                        "name": "Top File Protocols by File Count"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Corelight Mime Type to Filename Check** to view more information.",
                                "style": "info"
                              },
                              "customWidth": "50",
                              "name": "text - 1"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the sections in the above panel **Top File Protocols by File Count** to view more information.",
                                "style": "info"
                              },
                              "customWidth": "50",
                              "name": "text - 1"
                            }
                          ]
                        },
                        "name": "group - 10"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files\r\n| where file_name == (@'{file_name}')\r\n        and mime_type == (@'{Mime_Type_For_FileName}') and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| extend analyzers = strcat_array(todynamic(analyzers), \", \"), tx_hosts = strcat_array(todynamic(tx_hosts), \", \"),\r\n         rx_hosts = strcat_array(todynamic(rx_hosts), \", \"), conn_uids = strcat_array(todynamic(conn_uids), \", \"), \r\n         extracted = strcat_array(todynamic(extracted), \", \"), dest_host = strcat_array(todynamic(dest_host), \", \"),\r\n         src_host = strcat_array(todynamic(src_host), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Mime Type: {Mime_Type_For_FileName} & File: {file_name}",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "file_name",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "Mime_Type_For_FileName",
                            "comparison": "isNotEqualTo"
                          }
                        ],
                        "name": "query - 7"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files\r\n| where app == ('{app}') and\r\n        is_broadcast != \"true\" and\r\n        mime_type != \"application/pkix-cert\" and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == ('{Mime_Type}') or mime_type == ('{Mime_Type}'))\r\n| search '{AdditionalFilter}'\r\n| extend analyzers = strcat_array(todynamic(analyzers), \", \"), tx_hosts = strcat_array(todynamic(tx_hosts), \", \"),\r\n         rx_hosts = strcat_array(todynamic(rx_hosts), \", \"), conn_uids = strcat_array(todynamic(conn_uids), \", \"), \r\n         extracted = strcat_array(todynamic(extracted), \", \"), dest_host = strcat_array(todynamic(dest_host), \", \"),\r\n         src_host = strcat_array(todynamic(src_host), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of File Protocol: {app}",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "app",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 5"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files \n| where is_broadcast != \"true\" and\n        ('*' == ('{Mime_Type}') or mime_type == ('{Mime_Type}')) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| search '{AdditionalFilter}'\n| extend NetworkDirection = case(\n    is_src_internal_ip == \"true\" and is_dest_internal_ip == \"false\", \"sent\",\n    is_dest_internal_ip == \"true\" and is_src_internal_ip == \"false\", \"received\",\n    is_dest_internal_ip == \"true\" and is_src_internal_ip == \"true\", \"internal\",\n    \"unknown\"\n)\n| make-series [\"Files Sent\"] = countif(NetworkDirection==\"sent\"),\n              [\"Files Received\"] = countif(NetworkDirection==\"received\"),\n              [\"Files Internal\"] = countif(NetworkDirection==\"internal\"), \n              [\"Files Unknown\"] = countif(NetworkDirection==\"unknown\") \n              on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step {GlobalTimeRestriction:grain} by NetworkDirection",
                          "size": 0,
                          "title": "File Flow - # of Files",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "areachart",
                          "tileSettings": {
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0
                          }
                        },
                        "name": "File Flow - # of Files"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files\n| where is_broadcast != \"true\" and\n        ('*' == ('{Mime_Type}') or mime_type == ('{Mime_Type}')) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| search '{AdditionalFilter}'\n| extend NetworkDirection = case(\n    is_src_internal_ip == \"true\" and is_dest_internal_ip == \"false\", \"sent\",\n    is_dest_internal_ip == \"true\" and is_src_internal_ip == \"false\", \"received\",\n    is_dest_internal_ip == \"true\" and is_src_internal_ip == \"true\", \"internal\",\n    \"unknown\"\n)\n| make-series [\"Bytes Sent\"] = sumif(bytes, NetworkDirection==\"sent\"),\n              [\"Bytes Received\"] = sumif(bytes, NetworkDirection==\"received\"),\n              [\"Bytes Internal\"] = sumif(bytes, NetworkDirection==\"internal\"), \n              [\"Bytes Unknown\"] = sumif(bytes, NetworkDirection==\"unknown\") \n              on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step {GlobalTimeRestriction:grain} by NetworkDirection",
                          "size": 0,
                          "title": "File Flow - Bytes",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "areachart",
                          "tileSettings": {
                            "showBorder": false
                          },
                          "graphSettings": {
                            "type": 0
                          },
                          "chartSettings": {
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 36,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true
                                }
                              }
                            }
                          }
                        },
                        "name": "File Flow - Bytes"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Tab",
                    "comparison": "isEqualTo",
                    "value": "TopValues"
                  },
                  "name": "deprecated_files"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files\r\n| where is_broadcast != \"true\" and\r\n        isnotempty(mime_type) and\r\n        ('*' == ('{Mime_Type}') or mime_type == ('{Mime_Type}')) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| mv-expand [\"Source Host\"] = todynamic(src_host)\r\n| where isnotempty([\"Source Host\"])\r\n| summarize [\"Source File Count\"] = count() by tostring([\"Source Host\"])\r\n| top 10 by [\"Source File Count\"]",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Transmitting (tx_host) Hosts - # Files",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 0",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files\r\n| where is_broadcast != \"true\" and\r\n        isnotempty(mime_type) and\r\n        ('*' == ('{Mime_Type}') or mime_type == ('{Mime_Type}')) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| mv-expand [\"Source Host\"] = todynamic(src_host)\r\n| where isnotempty([\"Source Host\"])\r\n| summarize [\"Source Bytes\"] = sum(bytes) by tostring([\"Source Host\"])\r\n| top 10 by [\"Source Bytes\"]",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Transmitting (tx_host) Hosts - Bytes",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Source Bytes",
                                "formatter": 0,
                                "formatOptions": {
                                  "aggregation": "Count"
                                },
                                "numberFormat": {
                                  "unit": 36,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 0",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files\r\n| where is_broadcast != \"true\" and\r\n        isnotempty(mime_type) and\r\n        ('*' == ('{Mime_Type}') or mime_type == ('{Mime_Type}')) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| mv-expand [\"Destination Host\"] = todynamic(dest_host)\r\n| where isnotempty([\"Destination Host\"])\r\n| summarize [\"Destination File Count\"] = count() by tostring([\"Destination Host\"])\r\n| top 10 by [\"Destination File Count\"]",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Receiving (rx_host) Hosts - # Files",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 0",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_files\r\n| where is_broadcast != \"true\" and\r\n        isnotempty(mime_type) and\r\n        ('*' == ('{Mime_Type}') or mime_type == ('{Mime_Type}')) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| mv-expand [\"Destination Host\"] = todynamic(dest_host)\r\n| where isnotempty([\"Destination Host\"])\r\n| summarize [\"Destination Bytes\"] = sum(bytes) by tostring([\"Destination Host\"])\r\n| top 10 by [\"Destination Bytes\"]",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Receiving (rx_host) Hosts - Bytes",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Destination Bytes",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 36,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 0",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Tab",
                    "comparison": "isEqualTo",
                    "value": "Hosts"
                  },
                  "name": "group - 4"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "corelight_files"
            },
            "name": "corelight_files_group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "720c46f5-c415-4f4e-9683-e2cd8694c6a4",
                        "version": "KqlParameterItem/1.0",
                        "name": "UserAgent",
                        "label": "User Agent (Top 100)",
                        "type": 2,
                        "isRequired": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "corelight_http\r\n| where isnotempty(user_agent) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor})) \r\n| summarize Count = count() by user_agent\r\n| top 100 by Count \r\n| sort by user_agent asc\r\n| project user_agent",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 43200000
                        },
                        "timeContextFromParameter": "GlobalTimeRestriction",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "a6972852-6429-4fe8-822a-1b7abe1aa9f4",
                        "version": "KqlParameterItem/1.0",
                        "name": "AdditionalFilter",
                        "label": "Additional Filter",
                        "type": 1,
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "*"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "GlobalTimeRestriction"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 11"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "289a7f8e-6bfa-4411-b794-9e5a5d6174b1",
                        "cellValue": "Tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Top Values",
                        "subTarget": "Top_Values",
                        "style": "link"
                      },
                      {
                        "id": "ee2e2798-6733-4d52-820a-b5ac654240a1",
                        "cellValue": "Tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Details",
                        "subTarget": "Details",
                        "style": "link"
                      },
                      {
                        "id": "37619e94-47cf-408b-a2df-dc7aae4a9dc9",
                        "cellValue": "Tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Directions",
                        "subTarget": "Directions",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 1"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(referrer)\n| search '{AdditionalFilter}'\n| distinct referrer\n| count",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Distinct Referrers",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportParameterName": "Referrer_Count",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "showBorder": false
                          },
                          "textSettings": {
                            "style": "bignumber"
                          }
                        },
                        "customWidth": "16",
                        "name": "http_distinct_referrers"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(user_agent)\n| search '{AdditionalFilter}'\n| distinct user_agent\n| count",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Distinct User Agents",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportParameterName": "User_Agent_Count",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "showBorder": false
                          },
                          "textSettings": {
                            "style": "bignumber"
                          }
                        },
                        "customWidth": "16",
                        "name": "query - 17"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(host)\n| search '{AdditionalFilter}'\n| distinct host\n| count\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Distinct Hosts",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportParameterName": "Host_Count",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "showBorder": false
                          },
                          "textSettings": {
                            "style": "bignumber"
                          }
                        },
                        "customWidth": "16",
                        "name": "http_distinct_hosts"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(uid)\n| search '{AdditionalFilter}'\n| distinct uid\n| count\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Distinct Connections",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportParameterName": "Connection_Count",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "leftContent": {
                              "columnMatch": "Count",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "showBorder": false
                          },
                          "textSettings": {
                            "style": "bignumber"
                          }
                        },
                        "customWidth": "16",
                        "name": "http_distinct_connections"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(response_body_len)\n| search '{AdditionalFilter}'\n| summarize avg_value = round(avg(response_body_len), 2)\n| project rounded_avg = iff(isnan(avg_value), toreal(0), round(avg_value, 2))\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Average Body Length",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportParameterName": "Average_Body_Length",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "leftContent": {
                              "columnMatch": "rounded_avg",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "showBorder": false
                          },
                          "textSettings": {
                            "style": "bignumber"
                          }
                        },
                        "customWidth": "16",
                        "name": "http_avg_response_len"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(user_agent)\n| search '{AdditionalFilter}'\n| extend ua_length = strlen(user_agent)\n| summarize avg_value = round(avg(ua_length), 2)\n| project rounded_avg = iff(isnan(avg_value), toreal(0), round(avg_value, 2))\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Average User Agent Length",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportParameterName": "Average_User_Agent_Length",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "tiles",
                          "tileSettings": {
                            "leftContent": {
                              "columnMatch": "rounded_avg",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "greenRed"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            "showBorder": false
                          },
                          "textSettings": {
                            "style": "bignumber"
                          }
                        },
                        "customWidth": "16",
                        "name": "http_avg_ua_length"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the any above tile to view more information.",
                          "style": "info"
                        },
                        "name": "text - 1"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where isnotempty(referrer)\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Detail of Events with Referrers",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "Referrer_Count",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "query - 0",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where isnotempty(user_agent)\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Detail of Events with User Agents",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "User_Agent_Count",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "query - 0",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where isnotempty(host)\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Detail of Events with Hosts",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "Host_Count",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "query - 0",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where isnotempty(uid)\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Detail of Events with Connections",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "Connection_Count",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "query - 0",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Detail of All HTTP Events",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "Average_Body_Length",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "query - 0",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Detail of All HTTP Events",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "conditionalVisibility": {
                                "parameterName": "Average_User_Agent_Length",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "query - 0",
                              "styleSettings": {
                                "showBorder": true
                              }
                            }
                          ]
                        },
                        "name": "Tiles Drill Down"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(host_header)\n| search '{AdditionalFilter}'\n| summarize Count = count() by host_header\n| project [\"Host Header\"] = host_header, Count\n| top 10 by Count",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Host Headers by Count",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "Host Header",
                          "exportParameterName": "Top_Host_Header",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "Count",
                                "sortOrder": 2
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "Count",
                              "sortOrder": 2
                            }
                          ]
                        },
                        "customWidth": "33",
                        "name": "http_top_hosts"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(status_msg)\n| search '{AdditionalFilter}'\n| summarize Count = count() by status_msg\n| top 10 by Count",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "HTTP Status Code Breakdown",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "series",
                          "exportParameterName": "Status_Code",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "piechart",
                          "chartSettings": {
                            "createOtherGroup": 10
                          }
                        },
                        "customWidth": "33",
                        "name": "http_status_code_chart"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\n\ncorelight_conn\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(id_orig_h) and\n        service == \"http\"\n| search '{AdditionalFilter}'\n| make-series Sparkline = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by id_orig_h\n| extend Count = array_sum(Sparkline)\n| project [\"Source IP\"] = id_orig_h, [\"Originator Over Time\"] = Sparkline, Count\n| top 10 by Count\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Originators",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "Source IP",
                          "exportParameterName": "Top_ID_Orig_H",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Originator Over Time",
                                "formatter": 10,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              },
                              {
                                "columnMatch": "Originator over time",
                                "formatter": 10,
                                "formatOptions": {
                                  "palette": "blue"
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "33",
                        "name": "http_top_originators"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Top Host Headers by Count** to view more information.",
                                "style": "info"
                              },
                              "customWidth": "33",
                              "name": "text - 1"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the sections in the above panel **HTTP Status Code Breakdown** to view more information.",
                                "style": "info"
                              },
                              "customWidth": "33",
                              "name": "text - 1"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Top Originators** to view more information.",
                                "style": "info"
                              },
                              "customWidth": "33",
                              "name": "text - 1"
                            }
                          ]
                        },
                        "name": "group - 6"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where host_header == ('{Top_Host_Header}') \r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Host Header: {Top_Host_Header}",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Top_Host_Header",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 11",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where status_msg == ('{Status_Code}')\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of HTTP Status: {Status_Code}",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Status_Code",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 15",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_conn\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where service == \"http\" and\r\n        id_orig_h == ('{Top_ID_Orig_H}') \r\n| search '{AdditionalFilter}'\r\n| extend tunnel_parents = strcat_array(todynamic(tunnel_parents), \", \"), suri_ids = strcat_array(todynamic(suri_ids), \", \"),\r\n         apps = strcat_array(todynamic(apps), \", \"), app = strcat_array(app, \", \"), id_orig_h_n_vals = strcat_array(todynamic(id_orig_h_n_vals), \", \"),\r\n         id_resp_h_n_vals = strcat_array(todynamic(id_resp_h_n_vals), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Source: {Top_ID_Orig_H}",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Top_ID_Orig_H",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 12",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let filter_record = corelight_http\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(user_agent)\n| search '{AdditionalFilter}';\n\nlet total = toscalar(filter_record | count);\n\nfilter_record\n| summarize Count = count() by user_agent\n| extend Percent = round((Count * 100.0 / total), 6)\n| sort by Count asc\n| project [\"HTTP User Agent\"] = user_agent, Count, Percent\n| limit 10",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Rare User Agents",
                                "noDataMessage": "No data found.",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "exportFieldName": "HTTP User Agent",
                                "exportParameterName": "Rare_HTTP_User_Agent",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "name": "http_rare_ua",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Rare User Agents** to view more information.",
                                "style": "info"
                              },
                              "name": "text - 1"
                            }
                          ],
                          "exportParameters": true
                        },
                        "customWidth": "50",
                        "name": "group - 18"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let filter_record = corelight_http\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where isnotempty(host_header)\n| search '{AdditionalFilter}';\n\nlet total = toscalar(filter_record | count);\n\nfilter_record \n| summarize Count = count() by host_header\n| extend Percent = round((Count * 100.0 / total), 6)\n| sort by Count asc\n| project [\"Host Header\"] = host_header, Count, Percent\n| limit 10",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Rare Host Headers",
                                "noDataMessage": "No data found.",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "exportFieldName": "Host Header",
                                "exportParameterName": "Rare_Host_Header",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "rowLimit": 10000,
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "Count",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "Count",
                                    "sortOrder": 1
                                  }
                                ]
                              },
                              "name": "http_rare_hosts",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Rare Host Headers** to view more information.",
                                "style": "info"
                              },
                              "name": "text - 1"
                            }
                          ],
                          "exportParameters": true
                        },
                        "customWidth": "50",
                        "name": "group - 19"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\r\n| where user_agent == (```{Rare_HTTP_User_Agent}```) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Rare User Agent: {Rare_HTTP_User_Agent}",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Rare_HTTP_User_Agent",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 13",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where host_header == ('{Rare_Host_Header}') \r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Rare Host Header: {Rare_Host_Header}",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Rare_Host_Header",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 14",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Tab",
                    "comparison": "isEqualTo",
                    "value": "Top_Values"
                  },
                  "name": "group - 2"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "parameters": [
                                  {
                                    "id": "6025317f-629e-497d-8160-10442d1b2e34",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "HTTPMethod",
                                    "label": "HTTP Method",
                                    "type": 2,
                                    "isRequired": true,
                                    "quote": "'",
                                    "delimiter": ",",
                                    "query": "corelight_http\r\n| where isnotempty(http_method) and\r\n        ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| distinct http_method\r\n| sort by http_method asc",
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "selectAllValue": "*",
                                      "showDefault": false
                                    },
                                    "timeContext": {
                                      "durationMs": 43200000
                                    },
                                    "timeContextFromParameter": "GlobalTimeRestriction",
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "name": "parameters - 2"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' == ('{HTTPMethod}') or http_method == ('{HTTPMethod}')) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where isnotempty(host_header) \r\n| search '{AdditionalFilter}'\r\n| summarize Count = count() by host_header\r\n| project [\"Host Header\"] = host_header, Count\r\n| sort by Count desc",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Host Breakdown by HTTP Method",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "exportFieldName": "Host Header",
                                "exportParameterName": "Host_Header",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "name": "query - 2",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Host Breakdown by HTTP Method** to view more information.",
                                "style": "info"
                              },
                              "name": "text - 1"
                            }
                          ],
                          "exportParameters": true
                        },
                        "customWidth": "50",
                        "name": "group - 9",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 9,
                              "content": {
                                "version": "KqlParameterItem/1.0",
                                "parameters": [
                                  {
                                    "id": "850eb07c-9895-4882-ab89-73fd51a945fe",
                                    "version": "KqlParameterItem/1.0",
                                    "name": "HTTPStatus",
                                    "label": "HTTP Status",
                                    "type": 2,
                                    "isRequired": true,
                                    "quote": "'",
                                    "delimiter": ",",
                                    "query": "corelight_http\r\n| where isnotempty(status_code) and\r\n        ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| distinct status_code\r\n| sort by status_code asc",
                                    "typeSettings": {
                                      "additionalResourceOptions": [
                                        "value::all"
                                      ],
                                      "selectAllValue": "*",
                                      "showDefault": false
                                    },
                                    "timeContext": {
                                      "durationMs": 0
                                    },
                                    "timeContextFromParameter": "GlobalTimeRestriction",
                                    "defaultValue": "value::all",
                                    "queryType": 0,
                                    "resourceType": "microsoft.operationalinsights/workspaces"
                                  }
                                ],
                                "style": "pills",
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                              },
                              "customWidth": "50",
                              "name": "parameters - 1",
                              "styleSettings": {
                                "maxWidth": "50"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' == ('{HTTPStatus}') or status_code == ('{HTTPStatus}')) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where isnotempty(host_header) and\r\n        isnotempty(status_code)\r\n| search '{AdditionalFilter}'\r\n| summarize Count = count() by host_header, status_code, status_msg\r\n| project [\"Host Header\"] = host_header, [\"Status Code\"] = status_code, [\"Status Msg\"] = status_msg, Count\r\n| sort by Count desc",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Host Breakdown by HTTP Status",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "exportedParameters": [
                                  {
                                    "fieldName": "Host Header",
                                    "parameterName": "Host_by_Status",
                                    "parameterType": 1
                                  },
                                  {
                                    "fieldName": "",
                                    "parameterName": "Host_Details",
                                    "parameterType": 1
                                  }
                                ],
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "name": "query - 2",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Host Breakdown by HTTP Status** to view more information.",
                                "style": "info"
                              },
                              "name": "text - 1"
                            }
                          ],
                          "exportParameters": true
                        },
                        "customWidth": "50",
                        "name": "group - 10",
                        "styleSettings": {
                          "maxWidth": "50"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' == ('{HTTPMethod}') or http_method == ('{HTTPMethod}')) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where host_header == ('{Host_Header}')\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Host: {Host_Header} by HTTP Method",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "TimeGenerated",
                                "sortOrder": 1
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "TimeGenerated",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "conditionalVisibility": {
                          "parameterName": "Host_Header",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 2",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\r\n| where ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) and\r\n        ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| extend Host_Details = todynamic('{Host_Details}')\r\n| where host_header == Host_Details[\"Host Header\"] and\r\n        status_code == Host_Details[\"Status Code\"] and\r\n        status_msg == Host_Details[\"Status Msg\"]\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Host: {Host_by_Status} by HTTP Status",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Host_Details",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 3",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Tab",
                    "comparison": "isEqualTo",
                    "value": "Details"
                  },
                  "name": "group - 6"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 1,
                              "content": {
                                "json": "**Distinct Host Headers**"
                              },
                              "name": "text - 0"
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_http\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```))\r\n| where isnotempty(host_header) and\r\n        direction in (\"inbound\", \"internal\")\r\n| search '{AdditionalFilter}'\r\n| distinct host_header\r\n| count\r\n\r\n",
                                "size": 4,
                                "showAnalytics": true,
                                "title": "Inbound",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "tiles",
                                "tileSettings": {
                                  "leftContent": {
                                    "columnMatch": "Count",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "greenRed"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal"
                                      }
                                    }
                                  },
                                  "showBorder": false
                                },
                                "textSettings": {
                                  "style": "bignumber"
                                }
                              },
                              "customWidth": "50",
                              "name": "query - 1",
                              "styleSettings": {
                                "maxWidth": "50"
                              }
                            },
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "corelight_http\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) \r\n| where isnotempty(host_header) and\r\n        direction in (\"outbound\", \"external\")\r\n| search '{AdditionalFilter}'\r\n| distinct host_header\r\n| count",
                                "size": 4,
                                "showAnalytics": true,
                                "title": "Outbound",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "visualization": "tiles",
                                "tileSettings": {
                                  "leftContent": {
                                    "columnMatch": "Count",
                                    "formatter": 12,
                                    "formatOptions": {
                                      "palette": "greenRed"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal"
                                      }
                                    }
                                  },
                                  "showBorder": false
                                },
                                "textSettings": {
                                  "style": "bignumber"
                                }
                              },
                              "customWidth": "50",
                              "name": "query - 2",
                              "styleSettings": {
                                "maxWidth": "50"
                              }
                            }
                          ]
                        },
                        "name": "group - 0"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\r\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\r\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\r\n\r\ncorelight_http\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```))\r\n| where isnotempty(host_header) and\r\n        direction in (\"inbound\", \"internal\")\r\n| search '{AdditionalFilter}'\r\n| make-series Sparkline = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by host_header\r\n| extend Count = array_sum(Sparkline)\r\n| project [\"Host Header\"] = host_header, Count, Sparkline\r\n| sort by Count desc\r\n",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Local Hosts - Inbound",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "exportFieldName": "Host Header",
                                "exportParameterName": "Host_Header_Inbound",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Sparkline",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "greenRed"
                                      }
                                    }
                                  ],
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "name": "query - 3",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Local Hosts - Inbound** to view more information.",
                                "style": "info"
                              },
                              "name": "text - 1"
                            }
                          ],
                          "exportParameters": true
                        },
                        "customWidth": "50",
                        "name": "group - 7"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\r\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\r\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\r\n\r\ncorelight_http\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```))\r\n| where isnotempty(host_header) and\r\n        direction in (\"outbound\", \"external\") \r\n| search '{AdditionalFilter}'\r\n| make-series Sparkline = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by host_header\r\n| extend Count = array_sum(Sparkline)\r\n| project [\"Host Header\"] = host_header, Count, Sparkline\r\n| sort by Count desc\r\n",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Local Hosts - Outbound",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "exportFieldName": "Host Header",
                                "exportParameterName": "Host_Header_Outbound",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Sparkline",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "greenRed"
                                      }
                                    },
                                    {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "blue"
                                      }
                                    }
                                  ],
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "name": "query - 1",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Local Hosts - Outbound** to view more information.",
                                "style": "info"
                              },
                              "name": "text - 1"
                            }
                          ],
                          "exportParameters": true
                        },
                        "customWidth": "50",
                        "name": "group - 4"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```))\r\n| where host_header == ('{Host_Header_Inbound}') and\r\n        direction in (\"inbound\", \"internal\")\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Local Host: {Host_Header_Inbound} - Inbound",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Host_Header_Inbound",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 5",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) \r\n| where host_header == ('{Host_Header_Outbound}') and\r\n        direction in (\"outbound\", \"external\")  \r\n| search '{AdditionalFilter}'  \r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Local Host: {Host_Header_Outbound} - Outbound",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "Host_Header_Outbound",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 5",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\r\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\r\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\r\n\r\ncorelight_http\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) \r\n| where isnotempty(user_agent) and\r\n        direction in (\"inbound\", \"internal\")\r\n| search '{AdditionalFilter}'\r\n| make-series Sparkline = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by user_agent\r\n| extend Count = array_sum(Sparkline)\r\n| project [\"HTTP User Agent\"] = user_agent, Count, Sparkline\r\n| sort by Count\r\n",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Local User Agents - Inbound",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "exportFieldName": "HTTP User Agent",
                                "exportParameterName": "User_Agent_Inbound",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Sparkline",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "greenRed"
                                      }
                                    }
                                  ],
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "name": "query - 4",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Local User Agents - Inbound** to view more information.",
                                "style": "info"
                              },
                              "name": "text - 1"
                            }
                          ],
                          "exportParameters": true
                        },
                        "customWidth": "50",
                        "name": "group - 8"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\r\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\r\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\r\n\r\ncorelight_http\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == (```{UserAgent}```) or user_agent == (```{UserAgent}```)) \r\n| where isnotempty(user_agent) and\r\n        direction in (\"outbound\", \"external\")\r\n| search '{AdditionalFilter}'\r\n| make-series Sparkline = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by user_agent\r\n| extend Count = array_sum(Sparkline)\r\n| project [\"HTTP User Agent\"] = user_agent, Count, Sparkline\r\n| sort by Count\r\n",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "Local User Agents - Outbound",
                                "timeContextFromParameter": "GlobalTimeRestriction",
                                "showRefreshButton": true,
                                "exportFieldName": "HTTP User Agent",
                                "exportParameterName": "User_Agent_Outbound",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Sparkline",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "greenRed"
                                      }
                                    }
                                  ],
                                  "rowLimit": 10000,
                                  "filter": true
                                }
                              },
                              "name": "query - 2",
                              "styleSettings": {
                                "showBorder": true
                              }
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "#### Click on the records in the above panel **Local User Agents - Outbound** to view more information.",
                                "style": "info"
                              },
                              "name": "text - 1"
                            }
                          ],
                          "exportParameters": true
                        },
                        "customWidth": "50",
                        "name": "group - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where user_agent == (```{User_Agent_Inbound}```) and\r\n        direction in (\"inbound\", \"internal\")\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Local User Agent: {User_Agent_Inbound} - Inbound",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "User_Agent_Inbound",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 5",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_http\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where user_agent == (```{User_Agent_Outbound}```) and\r\n        direction in (\"outbound\", \"external\")\r\n| search '{AdditionalFilter}'\r\n| extend proxied = strcat_array(todynamic(proxied), \", \"), orig_mime_types = strcat_array(todynamic(orig_mime_types), \", \"),\r\n         orig_fuids = strcat_array(todynamic(orig_fuids), \", \"), resp_fuids = strcat_array(todynamic(resp_fuids), \", \"),\r\n         tags = strcat_array(todynamic(tags), \", \"), resp_mime_types = strcat_array(todynamic(resp_mime_types), \", \"),\r\n         http_content_type = strcat_array(todynamic(http_content_type), \", \"), server_headers = strcat_array(todynamic(server_headers), \", \"),\r\n         client_headers = strcat_array(todynamic(client_headers), \", \")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Local User Agent: {User_Agent_Outbound} - Outbound",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "User_Agent_Outbound",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 5",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Tab",
                    "comparison": "isEqualTo",
                    "value": "Directions"
                  },
                  "name": "group - 5"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "corelight_http"
            },
            "name": "corelight_http_group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "#### Software analysis is only available for data extracted by Corelight Sensors (open source Zeek sensors not supported)\r\n\r\n"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "715c2033-12a2-44c9-92ea-2cf77980e186",
                        "version": "KqlParameterItem/1.0",
                        "name": "SoftwareType",
                        "label": "Software Type",
                        "type": 2,
                        "description": "Select Software Type",
                        "isRequired": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let SoftwareTypeLookup = datatable(\r\n        software_type: string\r\n    )[\r\n        \"HTTP::APPSERVER\",\r\n        \"HTTP::BROWSER\",\r\n        \"HTTP::SERVER\",\r\n        \"OS::WINDOWS\",\r\n        \"SMTP::MAIL_CLIENT\",\r\n        \"SSH::CLIENT\",\r\n        \"SSH::SERVER\",\r\n        \"FTP::CLIENT\"\r\n    ];\r\nunion SoftwareTypeLookup, (corelight_software\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})))\r\n| where isnotempty(software_type)\r\n| distinct software_type\r\n| sort by software_type asc\r\n",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "GlobalTimeRestriction",
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "3ef545d9-49cd-4a14-8e43-061973aa68bb",
                        "version": "KqlParameterItem/1.0",
                        "name": "AdditionalFilter",
                        "label": "Additional Filter",
                        "type": 1,
                        "description": "Enter a keyword to search",
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "*"
                            }
                          }
                        ]
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 3"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "1fdbc4af-8706-42c1-b8ce-b056ec346e75",
                        "cellValue": "sub_tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Top Values",
                        "subTarget": "top_values",
                        "preText": "Top Values",
                        "style": "link"
                      },
                      {
                        "id": "da271aed-791d-4b20-bf17-17772785b1f2",
                        "cellValue": "sub_tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Details",
                        "subTarget": "details",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 1"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_software\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where ('*' == ('{SoftwareType}') or software_type == ('{SoftwareType}'))\n| search '{AdditionalFilter}'\n| where isnotempty(name)\n| summarize Count = count() by name\n| top 10 by Count",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Top Software",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "series",
                          "exportParameterName": "name",
                          "exportDefaultValue": "none",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "piechart",
                          "chartSettings": {
                            "yAxis": [
                              "Count"
                            ],
                            "createOtherGroup": 10,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true
                                }
                              }
                            }
                          }
                        },
                        "name": "Top Software",
                        "styleSettings": {
                          "padding": "0% 25% 0% 25%"
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the sections in the above panel **Top Software** to view more information.",
                          "style": "info"
                        },
                        "name": "text - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_software\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{SoftwareType}') or software_type == ('{SoftwareType}'))\r\n| search '{AdditionalFilter}'\r\n| where name == '{name}'\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details for Software : {name}",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "name",
                          "comparison": "isNotEqualTo",
                          "value": "none"
                        },
                        "name": "query - 3",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_software\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where ('*' == ('{SoftwareType}') or software_type == ('{SoftwareType}'))\n| search '{AdditionalFilter}'\n| where isnotempty(name) and isnotempty(version)\n| summarize Count = count() by name, version\n| top 10 by Count\n| project-rename [\"Software Name\"]=name, Version=version\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Software Versions",
                          "noDataMessage": "No data found",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportedParameters": [
                            {
                              "fieldName": "Software Name",
                              "parameterName": "software_name",
                              "parameterType": 1,
                              "defaultValue": "none"
                            },
                            {
                              "fieldName": "Version",
                              "parameterName": "version",
                              "parameterType": 1,
                              "defaultValue": "none"
                            }
                          ],
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Count",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "name": "Top Software Versions",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_software\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\n| where ('*' == ('{SoftwareType}') or software_type == ('{SoftwareType}'))\n| search '{AdditionalFilter}'\n| where isnotempty(software_type)\n| summarize Count = count() by software_type\n| top 10 by Count\n| project-rename ['Software Type'] = software_type",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Software Types",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "Software Type",
                          "exportParameterName": "type",
                          "exportDefaultValue": "none",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Count",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 17,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "name": "Top Software Types",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the records in the above panel **Top Software Versions** to view more information.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "name": "text - 3"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the records in the above panel **Top Software Types** to view more information.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "name": "text - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_software\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{SoftwareType}') or software_type == ('{SoftwareType}'))\r\n| search '{AdditionalFilter}'\r\n| where name == '{software_name}' and version == '{version}'\r\n| project-away $table\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details of Software Name : {software_name} and Version : {version}",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "software_name",
                            "comparison": "isNotEqualTo",
                            "value": "none"
                          },
                          {
                            "parameterName": "version",
                            "comparison": "isNotEqualTo",
                            "value": "none"
                          }
                        ],
                        "name": "query - 4",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_software\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{SoftwareType}') or software_type == ('{SoftwareType}'))\r\n| search '{AdditionalFilter}'\r\n| where software_type == '{type}'\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details for Software Type : {type}",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "type",
                          "comparison": "isNotEqualTo",
                          "value": "none"
                        },
                        "name": "query - 5",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "sub_tab",
                    "comparison": "isEqualTo",
                    "value": "top_values"
                  },
                  "name": "top_values"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "41c6d57b-46c0-4ab1-a8d1-ed24b38a9bb4",
                              "version": "KqlParameterItem/1.0",
                              "name": "Host",
                              "type": 2,
                              "description": "Select Host",
                              "isRequired": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "corelight_software\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{SoftwareType}') or software_type == ('{SoftwareType}'))\r\n| where isnotempty(tx_host)\r\n| distinct tx_host\r\n| sort by tx_host asc\r\n",
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "*",
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "GlobalTimeRestriction",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "c3384feb-36bf-43fe-b7b8-532306d7b606",
                              "version": "KqlParameterItem/1.0",
                              "name": "Software",
                              "type": 2,
                              "description": "Select Software Name",
                              "isRequired": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "corelight_software\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{SoftwareType}') or software_type == ('{SoftwareType}'))\r\n| where isnotempty(name)\r\n| distinct name\r\n| sort by name asc\r\n",
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "*",
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 0
                              },
                              "timeContextFromParameter": "GlobalTimeRestriction",
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 0"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_software\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| where ('*' == ('{SoftwareType}') or software_type == ('{SoftwareType}'))\r\n| search '{AdditionalFilter}'\r\n| where ('*' == ('{Host}') or tx_host == ('{Host}'))\r\n| where ('*' == ('{Software}') or name == ('{Software}'))\r\n| project ['Time Generated'] = TimeGenerated, ['Sensor Name']=sensor_name, Source=tx_host, [\"Software Name\"]=name, Version=version, ['Additional Version']=version_addl, ['Software Type']=software_type",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Software Details",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "Tx Host",
                          "exportParameterName": "txhost",
                          "exportDefaultValue": "none",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "name": "query - 1",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "sub_tab",
                    "comparison": "isEqualTo",
                    "value": "details"
                  },
                  "name": "software_details"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "corelight_software"
            },
            "name": "corelight_software_group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "#### x509 analysis is only available for data extracted by Corelight Sensors (open source Zeek sensors not supported)\r\n\r\n"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "da3148d3-08c3-4a3b-9eff-ad559bb0ca68",
                        "version": "KqlParameterItem/1.0",
                        "name": "Direction",
                        "type": 2,
                        "description": "Select Direction",
                        "isRequired": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "jsonData": "[\r\n    { \"value\":\"External\"},\r\n    { \"value\":\"Internal\"},\r\n    { \"value\":\"Inbound\"},\r\n    { \"value\":\"Outbound\"}\r\n]",
                        "defaultValue": "value::all"
                      },
                      {
                        "id": "a6972852-6429-4fe8-822a-1b7abe1aa9f4",
                        "version": "KqlParameterItem/1.0",
                        "name": "AdditionalFilter",
                        "label": "Additional Filter",
                        "type": 1,
                        "description": "Enter a keyword to search",
                        "criteriaData": [
                          {
                            "criteriaContext": {
                              "operator": "Default",
                              "resultValType": "static",
                              "resultVal": "*"
                            }
                          }
                        ],
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRestriction"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 11"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "bc62a236-4bb8-4fd4-92cb-e13e4c545a6b",
                        "cellValue": "Tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Top Values",
                        "subTarget": "TopValues",
                        "style": "link"
                      },
                      {
                        "id": "b44e3acc-5c3b-434b-9138-28e9d44decd3",
                        "cellValue": "Tab",
                        "linkTarget": "parameter",
                        "linkLabel": "x509",
                        "subTarget": "x509",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 1"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let TotalRecords = (corelight_ssl\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == ('{Direction}') or direction == tolower('{Direction}'))\r\n| search '{AdditionalFilter}'\r\n| extend ['SSL Subject'] = coalesce(ssl_subject, ssl_subject_common_name)\r\n| where isnotempty(['SSL Subject']));\r\nlet Total = toscalar(TotalRecords\r\n| count);\r\nTotalRecords\r\n| summarize Count = count() by ['SSL Subject']\r\n| extend Percent = round((Count * 100.0 / Total), 6)\r\n| top 10 by Count\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Certificate Subjects",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "SSL Subject",
                          "exportParameterName": "selected_ssl_subject",
                          "exportDefaultValue": "none",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "name": "query - 0",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the records in the above panel **Top Certificate Subjects** to view more information.",
                          "style": "info"
                        },
                        "name": "text - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_ssl\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == ('{Direction}') or direction == tolower('{Direction}'))\r\n| search '{AdditionalFilter}'\r\n| extend ['SSL Subject'] = coalesce(ssl_subject, ssl_subject_common_name)\r\n| where ['SSL Subject'] == @'{selected_ssl_subject}'\r\n| extend cert_chain_fps = strcat_array(todynamic(cert_chain_fps), \",\"), client_cert_chain_fps = strcat_array(todynamic(client_cert_chain_fps), \",\"), fingerprint = strcat_array(todynamic(fingerprint), \",\")\r\n| project-away $table\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details for Certificate Subject : {selected_ssl_subject}",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "selected_ssl_subject",
                          "comparison": "isNotEqualTo",
                          "value": "none"
                        },
                        "name": "query - 3",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let TotalRecords = (corelight_ssl\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == ('{Direction}') or direction == tolower('{Direction}'))\r\n| search '{AdditionalFilter}'\r\n| where (direction == \"internal\" or direction == \"inbound\") and isnotempty(validation_status));\r\nlet Total = toscalar(TotalRecords\r\n| count);\r\nTotalRecords\r\n| summarize Count = count() by validation_status\r\n| extend Percent = round((Count * 100.0 / Total), 6)\r\n| top 10 by Count\r\n| project-rename ['Validation Status'] = validation_status",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Top Local Responders - Validation Status",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "Validation Status",
                          "exportParameterName": "validation_status",
                          "exportDefaultValue": "none",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_ssl\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == ('{Direction}') or direction == tolower('{Direction}'))\r\n| search '{AdditionalFilter}'\r\n| where isnotempty(ssl_cipher)\r\n| summarize Count = count() by ssl_cipher\r\n| top 10 by Count",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Top Ciphers",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "series",
                          "exportParameterName": "ssl_cipher",
                          "exportDefaultValue": "none",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "piechart",
                          "chartSettings": {
                            "createOtherGroup": 10
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 2"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the records in the above panel **Top Local Responders - Validation Status** to view more information.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "name": "text - 3"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the sections in the above panel **Top Ciphers** to view more information.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "name": "text - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_ssl\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == ('{Direction}') or direction == tolower('{Direction}'))\r\n| search '{AdditionalFilter}'\r\n| where (direction == \"internal\" or direction == \"inbound\") and\r\n        is_broadcast != \"true\" and validation_status == '{validation_status}'\r\n| extend cert_chain_fps = strcat_array(todynamic(cert_chain_fps), \",\"), client_cert_chain_fps = strcat_array(todynamic(client_cert_chain_fps), \",\"), fingerprint = strcat_array(todynamic(fingerprint), \",\")\r\n| project-away $table\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details for Validation Status : {validation_status}",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "validation_status",
                          "comparison": "isNotEqualTo",
                          "value": "none"
                        },
                        "name": "query - 5",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_ssl\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor})) and\r\n        ('*' == ('{Direction}') or direction == tolower('{Direction}'))\r\n| search '{AdditionalFilter}'\r\n| where ssl_cipher == '{ssl_cipher}'\r\n| extend cert_chain_fps = strcat_array(todynamic(cert_chain_fps), \",\"), client_cert_chain_fps = strcat_array(todynamic(client_cert_chain_fps), \",\"), fingerprint = strcat_array(todynamic(fingerprint), \",\")\r\n| project-away $table\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details for Cipher : {ssl_cipher}",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "ssl_cipher",
                          "comparison": "isNotEqualTo",
                          "value": "none"
                        },
                        "name": "query - 4",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Tab",
                    "comparison": "isEqualTo",
                    "value": "TopValues"
                  },
                  "name": "group - 0"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let TopSubjects = (corelight_x509\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| where isnotempty(ssl_subject));\r\nlet Total = toscalar(TopSubjects\r\n| count\r\n);\r\nTopSubjects\r\n| summarize Count = count() by ssl_subject\r\n| extend Percentage = round((Count*100.0)/Total, 6)\r\n| top 10 by Count\r\n| project-rename ['SSL Subject'] = ssl_subject",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "x509 Top Subjects",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "SSL Subject",
                          "exportParameterName": "ssl_subject",
                          "exportDefaultValue": "none",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "Count",
                                "sortOrder": 1
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "Count",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "customWidth": "50",
                        "name": "query - 2",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let TopSubjects = (corelight_x509\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| where isnotempty(ssl_subject));\r\nlet Total = toscalar(TopSubjects\r\n| count\r\n);\r\nTopSubjects\r\n| summarize Count = count() by ssl_subject\r\n| extend Percentage = round((Count*100.0)/Total, 6)\r\n| sort by Count asc\r\n| limit 10\r\n| project-rename ['SSL Subject'] = ssl_subject",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "x509 Rare Subjects",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportFieldName": "SSL Subject",
                          "exportParameterName": "rare_ssl_subject",
                          "exportDefaultValue": "none",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "50",
                        "name": "query - 3",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the records in the above panel **x509 Top Subjects** to view more information.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "name": "text - 3"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the records in the above panel **x509 Rare Subjects** to view more information.",
                          "style": "info"
                        },
                        "customWidth": "50",
                        "name": "text - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_x509\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| where ssl_subject == @'{ssl_subject}'\r\n| extend san_dns = strcat_array(todynamic(san_dns), \",\"), san_uri = strcat_array(todynamic(san_uri), \",\"), san_email = strcat_array(todynamic(san_email), \",\"), san_ip = strcat_array(todynamic(san_ip), \",\")\r\n| project-away $table",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details for x509 Top Subject : {ssl_subject}",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "ssl_subject",
                          "comparison": "isNotEqualTo",
                          "value": "none"
                        },
                        "name": "query - 5",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_x509\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| where ssl_subject == @'{rare_ssl_subject}'\r\n| extend san_dns = strcat_array(todynamic(san_dns), \",\"), san_uri = strcat_array(todynamic(san_uri), \",\"), san_email = strcat_array(todynamic(san_email), \",\"), san_ip = strcat_array(todynamic(san_ip), \",\")\r\n| project-away $table\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details for x509 Rare Subject : {rare_ssl_subject}",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "rare_ssl_subject",
                          "comparison": "isNotEqualTo",
                          "value": "none"
                        },
                        "name": "query - 6",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_x509\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| where days_to_expiry <= 0\r\n| project ['Certificate Subject'] = certificate_subject, ['Certificate Not Valid After'] = certificate_not_valid_after\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "x509 Expired Certificates",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "exportedParameters": [
                            {
                              "fieldName": "Certificate Not Valid After",
                              "parameterName": "not_valid_after",
                              "parameterType": 1,
                              "defaultValue": "none"
                            },
                            {
                              "fieldName": "Certificate Subject",
                              "parameterName": "subject",
                              "parameterType": 1,
                              "defaultValue": "none"
                            }
                          ],
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "Certificate Subject",
                                "sortOrder": 1
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "Certificate Subject",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "name": "query - 9",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Click on the records in the above panel **x509 Expired Certificates** to view more information.",
                          "style": "info"
                        },
                        "name": "text - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "corelight_x509\r\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\r\n| search '{AdditionalFilter}'\r\n| where days_to_expiry <= 0\r\n| where  certificate_not_valid_after == '{not_valid_after}' and certificate_subject == @'{subject}'\r\n| extend san_dns = strcat_array(todynamic(san_dns), \",\"), san_uri = strcat_array(todynamic(san_uri), \",\"), san_email = strcat_array(todynamic(san_email), \",\"), san_ip = strcat_array(todynamic(san_ip), \",\")\r\n| project-away $table\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Details for x509 Certificate having Subject : {subject} and Expiry Date : {not_valid_after}",
                          "noDataMessage": "No data found.",
                          "timeContextFromParameter": "GlobalTimeRestriction",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "table",
                          "gridSettings": {
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "not_valid_after",
                            "comparison": "isNotEqualTo",
                            "value": "none"
                          },
                          {
                            "parameterName": "subject",
                            "comparison": "isNotEqualTo",
                            "value": "none"
                          }
                        ],
                        "name": "query - 7",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Tab",
                    "comparison": "isEqualTo",
                    "value": "x509"
                  },
                  "name": "x509"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Tab",
              "comparison": "isEqualTo",
              "value": "corelight_ssl_x509"
            },
            "name": "SSL and x509"
          }
        ]
      },
      "name": "Data Explorer"
    },
    {
      "type": 1,
      "content": {
        "json": "📝 **Refresh the web page to fetch details of recently collected events**"
      },
      "name": "text - 5"
    }
  ],
  "fromTemplateId": "sentinel-Corelight_Data_Explorer",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}