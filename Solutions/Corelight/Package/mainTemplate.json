{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Corelight - info@corelight.com",
    "comments": "Solution template for Corelight"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Corelight",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "email": "info@corelight.com",
    "_email": "[variables('email')]",
    "_solutionName": "Corelight",
    "_solutionVersion": "3.1.0",
    "solutionId": "corelightinc1584998267292.corelight-for-azure-sentinel",
    "_solutionId": "[variables('solutionId')]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "CorelightWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "analyticRuleObject1": {
      "analyticRuleVersion1": "2.1.1",
      "_analyticRulecontentId1": "8eaa2268-74ee-492c-b869-450eff707fef",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8eaa2268-74ee-492c-b869-450eff707fef')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('8eaa2268-74ee-492c-b869-450eff707fef')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','8eaa2268-74ee-492c-b869-450eff707fef','-', '2.1.1')))]"
    },
    "analyticRuleObject2": {
      "analyticRuleVersion2": "2.1.0",
      "_analyticRulecontentId2": "05850746-9ae4-412f-838b-844f0903f4a9",
      "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '05850746-9ae4-412f-838b-844f0903f4a9')]",
      "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('05850746-9ae4-412f-838b-844f0903f4a9')))]",
      "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','05850746-9ae4-412f-838b-844f0903f4a9','-', '2.1.0')))]"
    },
    "analyticRuleObject3": {
      "analyticRuleVersion3": "2.1.0",
      "_analyticRulecontentId3": "73f23aa2-5cc4-4507-940b-75c9092e9e01",
      "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '73f23aa2-5cc4-4507-940b-75c9092e9e01')]",
      "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('73f23aa2-5cc4-4507-940b-75c9092e9e01')))]",
      "_analyticRulecontentProductId3": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','73f23aa2-5cc4-4507-940b-75c9092e9e01','-', '2.1.0')))]"
    },
    "analyticRuleObject4": {
      "analyticRuleVersion4": "2.1.1",
      "_analyticRulecontentId4": "4e55e306-3022-43a1-870a-41c4d5116079",
      "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4e55e306-3022-43a1-870a-41c4d5116079')]",
      "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4e55e306-3022-43a1-870a-41c4d5116079')))]",
      "_analyticRulecontentProductId4": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','4e55e306-3022-43a1-870a-41c4d5116079','-', '2.1.1')))]"
    },
    "analyticRuleObject5": {
      "analyticRuleVersion5": "2.1.0",
      "_analyticRulecontentId5": "7226d37b-50ee-4e3b-9f80-5b74080d8f2c",
      "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7226d37b-50ee-4e3b-9f80-5b74080d8f2c')]",
      "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7226d37b-50ee-4e3b-9f80-5b74080d8f2c')))]",
      "_analyticRulecontentProductId5": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','7226d37b-50ee-4e3b-9f80-5b74080d8f2c','-', '2.1.0')))]"
    },
    "analyticRuleObject6": {
      "analyticRuleVersion6": "2.1.0",
      "_analyticRulecontentId6": "599570d4-06f8-4939-8e29-95cd003f1abd",
      "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '599570d4-06f8-4939-8e29-95cd003f1abd')]",
      "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('599570d4-06f8-4939-8e29-95cd003f1abd')))]",
      "_analyticRulecontentProductId6": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','599570d4-06f8-4939-8e29-95cd003f1abd','-', '2.1.0')))]"
    },
    "analyticRuleObject7": {
      "analyticRuleVersion7": "2.1.0",
      "_analyticRulecontentId7": "f3245aa1-1ca1-471c-a0b7-97ea6b791d5d",
      "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f3245aa1-1ca1-471c-a0b7-97ea6b791d5d')]",
      "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('f3245aa1-1ca1-471c-a0b7-97ea6b791d5d')))]",
      "_analyticRulecontentProductId7": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','f3245aa1-1ca1-471c-a0b7-97ea6b791d5d','-', '2.1.0')))]"
    },
    "analyticRuleObject8": {
      "analyticRuleVersion8": "2.1.0",
      "_analyticRulecontentId8": "db662e49-6e34-4d10-9d3c-5d04b5479658",
      "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'db662e49-6e34-4d10-9d3c-5d04b5479658')]",
      "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('db662e49-6e34-4d10-9d3c-5d04b5479658')))]",
      "_analyticRulecontentProductId8": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','db662e49-6e34-4d10-9d3c-5d04b5479658','-', '2.1.0')))]"
    },
    "analyticRuleObject9": {
      "analyticRuleVersion9": "2.1.0",
      "_analyticRulecontentId9": "50c61708-9824-46f3-87cf-22490796fae2",
      "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '50c61708-9824-46f3-87cf-22490796fae2')]",
      "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('50c61708-9824-46f3-87cf-22490796fae2')))]",
      "_analyticRulecontentProductId9": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','50c61708-9824-46f3-87cf-22490796fae2','-', '2.1.0')))]"
    },
    "analyticRuleObject10": {
      "analyticRuleVersion10": "2.1.0",
      "_analyticRulecontentId10": "6b579e98-abc9-4e7a-9efc-2f3408ba16c9",
      "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6b579e98-abc9-4e7a-9efc-2f3408ba16c9')]",
      "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6b579e98-abc9-4e7a-9efc-2f3408ba16c9')))]",
      "_analyticRulecontentProductId10": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','6b579e98-abc9-4e7a-9efc-2f3408ba16c9','-', '2.1.0')))]"
    },
    "uiConfigId1": "CorelightConnectorExporter",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "CorelightConnectorExporter",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','Corelight')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Corelight')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Corelight-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "Corelight-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','corelight_bacnet')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_bacnet')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_bacnet-Parser')))]",
      "parserVersion2": "1.0.0",
      "parserContentId2": "corelight_bacnet-Parser"
    },
    "parserObject3": {
      "_parserName3": "[concat(parameters('workspace'),'/','corelight_capture_loss')]",
      "_parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_capture_loss')]",
      "parserTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_capture_loss-Parser')))]",
      "parserVersion3": "1.0.0",
      "parserContentId3": "corelight_capture_loss-Parser"
    },
    "parserObject4": {
      "_parserName4": "[concat(parameters('workspace'),'/','corelight_cip')]",
      "_parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_cip')]",
      "parserTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_cip-Parser')))]",
      "parserVersion4": "1.0.0",
      "parserContentId4": "corelight_cip-Parser"
    },
    "parserObject5": {
      "_parserName5": "[concat(parameters('workspace'),'/','corelight_conn')]",
      "_parserId5": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_conn')]",
      "parserTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_conn-Parser')))]",
      "parserVersion5": "1.1.0",
      "parserContentId5": "corelight_conn-Parser"
    },
    "parserObject6": {
      "_parserName6": "[concat(parameters('workspace'),'/','corelight_conn_long')]",
      "_parserId6": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_conn_long')]",
      "parserTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_conn_long-Parser')))]",
      "parserVersion6": "1.0.0",
      "parserContentId6": "corelight_conn_long-Parser"
    },
    "parserObject7": {
      "_parserName7": "[concat(parameters('workspace'),'/','corelight_conn_red')]",
      "_parserId7": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_conn_red')]",
      "parserTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_conn_red-Parser')))]",
      "parserVersion7": "1.0.0",
      "parserContentId7": "corelight_conn_red-Parser"
    },
    "parserObject8": {
      "_parserName8": "[concat(parameters('workspace'),'/','corelight_corelight_burst')]",
      "_parserId8": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_corelight_burst')]",
      "parserTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_corelight_burst-Parser')))]",
      "parserVersion8": "1.0.0",
      "parserContentId8": "corelight_corelight_burst-Parser"
    },
    "parserObject9": {
      "_parserName9": "[concat(parameters('workspace'),'/','corelight_corelight_overall_capture_loss')]",
      "_parserId9": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_corelight_overall_capture_loss')]",
      "parserTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_corelight_overall_capture_loss-Parser')))]",
      "parserVersion9": "1.0.0",
      "parserContentId9": "corelight_corelight_overall_capture_loss-Parser"
    },
    "parserObject10": {
      "_parserName10": "[concat(parameters('workspace'),'/','corelight_corelight_profiling')]",
      "_parserId10": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_corelight_profiling')]",
      "parserTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_corelight_profiling-Parser')))]",
      "parserVersion10": "1.0.0",
      "parserContentId10": "corelight_corelight_profiling-Parser"
    },
    "parserObject11": {
      "_parserName11": "[concat(parameters('workspace'),'/','corelight_datared')]",
      "_parserId11": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_datared')]",
      "parserTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_datared-Parser')))]",
      "parserVersion11": "1.0.0",
      "parserContentId11": "corelight_datared-Parser"
    },
    "parserObject12": {
      "_parserName12": "[concat(parameters('workspace'),'/','corelight_dce_rpc')]",
      "_parserId12": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dce_rpc')]",
      "parserTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_dce_rpc-Parser')))]",
      "parserVersion12": "1.0.0",
      "parserContentId12": "corelight_dce_rpc-Parser"
    },
    "parserObject13": {
      "_parserName13": "[concat(parameters('workspace'),'/','corelight_dga')]",
      "_parserId13": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dga')]",
      "parserTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_dga-Parser')))]",
      "parserVersion13": "1.0.0",
      "parserContentId13": "corelight_dga-Parser"
    },
    "parserObject14": {
      "_parserName14": "[concat(parameters('workspace'),'/','corelight_dhcp')]",
      "_parserId14": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dhcp')]",
      "parserTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_dhcp-Parser')))]",
      "parserVersion14": "1.0.0",
      "parserContentId14": "corelight_dhcp-Parser"
    },
    "parserObject15": {
      "_parserName15": "[concat(parameters('workspace'),'/','corelight_dnp3')]",
      "_parserId15": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dnp3')]",
      "parserTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_dnp3-Parser')))]",
      "parserVersion15": "1.0.0",
      "parserContentId15": "corelight_dnp3-Parser"
    },
    "parserObject16": {
      "_parserName16": "[concat(parameters('workspace'),'/','corelight_dns')]",
      "_parserId16": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dns')]",
      "parserTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_dns-Parser')))]",
      "parserVersion16": "1.1.0",
      "parserContentId16": "corelight_dns-Parser"
    },
    "parserObject17": {
      "_parserName17": "[concat(parameters('workspace'),'/','corelight_dns_red')]",
      "_parserId17": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dns_red')]",
      "parserTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_dns_red-Parser')))]",
      "parserVersion17": "1.0.0",
      "parserContentId17": "corelight_dns_red-Parser"
    },
    "parserObject18": {
      "_parserName18": "[concat(parameters('workspace'),'/','corelight_dpd')]",
      "_parserId18": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dpd')]",
      "parserTemplateSpecName18": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_dpd-Parser')))]",
      "parserVersion18": "1.0.0",
      "parserContentId18": "corelight_dpd-Parser"
    },
    "parserObject19": {
      "_parserName19": "[concat(parameters('workspace'),'/','corelight_encrypted_dns')]",
      "_parserId19": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_encrypted_dns')]",
      "parserTemplateSpecName19": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_encrypted_dns-Parser')))]",
      "parserVersion19": "1.0.0",
      "parserContentId19": "corelight_encrypted_dns-Parser"
    },
    "parserObject20": {
      "_parserName20": "[concat(parameters('workspace'),'/','corelight_enip')]",
      "_parserId20": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_enip')]",
      "parserTemplateSpecName20": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_enip-Parser')))]",
      "parserVersion20": "1.0.0",
      "parserContentId20": "corelight_enip-Parser"
    },
    "parserObject21": {
      "_parserName21": "[concat(parameters('workspace'),'/','corelight_enip_debug')]",
      "_parserId21": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_enip_debug')]",
      "parserTemplateSpecName21": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_enip_debug-Parser')))]",
      "parserVersion21": "1.0.0",
      "parserContentId21": "corelight_enip_debug-Parser"
    },
    "parserObject22": {
      "_parserName22": "[concat(parameters('workspace'),'/','corelight_enip_list_identity')]",
      "_parserId22": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_enip_list_identity')]",
      "parserTemplateSpecName22": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_enip_list_identity-Parser')))]",
      "parserVersion22": "1.0.0",
      "parserContentId22": "corelight_enip_list_identity-Parser"
    },
    "parserObject23": {
      "_parserName23": "[concat(parameters('workspace'),'/','corelight_etc_viz')]",
      "_parserId23": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_etc_viz')]",
      "parserTemplateSpecName23": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_etc_viz-Parser')))]",
      "parserVersion23": "1.1.0",
      "parserContentId23": "corelight_etc_viz-Parser"
    },
    "parserObject24": {
      "_parserName24": "[concat(parameters('workspace'),'/','corelight_files')]",
      "_parserId24": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_files')]",
      "parserTemplateSpecName24": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_files-Parser')))]",
      "parserVersion24": "1.1.0",
      "parserContentId24": "corelight_files-Parser"
    },
    "parserObject25": {
      "_parserName25": "[concat(parameters('workspace'),'/','corelight_files_red')]",
      "_parserId25": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_files_red')]",
      "parserTemplateSpecName25": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_files_red-Parser')))]",
      "parserVersion25": "1.0.0",
      "parserContentId25": "corelight_files_red-Parser"
    },
    "parserObject26": {
      "_parserName26": "[concat(parameters('workspace'),'/','corelight_ftp')]",
      "_parserId26": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ftp')]",
      "parserTemplateSpecName26": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_ftp-Parser')))]",
      "parserVersion26": "1.1.0",
      "parserContentId26": "corelight_ftp-Parser"
    },
    "parserObject27": {
      "_parserName27": "[concat(parameters('workspace'),'/','corelight_generic_dns_tunnels')]",
      "_parserId27": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_generic_dns_tunnels')]",
      "parserTemplateSpecName27": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_generic_dns_tunnels-Parser')))]",
      "parserVersion27": "1.0.0",
      "parserContentId27": "corelight_generic_dns_tunnels-Parser"
    },
    "parserObject28": {
      "_parserName28": "[concat(parameters('workspace'),'/','corelight_generic_icmp_tunnels')]",
      "_parserId28": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_generic_icmp_tunnels')]",
      "parserTemplateSpecName28": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_generic_icmp_tunnels-Parser')))]",
      "parserVersion28": "1.0.0",
      "parserContentId28": "corelight_generic_icmp_tunnels-Parser"
    },
    "parserObject29": {
      "_parserName29": "[concat(parameters('workspace'),'/','corelight_http')]",
      "_parserId29": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_http')]",
      "parserTemplateSpecName29": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_http-Parser')))]",
      "parserVersion29": "1.1.0",
      "parserContentId29": "corelight_http-Parser"
    },
    "parserObject30": {
      "_parserName30": "[concat(parameters('workspace'),'/','corelight_http2')]",
      "_parserId30": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_http2')]",
      "parserTemplateSpecName30": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_http2-Parser')))]",
      "parserVersion30": "1.0.0",
      "parserContentId30": "corelight_http2-Parser"
    },
    "parserObject31": {
      "_parserName31": "[concat(parameters('workspace'),'/','corelight_http_red')]",
      "_parserId31": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_http_red')]",
      "parserTemplateSpecName31": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_http_red-Parser')))]",
      "parserVersion31": "1.0.0",
      "parserContentId31": "corelight_http_red-Parser"
    },
    "parserObject32": {
      "_parserName32": "[concat(parameters('workspace'),'/','corelight_icmp_specific_tunnels')]",
      "_parserId32": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_icmp_specific_tunnels')]",
      "parserTemplateSpecName32": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_icmp_specific_tunnels-Parser')))]",
      "parserVersion32": "1.0.0",
      "parserContentId32": "corelight_icmp_specific_tunnels-Parser"
    },
    "parserObject33": {
      "_parserName33": "[concat(parameters('workspace'),'/','corelight_intel')]",
      "_parserId33": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_intel')]",
      "parserTemplateSpecName33": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_intel-Parser')))]",
      "parserVersion33": "1.0.0",
      "parserContentId33": "corelight_intel-Parser"
    },
    "parserObject34": {
      "_parserName34": "[concat(parameters('workspace'),'/','corelight_ipsec')]",
      "_parserId34": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ipsec')]",
      "parserTemplateSpecName34": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_ipsec-Parser')))]",
      "parserVersion34": "1.0.0",
      "parserContentId34": "corelight_ipsec-Parser"
    },
    "parserObject35": {
      "_parserName35": "[concat(parameters('workspace'),'/','corelight_irc')]",
      "_parserId35": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_irc')]",
      "parserTemplateSpecName35": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_irc-Parser')))]",
      "parserVersion35": "1.0.0",
      "parserContentId35": "corelight_irc-Parser"
    },
    "parserObject36": {
      "_parserName36": "[concat(parameters('workspace'),'/','corelight_iso_cotp')]",
      "_parserId36": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_iso_cotp')]",
      "parserTemplateSpecName36": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_iso_cotp-Parser')))]",
      "parserVersion36": "1.0.0",
      "parserContentId36": "corelight_iso_cotp-Parser"
    },
    "parserObject37": {
      "_parserName37": "[concat(parameters('workspace'),'/','corelight_kerberos')]",
      "_parserId37": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_kerberos')]",
      "parserTemplateSpecName37": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_kerberos-Parser')))]",
      "parserVersion37": "1.0.0",
      "parserContentId37": "corelight_kerberos-Parser"
    },
    "parserObject38": {
      "_parserName38": "[concat(parameters('workspace'),'/','corelight_known_certs')]",
      "_parserId38": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_certs')]",
      "parserTemplateSpecName38": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_known_certs-Parser')))]",
      "parserVersion38": "1.0.0",
      "parserContentId38": "corelight_known_certs-Parser"
    },
    "parserObject39": {
      "_parserName39": "[concat(parameters('workspace'),'/','corelight_known_devices')]",
      "_parserId39": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_devices')]",
      "parserTemplateSpecName39": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_known_devices-Parser')))]",
      "parserVersion39": "1.0.0",
      "parserContentId39": "corelight_known_devices-Parser"
    },
    "parserObject40": {
      "_parserName40": "[concat(parameters('workspace'),'/','corelight_known_domains')]",
      "_parserId40": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_domains')]",
      "parserTemplateSpecName40": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_known_domains-Parser')))]",
      "parserVersion40": "1.0.0",
      "parserContentId40": "corelight_known_domains-Parser"
    },
    "parserObject41": {
      "_parserName41": "[concat(parameters('workspace'),'/','corelight_known_hosts')]",
      "_parserId41": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_hosts')]",
      "parserTemplateSpecName41": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_known_hosts-Parser')))]",
      "parserVersion41": "1.0.0",
      "parserContentId41": "corelight_known_hosts-Parser"
    },
    "parserObject42": {
      "_parserName42": "[concat(parameters('workspace'),'/','corelight_known_names')]",
      "_parserId42": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_names')]",
      "parserTemplateSpecName42": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_known_names-Parser')))]",
      "parserVersion42": "1.0.0",
      "parserContentId42": "corelight_known_names-Parser"
    },
    "parserObject43": {
      "_parserName43": "[concat(parameters('workspace'),'/','corelight_known_remotes')]",
      "_parserId43": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_remotes')]",
      "parserTemplateSpecName43": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_known_remotes-Parser')))]",
      "parserVersion43": "1.0.0",
      "parserContentId43": "corelight_known_remotes-Parser"
    },
    "parserObject44": {
      "_parserName44": "[concat(parameters('workspace'),'/','corelight_known_services')]",
      "_parserId44": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_services')]",
      "parserTemplateSpecName44": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_known_services-Parser')))]",
      "parserVersion44": "1.0.0",
      "parserContentId44": "corelight_known_services-Parser"
    },
    "parserObject45": {
      "_parserName45": "[concat(parameters('workspace'),'/','corelight_known_users')]",
      "_parserId45": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_users')]",
      "parserTemplateSpecName45": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_known_users-Parser')))]",
      "parserVersion45": "1.0.0",
      "parserContentId45": "corelight_known_users-Parser"
    },
    "parserObject46": {
      "_parserName46": "[concat(parameters('workspace'),'/','corelight_local_subnets')]",
      "_parserId46": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_local_subnets')]",
      "parserTemplateSpecName46": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_local_subnets-Parser')))]",
      "parserVersion46": "1.0.0",
      "parserContentId46": "corelight_local_subnets-Parser"
    },
    "parserObject47": {
      "_parserName47": "[concat(parameters('workspace'),'/','corelight_local_subnets_dj')]",
      "_parserId47": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_local_subnets_dj')]",
      "parserTemplateSpecName47": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_local_subnets_dj-Parser')))]",
      "parserVersion47": "1.0.0",
      "parserContentId47": "corelight_local_subnets_dj-Parser"
    },
    "parserObject48": {
      "_parserName48": "[concat(parameters('workspace'),'/','corelight_local_subnets_graphs')]",
      "_parserId48": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_local_subnets_graphs')]",
      "parserTemplateSpecName48": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_local_subnets_graphs-Parser')))]",
      "parserVersion48": "1.0.0",
      "parserContentId48": "corelight_local_subnets_graphs-Parser"
    },
    "parserObject49": {
      "_parserName49": "[concat(parameters('workspace'),'/','corelight_log4shell')]",
      "_parserId49": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_log4shell')]",
      "parserTemplateSpecName49": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_log4shell-Parser')))]",
      "parserVersion49": "1.0.0",
      "parserContentId49": "corelight_log4shell-Parser"
    },
    "parserObject50": {
      "_parserName50": "[concat(parameters('workspace'),'/','corelight_modbus')]",
      "_parserId50": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_modbus')]",
      "parserTemplateSpecName50": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_modbus-Parser')))]",
      "parserVersion50": "1.0.0",
      "parserContentId50": "corelight_modbus-Parser"
    },
    "parserObject51": {
      "_parserName51": "[concat(parameters('workspace'),'/','corelight_mqtt_connect')]",
      "_parserId51": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mqtt_connect')]",
      "parserTemplateSpecName51": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_mqtt_connect-Parser')))]",
      "parserVersion51": "1.0.0",
      "parserContentId51": "corelight_mqtt_connect-Parser"
    },
    "parserObject52": {
      "_parserName52": "[concat(parameters('workspace'),'/','corelight_mqtt_publish')]",
      "_parserId52": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mqtt_publish')]",
      "parserTemplateSpecName52": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_mqtt_publish-Parser')))]",
      "parserVersion52": "1.0.0",
      "parserContentId52": "corelight_mqtt_publish-Parser"
    },
    "parserObject53": {
      "_parserName53": "[concat(parameters('workspace'),'/','corelight_mqtt_subscribe')]",
      "_parserId53": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mqtt_subscribe')]",
      "parserTemplateSpecName53": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_mqtt_subscribe-Parser')))]",
      "parserVersion53": "1.0.0",
      "parserContentId53": "corelight_mqtt_subscribe-Parser"
    },
    "parserObject54": {
      "_parserName54": "[concat(parameters('workspace'),'/','corelight_mysql')]",
      "_parserId54": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mysql')]",
      "parserTemplateSpecName54": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_mysql-Parser')))]",
      "parserVersion54": "1.0.0",
      "parserContentId54": "corelight_mysql-Parser"
    },
    "parserObject55": {
      "_parserName55": "[concat(parameters('workspace'),'/','corelight_notice')]",
      "_parserId55": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_notice')]",
      "parserTemplateSpecName55": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_notice-Parser')))]",
      "parserVersion55": "1.0.0",
      "parserContentId55": "corelight_notice-Parser"
    },
    "parserObject56": {
      "_parserName56": "[concat(parameters('workspace'),'/','corelight_ntlm')]",
      "_parserId56": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ntlm')]",
      "parserTemplateSpecName56": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_ntlm-Parser')))]",
      "parserVersion56": "1.0.0",
      "parserContentId56": "corelight_ntlm-Parser"
    },
    "parserObject57": {
      "_parserName57": "[concat(parameters('workspace'),'/','corelight_ntp')]",
      "_parserId57": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ntp')]",
      "parserTemplateSpecName57": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_ntp-Parser')))]",
      "parserVersion57": "1.0.0",
      "parserContentId57": "corelight_ntp-Parser"
    },
    "parserObject58": {
      "_parserName58": "[concat(parameters('workspace'),'/','corelight_ocsp')]",
      "_parserId58": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ocsp')]",
      "parserTemplateSpecName58": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_ocsp-Parser')))]",
      "parserVersion58": "1.0.0",
      "parserContentId58": "corelight_ocsp-Parser"
    },
    "parserObject59": {
      "_parserName59": "[concat(parameters('workspace'),'/','corelight_openflow')]",
      "_parserId59": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_openflow')]",
      "parserTemplateSpecName59": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_openflow-Parser')))]",
      "parserVersion59": "1.0.0",
      "parserContentId59": "corelight_openflow-Parser"
    },
    "parserObject60": {
      "_parserName60": "[concat(parameters('workspace'),'/','corelight_packet_filter')]",
      "_parserId60": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_packet_filter')]",
      "parserTemplateSpecName60": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_packet_filter-Parser')))]",
      "parserVersion60": "1.0.0",
      "parserContentId60": "corelight_packet_filter-Parser"
    },
    "parserObject61": {
      "_parserName61": "[concat(parameters('workspace'),'/','corelight_pe')]",
      "_parserId61": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_pe')]",
      "parserTemplateSpecName61": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_pe-Parser')))]",
      "parserVersion61": "1.0.0",
      "parserContentId61": "corelight_pe-Parser"
    },
    "parserObject62": {
      "_parserName62": "[concat(parameters('workspace'),'/','corelight_profinet')]",
      "_parserId62": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_profinet')]",
      "parserTemplateSpecName62": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_profinet-Parser')))]",
      "parserVersion62": "1.0.0",
      "parserContentId62": "corelight_profinet-Parser"
    },
    "parserObject63": {
      "_parserName63": "[concat(parameters('workspace'),'/','corelight_profinet_dce_rpc')]",
      "_parserId63": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_profinet_dce_rpc')]",
      "parserTemplateSpecName63": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_profinet_dce_rpc-Parser')))]",
      "parserVersion63": "1.0.0",
      "parserContentId63": "corelight_profinet_dce_rpc-Parser"
    },
    "parserObject64": {
      "_parserName64": "[concat(parameters('workspace'),'/','corelight_profinet_debug')]",
      "_parserId64": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_profinet_debug')]",
      "parserTemplateSpecName64": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_profinet_debug-Parser')))]",
      "parserVersion64": "1.0.0",
      "parserContentId64": "corelight_profinet_debug-Parser"
    },
    "parserObject65": {
      "_parserName65": "[concat(parameters('workspace'),'/','corelight_radius')]",
      "_parserId65": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_radius')]",
      "parserTemplateSpecName65": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_radius-Parser')))]",
      "parserVersion65": "1.0.0",
      "parserContentId65": "corelight_radius-Parser"
    },
    "parserObject66": {
      "_parserName66": "[concat(parameters('workspace'),'/','corelight_rdp')]",
      "_parserId66": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_rdp')]",
      "parserTemplateSpecName66": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_rdp-Parser')))]",
      "parserVersion66": "1.1.0",
      "parserContentId66": "corelight_rdp-Parser"
    },
    "parserObject67": {
      "_parserName67": "[concat(parameters('workspace'),'/','corelight_reporter')]",
      "_parserId67": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_reporter')]",
      "parserTemplateSpecName67": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_reporter-Parser')))]",
      "parserVersion67": "1.0.0",
      "parserContentId67": "corelight_reporter-Parser"
    },
    "parserObject68": {
      "_parserName68": "[concat(parameters('workspace'),'/','corelight_rfb')]",
      "_parserId68": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_rfb')]",
      "parserTemplateSpecName68": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_rfb-Parser')))]",
      "parserVersion68": "1.0.0",
      "parserContentId68": "corelight_rfb-Parser"
    },
    "parserObject69": {
      "_parserName69": "[concat(parameters('workspace'),'/','corelight_s7comm')]",
      "_parserId69": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_s7comm')]",
      "parserTemplateSpecName69": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_s7comm-Parser')))]",
      "parserVersion69": "1.0.0",
      "parserContentId69": "corelight_s7comm-Parser"
    },
    "parserObject70": {
      "_parserName70": "[concat(parameters('workspace'),'/','corelight_signatures')]",
      "_parserId70": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_signatures')]",
      "parserTemplateSpecName70": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_signatures-Parser')))]",
      "parserVersion70": "1.0.0",
      "parserContentId70": "corelight_signatures-Parser"
    },
    "parserObject71": {
      "_parserName71": "[concat(parameters('workspace'),'/','corelight_sip')]",
      "_parserId71": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_sip')]",
      "parserTemplateSpecName71": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_sip-Parser')))]",
      "parserVersion71": "1.0.0",
      "parserContentId71": "corelight_sip-Parser"
    },
    "parserObject72": {
      "_parserName72": "[concat(parameters('workspace'),'/','corelight_smartpcap')]",
      "_parserId72": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smartpcap')]",
      "parserTemplateSpecName72": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_smartpcap-Parser')))]",
      "parserVersion72": "1.0.0",
      "parserContentId72": "corelight_smartpcap-Parser"
    },
    "parserObject73": {
      "_parserName73": "[concat(parameters('workspace'),'/','corelight_smartpcap_stats')]",
      "_parserId73": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smartpcap_stats')]",
      "parserTemplateSpecName73": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_smartpcap_stats-Parser')))]",
      "parserVersion73": "1.0.0",
      "parserContentId73": "corelight_smartpcap_stats-Parser"
    },
    "parserObject74": {
      "_parserName74": "[concat(parameters('workspace'),'/','corelight_smb_files')]",
      "_parserId74": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smb_files')]",
      "parserTemplateSpecName74": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_smb_files-Parser')))]",
      "parserVersion74": "1.0.0",
      "parserContentId74": "corelight_smb_files-Parser"
    },
    "parserObject75": {
      "_parserName75": "[concat(parameters('workspace'),'/','corelight_smb_mapping')]",
      "_parserId75": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smb_mapping')]",
      "parserTemplateSpecName75": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_smb_mapping-Parser')))]",
      "parserVersion75": "1.0.0",
      "parserContentId75": "corelight_smb_mapping-Parser"
    },
    "parserObject76": {
      "_parserName76": "[concat(parameters('workspace'),'/','corelight_smtp')]",
      "_parserId76": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smtp')]",
      "parserTemplateSpecName76": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_smtp-Parser')))]",
      "parserVersion76": "1.0.0",
      "parserContentId76": "corelight_smtp-Parser"
    },
    "parserObject77": {
      "_parserName77": "[concat(parameters('workspace'),'/','corelight_smtp_links')]",
      "_parserId77": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smtp_links')]",
      "parserTemplateSpecName77": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_smtp_links-Parser')))]",
      "parserVersion77": "1.0.0",
      "parserContentId77": "corelight_smtp_links-Parser"
    },
    "parserObject78": {
      "_parserName78": "[concat(parameters('workspace'),'/','corelight_snmp')]",
      "_parserId78": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_snmp')]",
      "parserTemplateSpecName78": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_snmp-Parser')))]",
      "parserVersion78": "1.0.0",
      "parserContentId78": "corelight_snmp-Parser"
    },
    "parserObject79": {
      "_parserName79": "[concat(parameters('workspace'),'/','corelight_socks')]",
      "_parserId79": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_socks')]",
      "parserTemplateSpecName79": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_socks-Parser')))]",
      "parserVersion79": "1.0.0",
      "parserContentId79": "corelight_socks-Parser"
    },
    "parserObject80": {
      "_parserName80": "[concat(parameters('workspace'),'/','corelight_software')]",
      "_parserId80": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_software')]",
      "parserTemplateSpecName80": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_software-Parser')))]",
      "parserVersion80": "1.0.0",
      "parserContentId80": "corelight_software-Parser"
    },
    "parserObject81": {
      "_parserName81": "[concat(parameters('workspace'),'/','corelight_specific_dns_tunnels')]",
      "_parserId81": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_specific_dns_tunnels')]",
      "parserTemplateSpecName81": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_specific_dns_tunnels-Parser')))]",
      "parserVersion81": "1.0.0",
      "parserContentId81": "corelight_specific_dns_tunnels-Parser"
    },
    "parserObject82": {
      "_parserName82": "[concat(parameters('workspace'),'/','corelight_ssh')]",
      "_parserId82": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ssh')]",
      "parserTemplateSpecName82": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_ssh-Parser')))]",
      "parserVersion82": "1.1.0",
      "parserContentId82": "corelight_ssh-Parser"
    },
    "parserObject83": {
      "_parserName83": "[concat(parameters('workspace'),'/','corelight_ssl')]",
      "_parserId83": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ssl')]",
      "parserTemplateSpecName83": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_ssl-Parser')))]",
      "parserVersion83": "1.1.0",
      "parserContentId83": "corelight_ssl-Parser"
    },
    "parserObject84": {
      "_parserName84": "[concat(parameters('workspace'),'/','corelight_ssl_red')]",
      "_parserId84": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ssl_red')]",
      "parserTemplateSpecName84": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_ssl_red-Parser')))]",
      "parserVersion84": "1.0.0",
      "parserContentId84": "corelight_ssl_red-Parser"
    },
    "parserObject85": {
      "_parserName85": "[concat(parameters('workspace'),'/','corelight_stats')]",
      "_parserId85": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stats')]",
      "parserTemplateSpecName85": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_stats-Parser')))]",
      "parserVersion85": "1.0.0",
      "parserContentId85": "corelight_stats-Parser"
    },
    "parserObject86": {
      "_parserName86": "[concat(parameters('workspace'),'/','corelight_stepping')]",
      "_parserId86": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stepping')]",
      "parserTemplateSpecName86": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_stepping-Parser')))]",
      "parserVersion86": "1.0.0",
      "parserContentId86": "corelight_stepping-Parser"
    },
    "parserObject87": {
      "_parserName87": "[concat(parameters('workspace'),'/','corelight_stun')]",
      "_parserId87": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stun')]",
      "parserTemplateSpecName87": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_stun-Parser')))]",
      "parserVersion87": "1.0.0",
      "parserContentId87": "corelight_stun-Parser"
    },
    "parserObject88": {
      "_parserName88": "[concat(parameters('workspace'),'/','corelight_stun_nat')]",
      "_parserId88": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stun_nat')]",
      "parserTemplateSpecName88": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_stun_nat-Parser')))]",
      "parserVersion88": "1.0.0",
      "parserContentId88": "corelight_stun_nat-Parser"
    },
    "parserObject89": {
      "_parserName89": "[concat(parameters('workspace'),'/','corelight_suricata_corelight')]",
      "_parserId89": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_corelight')]",
      "parserTemplateSpecName89": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_suricata_corelight-Parser')))]",
      "parserVersion89": "1.0.0",
      "parserContentId89": "corelight_suricata_corelight-Parser"
    },
    "parserObject90": {
      "_parserName90": "[concat(parameters('workspace'),'/','corelight_suricata_eve')]",
      "_parserId90": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_eve')]",
      "parserTemplateSpecName90": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_suricata_eve-Parser')))]",
      "parserVersion90": "1.0.0",
      "parserContentId90": "corelight_suricata_eve-Parser"
    },
    "parserObject91": {
      "_parserName91": "[concat(parameters('workspace'),'/','corelight_suricata_stats')]",
      "_parserId91": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_stats')]",
      "parserTemplateSpecName91": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_suricata_stats-Parser')))]",
      "parserVersion91": "1.0.0",
      "parserContentId91": "corelight_suricata_stats-Parser"
    },
    "parserObject92": {
      "_parserName92": "[concat(parameters('workspace'),'/','corelight_suricata_zeek_stats')]",
      "_parserId92": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_zeek_stats')]",
      "parserTemplateSpecName92": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_suricata_zeek_stats-Parser')))]",
      "parserVersion92": "1.0.0",
      "parserContentId92": "corelight_suricata_zeek_stats-Parser"
    },
    "parserObject93": {
      "_parserName93": "[concat(parameters('workspace'),'/','corelight_syslog')]",
      "_parserId93": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_syslog')]",
      "parserTemplateSpecName93": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_syslog-Parser')))]",
      "parserVersion93": "1.0.0",
      "parserContentId93": "corelight_syslog-Parser"
    },
    "parserObject94": {
      "_parserName94": "[concat(parameters('workspace'),'/','corelight_tds')]",
      "_parserId94": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tds')]",
      "parserTemplateSpecName94": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_tds-Parser')))]",
      "parserVersion94": "1.0.0",
      "parserContentId94": "corelight_tds-Parser"
    },
    "parserObject95": {
      "_parserName95": "[concat(parameters('workspace'),'/','corelight_tds_rpc')]",
      "_parserId95": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tds_rpc')]",
      "parserTemplateSpecName95": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_tds_rpc-Parser')))]",
      "parserVersion95": "1.0.0",
      "parserContentId95": "corelight_tds_rpc-Parser"
    },
    "parserObject96": {
      "_parserName96": "[concat(parameters('workspace'),'/','corelight_tds_sql_batch')]",
      "_parserId96": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tds_sql_batch')]",
      "parserTemplateSpecName96": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_tds_sql_batch-Parser')))]",
      "parserVersion96": "1.0.0",
      "parserContentId96": "corelight_tds_sql_batch-Parser"
    },
    "parserObject97": {
      "_parserName97": "[concat(parameters('workspace'),'/','corelight_traceroute')]",
      "_parserId97": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_traceroute')]",
      "parserTemplateSpecName97": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_traceroute-Parser')))]",
      "parserVersion97": "1.0.0",
      "parserContentId97": "corelight_traceroute-Parser"
    },
    "parserObject98": {
      "_parserName98": "[concat(parameters('workspace'),'/','corelight_tunnel')]",
      "_parserId98": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tunnel')]",
      "parserTemplateSpecName98": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_tunnel-Parser')))]",
      "parserVersion98": "1.0.0",
      "parserContentId98": "corelight_tunnel-Parser"
    },
    "parserObject99": {
      "_parserName99": "[concat(parameters('workspace'),'/','corelight_unknown_smartpcap')]",
      "_parserId99": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_unknown_smartpcap')]",
      "parserTemplateSpecName99": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_unknown_smartpcap-Parser')))]",
      "parserVersion99": "1.0.0",
      "parserContentId99": "corelight_unknown_smartpcap-Parser"
    },
    "parserObject100": {
      "_parserName100": "[concat(parameters('workspace'),'/','corelight_util_stats')]",
      "_parserId100": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_util_stats')]",
      "parserTemplateSpecName100": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_util_stats-Parser')))]",
      "parserVersion100": "1.0.0",
      "parserContentId100": "corelight_util_stats-Parser"
    },
    "parserObject101": {
      "_parserName101": "[concat(parameters('workspace'),'/','corelight_vpn')]",
      "_parserId101": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_vpn')]",
      "parserTemplateSpecName101": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_vpn-Parser')))]",
      "parserVersion101": "1.1.0",
      "parserContentId101": "corelight_vpn-Parser"
    },
    "parserObject102": {
      "_parserName102": "[concat(parameters('workspace'),'/','corelight_weird')]",
      "_parserId102": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_weird')]",
      "parserTemplateSpecName102": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_weird-Parser')))]",
      "parserVersion102": "1.0.0",
      "parserContentId102": "corelight_weird-Parser"
    },
    "parserObject103": {
      "_parserName103": "[concat(parameters('workspace'),'/','corelight_weird_red')]",
      "_parserId103": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_weird_red')]",
      "parserTemplateSpecName103": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_weird_red-Parser')))]",
      "parserVersion103": "1.0.0",
      "parserContentId103": "corelight_weird_red-Parser"
    },
    "parserObject104": {
      "_parserName104": "[concat(parameters('workspace'),'/','corelight_weird_stats')]",
      "_parserId104": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_weird_stats')]",
      "parserTemplateSpecName104": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_weird_stats-Parser')))]",
      "parserVersion104": "1.0.0",
      "parserContentId104": "corelight_weird_stats-Parser"
    },
    "parserObject105": {
      "_parserName105": "[concat(parameters('workspace'),'/','corelight_wireguard')]",
      "_parserId105": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_wireguard')]",
      "parserTemplateSpecName105": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_wireguard-Parser')))]",
      "parserVersion105": "1.0.0",
      "parserContentId105": "corelight_wireguard-Parser"
    },
    "parserObject106": {
      "_parserName106": "[concat(parameters('workspace'),'/','corelight_x509')]",
      "_parserId106": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_x509')]",
      "parserTemplateSpecName106": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_x509-Parser')))]",
      "parserVersion106": "1.1.0",
      "parserContentId106": "corelight_x509-Parser"
    },
    "parserObject107": {
      "_parserName107": "[concat(parameters('workspace'),'/','corelight_x509_red')]",
      "_parserId107": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_x509_red')]",
      "parserTemplateSpecName107": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_x509_red-Parser')))]",
      "parserVersion107": "1.0.0",
      "parserContentId107": "corelight_x509_red-Parser"
    },
    "parserObject108": {
      "_parserName108": "[concat(parameters('workspace'),'/','corelight_zeek_doctor')]",
      "_parserId108": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_zeek_doctor')]",
      "parserTemplateSpecName108": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('corelight_zeek_doctor-Parser')))]",
      "parserVersion108": "1.0.0",
      "parserContentId108": "corelight_zeek_doctor-Parser"
    },
    "huntingQueryObject1": {
      "huntingQueryVersion1": "1.0.0",
      "_huntingQuerycontentId1": "e9441d57-39f4-41fb-aaad-d02e47783d1a",
      "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('e9441d57-39f4-41fb-aaad-d02e47783d1a')))]"
    },
    "huntingQueryObject2": {
      "huntingQueryVersion2": "1.0.0",
      "_huntingQuerycontentId2": "f37e076e-69f6-4fcf-81dc-ca2bc5929eb5",
      "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('f37e076e-69f6-4fcf-81dc-ca2bc5929eb5')))]"
    },
    "huntingQueryObject3": {
      "huntingQueryVersion3": "1.0.0",
      "_huntingQuerycontentId3": "c5f3974b-f411-4a06-a3f8-ee14fcadd0e1",
      "huntingQueryTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('c5f3974b-f411-4a06-a3f8-ee14fcadd0e1')))]"
    },
    "huntingQueryObject4": {
      "huntingQueryVersion4": "1.0.0",
      "_huntingQuerycontentId4": "3e42a796-9a4c-4ebf-a0e0-5282947986b5",
      "huntingQueryTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('3e42a796-9a4c-4ebf-a0e0-5282947986b5')))]"
    },
    "huntingQueryObject5": {
      "huntingQueryVersion5": "1.0.0",
      "_huntingQuerycontentId5": "0c3ad86f-6b92-4ff5-8d41-86ff7e01d518",
      "huntingQueryTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('0c3ad86f-6b92-4ff5-8d41-86ff7e01d518')))]"
    },
    "huntingQueryObject6": {
      "huntingQueryVersion6": "1.0.0",
      "_huntingQuerycontentId6": "887e648f-32d7-4803-8cd4-2ceef7995872",
      "huntingQueryTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('887e648f-32d7-4803-8cd4-2ceef7995872')))]"
    },
    "huntingQueryObject7": {
      "huntingQueryVersion7": "1.0.0",
      "_huntingQuerycontentId7": "69736969-6ae0-48cd-a05a-743f7372ee84",
      "huntingQueryTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('69736969-6ae0-48cd-a05a-743f7372ee84')))]"
    },
    "huntingQueryObject8": {
      "huntingQueryVersion8": "1.0.0",
      "_huntingQuerycontentId8": "a518ea0c-f87a-4a79-8f45-2b5b6f44bd7f",
      "huntingQueryTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('a518ea0c-f87a-4a79-8f45-2b5b6f44bd7f')))]"
    },
    "huntingQueryObject9": {
      "huntingQueryVersion9": "1.0.0",
      "_huntingQuerycontentId9": "9aab6aac-6dad-4749-b8cf-46840b6d978f",
      "huntingQueryTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('9aab6aac-6dad-4749-b8cf-46840b6d978f')))]"
    },
    "huntingQueryObject10": {
      "huntingQueryVersion10": "1.0.0",
      "_huntingQuerycontentId10": "1ea3a384-77a4-4b0d-8e42-74d26b38ab5b",
      "huntingQueryTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('1ea3a384-77a4-4b0d-8e42-74d26b38ab5b')))]"
    },
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Corelight Workbook with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Sets the time name for analysis"
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\">**NOTE:** This workbook depends on a parser based on a Kusto Function to work as expected [**Corelight**](https://aka.ms/sentinel-Corelight-parser) which is deployed with the Microsoft Sentinel Solution.\"},\"name\":\"text - 23\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"c64d5d3d-90c6-484a-ab88-c70652b75b6e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"GlobalTimeRestriction\",\"label\":\"Global Time Restriction\",\"type\":4,\"description\":\"Select Time Range\",\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":86400000}},{\"id\":\"a076210e-a47c-43c2-97e1-1f663fedbd01\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Sensor\",\"label\":\"Corelight Sensor\",\"type\":2,\"description\":\"Select Corelight Sensor\",\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"corelight_conn\\n| distinct sensor_name\\n| sort by sensor_name\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"tabStyle\":\"bigger\",\"links\":[{\"id\":\"2e4f43b5-1def-42b3-bee5-d84912ae6115\",\"cellValue\":\"dashboard\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Data Explorer\",\"subTarget\":\"DataExplorer\",\"preText\":\"Data Explorer\",\"style\":\"link\"},{\"id\":\"0b72c376-8bd9-4896-a3b3-8994f028e1b4\",\"cellValue\":\"dashboard\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Security Workflows\",\"subTarget\":\"SecurityWorkflows\",\"style\":\"link\"}]},\"name\":\"links - 14\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"d723eef6-b3f0-40be-9a56-125421b32619\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Corelight Main Dashboard\",\"subTarget\":\"corelight_main_dashboard\",\"style\":\"link\"},{\"id\":\"5736d4f4-bd4c-4a49-bea7-00da2bbc7fd9\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Corelight Connections\",\"subTarget\":\"corelight_connections\",\"style\":\"link\"},{\"id\":\"5336f601-4da3-4da0-8196-332a97636047\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Corelight DNS\",\"subTarget\":\"corelight_dns\",\"style\":\"link\"},{\"id\":\"b0e6ac55-179e-4fb5-80ff-ec84edb35324\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Corelight HTTP\",\"subTarget\":\"corelight_http\",\"style\":\"link\"}]},\"name\":\"links - 24\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Corelight Main Dashboard\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union Corelight_v2_*_CL\\n| where ('*' in ({Sensor}) or _system_name_s in ({Sensor}))\\n| where TimeGenerated {GlobalTimeRestriction}\\n|make-series Trend = count() on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step {GlobalTimeRestriction:grain} by _path_s;\",\"size\":0,\"showAnalytics\":true,\"title\":\"Sensor Events Timechart\",\"noDataMessage\":\"No data found.\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_main_dashboard\"},\"name\":\"Sensor Events Timechart\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union Corelight_v2_*_CL\\n| where ('*' in ({Sensor}) or _system_name_s in ({Sensor}))\\n| where TimeGenerated {GlobalTimeRestriction}\\n| summarize Count=count() by _path_s | sort by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Sensor Events Count\",\"noDataMessage\":\"No data found.\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_main_dashboard\"},\"name\":\"Sensor Events Count\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_main_dashboard\"},\"name\":\"corelight_main_dashboard_group\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Events\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let QueryResults = ((corelight_notice\\r\\n| where ('*' in ({Sensor}) or _system_name in ({Sensor}))\\r\\n//| where note != \\\"LongConnection::found\\\" and note != \\\"SSL::Invalid_Server_Cert\\\"\\r\\n//| project-rename Alert = note \\r\\n| union corelight_suricata_corelight)\\r\\n| where ('*' in ({Sensor}) or _system_name in ({Sensor}))\\r\\n//| where alert_category != \\\"Not Suspicious Traffic\\\" and alert_category != \\\"Attempted Information Leak\\\" and alert_category != \\\"Potentially Bad Traffic\\\"\\r\\n//| where _path_s == \\\"notice\\\"\\r\\n//| project-rename Alert = alert_category\\r\\n| extend\\r\\n    Category = coalesce(note, alert_category),\\r\\n    Alert = coalesce(msg, alert_signature),\\r\\n    Severity=coalesce(severity_level, alert_severity, 7.),\\r\\n    Type = _path\\r\\n| extend PartitionKey = case(_path == \\\"suricata_corelight\\\", Alert, Category)\\r\\n| where (isnotempty(uid) or isnotempty(community_id))\\r\\n| partition hint.strategy=native by PartitionKey\\r\\n    (\\r\\n    top 10 by TimeGenerated\\r\\n    )\\r\\n| order by Severity asc, TimeGenerated\\r\\n// hack to hide empty columns\\r\\n| evaluate narrow()\\r\\n| where isnotempty(Value) and Value != \\\"##(null)\\\" or Column == \\\"_system_name_s\\\"\\r\\n| evaluate pivot(Column, any(Value), Row)\\r\\n);\\r\\nlet QueryCount=QueryResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable(TimeGenerated: string , Type: string , Category: string, Alert: string, Severity: string, uid: string, id_orig_h: string, id_resp_h: string, id_resp_p: string )[];\\r\\nunion isfuzzy=true\\r\\n(QueryResults| where toscalar(QueryCount) != 0),\\r\\n(NoResults| where toscalar(QueryCount) == 0)\\r\\n| project-reorder\\r\\n    TimeGenerated,\\r\\n    Type,\\r\\n    Category,\\r\\n    Alert,\\r\\n    Severity,\\r\\n    uid,\\r\\n    id_orig_h,\\r\\n    id_resp_h,\\r\\n    id_resp_p\",\"size\":0,\"showAnalytics\":true,\"title\":\"Recent Events Summary (10 most recent per message type)\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportFieldName\":\"uid\",\"exportParameterName\":\"Selected_uid\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"events_summary_recent\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union Corelight_v2_*_CL\\r\\n| where ('*' in ({Sensor}) or _system_name_s in ({Sensor}))\\r\\n| where (isnotempty(\\\"{Selected_uid}\\\") and (uid_s == \\\"{Selected_uid}\\\" or conn_uids_s contains_cs \\\"{Selected_uid}\\\"))\\r\\n| top 300 by TimeGenerated\\r\\n// hack to hide empty columns\\r\\n| evaluate narrow()\\r\\n| where isnotempty(Value) and Value != \\\"##(null)\\\" or Column == \\\"_system_name_s\\\"\\r\\n| evaluate pivot(Column, any(Value), Row)\\r\\n| project-reorder TimeGenerated, _path_s, id_orig_h_s, id_resp_h_s, id_resp_p_d, _system_name_s\\r\\n| project-away Row\",\"size\":0,\"showAnalytics\":true,\"title\":\"Related paths (select in Events Summary)\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportFieldName\":\"_path_s\",\"exportParameterName\":\"Selected_path\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"labelSettings\":[{\"columnId\":\"_path_s\",\"label\":\"Path\"}]}},\"name\":\"events_related_entries\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_suricata_corelight\\r\\n| where ('*' in ({Sensor}) or _system_name in ({Sensor}))\\r\\n| summarize alert_count=count() by source_ip=id_orig_h, alert_signature, severity=alert_severity\\r\\n| top 10 by alert_count\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Suricata Top Alerts by Source\",\"noDataMessage\":\"No data found.\",\"timeContext\":{\"durationMs\":86400000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"events_suricata_most_hits_src\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_main_dashboard\"},\"name\":\"tme_events\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Corelight Connections\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where local_resp == true and (proto == \\\"tcp\\\" or (proto == \\\"udp\\\" and orig_bytes > 0 and resp_bytes > 0))\\n| where conn_state != \\\"S0\\\"\\n| summarize count() by id_resp_h, id_resp_p, service\\n| summarize Count=count() by service\\n| top 20 by Count\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Local Hosts Seen Offering Services\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"name\":\"local_host_offering_services\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where proto==\\\"tcp\\\" or (proto==\\\"udp\\\" and orig_pkts>0 and resp_pkts>0)\\n| where conn_state != \\\"S0\\\"\\n| where local_resp==true\\n| summarize Count=count() by portproto=strcat(tostring(toint(id_resp_p)), \\\"/\\\", proto)\\n| top 15 by Count\",\"size\":3,\"showAnalytics\":true,\"title\":\"Top Responder Ports\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"name\":\"top_responder_ports\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where local_orig == false and local_resp == true\\n| where proto==\\\"tcp\\\" or (proto==\\\"udp\\\" and orig_pkts>0 and resp_pkts>0)\\n| where conn_state!=\\\"S0\\\"\\n| summarize number_of_conns=count(), orig_bytes_sum=sum(orig_bytes) by id_orig_h, service\\n| extend orig_data = format_bytes(orig_bytes_sum, 2)\\n| order by orig_bytes_sum desc\\n| top 20 by orig_bytes_sum desc\\n| project-away orig_bytes_sum\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Inbound Data Flows by Originator\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33\",\"name\":\"top_inbound_by_orig\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where proto == \\\"tcp\\\" or (proto == \\\"udp\\\" and orig_pkts>0 and resp_pkts>0)\\n| where local_orig==true and local_resp==false\\n| where conn_state != \\\"S0\\\"\\n| summarize number_of_conns=count(), orig_bytes_sum=sum(orig_bytes) by id_orig_h, service\\n| extend orig_data = format_bytes(orig_bytes_sum, 2)\\n| order by orig_bytes_sum desc\\n| project-away orig_bytes_sum\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Outbound Data Flows by Originator\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33\",\"name\":\"top_outbound_bytes\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where conn_state==\\\"S0\\\"\\n| summarize Count=count() by id_orig_h, id_resp_p, service\\n| order by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Hosts Generating S0 (possible scan) Traffic\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33\",\"name\":\"possible_scan_connections\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where proto==\\\"tcp\\\" or (proto==\\\"udp\\\" and orig_pkts>0 and resp_pkts>0)\\n| where conn_state != \\\"S0\\\"\\n| summarize number_of_conns=count(), orig_bytes_sum=sum(orig_bytes), resp_bytes_sum=sum(resp_bytes) by id_orig_h, id_resp_h, id_resp_p, proto\\n| extend total_bytes_sum = orig_bytes_sum + resp_bytes_sum\\n| extend total_data = format_bytes(total_bytes_sum, 2)\\n| top 20 by total_bytes_sum desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Largest transfers between host/port pairs\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"largest_transfers_by_host_port\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where local_resp == true and conn_state == \\\"S0\\\"\\n| summarize Count=count() by id_resp_h, id_resp_p, service\\n| top 30 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Possible Down Services\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"possible_down_services\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| summarize Count=count() by history\\n| top 20 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Monitor Health Asymmetry (All UPPER or lower is bad)\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"monitor_health_asymmetry\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where local_orig == false and local_resp == false\\n| summarize Count=count() by id_orig_h, id_resp_h, id_resp_p, service\\n| top 20 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Remote to Remote Connections\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"remote_to_remote_connections\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_notice\\n| where ('*' in ({Sensor}) or _system_name in ({Sensor}))\\n| where note == \\\"LongConnection::found\\\"\\n| summarize Count=count(1), arg_max(TimeGenerated, id_orig_h, id_resp_h, id_resp_p, sub, msg) by uid\\n| extend seconds=sub\\n| top 20 by seconds desc\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Longest Lived Connections, (May have already closed)\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"longest_lived_connections\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where TimeGenerated  {GlobalTimeRestriction}\\n//| where EventType startswith \\\"conn\\\"\\n| where isnotempty(service)\\n| summarize count() by tostring(service) | take 10\",\"size\":3,\"title\":\"Top Services\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true,\"ySettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"customWidth\":\"50\",\"name\":\"Top Services\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n| where TimeGenerated  {GlobalTimeRestriction}\\n//| where EventType startswith \\\"conn\\\"\\n| where isnotempty(id_resp_p)\\n| extend dstprt = tostring(toint(id_resp_p))\\n| summarize Count=count() by dstprt | sort by Count desc |take 10\",\"size\":3,\"title\":\"Top Responder Ports\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true,\"ySettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"customWidth\":\"50\",\"name\":\"Top Responder Ports\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n//| where TimeGenerated  {GlobalTimeRestriction}\\n//| where EventType startswith \\\"conn\\\"\\n//| extend NetworkDirection = case(LocalOrig == true,\\\"outbound\\\", LocalOrig == false, \\\"inbound\\\",'')\\n| where local_orig == true and local_resp == false\\n//| where isnotempty(SrcIpAddr) and isnotempty(DstIpAddr) and isnotempty(SrcIpBytes) and isnotempty(DstIpBytes)\\n| extend bytes = toint(orig_bytes) + toint(resp_bytes)\\n| summarize Bytes=sum(bytes) by id_orig_h, id_resp_h, proto | sort by Bytes desc | take 15\",\"size\":0,\"title\":\"Top Outbound Data Flows by Originator Bytes\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"Top Outbound Data Flows by Originator Bytes\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n//| where TimeGenerated  {GlobalTimeRestriction}\\n//| where EventType startswith \\\"conn\\\"\\n//| extend NetworkDirection = case(LocalOrig == true,\\\"outbound\\\", LocalOrig == false, \\\"inbound\\\",'')\\n| where local_orig == false and local_resp == true\\n//| where isnotempty(SrcIpAddr) and isnotempty(DstIpAddr) and isnotempty(SrcIpBytes) and isnotempty(DstIpBytes)\\n| extend bytes = toint(orig_bytes) + toint(resp_bytes)\\n| summarize Bytes=sum(bytes) by id_orig_h, id_resp_h, proto | sort by Bytes desc | take 15\",\"size\":0,\"title\":\"Top Inbound Data Flows by Originator Bytes\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"Top Inbound Data Flows by Originator Bytes - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n//| where EventType startswith \\\"conn\\\"\\n| where TimeGenerated  {GlobalTimeRestriction} \\n| summarize Count=count() by id_orig_h | sort by Count\",\"size\":3,\"title\":\"Top Originators (sources) by # of connections\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"name\":\"Top Originators (sources) by # of connections\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n//| where EventType startswith \\\"conn\\\"\\n| where TimeGenerated  {GlobalTimeRestriction} \\n| summarize Count=count() by id_resp_h | sort by Count\",\"size\":3,\"title\":\"Top Responders (destinations) by # of connections\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"50\",\"name\":\"Top Responders (destinations) by # of connections - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\n//| where EventType startswith \\\"conn\\\"\\n| where TimeGenerated  {GlobalTimeRestriction}\\n| where isnotempty(id_orig_h) and isnotempty(id_resp_h) and isnotempty(service) and isnotempty(id_orig_p) and isnotempty(id_resp_p)\\n| summarize Duration=avg(toint(duration)), make_list(id_orig_h), make_list(id_resp_h), make_list(proto) by uid | sort by Duration desc | take 50\",\"size\":0,\"title\":\"Open/Active Long Lived Connections (requires Long Connections Pkg)\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"Open/Active Long Lived Connections (requires Long Connections Pkg)\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"deprecated\"},\"name\":\"deprecated_conn\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_connections\"},\"name\":\"corelight_connections_group\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Corelight DNS\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n//| where is_broadcast_b!=true\\n| summarize Count=count() by qtype_name\\n| top 10 by Count\",\"size\":3,\"showAnalytics\":true,\"title\":\"Top Query Types\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"dns_top_query_types\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where (rcode_name==\\\"NXDOMAIN\\\" or rcode==3) and qtype_name != \\\"PTR\\\"\\n| summarize Count=count() by qtype_name\\n| top 20 by Count\",\"size\":3,\"showAnalytics\":true,\"title\":\"No response DNS query by type\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"dns_nx_by_type\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where id_resp_p == 53 and (rcode_name == \\\"NXDOMAIN\\\" or rcode == 3) and qtype_name != \\\"PTR\\\"\\n| summarize Count=count() by query\\n| top 100 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Queries by Count to Non-Existent Domains\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33\",\"name\":\"dns_top_nxdomain_by_count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where id_resp_p == 53\\n| summarize Count=count() by id_orig_h\\n| top 20 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Originators by Count\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"dns_top_originators\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where id_resp_p == 53 and qtype_name != \\\"ptr\\\"\\n| summarize Count=count() by query\\n| top 100 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Queries by Count\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33\",\"name\":\"dns_top_queries_by_count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where id_resp_p==53 and qtype_name==\\\"PTR\\\" and (rcode_name==\\\"NOERROR\\\" or rcode==0)\\n| summarize Count=count() by query\\n| top 100 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Successful Reverse Queries by Count\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33\",\"name\":\"dns_top_ptr_by_count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where id_resp_p == 53 and (rcode_name == \\\"NXDOMAIN\\\" or rcode == 3) and qtype_name != \\\"PTR\\\"\\n| summarize Count=count() by id_orig_h\\n| top 20 by Count\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Host querying Non-Existent Domains\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"dns_top_hosts_querying_nxdomain\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where id_resp_p == 53 and qtype_name == \\\"PTR\\\" and (rcode_name == \\\"NXDOMAIN\\\" or rcode == 3)\\n| summarize Count=count() by query\\n| top 100 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Reverse Queries by Count to Non-Existent Domains\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33\",\"name\":\"dns_top_ptr_nxdomain\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| extend query_length = string_size(query)\\n| summarize Count=count() by id_orig_h, query_length, query\\n| order by query_length desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"DNS by Query Length\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"dns_by_query_length\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_dns\"},\"name\":\"corelight_dns_group\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Corelight Files\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Deprecated files queries\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_files\\n| where TimeGenerated  {GlobalTimeRestriction}\\n//| where EventType startswith \\\"files\\\"\\n| where isnotempty(mime_type)\\n| where mime_type != \\\"application/pkix-cert\\\"\\n| summarize Count=count() by mime_type | sort by Count desc | take 20\\n\",\"size\":0,\"title\":\"Top 20 Mime Types by File Count\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"name\":\"Top 20 Mime Types by File Count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_files\\n| where TimeGenerated  {GlobalTimeRestriction}\\n//| where EventType startswith \\\"files\\\"\\n| where isnotempty(mime_type)\\n| where mime_type != \\\"application/pkix-cert\\\"\\n| summarize [\\\"File Count\\\"]=count() by source | sort by [\\\"File Count\\\"] desc | take 15\\n\",\"size\":0,\"title\":\"Top File Protocols by File Count\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"name\":\"Top File Protocols by File Count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_files\\n//| where EventType startswith \\\"files\\\"\\n| where isnotempty(mime_type)\\n| where mime_type != \\\"application/pkix-cert\\\"\\n| extend NetworkDirection = case(local_orig == \\\"true\\\", \\\"outbound\\\", local_orig == \\\"false\\\", \\\"inbound\\\", \\\"\\\" )\\n|make-series [\\\"Files Sent\\\"]=countif(NetworkDirection==\\\"outbound\\\"), [\\\"Files Received\\\"]=countif(NetworkDirection==\\\"inbound\\\") on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step {GlobalTimeRestriction:grain} by path | project [\\\"Files Sent\\\"], [\\\"Files Received\\\"], TimeGenerated\",\"size\":0,\"title\":\"File Flow - # of Files\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false},\"graphSettings\":{\"type\":0}},\"customWidth\":\"50\",\"name\":\"File Flow - # of Files\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_files\\n//| where EventType startswith \\\"files\\\"\\n| where isnotempty(mime_type)\\n| where mime_type != \\\"application/pkix-cert\\\"\\n//| extend NetworkDirection = case(local_orig == true, \\\"outbound\\\", local_orig == false, \\\"inbound\\\", \\\"\\\" )\\n// fixme: drop _d\\n|make-series [\\\"Bytes Sent\\\"]=sumif(toint(seen_bytes), local_orig == true), [\\\"Bytes Received\\\"]=sumif(toint(seen_bytes),local_orig == false) on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step {GlobalTimeRestriction:grain} by EventType\",\"size\":0,\"title\":\"File Flow - Bytes\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false},\"graphSettings\":{\"type\":0}},\"customWidth\":\"50\",\"name\":\"File Flow - Bytes\"}]},\"name\":\"deprecated_files\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_files\"},\"name\":\"corelight_files_group\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Corelight HTTP\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| summarize distinct_referrers=count_distinct(referrer)\",\"size\":3,\"showAnalytics\":true,\"title\":\"Distinct Referrers\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"16\",\"name\":\"http_distinct_referrers\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| summarize distinct_user_agents=count_distinct(user_agent)\",\"size\":3,\"showAnalytics\":true,\"title\":\"Distinct User Agents\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"16\",\"name\":\"http_distinct_user_agents\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| summarize count_distinct(host)\",\"size\":3,\"showAnalytics\":true,\"title\":\"Distinct Hosts\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"16\",\"name\":\"http_distinct_hosts\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| summarize distinct_connections=count_distinct(uid)\",\"size\":3,\"showAnalytics\":true,\"title\":\"Distinct Connections\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"16\",\"name\":\"http_distinct_connections\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| summarize avg = format_bytes(avg(response_body_len), 2)\",\"size\":3,\"showAnalytics\":true,\"title\":\"Average Body Length\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"16\",\"name\":\"http_avg_response_len\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| extend ua_length = strlen(user_agent)\\n| summarize avg_ua_length = round(avg(ua_length))\",\"size\":3,\"showAnalytics\":true,\"title\":\"Average User Agent Length\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"16\",\"name\":\"http_avg_ua_length\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| summarize Count=count() by host\\n| top 10 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Host Headers by Count\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Count\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"Count\",\"sortOrder\":1}]},\"customWidth\":\"33\",\"name\":\"http_top_hosts\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| summarize Count=count() by status_msg\\n| top 10 by Count\",\"size\":3,\"showAnalytics\":true,\"title\":\"HTTP Status Code Breakdown\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"http_status_code_chart\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| summarize Count=count() by id_orig_h\\n| top 10 by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Originators\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33\",\"name\":\"http_top_originators\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| summarize Count=count() by user_agent\\n| top 10 by Count asc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Rare User Agents\",\"noDataMessage\":\"No data found.\",\"timeContext\":{\"durationMs\":86400000},\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"70\",\"name\":\"http_rare_ua\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_http\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\n| where host != \\\"control\\\"\\n| summarize Count=count() by host, status_code\\n| top 10 by Count asc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Rare Host Headers\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"http_rare_hosts\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_http\"},\"name\":\"corelight_http_group\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Corelight Software\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Deprecated software queries\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_software\\n//| where EventType startswith \\\"software\\\"\\n| where TimeGenerated  {GlobalTimeRestriction}\\n//| where isnotempty(SoftwareType)\\n| summarize Count=count() by name | sort by Count | take 20\\n\",\"size\":0,\"title\":\"Top Software\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"name\":\"Top Software\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_software\\n//| where TimeGenerated  {GlobalTimeRestriction}\\n//| where EventType startswith \\\"software\\\"\\n| where isnotempty(software_type)\\n| summarize Count=count() by name, unparsed_version | sort by Count\",\"size\":0,\"title\":\"Top Software Versions\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Name\",\"formatter\":5}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Name\"],\"expandTopLevel\":true}}},\"customWidth\":\"50\",\"name\":\"Top Software Versions\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_software\\n//| where EventType startswith \\\"software\\\"\\n| where isnotempty(software_type)\\n| summarize Count=count() by software_type | sort by Count\",\"size\":0,\"title\":\"Top Software Types\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Name\",\"formatter\":5}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Name\"],\"expandTopLevel\":true}}},\"customWidth\":\"50\",\"name\":\"Top Software Types\"}]},\"name\":\"deprecated_software\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_software\"},\"name\":\"corelight_software_group\"}]},\"conditionalVisibility\":{\"parameterName\":\"dashboard\",\"comparison\":\"isEqualTo\",\"value\":\"DataExplorer\"},\"name\":\"Data Explorer\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"458c9ad4-de32-4629-a33c-bd6e24126dd8\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Security Posture\",\"subTarget\":\"SecurityPosture\",\"style\":\"link\"},{\"id\":\"cd6cc63c-c1a8-49fc-89c7-b2ae5e0674d9\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Secure Channel Insights\",\"subTarget\":\"SecureChannelInsights\",\"style\":\"link\"},{\"id\":\"c2140a1d-ad51-4d22-a0ed-b433d3131b54\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Name Resolution Insights\",\"subTarget\":\"NameResolutionInsights\",\"style\":\"link\"},{\"id\":\"cf92c03c-d98e-4a02-bc53-b127708c83f8\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Remote Activity Insights\",\"subTarget\":\"RemoteActivityInsights\",\"style\":\"link\"}]},\"name\":\"links - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Security Posture\"},\"name\":\"text - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Encrypted Traffic Hygiene\\r\\n---\"},\"name\":\"text - 6\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\nlet SSL=corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where is_self_signed==\\\"yes\\\" and is_dest_internal_ip==\\\"true\\\";\\r\\nlet trendline=toscalar(\\r\\nSSL\\r\\n| summarize arg_max(TimeGenerated, *) by ssl_subject_common_name\\r\\n| make-series Trend = dcount(ssl_subject_common_name) default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration\\r\\n| project Trend);\\r\\nSSL\\r\\n| summarize Count=dcount(ssl_subject_common_name)\\r\\n| extend Trend = trendline\",\"size\":4,\"showAnalytics\":true,\"title\":\"Self Signed Certs\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"greenDark\"}},\"showBorder\":true}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\nlet X509=corelight_x509\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| extend key_length = toint(certificate_key_length)\\r\\n| where key_length < 2048;\\r\\nlet trendline=toscalar(\\r\\nX509\\r\\n| summarize arg_max(TimeGenerated, *) by ssl_hash\\r\\n| make-series Trend = dcount(ssl_hash) default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration\\r\\n| project Trend);\\r\\nX509\\r\\n| summarize Count = dcount(ssl_hash)\\r\\n| extend Trend = trendline\\r\\n\\r\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Certs w/ Low Keys\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"greenDark\"}},\"showBorder\":true}},\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_x509\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where days_to_expiry > 0 and days_to_expiry <= 15\\r\\n| summarize [\\\"Distinct Certs\\\"] = dcount(ssl_hash)\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"Expiring Certs.\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Distinct Certs\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"green\"}},\"showBorder\":true}},\"name\":\"query - 2\"}]},\"customWidth\":\"25\",\"name\":\"Encrypted Traffic Hygiene Tiles\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\ncorelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| make-series ['Encrypted Traffic Volume']=count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration\",\"size\":2,\"showAnalytics\":true,\"title\":\"Encrypted Traffic Over Time\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"showLegend\":true,\"seriesLabelSettings\":[{\"seriesName\":\"Count\",\"color\":\"green\"},{\"seriesName\":\"Encrypted Traffic Volume\",\"color\":\"green\"}],\"xSettings\":{\"label\":\"Time\"},\"ySettings\":{\"label\":\"Encrypted traffic Volume\"}}},\"customWidth\":\"75\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| extend version_status=case(version==\\\"TLSv13\\\", \\\"Most Secure\\\", \\r\\n                            version==\\\"TLSv12\\\", \\\"Secure\\\", \\r\\n                            version==\\\"DTLSv12\\\", \\\"Secure\\\", \\r\\n                            version==\\\"unknown-64282\\\", \\\"Unknown\\\", \\r\\n                            \\\"Old Version\\\")\\r\\n| summarize Count= count() by version_status\\r\\n| sort by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"TLS Versions\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"group\":\"version_status\",\"createOtherGroup\":0}},\"customWidth\":\"40\",\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| extend src_internal=iff(isnull(is_src_internal_ip) or is_src_internal_ip==\\\"false\\\", \\\"External\\\", \\\"Internal\\\"), dest_internal=iff(isnull(is_dest_internal_ip) or is_dest_internal_ip==\\\"false\\\", \\\"External\\\", \\\"Internal\\\")\\r\\n| where src_internal==\\\"Internal\\\" \\r\\n| extend version_status=case(version==\\\"TLSv13\\\", \\\"Most Secure\\\", \\r\\n                            version==\\\"TLSv12\\\", \\\"Secure\\\", \\r\\n                            version==\\\"DTLSv12\\\", \\\"Secure\\\", \\r\\n                            version==\\\"unknown-64282\\\", \\\"Unknown\\\", \\r\\n                            \\\"Old Version\\\")\\r\\n| summarize Count= count() by version_status\\r\\n| sort by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Internal TLS Version Profile\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"showLegend\":true,\"xSettings\":{\"label\":\"TLS Version\"},\"ySettings\":{\"label\":\"Count\"}}},\"customWidth\":\"60\",\"name\":\"query - 5\"}]},\"name\":\"Encrypted Traffic Hygiene\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Unencrypted Traffic Hygiene - Indicators\\r\\n---\"},\"name\":\"text - 8\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\nlet UnencryptedConnection=corelight_etc_viz\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where  viz_stat in (\\\"C\\\", \\\"Cc\\\", \\\"C!\\\", \\\"cc\\\");\\r\\nlet trendline=toscalar(\\r\\nUnencryptedConnection \\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by server_a, server_p\\r\\n| project Trend);\\r\\nUnencryptedConnection \\r\\n| summarize Count = count() by server_a, server_p\\r\\n| summarize Sum = sum(Count)\\r\\n| extend Trend=trendline\\r\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Unencrypted Connections\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportFieldName\":\"Sum\",\"exportParameterName\":\"sum\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Sum\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"green\"}},\"showBorder\":true}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Click on the count in the above panel **Unencrypted Connections** to view more information.\",\"style\":\"info\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true\\r\\ncorelight_http,\\r\\ncorelight_conn,\\r\\ncorelight_dns,\\r\\ncorelight_ssl,\\r\\ncorelight_files\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where id_resp_p == 23\\r\\n| summarize Count = count()\\r\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Telnet Sessions\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportFieldName\":\"Count\",\"exportParameterName\":\"telnet_count\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}},\"showBorder\":true}},\"name\":\"query - 3\"},{\"type\":1,\"content\":{\"json\":\"#### Click on the count in the above panel **Telnet Sessions** to view more information.\",\"style\":\"info\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ftp\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| summarize Count = count()\\r\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"FTP Sessions\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportFieldName\":\"Count\",\"exportParameterName\":\"ftp_count\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"name\":\"query - 3\"},{\"type\":1,\"content\":{\"json\":\"#### Click on the count in the above panel **FTP Sessions** to view more information.\",\"style\":\"info\"},\"name\":\"text - 3\"}],\"exportParameters\":true},\"customWidth\":\"25\",\"name\":\"Unencrypted Traffic Hygiene - Indicators - Tiles\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\nunion isfuzzy=true\\r\\ncorelight_http,\\r\\ncorelight_conn,\\r\\ncorelight_dns,\\r\\ncorelight_ssl,\\r\\ncorelight_files\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where isnotempty(service) and service !in ('ssl', 'tls', 'dns', \\\"ssl,http\\\", \\\"http,ssl\\\")\\r\\n| make-series [\\\"Unencrypted Traffic Volume\\\"]=count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by service\",\"size\":2,\"showAnalytics\":true,\"title\":\"Top Unencrypted Protocols Used\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportFieldName\":\"series\",\"exportParameterName\":\"service\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"chartSettings\":{\"group\":\"service\",\"createOtherGroup\":0,\"showLegend\":true}},\"customWidth\":\"75\",\"name\":\"query - 2\"},{\"type\":1,\"content\":{\"json\":\"#### Click on the datapoints in the above panel **Top Unencrypted Protocols Used** to view more information.\\r\\n\",\"style\":\"info\"},\"name\":\"text - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_etc_viz\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where  viz_stat in (\\\"C\\\", \\\"Cc\\\", \\\"C!\\\", \\\"cc\\\") \\r\\n| summarize Count = count() by server_a, server_p\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of Unencrypted Connections\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"100\",\"conditionalVisibility\":{\"parameterName\":\"sum\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union corelight_http,\\r\\ncorelight_conn,\\r\\ncorelight_dns,\\r\\ncorelight_ssl,\\r\\ncorelight_files\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where id_resp_p == 23\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of Telnet Sessions\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"telnet_count\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ftp\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of FTP Sessions\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"ftp_count\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true\\r\\ncorelight_http,\\r\\ncorelight_conn,\\r\\ncorelight_dns,\\r\\ncorelight_ssl,\\r\\ncorelight_files\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where service == '{service}'\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of Top Unencrypted Protocols Used\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"service\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"name\":\"Unencrypted Traffic Hygiene - Indicators\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### DNS Hygiene\\r\\n---\"},\"name\":\"text - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\nlet FailedDNS=corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where rcode_name in ('SERVFAIL', 'REFUSED', 'FORMERR' ,'NOTIMP' ,'NOTAUTH');\\r\\nlet trendline=toscalar(\\r\\nFailedDNS\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration\\r\\n| project Trend);\\r\\nFailedDNS\\r\\n| summarize dns_fails = count()\\r\\n| extend Trend = trendline\\r\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Failed DNS Queries\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"rcode_name\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"dns_fails\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"green\"}},\"showBorder\":true}},\"customWidth\":\"25\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\nlet UnusualQtypes=corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where qtype_name in (\\\"AXFR\\\", \\\"IXFR\\\", \\\"ANY\\\", \\\"TXT\\\");\\r\\nlet trendline=toscalar(\\r\\nUnusualQtypes\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration\\r\\n);\\r\\nUnusualQtypes\\r\\n| summarize failed_q=count() by bin(TimeGenerated, 1d)\\r\\n| summarize total = sum(failed_q) by TimeGenerated\\r\\n| extend today = iff(TimeGenerated==(startofday(now())), total, 0)\\r\\n| extend yesterday = iff(TimeGenerated==(startofday(now())-1d), total, 0)\\r\\n| extend Trend = trendline\\r\\n| serialize\\r\\n| order by TimeGenerated desc\\r\\n| extend nextyesterday = iff((today == 0 and yesterday > 0), yesterday, iff(isempty(next(yesterday)), 0, next(yesterday)))\\r\\n| limit 1\\r\\n| extend percentage = case(nextyesterday == 0 and today == 0, 0.0, \\r\\n                           nextyesterday == 0 and today !=0, todouble(today)*100, \\r\\n                           (todouble(today-nextyesterday)/nextyesterday)*100)\",\"size\":3,\"showAnalytics\":true,\"title\":\"Unusual Qtypes\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportFieldName\":\"failed_q\",\"exportParameterName\":\"failed_count\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"today\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"rightContent\":{\"columnMatch\":\"percentage\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\"}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"green\"}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\nlet NxdomainResponses=corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where rcode_name in ('NXDOMAIN', 'NOERROR');\\r\\nlet trendline=toscalar(\\r\\nNxdomainResponses\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration\\r\\n);\\r\\nNxdomainResponses\\r\\n| summarize Count=count() by bin(TimeGenerated, 1d)\\r\\n| summarize total = sum(Count) by TimeGenerated\\r\\n| extend today = iff(TimeGenerated==(startofday(now())), total, 0)\\r\\n| extend yesterday = iff(TimeGenerated==(startofday(now())-1d), total, 0)\\r\\n| extend Trend = trendline\\r\\n| serialize\\r\\n| order by TimeGenerated desc\\r\\n| extend nextyesterday = iff((today == 0 and yesterday > 0), yesterday, iff(isempty(next(yesterday)), 0, next(yesterday)))\\r\\n| limit 1\\r\\n| extend percentage = case(nextyesterday == 0 and today == 0, 0.0, \\r\\n                           nextyesterday == 0 and today !=0, todouble(today)*100, \\r\\n                           (todouble(today-nextyesterday)/nextyesterday)*100)\",\"size\":3,\"showAnalytics\":true,\"title\":\"NXDOMAIN Responses\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"today\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"rightContent\":{\"columnMatch\":\"percentage\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\"}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"green\"}},\"showBorder\":true,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where isnotempty(dest_ip) and dest_port in (53, 5353) and is_dest_internal_ip==\\\"true\\\"\\r\\n| summarize NumberOfInternalDnsServers = dcount(dest_ip)\",\"size\":3,\"showAnalytics\":true,\"title\":\"Internal DNS Servers\",\"noDataMessage\":\"Nodata found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"NumberOfInternalDnsServers\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"25\",\"name\":\"query - 3\"},{\"type\":1,\"content\":{\"json\":\"#### Click on the count in the above panel **Unusual Qtypes** to view more information.\",\"style\":\"info\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where qtype_name in (\\\"AXFR\\\", \\\"IXFR\\\", \\\"ANY\\\", \\\"TXT\\\")\\r\\n| summarize unique_sessions=dcount(uid), query_list = strcat_array(make_list(query), \\\", \\\"), qtype_names = strcat_array(make_list(qtype_name), \\\", \\\") by id_orig_h, id_resp_h\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of Unusual Qtypes\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"failed_count\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| extend iplocation=geo_info_from_ip_address(dest_ip)\\r\\n| extend latitude=iplocation.latitude, longitude=iplocation.longitude\\r\\n| extend Country = coalesce(iplocation.country, \\\"No Country\\\")\\r\\n| summarize Count = count() by tostring(latitude), tostring(longitude), Country\\r\\n| extend coordinates= iff(Country!=\\\"No Country\\\", strcat(\\\"Country: \\\",Country, \\\"\\\\nLatitude: \\\", latitude, \\\"\\\\nLongitude:\\\", longitude), Country)\\r\\n\",\"size\":3,\"showAnalytics\":true,\"title\":\"Geolocation of DNS Responses\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"map\",\"mapSettings\":{\"locInfo\":\"LatLong\",\"latitude\":\"latitude\",\"longitude\":\"longitude\",\"sizeSettings\":\"Count\",\"sizeAggregation\":\"Max\",\"labelSettings\":\"coordinates\",\"legendMetric\":\"Count\",\"numberOfMetrics\":0,\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"nodeColorField\":\"Count\",\"colorAggregation\":\"Sum\",\"type\":\"heatmap\",\"heatmapPalette\":\"greenRed\"}}},\"name\":\"query - 0\"}]},\"name\":\"DNS Hygiene\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Remote Management Hygiene\\r\\n---\"},\"name\":\"text - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let TopVPN=corelight_vpn\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| extend iplocation=geo_info_from_ip_address(dest_ip)\\r\\n| extend country=iplocation.country\\r\\n| extend Country=coalesce(country, \\\"No Country\\\")\\r\\n| summarize arg_max(TimeGenerated, *) by dest_ip, tostring(Country)\\r\\n| summarize Count=count() by Country;\\r\\nlet totalcount=(\\r\\nTopVPN\\r\\n| summarize TotalCount = sum(Count));\\r\\nTopVPN\\r\\n| extend Percentage=(Count * 100.0)/toscalar(totalcount)\\r\\n| sort by Percentage desc\",\"size\":0,\"aggregation\":2,\"showAnalytics\":true,\"title\":\"Top VPN destinations by Country\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"chartSettings\":{\"xAxis\":\"Country\",\"yAxis\":[\"Percentage\",\"Count\"],\"showLegend\":true,\"seriesLabelSettings\":[{\"seriesName\":\"Percentage\",\"color\":\"green\"},{\"seriesName\":\"Count\",\"color\":\"greenDarkDark\"}],\"ySettings\":{\"numberFormatSettings\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}},\"label\":\"Percentage\"}}},\"customWidth\":\"50\",\"name\":\"Top VPN destinations by Country\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<90, 7d, 31d);\\r\\ncorelight_vpn\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where is_dest_internal_ip == \\\"false\\\"\\r\\n| make-series [\\\"Outbound VPN Connections\\\"]=count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration\",\"size\":0,\"showAnalytics\":true,\"title\":\"Outbound VPN Connections\",\"color\":\"green\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\",\"chartSettings\":{\"showLegend\":true,\"seriesLabelSettings\":[{\"seriesName\":\"Outbound VPN Connections\",\"color\":\"green\"}],\"showDataPoints\":true,\"ySettings\":{\"numberFormatSettings\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":1,\"content\":{\"json\":\"#### Metrics shows the count and percentage for the country with maximum value as default. To view the count or percentage for a particular country hover over the bar in Top VPN destinations by Country Panel.\",\"style\":\"upsell\"},\"name\":\"Tooltip for Top VPN destinations by Country Panel\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\ncorelight_rdp\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where isnotempty(auth_success)\\r\\n| extend auth_result = iff(auth_success==\\\"true\\\",\\\"Success\\\",\\\"Failure\\\") \\r\\n| make-series Count=count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by auth_result\",\"size\":0,\"showAnalytics\":true,\"title\":\"RDP Authentication Attempts\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportFieldName\":\"series\",\"exportParameterName\":\"auth\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"group\":\"auth_result\",\"createOtherGroup\":0,\"showLegend\":true,\"seriesLabelSettings\":[{\"seriesName\":\"Failure\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"}],\"showDataPoints\":true}},\"name\":\"query - 2\"},{\"type\":1,\"content\":{\"json\":\"#### Click on the datapoints in the above panel **RDP Authentication Attempts** to view more information.\",\"style\":\"info\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_rdp\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| extend auth_result = iff(auth_success==\\\"true\\\",\\\"Success\\\",\\\"Failure\\\") \\r\\n| where auth_result == '{auth}'\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of RDP Authentication Attempts\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"auth\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}}]},\"name\":\"Remote Management Hygiene\"}]},\"name\":\"group - 2\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"SecurityPosture\"},\"name\":\"Security Posture\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Secure Channel Insights\\r\\n#### Deep dive from Security Posture Encrypted, non-encrypted SSL, SSH, TLS and x509 facts.\\r\\n\"},\"name\":\"text - 0\"},{\"type\":1,\"content\":{\"json\":\"### Encrypted Traffic Notables\\r\\n----\"},\"name\":\"text - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Weak Certs. Used Internally\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_x509\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| extend key_length=certificate_key_length, match_fingerprint=fingerprint\\r\\n| where toint(key_length) < 2048\\r\\n| project match_fingerprint, key_length, TimeGenerated\\r\\n| join kind=inner (\\r\\n    corelight_ssl\\r\\n    | where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n    | mv-expand todynamic(cert_chain_fps)\\r\\n    | extend match_fingerprint=cert_chain_fps\\r\\n    | project tostring(match_fingerprint), uid, src_ip, dest_ip, id_resp_p, is_dest_internal_ip, server_name, TimeGenerated)\\r\\n on match_fingerprint\\r\\n| summarize arg_max(TimeGenerated, *) by match_fingerprint\\r\\n| extend Host_Type=iff(is_dest_internal_ip==\\\"true\\\", \\\"Internal\\\", \\\"External\\\"), Resp_port=id_resp_p\\r\\n| where Host_Type == \\\"Internal\\\"\\r\\n| summarize Count= count() by server_name, dest_ip, Resp_port, key_length, Host_Type\\r\\n| summarize Sum = count()\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"server_name\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Sum\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### SSL/TLS sessions utilizing weak keys are vulnerable to cryptographic attacks. This traffic may indicate the presence of old and/or unpatched resources on the network. It could also be the result of a successful downgrade attack.\"},\"customWidth\":\"60\",\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let CertResults = corelight_x509\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| extend key_length=certificate_key_length\\r\\n| extend match_fingerprint=fingerprint\\r\\n| where toint(key_length) < 2048\\r\\n| project match_fingerprint, key_length, TimeGenerated\\r\\n| join kind=inner ( \\r\\n    corelight_ssl\\r\\n    | where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n    | mv-expand todynamic(cert_chain_fps)\\r\\n    | extend match_fingerprint=cert_chain_fps\\r\\n    | project tostring(match_fingerprint), uid, src_ip, dest_ip, id_resp_p, is_dest_internal_ip, server_name, TimeGenerated)\\r\\n on match_fingerprint\\r\\n| summarize arg_max(TimeGenerated, *) by match_fingerprint\\r\\n| extend [\\\"Host Type\\\"]=iff(is_dest_internal_ip==\\\"true\\\", \\\"Internal\\\", \\\"External\\\"), Resp_Port=id_resp_p, Dest_Host=dest_ip, [\\\"Key Length\\\"]=key_length, [\\\"Server Name\\\"]=server_name\\r\\n| where [\\\"Host Type\\\"] == \\\"Internal\\\"\\r\\n| summarize Count= count() by [\\\"Server Name\\\"], Dest_Host, Resp_Port, [\\\"Key Length\\\"], [\\\"Host Type\\\"]\\r\\n| sort by [\\\"Server Name\\\"] desc;\\r\\nlet CertCount = CertResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable([\\\"Server Name\\\"]: string, Dest_Host: string, Resp_Port: string, [\\\"Key Length\\\"]: string, [\\\"Host Type\\\"]: string, Count: long)\\r\\n[\\\"No Results\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", 0];\\r\\nunion isfuzzy=true\\r\\n(CertResults| where toscalar(CertCount) != 0),\\r\\n(NoResults| where toscalar(CertCount) == 0)\\r\\n| extend Resp_Port = coalesce(tostring(toint(Resp_Port_real)), Resp_Port_string)\\r\\n| extend [\\\"Key Length\\\"] = coalesce(tostring(toint(['Key Length_real'])), ['Key Length_string'])\\r\\n| project-away Resp_Port_*, [\\\"Key Length_*\\\"]\\r\\n| project-reorder [\\\"Server Name\\\"], Dest_Host, Resp_Port, [\\\"Key Length\\\"], [\\\"Host Type\\\"], Count\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Network Evidence for Weak Key Length Certs\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"group - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Less Secure Ciphers\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where cipher matches regex (\\\"RC4|DES|3DES|MD5|NULL|EXPORT\\\")\\r\\n| extend Host_Type=iff(is_src_internal_ip==\\\"true\\\", \\\"Internal\\\", \\\"External\\\")\\r\\n| extend Direction=iff(is_src_internal_ip==\\\"true\\\" and is_dest_internal_ip==\\\"false\\\", \\\"Outbound\\\", \\\"Inbound\\\")\\r\\n| summarize Unique_Conns=dcount(uid), Count=count() by cipher\\r\\n| summarize TotalCount = count()\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"TotalCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### SSL/TLS sessions utilizing weak cipher suites (eg. RC4) are easily decrypted. This traffic may indicate the presence of old and/or unpatched resources on the network. It could also be the result of a successful downgrade attack.\"},\"customWidth\":\"60\",\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let QueryResults = corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where cipher matches regex (\\\"RC4|DES|3DES|MD5|NULL|EXPORT\\\")\\r\\n| extend Host_Type=iff(is_src_internal_ip==\\\"true\\\", \\\"Internal\\\", \\\"External\\\")\\r\\n| extend Direction=iff(is_src_internal_ip==\\\"true\\\" and is_dest_internal_ip==\\\"false\\\", \\\"Outbound\\\", \\\"Inbound\\\")\\r\\n| summarize dest_ip = make_list(dest_ip)[-1], Unique_Conns=dcount(uid), Host_Type=strcat_array(make_set(Host_Type), \\\",\\\"), Direction=strcat_array(make_set(Direction), \\\",\\\"), Count=count() by cipher\\r\\n| project-rename Cipher=cipher\\r\\n| sort by Unique_Conns desc, Count desc;\\r\\nlet QueryCount = QueryResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable(Cipher: string, dest_ip: dynamic, Unique_Conns: string, Host_Type: string, Direction: string, Count: long)\\r\\n[\\\"No Results\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", 0];\\r\\nunion isfuzzy=true\\r\\n(QueryResults| where toscalar(QueryCount) != 0),\\r\\n(NoResults| where toscalar(QueryCount) == 0)\\r\\n| extend Unique_Conns = coalesce(tostring(tolong(Unique_Conns_long)), Unique_Conns_string)\\r\\n| project-away Unique_Conns_*\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Less Secure Ciphers seen in the period\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"group - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Connections using Less Secure TLS Versions (< TLS1.2)\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"0054d601-4a2f-41d2-8f2b-5633e412ff29\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TrafficDirection\",\"label\":\"Traffic Direction\",\"type\":2,\"description\":\"Select Traffic Direction\",\"isRequired\":true,\"quote\":\"'\",\"delimiter\":\",\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"jsonData\":\"[\\\"Inbound\\\", \\\"Outbound\\\", \\\"Internal\\\", \\\"EEther\\\"]\\r\\n\",\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"defaultValue\":\"value::all\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where isnotempty(src_ip) and isnotempty(version)\\r\\n| extend ip_class = iff(is_dest_internal_ip == \\\"true\\\", \\\"Internal\\\", \\\"External\\\")\\r\\n| extend src_int = iff(isnull(is_src_internal_ip) or is_src_internal_ip==\\\"false\\\", \\\"f\\\", \\\"t\\\"), \\r\\n    dst_int = iff(isnull(is_dest_internal_ip) or is_dest_internal_ip==\\\"false\\\", \\\"f\\\", \\\"t\\\") \\r\\n| extend \\r\\n    connection_type=case(\\r\\n    src_int==\\\"t\\\" and dst_int==\\\"f\\\", \\\"Outbound\\\",\\r\\n    src_int==\\\"f\\\" and dst_int==\\\"t\\\", \\\"Inbound\\\",\\r\\n    src_int==\\\"t\\\" and dst_int==\\\"t\\\", \\\"Internal\\\",\\r\\n    \\\"EEther\\\"\\r\\n    ),\\r\\n    version_status=case(\\r\\n    version==\\\"TLSv13\\\", \\\"Most Secure (v1.3)\\\",\\r\\n    version==\\\"TLSv12\\\", \\\"Secure (v1.2)\\\",\\r\\n    version==\\\"DTLSv12\\\", \\\"Secure (v1.2)\\\", \\r\\n    version==\\\"unknown-64282\\\", \\\"Unknown\\\",\\r\\n    \\\"Old Version < (v1.2)\\\") \\r\\n| extend Classification=version_status, [\\\"Traffic Direction\\\"]=connection_type, Version=version\\r\\n| where ('*' == ('{TrafficDirection}') or [\\\"Traffic Direction\\\"] == ('{TrafficDirection}'))\\r\\n| where Classification !contains \\\"Secure\\\"\\r\\n| summarize Counter=dcount(uid) by tostring(Version), Classification, \\\"Traffic Direction\\\"\\r\\n| summarize Sum=sum(Counter)\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Sum\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"40\",\"name\":\"query - 1\"},{\"type\":1,\"content\":{\"json\":\"#### Connections employing TLS versions older than 1.2 are recognized as less secure, presenting a higher risk of being compromised. These outdated protocols may indicate legacy systems with configurations that are not aligned with modern security standards.\"},\"customWidth\":\"60\",\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SSHResults = corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where isnotempty(src_ip) and isnotempty(version)\\r\\n| extend ip_class = iff(is_dest_internal_ip == \\\"true\\\", \\\"Internal\\\", \\\"External\\\")\\r\\n| extend src_int = iff(isnull(is_src_internal_ip) or is_src_internal_ip==\\\"false\\\", \\\"f\\\", \\\"t\\\"), \\r\\n    dst_int = iff(isnull(is_dest_internal_ip) or is_dest_internal_ip==\\\"false\\\", \\\"f\\\", \\\"t\\\") \\r\\n| extend \\r\\n    connection_type=case(\\r\\n    src_int==\\\"t\\\" and dst_int==\\\"f\\\", \\\"Outbound\\\",\\r\\n    src_int==\\\"f\\\" and dst_int==\\\"t\\\", \\\"Inbound\\\",\\r\\n    src_int==\\\"t\\\" and dst_int==\\\"t\\\", \\\"Internal\\\",\\r\\n    \\\"EEther\\\"\\r\\n    ),\\r\\n    version_status=case(\\r\\n    version==\\\"TLSv13\\\", \\\"Most Secure (v1.3)\\\",\\r\\n    version==\\\"TLSv12\\\", \\\"Secure (v1.2)\\\",\\r\\n    version==\\\"DTLSv12\\\", \\\"Secure (v1.2)\\\", \\r\\n    version==\\\"unknown-64282\\\", \\\"Unknown\\\",\\r\\n    \\\"Old Version < (v1.2)\\\") \\r\\n| extend Classification=version_status, [\\\"Traffic Direction\\\"]=connection_type, Version=version\\r\\n| where ('*' == ('{TrafficDirection}') or [\\\"Traffic Direction\\\"] == ('{TrafficDirection}'))\\r\\n| summarize Counter=dcount(uid), [\\\"Responder Location\\\"] = strcat_array(make_set(ip_class), \\\",\\\") by tostring(Version), Classification, [\\\"Traffic Direction\\\"]\\r\\n| project-reorder Version, [\\\"Traffic Direction\\\"], Counter, [\\\"Responder Location\\\"], Classification\\r\\n| sort by Counter desc;\\r\\nlet SSHCount = SSHResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable(Version: string, Counter: long)\\r\\n[\\\"No Results Found\\\", 0];\\r\\nunion isfuzzy=true\\r\\n(SSHResults| where toscalar(SSHCount) != 0),\\r\\n(NoResults| where toscalar(SSHCount) == 0)\\r\\n\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Network Evidence for All TLS versions seen (Classification based on Industry best practices)\",\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Version\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"Version\",\"sortOrder\":1}]},\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"group - 2-Connections using Less Secure TLS Versions (< TLS1.2)\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Interactive Sessions and Keystrokes\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssh \\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| mv-expand todynamic(Inferences), todynamic(Descriptions)\\r\\n| where Inferences in (\\\"KS\\\", \\\"AUTO\\\") \\r\\n| summarize arg_max(TimeGenerated, *) by uid\\r\\n| extend src_ip = id_orig_h, dest_ip = id_resp_h, Inference=Inferences, Description=Descriptions\\r\\n| summarize Count = count() by uid, src_ip, dest_ip, tostring(Inference), tostring(Description) \\r\\n| summarize TotalCount = count()\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"TotalCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"40\",\"name\":\"query - 0\",\"styleSettings\":{\"margin\":\"60px 0px 0px 0px\"}},{\"type\":1,\"content\":{\"json\":\"#### Highlight interactive sessions (KS) and automated interactions (AUTO) to understand the nature of SSH traffic — manual vs. automated.\\r\\n\"},\"customWidth\":\"60\",\"name\":\"text - 2\",\"styleSettings\":{\"margin\":\"60px 0px 0px 0px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SSHResults = corelight_ssh \\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| mv-expand todynamic(Inferences), todynamic(Descriptions)\\r\\n| where Inferences in (\\\"KS\\\", \\\"AUTO\\\") \\r\\n| summarize arg_max(TimeGenerated, *) by uid\\r\\n| extend src_ip = id_orig_h, dest_ip = id_resp_h, Inference=Inferences, Description=Descriptions\\r\\n| summarize Count = count() by uid, src_ip, dest_ip, tostring(Inference), tostring(Description);\\r\\nlet SSHCount = SSHResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable(uid: string, src_ip: string, dest_ip: string, Inference: string, Description: string, Count: long)\\r\\n[\\\"No Results\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", 0];\\r\\nunion isfuzzy=true\\r\\n(SSHResults| where toscalar(SSHCount) != 0),\\r\\n(NoResults| where toscalar(SSHCount) == 0)\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Network Evidence for Interactive Sessions and Keystrokes - SSH Inferences\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 1\",\"styleSettings\":{\"margin\":\"2px 0px 0px 0px\",\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"group - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Self Signed Certs\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where validation_status==\\\"self signed certificate\\\" and is_dest_internal_ip==\\\"true\\\" and isnotempty(dest_ip)\\r\\n| extend Source_Host_Type = case(is_src_internal_ip==\\\"true\\\", \\\"Internal\\\",is_src_internal_ip==\\\"false\\\", \\\"External\\\", \\\"Undefined\\\") , \\r\\nDestination_Host_Type = case(is_dest_internal_ip==\\\"true\\\", \\\"Internal\\\",is_dest_internal_ip==\\\"false\\\", \\\"External\\\", \\\"Undefined\\\")\\r\\n| extend Traffic_Direction = case(Source_Host_Type==\\\"Internal\\\" and Destination_Host_Type==\\\"External\\\", \\\"Outbound\\\",Source_Host_Type==\\\"External\\\" and Destination_Host_Type==\\\"Internal\\\", \\\"Inbound\\\",Source_Host_Type==\\\"Internal\\\" and Destination_Host_Type==\\\"Internal\\\", \\\"East-West\\\",Source_Host_Type==\\\"External\\\" and Destination_Host_Type==\\\"External\\\", \\\"Ether\\\",\\\"Undefined\\\") \\r\\n| summarize count() by ssl_subject_common_name, dest_ip \\r\\n| count \",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### This dashboard panel identifies self-signed certificates in use within internal networks, highlighting a key security concern due to their lack of third-party validation. Addressing this issue by transitioning to certificates from trusted authorities enhances network security and trustworthiness.\"},\"customWidth\":\"60\",\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SSHResults = corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where validation_status==\\\"self signed certificate\\\" and is_dest_internal_ip==\\\"true\\\" and isnotempty(dest_ip)\\r\\n| extend Source_Host_Type = case(is_src_internal_ip==\\\"true\\\", \\\"Internal\\\",is_src_internal_ip==\\\"false\\\", \\\"External\\\", \\\"Undefined\\\") , \\r\\nDestination_Host_Type = case(is_dest_internal_ip==\\\"true\\\", \\\"Internal\\\",is_dest_internal_ip==\\\"false\\\", \\\"External\\\", \\\"Undefined\\\")\\r\\n| extend Traffic_Direction = case(Source_Host_Type==\\\"Internal\\\" and Destination_Host_Type==\\\"External\\\", \\\"Outbound\\\",Source_Host_Type==\\\"External\\\" and Destination_Host_Type==\\\"Internal\\\", \\\"Inbound\\\",Source_Host_Type==\\\"Internal\\\" and Destination_Host_Type==\\\"Internal\\\", \\\"East-West\\\",Source_Host_Type==\\\"External\\\" and Destination_Host_Type==\\\"External\\\", \\\"Ether\\\",\\\"Undefined\\\") \\r\\n| summarize Destination_Host_Type=strcat_array(make_set(Destination_Host_Type), \\\",\\\"), Status=strcat_array(make_set(validation_status), \\\",\\\"), Traffic_Direction=strcat_array(make_set(Traffic_Direction), \\\",\\\") \\r\\n by ssl_subject_common_name, dest_ip \\r\\n| project Subject=ssl_subject_common_name, Destination=dest_ip, Status, Destination_Host_Type, Traffic_Direction;\\r\\nlet SSHCount = SSHResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable(Subject: string)\\r\\n[\\\"No Results Found\\\"];\\r\\nunion isfuzzy=true\\r\\n(SSHResults| where toscalar(SSHCount) != 0),\\r\\n(NoResults| where toscalar(SSHCount) == 0)\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Network Evidence for Self Signed Internal Certificates\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Subject\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"Subject\",\"sortOrder\":1}]},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"group - 4-Self Signed Certs\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Possible File Uploaded\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssh\\r\\n| where ('*' == ('*') or sensor_name == ('*'))\\r\\n| mv-expand todynamic(Inferences), todynamic(Descriptions)\\r\\n| where Inferences in (\\\"SFD\\\", \\\"LFD\\\", \\\"SFU\\\", \\\"LFU\\\")\\r\\n| summarize arg_max(TimeGenerated, *) by uid\\r\\n| project-rename\\r\\n    Inference = Inferences,\\r\\n    Description = Descriptions\\r\\n| summarize Count = count() by uid, src_ip, dest_ip,tostring(Inference), tostring(Description)\\r\\n| summarize TotalCount = count()\\r\\n\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"TotalCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### This use case tracks SSH file transfer activity (inferences SFD, LFD, SFU, LFU). It uncovers potential data exfiltration by attackers or the introduction of malicious files. Focus on file names, sizes, unusual source IPs, and sensitive destination systems.\"},\"customWidth\":\"60\",\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SSHResults = corelight_ssh\\r\\n| where ('*' == ('*') or sensor_name == ('*'))\\r\\n| mv-expand todynamic(Inferences), todynamic(Descriptions)\\r\\n| where Inferences in (\\\"SFD\\\", \\\"LFD\\\", \\\"SFU\\\", \\\"LFU\\\")\\r\\n| summarize arg_max(TimeGenerated, *) by uid\\r\\n| project-rename\\r\\n    Inference = Inferences,\\r\\n    Description = Descriptions\\r\\n| summarize Count = count() by uid, src_ip, dest_ip,tostring(Inference), tostring(Description);\\r\\nlet SSHCount = SSHResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable(uid: string, src_ip: string, dest_ip: string, Inference: string, Description: string, Count: long)\\r\\n[\\\"No Results\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", 0];\\r\\nunion isfuzzy=true\\r\\n(SSHResults| where toscalar(SSHCount) != 0),\\r\\n(NoResults| where toscalar(SSHCount) == 0)\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Possible File Transfer\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"group - 5-Possible File Uploaded\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Certificates about to Expire\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where is_dest_internal_ip==\\\"true\\\"\\r\\n| mv-expand todynamic(fingerprint)\\r\\n| extend fingerprint=tostring(fingerprint)\\r\\n| join kind=inner  \\r\\n    (corelight_x509\\r\\n    | where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n    | where days_to_expiry > 0 and days_to_expiry < 30)\\r\\n    on fingerprint\\r\\n| summarize count() by ssl_subject, dest_ip\\r\\n| count\\r\\n\\r\\n\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### A SSL certificate that is about to expire (default window is 30 days) was observed. Expiration of an SSL certificate may result in unexpected behaviour such as refused network connections or unencrypted network traffic.\\r\\n\"},\"customWidth\":\"60\",\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SSHResults = corelight_ssl\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where is_dest_internal_ip==\\\"true\\\"\\r\\n| mv-expand todynamic(fingerprint)\\r\\n| extend fingerprint=tostring(fingerprint)\\r\\n| join kind=inner  \\r\\n    (corelight_x509\\r\\n    | where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n    | where days_to_expiry > 0 and days_to_expiry < 30)\\r\\n    on fingerprint\\r\\n| summarize Port = strcat_array(make_list(toint(dest_port)), \\\",\\\"), [\\\"Not Valid After\\\"] = strcat_array(make_list(not_valid_after), \\\",\\\"), [\\\"Days to Expire\\\"] =  strcat_array(make_list(days_to_expiry), \\\",\\\") by ssl_subject, dest_ip\\r\\n| project-rename Subject = ssl_subject, Host = dest_ip\\r\\n| sort by tostring([\\\"Days to Expire\\\"]) desc; \\r\\nlet SSHCount = SSHResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable(Subject: string)\\r\\n[\\\"No Results Found\\\"];\\r\\nunion isfuzzy=true\\r\\n(SSHResults| where toscalar(SSHCount) != 0),\\r\\n(NoResults| where toscalar(SSHCount) == 0)\\r\\n\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Network Evidence for Self Signed Internal Certificates\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"group - 6-Certificates about to Expire\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Potential Security Risks\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssh\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| mv-expand todynamic(Inferences)\\r\\n| where Inferences in (\\\"SC\\\", \\\"SP\\\", \\\"SV\\\", \\\"SA\\\", \\\"AFR\\\", \\\"BAN\\\") \\r\\n| summarize Count = count() by uid, src_ip, dest_ip, tostring(Inferences)  \\r\\n| summarize TotalCount = count()\\r\\n\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"TotalCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Monitors for signs of scanning (SC, SP, SV, SA), banner messages (BAN), and agent forwarding (AFR) for compliance and security risk identification.\"},\"customWidth\":\"60\",\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SSHResults = corelight_ssh\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| mv-expand todynamic(Inferences)\\r\\n| where Inferences in (\\\"SC\\\", \\\"SP\\\", \\\"SV\\\", \\\"SA\\\", \\\"AFR\\\", \\\"BAN\\\") \\r\\n| summarize Count = count() by uid, src_ip, dest_ip, tostring(Inferences)\\r\\n| project-reorder uid, src_ip, dest_ip, Count, Inferences;\\r\\nlet SSHCount = SSHResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable(uid: string)\\r\\n[\\\"No Results\\\"];\\r\\nunion isfuzzy=true\\r\\n(SSHResults| where toscalar(SSHCount) != 0),\\r\\n(NoResults| where toscalar(SSHCount) == 0)\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"SSH Inferences for Potential Security Risks\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"group - 7-Potential Security Risks\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Automated SSH Session Indicators\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssh\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| mv-expand todynamic(Inferences)\\r\\n| where Inferences in (\\\"PKA\\\", \\\"AUTO\\\", \\\"KS\\\", \\\"CTS\\\")\\r\\n| summarize\\r\\n    src_ip = strcat_array(make_list(id_orig_h), \\\",\\\"),\\r\\n    dest_ip = strcat_array(make_list(id_resp_h), \\\",\\\"),\\r\\n    Inferences = strcat_array(make_list(Inferences), \\\",\\\"),\\r\\n    Count = count()\\r\\n    by uid\\r\\n| summarize TotalCount = count()\\r\\n\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"TotalCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Tracks automated SSH sessions to enhance security and operational efficiency, highlighting potential risks and compliance issues. It identifies anomalies and unauthorized activities, ensuring that automation tools are used securely and efficiently. This tool is crucial for SOC analysts to monitor for security breaches and optimize system management.\"},\"customWidth\":\"60\",\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SSHResults = corelight_ssh\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| mv-expand todynamic(Inferences)\\r\\n| where Inferences in (\\\"PKA\\\", \\\"AUTO\\\", \\\"KS\\\", \\\"CTS\\\")\\r\\n| summarize\\r\\n    src_ip = strcat_array(make_list(id_orig_h), \\\",\\\"),\\r\\n    dest_ip = strcat_array(make_list(id_resp_h), \\\",\\\"),\\r\\n    Inferences = strcat_array(make_list(Inferences), \\\",\\\"),\\r\\n    Count = count()\\r\\n    by uid;\\r\\nlet SSHCount = SSHResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable(uid: string, src_ip: string, dest_ip: string, Inferences: string, Count: long)\\r\\n[\\\"No Results\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", 0];\\r\\nunion isfuzzy=true\\r\\n(SSHResults| where toscalar(SSHCount) != 0),\\r\\n(NoResults| where toscalar(SSHCount) == 0)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"SSH Session Inferences\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"group - 8 - Automated SSH Session Indicators\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Advanced Threat Indicators\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_ssh\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| mv-expand todynamic(Inferences)\\r\\n| where Inferences in (\\\"ABP\\\", \\\"RSP\\\", \\\"RSI\\\", \\\"RSIA\\\", \\\"RSL\\\", \\\"RSK\\\")\\r\\n| summarize arg_max(TimeGenerated, *) by uid\\r\\n| summarize Count = count() by uid, id_orig_h, id_resp_h, tostring(Inferences)\\r\\n| summarize TotalCount = count()\\r\\n\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"uid\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"TotalCount\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Helps to identify potential advanced threat indicators such as Client Authentication Bypass (ABP) and Reverse SSH tunneling activities (RSP, RSI, RSIA, RSL, RSK) for in-depth investigation.\"},\"customWidth\":\"60\",\"name\":\"text - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let SSHResults = corelight_ssh\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| mv-expand todynamic(Inferences)\\r\\n| where Inferences in (\\\"ABP\\\", \\\"RSP\\\", \\\"RSI\\\", \\\"RSIA\\\", \\\"RSL\\\", \\\"RSK\\\")\\r\\n| summarize arg_max(TimeGenerated, *) by uid\\r\\n| summarize Count = count() by uid, id_orig_h, id_resp_h, tostring(Inferences)\\r\\n| project-rename Inference = Inferences, src_ip = id_orig_h , dest_ip = id_resp_h;\\r\\nlet SSHCount = SSHResults\\r\\n| summarize count()\\r\\n| project count_;\\r\\nlet NoResults = datatable(uid: string, src_ip: string, dest_ip: string, Inference: string, Count: long)\\r\\n[\\\"No Results\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", 0];\\r\\nunion isfuzzy=true\\r\\n(SSHResults| where toscalar(SSHCount) != 0),\\r\\n(NoResults| where toscalar(SSHCount) == 0)\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"SSH Advanced Threats Inferences\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"group - 9 - Advanced Threat Indicators\"}]},\"name\":\"group - Encrypted Traffic Notables\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"SecureChannelInsights\"},\"name\":\"Secure Channel Insights\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Name Resolution Insights\\r\\n##### Insights on Name Resolution (DNS)\"},\"name\":\"text - 2\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### DNS Hygiene\\r\\n----\"},\"name\":\"text - 6\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Responding DNS Servers\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| summarize count() by dest_ip\\r\\n| count\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"35\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### DNS servers actively responding in the network are key to secure operations, translating domain names to IP addresses and directing traffic. It also logs the number of queries and unique clients interacting with the DNS servers, offering insights into possible rogue DNS servers and detecting patterns that may suggest data exfiltration attempts.\"},\"customWidth\":\"65\",\"name\":\"text - 1\",\"styleSettings\":{\"margin\":\"11px\",\"padding\":\"10px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| extend IPInfo = geo_info_from_ip_address(dest_ip)\\r\\n| summarize\\r\\n    [\\\"# of Queries\\\"] = count(),\\r\\n    [\\\"# of Unique Clients\\\"] = dcount(src_ip),\\r\\n    Country = any(IPInfo.country),\\r\\n    any(is_dest_internal_ip)\\r\\n    by dest_ip\\r\\n| extend\\r\\n    Internal = iff(\\r\\n                   any_is_dest_internal_ip == \\\"true\\\",\\r\\n                   \\\"Yes\\\",\\r\\n                   \\\"No\\\"\\r\\n               ),\\r\\n    Country = iff(isempty(Country), \\\"Unknown\\\", Country)\\r\\n| project\\r\\n    Destination = dest_ip,\\r\\n    ['# of Queries'],\\r\\n    ['# of Unique Clients'],\\r\\n    Country,\\r\\n    Internal\\r\\n| sort by ['# of Queries'], ['# of Unique Clients'] desc \",\"size\":0,\"showAnalytics\":true,\"title\":\"DNS Servers actively responding to queries\",\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"responding dns servers\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Unusual Qtypes\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where qtype_name in (\\\"AXFR\\\", \\\"IXFR\\\", \\\"ANY\\\", \\\"TXT\\\")\\r\\n| summarize count() by qtype_name, dest_ip\\r\\n| summarize Count = sum(count_)\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"35\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Unusual DNS query types can indicate misconfigurations, experimental features, or potential security threats like data exfiltration or tunneling. Analysts should scrutinize such queries for anomalies and address identified risks to safeguard network security.\"},\"customWidth\":\"65\",\"name\":\"text - 1\",\"styleSettings\":{\"margin\":\"21px\",\"padding\":\"10px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let FilteredDNS = (\\r\\ncorelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where qtype_name in (\\\"AXFR\\\", \\\"IXFR\\\", \\\"ANY\\\", \\\"TXT\\\")\\r\\n);\\r\\nlet DNSRecords = (\\r\\nFilteredDNS\\r\\n| summarize count() by qtype_name, dest_ip\\r\\n);\\r\\nFilteredDNS\\r\\n| join kind=leftouter(DNSRecords) on $left.qtype_name == $right.qtype_name, $left.dest_ip == $right.dest_ip\\r\\n| summarize arg_max(TimeGenerated, *) by qtype_name, dest_ip\\r\\n| project Qtype = qtype_name, Responder = dest_ip, Source = src_ip, Query = query, Count = count_\\r\\n| sort by Count\",\"size\":0,\"showAnalytics\":true,\"title\":\"Unusual Query Types found\",\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Count\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"Count\",\"sortOrder\":2}]},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"unusual qtypes\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"NXDOMAIN Responses\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where tolower(rcode_name) in (\\\"nxdomain\\\", \\\"noerror\\\")\\r\\n| extend query_rejected = iff(rejected == true, \\\"Yes\\\", \\\"No\\\")\\r\\n| summarize count() by src_ip, dest_ip, query, query_rejected\\r\\n| summarize sum(count_)\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"sum_count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"35\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### High rates of DNS NXDOMAIN responses might suggest misconfigured domains, typographical errors in network requests, or malicious activities such as DNS reconnaissance. Close examination is advised to correct configurations or identify security incidents. Review DNS logs for patterns, validate domain configurations, and check endpoint security for signs of malware.\"},\"customWidth\":\"65\",\"name\":\"text - 1\",\"styleSettings\":{\"margin\":\"7px\",\"padding\":\"10px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where tolower(rcode_name) in (\\\"nxdomain\\\", \\\"noerror\\\")\\r\\n| extend query_rejected = iff(rejected == true, \\\"Yes\\\", \\\"No\\\")\\r\\n| summarize count() by src_ip, dest_ip, query, query_rejected\\r\\n| project Source = src_ip, Responder = dest_ip, Query = query, Rejected = query_rejected, Count = count_\\r\\n| sort by Count desc\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Network Evidence for NXDOMAIN Responses\",\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"nxdomain responses\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Monitoring DNS Query Response Times > 15ms\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| summarize avg_rtt = avg(todouble(rtt)) by query, dest_ip\\r\\n| where avg_rtt > 0.015\\r\\n| extend avg_rtt = round(avg_rtt*1000, 2)\\r\\n| count \",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"35\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Long DNS query response times may indicate network congestion, server performance issues, or potential security threats. Timely analysis is crucial for maintaining optimal network performance and security. Investigate extended response times by examining server configurations, network traffic, and potential external attacks.\"},\"customWidth\":\"65\",\"name\":\"text - 1\",\"styleSettings\":{\"margin\":\"19px\",\"padding\":\"10px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| summarize avg_rtt = avg(todouble(rtt)) by query, dest_ip\\r\\n| where avg_rtt > 0.015\\r\\n| extend avg_rtt = round(avg_rtt*1000, 2)\\r\\n| project Query = query, Responder = dest_ip, [\\\"Avg. Response Time (ms)\\\"] = avg_rtt\",\"size\":0,\"showAnalytics\":true,\"title\":\"Monitoring DNS Query Types by AVG time\",\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"monitoring DNS query response times > 15ms\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Failed DNS Queries\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where tolower(rcode_name) in (\\\"servfail\\\", \\\"refused\\\", \\\"formerr\\\", \\\"notimp\\\", \\\"notauth\\\")\\r\\n| summarize count() by rcode_name\\r\\n| count\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"35\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Failed DNS queries may point to misconfigurations, outdated systems, or security threats such as network infiltration or DNS poisoning. Analysts should investigate the sources and patterns of these failures to identify and remediate underlying causes, thereby ensuring network integrity and security.\"},\"customWidth\":\"65\",\"name\":\"text - 1\",\"styleSettings\":{\"margin\":\"10px\",\"padding\":\"10px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let FilteredDNS = (\\r\\n    corelight_dns\\r\\n    | where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n    | where tolower(rcode_name) in (\\\"servfail\\\", \\\"refused\\\", \\\"formerr\\\", \\\"notimp\\\", \\\"notauth\\\")\\r\\n    );\\r\\nlet RcodeCount = (\\r\\n    FilteredDNS\\r\\n    | summarize count() by rcode_name, dest_ip, src_ip\\r\\n    );\\r\\nFilteredDNS\\r\\n| join kind=innerunique (RcodeCount) on rcode_name, dest_ip, src_ip\\r\\n| project\\r\\n    Source = src_ip,\\r\\n    Responder = dest_ip,\\r\\n    Query = query,\\r\\n    [\\\"Response Code\\\"] = toupper(rcode_name),\\r\\n    Count = count_\\r\\n| sort by Count desc \",\"size\":0,\"showAnalytics\":true,\"title\":\"Network Evidence for Failed DNS Queries\",\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Count\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"Count\",\"sortOrder\":2}]},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"failed DNS queries\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"DNS Query Volume Over Time\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_conn\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where service == \\\"dns\\\"\\r\\n| summarize TotalTraffic = sum(todouble(orig_bytes))\",\"size\":3,\"showAnalytics\":true,\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"TotalTraffic\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":2,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"35\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Monitor total DNS-related network traffic in MB/GB. Sudden spikes or unusual patterns could signal configuration errors, compromised devices making excessive queries, or potential data exfiltration attempts.\"},\"customWidth\":\"65\",\"name\":\"text - 1\",\"styleSettings\":{\"margin\":\"18px\",\"padding\":\"10px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\ncorelight_dns\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| summarize Count = count() by bin(TimeGenerated, bin_duration), uid\",\"size\":0,\"showAnalytics\":true,\"title\":\"Monitoring Query Types by AVG time\",\"noDataMessage\":\"No data found\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"yAxis\":[\"Count\"],\"group\":\"uid\",\"createOtherGroup\":99}},\"name\":\"query - 2\",\"styleSettings\":{\"margin\":\"10px\"}}]},\"customWidth\":\"50\",\"name\":\"DNS query volume over time\"}]},\"name\":\"dns hygiene\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"NameResolutionInsights\"},\"name\":\"group - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Remote Activity Insights\"},\"name\":\"title\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Remote Access Hygiene\\r\\n---\"},\"name\":\"text - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"RDP Authentication Attempts\",\"expandable\":true,\"items\":[{\"type\":1,\"content\":{\"json\":\"Total count of RDP success and failed actions within the specified time.\\r\\n\\r\\n\"},\"name\":\"text - 0\"}]},\"name\":\"group - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_rdp\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where action != \\\"unknown\\\"\\r\\n| summarize count() by action\\r\\n| summarize Total = sum(count_)\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportFieldName\":\"Total\",\"exportParameterName\":\"count\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Total\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"35\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Monitoring RDP authentications is crucial for identifying unauthorized access and distinguishing between successful and failed login attempts. Security teams should analyze trends and cross-reference user activity for rapid response and mitigation.\"},\"customWidth\":\"65\",\"name\":\"text - 2\",\"styleSettings\":{\"margin\":\"36px 36px 0px 0px\",\"padding\":\"0px 0px 30px 0px\"}},{\"type\":1,\"content\":{\"json\":\"#### Click on the Count in above tile to view more information.\",\"style\":\"info\"},\"name\":\"text - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_rdp\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where action != \\\"unknown\\\"\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of RDP Authentication Attempts\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"action\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"50%\"}},{\"columnMatch\":\"Count\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"50%\"}}],\"rowLimit\":10000,\"filter\":true,\"labelSettings\":[{\"columnId\":\"action\",\"label\":\"Action\"}]}},\"conditionalVisibility\":{\"parameterName\":\"count\",\"comparison\":\"isNotEqualTo\"},\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let interval_in_hrs= datetime_diff('hour', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet interval_in_days= datetime_diff('day', {GlobalTimeRestriction:end}, {GlobalTimeRestriction:start});\\r\\nlet bin_duration=case(interval_in_hrs<=24, 1h, interval_in_days<=30, 1d, interval_in_days>=31 and interval_in_days<=90, 7d, 31d);\\r\\ncorelight_rdp\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where action != \\\"unknown\\\"\\r\\n| make-series Count=count() default = 0 on TimeGenerated from {GlobalTimeRestriction:start} to {GlobalTimeRestriction:end} step bin_duration by action\",\"size\":0,\"showAnalytics\":true,\"title\":\"Failed vs Successful Authentications\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportedParameters\":[{\"fieldName\":\"x\",\"parameterName\":\"Time\",\"defaultValue\":\"none\"},{\"fieldName\":\"series\",\"parameterName\":\"Action\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"action\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"action\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"count_\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"TimeGenerated\",\"group\":\"action\",\"createOtherGroup\":0,\"showLegend\":true,\"seriesLabelSettings\":[{\"seriesName\":\"success\",\"color\":\"green\"},{\"seriesName\":\"failure\",\"color\":\"redBright\"}],\"ySettings\":{\"label\":\"Count\"}}},\"name\":\"query - 1\",\"styleSettings\":{\"padding\":\"10px\"}},{\"type\":1,\"content\":{\"json\":\"#### Click on the datapoints in panel Failed vs Successful Authentications above to view more information.\",\"style\":\"info\"},\"name\":\"text - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_rdp\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where action == \\\"{Action}\\\"\",\"size\":0,\"showAnalytics\":true,\"title\":\"Details of Failed vs Successful Authentications\",\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"Time\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"rdp authentication attempts\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Identifying Failed RDP Logins\",\"expandable\":true,\"items\":[{\"type\":1,\"content\":{\"json\":\"Total count of users with login failures within the specified time.\\r\\n\\r\\n\"},\"name\":\"text - 0\"}]},\"name\":\"group - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_rdp\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where action == \\\"failure\\\" or auth_success == \\\"false\\\"\\r\\n| where isnotempty(cookie)\\r\\n| extend User = cookie\\r\\n| summarize dcount(User)\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"dcount_User\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"35\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Monitoring failed RDP logins is essential for detecting unauthorized access attempts. Security teams should analyze patterns of failed entries against user and IP data to identify potential breaches. This focus helps in quickly addressing vulnerabilities in RDP security. Effective monitoring of these incidents is crucial for maintaining system integrity.\"},\"customWidth\":\"65\",\"name\":\"text - 1\",\"styleSettings\":{\"margin\":\"25px\",\"padding\":\"0px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let FilteredRDP = (\\r\\ncorelight_rdp\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where action == \\\"failure\\\" or auth_success == \\\"false\\\"\\r\\n| where isnotempty(cookie)\\r\\n);\\r\\nlet CookieCount = (\\r\\nFilteredRDP\\r\\n| summarize Count = count() by cookie\\r\\n);\\r\\nlet QueryResult = (\\r\\nFilteredRDP\\r\\n| join kind=leftouter(CookieCount) on $left.cookie == $right.cookie\\r\\n| extend User = cookie, Source = src_ip, Responder = dest_ip, Auth_Success = tostring(auth_success), Result = result\\r\\n| summarize arg_max(TimeGenerated, *) by User\\r\\n| project User, Source, Responder, ['Auth Success'] = Auth_Success, Result, Count\\r\\n| sort by Count\\r\\n);\\r\\nlet QueryCount = (\\r\\nQueryResult\\r\\n| count\\r\\n);\\r\\nlet NoResults = (\\r\\ndatatable ( User: string, Source: string, Responder: string, ['Auth Success']: string, Result: string, Count: long) [ \\\"No Results\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", 0]\\r\\n);\\r\\nunion isfuzzy=true \\r\\n(QueryResult| where toscalar(QueryCount) != 0),\\r\\n(NoResults | where toscalar (QueryCount) == 0)\",\"size\":0,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"identifying failed rdp logins\"}]},\"name\":\"remote access hygiene\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### VPN Insights\\r\\n---\"},\"name\":\"text - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Unusual Remote Activity\",\"expandable\":true,\"items\":[{\"type\":1,\"content\":{\"json\":\"Total count of VPN connections that have the following inferences NSP - Non-Standard Port RW - Road warrior configuration detected (i.e. Cisco Anyconnect) COM - Commercial VPN service occurring at the same time which is deemed suspicious.\\r\\n\\r\\n\"},\"name\":\"text - 0\"}]},\"name\":\"group - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_vpn\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where Inferences has_all (\\\"COM\\\", \\\"RW\\\", \\\"NSP\\\")\\r\\n| summarize count() by src_ip, dest_ip, tostring(Inferences), vpn_type\\r\\n| count\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"exportFieldName\":\"Count\",\"exportParameterName\":\"Count\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"35\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### The combination of the \\\"COM\\\", \\\"RW\\\", and \\\"NSP\\\" inferences in a single VPN connection raises questions: Policy Violation: Is the use of commercial VPNs allowed in your organization's security policy? If not, this could indicate a violation. Hidden Activity: Is the non-standard port usage an attempt to mask other activities happening over the VPN tunnel?\"},\"customWidth\":\"65\",\"name\":\"text - 1\",\"styleSettings\":{\"margin\":\"34px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let FilteredVPN = (\\r\\n    corelight_vpn\\r\\n    | where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n    | where Inferences has_all (\\\"COM\\\", \\\"RW\\\", \\\"NSP\\\")\\r\\n    );\\r\\nlet VPNCount = (\\r\\n    FilteredVPN\\r\\n    | extend Inferences = tostring(Inferences)\\r\\n    | summarize Count = count() by src_ip, dest_ip, Inferences, vpn_type\\r\\n    | project src_ip, dest_ip, Inferences, vpn_type, Count\\r\\n    );\\r\\nlet QueryResults = (\\r\\nFilteredVPN\\r\\n| extend Inferences_string = tostring(Inferences)\\r\\n| join kind=innerunique(VPNCount)\\r\\n    on\\r\\n    $left.src_ip == $right.src_ip,\\r\\n    $left.dest_ip == $right.dest_ip,\\r\\n    $left.Inferences_string == $right.Inferences,\\r\\n    $left.vpn_type == $right.vpn_type\\r\\n| extend\\r\\n    Source = src_ip,\\r\\n    Responder = dest_ip,\\r\\n    [\\\"VPN Type\\\"] = vpn_type,\\r\\n    Count\\r\\n| extend NewInferences = strcat_array(Inferences, \\\",\\\")\\r\\n| project Source, Responder, Inferences = NewInferences, ['VPN Type'], Count\\r\\n| sort by Count\\r\\n);\\r\\nlet QueryCount = (\\r\\nQueryResults\\r\\n| count\\r\\n);\\r\\nlet NoResults = (\\r\\ndatatable ( Source: string, Responder: string , Inferences: string, ['VPN Type']: string, Count: long)\\r\\n[\\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", 0]\\r\\n);\\r\\nunion isfuzzy=true \\r\\n(QueryResults | where toscalar(QueryCount) != 0),\\r\\n(NoResults | where toscalar(QueryCount) == 0)\",\"size\":0,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"VPN Type\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"15%\"}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"unusual remote activity\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Suspected Data Exfiltration\",\"expandable\":true,\"items\":[{\"type\":1,\"content\":{\"json\":\"Total count of VPN connections using potentially unusual connection configurations such as static TLS key auth.\"},\"name\":\"text - 0\"}]},\"name\":\"group - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_vpn\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where Inferences has_any (\\\"TLS\\\", \\\"SK\\\")\\r\\n| summarize count() by src_ip, dest_ip\\r\\n| count\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},\"showBorder\":true}},\"customWidth\":\"35\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Unmonitored commercial VPNs with a typical traffic patterns or static keys could be used to bypass security controls for data theft.\\r\\n\\r\\n#### **Investigate:** Examine VPN sessions with large outgoing transfers, focusing on unusual destinations or protocols.\"},\"customWidth\":\"65\",\"name\":\"text - 1\",\"styleSettings\":{\"margin\":\"30px\",\"padding\":\"10px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let FilteredVPN = (\\r\\n    corelight_vpn\\r\\n    | where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n    | where Inferences has_any (\\\"TLS\\\", \\\"SK\\\")\\r\\n    );\\r\\nlet VPNCount = ( \\r\\n    FilteredVPN\\r\\n    | summarize Count = count() by src_ip, dest_ip\\r\\n    );\\r\\nlet QueryResults = (\\r\\nFilteredVPN\\r\\n| extend inferences_string = tostring(replace(\\\",\\\", \\\":\\\", strcat_array(Inferences, \\\":\\\")))\\r\\n| join kind=leftouter(VPNCount) on src_ip, dest_ip\\r\\n| summarize arg_max(TimeGenerated, *) by src_ip, dest_ip\\r\\n| project\\r\\n    Source = src_ip,\\r\\n    Responder = dest_ip,\\r\\n    Inferences = inferences_string,\\r\\n    [\\\"Responder Country\\\"] = resp_cc,\\r\\n    [\\\"VPN Type\\\"] = vpn_type,\\r\\n    Count\\r\\n| sort by Count\\r\\n);\\r\\nlet QueryCount = (\\r\\nVPNCount\\r\\n| count \\r\\n);\\r\\nlet NoResults = (\\r\\ndatatable ( Source: string, Responder: string, Inferences: string, [\\\"Responder Country\\\"]: string, [\\\"VPN Type\\\"]: string, Count: long)\\r\\n[\\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", 0]\\r\\n);\\r\\nunion isfuzzy=true \\r\\n(QueryResults | where toscalar(QueryCount) != 0),\\r\\n(NoResults | where toscalar(QueryCount) == 0)\",\"size\":0,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Responder Country\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"3%\"}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"margin\":\"12px\",\"showBorder\":true}}]},\"customWidth\":\"50\",\"name\":\"suspected data exfiltration\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Possible Unauthorized Remote Access Attempts\",\"expandable\":true,\"items\":[{\"type\":1,\"content\":{\"json\":\"Total count of VPN connections that are using the RW- Road warrior configuration detected (i.e. Cisco Anyconnect) and FW - Firewall subversion inferences.\"},\"name\":\"text - 0\"}]},\"name\":\"group - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"corelight_vpn\\r\\n| where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n| where Inferences has_any (\\\"RW\\\", \\\"FW\\\")\\r\\n| summarize count() by uid\\r\\n| count\",\"size\":3,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":true}},\"customWidth\":\"30\",\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"#### Monitoring for \\\"RW\\\" (Road Warrior) and \\\"FW\\\" (Firewall subversion) inferences is crucial for detecting potential unauthorized access, as these patterns may indicate attempts to bypass security controls. Security teams should prioritize correlating these inferences with internal IP ranges and device logs to identify suspicious activities.\"},\"customWidth\":\"70\",\"name\":\"text - 1\",\"styleSettings\":{\"padding\":\"50px\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let FilteredVPN = (\\r\\n    corelight_vpn\\r\\n    | where ('*' in ({Sensor}) or sensor_name in ({Sensor}))\\r\\n    | where Inferences has_any (\\\"RW\\\", \\\"FW\\\")\\r\\n    );\\r\\nlet VPNCount = ( \\r\\n    FilteredVPN\\r\\n    | summarize Count = count() by uid\\r\\n    );\\r\\nlet QueryResults = (\\r\\nFilteredVPN\\r\\n| join kind=leftouter(VPNCount) on uid\\r\\n| summarize arg_max(TimeGenerated, *) by uid\\r\\n| extend\\r\\n    Source = src_ip,\\r\\n    Responder = dest_ip,\\r\\n    Proto = proto,\\r\\n    Inferences = Inferences,\\r\\n    Bytes = orig_bytes\\r\\n| extend NewInferences = strcat_array(todynamic(Inferences), \\\",\\\")\\r\\n| project\\r\\n    Source,\\r\\n    Responder,\\r\\n    Proto,\\r\\n    Inferences = NewInferences,\\r\\n    [\\\"Dest Port\\\"] = dest_port,\\r\\n    Bytes,\\r\\n    Count\\r\\n| sort by Count\\r\\n);\\r\\nlet QueryCount = (\\r\\nVPNCount\\r\\n| count \\r\\n);\\r\\nlet NoResults = (\\r\\ndatatable ( Source: string, Responder: string, Proto: string, Inferences: string, [\\\"Dest Port\\\"]: string, Bytes: string , Count: long)\\r\\n[\\\"No Results\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", \\\"N/A\\\", 0]\\r\\n);\\r\\nunion isfuzzy=true \\r\\n(QueryResults | where toscalar(QueryCount) != 0),\\r\\n(NoResults | where toscalar(QueryCount) == 0)\\r\\n| extend [\\\"Dest Port\\\"] = coalesce(tostring(tolong(['Dest Port_real'])), ['Dest Port_string']), Bytes = coalesce(tostring(tolong(Bytes_real)), Bytes_string)\\r\\n| project-away ['Dest Port_*'], Bytes_*\\r\\n| project-reorder \\r\\n    Source,\\r\\n    Responder,\\r\\n    Proto,\\r\\n    Inferences,\\r\\n    [\\\"Dest Port\\\"],\\r\\n    Bytes,\\r\\n    Count\",\"size\":0,\"showAnalytics\":true,\"noDataMessage\":\"No data found.\",\"timeContextFromParameter\":\"GlobalTimeRestriction\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}}]},\"name\":\"possible unauthorized remote access attempts\"}]},\"name\":\"vpn insights\"}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"RemoteActivityInsights\"},\"name\":\"group - 14\"}]},\"conditionalVisibility\":{\"parameterName\":\"dashboard\",\"comparison\":\"isEqualTo\",\"value\":\"SecurityWorkflows\"},\"name\":\"Security Workflows\"}],\"fromTemplateId\":\"sentinel-Corelight\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=CorelightWorkbook; logoFileName=corelight.svg; description=Sets the time name for analysis; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Corelight; templateRelativePath=Corelight.json; subtitle=; provider=Corelight}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "Corelight_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Corelight",
                      "kind": "DataConnector"
                    }
                  ]
                }
              },
              "description": "Sample Corelight workbook"
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightC2RepetitiveFailures_AnalyticalRules Analytics Rule with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects large amounts of DNS resolution failures.",
                "displayName": "Corelight - C2 DGA Detected Via Repetitive Failures",
                "enabled": false,
                "query": "let threshold = 25;\nunion corelight_dns, corelight_dns_red\n// rcodes: SERVFAIL=2, NXDOMAIN=3\n| where rcode in (2, 3)\n| summarize count() by query, id_orig_h, bin(TimeGenerated, 5m)\n| where count_ > threshold\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Corelight",
                    "dataTypes": [
                      "Corelight_v2_dns",
                      "Corelight_v2_dns_red",
                      "corelight_dns",
                      "corelight_dns_red"
                    ]
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1568"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "id_orig_h",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Corelight Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Corelight - C2 DGA Detected Via Repetitive Failures",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightExternalProxyDetected_AnalyticalRules Analytics Rule with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects external proxy usage.",
                "displayName": "Corelight - External Proxy Detected",
                "enabled": false,
                "query": "corelight_http\n| where isnotempty(proxied)\n| where not(ipv4_is_private(id_orig_h))\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Corelight",
                    "dataTypes": [
                      "Corelight_v2_http",
                      "corelight_http"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion",
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1090"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "id_orig_h",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
              "properties": {
                "description": "Corelight Analytics Rule 2",
                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
        "contentKind": "AnalyticsRule",
        "displayName": "Corelight - External Proxy Detected",
        "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject3').analyticRuleTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightForcedExternalOutboundSMB_AnalyticalRules Analytics Rule with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject3').analyticRuleVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects SMB requests that originate internally and communicate with an external IP address.",
                "displayName": "Corelight - Forced External Outbound SMB",
                "enabled": false,
                "query": "union corelight_conn, corelight_conn_red\n| where local_orig == true\n| where local_resp == false\n| where history hasprefix 'Sh' and service hasprefix 'smb'\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Corelight",
                    "dataTypes": [
                      "Corelight_v2_conn",
                      "Corelight_v2_conn_red",
                      "corelight_conn",
                      "corelight_conn_red"
                    ]
                  }
                ],
                "tactics": [
                  "CredentialAccess"
                ],
                "techniques": [
                  "T1187"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "id_orig_h",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject3').analyticRuleId3,'/'))))]",
              "properties": {
                "description": "Corelight Analytics Rule 3",
                "parentId": "[variables('analyticRuleObject3').analyticRuleId3]",
                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
        "contentKind": "AnalyticsRule",
        "displayName": "Corelight - Forced External Outbound SMB",
        "contentProductId": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "id": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject4').analyticRuleTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightMultipleCompressedFilesTransferredOverHTTP_AnalyticalRules Analytics Rule with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject4').analyticRuleVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects compressed archives transferre over HTTP.",
                "displayName": "Corelight - Multiple Compressed Files Transferred over HTTP",
                "enabled": false,
                "query": "let threshold = 25;\ncorelight_http\n| where method in~ ('POST', 'PUT')\n| where isempty(referrer)\n| where orig_mime_types has_any ('application/vnd.ms-cab-compressed', 'application/warc', 'application/x-7z-compressed', 'application/x-ace', 'application/x-arc', 'application/x-archive', 'application/x-arj', 'application/x-compress', 'application/x-cpio', 'application/x-dmg', 'application/x-eet', 'application/x-gzip', 'application/x-lha', 'application/x-lrzip', 'application/x-lz4', 'application/x-lzma', 'application/x-lzh', 'application/x-lzip', 'application/x-rar', 'application/x-rpm', 'application/x-stuffit', 'application/x-tar', 'application/x-xz', 'application/x-zoo', 'application/zip')\n| summarize count() by uri, id_orig_h, bin(TimeGenerated, 15m)\n| where count_ > threshold\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Corelight",
                    "dataTypes": [
                      "Corelight_v2_http",
                      "corelight_http"
                    ]
                  }
                ],
                "tactics": [
                  "Exfiltration"
                ],
                "techniques": [
                  "T1567"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "id_orig_h",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject4').analyticRuleId4,'/'))))]",
              "properties": {
                "description": "Corelight Analytics Rule 4",
                "parentId": "[variables('analyticRuleObject4').analyticRuleId4]",
                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
        "contentKind": "AnalyticsRule",
        "displayName": "Corelight - Multiple Compressed Files Transferred over HTTP",
        "contentProductId": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "id": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject5').analyticRuleTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightMultipleFilesSentOverHTTPAbnormalRequests_AnalyticalRules Analytics Rule with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject5').analyticRuleVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects sources sending multiple compressed files greater than 10MBs sent over HTTP in a short amount of time.",
                "displayName": "Corelight - Multiple files sent over HTTP with abnormal requests",
                "enabled": false,
                "query": "let threshold = 25;\nlet fl_size_threshold = 10000000;\ncorelight_http\n| where method in~ ('POST', 'PUT')\n| where isempty(referrer)\n| where tolong(request_body_len) > fl_size_threshold\n| summarize count() by uri, id_orig_h, bin(TimeGenerated, 15m)\n| where count_ > threshold\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Corelight",
                    "dataTypes": [
                      "Corelight_v2_http",
                      "corelight_http"
                    ]
                  }
                ],
                "tactics": [
                  "Exfiltration"
                ],
                "techniques": [
                  "T1030"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "id_orig_h",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject5').analyticRuleId5,'/'))))]",
              "properties": {
                "description": "Corelight Analytics Rule 5",
                "parentId": "[variables('analyticRuleObject5').analyticRuleId5]",
                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
        "contentKind": "AnalyticsRule",
        "displayName": "Corelight - Multiple files sent over HTTP with abnormal requests",
        "contentProductId": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "id": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject6').analyticRuleTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightNetworkServiceScanning_AnalyticalRules Analytics Rule with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject6').analyticRuleVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identify scanning of services that may be available on the internal network.",
                "displayName": "Corelight - Network Service Scanning Multiple IP Addresses",
                "enabled": false,
                "query": "let threshold = 25;\nunion corelight_conn, corelight_conn_red\n| where local_resp == true\n| where local_orig == true\n| where conn_state in~ ('S0', 'REJ')\n| where history !contains 'D'\n| summarize count() by id_orig_h, id_resp_p, bin(TimeGenerated, 1m)\n| where count_ > threshold\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Corelight",
                    "dataTypes": [
                      "Corelight_v2_conn",
                      "Corelight_v2_conn_red",
                      "corelight_conn",
                      "corelight_conn_red"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1566"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "id_orig_h",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject6').analyticRuleId6,'/'))))]",
              "properties": {
                "description": "Corelight Analytics Rule 6",
                "parentId": "[variables('analyticRuleObject6').analyticRuleId6]",
                "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject6').analyticRuleVersion6]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
        "contentKind": "AnalyticsRule",
        "displayName": "Corelight - Network Service Scanning Multiple IP Addresses",
        "contentProductId": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "id": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject7').analyticRuleTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightPossibleWebshell_AnalyticalRules Analytics Rule with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject7').analyticRuleVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects post requests to unusual extensions.",
                "displayName": "Corelight - Possible Webshell",
                "enabled": false,
                "query": "corelight_http\n| where method in~ ('POST', 'PUT')\n| where toint(status_code) between (200 .. 299)\n| where request_body_len != 0 or response_body_len != 0\n| extend fe = extract(@'.*(\\.\\w+)$', 1, uri)\n| where fe in~ ('.jpg', '.jpeg', '.gif', '.png', '.icon', '.ico', '.xml', '.swf', '.svg', '.ppt', '.pttx', '.doc', '.docx', '.rtf', '.pdf', '.tif', '.zip', '.mov')\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Corelight",
                    "dataTypes": [
                      "Corelight_v2_http",
                      "corelight_http"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "techniques": [
                  "T1505"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "id_orig_h",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject7').analyticRuleId7,'/'))))]",
              "properties": {
                "description": "Corelight Analytics Rule 7",
                "parentId": "[variables('analyticRuleObject7').analyticRuleId7]",
                "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject7').analyticRuleVersion7]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
        "contentKind": "AnalyticsRule",
        "displayName": "Corelight - Possible Webshell",
        "contentProductId": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "id": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject8').analyticRuleTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightPossibleWebshellRarePOST_AnalyticalRules Analytics Rule with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject8').analyticRuleVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects rare post requests to a single webserver location.",
                "displayName": "Corelight - Possible Webshell (Rare PUT or POST)",
                "enabled": false,
                "query": "let threshold = 3;\ncorelight_http\n| where method in~ ('POST', 'PUT')\n| where toint(status_code) !between (400 .. 499)\n| where request_body_len != 0 or response_body_len != 0\n| extend fe = extract(@'.*(\\.\\w+)$', 1, uri)\n| where fe in~ ('.aspx', '.asp', '.php', '.jsp', '.jspx', '.war', '.ashx', '.asmx', '.ascx', '.asx', '.cshtml', '.cfm', '.cfc', '.cfml', '.wss', '.do', '.action', '.pl', '.plx', '.pm', '.xs', '.t', '.pod', '.php-s', '.pht', '.phar', '.phps', '.php7', '.php5', '.php4', '.php3', '.phtml', '.py', '.rb', '.rhtml', '.cgi', '.dll', '.ayws', '.cgi', '.erb', '.rjs', '.hta', '.htc', '.cs', '.kt', '.lua', '.vbhtml')\n| summarize count() by uri, id_orig_h\n| where count_ < threshold\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Corelight",
                    "dataTypes": [
                      "Corelight_v2_http",
                      "corelight_http"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "techniques": [
                  "T1505"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "id_orig_h",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject8').analyticRuleId8,'/'))))]",
              "properties": {
                "description": "Corelight Analytics Rule 8",
                "parentId": "[variables('analyticRuleObject8').analyticRuleId8]",
                "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject8').analyticRuleVersion8]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
        "contentKind": "AnalyticsRule",
        "displayName": "Corelight - Possible Webshell (Rare PUT or POST)",
        "contentProductId": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "id": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject9').analyticRuleTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightSMTPEmailSubjectNonAsciiCharacters_AnalyticalRules Analytics Rule with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject9').analyticRuleVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects where an emails contain non ascii characters within the Subject.",
                "displayName": "Corelight - SMTP Email containing NON Ascii Characters within the Subject",
                "enabled": false,
                "query": "corelight_smtp\n| where subject hasprefix  @'\\=?utf-16'\n| summarize recipients = dcount(_to)\n| extend k = 1\n| join (corelight_smtp\n        | where subject hasprefix  @'\\=?utf-16'\n        | summarize by _to\n        | extend k = 1) on k\n| where recipients > 1\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Corelight",
                    "dataTypes": [
                      "Corelight_v2_smtp",
                      "corelight_smtp"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1566"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "_to",
                        "identifier": "Recipient"
                      }
                    ],
                    "entityType": "MailMessage"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject9').analyticRuleId9,'/'))))]",
              "properties": {
                "description": "Corelight Analytics Rule 9",
                "parentId": "[variables('analyticRuleObject9').analyticRuleId9]",
                "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject9').analyticRuleVersion9]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
        "contentKind": "AnalyticsRule",
        "displayName": "Corelight - SMTP Email containing NON Ascii Characters within the Subject",
        "contentProductId": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "id": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject10').analyticRuleTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightTypoSquattingOrPunycodePhishingHTTPRequest_AnalyticalRules Analytics Rule with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject10').analyticRuleVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an HTTP request was made to a domain that was using unicode/punycode.",
                "displayName": "Corelight - Possible Typo Squatting or Punycode Phishing HTTP Request",
                "enabled": false,
                "query": "corelight_http\n| where method =~ 'GET'\n| where isempty(referrer)\n| where host has 'xn--'\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Corelight",
                    "dataTypes": [
                      "Corelight_v2_http",
                      "corelight_http"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1566"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "id_orig_h",
                        "identifier": "Address"
                      }
                    ],
                    "entityType": "IP"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject10').analyticRuleId10,'/'))))]",
              "properties": {
                "description": "Corelight Analytics Rule 10",
                "parentId": "[variables('analyticRuleObject10').analyticRuleId10]",
                "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject10').analyticRuleVersion10]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
        "contentKind": "AnalyticsRule",
        "displayName": "Corelight - Possible Typo Squatting or Punycode Phishing HTTP Request",
        "contentProductId": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
        "id": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
        "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Corelight data connector with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Corelight Connector Exporter",
                  "publisher": "Corelight",
                  "descriptionMarkdown": "The [Corelight](https://corelight.com/) data connector enables incident responders and threat hunters who use Microsoft Sentinel to work faster and more effectively. The data connector enables ingestion of events from [Zeek](https://zeek.org/) and [Suricata](https://suricata-ids.org/) via Corelight Sensors into Microsoft Sentinel.",
                  "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected [**Corelight**](https://aka.ms/sentinel-Corelight-parser) which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Corelight_CL",
                      "baseQuery": "Corelight"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Top 10 Clients (Source IP)",
                      "query": "Corelight\n\t| summarize count() by id_orig_h\n\t| top 10 by count_"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "corelight_bacnet",
                      "lastDataReceivedQuery": "Corelight_v2_bacnet_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_capture_loss",
                      "lastDataReceivedQuery": "Corelight_v2_capture_loss_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_cip",
                      "lastDataReceivedQuery": "Corelight_v2_cip_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_conn_long",
                      "lastDataReceivedQuery": "Corelight_v2_conn_long_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_conn_red",
                      "lastDataReceivedQuery": "Corelight_v2_conn_red_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_conn",
                      "lastDataReceivedQuery": "Corelight_v2_conn_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_corelight_burst",
                      "lastDataReceivedQuery": "Corelight_v2_corelight_burst_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_corelight_overall_capture_loss",
                      "lastDataReceivedQuery": "Corelight_v2_corelight_overall_capture_loss_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_corelight_profiling",
                      "lastDataReceivedQuery": "Corelight_v2_corelight_profiling_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_datared",
                      "lastDataReceivedQuery": "Corelight_v2_datared_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_dce_rpc",
                      "lastDataReceivedQuery": "Corelight_v2_dce_rpc_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_dga",
                      "lastDataReceivedQuery": "Corelight_v2_dga_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_dhcp",
                      "lastDataReceivedQuery": "Corelight_v2_dhcp_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_dnp3",
                      "lastDataReceivedQuery": "Corelight_v2_dnp3_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_dns_red",
                      "lastDataReceivedQuery": "Corelight_v2_dns_red_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_dns",
                      "lastDataReceivedQuery": "Corelight_v2_dns_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_dpd",
                      "lastDataReceivedQuery": "Corelight_v2_dpd_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_encrypted_dns",
                      "lastDataReceivedQuery": "Corelight_v2_encrypted_dns_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_enip_debug",
                      "lastDataReceivedQuery": "Corelight_v2_enip_debug_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_enip_list_identity",
                      "lastDataReceivedQuery": "Corelight_v2_enip_list_identity_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_enip",
                      "lastDataReceivedQuery": "Corelight_v2_enip_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_etc_viz",
                      "lastDataReceivedQuery": "Corelight_v2_etc_viz_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_files_red",
                      "lastDataReceivedQuery": "Corelight_v2_files_red_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_files",
                      "lastDataReceivedQuery": "Corelight_v2_files_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_ftp",
                      "lastDataReceivedQuery": "Corelight_v2_ftp_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_generic_dns_tunnels",
                      "lastDataReceivedQuery": "Corelight_v2_generic_dns_tunnels_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_generic_icmp_tunnels",
                      "lastDataReceivedQuery": "Corelight_v2_generic_icmp_tunnels_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_http2",
                      "lastDataReceivedQuery": "Corelight_v2_http2_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_http_red",
                      "lastDataReceivedQuery": "Corelight_v2_http_red_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_http",
                      "lastDataReceivedQuery": "Corelight_v2_http_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_icmp_specific_tunnels",
                      "lastDataReceivedQuery": "Corelight_v2_icmp_specific_tunnels_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_intel",
                      "lastDataReceivedQuery": "Corelight_v2_intel_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_ipsec",
                      "lastDataReceivedQuery": "Corelight_v2_ipsec_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_irc",
                      "lastDataReceivedQuery": "Corelight_v2_irc_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_iso_cotp",
                      "lastDataReceivedQuery": "Corelight_v2_iso_cotp_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_kerberos",
                      "lastDataReceivedQuery": "Corelight_v2_kerberos_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_known_certs",
                      "lastDataReceivedQuery": "Corelight_v2_known_certs_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_known_devices",
                      "lastDataReceivedQuery": "Corelight_v2_known_devices_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_known_domains",
                      "lastDataReceivedQuery": "Corelight_v2_known_domains_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_known_hosts",
                      "lastDataReceivedQuery": "Corelight_v2_known_hosts_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_known_names",
                      "lastDataReceivedQuery": "Corelight_v2_known_names_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_known_remotes",
                      "lastDataReceivedQuery": "Corelight_v2_known_remotes_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_known_services",
                      "lastDataReceivedQuery": "Corelight_v2_known_services_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_known_users",
                      "lastDataReceivedQuery": "Corelight_v2_known_users_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_local_subnets_dj",
                      "lastDataReceivedQuery": "Corelight_v2_local_subnets_dj_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_local_subnets_graphs",
                      "lastDataReceivedQuery": "Corelight_v2_local_subnets_graphs_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_local_subnets",
                      "lastDataReceivedQuery": "Corelight_v2_local_subnets_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_log4shell",
                      "lastDataReceivedQuery": "Corelight_v2_log4shell_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_modbus",
                      "lastDataReceivedQuery": "Corelight_v2_modbus_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_mqtt_connect",
                      "lastDataReceivedQuery": "Corelight_v2_mqtt_connect_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_mqtt_publish",
                      "lastDataReceivedQuery": "Corelight_v2_mqtt_publish_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_mqtt_subscribe",
                      "lastDataReceivedQuery": "Corelight_v2_mqtt_subscribe_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_mysql",
                      "lastDataReceivedQuery": "Corelight_v2_mysql_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_notice",
                      "lastDataReceivedQuery": "Corelight_v2_notice_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_ntlm",
                      "lastDataReceivedQuery": "Corelight_v2_ntlm_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_ntp",
                      "lastDataReceivedQuery": "Corelight_v2_ntp_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_ocsp",
                      "lastDataReceivedQuery": "Corelight_v2_ocsp_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_openflow",
                      "lastDataReceivedQuery": "Corelight_v2_openflow_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_packet_filter",
                      "lastDataReceivedQuery": "Corelight_v2_packet_filter_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_pe",
                      "lastDataReceivedQuery": "Corelight_v2_pe_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_profinet_dce_rpc",
                      "lastDataReceivedQuery": "Corelight_v2_profinet_dce_rpc_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_profinet_debug",
                      "lastDataReceivedQuery": "Corelight_v2_profinet_debug_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_profinet",
                      "lastDataReceivedQuery": "Corelight_v2_profinet_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_radius",
                      "lastDataReceivedQuery": "Corelight_v2_radius_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_rdp",
                      "lastDataReceivedQuery": "Corelight_v2_rdp_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_reporter",
                      "lastDataReceivedQuery": "Corelight_v2_reporter_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_rfb",
                      "lastDataReceivedQuery": "Corelight_v2_rfb_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_s7comm",
                      "lastDataReceivedQuery": "Corelight_v2_s7comm_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_signatures",
                      "lastDataReceivedQuery": "Corelight_v2_signatures_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_sip",
                      "lastDataReceivedQuery": "Corelight_v2_sip_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_smartpcap_stats",
                      "lastDataReceivedQuery": "Corelight_v2_smartpcap_stats_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_smartpcap",
                      "lastDataReceivedQuery": "Corelight_v2_smartpcap_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_smb_files",
                      "lastDataReceivedQuery": "Corelight_v2_smb_files_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_smb_mapping",
                      "lastDataReceivedQuery": "Corelight_v2_smb_mapping_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_smtp_links",
                      "lastDataReceivedQuery": "Corelight_v2_smtp_links_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_smtp",
                      "lastDataReceivedQuery": "Corelight_v2_smtp_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_snmp",
                      "lastDataReceivedQuery": "Corelight_v2_snmp_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_socks",
                      "lastDataReceivedQuery": "Corelight_v2_socks_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_software",
                      "lastDataReceivedQuery": "Corelight_v2_software_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_specific_dns_tunnels",
                      "lastDataReceivedQuery": "Corelight_v2_specific_dns_tunnels_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_ssh",
                      "lastDataReceivedQuery": "Corelight_v2_ssh_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_ssl_red",
                      "lastDataReceivedQuery": "Corelight_v2_ssl_red_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_ssl",
                      "lastDataReceivedQuery": "Corelight_v2_ssl_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_stats",
                      "lastDataReceivedQuery": "Corelight_v2_stats_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_stepping",
                      "lastDataReceivedQuery": "Corelight_v2_stepping_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_stun_nat",
                      "lastDataReceivedQuery": "Corelight_v2_stun_nat_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_stun",
                      "lastDataReceivedQuery": "Corelight_v2_stun_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_suricata_corelight",
                      "lastDataReceivedQuery": "Corelight_v2_suricata_corelight_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_suricata_eve",
                      "lastDataReceivedQuery": "Corelight_v2_suricata_eve_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_suricata_stats",
                      "lastDataReceivedQuery": "Corelight_v2_suricata_stats_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_suricata_zeek_stats",
                      "lastDataReceivedQuery": "Corelight_v2_suricata_zeek_stats_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_syslog",
                      "lastDataReceivedQuery": "Corelight_v2_syslog_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_tds_rpc",
                      "lastDataReceivedQuery": "Corelight_v2_tds_rpc_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_tds_sql_batch",
                      "lastDataReceivedQuery": "Corelight_v2_tds_sql_batch_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_tds",
                      "lastDataReceivedQuery": "Corelight_v2_tds_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_traceroute",
                      "lastDataReceivedQuery": "Corelight_v2_traceroute_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_tunnel",
                      "lastDataReceivedQuery": "Corelight_v2_tunnel_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "Corelight",
                      "lastDataReceivedQuery": "Corelight_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_unknown_smartpcap",
                      "lastDataReceivedQuery": "Corelight_v2_unknown_smartpcap_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_util_stats",
                      "lastDataReceivedQuery": "Corelight_v2_util_stats_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_vpn",
                      "lastDataReceivedQuery": "Corelight_v2_vpn_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_weird_red",
                      "lastDataReceivedQuery": "Corelight_v2_weird_red_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_weird_stats",
                      "lastDataReceivedQuery": "Corelight_v2_weird_stats_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_weird",
                      "lastDataReceivedQuery": "Corelight_v2_weird_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_wireguard",
                      "lastDataReceivedQuery": "Corelight_v2_wireguard_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_x509_red",
                      "lastDataReceivedQuery": "Corelight_v2_x509_red_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_x509",
                      "lastDataReceivedQuery": "Corelight_v2_x509_CL\n\t| summarize Time=max(TimeGenerated)"
                    },
                    {
                      "name": "corelight_zeek_doctor",
                      "lastDataReceivedQuery": "Corelight_v2_zeek_doctor_CL\n\t| summarize Time=max(TimeGenerated)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Corelight\n\t| summarize LastLogReceived = max(TimeGenerated)\n\t| project IsConnected = LastLogReceived > ago(30m)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected [**Corelight**](https://aka.ms/sentinel-Corelight-parser) which is deployed with the Microsoft Sentinel Solution."
                    },
                    {
                      "description": "Contact your TAM, SE, or info@corelight.com to get the files needed for the Microsoft Sentinel integration.",
                      "title": "1. Get the files"
                    },
                    {
                      "description": "Replay sample data to create the needed tables in your Log Analytics workspace.",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId",
                              "PrimaryKey"
                            ],
                            "label": "Send sample data (only needed once per Log Analytics workspace)",
                            "value": "./send_samples.py --workspace-id {0} --workspace-key {1}"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "2. Replay sample data."
                    },
                    {
                      "description": "Install the custom exporter or the logstash container.",
                      "title": "3. Install custom exporter."
                    },
                    {
                      "description": "Using the following values, configure your Corelight Sensor to use the Microsoft Sentinel exporter. Alternatively, you can configure the logstash container with these values and configure your sensor to send JSON over TCP to that container on the appropriate port.",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Primary Workspace Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "4. Configure the Corelight Sensor to send logs to the Azure Log Analytics Agent."
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Corelight Connector Exporter",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Corelight Connector Exporter",
          "publisher": "Corelight",
          "descriptionMarkdown": "The [Corelight](https://corelight.com/) data connector enables incident responders and threat hunters who use Microsoft Sentinel to work faster and more effectively. The data connector enables ingestion of events from [Zeek](https://zeek.org/) and [Suricata](https://suricata-ids.org/) via Corelight Sensors into Microsoft Sentinel.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Corelight_CL",
              "baseQuery": "Corelight"
            }
          ],
          "dataTypes": [
            {
              "name": "corelight_bacnet",
              "lastDataReceivedQuery": "Corelight_v2_bacnet_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_capture_loss",
              "lastDataReceivedQuery": "Corelight_v2_capture_loss_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_cip",
              "lastDataReceivedQuery": "Corelight_v2_cip_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_conn_long",
              "lastDataReceivedQuery": "Corelight_v2_conn_long_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_conn_red",
              "lastDataReceivedQuery": "Corelight_v2_conn_red_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_conn",
              "lastDataReceivedQuery": "Corelight_v2_conn_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_corelight_burst",
              "lastDataReceivedQuery": "Corelight_v2_corelight_burst_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_corelight_overall_capture_loss",
              "lastDataReceivedQuery": "Corelight_v2_corelight_overall_capture_loss_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_corelight_profiling",
              "lastDataReceivedQuery": "Corelight_v2_corelight_profiling_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_datared",
              "lastDataReceivedQuery": "Corelight_v2_datared_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_dce_rpc",
              "lastDataReceivedQuery": "Corelight_v2_dce_rpc_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_dga",
              "lastDataReceivedQuery": "Corelight_v2_dga_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_dhcp",
              "lastDataReceivedQuery": "Corelight_v2_dhcp_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_dnp3",
              "lastDataReceivedQuery": "Corelight_v2_dnp3_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_dns_red",
              "lastDataReceivedQuery": "Corelight_v2_dns_red_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_dns",
              "lastDataReceivedQuery": "Corelight_v2_dns_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_dpd",
              "lastDataReceivedQuery": "Corelight_v2_dpd_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_encrypted_dns",
              "lastDataReceivedQuery": "Corelight_v2_encrypted_dns_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_enip_debug",
              "lastDataReceivedQuery": "Corelight_v2_enip_debug_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_enip_list_identity",
              "lastDataReceivedQuery": "Corelight_v2_enip_list_identity_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_enip",
              "lastDataReceivedQuery": "Corelight_v2_enip_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_etc_viz",
              "lastDataReceivedQuery": "Corelight_v2_etc_viz_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_files_red",
              "lastDataReceivedQuery": "Corelight_v2_files_red_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_files",
              "lastDataReceivedQuery": "Corelight_v2_files_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_ftp",
              "lastDataReceivedQuery": "Corelight_v2_ftp_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_generic_dns_tunnels",
              "lastDataReceivedQuery": "Corelight_v2_generic_dns_tunnels_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_generic_icmp_tunnels",
              "lastDataReceivedQuery": "Corelight_v2_generic_icmp_tunnels_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_http2",
              "lastDataReceivedQuery": "Corelight_v2_http2_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_http_red",
              "lastDataReceivedQuery": "Corelight_v2_http_red_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_http",
              "lastDataReceivedQuery": "Corelight_v2_http_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_icmp_specific_tunnels",
              "lastDataReceivedQuery": "Corelight_v2_icmp_specific_tunnels_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_intel",
              "lastDataReceivedQuery": "Corelight_v2_intel_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_ipsec",
              "lastDataReceivedQuery": "Corelight_v2_ipsec_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_irc",
              "lastDataReceivedQuery": "Corelight_v2_irc_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_iso_cotp",
              "lastDataReceivedQuery": "Corelight_v2_iso_cotp_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_kerberos",
              "lastDataReceivedQuery": "Corelight_v2_kerberos_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_known_certs",
              "lastDataReceivedQuery": "Corelight_v2_known_certs_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_known_devices",
              "lastDataReceivedQuery": "Corelight_v2_known_devices_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_known_domains",
              "lastDataReceivedQuery": "Corelight_v2_known_domains_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_known_hosts",
              "lastDataReceivedQuery": "Corelight_v2_known_hosts_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_known_names",
              "lastDataReceivedQuery": "Corelight_v2_known_names_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_known_remotes",
              "lastDataReceivedQuery": "Corelight_v2_known_remotes_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_known_services",
              "lastDataReceivedQuery": "Corelight_v2_known_services_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_known_users",
              "lastDataReceivedQuery": "Corelight_v2_known_users_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_local_subnets_dj",
              "lastDataReceivedQuery": "Corelight_v2_local_subnets_dj_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_local_subnets_graphs",
              "lastDataReceivedQuery": "Corelight_v2_local_subnets_graphs_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_local_subnets",
              "lastDataReceivedQuery": "Corelight_v2_local_subnets_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_log4shell",
              "lastDataReceivedQuery": "Corelight_v2_log4shell_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_modbus",
              "lastDataReceivedQuery": "Corelight_v2_modbus_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_mqtt_connect",
              "lastDataReceivedQuery": "Corelight_v2_mqtt_connect_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_mqtt_publish",
              "lastDataReceivedQuery": "Corelight_v2_mqtt_publish_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_mqtt_subscribe",
              "lastDataReceivedQuery": "Corelight_v2_mqtt_subscribe_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_mysql",
              "lastDataReceivedQuery": "Corelight_v2_mysql_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_notice",
              "lastDataReceivedQuery": "Corelight_v2_notice_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_ntlm",
              "lastDataReceivedQuery": "Corelight_v2_ntlm_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_ntp",
              "lastDataReceivedQuery": "Corelight_v2_ntp_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_ocsp",
              "lastDataReceivedQuery": "Corelight_v2_ocsp_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_openflow",
              "lastDataReceivedQuery": "Corelight_v2_openflow_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_packet_filter",
              "lastDataReceivedQuery": "Corelight_v2_packet_filter_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_pe",
              "lastDataReceivedQuery": "Corelight_v2_pe_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_profinet_dce_rpc",
              "lastDataReceivedQuery": "Corelight_v2_profinet_dce_rpc_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_profinet_debug",
              "lastDataReceivedQuery": "Corelight_v2_profinet_debug_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_profinet",
              "lastDataReceivedQuery": "Corelight_v2_profinet_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_radius",
              "lastDataReceivedQuery": "Corelight_v2_radius_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_rdp",
              "lastDataReceivedQuery": "Corelight_v2_rdp_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_reporter",
              "lastDataReceivedQuery": "Corelight_v2_reporter_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_rfb",
              "lastDataReceivedQuery": "Corelight_v2_rfb_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_s7comm",
              "lastDataReceivedQuery": "Corelight_v2_s7comm_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_signatures",
              "lastDataReceivedQuery": "Corelight_v2_signatures_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_sip",
              "lastDataReceivedQuery": "Corelight_v2_sip_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_smartpcap_stats",
              "lastDataReceivedQuery": "Corelight_v2_smartpcap_stats_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_smartpcap",
              "lastDataReceivedQuery": "Corelight_v2_smartpcap_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_smb_files",
              "lastDataReceivedQuery": "Corelight_v2_smb_files_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_smb_mapping",
              "lastDataReceivedQuery": "Corelight_v2_smb_mapping_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_smtp_links",
              "lastDataReceivedQuery": "Corelight_v2_smtp_links_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_smtp",
              "lastDataReceivedQuery": "Corelight_v2_smtp_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_snmp",
              "lastDataReceivedQuery": "Corelight_v2_snmp_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_socks",
              "lastDataReceivedQuery": "Corelight_v2_socks_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_software",
              "lastDataReceivedQuery": "Corelight_v2_software_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_specific_dns_tunnels",
              "lastDataReceivedQuery": "Corelight_v2_specific_dns_tunnels_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_ssh",
              "lastDataReceivedQuery": "Corelight_v2_ssh_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_ssl_red",
              "lastDataReceivedQuery": "Corelight_v2_ssl_red_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_ssl",
              "lastDataReceivedQuery": "Corelight_v2_ssl_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_stats",
              "lastDataReceivedQuery": "Corelight_v2_stats_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_stepping",
              "lastDataReceivedQuery": "Corelight_v2_stepping_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_stun_nat",
              "lastDataReceivedQuery": "Corelight_v2_stun_nat_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_stun",
              "lastDataReceivedQuery": "Corelight_v2_stun_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_suricata_corelight",
              "lastDataReceivedQuery": "Corelight_v2_suricata_corelight_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_suricata_eve",
              "lastDataReceivedQuery": "Corelight_v2_suricata_eve_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_suricata_stats",
              "lastDataReceivedQuery": "Corelight_v2_suricata_stats_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_suricata_zeek_stats",
              "lastDataReceivedQuery": "Corelight_v2_suricata_zeek_stats_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_syslog",
              "lastDataReceivedQuery": "Corelight_v2_syslog_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_tds_rpc",
              "lastDataReceivedQuery": "Corelight_v2_tds_rpc_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_tds_sql_batch",
              "lastDataReceivedQuery": "Corelight_v2_tds_sql_batch_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_tds",
              "lastDataReceivedQuery": "Corelight_v2_tds_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_traceroute",
              "lastDataReceivedQuery": "Corelight_v2_traceroute_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_tunnel",
              "lastDataReceivedQuery": "Corelight_v2_tunnel_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "Corelight",
              "lastDataReceivedQuery": "Corelight_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_unknown_smartpcap",
              "lastDataReceivedQuery": "Corelight_v2_unknown_smartpcap_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_util_stats",
              "lastDataReceivedQuery": "Corelight_v2_util_stats_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_vpn",
              "lastDataReceivedQuery": "Corelight_v2_vpn_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_weird_red",
              "lastDataReceivedQuery": "Corelight_v2_weird_red_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_weird_stats",
              "lastDataReceivedQuery": "Corelight_v2_weird_stats_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_weird",
              "lastDataReceivedQuery": "Corelight_v2_weird_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_wireguard",
              "lastDataReceivedQuery": "Corelight_v2_wireguard_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_x509_red",
              "lastDataReceivedQuery": "Corelight_v2_x509_red_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_x509",
              "lastDataReceivedQuery": "Corelight_v2_x509_CL\n\t| summarize Time=max(TimeGenerated)"
            },
            {
              "name": "corelight_zeek_doctor",
              "lastDataReceivedQuery": "Corelight_v2_zeek_doctor_CL\n\t| summarize Time=max(TimeGenerated)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "Corelight\n\t| summarize LastLogReceived = max(TimeGenerated)\n\t| project IsConnected = LastLogReceived > ago(30m)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Top 10 Clients (Source IP)",
              "query": "Corelight\n\t| summarize count() by id_orig_h\n\t| top 10 by count_"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected [**Corelight**](https://aka.ms/sentinel-Corelight-parser) which is deployed with the Microsoft Sentinel Solution."
            },
            {
              "description": "Contact your TAM, SE, or info@corelight.com to get the files needed for the Microsoft Sentinel integration.",
              "title": "1. Get the files"
            },
            {
              "description": "Replay sample data to create the needed tables in your Log Analytics workspace.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId",
                      "PrimaryKey"
                    ],
                    "label": "Send sample data (only needed once per Log Analytics workspace)",
                    "value": "./send_samples.py --workspace-id {0} --workspace-key {1}"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "2. Replay sample data."
            },
            {
              "description": "Install the custom exporter or the logstash container.",
              "title": "3. Install custom exporter."
            },
            {
              "description": "Using the following values, configure your Corelight Sensor to use the Microsoft Sentinel exporter. Alternatively, you can configure the logstash container with these values and configure your sensor to send JSON over TCP to that container on the appropriate port.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Workspace Key"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "4. Configure the Corelight Sensor to send logs to the Azure Log Analytics Agent."
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected [**Corelight**](https://aka.ms/sentinel-Corelight-parser) which is deployed with the Microsoft Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Corelight Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Corelight",
                "query": "let Corelight_v = view () {\nunion isfuzzy=true corelight_x509, corelight_syslog, corelight_log4shell, corelight_smtp_links, corelight_zeek_doctor, corelight_ssl_red, corelight_known_names, corelight_smb_mapping, corelight_suricata_eve, corelight_files_red, corelight_known_domains, corelight_known_hosts, corelight_openflow, corelight_etc_viz, corelight_mqtt_connect, corelight_corelight_overall_capture_loss, corelight_generic_icmp_tunnels, corelight_smartpcap_stats, corelight_socks, corelight_pe, corelight_suricata_zeek_stats, corelight_weird_red, corelight_profinet_debug, corelight_specific_dns_tunnels, corelight_profinet, corelight_smartpcap, corelight_profinet_dce_rpc, corelight_radius, corelight_smb_files, corelight_known_devices, corelight_mysql, corelight_http, corelight_ssh, corelight_weird, corelight_datared, corelight_conn_red, corelight_mqtt_subscribe, corelight_rdp, corelight_stepping, corelight_local_subnets_graphs, corelight_software, corelight_signatures, corelight_notice, corelight_known_users, corelight_stats, corelight_wireguard, corelight_tunnel, corelight_intel, corelight_files, corelight_generic_dns_tunnels, corelight_bacnet, corelight_known_certs, corelight_dns_red, corelight_http2, corelight_modbus, corelight_dga, corelight_conn_long, corelight_dpd, corelight_ssl, corelight_conn, corelight_capture_loss, corelight_irc, corelight_local_subnets_dj, corelight_enip, corelight_enip_list_identity, corelight_iso_cotp, corelight_suricata_stats, corelight_cip, corelight_rfb, corelight_ntlm, corelight_ftp, corelight_sip, corelight_local_subnets, corelight_suricata_corelight, corelight_icmp_specific_tunnels, corelight_weird_stats, corelight_tds, corelight_stun, corelight_snmp, corelight_known_services, corelight_mqtt_publish, corelight_http_red, corelight_dhcp, corelight_encrypted_dns, corelight_ocsp, corelight_ipsec, corelight_known_remotes, corelight_smtp, corelight_unknown_smartpcap, corelight_s7comm, corelight_dce_rpc, corelight_util_stats, corelight_x509_red, corelight_dnp3, corelight_corelight_profiling, corelight_ntp, corelight_dns, corelight_packet_filter, corelight_traceroute, corelight_tds_rpc, corelight_corelight_burst, corelight_tds_sql_batch, corelight_vpn, corelight_reporter, corelight_stun_nat, corelight_enip_debug, corelight_kerberos\n};\nCorelight_v",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Corelight')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Corelight parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Corelight parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Corelight",
        "query": "let Corelight_v = view () {\nunion isfuzzy=true corelight_x509, corelight_syslog, corelight_log4shell, corelight_smtp_links, corelight_zeek_doctor, corelight_ssl_red, corelight_known_names, corelight_smb_mapping, corelight_suricata_eve, corelight_files_red, corelight_known_domains, corelight_known_hosts, corelight_openflow, corelight_etc_viz, corelight_mqtt_connect, corelight_corelight_overall_capture_loss, corelight_generic_icmp_tunnels, corelight_smartpcap_stats, corelight_socks, corelight_pe, corelight_suricata_zeek_stats, corelight_weird_red, corelight_profinet_debug, corelight_specific_dns_tunnels, corelight_profinet, corelight_smartpcap, corelight_profinet_dce_rpc, corelight_radius, corelight_smb_files, corelight_known_devices, corelight_mysql, corelight_http, corelight_ssh, corelight_weird, corelight_datared, corelight_conn_red, corelight_mqtt_subscribe, corelight_rdp, corelight_stepping, corelight_local_subnets_graphs, corelight_software, corelight_signatures, corelight_notice, corelight_known_users, corelight_stats, corelight_wireguard, corelight_tunnel, corelight_intel, corelight_files, corelight_generic_dns_tunnels, corelight_bacnet, corelight_known_certs, corelight_dns_red, corelight_http2, corelight_modbus, corelight_dga, corelight_conn_long, corelight_dpd, corelight_ssl, corelight_conn, corelight_capture_loss, corelight_irc, corelight_local_subnets_dj, corelight_enip, corelight_enip_list_identity, corelight_iso_cotp, corelight_suricata_stats, corelight_cip, corelight_rfb, corelight_ntlm, corelight_ftp, corelight_sip, corelight_local_subnets, corelight_suricata_corelight, corelight_icmp_specific_tunnels, corelight_weird_stats, corelight_tds, corelight_stun, corelight_snmp, corelight_known_services, corelight_mqtt_publish, corelight_http_red, corelight_dhcp, corelight_encrypted_dns, corelight_ocsp, corelight_ipsec, corelight_known_remotes, corelight_smtp, corelight_unknown_smartpcap, corelight_s7comm, corelight_dce_rpc, corelight_util_stats, corelight_x509_red, corelight_dnp3, corelight_corelight_profiling, corelight_ntp, corelight_dns, corelight_packet_filter, corelight_traceroute, corelight_tds_rpc, corelight_corelight_burst, corelight_tds_sql_batch, corelight_vpn, corelight_reporter, corelight_stun_nat, corelight_enip_debug, corelight_kerberos\n};\nCorelight_v",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Corelight')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_bacnet Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_bacnet parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_bacnet",
                "query": "let corelight_bacnet = view () {\n    Corelight_v2_bacnet_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        bvlc_function=bvlc_function_s,\n        bvlc_len=bvlc_len_d,\n        apdu_type=apdu_type_s,\n        service_choice=service_choice_s,\n        data=data_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"bacnet\",\n        ts=TimeGenerated\n};\ncorelight_bacnet\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_bacnet')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "corelight_bacnet parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_bacnet parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_bacnet",
        "query": "let corelight_bacnet = view () {\n    Corelight_v2_bacnet_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        bvlc_function=bvlc_function_s,\n        bvlc_len=bvlc_len_d,\n        apdu_type=apdu_type_s,\n        service_choice=service_choice_s,\n        data=data_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"bacnet\",\n        ts=TimeGenerated\n};\ncorelight_bacnet\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_bacnet')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject3').parserTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_capture_loss Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject3').parserVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject3')._parserName3]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_capture_loss parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_capture_loss",
                "query": "let corelight_capture_loss = view () {\n    Corelight_v2_capture_loss_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        ts_delta=ts_delta_d,\n        peer=peer_s,\n        gaps=gaps_d,\n        acks=acks_d,\n        percent_lost=percent_lost_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"capture_loss\",\n        ts=TimeGenerated\n};\ncorelight_capture_loss\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
              "dependsOn": [
                "[variables('parserObject3')._parserId3]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_capture_loss')]",
                "contentId": "[variables('parserObject3').parserContentId3]",
                "kind": "Parser",
                "version": "[variables('parserObject3').parserVersion3]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "contentKind": "Parser",
        "displayName": "corelight_capture_loss parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "version": "[variables('parserObject3').parserVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject3')._parserName3]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_capture_loss parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_capture_loss",
        "query": "let corelight_capture_loss = view () {\n    Corelight_v2_capture_loss_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        ts_delta=ts_delta_d,\n        peer=peer_s,\n        gaps=gaps_d,\n        acks=acks_d,\n        percent_lost=percent_lost_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"capture_loss\",\n        ts=TimeGenerated\n};\ncorelight_capture_loss\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
      "dependsOn": [
        "[variables('parserObject3')._parserId3]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_capture_loss')]",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "kind": "Parser",
        "version": "[variables('parserObject3').parserVersion3]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject4').parserTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_cip Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject4').parserVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject4')._parserName4]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_cip parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_cip",
                "query": "let corelight_cip = view () {\n    Corelight_v2_cip_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        service=service_s,\n        status=status_s,\n        tags=tags_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"cip\",\n        ts=TimeGenerated\n};\ncorelight_cip\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
              "dependsOn": [
                "[variables('parserObject4')._parserId4]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_cip')]",
                "contentId": "[variables('parserObject4').parserContentId4]",
                "kind": "Parser",
                "version": "[variables('parserObject4').parserVersion4]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "contentKind": "Parser",
        "displayName": "corelight_cip parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "version": "[variables('parserObject4').parserVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject4')._parserName4]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_cip parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_cip",
        "query": "let corelight_cip = view () {\n    Corelight_v2_cip_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        service=service_s,\n        status=status_s,\n        tags=tags_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"cip\",\n        ts=TimeGenerated\n};\ncorelight_cip\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
      "dependsOn": [
        "[variables('parserObject4')._parserId4]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_cip')]",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "kind": "Parser",
        "version": "[variables('parserObject4').parserVersion4]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject5').parserTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_conn Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject5').parserVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject5')._parserName5]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_conn parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_conn",
                "query": "let ConnStateLookup = datatable(\n    conn_state: string,\n    conn_state_desc: string,\n    action: string\n)[\n    \"S0\",\"Connection attempt seen, no reply.\",\"teardown\",\n    \"S1\",\"Connection established, not terminated.\",\"allowed\",\n    \"SF\",\"Normal establishment and termination.\",\"allowed\",\n    \"REJ\",\"Connection attempt rejected.\",\"blocked\",\n    \"S2\",\"Connection established and close attempt by originator seen (but no reply from responder).\",\"allowed\",\n    \"S3\",\"Connection established and close attempt by responder seen (but no reply from originator).\",\"allowed\",\n    \"RSTO\",\"Connection established, originator aborted (sent a RST).\",\"allowed\",\n    \"RSTR\",\"Established, responder aborted.\",\"allowed\",\n    \"RSTOS0\",\"Originator sent a SYN followed by a RST, we never saw a SYN-ACK from the responder.\",\"teardown\",\n    \"RSTRH\",\"Responder sent a SYN ACK followed by a RST, we never saw a SYN from the (purported) originator.\",\"teardown\",\n    \"SH\",\"Originator sent a SYN followed by a FIN, we never saw a SYN ACK from the responder (hence the connection was 'half' open).\",\"teardown\",\n    \"SHR\",\"Responder sent a SYN ACK followed by a FIN, we never saw a SYN from the originator.\",\"teardown\",\n    \"OTH\",\"No SYN seen, just midstream traffic (a 'partial connection' that was not later closed).\",\"allowed\"\n];\nlet dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_conn = view () {\n    union isfuzzy=true dummy_table,\n    Corelight_v2_conn_CL,\n    Corelight_v2_conn_red_CL,\n    Corelight_v2_conn_long_CL\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | extend \n        path=column_ifexists(\"_path_s\", \"\"),\n        system_name=column_ifexists(\"_system_name_s\", \"\"),\n        write_ts=column_ifexists(\"_write_ts_t\", \"\"),\n        uid=column_ifexists(\"uid_s\", \"\"),\n        id_orig_h=column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p=column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h=column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p=column_ifexists(\"id_resp_p_d\", real(null)),\n        proto=column_ifexists(\"proto_s\", \"\"),\n        service=column_ifexists(\"service_s\", \"\"),\n        duration=column_ifexists(\"duration_d\", real(null)),\n        orig_bytes=column_ifexists(\"orig_bytes_d\", real(null)),\n        resp_bytes=column_ifexists(\"resp_bytes_d\", real(null)),\n        conn_state=column_ifexists(\"conn_state_s\", \"\"),\n        local_orig=column_ifexists(\"local_orig_b\", \"\"),\n        local_resp=column_ifexists(\"local_resp_b\", \"\"),\n        missed_bytes=column_ifexists(\"missed_bytes_d\", real(null)),\n        history=column_ifexists(\"history_s\", \"\"),\n        orig_pkts=column_ifexists(\"orig_pkts_d\", real(null)),\n        orig_ip_bytes=column_ifexists(\"orig_ip_bytes_d\", real(null)),\n        resp_pkts=column_ifexists(\"resp_pkts_d\", real(null)),\n        resp_ip_bytes=column_ifexists(\"resp_ip_bytes_d\", real(null)),\n        tunnel_parents=column_ifexists(\"tunnel_parents_s\", \"\"),\n        orig_cc=column_ifexists(\"orig_cc_s\", \"\"),\n        resp_cc=column_ifexists(\"resp_cc_s\", \"\"),\n        suri_ids=column_ifexists(\"suri_ids_s\", \"\"),\n        spcap_url=column_ifexists(\"spcap_url_s\", \"\"),\n        spcap_rule=column_ifexists(\"spcap_rule_d\", real(null)),\n        spcap_trigger=column_ifexists(\"spcap_trigger_s\", \"\"),\n        apps=column_ifexists(\"app_s\", \"\"),\n        corelight_shunted=column_ifexists(\"corelight_shunted_b\", \"\"),\n        orig_shunted_pkts=column_ifexists(\"orig_shunted_pkts_d\", real(null)),\n        orig_shunted_bytes=column_ifexists(\"orig_shunted_bytes_d\", real(null)),\n        resp_shunted_pkts=column_ifexists(\"resp_shunted_pkts_d\", real(null)),\n        resp_shunted_bytes=column_ifexists(\"resp_shunted_bytes_d\", real(null)),\n        orig_l2_addr=column_ifexists(\"orig_l2_addr_s\", \"\"),\n        resp_l2_addr=column_ifexists(\"resp_l2_addr_s\",\"\"),\n        id_orig_h_n_src=column_ifexists(\"id_orig_h_n_src_s\",\"\"),\n        id_orig_h_n_vals=column_ifexists(\"id_orig_h_n_vals_s\",\"\"),\n        id_resp_h_n_src=column_ifexists(\"id_resp_h_n_src_s\",\"\"),\n        id_resp_h_n_vals=column_ifexists(\"id_resp_h_n_vals_s\",\"\"),\n        vlan=column_ifexists(\"vlan_d\", real(null)),\n        inner_vlan=column_ifexists(\"inner_vlan_d\", real(null)),\n        community_id=column_ifexists(\"community_id_s\",\"\"),\n        pcr=column_ifexists(\"pcr_d\", real(null)),\n        id_vlan=column_ifexists(\"id_vlan_d\", real(null)),\n        packets=column_ifexists(\"packets_d\", real(null))\n    | lookup ConnStateLookup on conn_state\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"conn\",\n        ts=TimeGenerated,\n        src=id_orig_h,\n        src_ip=id_orig_h,\n        src_port=id_orig_p,\n        dest=id_resp_h,\n        dest_ip=id_resp_h,\n        dest_port=id_resp_p,\n        bytes_out=orig_ip_bytes,\n        src_mac=orig_l2_addr,\n        dvc=orig_l2_addr,\n        packets_out=orig_pkts,\n        bytes_in=resp_ip_bytes,\n        dest_mac=resp_l2_addr,\n        dst_mac=resp_l2_addr,\n        packets_in=resp_pkts,\n        session_id=uid,\n        src_country=orig_cc,\n        dest_country=resp_cc,\n        bytes=resp_ip_bytes + orig_ip_bytes,\n        sensor_name = coalesce(system_name, \"unknown\"),\n        transport=iff(proto=='icmp' and id_orig_h matches regex \".*:.*\", \"icmp6\", proto),\n        app=split(service, \",\")\n    | extend \n        is_broadcast = iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        direction=case(local_orig==\"true\" and local_resp==\"true\", \"internal\", local_orig==\"true\" and local_resp==\"false\", \"outbound\", local_orig==\"false\" and local_resp==\"false\", \"external\", local_orig==\"false\" and local_resp==\"true\", \"inbound\", \"unknown\"),\n        packets=coalesce(toreal(packets), packets_in+packets_out)\n    | project \n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        uid,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        proto,\n        service,\n        duration,\n        orig_bytes,\n        resp_bytes,\n        conn_state,\n        local_orig,\n        local_resp,\n        missed_bytes,\n        history,\n        orig_pkts,\n        orig_ip_bytes,\n        resp_pkts,\n        resp_ip_bytes,\n        tunnel_parents,\n        orig_cc,\n        resp_cc,\n        suri_ids,\n        spcap_url,\n        spcap_rule,\n        spcap_trigger,\n        apps,\n        corelight_shunted,\n        orig_shunted_pkts,\n        orig_shunted_bytes,\n        resp_shunted_pkts,\n        resp_shunted_bytes,\n        orig_l2_addr,\n        resp_l2_addr,\n        id_orig_h_n_src,\n        id_orig_h_n_vals,\n        id_resp_h_n_src,\n        id_resp_h_n_vals,\n        vlan,\n        inner_vlan,\n        community_id,\n        pcr,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        bytes_out,\n        src_mac,\n        dvc,\n        packets_out,\n        bytes_in,\n        dest_mac,\n        dst_mac,\n        packets_in,\n        session_id,\n        src_country,\n        dest_country,\n        bytes,\n        sensor_name,\n        is_broadcast,\n        is_src_internal_ip,\n        is_dest_internal_ip,\n        direction,\n        id_vlan,\n        packets,\n        transport,\n        app,\n        conn_state_desc,\n        action\n};\ncorelight_conn\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject5')._parserId5,'/'))))]",
              "dependsOn": [
                "[variables('parserObject5')._parserId5]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_conn')]",
                "contentId": "[variables('parserObject5').parserContentId5]",
                "kind": "Parser",
                "version": "[variables('parserObject5').parserVersion5]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject5').parserContentId5]",
        "contentKind": "Parser",
        "displayName": "corelight_conn parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject5').parserContentId5,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject5').parserContentId5,'-', '1.1.0')))]",
        "version": "[variables('parserObject5').parserVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject5')._parserName5]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_conn parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_conn",
        "query": "let ConnStateLookup = datatable(\n    conn_state: string,\n    conn_state_desc: string,\n    action: string\n)[\n    \"S0\",\"Connection attempt seen, no reply.\",\"teardown\",\n    \"S1\",\"Connection established, not terminated.\",\"allowed\",\n    \"SF\",\"Normal establishment and termination.\",\"allowed\",\n    \"REJ\",\"Connection attempt rejected.\",\"blocked\",\n    \"S2\",\"Connection established and close attempt by originator seen (but no reply from responder).\",\"allowed\",\n    \"S3\",\"Connection established and close attempt by responder seen (but no reply from originator).\",\"allowed\",\n    \"RSTO\",\"Connection established, originator aborted (sent a RST).\",\"allowed\",\n    \"RSTR\",\"Established, responder aborted.\",\"allowed\",\n    \"RSTOS0\",\"Originator sent a SYN followed by a RST, we never saw a SYN-ACK from the responder.\",\"teardown\",\n    \"RSTRH\",\"Responder sent a SYN ACK followed by a RST, we never saw a SYN from the (purported) originator.\",\"teardown\",\n    \"SH\",\"Originator sent a SYN followed by a FIN, we never saw a SYN ACK from the responder (hence the connection was 'half' open).\",\"teardown\",\n    \"SHR\",\"Responder sent a SYN ACK followed by a FIN, we never saw a SYN from the originator.\",\"teardown\",\n    \"OTH\",\"No SYN seen, just midstream traffic (a 'partial connection' that was not later closed).\",\"allowed\"\n];\nlet dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_conn = view () {\n    union isfuzzy=true dummy_table,\n    Corelight_v2_conn_CL,\n    Corelight_v2_conn_red_CL,\n    Corelight_v2_conn_long_CL\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | extend \n        path=column_ifexists(\"_path_s\", \"\"),\n        system_name=column_ifexists(\"_system_name_s\", \"\"),\n        write_ts=column_ifexists(\"_write_ts_t\", \"\"),\n        uid=column_ifexists(\"uid_s\", \"\"),\n        id_orig_h=column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p=column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h=column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p=column_ifexists(\"id_resp_p_d\", real(null)),\n        proto=column_ifexists(\"proto_s\", \"\"),\n        service=column_ifexists(\"service_s\", \"\"),\n        duration=column_ifexists(\"duration_d\", real(null)),\n        orig_bytes=column_ifexists(\"orig_bytes_d\", real(null)),\n        resp_bytes=column_ifexists(\"resp_bytes_d\", real(null)),\n        conn_state=column_ifexists(\"conn_state_s\", \"\"),\n        local_orig=column_ifexists(\"local_orig_b\", \"\"),\n        local_resp=column_ifexists(\"local_resp_b\", \"\"),\n        missed_bytes=column_ifexists(\"missed_bytes_d\", real(null)),\n        history=column_ifexists(\"history_s\", \"\"),\n        orig_pkts=column_ifexists(\"orig_pkts_d\", real(null)),\n        orig_ip_bytes=column_ifexists(\"orig_ip_bytes_d\", real(null)),\n        resp_pkts=column_ifexists(\"resp_pkts_d\", real(null)),\n        resp_ip_bytes=column_ifexists(\"resp_ip_bytes_d\", real(null)),\n        tunnel_parents=column_ifexists(\"tunnel_parents_s\", \"\"),\n        orig_cc=column_ifexists(\"orig_cc_s\", \"\"),\n        resp_cc=column_ifexists(\"resp_cc_s\", \"\"),\n        suri_ids=column_ifexists(\"suri_ids_s\", \"\"),\n        spcap_url=column_ifexists(\"spcap_url_s\", \"\"),\n        spcap_rule=column_ifexists(\"spcap_rule_d\", real(null)),\n        spcap_trigger=column_ifexists(\"spcap_trigger_s\", \"\"),\n        apps=column_ifexists(\"app_s\", \"\"),\n        corelight_shunted=column_ifexists(\"corelight_shunted_b\", \"\"),\n        orig_shunted_pkts=column_ifexists(\"orig_shunted_pkts_d\", real(null)),\n        orig_shunted_bytes=column_ifexists(\"orig_shunted_bytes_d\", real(null)),\n        resp_shunted_pkts=column_ifexists(\"resp_shunted_pkts_d\", real(null)),\n        resp_shunted_bytes=column_ifexists(\"resp_shunted_bytes_d\", real(null)),\n        orig_l2_addr=column_ifexists(\"orig_l2_addr_s\", \"\"),\n        resp_l2_addr=column_ifexists(\"resp_l2_addr_s\",\"\"),\n        id_orig_h_n_src=column_ifexists(\"id_orig_h_n_src_s\",\"\"),\n        id_orig_h_n_vals=column_ifexists(\"id_orig_h_n_vals_s\",\"\"),\n        id_resp_h_n_src=column_ifexists(\"id_resp_h_n_src_s\",\"\"),\n        id_resp_h_n_vals=column_ifexists(\"id_resp_h_n_vals_s\",\"\"),\n        vlan=column_ifexists(\"vlan_d\", real(null)),\n        inner_vlan=column_ifexists(\"inner_vlan_d\", real(null)),\n        community_id=column_ifexists(\"community_id_s\",\"\"),\n        pcr=column_ifexists(\"pcr_d\", real(null)),\n        id_vlan=column_ifexists(\"id_vlan_d\", real(null)),\n        packets=column_ifexists(\"packets_d\", real(null))\n    | lookup ConnStateLookup on conn_state\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"conn\",\n        ts=TimeGenerated,\n        src=id_orig_h,\n        src_ip=id_orig_h,\n        src_port=id_orig_p,\n        dest=id_resp_h,\n        dest_ip=id_resp_h,\n        dest_port=id_resp_p,\n        bytes_out=orig_ip_bytes,\n        src_mac=orig_l2_addr,\n        dvc=orig_l2_addr,\n        packets_out=orig_pkts,\n        bytes_in=resp_ip_bytes,\n        dest_mac=resp_l2_addr,\n        dst_mac=resp_l2_addr,\n        packets_in=resp_pkts,\n        session_id=uid,\n        src_country=orig_cc,\n        dest_country=resp_cc,\n        bytes=resp_ip_bytes + orig_ip_bytes,\n        sensor_name = coalesce(system_name, \"unknown\"),\n        transport=iff(proto=='icmp' and id_orig_h matches regex \".*:.*\", \"icmp6\", proto),\n        app=split(service, \",\")\n    | extend \n        is_broadcast = iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        direction=case(local_orig==\"true\" and local_resp==\"true\", \"internal\", local_orig==\"true\" and local_resp==\"false\", \"outbound\", local_orig==\"false\" and local_resp==\"false\", \"external\", local_orig==\"false\" and local_resp==\"true\", \"inbound\", \"unknown\"),\n        packets=coalesce(toreal(packets), packets_in+packets_out)\n    | project \n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        uid,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        proto,\n        service,\n        duration,\n        orig_bytes,\n        resp_bytes,\n        conn_state,\n        local_orig,\n        local_resp,\n        missed_bytes,\n        history,\n        orig_pkts,\n        orig_ip_bytes,\n        resp_pkts,\n        resp_ip_bytes,\n        tunnel_parents,\n        orig_cc,\n        resp_cc,\n        suri_ids,\n        spcap_url,\n        spcap_rule,\n        spcap_trigger,\n        apps,\n        corelight_shunted,\n        orig_shunted_pkts,\n        orig_shunted_bytes,\n        resp_shunted_pkts,\n        resp_shunted_bytes,\n        orig_l2_addr,\n        resp_l2_addr,\n        id_orig_h_n_src,\n        id_orig_h_n_vals,\n        id_resp_h_n_src,\n        id_resp_h_n_vals,\n        vlan,\n        inner_vlan,\n        community_id,\n        pcr,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        bytes_out,\n        src_mac,\n        dvc,\n        packets_out,\n        bytes_in,\n        dest_mac,\n        dst_mac,\n        packets_in,\n        session_id,\n        src_country,\n        dest_country,\n        bytes,\n        sensor_name,\n        is_broadcast,\n        is_src_internal_ip,\n        is_dest_internal_ip,\n        direction,\n        id_vlan,\n        packets,\n        transport,\n        app,\n        conn_state_desc,\n        action\n};\ncorelight_conn\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject5')._parserId5,'/'))))]",
      "dependsOn": [
        "[variables('parserObject5')._parserId5]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_conn')]",
        "contentId": "[variables('parserObject5').parserContentId5]",
        "kind": "Parser",
        "version": "[variables('parserObject5').parserVersion5]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject6').parserTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_conn_long Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject6').parserVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject6')._parserName6]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_conn_long parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_conn_long",
                "query": "let corelight_conn_long = view () {\n    Corelight_v2_conn_long_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        service=service_s,\n        duration=duration_d,\n        orig_bytes=orig_bytes_d,\n        resp_bytes=resp_bytes_d,\n        conn_state=conn_state_s,\n        local_orig=local_orig_b,\n        local_resp=local_resp_b,\n        missed_bytes=missed_bytes_d,\n        history=history_s,\n        orig_pkts=orig_pkts_d,\n        orig_ip_bytes=orig_ip_bytes_d,\n        resp_pkts=resp_pkts_d,\n        resp_ip_bytes=resp_ip_bytes_d,\n        tunnel_parents=tunnel_parents_s,\n        orig_cc=orig_cc_s,\n        resp_cc=resp_cc_s,\n        suri_ids=suri_ids_s,\n        spcap_url=spcap_url_s,\n        spcap_rule=spcap_rule_d,\n        spcap_trigger=spcap_trigger_s,\n        app=app_s,\n        corelight_shunted=corelight_shunted_b,\n        orig_shunted_pkts=orig_shunted_pkts_d,\n        orig_shunted_bytes=orig_shunted_bytes_d,\n        resp_shunted_pkts=resp_shunted_pkts_d,\n        resp_shunted_bytes=resp_shunted_bytes_d,\n        orig_l2_addr=orig_l2_addr_s,\n        resp_l2_addr=resp_l2_addr_s,\n        id_orig_h_n_src=id_orig_h_n_src_s,\n        id_orig_h_n_vals=id_orig_h_n_vals_s,\n        id_resp_h_n_src=id_resp_h_n_src_s,\n        id_resp_h_n_vals=id_resp_h_n_vals_s,\n        vlan=vlan_d,\n        inner_vlan=inner_vlan_d,\n        community_id=community_id_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"conn_long\",\n        ts=TimeGenerated\n};\ncorelight_conn_long\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject6')._parserId6,'/'))))]",
              "dependsOn": [
                "[variables('parserObject6')._parserId6]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_conn_long')]",
                "contentId": "[variables('parserObject6').parserContentId6]",
                "kind": "Parser",
                "version": "[variables('parserObject6').parserVersion6]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject6').parserContentId6]",
        "contentKind": "Parser",
        "displayName": "corelight_conn_long parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject6').parserContentId6,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject6').parserContentId6,'-', '1.0.0')))]",
        "version": "[variables('parserObject6').parserVersion6]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject6')._parserName6]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_conn_long parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_conn_long",
        "query": "let corelight_conn_long = view () {\n    Corelight_v2_conn_long_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        service=service_s,\n        duration=duration_d,\n        orig_bytes=orig_bytes_d,\n        resp_bytes=resp_bytes_d,\n        conn_state=conn_state_s,\n        local_orig=local_orig_b,\n        local_resp=local_resp_b,\n        missed_bytes=missed_bytes_d,\n        history=history_s,\n        orig_pkts=orig_pkts_d,\n        orig_ip_bytes=orig_ip_bytes_d,\n        resp_pkts=resp_pkts_d,\n        resp_ip_bytes=resp_ip_bytes_d,\n        tunnel_parents=tunnel_parents_s,\n        orig_cc=orig_cc_s,\n        resp_cc=resp_cc_s,\n        suri_ids=suri_ids_s,\n        spcap_url=spcap_url_s,\n        spcap_rule=spcap_rule_d,\n        spcap_trigger=spcap_trigger_s,\n        app=app_s,\n        corelight_shunted=corelight_shunted_b,\n        orig_shunted_pkts=orig_shunted_pkts_d,\n        orig_shunted_bytes=orig_shunted_bytes_d,\n        resp_shunted_pkts=resp_shunted_pkts_d,\n        resp_shunted_bytes=resp_shunted_bytes_d,\n        orig_l2_addr=orig_l2_addr_s,\n        resp_l2_addr=resp_l2_addr_s,\n        id_orig_h_n_src=id_orig_h_n_src_s,\n        id_orig_h_n_vals=id_orig_h_n_vals_s,\n        id_resp_h_n_src=id_resp_h_n_src_s,\n        id_resp_h_n_vals=id_resp_h_n_vals_s,\n        vlan=vlan_d,\n        inner_vlan=inner_vlan_d,\n        community_id=community_id_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"conn_long\",\n        ts=TimeGenerated\n};\ncorelight_conn_long\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject6')._parserId6,'/'))))]",
      "dependsOn": [
        "[variables('parserObject6')._parserId6]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_conn_long')]",
        "contentId": "[variables('parserObject6').parserContentId6]",
        "kind": "Parser",
        "version": "[variables('parserObject6').parserVersion6]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject7').parserTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_conn_red Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject7').parserVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject7')._parserName7]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_conn_red parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_conn_red",
                "query": "let corelight_conn_red = view () {\n    Corelight_v2_conn_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        service=service_s,\n        duration=duration_d,\n        orig_bytes=orig_bytes_d,\n        resp_bytes=resp_bytes_d,\n        conn_state=conn_state_s,\n        local_orig=local_orig_b,\n        local_resp=local_resp_b,\n        missed_bytes=missed_bytes_d,\n        history=history_s,\n        orig_pkts=orig_pkts_d,\n        orig_ip_bytes=orig_ip_bytes_d,\n        resp_pkts=resp_pkts_d,\n        resp_ip_bytes=resp_ip_bytes_d,\n        tunnel_parents=tunnel_parents_s,\n        orig_cc=orig_cc_s,\n        resp_cc=resp_cc_s,\n        suri_ids=suri_ids_s,\n        spcap_url=spcap_url_s,\n        spcap_rule=spcap_rule_d,\n        spcap_trigger=spcap_trigger_s,\n        app=app_s,\n        corelight_shunted=corelight_shunted_b,\n        orig_shunted_pkts=orig_shunted_pkts_d,\n        orig_shunted_bytes=orig_shunted_bytes_d,\n        resp_shunted_pkts=resp_shunted_pkts_d,\n        resp_shunted_bytes=resp_shunted_bytes_d,\n        orig_l2_addr=orig_l2_addr_s,\n        resp_l2_addr=resp_l2_addr_s,\n        id_orig_h_n_src=id_orig_h_n_src_s,\n        id_orig_h_n_vals=id_orig_h_n_vals_s,\n        id_resp_h_n_src=id_resp_h_n_src_s,\n        id_resp_h_n_vals=id_resp_h_n_vals_s,\n        vlan=vlan_d,\n        inner_vlan=inner_vlan_d,\n        community_id=community_id_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"conn_red\",\n        ts=TimeGenerated\n};\ncorelight_conn_red\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject7')._parserId7,'/'))))]",
              "dependsOn": [
                "[variables('parserObject7')._parserId7]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_conn_red')]",
                "contentId": "[variables('parserObject7').parserContentId7]",
                "kind": "Parser",
                "version": "[variables('parserObject7').parserVersion7]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject7').parserContentId7]",
        "contentKind": "Parser",
        "displayName": "corelight_conn_red parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject7').parserContentId7,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject7').parserContentId7,'-', '1.0.0')))]",
        "version": "[variables('parserObject7').parserVersion7]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject7')._parserName7]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_conn_red parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_conn_red",
        "query": "let corelight_conn_red = view () {\n    Corelight_v2_conn_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        service=service_s,\n        duration=duration_d,\n        orig_bytes=orig_bytes_d,\n        resp_bytes=resp_bytes_d,\n        conn_state=conn_state_s,\n        local_orig=local_orig_b,\n        local_resp=local_resp_b,\n        missed_bytes=missed_bytes_d,\n        history=history_s,\n        orig_pkts=orig_pkts_d,\n        orig_ip_bytes=orig_ip_bytes_d,\n        resp_pkts=resp_pkts_d,\n        resp_ip_bytes=resp_ip_bytes_d,\n        tunnel_parents=tunnel_parents_s,\n        orig_cc=orig_cc_s,\n        resp_cc=resp_cc_s,\n        suri_ids=suri_ids_s,\n        spcap_url=spcap_url_s,\n        spcap_rule=spcap_rule_d,\n        spcap_trigger=spcap_trigger_s,\n        app=app_s,\n        corelight_shunted=corelight_shunted_b,\n        orig_shunted_pkts=orig_shunted_pkts_d,\n        orig_shunted_bytes=orig_shunted_bytes_d,\n        resp_shunted_pkts=resp_shunted_pkts_d,\n        resp_shunted_bytes=resp_shunted_bytes_d,\n        orig_l2_addr=orig_l2_addr_s,\n        resp_l2_addr=resp_l2_addr_s,\n        id_orig_h_n_src=id_orig_h_n_src_s,\n        id_orig_h_n_vals=id_orig_h_n_vals_s,\n        id_resp_h_n_src=id_resp_h_n_src_s,\n        id_resp_h_n_vals=id_resp_h_n_vals_s,\n        vlan=vlan_d,\n        inner_vlan=inner_vlan_d,\n        community_id=community_id_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"conn_red\",\n        ts=TimeGenerated\n};\ncorelight_conn_red\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject7')._parserId7,'/'))))]",
      "dependsOn": [
        "[variables('parserObject7')._parserId7]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_conn_red')]",
        "contentId": "[variables('parserObject7').parserContentId7]",
        "kind": "Parser",
        "version": "[variables('parserObject7').parserVersion7]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject8').parserTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_corelight_burst Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject8').parserVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject8')._parserName8]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_corelight_burst parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_corelight_burst",
                "query": "let corelight_corelight_burst = view () {\n    Corelight_v2_corelight_burst_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        orig_size=orig_size_d,\n        resp_size=resp_size_d,\n        mbps=mbps_d,\n        age_of_conn=age_of_conn_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"corelight_burst\",\n        ts=TimeGenerated\n};\ncorelight_corelight_burst\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject8')._parserId8,'/'))))]",
              "dependsOn": [
                "[variables('parserObject8')._parserId8]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_corelight_burst')]",
                "contentId": "[variables('parserObject8').parserContentId8]",
                "kind": "Parser",
                "version": "[variables('parserObject8').parserVersion8]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject8').parserContentId8]",
        "contentKind": "Parser",
        "displayName": "corelight_corelight_burst parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject8').parserContentId8,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject8').parserContentId8,'-', '1.0.0')))]",
        "version": "[variables('parserObject8').parserVersion8]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject8')._parserName8]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_corelight_burst parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_corelight_burst",
        "query": "let corelight_corelight_burst = view () {\n    Corelight_v2_corelight_burst_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        orig_size=orig_size_d,\n        resp_size=resp_size_d,\n        mbps=mbps_d,\n        age_of_conn=age_of_conn_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"corelight_burst\",\n        ts=TimeGenerated\n};\ncorelight_corelight_burst\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject8')._parserId8,'/'))))]",
      "dependsOn": [
        "[variables('parserObject8')._parserId8]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_corelight_burst')]",
        "contentId": "[variables('parserObject8').parserContentId8]",
        "kind": "Parser",
        "version": "[variables('parserObject8').parserVersion8]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject9').parserTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_corelight_overall_capture_loss Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject9').parserVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject9')._parserName9]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_corelight_overall_capture_loss parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_corelight_overall_capture_loss",
                "query": "let corelight_corelight_overall_capture_loss = view () {\n    Corelight_v2_corelight_overall_capture_loss_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        gaps=gaps_d,\n        acks=acks_d,\n        percent_lost=percent_lost_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"corelight_overall_capture_loss\",\n        ts=TimeGenerated\n};\ncorelight_corelight_overall_capture_loss\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject9')._parserId9,'/'))))]",
              "dependsOn": [
                "[variables('parserObject9')._parserId9]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_corelight_overall_capture_loss')]",
                "contentId": "[variables('parserObject9').parserContentId9]",
                "kind": "Parser",
                "version": "[variables('parserObject9').parserVersion9]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject9').parserContentId9]",
        "contentKind": "Parser",
        "displayName": "corelight_corelight_overall_capture_loss parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject9').parserContentId9,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject9').parserContentId9,'-', '1.0.0')))]",
        "version": "[variables('parserObject9').parserVersion9]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject9')._parserName9]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_corelight_overall_capture_loss parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_corelight_overall_capture_loss",
        "query": "let corelight_corelight_overall_capture_loss = view () {\n    Corelight_v2_corelight_overall_capture_loss_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        gaps=gaps_d,\n        acks=acks_d,\n        percent_lost=percent_lost_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"corelight_overall_capture_loss\",\n        ts=TimeGenerated\n};\ncorelight_corelight_overall_capture_loss\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject9')._parserId9,'/'))))]",
      "dependsOn": [
        "[variables('parserObject9')._parserId9]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_corelight_overall_capture_loss')]",
        "contentId": "[variables('parserObject9').parserContentId9]",
        "kind": "Parser",
        "version": "[variables('parserObject9').parserVersion9]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject10').parserTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_corelight_profiling Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject10').parserVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject10')._parserName10]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_corelight_profiling parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_corelight_profiling",
                "query": "let corelight_corelight_profiling = view () {\n    Corelight_v2_corelight_profiling_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        node=node_s,\n        prof_core_stack=prof_core_stack_s,\n        prof_script_stack=prof_script_stack_s,\n        prof_sched_wait_ns=prof_sched_wait_ns_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"corelight_profiling\",\n        ts=TimeGenerated\n};\ncorelight_corelight_profiling\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject10')._parserId10,'/'))))]",
              "dependsOn": [
                "[variables('parserObject10')._parserId10]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_corelight_profiling')]",
                "contentId": "[variables('parserObject10').parserContentId10]",
                "kind": "Parser",
                "version": "[variables('parserObject10').parserVersion10]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject10').parserContentId10]",
        "contentKind": "Parser",
        "displayName": "corelight_corelight_profiling parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject10').parserContentId10,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject10').parserContentId10,'-', '1.0.0')))]",
        "version": "[variables('parserObject10').parserVersion10]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject10')._parserName10]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_corelight_profiling parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_corelight_profiling",
        "query": "let corelight_corelight_profiling = view () {\n    Corelight_v2_corelight_profiling_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        node=node_s,\n        prof_core_stack=prof_core_stack_s,\n        prof_script_stack=prof_script_stack_s,\n        prof_sched_wait_ns=prof_sched_wait_ns_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"corelight_profiling\",\n        ts=TimeGenerated\n};\ncorelight_corelight_profiling\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject10')._parserId10,'/'))))]",
      "dependsOn": [
        "[variables('parserObject10')._parserId10]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_corelight_profiling')]",
        "contentId": "[variables('parserObject10').parserContentId10]",
        "kind": "Parser",
        "version": "[variables('parserObject10').parserVersion10]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject11').parserTemplateSpecName11]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_datared Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject11').parserVersion11]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject11')._parserName11]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_datared parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_datared",
                "query": "let corelight_datared = view () {\n    Corelight_v2_datared_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        conn_red=conn_red_d,\n        conn_total=conn_total_d,\n        dns_red=dns_red_d,\n        dns_total=dns_total_d,\n        dns_coal_miss=dns_coal_miss_d,\n        files_red=files_red_d,\n        files_total=files_total_d,\n        files_coal_miss=files_coal_miss_d,\n        http_red=http_red_d,\n        http_total=http_total_d,\n        ssl_red=ssl_red_d,\n        ssl_total=ssl_total_d,\n        ssl_coal_miss=ssl_coal_miss_d,\n        weird_red=weird_red_d,\n        weird_total=weird_total_d,\n        x509_red=x509_red_d,\n        x509_total=x509_total_d,\n        x509_coal_miss=x509_coal_miss_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"datared\",\n        ts=TimeGenerated\n};\ncorelight_datared\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject11')._parserId11,'/'))))]",
              "dependsOn": [
                "[variables('parserObject11')._parserId11]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_datared')]",
                "contentId": "[variables('parserObject11').parserContentId11]",
                "kind": "Parser",
                "version": "[variables('parserObject11').parserVersion11]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject11').parserContentId11]",
        "contentKind": "Parser",
        "displayName": "corelight_datared parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject11').parserContentId11,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject11').parserContentId11,'-', '1.0.0')))]",
        "version": "[variables('parserObject11').parserVersion11]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject11')._parserName11]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_datared parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_datared",
        "query": "let corelight_datared = view () {\n    Corelight_v2_datared_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        conn_red=conn_red_d,\n        conn_total=conn_total_d,\n        dns_red=dns_red_d,\n        dns_total=dns_total_d,\n        dns_coal_miss=dns_coal_miss_d,\n        files_red=files_red_d,\n        files_total=files_total_d,\n        files_coal_miss=files_coal_miss_d,\n        http_red=http_red_d,\n        http_total=http_total_d,\n        ssl_red=ssl_red_d,\n        ssl_total=ssl_total_d,\n        ssl_coal_miss=ssl_coal_miss_d,\n        weird_red=weird_red_d,\n        weird_total=weird_total_d,\n        x509_red=x509_red_d,\n        x509_total=x509_total_d,\n        x509_coal_miss=x509_coal_miss_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"datared\",\n        ts=TimeGenerated\n};\ncorelight_datared\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject11')._parserId11,'/'))))]",
      "dependsOn": [
        "[variables('parserObject11')._parserId11]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_datared')]",
        "contentId": "[variables('parserObject11').parserContentId11]",
        "kind": "Parser",
        "version": "[variables('parserObject11').parserVersion11]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject12').parserTemplateSpecName12]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_dce_rpc Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject12').parserVersion12]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject12')._parserName12]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_dce_rpc parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_dce_rpc",
                "query": "let corelight_dce_rpc = view () {\n    Corelight_v2_dce_rpc_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        rtt=rtt_d,\n        named_pipe=named_pipe_s,\n        endpoint=endpoint_s,\n        operation=operation_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dce_rpc\",\n        ts=TimeGenerated\n};\ncorelight_dce_rpc\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject12')._parserId12,'/'))))]",
              "dependsOn": [
                "[variables('parserObject12')._parserId12]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dce_rpc')]",
                "contentId": "[variables('parserObject12').parserContentId12]",
                "kind": "Parser",
                "version": "[variables('parserObject12').parserVersion12]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject12').parserContentId12]",
        "contentKind": "Parser",
        "displayName": "corelight_dce_rpc parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject12').parserContentId12,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject12').parserContentId12,'-', '1.0.0')))]",
        "version": "[variables('parserObject12').parserVersion12]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject12')._parserName12]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_dce_rpc parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_dce_rpc",
        "query": "let corelight_dce_rpc = view () {\n    Corelight_v2_dce_rpc_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        rtt=rtt_d,\n        named_pipe=named_pipe_s,\n        endpoint=endpoint_s,\n        operation=operation_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dce_rpc\",\n        ts=TimeGenerated\n};\ncorelight_dce_rpc\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject12')._parserId12,'/'))))]",
      "dependsOn": [
        "[variables('parserObject12')._parserId12]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dce_rpc')]",
        "contentId": "[variables('parserObject12').parserContentId12]",
        "kind": "Parser",
        "version": "[variables('parserObject12').parserVersion12]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject13').parserTemplateSpecName13]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_dga Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject13').parserVersion13]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject13')._parserName13]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_dga parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_dga",
                "query": "let corelight_dga = view () {\n    Corelight_v2_dga_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        query=query_s,\n        family=family_s,\n        qtype_name=qtype_name_s,\n        rcode=rcode_d,\n        is_collision_heavy=is_collision_heavy_b,\n        ruse=ruse_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dga\",\n        ts=TimeGenerated\n};\ncorelight_dga\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject13')._parserId13,'/'))))]",
              "dependsOn": [
                "[variables('parserObject13')._parserId13]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dga')]",
                "contentId": "[variables('parserObject13').parserContentId13]",
                "kind": "Parser",
                "version": "[variables('parserObject13').parserVersion13]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject13').parserContentId13]",
        "contentKind": "Parser",
        "displayName": "corelight_dga parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject13').parserContentId13,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject13').parserContentId13,'-', '1.0.0')))]",
        "version": "[variables('parserObject13').parserVersion13]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject13')._parserName13]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_dga parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_dga",
        "query": "let corelight_dga = view () {\n    Corelight_v2_dga_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        query=query_s,\n        family=family_s,\n        qtype_name=qtype_name_s,\n        rcode=rcode_d,\n        is_collision_heavy=is_collision_heavy_b,\n        ruse=ruse_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dga\",\n        ts=TimeGenerated\n};\ncorelight_dga\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject13')._parserId13,'/'))))]",
      "dependsOn": [
        "[variables('parserObject13')._parserId13]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dga')]",
        "contentId": "[variables('parserObject13').parserContentId13]",
        "kind": "Parser",
        "version": "[variables('parserObject13').parserVersion13]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject14').parserTemplateSpecName14]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_dhcp Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject14').parserVersion14]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject14')._parserName14]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_dhcp parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_dhcp",
                "query": "let corelight_dhcp = view () {\n    Corelight_v2_dhcp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uids=uids_s,\n        client_addr=client_addr_s,\n        server_addr=server_addr_s,\n        mac=mac_s,\n        host_name=host_name_s,\n        client_fqdn=client_fqdn_s,\n        domain=domain_s,\n        requested_addr=requested_addr_s,\n        assigned_addr=assigned_addr_s,\n        lease_time=lease_time_d,\n        client_message=client_message_s,\n        server_message=server_message_s,\n        msg_types=msg_types_s,\n        duration=duration_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dhcp\",\n        ts=TimeGenerated\n};\ncorelight_dhcp\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject14')._parserId14,'/'))))]",
              "dependsOn": [
                "[variables('parserObject14')._parserId14]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dhcp')]",
                "contentId": "[variables('parserObject14').parserContentId14]",
                "kind": "Parser",
                "version": "[variables('parserObject14').parserVersion14]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject14').parserContentId14]",
        "contentKind": "Parser",
        "displayName": "corelight_dhcp parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject14').parserContentId14,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject14').parserContentId14,'-', '1.0.0')))]",
        "version": "[variables('parserObject14').parserVersion14]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject14')._parserName14]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_dhcp parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_dhcp",
        "query": "let corelight_dhcp = view () {\n    Corelight_v2_dhcp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uids=uids_s,\n        client_addr=client_addr_s,\n        server_addr=server_addr_s,\n        mac=mac_s,\n        host_name=host_name_s,\n        client_fqdn=client_fqdn_s,\n        domain=domain_s,\n        requested_addr=requested_addr_s,\n        assigned_addr=assigned_addr_s,\n        lease_time=lease_time_d,\n        client_message=client_message_s,\n        server_message=server_message_s,\n        msg_types=msg_types_s,\n        duration=duration_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dhcp\",\n        ts=TimeGenerated\n};\ncorelight_dhcp\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject14')._parserId14,'/'))))]",
      "dependsOn": [
        "[variables('parserObject14')._parserId14]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dhcp')]",
        "contentId": "[variables('parserObject14').parserContentId14]",
        "kind": "Parser",
        "version": "[variables('parserObject14').parserVersion14]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject15').parserTemplateSpecName15]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_dnp3 Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject15').parserVersion15]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject15')._parserName15]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_dnp3 parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_dnp3",
                "query": "let corelight_dnp3 = view () {\n    Corelight_v2_dnp3_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        fc_request=fc_request_s,\n        fc_reply=fc_reply_s,\n        iin=iin_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dnp3\",\n        ts=TimeGenerated\n};\ncorelight_dnp3\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject15')._parserId15,'/'))))]",
              "dependsOn": [
                "[variables('parserObject15')._parserId15]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dnp3')]",
                "contentId": "[variables('parserObject15').parserContentId15]",
                "kind": "Parser",
                "version": "[variables('parserObject15').parserVersion15]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject15').parserContentId15]",
        "contentKind": "Parser",
        "displayName": "corelight_dnp3 parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject15').parserContentId15,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject15').parserContentId15,'-', '1.0.0')))]",
        "version": "[variables('parserObject15').parserVersion15]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject15')._parserName15]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_dnp3 parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_dnp3",
        "query": "let corelight_dnp3 = view () {\n    Corelight_v2_dnp3_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        fc_request=fc_request_s,\n        fc_reply=fc_reply_s,\n        iin=iin_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dnp3\",\n        ts=TimeGenerated\n};\ncorelight_dnp3\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject15')._parserId15,'/'))))]",
      "dependsOn": [
        "[variables('parserObject15')._parserId15]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dnp3')]",
        "contentId": "[variables('parserObject15').parserContentId15]",
        "kind": "Parser",
        "version": "[variables('parserObject15').parserVersion15]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject16').parserTemplateSpecName16]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_dns Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject16').parserVersion16]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject16')._parserName16]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_dns parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_dns",
                "query": "let DNSLookup = datatable(\n    rcode: int,\n    reply_code: string,\n    cim_reply_code: string\n)[\n    0,\"NOERROR\",\"No Error\",\n    1,\"FORMERR\",\"FormErr\",\n    2,\"SERVFAIL\",\"ServFail\",\n    3,\"NXDOMAIN\",\"NXDomain\",\n    4,\"NOTIMP\",\"NotImp\",\n    5,\"REFUSED\",\"Refused\"\n];\nlet dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_dns = view () {\n    union isfuzzy=true Corelight_v2_dns_CL, Corelight_v2_dns_red_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp    \n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        AA = column_ifexists(\"AA_b\", \"\"),\n        RA = column_ifexists(\"RA_b\", \"\"),\n        RD = column_ifexists(\"RD_b\", \"\"),\n        TC = column_ifexists(\"TC_b\", \"\"),\n        TTLs = column_ifexists(\"TTLs_s\", \"\"),\n        Z = column_ifexists(\"Z_d\", real(null)),\n        answers = column_ifexists(\"answers_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        proto = column_ifexists(\"proto_s\", \"\"),\n        qclass = column_ifexists(\"qclass_d\", real(null)),\n        qclass_name = column_ifexists(\"qclass_name_s\", \"\"),\n        qtype = column_ifexists(\"qtype_d\", real(null)),\n        qtype_name = column_ifexists(\"qtype_name_s\", \"\"),\n        query = column_ifexists(\"query_s\", \"\"),\n        rcode = column_ifexists(\"rcode_d\", long(null)),\n        rcode_name = column_ifexists(\"rcode_name_s\", \"\"),\n        rejected = column_ifexists(\"rejected_b\", \"\"),\n        rtt = column_ifexists(\"rtt_d\", real(null)),\n        trans_id = column_ifexists(\"trans_id_d\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        num = column_ifexists(\"num_d\", real(null)),\n        icann_domain = column_ifexists(\"icann_domain_s\", \"\"),\n        icann_host_subdomain = column_ifexists(\"icann_host_subdomain_s\", \"\"),\n        icann_tld = column_ifexists(\"icann_tld_s\", \"\"),\n        is_trusted_domain = column_ifexists(\"is_trusted_domain_b\", \"\")\n    | extend rcode = toint(rcode)\n    | lookup DNSLookup on rcode\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"dns\",\n        ts = TimeGenerated,\n        dns_flags_authoritative_answer = AA,\n        dns_flags_recursion_available = RA,\n        dns_flags_truncated_response = TC,\n        ttl = TTLs,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        record_class = qclass_name,\n        record_type = qtype_name,\n        reply_code_id = rcode,\n        dns_flags_rejected = rejected,\n        duration = rtt,\n        response_time = rtt,\n        transaction_id = trans_id,\n        session_id = uid,\n        answer_count = array_length(todynamic(answers)),\n        query_count = array_length(todynamic(query)),\n        sensor_name = coalesce(system_name, \"unknown\"),\n        reply_code = cim_reply_code\n    | extend\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\"),\n        transport = iff(proto == \"icmp\" and id_orig_h matches regex \".*:.*\", \"icmp6\", proto),\n        query_length = strlen(query),\n        answer_length = iff(answer_count == 1, strlen(answers), tolong('')),\n        message_type = iff(isnotnull(rcode), \"Response\", \"Query\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        AA,\n        RA,\n        RD,\n        TC,\n        TTLs,\n        Z,\n        answers,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        proto,\n        qclass,\n        qclass_name,\n        qtype,\n        qtype_name,\n        query,\n        rcode,\n        rcode_name,\n        rejected,\n        rtt,\n        trans_id,\n        uid,\n        num,\n        icann_domain,\n        icann_host_subdomain,\n        icann_tld,\n        is_trusted_domain,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        dns_flags_authoritative_answer,\n        dns_flags_recursion_available,\n        dns_flags_truncated_response,\n        ttl,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        record_class,\n        record_type,\n        reply_code_id,\n        dns_flags_rejected,\n        duration,\n        response_time,\n        transaction_id,\n        session_id,\n        answer_count,\n        query_count,\n        sensor_name,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip,\n        transport,\n        query_length,\n        answer_length,\n        message_type,\n        reply_code\n};\ncorelight_dns\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject16')._parserId16,'/'))))]",
              "dependsOn": [
                "[variables('parserObject16')._parserId16]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dns')]",
                "contentId": "[variables('parserObject16').parserContentId16]",
                "kind": "Parser",
                "version": "[variables('parserObject16').parserVersion16]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject16').parserContentId16]",
        "contentKind": "Parser",
        "displayName": "corelight_dns parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject16').parserContentId16,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject16').parserContentId16,'-', '1.1.0')))]",
        "version": "[variables('parserObject16').parserVersion16]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject16')._parserName16]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_dns parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_dns",
        "query": "let DNSLookup = datatable(\n    rcode: int,\n    reply_code: string,\n    cim_reply_code: string\n)[\n    0,\"NOERROR\",\"No Error\",\n    1,\"FORMERR\",\"FormErr\",\n    2,\"SERVFAIL\",\"ServFail\",\n    3,\"NXDOMAIN\",\"NXDomain\",\n    4,\"NOTIMP\",\"NotImp\",\n    5,\"REFUSED\",\"Refused\"\n];\nlet dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_dns = view () {\n    union isfuzzy=true Corelight_v2_dns_CL, Corelight_v2_dns_red_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp    \n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        AA = column_ifexists(\"AA_b\", \"\"),\n        RA = column_ifexists(\"RA_b\", \"\"),\n        RD = column_ifexists(\"RD_b\", \"\"),\n        TC = column_ifexists(\"TC_b\", \"\"),\n        TTLs = column_ifexists(\"TTLs_s\", \"\"),\n        Z = column_ifexists(\"Z_d\", real(null)),\n        answers = column_ifexists(\"answers_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        proto = column_ifexists(\"proto_s\", \"\"),\n        qclass = column_ifexists(\"qclass_d\", real(null)),\n        qclass_name = column_ifexists(\"qclass_name_s\", \"\"),\n        qtype = column_ifexists(\"qtype_d\", real(null)),\n        qtype_name = column_ifexists(\"qtype_name_s\", \"\"),\n        query = column_ifexists(\"query_s\", \"\"),\n        rcode = column_ifexists(\"rcode_d\", long(null)),\n        rcode_name = column_ifexists(\"rcode_name_s\", \"\"),\n        rejected = column_ifexists(\"rejected_b\", \"\"),\n        rtt = column_ifexists(\"rtt_d\", real(null)),\n        trans_id = column_ifexists(\"trans_id_d\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        num = column_ifexists(\"num_d\", real(null)),\n        icann_domain = column_ifexists(\"icann_domain_s\", \"\"),\n        icann_host_subdomain = column_ifexists(\"icann_host_subdomain_s\", \"\"),\n        icann_tld = column_ifexists(\"icann_tld_s\", \"\"),\n        is_trusted_domain = column_ifexists(\"is_trusted_domain_b\", \"\")\n    | extend rcode = toint(rcode)\n    | lookup DNSLookup on rcode\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"dns\",\n        ts = TimeGenerated,\n        dns_flags_authoritative_answer = AA,\n        dns_flags_recursion_available = RA,\n        dns_flags_truncated_response = TC,\n        ttl = TTLs,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        record_class = qclass_name,\n        record_type = qtype_name,\n        reply_code_id = rcode,\n        dns_flags_rejected = rejected,\n        duration = rtt,\n        response_time = rtt,\n        transaction_id = trans_id,\n        session_id = uid,\n        answer_count = array_length(todynamic(answers)),\n        query_count = array_length(todynamic(query)),\n        sensor_name = coalesce(system_name, \"unknown\"),\n        reply_code = cim_reply_code\n    | extend\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\"),\n        transport = iff(proto == \"icmp\" and id_orig_h matches regex \".*:.*\", \"icmp6\", proto),\n        query_length = strlen(query),\n        answer_length = iff(answer_count == 1, strlen(answers), tolong('')),\n        message_type = iff(isnotnull(rcode), \"Response\", \"Query\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        AA,\n        RA,\n        RD,\n        TC,\n        TTLs,\n        Z,\n        answers,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        proto,\n        qclass,\n        qclass_name,\n        qtype,\n        qtype_name,\n        query,\n        rcode,\n        rcode_name,\n        rejected,\n        rtt,\n        trans_id,\n        uid,\n        num,\n        icann_domain,\n        icann_host_subdomain,\n        icann_tld,\n        is_trusted_domain,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        dns_flags_authoritative_answer,\n        dns_flags_recursion_available,\n        dns_flags_truncated_response,\n        ttl,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        record_class,\n        record_type,\n        reply_code_id,\n        dns_flags_rejected,\n        duration,\n        response_time,\n        transaction_id,\n        session_id,\n        answer_count,\n        query_count,\n        sensor_name,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip,\n        transport,\n        query_length,\n        answer_length,\n        message_type,\n        reply_code\n};\ncorelight_dns\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject16')._parserId16,'/'))))]",
      "dependsOn": [
        "[variables('parserObject16')._parserId16]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dns')]",
        "contentId": "[variables('parserObject16').parserContentId16]",
        "kind": "Parser",
        "version": "[variables('parserObject16').parserVersion16]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject17').parserTemplateSpecName17]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_dns_red Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject17').parserVersion17]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject17')._parserName17]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_dns_red parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_dns_red",
                "query": "let corelight_dns_red = view () {\n    Corelight_v2_dns_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        query=query_s,\n        qtype_name=qtype_name_s,\n        rcode=rcode_d,\n        answers=answers_s,\n        num=num_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dns_red\",\n        ts=TimeGenerated\n};\ncorelight_dns_red\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject17')._parserId17,'/'))))]",
              "dependsOn": [
                "[variables('parserObject17')._parserId17]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dns_red')]",
                "contentId": "[variables('parserObject17').parserContentId17]",
                "kind": "Parser",
                "version": "[variables('parserObject17').parserVersion17]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject17').parserContentId17]",
        "contentKind": "Parser",
        "displayName": "corelight_dns_red parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject17').parserContentId17,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject17').parserContentId17,'-', '1.0.0')))]",
        "version": "[variables('parserObject17').parserVersion17]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject17')._parserName17]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_dns_red parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_dns_red",
        "query": "let corelight_dns_red = view () {\n    Corelight_v2_dns_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        query=query_s,\n        qtype_name=qtype_name_s,\n        rcode=rcode_d,\n        answers=answers_s,\n        num=num_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dns_red\",\n        ts=TimeGenerated\n};\ncorelight_dns_red\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject17')._parserId17,'/'))))]",
      "dependsOn": [
        "[variables('parserObject17')._parserId17]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dns_red')]",
        "contentId": "[variables('parserObject17').parserContentId17]",
        "kind": "Parser",
        "version": "[variables('parserObject17').parserVersion17]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject18').parserTemplateSpecName18]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_dpd Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject18').parserVersion18]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject18')._parserName18]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_dpd parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_dpd",
                "query": "let corelight_dpd = view () {\n    Corelight_v2_dpd_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        analyzer=analyzer_s,\n        failure_reason=failure_reason_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dpd\",\n        ts=TimeGenerated\n};\ncorelight_dpd\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject18')._parserId18,'/'))))]",
              "dependsOn": [
                "[variables('parserObject18')._parserId18]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dpd')]",
                "contentId": "[variables('parserObject18').parserContentId18]",
                "kind": "Parser",
                "version": "[variables('parserObject18').parserVersion18]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject18').parserContentId18]",
        "contentKind": "Parser",
        "displayName": "corelight_dpd parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject18').parserContentId18,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject18').parserContentId18,'-', '1.0.0')))]",
        "version": "[variables('parserObject18').parserVersion18]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject18')._parserName18]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_dpd parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_dpd",
        "query": "let corelight_dpd = view () {\n    Corelight_v2_dpd_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        analyzer=analyzer_s,\n        failure_reason=failure_reason_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"dpd\",\n        ts=TimeGenerated\n};\ncorelight_dpd\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject18')._parserId18,'/'))))]",
      "dependsOn": [
        "[variables('parserObject18')._parserId18]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_dpd')]",
        "contentId": "[variables('parserObject18').parserContentId18]",
        "kind": "Parser",
        "version": "[variables('parserObject18').parserVersion18]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject19').parserTemplateSpecName19]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_encrypted_dns Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject19').parserVersion19]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject19')._parserName19]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_encrypted_dns parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_encrypted_dns",
                "query": "let corelight_encrypted_dns = view () {\n    Corelight_v2_encrypted_dns_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        resp_h=resp_h_s,\n        cert_cn=cert_cn_s,\n        cert_sans=cert_sans_s,\n        sni=sni_s,\n        match=match_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"encrypted_dns\",\n        ts=TimeGenerated\n};\ncorelight_encrypted_dns\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject19')._parserId19,'/'))))]",
              "dependsOn": [
                "[variables('parserObject19')._parserId19]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_encrypted_dns')]",
                "contentId": "[variables('parserObject19').parserContentId19]",
                "kind": "Parser",
                "version": "[variables('parserObject19').parserVersion19]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject19').parserContentId19]",
        "contentKind": "Parser",
        "displayName": "corelight_encrypted_dns parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject19').parserContentId19,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject19').parserContentId19,'-', '1.0.0')))]",
        "version": "[variables('parserObject19').parserVersion19]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject19')._parserName19]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_encrypted_dns parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_encrypted_dns",
        "query": "let corelight_encrypted_dns = view () {\n    Corelight_v2_encrypted_dns_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        resp_h=resp_h_s,\n        cert_cn=cert_cn_s,\n        cert_sans=cert_sans_s,\n        sni=sni_s,\n        match=match_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"encrypted_dns\",\n        ts=TimeGenerated\n};\ncorelight_encrypted_dns\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject19')._parserId19,'/'))))]",
      "dependsOn": [
        "[variables('parserObject19')._parserId19]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_encrypted_dns')]",
        "contentId": "[variables('parserObject19').parserContentId19]",
        "kind": "Parser",
        "version": "[variables('parserObject19').parserVersion19]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject20').parserTemplateSpecName20]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_enip Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject20').parserVersion20]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject20')._parserName20]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_enip parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_enip",
                "query": "let corelight_enip = view () {\n    Corelight_v2_enip_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        command=command_s,\n        length=length_d,\n        session_handle=session_handle_s,\n        status=status_s,\n        sender_context=sender_context_s,\n        options=options_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"enip\",\n        ts=TimeGenerated\n};\ncorelight_enip\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject20')._parserId20,'/'))))]",
              "dependsOn": [
                "[variables('parserObject20')._parserId20]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_enip')]",
                "contentId": "[variables('parserObject20').parserContentId20]",
                "kind": "Parser",
                "version": "[variables('parserObject20').parserVersion20]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject20').parserContentId20]",
        "contentKind": "Parser",
        "displayName": "corelight_enip parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject20').parserContentId20,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject20').parserContentId20,'-', '1.0.0')))]",
        "version": "[variables('parserObject20').parserVersion20]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject20')._parserName20]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_enip parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_enip",
        "query": "let corelight_enip = view () {\n    Corelight_v2_enip_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        command=command_s,\n        length=length_d,\n        session_handle=session_handle_s,\n        status=status_s,\n        sender_context=sender_context_s,\n        options=options_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"enip\",\n        ts=TimeGenerated\n};\ncorelight_enip\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject20')._parserId20,'/'))))]",
      "dependsOn": [
        "[variables('parserObject20')._parserId20]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_enip')]",
        "contentId": "[variables('parserObject20').parserContentId20]",
        "kind": "Parser",
        "version": "[variables('parserObject20').parserVersion20]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject21').parserTemplateSpecName21]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_enip_debug Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject21').parserVersion21]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject21')._parserName21]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_enip_debug parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_enip_debug",
                "query": "let corelight_enip_debug = view () {\n    Corelight_v2_enip_debug_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        raw_data=raw_data_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"enip_debug\",\n        ts=TimeGenerated\n};\ncorelight_enip_debug\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject21')._parserId21,'/'))))]",
              "dependsOn": [
                "[variables('parserObject21')._parserId21]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_enip_debug')]",
                "contentId": "[variables('parserObject21').parserContentId21]",
                "kind": "Parser",
                "version": "[variables('parserObject21').parserVersion21]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject21').parserContentId21]",
        "contentKind": "Parser",
        "displayName": "corelight_enip_debug parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject21').parserContentId21,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject21').parserContentId21,'-', '1.0.0')))]",
        "version": "[variables('parserObject21').parserVersion21]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject21')._parserName21]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_enip_debug parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_enip_debug",
        "query": "let corelight_enip_debug = view () {\n    Corelight_v2_enip_debug_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        raw_data=raw_data_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"enip_debug\",\n        ts=TimeGenerated\n};\ncorelight_enip_debug\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject21')._parserId21,'/'))))]",
      "dependsOn": [
        "[variables('parserObject21')._parserId21]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_enip_debug')]",
        "contentId": "[variables('parserObject21').parserContentId21]",
        "kind": "Parser",
        "version": "[variables('parserObject21').parserVersion21]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject22').parserTemplateSpecName22]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_enip_list_identity Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject22').parserVersion22]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject22')._parserName22]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_enip_list_identity parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_enip_list_identity",
                "query": "let corelight_enip_list_identity = view () {\n    Corelight_v2_enip_list_identity_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        device_type=device_type_s,\n        vendor=vendor_s,\n        product_name=product_name_s,\n        serial_number=serial_number_s,\n        product_code=product_code_d,\n        revision=revision_d,\n        status=status_s,\n        state=state_s,\n        device_ip=device_ip_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"enip_list_identity\",\n        ts=TimeGenerated\n};\ncorelight_enip_list_identity\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject22')._parserId22,'/'))))]",
              "dependsOn": [
                "[variables('parserObject22')._parserId22]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_enip_list_identity')]",
                "contentId": "[variables('parserObject22').parserContentId22]",
                "kind": "Parser",
                "version": "[variables('parserObject22').parserVersion22]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject22').parserContentId22]",
        "contentKind": "Parser",
        "displayName": "corelight_enip_list_identity parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject22').parserContentId22,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject22').parserContentId22,'-', '1.0.0')))]",
        "version": "[variables('parserObject22').parserVersion22]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject22')._parserName22]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_enip_list_identity parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_enip_list_identity",
        "query": "let corelight_enip_list_identity = view () {\n    Corelight_v2_enip_list_identity_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        device_type=device_type_s,\n        vendor=vendor_s,\n        product_name=product_name_s,\n        serial_number=serial_number_s,\n        product_code=product_code_d,\n        revision=revision_d,\n        status=status_s,\n        state=state_s,\n        device_ip=device_ip_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"enip_list_identity\",\n        ts=TimeGenerated\n};\ncorelight_enip_list_identity\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject22')._parserId22,'/'))))]",
      "dependsOn": [
        "[variables('parserObject22')._parserId22]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_enip_list_identity')]",
        "contentId": "[variables('parserObject22').parserContentId22]",
        "kind": "Parser",
        "version": "[variables('parserObject22').parserVersion22]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject23').parserTemplateSpecName23]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_etc_viz Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject23').parserVersion23]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject23')._parserName23]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_etc_viz parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_etc_viz",
                "query": "let dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_etc_viz = view () {\n    union isfuzzy=true Corelight_v2_etc_viz_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    |project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        server_a = column_ifexists(\"server_a_s\", \"\"),\n        server_p = column_ifexists(\"server_p_d\", real(null)),\n        service = column_ifexists(\"service_s\", \"\"),\n        viz_stat = column_ifexists(\"viz_stat_s\", \"\"),\n        c2s_viz_size = column_ifexists(\"c2s_viz_size_d\", real(null)),\n        c2s_viz_enc_dev = column_ifexists(\"c2s_viz_enc_dev_d\", real(null)),\n        c2s_viz_enc_frac = column_ifexists(\"c2s_viz_enc_frac_d\", real(null)),\n        c2s_viz_pdu1_enc = column_ifexists(\"c2s_viz_pdu1_enc_b\", \"\"),\n        c2s_viz_clr_frac = column_ifexists(\"c2s_viz_clr_frac_d\", real(null)),\n        c2s_viz_clr_ex = column_ifexists(\"c2s_viz_clr_ex_s\", \"\"),\n        s2c_viz_size = column_ifexists(\"s2c_viz_size_d\", real(null)),\n        s2c_viz_enc_dev = column_ifexists(\"s2c_viz_enc_dev_d\", real(null)),\n        s2c_viz_enc_frac = column_ifexists(\"s2c_viz_enc_frac_d\", real(null)),\n        s2c_viz_pdu1_enc = column_ifexists(\"s2c_viz_pdu1_enc_b\", \"\"),\n        s2c_viz_clr_frac = column_ifexists(\"s2c_viz_clr_frac_d\", real(null)),\n        s2c_viz_clr_ex = column_ifexists(\"s2c_viz_clr_ex_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null))\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"etc_viz\",\n        ts = TimeGenerated,\n        session_id = uid,\n        status = viz_stat,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        bytes_out = tolong(c2s_viz_size),\n        bytes_in = tolong(s2c_viz_size),\n        sensor_name = coalesce(system_name, \"unknown\")\n    | extend\n        bytes = bytes_in + bytes_out,\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        uid,\n        server_a,\n        server_p,\n        service,\n        viz_stat,\n        c2s_viz_size,\n        c2s_viz_enc_dev,\n        c2s_viz_enc_frac,\n        c2s_viz_pdu1_enc,\n        c2s_viz_clr_frac,\n        c2s_viz_clr_ex,\n        s2c_viz_size,\n        s2c_viz_enc_dev,\n        s2c_viz_enc_frac,\n        s2c_viz_pdu1_enc,\n        s2c_viz_clr_frac,\n        s2c_viz_clr_ex,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        session_id,\n        status,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        bytes_out,\n        bytes_in,\n        sensor_name,\n        bytes,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip\n};\ncorelight_etc_viz\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject23')._parserId23,'/'))))]",
              "dependsOn": [
                "[variables('parserObject23')._parserId23]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_etc_viz')]",
                "contentId": "[variables('parserObject23').parserContentId23]",
                "kind": "Parser",
                "version": "[variables('parserObject23').parserVersion23]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject23').parserContentId23]",
        "contentKind": "Parser",
        "displayName": "corelight_etc_viz parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject23').parserContentId23,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject23').parserContentId23,'-', '1.1.0')))]",
        "version": "[variables('parserObject23').parserVersion23]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject23')._parserName23]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_etc_viz parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_etc_viz",
        "query": "let dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_etc_viz = view () {\n    union isfuzzy=true Corelight_v2_etc_viz_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    |project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        server_a = column_ifexists(\"server_a_s\", \"\"),\n        server_p = column_ifexists(\"server_p_d\", real(null)),\n        service = column_ifexists(\"service_s\", \"\"),\n        viz_stat = column_ifexists(\"viz_stat_s\", \"\"),\n        c2s_viz_size = column_ifexists(\"c2s_viz_size_d\", real(null)),\n        c2s_viz_enc_dev = column_ifexists(\"c2s_viz_enc_dev_d\", real(null)),\n        c2s_viz_enc_frac = column_ifexists(\"c2s_viz_enc_frac_d\", real(null)),\n        c2s_viz_pdu1_enc = column_ifexists(\"c2s_viz_pdu1_enc_b\", \"\"),\n        c2s_viz_clr_frac = column_ifexists(\"c2s_viz_clr_frac_d\", real(null)),\n        c2s_viz_clr_ex = column_ifexists(\"c2s_viz_clr_ex_s\", \"\"),\n        s2c_viz_size = column_ifexists(\"s2c_viz_size_d\", real(null)),\n        s2c_viz_enc_dev = column_ifexists(\"s2c_viz_enc_dev_d\", real(null)),\n        s2c_viz_enc_frac = column_ifexists(\"s2c_viz_enc_frac_d\", real(null)),\n        s2c_viz_pdu1_enc = column_ifexists(\"s2c_viz_pdu1_enc_b\", \"\"),\n        s2c_viz_clr_frac = column_ifexists(\"s2c_viz_clr_frac_d\", real(null)),\n        s2c_viz_clr_ex = column_ifexists(\"s2c_viz_clr_ex_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null))\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"etc_viz\",\n        ts = TimeGenerated,\n        session_id = uid,\n        status = viz_stat,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        bytes_out = tolong(c2s_viz_size),\n        bytes_in = tolong(s2c_viz_size),\n        sensor_name = coalesce(system_name, \"unknown\")\n    | extend\n        bytes = bytes_in + bytes_out,\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        uid,\n        server_a,\n        server_p,\n        service,\n        viz_stat,\n        c2s_viz_size,\n        c2s_viz_enc_dev,\n        c2s_viz_enc_frac,\n        c2s_viz_pdu1_enc,\n        c2s_viz_clr_frac,\n        c2s_viz_clr_ex,\n        s2c_viz_size,\n        s2c_viz_enc_dev,\n        s2c_viz_enc_frac,\n        s2c_viz_pdu1_enc,\n        s2c_viz_clr_frac,\n        s2c_viz_clr_ex,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        session_id,\n        status,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        bytes_out,\n        bytes_in,\n        sensor_name,\n        bytes,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip\n};\ncorelight_etc_viz\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject23')._parserId23,'/'))))]",
      "dependsOn": [
        "[variables('parserObject23')._parserId23]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_etc_viz')]",
        "contentId": "[variables('parserObject23').parserContentId23]",
        "kind": "Parser",
        "version": "[variables('parserObject23').parserVersion23]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject24').parserTemplateSpecName24]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_files Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject24').parserVersion24]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject24')._parserName24]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_files parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_files",
                "query": "let dummy_table = datatable(TimeGenerated: datetime) [];\nlet corelight_files = view () {\n    union isfuzzy=true Corelight_v2_files_CL,\n    Corelight_v2_files_red_CL, dummy_table\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        analyzers = column_ifexists(\"analyzers_s\", \"\"),\n        conn_uids = column_ifexists(\"conn_uids_s\", \"\"),\n        depth = column_ifexists(\"depth_d\", real(null)),\n        duration = column_ifexists(\"duration_d\", real(null)),\n        fuid = column_ifexists(\"fuid_s\", \"\"),\n        is_orig = column_ifexists(\"is_orig_b\", \"\"),\n        local_orig = column_ifexists(\"local_orig_b\", \"\"),\n        md5 = column_ifexists(\"md5_s\", \"\"),\n        mime_type = column_ifexists(\"mime_type_s\", \"\"),\n        missing_bytes = column_ifexists(\"missing_bytes_d\", real(null)),\n        overflow_bytes = column_ifexists(\"overflow_bytes_d\", real(null)),\n        rx_hosts = column_ifexists(\"rx_hosts_s\", \"\"),\n        seen_bytes = column_ifexists(\"seen_bytes_d\", real(null)),\n        sha1 = column_ifexists(\"sha1_s\", \"\"),\n        sha256 = column_ifexists(\"sha256_s\", \"\"),\n        source = column_ifexists(\"source_s\", \"\"),\n        timedout = column_ifexists(\"timedout_b\", \"\"),\n        total_bytes = column_ifexists(\"total_bytes_d\", real(null)),\n        tx_hosts = column_ifexists(\"tx_hosts_s\", \"\"),\n        vlan = column_ifexists(\"vlan_d\", real(null)),\n        filename = column_ifexists(\"filename_s\", \"\"),\n        parent_fuid = column_ifexists(\"parent_fuid_s\", \"\"),\n        extracted = column_ifexists(\"extracted_s\", \"\"),\n        extracted_cutoff = column_ifexists(\"extracted_cutoff_b\", \"\"),\n        extracted_size = column_ifexists(\"extracted_size_d\", real(null)),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        num = column_ifexists(\"num_d\", real(null))\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"files\",\n        ts = TimeGenerated,\n        uid = conn_uids,\n        dest_host = rx_hosts,\n        bytes = seen_bytes,\n        file_size = total_bytes,\n        src_host = tx_hosts,\n        file_name = filename,\n        object = filename,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        app = source,\n        file_hash = coalesce(md5, sha1, sha256, \"unknown\"),\n        sensor_name = coalesce(system_name, \"unknown\")\n    | extend\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(ipv4_is_in_range( dest, \"10.0.0.0/8\") or ipv4_is_in_range( dest, \"172.16.0.0/12\") or ipv4_is_in_range( dest, \"192.168.0.0/16\"), \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        analyzers,\n        conn_uids,\n        depth,\n        duration,\n        fuid,\n        is_orig,\n        local_orig,\n        md5,\n        mime_type,\n        missing_bytes,\n        overflow_bytes,\n        rx_hosts,\n        seen_bytes,\n        sha1,\n        sha256,\n        source,\n        timedout,\n        total_bytes,\n        tx_hosts,\n        vlan,\n        filename,\n        parent_fuid,\n        extracted,\n        extracted_cutoff,\n        extracted_size,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        num,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        uid,\n        dest_host,\n        bytes,\n        file_size,\n        src_host,\n        file_name,\n        object,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        app,\n        file_hash,\n        sensor_name,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip\n};\ncorelight_files\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject24')._parserId24,'/'))))]",
              "dependsOn": [
                "[variables('parserObject24')._parserId24]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_files')]",
                "contentId": "[variables('parserObject24').parserContentId24]",
                "kind": "Parser",
                "version": "[variables('parserObject24').parserVersion24]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject24').parserContentId24]",
        "contentKind": "Parser",
        "displayName": "corelight_files parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject24').parserContentId24,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject24').parserContentId24,'-', '1.1.0')))]",
        "version": "[variables('parserObject24').parserVersion24]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject24')._parserName24]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_files parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_files",
        "query": "let dummy_table = datatable(TimeGenerated: datetime) [];\nlet corelight_files = view () {\n    union isfuzzy=true Corelight_v2_files_CL,\n    Corelight_v2_files_red_CL, dummy_table\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        analyzers = column_ifexists(\"analyzers_s\", \"\"),\n        conn_uids = column_ifexists(\"conn_uids_s\", \"\"),\n        depth = column_ifexists(\"depth_d\", real(null)),\n        duration = column_ifexists(\"duration_d\", real(null)),\n        fuid = column_ifexists(\"fuid_s\", \"\"),\n        is_orig = column_ifexists(\"is_orig_b\", \"\"),\n        local_orig = column_ifexists(\"local_orig_b\", \"\"),\n        md5 = column_ifexists(\"md5_s\", \"\"),\n        mime_type = column_ifexists(\"mime_type_s\", \"\"),\n        missing_bytes = column_ifexists(\"missing_bytes_d\", real(null)),\n        overflow_bytes = column_ifexists(\"overflow_bytes_d\", real(null)),\n        rx_hosts = column_ifexists(\"rx_hosts_s\", \"\"),\n        seen_bytes = column_ifexists(\"seen_bytes_d\", real(null)),\n        sha1 = column_ifexists(\"sha1_s\", \"\"),\n        sha256 = column_ifexists(\"sha256_s\", \"\"),\n        source = column_ifexists(\"source_s\", \"\"),\n        timedout = column_ifexists(\"timedout_b\", \"\"),\n        total_bytes = column_ifexists(\"total_bytes_d\", real(null)),\n        tx_hosts = column_ifexists(\"tx_hosts_s\", \"\"),\n        vlan = column_ifexists(\"vlan_d\", real(null)),\n        filename = column_ifexists(\"filename_s\", \"\"),\n        parent_fuid = column_ifexists(\"parent_fuid_s\", \"\"),\n        extracted = column_ifexists(\"extracted_s\", \"\"),\n        extracted_cutoff = column_ifexists(\"extracted_cutoff_b\", \"\"),\n        extracted_size = column_ifexists(\"extracted_size_d\", real(null)),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        num = column_ifexists(\"num_d\", real(null))\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"files\",\n        ts = TimeGenerated,\n        uid = conn_uids,\n        dest_host = rx_hosts,\n        bytes = seen_bytes,\n        file_size = total_bytes,\n        src_host = tx_hosts,\n        file_name = filename,\n        object = filename,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        app = source,\n        file_hash = coalesce(md5, sha1, sha256, \"unknown\"),\n        sensor_name = coalesce(system_name, \"unknown\")\n    | extend\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(ipv4_is_in_range( dest, \"10.0.0.0/8\") or ipv4_is_in_range( dest, \"172.16.0.0/12\") or ipv4_is_in_range( dest, \"192.168.0.0/16\"), \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        analyzers,\n        conn_uids,\n        depth,\n        duration,\n        fuid,\n        is_orig,\n        local_orig,\n        md5,\n        mime_type,\n        missing_bytes,\n        overflow_bytes,\n        rx_hosts,\n        seen_bytes,\n        sha1,\n        sha256,\n        source,\n        timedout,\n        total_bytes,\n        tx_hosts,\n        vlan,\n        filename,\n        parent_fuid,\n        extracted,\n        extracted_cutoff,\n        extracted_size,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        num,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        uid,\n        dest_host,\n        bytes,\n        file_size,\n        src_host,\n        file_name,\n        object,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        app,\n        file_hash,\n        sensor_name,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip\n};\ncorelight_files\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject24')._parserId24,'/'))))]",
      "dependsOn": [
        "[variables('parserObject24')._parserId24]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_files')]",
        "contentId": "[variables('parserObject24').parserContentId24]",
        "kind": "Parser",
        "version": "[variables('parserObject24').parserVersion24]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject25').parserTemplateSpecName25]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_files_red Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject25').parserVersion25]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject25')._parserName25]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_files_red parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_files_red",
                "query": "let corelight_files_red = view () {\n    Corelight_v2_files_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        fuid=fuid_s,\n        tx_hosts=tx_hosts_s,\n        rx_hosts=rx_hosts_s,\n        conn_uids=conn_uids_s,\n        source=source_s,\n        depth=depth_d,\n        analyzers=analyzers_s,\n        mime_type=mime_type_s,\n        filename=filename_s,\n        local_orig=local_orig_b,\n        is_orig=is_orig_b,\n        seen_bytes=seen_bytes_d,\n        total_bytes=total_bytes_d,\n        missing_bytes=missing_bytes_d,\n        overflow_bytes=overflow_bytes_d,\n        timedout=timedout_b,\n        parent_fuid=parent_fuid_s,\n        extracted=extracted_s,\n        extracted_cutoff=extracted_cutoff_b,\n        extracted_size=extracted_size_d,\n        md5=md5_s,\n        sha1=sha1_s,\n        sha256=sha256_s,\n        num=num_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"files_red\",\n        ts=TimeGenerated\n};\ncorelight_files_red\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject25')._parserId25,'/'))))]",
              "dependsOn": [
                "[variables('parserObject25')._parserId25]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_files_red')]",
                "contentId": "[variables('parserObject25').parserContentId25]",
                "kind": "Parser",
                "version": "[variables('parserObject25').parserVersion25]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject25').parserContentId25]",
        "contentKind": "Parser",
        "displayName": "corelight_files_red parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject25').parserContentId25,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject25').parserContentId25,'-', '1.0.0')))]",
        "version": "[variables('parserObject25').parserVersion25]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject25')._parserName25]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_files_red parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_files_red",
        "query": "let corelight_files_red = view () {\n    Corelight_v2_files_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        fuid=fuid_s,\n        tx_hosts=tx_hosts_s,\n        rx_hosts=rx_hosts_s,\n        conn_uids=conn_uids_s,\n        source=source_s,\n        depth=depth_d,\n        analyzers=analyzers_s,\n        mime_type=mime_type_s,\n        filename=filename_s,\n        local_orig=local_orig_b,\n        is_orig=is_orig_b,\n        seen_bytes=seen_bytes_d,\n        total_bytes=total_bytes_d,\n        missing_bytes=missing_bytes_d,\n        overflow_bytes=overflow_bytes_d,\n        timedout=timedout_b,\n        parent_fuid=parent_fuid_s,\n        extracted=extracted_s,\n        extracted_cutoff=extracted_cutoff_b,\n        extracted_size=extracted_size_d,\n        md5=md5_s,\n        sha1=sha1_s,\n        sha256=sha256_s,\n        num=num_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"files_red\",\n        ts=TimeGenerated\n};\ncorelight_files_red\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject25')._parserId25,'/'))))]",
      "dependsOn": [
        "[variables('parserObject25')._parserId25]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_files_red')]",
        "contentId": "[variables('parserObject25').parserContentId25]",
        "kind": "Parser",
        "version": "[variables('parserObject25').parserVersion25]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject26').parserTemplateSpecName26]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_ftp Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject26').parserVersion26]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject26')._parserName26]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_ftp parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_ftp",
                "query": "let dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_ftp = view () {\n    union isfuzzy=true Corelight_v2_ftp_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        command = column_ifexists(\"command_s\", \"\"),\n        data_channel_orig_h = column_ifexists(\"data_channel_orig_h_s\", \"\"),\n        data_channel_passive = column_ifexists(\"data_channel_passive_b\", \"\"),\n        data_channel_resp_h = column_ifexists(\"data_channel_resp_h_s\", \"\"),\n        arg = column_ifexists(\"arg_s\", \"\"),\n        data_channel_resp_p = column_ifexists(\"data_channel_resp_p_d\", real(null)),\n        err = column_ifexists(\"err_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        password = column_ifexists(\"password_s\", \"\"),\n        reply_code = column_ifexists(\"reply_code_d\", real(null)),\n        reply_msg = column_ifexists(\"reply_msg_s\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        user = column_ifexists(\"user_s\", \"\"),\n        mime_type = column_ifexists(\"mime_type_s\", \"\"),\n        file_size = column_ifexists(\"file_size_d\", real(null)),\n        fuid = column_ifexists(\"fuid_s\", \"\")\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"ftp\",\n        ts = TimeGenerated,\n        signature_id = toint(reply_code),\n        signature = reply_msg,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        sensor_name = coalesce(system_name, \"unknown\")\n    | extend \n        extract_user = extract(\"user/(?<user>\\\\w+)\", 1, user),\n        action = case(signature_id<300, \"Success\", \"Failure\"),\n        object = split(arg, '/')[-1],\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        command,\n        data_channel_orig_h,\n        data_channel_passive,\n        data_channel_resp_h,\n        arg,\n        data_channel_resp_p,\n        err,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        password,\n        reply_code,\n        reply_msg,\n        uid,\n        user,\n        mime_type,\n        file_size,\n        fuid,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        signature_id,\n        signature,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        sensor_name,\n        extract_user,\n        action,\n        object,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip\n};\ncorelight_ftp\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject26')._parserId26,'/'))))]",
              "dependsOn": [
                "[variables('parserObject26')._parserId26]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ftp')]",
                "contentId": "[variables('parserObject26').parserContentId26]",
                "kind": "Parser",
                "version": "[variables('parserObject26').parserVersion26]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject26').parserContentId26]",
        "contentKind": "Parser",
        "displayName": "corelight_ftp parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject26').parserContentId26,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject26').parserContentId26,'-', '1.1.0')))]",
        "version": "[variables('parserObject26').parserVersion26]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject26')._parserName26]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_ftp parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_ftp",
        "query": "let dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_ftp = view () {\n    union isfuzzy=true Corelight_v2_ftp_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        command = column_ifexists(\"command_s\", \"\"),\n        data_channel_orig_h = column_ifexists(\"data_channel_orig_h_s\", \"\"),\n        data_channel_passive = column_ifexists(\"data_channel_passive_b\", \"\"),\n        data_channel_resp_h = column_ifexists(\"data_channel_resp_h_s\", \"\"),\n        arg = column_ifexists(\"arg_s\", \"\"),\n        data_channel_resp_p = column_ifexists(\"data_channel_resp_p_d\", real(null)),\n        err = column_ifexists(\"err_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        password = column_ifexists(\"password_s\", \"\"),\n        reply_code = column_ifexists(\"reply_code_d\", real(null)),\n        reply_msg = column_ifexists(\"reply_msg_s\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        user = column_ifexists(\"user_s\", \"\"),\n        mime_type = column_ifexists(\"mime_type_s\", \"\"),\n        file_size = column_ifexists(\"file_size_d\", real(null)),\n        fuid = column_ifexists(\"fuid_s\", \"\")\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"ftp\",\n        ts = TimeGenerated,\n        signature_id = toint(reply_code),\n        signature = reply_msg,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        sensor_name = coalesce(system_name, \"unknown\")\n    | extend \n        extract_user = extract(\"user/(?<user>\\\\w+)\", 1, user),\n        action = case(signature_id<300, \"Success\", \"Failure\"),\n        object = split(arg, '/')[-1],\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        command,\n        data_channel_orig_h,\n        data_channel_passive,\n        data_channel_resp_h,\n        arg,\n        data_channel_resp_p,\n        err,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        password,\n        reply_code,\n        reply_msg,\n        uid,\n        user,\n        mime_type,\n        file_size,\n        fuid,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        signature_id,\n        signature,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        sensor_name,\n        extract_user,\n        action,\n        object,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip\n};\ncorelight_ftp\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject26')._parserId26,'/'))))]",
      "dependsOn": [
        "[variables('parserObject26')._parserId26]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ftp')]",
        "contentId": "[variables('parserObject26').parserContentId26]",
        "kind": "Parser",
        "version": "[variables('parserObject26').parserVersion26]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject27').parserTemplateSpecName27]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_generic_dns_tunnels Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject27').parserVersion27]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject27')._parserName27]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_generic_dns_tunnels parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_generic_dns_tunnels",
                "query": "let corelight_generic_dns_tunnels = view () {\n    Corelight_v2_generic_dns_tunnels_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        dns_client=dns_client_s,\n        domain=domain_s,\n        bytes=bytes_d,\n        capture_secs=capture_secs_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"generic_dns_tunnels\",\n        ts=TimeGenerated\n};\ncorelight_generic_dns_tunnels\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject27')._parserId27,'/'))))]",
              "dependsOn": [
                "[variables('parserObject27')._parserId27]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_generic_dns_tunnels')]",
                "contentId": "[variables('parserObject27').parserContentId27]",
                "kind": "Parser",
                "version": "[variables('parserObject27').parserVersion27]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject27').parserContentId27]",
        "contentKind": "Parser",
        "displayName": "corelight_generic_dns_tunnels parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject27').parserContentId27,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject27').parserContentId27,'-', '1.0.0')))]",
        "version": "[variables('parserObject27').parserVersion27]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject27')._parserName27]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_generic_dns_tunnels parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_generic_dns_tunnels",
        "query": "let corelight_generic_dns_tunnels = view () {\n    Corelight_v2_generic_dns_tunnels_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        dns_client=dns_client_s,\n        domain=domain_s,\n        bytes=bytes_d,\n        capture_secs=capture_secs_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"generic_dns_tunnels\",\n        ts=TimeGenerated\n};\ncorelight_generic_dns_tunnels\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject27')._parserId27,'/'))))]",
      "dependsOn": [
        "[variables('parserObject27')._parserId27]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_generic_dns_tunnels')]",
        "contentId": "[variables('parserObject27').parserContentId27]",
        "kind": "Parser",
        "version": "[variables('parserObject27').parserVersion27]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject28').parserTemplateSpecName28]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_generic_icmp_tunnels Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject28').parserVersion28]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject28')._parserName28]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_generic_icmp_tunnels parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_generic_icmp_tunnels",
                "query": "let corelight_generic_icmp_tunnels = view () {\n    Corelight_v2_generic_icmp_tunnels_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        detection=detection_s,\n        orig=orig_s,\n        resp=resp_s,\n        id=id_d,\n        seq=seq_d,\n        bytes=bytes_d,\n        payload_len=payload_len_d,\n        payload=payload_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"generic_icmp_tunnels\",\n        ts=TimeGenerated\n};\ncorelight_generic_icmp_tunnels\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject28')._parserId28,'/'))))]",
              "dependsOn": [
                "[variables('parserObject28')._parserId28]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_generic_icmp_tunnels')]",
                "contentId": "[variables('parserObject28').parserContentId28]",
                "kind": "Parser",
                "version": "[variables('parserObject28').parserVersion28]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject28').parserContentId28]",
        "contentKind": "Parser",
        "displayName": "corelight_generic_icmp_tunnels parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject28').parserContentId28,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject28').parserContentId28,'-', '1.0.0')))]",
        "version": "[variables('parserObject28').parserVersion28]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject28')._parserName28]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_generic_icmp_tunnels parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_generic_icmp_tunnels",
        "query": "let corelight_generic_icmp_tunnels = view () {\n    Corelight_v2_generic_icmp_tunnels_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        detection=detection_s,\n        orig=orig_s,\n        resp=resp_s,\n        id=id_d,\n        seq=seq_d,\n        bytes=bytes_d,\n        payload_len=payload_len_d,\n        payload=payload_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"generic_icmp_tunnels\",\n        ts=TimeGenerated\n};\ncorelight_generic_icmp_tunnels\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject28')._parserId28,'/'))))]",
      "dependsOn": [
        "[variables('parserObject28')._parserId28]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_generic_icmp_tunnels')]",
        "contentId": "[variables('parserObject28').parserContentId28]",
        "kind": "Parser",
        "version": "[variables('parserObject28').parserVersion28]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject29').parserTemplateSpecName29]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_http Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject29').parserVersion29]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject29')._parserName29]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_http parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_http",
                "query": "let StatusLookup = datatable(\n    status: string,\n    action: string\n)[\n    \"success\",\"allowed\",\n    \"failure\",\"blocked\",\n    \"200\",\"success\",\n    \"204\",\"success\",\n    \"206\",\"success\",\n    \"207\",\"success\",\n    \"301\",\"success\",\n    \"302\",\"success\",\n    \"303\",\"success\",\n    \"304\",\"success\",\n    \"307\",\"success\",\n    \"400\",\"failure\",\n    \"401\",\"failure\",\n    \"403\",\"failure\",\n    \"404\",\"failure\",\n    \"408\",\"failure\",\n    \"500\",\"failure\",\n    \"503\",\"failure\",\n    \"504\",\"failure\"\n];\nlet dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_http = view () {\n    union isfuzzy=true Corelight_v2_http_CL, Corelight_v2_http_red_CL, Corelight_v2_http2_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        host = column_ifexists(\"host_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        id_vlan = column_ifexists(\"id_vlan_d\", real(null)),\n        method = column_ifexists(\"method_s\", \"\"),\n        orig_fuids = column_ifexists(\"orig_fuids_s\", \"\"),\n        post_body = column_ifexists(\"post_body_s\", \"\"),\n        request_body_len = column_ifexists(\"request_body_len_d\", real(null)),\n        resp_fuids = column_ifexists(\"resp_fuids_s\", \"\"),\n        response_body_len = column_ifexists(\"response_body_len_d\", real(null)),\n        status_code = column_ifexists(\"status_code_d\", real(null)),\n        status_msg = column_ifexists(\"status_msg_s\", \"\"),\n        tags = column_ifexists(\"tags_s\", \"\"),\n        trans_depth = column_ifexists(\"trans_depth_d\", real(null)),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        uri = column_ifexists(\"uri_s\", \"\"),\n        version = column_ifexists(\"version_s\", \"\"),\n        resp_filenames = column_ifexists(\"resp_filenames_s\", \"\"),\n        user_agent = column_ifexists(\"user_agent_s\", \"\"),\n        referrer = column_ifexists(\"referrer_s\", \"\"),\n        origin = column_ifexists(\"origin_s\", \"\"),\n        info_code = column_ifexists(\"info_code_d\", real(null)),\n        info_msg = column_ifexists(\"info_msg_s\", \"\"),\n        username = column_ifexists(\"username_s\", \"\"),\n        password = column_ifexists(\"password_s\", \"\"),\n        proxied = column_ifexists(\"proxied_s\", \"\"),\n        orig_filenames = column_ifexists(\"orig_filenames_s\", \"\"),\n        orig_mime_types = column_ifexists(\"orig_mime_types_s\", \"\"),\n        resp_mime_types = column_ifexists(\"resp_mime_types_s\", \"\"),\n        push = column_ifexists(\"push_b\", \"\"),\n        encoding = column_ifexists(\"encoding_s\", \"\"),\n        stream_id = column_ifexists(\"stream_id_d\", real(null))\n    | extend status_code = tostring(toint(status_code))\n    | lookup StatusLookup on $left.status_code == $right.status\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"http\",\n        ts = TimeGenerated,\n        dest_host = host,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        http_method = method,\n        bytes_in = request_body_len,\n        bytes_out = response_body_len,\n        status = status_code,\n        vendor_action = status_msg,\n        uri_path = uri,\n        object = resp_filenames,\n        http_user_agent = user_agent,\n        http_referrer = referrer,\n        http_content_type = orig_mime_types,\n        sensor_name = coalesce(system_name, \"unknown\"),\n        http_version = version,\n        http_username = username,\n        http_password = password,\n        http_encoding = encoding\n    | extend\n        http_user_agent_length = strlen(http_user_agent),\n        bytes = bytes_in + bytes_out,\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\"),\n        host_header=dest_host,\n        referrer_domain_domain=parse_url(referrer).Host,\n        referrer_domain_ip=strcat(parse_url(referrer).Host, \":\", parse_url(referrer).Port)\n    | extend \n        url = strcat(\"http://\",host_header,uri),\n        url_domain = host_header\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        host,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        id_vlan,\n        method,\n        orig_fuids,\n        post_body,\n        request_body_len,\n        resp_fuids,\n        response_body_len,\n        status_code,\n        status_msg,\n        tags,\n        trans_depth,\n        uid,\n        uri,\n        version,\n        resp_filenames,\n        user_agent,\n        referrer,\n        origin,\n        info_code,\n        info_msg,\n        username,\n        password,\n        proxied,\n        orig_filenames,\n        orig_mime_types,\n        resp_mime_types,\n        push,\n        encoding,\n        stream_id,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        dest_host,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        http_method,\n        bytes_in,\n        bytes_out,\n        status,\n        vendor_action,\n        uri_path,\n        object,\n        http_user_agent,\n        http_referrer,\n        http_content_type,\n        sensor_name,\n        http_version,\n        http_username,\n        http_password,\n        http_encoding,\n        http_user_agent_length,\n        bytes,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip,\n        host_header,\n        referrer_domain_domain,\n        referrer_domain_ip,\n        url,\n        url_domain,\n        action\n};\ncorelight_http\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject29')._parserId29,'/'))))]",
              "dependsOn": [
                "[variables('parserObject29')._parserId29]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_http')]",
                "contentId": "[variables('parserObject29').parserContentId29]",
                "kind": "Parser",
                "version": "[variables('parserObject29').parserVersion29]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject29').parserContentId29]",
        "contentKind": "Parser",
        "displayName": "corelight_http parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject29').parserContentId29,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject29').parserContentId29,'-', '1.1.0')))]",
        "version": "[variables('parserObject29').parserVersion29]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject29')._parserName29]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_http parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_http",
        "query": "let StatusLookup = datatable(\n    status: string,\n    action: string\n)[\n    \"success\",\"allowed\",\n    \"failure\",\"blocked\",\n    \"200\",\"success\",\n    \"204\",\"success\",\n    \"206\",\"success\",\n    \"207\",\"success\",\n    \"301\",\"success\",\n    \"302\",\"success\",\n    \"303\",\"success\",\n    \"304\",\"success\",\n    \"307\",\"success\",\n    \"400\",\"failure\",\n    \"401\",\"failure\",\n    \"403\",\"failure\",\n    \"404\",\"failure\",\n    \"408\",\"failure\",\n    \"500\",\"failure\",\n    \"503\",\"failure\",\n    \"504\",\"failure\"\n];\nlet dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_http = view () {\n    union isfuzzy=true Corelight_v2_http_CL, Corelight_v2_http_red_CL, Corelight_v2_http2_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        host = column_ifexists(\"host_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        id_vlan = column_ifexists(\"id_vlan_d\", real(null)),\n        method = column_ifexists(\"method_s\", \"\"),\n        orig_fuids = column_ifexists(\"orig_fuids_s\", \"\"),\n        post_body = column_ifexists(\"post_body_s\", \"\"),\n        request_body_len = column_ifexists(\"request_body_len_d\", real(null)),\n        resp_fuids = column_ifexists(\"resp_fuids_s\", \"\"),\n        response_body_len = column_ifexists(\"response_body_len_d\", real(null)),\n        status_code = column_ifexists(\"status_code_d\", real(null)),\n        status_msg = column_ifexists(\"status_msg_s\", \"\"),\n        tags = column_ifexists(\"tags_s\", \"\"),\n        trans_depth = column_ifexists(\"trans_depth_d\", real(null)),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        uri = column_ifexists(\"uri_s\", \"\"),\n        version = column_ifexists(\"version_s\", \"\"),\n        resp_filenames = column_ifexists(\"resp_filenames_s\", \"\"),\n        user_agent = column_ifexists(\"user_agent_s\", \"\"),\n        referrer = column_ifexists(\"referrer_s\", \"\"),\n        origin = column_ifexists(\"origin_s\", \"\"),\n        info_code = column_ifexists(\"info_code_d\", real(null)),\n        info_msg = column_ifexists(\"info_msg_s\", \"\"),\n        username = column_ifexists(\"username_s\", \"\"),\n        password = column_ifexists(\"password_s\", \"\"),\n        proxied = column_ifexists(\"proxied_s\", \"\"),\n        orig_filenames = column_ifexists(\"orig_filenames_s\", \"\"),\n        orig_mime_types = column_ifexists(\"orig_mime_types_s\", \"\"),\n        resp_mime_types = column_ifexists(\"resp_mime_types_s\", \"\"),\n        push = column_ifexists(\"push_b\", \"\"),\n        encoding = column_ifexists(\"encoding_s\", \"\"),\n        stream_id = column_ifexists(\"stream_id_d\", real(null))\n    | extend status_code = tostring(toint(status_code))\n    | lookup StatusLookup on $left.status_code == $right.status\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"http\",\n        ts = TimeGenerated,\n        dest_host = host,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        http_method = method,\n        bytes_in = request_body_len,\n        bytes_out = response_body_len,\n        status = status_code,\n        vendor_action = status_msg,\n        uri_path = uri,\n        object = resp_filenames,\n        http_user_agent = user_agent,\n        http_referrer = referrer,\n        http_content_type = orig_mime_types,\n        sensor_name = coalesce(system_name, \"unknown\"),\n        http_version = version,\n        http_username = username,\n        http_password = password,\n        http_encoding = encoding\n    | extend\n        http_user_agent_length = strlen(http_user_agent),\n        bytes = bytes_in + bytes_out,\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\"),\n        host_header=dest_host,\n        referrer_domain_domain=parse_url(referrer).Host,\n        referrer_domain_ip=strcat(parse_url(referrer).Host, \":\", parse_url(referrer).Port)\n    | extend \n        url = strcat(\"http://\",host_header,uri),\n        url_domain = host_header\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        host,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        id_vlan,\n        method,\n        orig_fuids,\n        post_body,\n        request_body_len,\n        resp_fuids,\n        response_body_len,\n        status_code,\n        status_msg,\n        tags,\n        trans_depth,\n        uid,\n        uri,\n        version,\n        resp_filenames,\n        user_agent,\n        referrer,\n        origin,\n        info_code,\n        info_msg,\n        username,\n        password,\n        proxied,\n        orig_filenames,\n        orig_mime_types,\n        resp_mime_types,\n        push,\n        encoding,\n        stream_id,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        dest_host,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        http_method,\n        bytes_in,\n        bytes_out,\n        status,\n        vendor_action,\n        uri_path,\n        object,\n        http_user_agent,\n        http_referrer,\n        http_content_type,\n        sensor_name,\n        http_version,\n        http_username,\n        http_password,\n        http_encoding,\n        http_user_agent_length,\n        bytes,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip,\n        host_header,\n        referrer_domain_domain,\n        referrer_domain_ip,\n        url,\n        url_domain,\n        action\n};\ncorelight_http\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject29')._parserId29,'/'))))]",
      "dependsOn": [
        "[variables('parserObject29')._parserId29]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_http')]",
        "contentId": "[variables('parserObject29').parserContentId29]",
        "kind": "Parser",
        "version": "[variables('parserObject29').parserVersion29]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject30').parserTemplateSpecName30]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_http2 Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject30').parserVersion30]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject30')._parserName30]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_http2 parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_http2",
                "query": "let corelight_http2 = view () {\n    Corelight_v2_http2_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        stream_id=stream_id_d,\n        method=method_s,\n        host=host_s,\n        uri=uri_s,\n        referrer=referrer_s,\n        version=version_s,\n        user_agent=user_agent_s,\n        request_body_len=request_body_len_d,\n        response_body_len=response_body_len_d,\n        status_code=status_code_d,\n        status_msg=status_msg_s,\n        info_code=info_code_d,\n        info_msg=info_msg_s,\n        encoding=encoding_s,\n        username=username_s,\n        password=password_s,\n        proxied=proxied_s,\n        push=push_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"http2\",\n        ts=TimeGenerated\n};\ncorelight_http2\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject30')._parserId30,'/'))))]",
              "dependsOn": [
                "[variables('parserObject30')._parserId30]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_http2')]",
                "contentId": "[variables('parserObject30').parserContentId30]",
                "kind": "Parser",
                "version": "[variables('parserObject30').parserVersion30]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject30').parserContentId30]",
        "contentKind": "Parser",
        "displayName": "corelight_http2 parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject30').parserContentId30,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject30').parserContentId30,'-', '1.0.0')))]",
        "version": "[variables('parserObject30').parserVersion30]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject30')._parserName30]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_http2 parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_http2",
        "query": "let corelight_http2 = view () {\n    Corelight_v2_http2_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        stream_id=stream_id_d,\n        method=method_s,\n        host=host_s,\n        uri=uri_s,\n        referrer=referrer_s,\n        version=version_s,\n        user_agent=user_agent_s,\n        request_body_len=request_body_len_d,\n        response_body_len=response_body_len_d,\n        status_code=status_code_d,\n        status_msg=status_msg_s,\n        info_code=info_code_d,\n        info_msg=info_msg_s,\n        encoding=encoding_s,\n        username=username_s,\n        password=password_s,\n        proxied=proxied_s,\n        push=push_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"http2\",\n        ts=TimeGenerated\n};\ncorelight_http2\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject30')._parserId30,'/'))))]",
      "dependsOn": [
        "[variables('parserObject30')._parserId30]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_http2')]",
        "contentId": "[variables('parserObject30').parserContentId30]",
        "kind": "Parser",
        "version": "[variables('parserObject30').parserVersion30]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject31').parserTemplateSpecName31]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_http_red Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject31').parserVersion31]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject31')._parserName31]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_http_red parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_http_red",
                "query": "let corelight_http_red = view () {\n    Corelight_v2_http_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        trans_depth=trans_depth_d,\n        method=method_s,\n        host=host_s,\n        uri=uri_s,\n        referrer=referrer_s,\n        version=version_s,\n        user_agent=user_agent_s,\n        origin=origin_s,\n        request_body_len=request_body_len_d,\n        response_body_len=response_body_len_d,\n        status_code=status_code_d,\n        status_msg=status_msg_s,\n        info_code=info_code_d,\n        info_msg=info_msg_s,\n        tags=tags_s,\n        username=username_s,\n        password=password_s,\n        proxied=proxied_s,\n        orig_fuids=orig_fuids_s,\n        orig_filenames=orig_filenames_s,\n        orig_mime_types=orig_mime_types_s,\n        resp_fuids=resp_fuids_s,\n        resp_filenames=resp_filenames_s,\n        resp_mime_types=resp_mime_types_s,\n        post_body=post_body_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"http_red\",\n        ts=TimeGenerated\n};\ncorelight_http_red\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject31')._parserId31,'/'))))]",
              "dependsOn": [
                "[variables('parserObject31')._parserId31]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_http_red')]",
                "contentId": "[variables('parserObject31').parserContentId31]",
                "kind": "Parser",
                "version": "[variables('parserObject31').parserVersion31]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject31').parserContentId31]",
        "contentKind": "Parser",
        "displayName": "corelight_http_red parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject31').parserContentId31,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject31').parserContentId31,'-', '1.0.0')))]",
        "version": "[variables('parserObject31').parserVersion31]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject31')._parserName31]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_http_red parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_http_red",
        "query": "let corelight_http_red = view () {\n    Corelight_v2_http_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        trans_depth=trans_depth_d,\n        method=method_s,\n        host=host_s,\n        uri=uri_s,\n        referrer=referrer_s,\n        version=version_s,\n        user_agent=user_agent_s,\n        origin=origin_s,\n        request_body_len=request_body_len_d,\n        response_body_len=response_body_len_d,\n        status_code=status_code_d,\n        status_msg=status_msg_s,\n        info_code=info_code_d,\n        info_msg=info_msg_s,\n        tags=tags_s,\n        username=username_s,\n        password=password_s,\n        proxied=proxied_s,\n        orig_fuids=orig_fuids_s,\n        orig_filenames=orig_filenames_s,\n        orig_mime_types=orig_mime_types_s,\n        resp_fuids=resp_fuids_s,\n        resp_filenames=resp_filenames_s,\n        resp_mime_types=resp_mime_types_s,\n        post_body=post_body_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"http_red\",\n        ts=TimeGenerated\n};\ncorelight_http_red\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject31')._parserId31,'/'))))]",
      "dependsOn": [
        "[variables('parserObject31')._parserId31]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_http_red')]",
        "contentId": "[variables('parserObject31').parserContentId31]",
        "kind": "Parser",
        "version": "[variables('parserObject31').parserVersion31]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject32').parserTemplateSpecName32]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_icmp_specific_tunnels Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject32').parserVersion32]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject32')._parserName32]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_icmp_specific_tunnels parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_icmp_specific_tunnels",
                "query": "let corelight_icmp_specific_tunnels = view () {\n    Corelight_v2_icmp_specific_tunnels_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        start_time=start_time_t,\n        duration=duration_d,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        tunnel=tunnel_s,\n        seq=seq_d,\n        icmp_id=icmp_id_d,\n        payload=payload_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"icmp_specific_tunnels\",\n        ts=TimeGenerated\n};\ncorelight_icmp_specific_tunnels\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject32')._parserId32,'/'))))]",
              "dependsOn": [
                "[variables('parserObject32')._parserId32]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_icmp_specific_tunnels')]",
                "contentId": "[variables('parserObject32').parserContentId32]",
                "kind": "Parser",
                "version": "[variables('parserObject32').parserVersion32]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject32').parserContentId32]",
        "contentKind": "Parser",
        "displayName": "corelight_icmp_specific_tunnels parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject32').parserContentId32,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject32').parserContentId32,'-', '1.0.0')))]",
        "version": "[variables('parserObject32').parserVersion32]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject32')._parserName32]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_icmp_specific_tunnels parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_icmp_specific_tunnels",
        "query": "let corelight_icmp_specific_tunnels = view () {\n    Corelight_v2_icmp_specific_tunnels_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        start_time=start_time_t,\n        duration=duration_d,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        tunnel=tunnel_s,\n        seq=seq_d,\n        icmp_id=icmp_id_d,\n        payload=payload_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"icmp_specific_tunnels\",\n        ts=TimeGenerated\n};\ncorelight_icmp_specific_tunnels\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject32')._parserId32,'/'))))]",
      "dependsOn": [
        "[variables('parserObject32')._parserId32]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_icmp_specific_tunnels')]",
        "contentId": "[variables('parserObject32').parserContentId32]",
        "kind": "Parser",
        "version": "[variables('parserObject32').parserVersion32]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject33').parserTemplateSpecName33]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_intel Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject33').parserVersion33]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject33')._parserName33]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_intel parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_intel",
                "query": "let corelight_intel = view () {\n    Corelight_v2_intel_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        seen_indicator=seen_indicator_s,\n        seen_indicator_type=seen_indicator_type_s,\n        seen_where=seen_where_s,\n        matched=matched_s,\n        sources=sources_s,\n        fuid=fuid_s,\n        file_mime_type=file_mime_type_s,\n        file_desc=file_desc_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"intel\",\n        ts=TimeGenerated\n};\ncorelight_intel\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject33')._parserId33,'/'))))]",
              "dependsOn": [
                "[variables('parserObject33')._parserId33]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_intel')]",
                "contentId": "[variables('parserObject33').parserContentId33]",
                "kind": "Parser",
                "version": "[variables('parserObject33').parserVersion33]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject33').parserContentId33]",
        "contentKind": "Parser",
        "displayName": "corelight_intel parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject33').parserContentId33,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject33').parserContentId33,'-', '1.0.0')))]",
        "version": "[variables('parserObject33').parserVersion33]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject33')._parserName33]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_intel parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_intel",
        "query": "let corelight_intel = view () {\n    Corelight_v2_intel_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        seen_indicator=seen_indicator_s,\n        seen_indicator_type=seen_indicator_type_s,\n        seen_where=seen_where_s,\n        matched=matched_s,\n        sources=sources_s,\n        fuid=fuid_s,\n        file_mime_type=file_mime_type_s,\n        file_desc=file_desc_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"intel\",\n        ts=TimeGenerated\n};\ncorelight_intel\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject33')._parserId33,'/'))))]",
      "dependsOn": [
        "[variables('parserObject33')._parserId33]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_intel')]",
        "contentId": "[variables('parserObject33').parserContentId33]",
        "kind": "Parser",
        "version": "[variables('parserObject33').parserVersion33]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject34').parserTemplateSpecName34]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_ipsec Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject34').parserVersion34]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject34')._parserName34]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_ipsec parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_ipsec",
                "query": "let corelight_ipsec = view () {\n    Corelight_v2_ipsec_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        is_orig=is_orig_b,\n        initiator_spi=initiator_spi_s,\n        responder_spi=responder_spi_s,\n        maj_ver=maj_ver_d,\n        min_ver=min_ver_d,\n        exchange_type=exchange_type_d,\n        flag_e=flag_e_b,\n        flag_c=flag_c_b,\n        flag_a=flag_a_b,\n        flag_i=flag_i_b,\n        flag_v=flag_v_b,\n        flag_r=flag_r_b,\n        message_id=message_id_d,\n        vendor_ids=vendor_ids_s,\n        notify_messages=notify_messages_s,\n        transforms=transforms_s,\n        ke_dh_groups=ke_dh_groups_s,\n        proposals=proposals_s,\n        protocol_id=protocol_id_d,\n        certificates=certificates_s,\n        transform_attributes=transform_attributes_s,\n        length=length_d,\n        doi=doi_d,\n        situation=situation_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ipsec\",\n        ts=TimeGenerated\n};\ncorelight_ipsec\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject34')._parserId34,'/'))))]",
              "dependsOn": [
                "[variables('parserObject34')._parserId34]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ipsec')]",
                "contentId": "[variables('parserObject34').parserContentId34]",
                "kind": "Parser",
                "version": "[variables('parserObject34').parserVersion34]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject34').parserContentId34]",
        "contentKind": "Parser",
        "displayName": "corelight_ipsec parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject34').parserContentId34,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject34').parserContentId34,'-', '1.0.0')))]",
        "version": "[variables('parserObject34').parserVersion34]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject34')._parserName34]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_ipsec parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_ipsec",
        "query": "let corelight_ipsec = view () {\n    Corelight_v2_ipsec_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        is_orig=is_orig_b,\n        initiator_spi=initiator_spi_s,\n        responder_spi=responder_spi_s,\n        maj_ver=maj_ver_d,\n        min_ver=min_ver_d,\n        exchange_type=exchange_type_d,\n        flag_e=flag_e_b,\n        flag_c=flag_c_b,\n        flag_a=flag_a_b,\n        flag_i=flag_i_b,\n        flag_v=flag_v_b,\n        flag_r=flag_r_b,\n        message_id=message_id_d,\n        vendor_ids=vendor_ids_s,\n        notify_messages=notify_messages_s,\n        transforms=transforms_s,\n        ke_dh_groups=ke_dh_groups_s,\n        proposals=proposals_s,\n        protocol_id=protocol_id_d,\n        certificates=certificates_s,\n        transform_attributes=transform_attributes_s,\n        length=length_d,\n        doi=doi_d,\n        situation=situation_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ipsec\",\n        ts=TimeGenerated\n};\ncorelight_ipsec\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject34')._parserId34,'/'))))]",
      "dependsOn": [
        "[variables('parserObject34')._parserId34]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ipsec')]",
        "contentId": "[variables('parserObject34').parserContentId34]",
        "kind": "Parser",
        "version": "[variables('parserObject34').parserVersion34]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject35').parserTemplateSpecName35]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_irc Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject35').parserVersion35]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject35')._parserName35]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_irc parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_irc",
                "query": "let corelight_irc = view () {\n    Corelight_v2_irc_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        nick=nick_s,\n        user=user_s,\n        command=command_s,\n        value=value_s,\n        addl=addl_s,\n        dcc_file_name=dcc_file_name_s,\n        dcc_file_size=dcc_file_size_d,\n        dcc_mime_type=dcc_mime_type_s,\n        fuid=fuid_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"irc\",\n        ts=TimeGenerated\n};\ncorelight_irc\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject35')._parserId35,'/'))))]",
              "dependsOn": [
                "[variables('parserObject35')._parserId35]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_irc')]",
                "contentId": "[variables('parserObject35').parserContentId35]",
                "kind": "Parser",
                "version": "[variables('parserObject35').parserVersion35]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject35').parserContentId35]",
        "contentKind": "Parser",
        "displayName": "corelight_irc parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject35').parserContentId35,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject35').parserContentId35,'-', '1.0.0')))]",
        "version": "[variables('parserObject35').parserVersion35]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject35')._parserName35]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_irc parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_irc",
        "query": "let corelight_irc = view () {\n    Corelight_v2_irc_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        nick=nick_s,\n        user=user_s,\n        command=command_s,\n        value=value_s,\n        addl=addl_s,\n        dcc_file_name=dcc_file_name_s,\n        dcc_file_size=dcc_file_size_d,\n        dcc_mime_type=dcc_mime_type_s,\n        fuid=fuid_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"irc\",\n        ts=TimeGenerated\n};\ncorelight_irc\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject35')._parserId35,'/'))))]",
      "dependsOn": [
        "[variables('parserObject35')._parserId35]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_irc')]",
        "contentId": "[variables('parserObject35').parserContentId35]",
        "kind": "Parser",
        "version": "[variables('parserObject35').parserVersion35]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject36').parserTemplateSpecName36]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_iso_cotp Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject36').parserVersion36]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject36')._parserName36]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_iso_cotp parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_iso_cotp",
                "query": "let corelight_iso_cotp = view () {\n    Corelight_v2_iso_cotp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        pdu_type=pdu_type_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"iso_cotp\",\n        ts=TimeGenerated\n};\ncorelight_iso_cotp\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject36')._parserId36,'/'))))]",
              "dependsOn": [
                "[variables('parserObject36')._parserId36]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_iso_cotp')]",
                "contentId": "[variables('parserObject36').parserContentId36]",
                "kind": "Parser",
                "version": "[variables('parserObject36').parserVersion36]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject36').parserContentId36]",
        "contentKind": "Parser",
        "displayName": "corelight_iso_cotp parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject36').parserContentId36,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject36').parserContentId36,'-', '1.0.0')))]",
        "version": "[variables('parserObject36').parserVersion36]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject36')._parserName36]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_iso_cotp parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_iso_cotp",
        "query": "let corelight_iso_cotp = view () {\n    Corelight_v2_iso_cotp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        pdu_type=pdu_type_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"iso_cotp\",\n        ts=TimeGenerated\n};\ncorelight_iso_cotp\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject36')._parserId36,'/'))))]",
      "dependsOn": [
        "[variables('parserObject36')._parserId36]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_iso_cotp')]",
        "contentId": "[variables('parserObject36').parserContentId36]",
        "kind": "Parser",
        "version": "[variables('parserObject36').parserVersion36]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject37').parserTemplateSpecName37]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_kerberos Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject37').parserVersion37]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject37')._parserName37]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_kerberos parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_kerberos",
                "query": "let corelight_kerberos = view () {\n    Corelight_v2_kerberos_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        request_type=request_type_s,\n        client=client_s,\n        service=service_s,\n        success=success_b,\n        error_msg=error_msg_s,\n        from=from_t,\n        till=till_t,\n        cipher=cipher_s,\n        forwardable=forwardable_b,\n        renewable=renewable_b,\n        client_cert_subject=client_cert_subject_s,\n        client_cert_fuid=client_cert_fuid_s,\n        server_cert_subject=server_cert_subject_s,\n        server_cert_fuid=server_cert_fuid_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"kerberos\",\n        ts=TimeGenerated\n};\ncorelight_kerberos\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject37')._parserId37,'/'))))]",
              "dependsOn": [
                "[variables('parserObject37')._parserId37]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_kerberos')]",
                "contentId": "[variables('parserObject37').parserContentId37]",
                "kind": "Parser",
                "version": "[variables('parserObject37').parserVersion37]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject37').parserContentId37]",
        "contentKind": "Parser",
        "displayName": "corelight_kerberos parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject37').parserContentId37,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject37').parserContentId37,'-', '1.0.0')))]",
        "version": "[variables('parserObject37').parserVersion37]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject37')._parserName37]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_kerberos parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_kerberos",
        "query": "let corelight_kerberos = view () {\n    Corelight_v2_kerberos_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        request_type=request_type_s,\n        client=client_s,\n        service=service_s,\n        success=success_b,\n        error_msg=error_msg_s,\n        from=from_t,\n        till=till_t,\n        cipher=cipher_s,\n        forwardable=forwardable_b,\n        renewable=renewable_b,\n        client_cert_subject=client_cert_subject_s,\n        client_cert_fuid=client_cert_fuid_s,\n        server_cert_subject=server_cert_subject_s,\n        server_cert_fuid=server_cert_fuid_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"kerberos\",\n        ts=TimeGenerated\n};\ncorelight_kerberos\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject37')._parserId37,'/'))))]",
      "dependsOn": [
        "[variables('parserObject37')._parserId37]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_kerberos')]",
        "contentId": "[variables('parserObject37').parserContentId37]",
        "kind": "Parser",
        "version": "[variables('parserObject37').parserVersion37]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject38').parserTemplateSpecName38]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_known_certs Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject38').parserVersion38]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject38')._parserName38]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_known_certs parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_known_certs",
                "query": "let corelight_known_certs = view () {\n    Corelight_v2_known_certs_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        hash=hash_s,\n        port_num=port_num_d,\n        protocol=protocol_s,\n        serial=serial_s,\n        subject=subject_s,\n        issuer_subject=issuer_subject_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_certs\",\n        ts=TimeGenerated\n};\ncorelight_known_certs\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject38')._parserId38,'/'))))]",
              "dependsOn": [
                "[variables('parserObject38')._parserId38]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_certs')]",
                "contentId": "[variables('parserObject38').parserContentId38]",
                "kind": "Parser",
                "version": "[variables('parserObject38').parserVersion38]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject38').parserContentId38]",
        "contentKind": "Parser",
        "displayName": "corelight_known_certs parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject38').parserContentId38,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject38').parserContentId38,'-', '1.0.0')))]",
        "version": "[variables('parserObject38').parserVersion38]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject38')._parserName38]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_known_certs parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_known_certs",
        "query": "let corelight_known_certs = view () {\n    Corelight_v2_known_certs_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        hash=hash_s,\n        port_num=port_num_d,\n        protocol=protocol_s,\n        serial=serial_s,\n        subject=subject_s,\n        issuer_subject=issuer_subject_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_certs\",\n        ts=TimeGenerated\n};\ncorelight_known_certs\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject38')._parserId38,'/'))))]",
      "dependsOn": [
        "[variables('parserObject38')._parserId38]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_certs')]",
        "contentId": "[variables('parserObject38').parserContentId38]",
        "kind": "Parser",
        "version": "[variables('parserObject38').parserVersion38]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject39').parserTemplateSpecName39]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_known_devices Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject39').parserVersion39]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject39')._parserName39]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_known_devices parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_known_devices",
                "query": "let corelight_known_devices = view () {\n    Corelight_v2_known_devices_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        mac=mac_s,\n        vendor_mac=vendor_mac_s,\n        protocols=protocols_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_devices\",\n        ts=TimeGenerated\n};\ncorelight_known_devices\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject39')._parserId39,'/'))))]",
              "dependsOn": [
                "[variables('parserObject39')._parserId39]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_devices')]",
                "contentId": "[variables('parserObject39').parserContentId39]",
                "kind": "Parser",
                "version": "[variables('parserObject39').parserVersion39]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject39').parserContentId39]",
        "contentKind": "Parser",
        "displayName": "corelight_known_devices parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject39').parserContentId39,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject39').parserContentId39,'-', '1.0.0')))]",
        "version": "[variables('parserObject39').parserVersion39]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject39')._parserName39]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_known_devices parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_known_devices",
        "query": "let corelight_known_devices = view () {\n    Corelight_v2_known_devices_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        mac=mac_s,\n        vendor_mac=vendor_mac_s,\n        protocols=protocols_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_devices\",\n        ts=TimeGenerated\n};\ncorelight_known_devices\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject39')._parserId39,'/'))))]",
      "dependsOn": [
        "[variables('parserObject39')._parserId39]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_devices')]",
        "contentId": "[variables('parserObject39').parserContentId39]",
        "kind": "Parser",
        "version": "[variables('parserObject39').parserVersion39]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject40').parserTemplateSpecName40]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_known_domains Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject40').parserVersion40]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject40')._parserName40]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_known_domains parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_known_domains",
                "query": "let corelight_known_domains = view () {\n    Corelight_v2_known_domains_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        domain=domain_s,\n        protocols=protocols_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_domains\",\n        ts=TimeGenerated\n};\ncorelight_known_domains\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject40')._parserId40,'/'))))]",
              "dependsOn": [
                "[variables('parserObject40')._parserId40]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_domains')]",
                "contentId": "[variables('parserObject40').parserContentId40]",
                "kind": "Parser",
                "version": "[variables('parserObject40').parserVersion40]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject40').parserContentId40]",
        "contentKind": "Parser",
        "displayName": "corelight_known_domains parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject40').parserContentId40,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject40').parserContentId40,'-', '1.0.0')))]",
        "version": "[variables('parserObject40').parserVersion40]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject40')._parserName40]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_known_domains parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_known_domains",
        "query": "let corelight_known_domains = view () {\n    Corelight_v2_known_domains_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        domain=domain_s,\n        protocols=protocols_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_domains\",\n        ts=TimeGenerated\n};\ncorelight_known_domains\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject40')._parserId40,'/'))))]",
      "dependsOn": [
        "[variables('parserObject40')._parserId40]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_domains')]",
        "contentId": "[variables('parserObject40').parserContentId40]",
        "kind": "Parser",
        "version": "[variables('parserObject40').parserVersion40]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject41').parserTemplateSpecName41]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_known_hosts Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject41').parserVersion41]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject41')._parserName41]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_known_hosts parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_known_hosts",
                "query": "let corelight_known_hosts = view () {\n    Corelight_v2_known_hosts_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        conns_opened=conns_opened_d,\n        conns_closed=conns_closed_d,\n        conns_pending=conns_pending_d,\n        long_conns=long_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_hosts\",\n        ts=TimeGenerated\n};\ncorelight_known_hosts\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject41')._parserId41,'/'))))]",
              "dependsOn": [
                "[variables('parserObject41')._parserId41]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_hosts')]",
                "contentId": "[variables('parserObject41').parserContentId41]",
                "kind": "Parser",
                "version": "[variables('parserObject41').parserVersion41]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject41').parserContentId41]",
        "contentKind": "Parser",
        "displayName": "corelight_known_hosts parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject41').parserContentId41,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject41').parserContentId41,'-', '1.0.0')))]",
        "version": "[variables('parserObject41').parserVersion41]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject41')._parserName41]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_known_hosts parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_known_hosts",
        "query": "let corelight_known_hosts = view () {\n    Corelight_v2_known_hosts_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        conns_opened=conns_opened_d,\n        conns_closed=conns_closed_d,\n        conns_pending=conns_pending_d,\n        long_conns=long_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_hosts\",\n        ts=TimeGenerated\n};\ncorelight_known_hosts\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject41')._parserId41,'/'))))]",
      "dependsOn": [
        "[variables('parserObject41')._parserId41]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_hosts')]",
        "contentId": "[variables('parserObject41').parserContentId41]",
        "kind": "Parser",
        "version": "[variables('parserObject41').parserVersion41]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject42').parserTemplateSpecName42]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_known_names Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject42').parserVersion42]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject42')._parserName42]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_known_names parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_known_names",
                "query": "let corelight_known_names = view () {\n    Corelight_v2_known_names_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        hostname=hostname_s,\n        protocols=protocols_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_names\",\n        ts=TimeGenerated\n};\ncorelight_known_names\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject42')._parserId42,'/'))))]",
              "dependsOn": [
                "[variables('parserObject42')._parserId42]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_names')]",
                "contentId": "[variables('parserObject42').parserContentId42]",
                "kind": "Parser",
                "version": "[variables('parserObject42').parserVersion42]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject42').parserContentId42]",
        "contentKind": "Parser",
        "displayName": "corelight_known_names parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject42').parserContentId42,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject42').parserContentId42,'-', '1.0.0')))]",
        "version": "[variables('parserObject42').parserVersion42]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject42')._parserName42]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_known_names parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_known_names",
        "query": "let corelight_known_names = view () {\n    Corelight_v2_known_names_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        hostname=hostname_s,\n        protocols=protocols_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_names\",\n        ts=TimeGenerated\n};\ncorelight_known_names\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject42')._parserId42,'/'))))]",
      "dependsOn": [
        "[variables('parserObject42')._parserId42]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_names')]",
        "contentId": "[variables('parserObject42').parserContentId42]",
        "kind": "Parser",
        "version": "[variables('parserObject42').parserVersion42]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject43').parserTemplateSpecName43]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_known_remotes Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject43').parserVersion43]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject43')._parserName43]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_known_remotes parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_known_remotes",
                "query": "let corelight_known_remotes = view () {\n    Corelight_v2_known_remotes_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_remotes\",\n        ts=TimeGenerated\n};\ncorelight_known_remotes\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject43')._parserId43,'/'))))]",
              "dependsOn": [
                "[variables('parserObject43')._parserId43]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_remotes')]",
                "contentId": "[variables('parserObject43').parserContentId43]",
                "kind": "Parser",
                "version": "[variables('parserObject43').parserVersion43]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject43').parserContentId43]",
        "contentKind": "Parser",
        "displayName": "corelight_known_remotes parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject43').parserContentId43,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject43').parserContentId43,'-', '1.0.0')))]",
        "version": "[variables('parserObject43').parserVersion43]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject43')._parserName43]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_known_remotes parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_known_remotes",
        "query": "let corelight_known_remotes = view () {\n    Corelight_v2_known_remotes_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_remotes\",\n        ts=TimeGenerated\n};\ncorelight_known_remotes\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject43')._parserId43,'/'))))]",
      "dependsOn": [
        "[variables('parserObject43')._parserId43]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_remotes')]",
        "contentId": "[variables('parserObject43').parserContentId43]",
        "kind": "Parser",
        "version": "[variables('parserObject43').parserVersion43]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject44').parserTemplateSpecName44]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_known_services Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject44').parserVersion44]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject44')._parserName44]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_known_services parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_known_services",
                "query": "let corelight_known_services = view () {\n    Corelight_v2_known_services_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        port_num=port_num_d,\n        protocol=protocol_s,\n        service=service_s,\n        software=software_s,\n        app=app_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_services\",\n        ts=TimeGenerated\n};\ncorelight_known_services\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject44')._parserId44,'/'))))]",
              "dependsOn": [
                "[variables('parserObject44')._parserId44]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_services')]",
                "contentId": "[variables('parserObject44').parserContentId44]",
                "kind": "Parser",
                "version": "[variables('parserObject44').parserVersion44]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject44').parserContentId44]",
        "contentKind": "Parser",
        "displayName": "corelight_known_services parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject44').parserContentId44,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject44').parserContentId44,'-', '1.0.0')))]",
        "version": "[variables('parserObject44').parserVersion44]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject44')._parserName44]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_known_services parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_known_services",
        "query": "let corelight_known_services = view () {\n    Corelight_v2_known_services_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        port_num=port_num_d,\n        protocol=protocol_s,\n        service=service_s,\n        software=software_s,\n        app=app_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_services\",\n        ts=TimeGenerated\n};\ncorelight_known_services\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject44')._parserId44,'/'))))]",
      "dependsOn": [
        "[variables('parserObject44')._parserId44]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_services')]",
        "contentId": "[variables('parserObject44').parserContentId44]",
        "kind": "Parser",
        "version": "[variables('parserObject44').parserVersion44]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject45').parserTemplateSpecName45]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_known_users Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject45').parserVersion45]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject45')._parserName45]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_known_users parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_known_users",
                "query": "let corelight_known_users = view () {\n    Corelight_v2_known_users_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        remote_ip=remote_ip_s,\n        user=user_s,\n        protocol=protocol_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_users\",\n        ts=TimeGenerated\n};\ncorelight_known_users\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject45')._parserId45,'/'))))]",
              "dependsOn": [
                "[variables('parserObject45')._parserId45]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_users')]",
                "contentId": "[variables('parserObject45').parserContentId45]",
                "kind": "Parser",
                "version": "[variables('parserObject45').parserVersion45]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject45').parserContentId45]",
        "contentKind": "Parser",
        "displayName": "corelight_known_users parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject45').parserContentId45,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject45').parserContentId45,'-', '1.0.0')))]",
        "version": "[variables('parserObject45').parserVersion45]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject45')._parserName45]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_known_users parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_known_users",
        "query": "let corelight_known_users = view () {\n    Corelight_v2_known_users_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        duration=duration_d,\n        kuid=kuid_s,\n        host_ip=host_ip_s,\n        remote_ip=remote_ip_s,\n        user=user_s,\n        protocol=protocol_s,\n        num_conns=num_conns_d,\n        annotations=annotations_s,\n        last_active_session=last_active_session_s,\n        last_active_interval=last_active_interval_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"known_users\",\n        ts=TimeGenerated\n};\ncorelight_known_users\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject45')._parserId45,'/'))))]",
      "dependsOn": [
        "[variables('parserObject45')._parserId45]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_known_users')]",
        "contentId": "[variables('parserObject45').parserContentId45]",
        "kind": "Parser",
        "version": "[variables('parserObject45').parserVersion45]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject46').parserTemplateSpecName46]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_local_subnets Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject46').parserVersion46]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject46')._parserName46]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_local_subnets parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_local_subnets",
                "query": "let corelight_local_subnets = view () {\n    Corelight_v2_local_subnets_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        round=round_d,\n        ip_version=ip_version_d,\n        subnets=subnets_s,\n        component_ids=component_ids_s,\n        size_of_component=size_of_component_d,\n        bipartite=bipartite_b,\n        inferred_site=inferred_site_b,\n        other_ips=other_ips_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"local_subnets\",\n        ts=TimeGenerated\n};\ncorelight_local_subnets\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject46')._parserId46,'/'))))]",
              "dependsOn": [
                "[variables('parserObject46')._parserId46]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_local_subnets')]",
                "contentId": "[variables('parserObject46').parserContentId46]",
                "kind": "Parser",
                "version": "[variables('parserObject46').parserVersion46]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject46').parserContentId46]",
        "contentKind": "Parser",
        "displayName": "corelight_local_subnets parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject46').parserContentId46,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject46').parserContentId46,'-', '1.0.0')))]",
        "version": "[variables('parserObject46').parserVersion46]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject46')._parserName46]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_local_subnets parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_local_subnets",
        "query": "let corelight_local_subnets = view () {\n    Corelight_v2_local_subnets_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        round=round_d,\n        ip_version=ip_version_d,\n        subnets=subnets_s,\n        component_ids=component_ids_s,\n        size_of_component=size_of_component_d,\n        bipartite=bipartite_b,\n        inferred_site=inferred_site_b,\n        other_ips=other_ips_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"local_subnets\",\n        ts=TimeGenerated\n};\ncorelight_local_subnets\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject46')._parserId46,'/'))))]",
      "dependsOn": [
        "[variables('parserObject46')._parserId46]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_local_subnets')]",
        "contentId": "[variables('parserObject46').parserContentId46]",
        "kind": "Parser",
        "version": "[variables('parserObject46').parserVersion46]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject47').parserTemplateSpecName47]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_local_subnets_dj Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject47').parserVersion47]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject47')._parserName47]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_local_subnets_dj parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_local_subnets_dj",
                "query": "let corelight_local_subnets_dj = view () {\n    Corelight_v2_local_subnets_dj_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        round=round_d,\n        component_id=component_id_d,\n        ip_version=ip_version_d,\n        v=v_s,\n        side=side_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"local_subnets_dj\",\n        ts=TimeGenerated\n};\ncorelight_local_subnets_dj\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject47')._parserId47,'/'))))]",
              "dependsOn": [
                "[variables('parserObject47')._parserId47]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_local_subnets_dj')]",
                "contentId": "[variables('parserObject47').parserContentId47]",
                "kind": "Parser",
                "version": "[variables('parserObject47').parserVersion47]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject47').parserContentId47]",
        "contentKind": "Parser",
        "displayName": "corelight_local_subnets_dj parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject47').parserContentId47,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject47').parserContentId47,'-', '1.0.0')))]",
        "version": "[variables('parserObject47').parserVersion47]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject47')._parserName47]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_local_subnets_dj parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_local_subnets_dj",
        "query": "let corelight_local_subnets_dj = view () {\n    Corelight_v2_local_subnets_dj_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        round=round_d,\n        component_id=component_id_d,\n        ip_version=ip_version_d,\n        v=v_s,\n        side=side_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"local_subnets_dj\",\n        ts=TimeGenerated\n};\ncorelight_local_subnets_dj\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject47')._parserId47,'/'))))]",
      "dependsOn": [
        "[variables('parserObject47')._parserId47]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_local_subnets_dj')]",
        "contentId": "[variables('parserObject47').parserContentId47]",
        "kind": "Parser",
        "version": "[variables('parserObject47').parserVersion47]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject48').parserTemplateSpecName48]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_local_subnets_graphs Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject48').parserVersion48]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject48')._parserName48]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_local_subnets_graphs parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_local_subnets_graphs",
                "query": "let corelight_local_subnets_graphs = view () {\n    Corelight_v2_local_subnets_graphs_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        round=round_d,\n        component_id=component_id_d,\n        ip_version=ip_version_d,\n        v1=v1_s,\n        v2=v2_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"local_subnets_graphs\",\n        ts=TimeGenerated\n};\ncorelight_local_subnets_graphs\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject48')._parserId48,'/'))))]",
              "dependsOn": [
                "[variables('parserObject48')._parserId48]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_local_subnets_graphs')]",
                "contentId": "[variables('parserObject48').parserContentId48]",
                "kind": "Parser",
                "version": "[variables('parserObject48').parserVersion48]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject48').parserContentId48]",
        "contentKind": "Parser",
        "displayName": "corelight_local_subnets_graphs parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject48').parserContentId48,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject48').parserContentId48,'-', '1.0.0')))]",
        "version": "[variables('parserObject48').parserVersion48]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject48')._parserName48]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_local_subnets_graphs parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_local_subnets_graphs",
        "query": "let corelight_local_subnets_graphs = view () {\n    Corelight_v2_local_subnets_graphs_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        round=round_d,\n        component_id=component_id_d,\n        ip_version=ip_version_d,\n        v1=v1_s,\n        v2=v2_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"local_subnets_graphs\",\n        ts=TimeGenerated\n};\ncorelight_local_subnets_graphs\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject48')._parserId48,'/'))))]",
      "dependsOn": [
        "[variables('parserObject48')._parserId48]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_local_subnets_graphs')]",
        "contentId": "[variables('parserObject48').parserContentId48]",
        "kind": "Parser",
        "version": "[variables('parserObject48').parserVersion48]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject49').parserTemplateSpecName49]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_log4shell Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject49').parserVersion49]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject49')._parserName49]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_log4shell parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_log4shell",
                "query": "let corelight_log4shell = view () {\n    Corelight_v2_log4shell_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        http_uri=http_uri_s,\n        uri=uri_s,\n        stem=stem_s,\n        target_host=target_host_s,\n        target_port=target_port_s,\n        method=method_s,\n        is_orig=is_orig_b,\n        name=name_s,\n        value=value_s,\n        matched_name=matched_name_b,\n        matched_value=matched_value_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"log4shell\",\n        ts=TimeGenerated\n};\ncorelight_log4shell\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject49')._parserId49,'/'))))]",
              "dependsOn": [
                "[variables('parserObject49')._parserId49]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_log4shell')]",
                "contentId": "[variables('parserObject49').parserContentId49]",
                "kind": "Parser",
                "version": "[variables('parserObject49').parserVersion49]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject49').parserContentId49]",
        "contentKind": "Parser",
        "displayName": "corelight_log4shell parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject49').parserContentId49,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject49').parserContentId49,'-', '1.0.0')))]",
        "version": "[variables('parserObject49').parserVersion49]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject49')._parserName49]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_log4shell parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_log4shell",
        "query": "let corelight_log4shell = view () {\n    Corelight_v2_log4shell_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        http_uri=http_uri_s,\n        uri=uri_s,\n        stem=stem_s,\n        target_host=target_host_s,\n        target_port=target_port_s,\n        method=method_s,\n        is_orig=is_orig_b,\n        name=name_s,\n        value=value_s,\n        matched_name=matched_name_b,\n        matched_value=matched_value_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"log4shell\",\n        ts=TimeGenerated\n};\ncorelight_log4shell\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject49')._parserId49,'/'))))]",
      "dependsOn": [
        "[variables('parserObject49')._parserId49]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_log4shell')]",
        "contentId": "[variables('parserObject49').parserContentId49]",
        "kind": "Parser",
        "version": "[variables('parserObject49').parserVersion49]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject50').parserTemplateSpecName50]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_modbus Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject50').parserVersion50]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject50')._parserName50]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_modbus parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_modbus",
                "query": "let corelight_modbus = view () {\n    Corelight_v2_modbus_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        func=func_s,\n        exception=exception_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"modbus\",\n        ts=TimeGenerated\n};\ncorelight_modbus\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject50')._parserId50,'/'))))]",
              "dependsOn": [
                "[variables('parserObject50')._parserId50]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_modbus')]",
                "contentId": "[variables('parserObject50').parserContentId50]",
                "kind": "Parser",
                "version": "[variables('parserObject50').parserVersion50]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject50').parserContentId50]",
        "contentKind": "Parser",
        "displayName": "corelight_modbus parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject50').parserContentId50,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject50').parserContentId50,'-', '1.0.0')))]",
        "version": "[variables('parserObject50').parserVersion50]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject50')._parserName50]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_modbus parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_modbus",
        "query": "let corelight_modbus = view () {\n    Corelight_v2_modbus_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        func=func_s,\n        exception=exception_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"modbus\",\n        ts=TimeGenerated\n};\ncorelight_modbus\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject50')._parserId50,'/'))))]",
      "dependsOn": [
        "[variables('parserObject50')._parserId50]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_modbus')]",
        "contentId": "[variables('parserObject50').parserContentId50]",
        "kind": "Parser",
        "version": "[variables('parserObject50').parserVersion50]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject51').parserTemplateSpecName51]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_mqtt_connect Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject51').parserVersion51]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject51')._parserName51]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_mqtt_connect parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_mqtt_connect",
                "query": "let corelight_mqtt_connect = view () {\n    Corelight_v2_mqtt_connect_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto_name=proto_name_s,\n        proto_version=proto_version_s,\n        client_id=client_id_s,\n        connect_status=connect_status_s,\n        will_topic=will_topic_s,\n        will_payload=will_payload_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"mqtt_connect\",\n        ts=TimeGenerated\n};\ncorelight_mqtt_connect\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject51')._parserId51,'/'))))]",
              "dependsOn": [
                "[variables('parserObject51')._parserId51]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mqtt_connect')]",
                "contentId": "[variables('parserObject51').parserContentId51]",
                "kind": "Parser",
                "version": "[variables('parserObject51').parserVersion51]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject51').parserContentId51]",
        "contentKind": "Parser",
        "displayName": "corelight_mqtt_connect parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject51').parserContentId51,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject51').parserContentId51,'-', '1.0.0')))]",
        "version": "[variables('parserObject51').parserVersion51]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject51')._parserName51]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_mqtt_connect parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_mqtt_connect",
        "query": "let corelight_mqtt_connect = view () {\n    Corelight_v2_mqtt_connect_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto_name=proto_name_s,\n        proto_version=proto_version_s,\n        client_id=client_id_s,\n        connect_status=connect_status_s,\n        will_topic=will_topic_s,\n        will_payload=will_payload_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"mqtt_connect\",\n        ts=TimeGenerated\n};\ncorelight_mqtt_connect\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject51')._parserId51,'/'))))]",
      "dependsOn": [
        "[variables('parserObject51')._parserId51]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mqtt_connect')]",
        "contentId": "[variables('parserObject51').parserContentId51]",
        "kind": "Parser",
        "version": "[variables('parserObject51').parserVersion51]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject52').parserTemplateSpecName52]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_mqtt_publish Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject52').parserVersion52]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject52')._parserName52]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_mqtt_publish parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_mqtt_publish",
                "query": "let corelight_mqtt_publish = view () {\n    Corelight_v2_mqtt_publish_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        from_client=from_client_b,\n        retain=retain_b,\n        qos=qos_s,\n        status=status_s,\n        topic=topic_s,\n        payload=payload_s,\n        payload_len=payload_len_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"mqtt_publish\",\n        ts=TimeGenerated\n};\ncorelight_mqtt_publish\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject52')._parserId52,'/'))))]",
              "dependsOn": [
                "[variables('parserObject52')._parserId52]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mqtt_publish')]",
                "contentId": "[variables('parserObject52').parserContentId52]",
                "kind": "Parser",
                "version": "[variables('parserObject52').parserVersion52]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject52').parserContentId52]",
        "contentKind": "Parser",
        "displayName": "corelight_mqtt_publish parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject52').parserContentId52,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject52').parserContentId52,'-', '1.0.0')))]",
        "version": "[variables('parserObject52').parserVersion52]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject52')._parserName52]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_mqtt_publish parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_mqtt_publish",
        "query": "let corelight_mqtt_publish = view () {\n    Corelight_v2_mqtt_publish_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        from_client=from_client_b,\n        retain=retain_b,\n        qos=qos_s,\n        status=status_s,\n        topic=topic_s,\n        payload=payload_s,\n        payload_len=payload_len_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"mqtt_publish\",\n        ts=TimeGenerated\n};\ncorelight_mqtt_publish\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject52')._parserId52,'/'))))]",
      "dependsOn": [
        "[variables('parserObject52')._parserId52]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mqtt_publish')]",
        "contentId": "[variables('parserObject52').parserContentId52]",
        "kind": "Parser",
        "version": "[variables('parserObject52').parserVersion52]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject53').parserTemplateSpecName53]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_mqtt_subscribe Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject53').parserVersion53]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject53')._parserName53]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_mqtt_subscribe parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_mqtt_subscribe",
                "query": "let corelight_mqtt_subscribe = view () {\n    Corelight_v2_mqtt_subscribe_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        action=action_s,\n        topics=topics_s,\n        qos_levels=qos_levels_s,\n        granted_qos_level=granted_qos_level_d,\n        ack=ack_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"mqtt_subscribe\",\n        ts=TimeGenerated\n};\ncorelight_mqtt_subscribe\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject53')._parserId53,'/'))))]",
              "dependsOn": [
                "[variables('parserObject53')._parserId53]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mqtt_subscribe')]",
                "contentId": "[variables('parserObject53').parserContentId53]",
                "kind": "Parser",
                "version": "[variables('parserObject53').parserVersion53]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject53').parserContentId53]",
        "contentKind": "Parser",
        "displayName": "corelight_mqtt_subscribe parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject53').parserContentId53,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject53').parserContentId53,'-', '1.0.0')))]",
        "version": "[variables('parserObject53').parserVersion53]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject53')._parserName53]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_mqtt_subscribe parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_mqtt_subscribe",
        "query": "let corelight_mqtt_subscribe = view () {\n    Corelight_v2_mqtt_subscribe_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        action=action_s,\n        topics=topics_s,\n        qos_levels=qos_levels_s,\n        granted_qos_level=granted_qos_level_d,\n        ack=ack_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"mqtt_subscribe\",\n        ts=TimeGenerated\n};\ncorelight_mqtt_subscribe\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject53')._parserId53,'/'))))]",
      "dependsOn": [
        "[variables('parserObject53')._parserId53]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mqtt_subscribe')]",
        "contentId": "[variables('parserObject53').parserContentId53]",
        "kind": "Parser",
        "version": "[variables('parserObject53').parserVersion53]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject54').parserTemplateSpecName54]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_mysql Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject54').parserVersion54]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject54')._parserName54]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_mysql parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_mysql",
                "query": "let corelight_mysql = view () {\n    Corelight_v2_mysql_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        cmd=cmd_s,\n        arg=arg_s,\n        success=success_b,\n        rows=rows_d,\n        response=response_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"mysql\",\n        ts=TimeGenerated\n};\ncorelight_mysql\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject54')._parserId54,'/'))))]",
              "dependsOn": [
                "[variables('parserObject54')._parserId54]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mysql')]",
                "contentId": "[variables('parserObject54').parserContentId54]",
                "kind": "Parser",
                "version": "[variables('parserObject54').parserVersion54]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject54').parserContentId54]",
        "contentKind": "Parser",
        "displayName": "corelight_mysql parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject54').parserContentId54,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject54').parserContentId54,'-', '1.0.0')))]",
        "version": "[variables('parserObject54').parserVersion54]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject54')._parserName54]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_mysql parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_mysql",
        "query": "let corelight_mysql = view () {\n    Corelight_v2_mysql_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        cmd=cmd_s,\n        arg=arg_s,\n        success=success_b,\n        rows=rows_d,\n        response=response_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"mysql\",\n        ts=TimeGenerated\n};\ncorelight_mysql\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject54')._parserId54,'/'))))]",
      "dependsOn": [
        "[variables('parserObject54')._parserId54]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_mysql')]",
        "contentId": "[variables('parserObject54').parserContentId54]",
        "kind": "Parser",
        "version": "[variables('parserObject54').parserVersion54]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject55').parserTemplateSpecName55]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_notice Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject55').parserVersion55]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject55')._parserName55]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_notice parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_notice",
                "query": "let corelight_notice = view () {\n    Corelight_v2_notice_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        fuid=fuid_s,\n        file_mime_type=file_mime_type_s,\n        file_desc=file_desc_s,\n        proto=proto_s,\n        note=note_s,\n        msg=msg_s,\n        sub=sub_s,\n        src=src_s,\n        dst=dst_s,\n        p=p_d,\n        n=n_d,\n        peer_descr=peer_descr_s,\n        actions=actions_s,\n        suppress_for=suppress_for_d,\n        remote_location_country_code=remote_location_country_code_s,\n        remote_location_region=remote_location_region_s,\n        remote_location_city=remote_location_city_s,\n        remote_location_latitude=remote_location_latitude_d,\n        remote_location_longitude=remote_location_longitude_d,\n        severity_level=severity_level_d,\n        severity_name=severity_name_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"notice\",\n        ts=TimeGenerated\n};\ncorelight_notice\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject55')._parserId55,'/'))))]",
              "dependsOn": [
                "[variables('parserObject55')._parserId55]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_notice')]",
                "contentId": "[variables('parserObject55').parserContentId55]",
                "kind": "Parser",
                "version": "[variables('parserObject55').parserVersion55]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject55').parserContentId55]",
        "contentKind": "Parser",
        "displayName": "corelight_notice parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject55').parserContentId55,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject55').parserContentId55,'-', '1.0.0')))]",
        "version": "[variables('parserObject55').parserVersion55]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject55')._parserName55]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_notice parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_notice",
        "query": "let corelight_notice = view () {\n    Corelight_v2_notice_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        fuid=fuid_s,\n        file_mime_type=file_mime_type_s,\n        file_desc=file_desc_s,\n        proto=proto_s,\n        note=note_s,\n        msg=msg_s,\n        sub=sub_s,\n        src=src_s,\n        dst=dst_s,\n        p=p_d,\n        n=n_d,\n        peer_descr=peer_descr_s,\n        actions=actions_s,\n        suppress_for=suppress_for_d,\n        remote_location_country_code=remote_location_country_code_s,\n        remote_location_region=remote_location_region_s,\n        remote_location_city=remote_location_city_s,\n        remote_location_latitude=remote_location_latitude_d,\n        remote_location_longitude=remote_location_longitude_d,\n        severity_level=severity_level_d,\n        severity_name=severity_name_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"notice\",\n        ts=TimeGenerated\n};\ncorelight_notice\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject55')._parserId55,'/'))))]",
      "dependsOn": [
        "[variables('parserObject55')._parserId55]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_notice')]",
        "contentId": "[variables('parserObject55').parserContentId55]",
        "kind": "Parser",
        "version": "[variables('parserObject55').parserVersion55]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject56').parserTemplateSpecName56]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_ntlm Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject56').parserVersion56]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject56')._parserName56]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_ntlm parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_ntlm",
                "query": "let corelight_ntlm = view () {\n    Corelight_v2_ntlm_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        username=username_s,\n        hostname=hostname_s,\n        domainname=domainname_s,\n        server_nb_computer_name=server_nb_computer_name_s,\n        server_dns_computer_name=server_dns_computer_name_s,\n        server_tree_name=server_tree_name_s,\n        success=success_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ntlm\",\n        ts=TimeGenerated\n};\ncorelight_ntlm\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject56')._parserId56,'/'))))]",
              "dependsOn": [
                "[variables('parserObject56')._parserId56]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ntlm')]",
                "contentId": "[variables('parserObject56').parserContentId56]",
                "kind": "Parser",
                "version": "[variables('parserObject56').parserVersion56]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject56').parserContentId56]",
        "contentKind": "Parser",
        "displayName": "corelight_ntlm parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject56').parserContentId56,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject56').parserContentId56,'-', '1.0.0')))]",
        "version": "[variables('parserObject56').parserVersion56]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject56')._parserName56]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_ntlm parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_ntlm",
        "query": "let corelight_ntlm = view () {\n    Corelight_v2_ntlm_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        username=username_s,\n        hostname=hostname_s,\n        domainname=domainname_s,\n        server_nb_computer_name=server_nb_computer_name_s,\n        server_dns_computer_name=server_dns_computer_name_s,\n        server_tree_name=server_tree_name_s,\n        success=success_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ntlm\",\n        ts=TimeGenerated\n};\ncorelight_ntlm\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject56')._parserId56,'/'))))]",
      "dependsOn": [
        "[variables('parserObject56')._parserId56]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ntlm')]",
        "contentId": "[variables('parserObject56').parserContentId56]",
        "kind": "Parser",
        "version": "[variables('parserObject56').parserVersion56]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject57').parserTemplateSpecName57]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_ntp Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject57').parserVersion57]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject57')._parserName57]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_ntp parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_ntp",
                "query": "let corelight_ntp = view () {\n    Corelight_v2_ntp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        version=version_d,\n        mode=mode_d,\n        stratum=stratum_d,\n        poll=poll_d,\n        precision=precision_d,\n        root_delay=root_delay_d,\n        root_disp=root_disp_d,\n        ref_id=ref_id_s,\n        ref_time=ref_time_t,\n        org_time=org_time_t,\n        rec_time=rec_time_t,\n        xmt_time=xmt_time_t,\n        num_exts=num_exts_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ntp\",\n        ts=TimeGenerated\n};\ncorelight_ntp\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject57')._parserId57,'/'))))]",
              "dependsOn": [
                "[variables('parserObject57')._parserId57]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ntp')]",
                "contentId": "[variables('parserObject57').parserContentId57]",
                "kind": "Parser",
                "version": "[variables('parserObject57').parserVersion57]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject57').parserContentId57]",
        "contentKind": "Parser",
        "displayName": "corelight_ntp parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject57').parserContentId57,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject57').parserContentId57,'-', '1.0.0')))]",
        "version": "[variables('parserObject57').parserVersion57]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject57')._parserName57]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_ntp parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_ntp",
        "query": "let corelight_ntp = view () {\n    Corelight_v2_ntp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        version=version_d,\n        mode=mode_d,\n        stratum=stratum_d,\n        poll=poll_d,\n        precision=precision_d,\n        root_delay=root_delay_d,\n        root_disp=root_disp_d,\n        ref_id=ref_id_s,\n        ref_time=ref_time_t,\n        org_time=org_time_t,\n        rec_time=rec_time_t,\n        xmt_time=xmt_time_t,\n        num_exts=num_exts_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ntp\",\n        ts=TimeGenerated\n};\ncorelight_ntp\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject57')._parserId57,'/'))))]",
      "dependsOn": [
        "[variables('parserObject57')._parserId57]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ntp')]",
        "contentId": "[variables('parserObject57').parserContentId57]",
        "kind": "Parser",
        "version": "[variables('parserObject57').parserVersion57]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject58').parserTemplateSpecName58]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_ocsp Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject58').parserVersion58]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject58')._parserName58]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_ocsp parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_ocsp",
                "query": "let corelight_ocsp = view () {\n    Corelight_v2_ocsp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        id=id_s,\n        hashAlgorithm=hashAlgorithm_s,\n        issuerNameHash=issuerNameHash_s,\n        issuerKeyHash=issuerKeyHash_s,\n        serialNumber=serialNumber_s,\n        certStatus=certStatus_s,\n        revoketime=revoketime_t,\n        revokereason=revokereason_s,\n        thisUpdate=thisUpdate_t,\n        nextUpdate=nextUpdate_t\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ocsp\",\n        ts=TimeGenerated\n};\ncorelight_ocsp\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject58')._parserId58,'/'))))]",
              "dependsOn": [
                "[variables('parserObject58')._parserId58]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ocsp')]",
                "contentId": "[variables('parserObject58').parserContentId58]",
                "kind": "Parser",
                "version": "[variables('parserObject58').parserVersion58]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject58').parserContentId58]",
        "contentKind": "Parser",
        "displayName": "corelight_ocsp parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject58').parserContentId58,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject58').parserContentId58,'-', '1.0.0')))]",
        "version": "[variables('parserObject58').parserVersion58]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject58')._parserName58]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_ocsp parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_ocsp",
        "query": "let corelight_ocsp = view () {\n    Corelight_v2_ocsp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        id=id_s,\n        hashAlgorithm=hashAlgorithm_s,\n        issuerNameHash=issuerNameHash_s,\n        issuerKeyHash=issuerKeyHash_s,\n        serialNumber=serialNumber_s,\n        certStatus=certStatus_s,\n        revoketime=revoketime_t,\n        revokereason=revokereason_s,\n        thisUpdate=thisUpdate_t,\n        nextUpdate=nextUpdate_t\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ocsp\",\n        ts=TimeGenerated\n};\ncorelight_ocsp\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject58')._parserId58,'/'))))]",
      "dependsOn": [
        "[variables('parserObject58')._parserId58]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ocsp')]",
        "contentId": "[variables('parserObject58').parserContentId58]",
        "kind": "Parser",
        "version": "[variables('parserObject58').parserVersion58]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject59').parserTemplateSpecName59]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_openflow Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject59').parserVersion59]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject59')._parserName59]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_openflow parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_openflow",
                "query": "let corelight_openflow = view () {\n    Corelight_v2_openflow_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        dpid=dpid_d,\n        match_in_port=match_in_port_d,\n        match_dl_src=match_dl_src_s,\n        match_dl_dst=match_dl_dst_s,\n        match_dl_vlan=match_dl_vlan_d,\n        match_dl_vlan_pcp=match_dl_vlan_pcp_d,\n        match_dl_type=match_dl_type_d,\n        match_nw_tos=match_nw_tos_d,\n        match_nw_proto=match_nw_proto_d,\n        match_nw_src=match_nw_src_s,\n        match_nw_dst=match_nw_dst_s,\n        match_tp_src=match_tp_src_d,\n        match_tp_dst=match_tp_dst_d,\n        flow_mod_cookie=flow_mod_cookie_d,\n        flow_mod_table_id=flow_mod_table_id_d,\n        flow_mod_command=flow_mod_command_s,\n        flow_mod_idle_timeout=flow_mod_idle_timeout_d,\n        flow_mod_hard_timeout=flow_mod_hard_timeout_d,\n        flow_mod_priority=flow_mod_priority_d,\n        flow_mod_out_port=flow_mod_out_port_d,\n        flow_mod_out_group=flow_mod_out_group_d,\n        flow_mod_flags=flow_mod_flags_d,\n        flow_mod_actions_out_ports=flow_mod_actions_out_ports_s,\n        flow_mod_actions_vlan_vid=flow_mod_actions_vlan_vid_d,\n        flow_mod_actions_vlan_pcp=flow_mod_actions_vlan_pcp_d,\n        flow_mod_actions_vlan_strip=flow_mod_actions_vlan_strip_b,\n        flow_mod_actions_dl_src=flow_mod_actions_dl_src_s,\n        flow_mod_actions_dl_dst=flow_mod_actions_dl_dst_s,\n        flow_mod_actions_nw_tos=flow_mod_actions_nw_tos_d,\n        flow_mod_actions_nw_src=flow_mod_actions_nw_src_s,\n        flow_mod_actions_nw_dst=flow_mod_actions_nw_dst_s,\n        flow_mod_actions_tp_src=flow_mod_actions_tp_src_d,\n        flow_mod_actions_tp_dst=flow_mod_actions_tp_dst_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"openflow\",\n        ts=TimeGenerated\n};\ncorelight_openflow\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject59')._parserId59,'/'))))]",
              "dependsOn": [
                "[variables('parserObject59')._parserId59]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_openflow')]",
                "contentId": "[variables('parserObject59').parserContentId59]",
                "kind": "Parser",
                "version": "[variables('parserObject59').parserVersion59]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject59').parserContentId59]",
        "contentKind": "Parser",
        "displayName": "corelight_openflow parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject59').parserContentId59,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject59').parserContentId59,'-', '1.0.0')))]",
        "version": "[variables('parserObject59').parserVersion59]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject59')._parserName59]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_openflow parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_openflow",
        "query": "let corelight_openflow = view () {\n    Corelight_v2_openflow_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        dpid=dpid_d,\n        match_in_port=match_in_port_d,\n        match_dl_src=match_dl_src_s,\n        match_dl_dst=match_dl_dst_s,\n        match_dl_vlan=match_dl_vlan_d,\n        match_dl_vlan_pcp=match_dl_vlan_pcp_d,\n        match_dl_type=match_dl_type_d,\n        match_nw_tos=match_nw_tos_d,\n        match_nw_proto=match_nw_proto_d,\n        match_nw_src=match_nw_src_s,\n        match_nw_dst=match_nw_dst_s,\n        match_tp_src=match_tp_src_d,\n        match_tp_dst=match_tp_dst_d,\n        flow_mod_cookie=flow_mod_cookie_d,\n        flow_mod_table_id=flow_mod_table_id_d,\n        flow_mod_command=flow_mod_command_s,\n        flow_mod_idle_timeout=flow_mod_idle_timeout_d,\n        flow_mod_hard_timeout=flow_mod_hard_timeout_d,\n        flow_mod_priority=flow_mod_priority_d,\n        flow_mod_out_port=flow_mod_out_port_d,\n        flow_mod_out_group=flow_mod_out_group_d,\n        flow_mod_flags=flow_mod_flags_d,\n        flow_mod_actions_out_ports=flow_mod_actions_out_ports_s,\n        flow_mod_actions_vlan_vid=flow_mod_actions_vlan_vid_d,\n        flow_mod_actions_vlan_pcp=flow_mod_actions_vlan_pcp_d,\n        flow_mod_actions_vlan_strip=flow_mod_actions_vlan_strip_b,\n        flow_mod_actions_dl_src=flow_mod_actions_dl_src_s,\n        flow_mod_actions_dl_dst=flow_mod_actions_dl_dst_s,\n        flow_mod_actions_nw_tos=flow_mod_actions_nw_tos_d,\n        flow_mod_actions_nw_src=flow_mod_actions_nw_src_s,\n        flow_mod_actions_nw_dst=flow_mod_actions_nw_dst_s,\n        flow_mod_actions_tp_src=flow_mod_actions_tp_src_d,\n        flow_mod_actions_tp_dst=flow_mod_actions_tp_dst_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"openflow\",\n        ts=TimeGenerated\n};\ncorelight_openflow\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject59')._parserId59,'/'))))]",
      "dependsOn": [
        "[variables('parserObject59')._parserId59]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_openflow')]",
        "contentId": "[variables('parserObject59').parserContentId59]",
        "kind": "Parser",
        "version": "[variables('parserObject59').parserVersion59]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject60').parserTemplateSpecName60]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_packet_filter Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject60').parserVersion60]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject60')._parserName60]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_packet_filter parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_packet_filter",
                "query": "let corelight_packet_filter = view () {\n    Corelight_v2_packet_filter_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        node=node_s,\n        filter=filter_s,\n        init=init_b,\n        success=success_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"packet_filter\",\n        ts=TimeGenerated\n};\ncorelight_packet_filter\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject60')._parserId60,'/'))))]",
              "dependsOn": [
                "[variables('parserObject60')._parserId60]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_packet_filter')]",
                "contentId": "[variables('parserObject60').parserContentId60]",
                "kind": "Parser",
                "version": "[variables('parserObject60').parserVersion60]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject60').parserContentId60]",
        "contentKind": "Parser",
        "displayName": "corelight_packet_filter parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject60').parserContentId60,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject60').parserContentId60,'-', '1.0.0')))]",
        "version": "[variables('parserObject60').parserVersion60]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject60')._parserName60]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_packet_filter parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_packet_filter",
        "query": "let corelight_packet_filter = view () {\n    Corelight_v2_packet_filter_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        node=node_s,\n        filter=filter_s,\n        init=init_b,\n        success=success_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"packet_filter\",\n        ts=TimeGenerated\n};\ncorelight_packet_filter\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject60')._parserId60,'/'))))]",
      "dependsOn": [
        "[variables('parserObject60')._parserId60]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_packet_filter')]",
        "contentId": "[variables('parserObject60').parserContentId60]",
        "kind": "Parser",
        "version": "[variables('parserObject60').parserVersion60]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject61').parserTemplateSpecName61]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_pe Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject61').parserVersion61]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject61')._parserName61]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_pe parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_pe",
                "query": "let corelight_pe = view () {\n    Corelight_v2_pe_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        id=id_s,\n        machine=machine_s,\n        compile_ts=compile_ts_t,\n        os=os_s,\n        subsystem=subsystem_s,\n        is_exe=is_exe_b,\n        is_64bit=is_64bit_b,\n        uses_aslr=uses_aslr_b,\n        uses_dep=uses_dep_b,\n        uses_code_integrity=uses_code_integrity_b,\n        uses_seh=uses_seh_b,\n        has_import_table=has_import_table_b,\n        has_export_table=has_export_table_b,\n        has_cert_table=has_cert_table_b,\n        has_debug_data=has_debug_data_b,\n        section_names=section_names_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"pe\",\n        ts=TimeGenerated\n};\ncorelight_pe\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject61')._parserId61,'/'))))]",
              "dependsOn": [
                "[variables('parserObject61')._parserId61]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_pe')]",
                "contentId": "[variables('parserObject61').parserContentId61]",
                "kind": "Parser",
                "version": "[variables('parserObject61').parserVersion61]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject61').parserContentId61]",
        "contentKind": "Parser",
        "displayName": "corelight_pe parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject61').parserContentId61,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject61').parserContentId61,'-', '1.0.0')))]",
        "version": "[variables('parserObject61').parserVersion61]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject61')._parserName61]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_pe parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_pe",
        "query": "let corelight_pe = view () {\n    Corelight_v2_pe_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        id=id_s,\n        machine=machine_s,\n        compile_ts=compile_ts_t,\n        os=os_s,\n        subsystem=subsystem_s,\n        is_exe=is_exe_b,\n        is_64bit=is_64bit_b,\n        uses_aslr=uses_aslr_b,\n        uses_dep=uses_dep_b,\n        uses_code_integrity=uses_code_integrity_b,\n        uses_seh=uses_seh_b,\n        has_import_table=has_import_table_b,\n        has_export_table=has_export_table_b,\n        has_cert_table=has_cert_table_b,\n        has_debug_data=has_debug_data_b,\n        section_names=section_names_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"pe\",\n        ts=TimeGenerated\n};\ncorelight_pe\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject61')._parserId61,'/'))))]",
      "dependsOn": [
        "[variables('parserObject61')._parserId61]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_pe')]",
        "contentId": "[variables('parserObject61').parserContentId61]",
        "kind": "Parser",
        "version": "[variables('parserObject61').parserVersion61]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject62').parserTemplateSpecName62]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_profinet Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject62').parserVersion62]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject62')._parserName62]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_profinet parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_profinet",
                "query": "let corelight_profinet = view () {\n    Corelight_v2_profinet_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        operation_type=operation_type_s,\n        block_version=block_version_s,\n        slot_number=slot_number_d,\n        subslot_number=subslot_number_d,\n        index=index_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"profinet\",\n        ts=TimeGenerated\n};\ncorelight_profinet\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject62')._parserId62,'/'))))]",
              "dependsOn": [
                "[variables('parserObject62')._parserId62]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_profinet')]",
                "contentId": "[variables('parserObject62').parserContentId62]",
                "kind": "Parser",
                "version": "[variables('parserObject62').parserVersion62]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject62').parserContentId62]",
        "contentKind": "Parser",
        "displayName": "corelight_profinet parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject62').parserContentId62,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject62').parserContentId62,'-', '1.0.0')))]",
        "version": "[variables('parserObject62').parserVersion62]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject62')._parserName62]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_profinet parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_profinet",
        "query": "let corelight_profinet = view () {\n    Corelight_v2_profinet_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        operation_type=operation_type_s,\n        block_version=block_version_s,\n        slot_number=slot_number_d,\n        subslot_number=subslot_number_d,\n        index=index_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"profinet\",\n        ts=TimeGenerated\n};\ncorelight_profinet\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject62')._parserId62,'/'))))]",
      "dependsOn": [
        "[variables('parserObject62')._parserId62]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_profinet')]",
        "contentId": "[variables('parserObject62').parserContentId62]",
        "kind": "Parser",
        "version": "[variables('parserObject62').parserVersion62]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject63').parserTemplateSpecName63]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_profinet_dce_rpc Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject63').parserVersion63]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject63')._parserName63]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_profinet_dce_rpc parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_profinet_dce_rpc",
                "query": "let corelight_profinet_dce_rpc = view () {\n    Corelight_v2_profinet_dce_rpc_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        version=version_d,\n        packet_type=packet_type_d,\n        object_uuid=object_uuid_s,\n        interface_uuid=interface_uuid_s,\n        activity_uuid=activity_uuid_s,\n        server_boot_time=server_boot_time_d,\n        operation=operation_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"profinet_dce_rpc\",\n        ts=TimeGenerated\n};\ncorelight_profinet_dce_rpc\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject63')._parserId63,'/'))))]",
              "dependsOn": [
                "[variables('parserObject63')._parserId63]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_profinet_dce_rpc')]",
                "contentId": "[variables('parserObject63').parserContentId63]",
                "kind": "Parser",
                "version": "[variables('parserObject63').parserVersion63]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject63').parserContentId63]",
        "contentKind": "Parser",
        "displayName": "corelight_profinet_dce_rpc parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject63').parserContentId63,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject63').parserContentId63,'-', '1.0.0')))]",
        "version": "[variables('parserObject63').parserVersion63]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject63')._parserName63]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_profinet_dce_rpc parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_profinet_dce_rpc",
        "query": "let corelight_profinet_dce_rpc = view () {\n    Corelight_v2_profinet_dce_rpc_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        version=version_d,\n        packet_type=packet_type_d,\n        object_uuid=object_uuid_s,\n        interface_uuid=interface_uuid_s,\n        activity_uuid=activity_uuid_s,\n        server_boot_time=server_boot_time_d,\n        operation=operation_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"profinet_dce_rpc\",\n        ts=TimeGenerated\n};\ncorelight_profinet_dce_rpc\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject63')._parserId63,'/'))))]",
      "dependsOn": [
        "[variables('parserObject63')._parserId63]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_profinet_dce_rpc')]",
        "contentId": "[variables('parserObject63').parserContentId63]",
        "kind": "Parser",
        "version": "[variables('parserObject63').parserVersion63]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject64').parserTemplateSpecName64]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_profinet_debug Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject64').parserVersion64]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject64')._parserName64]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_profinet_debug parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_profinet_debug",
                "query": "let corelight_profinet_debug = view () {\n    Corelight_v2_profinet_debug_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        raw_data=raw_data_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"profinet_debug\",\n        ts=TimeGenerated\n};\ncorelight_profinet_debug\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject64')._parserId64,'/'))))]",
              "dependsOn": [
                "[variables('parserObject64')._parserId64]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_profinet_debug')]",
                "contentId": "[variables('parserObject64').parserContentId64]",
                "kind": "Parser",
                "version": "[variables('parserObject64').parserVersion64]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject64').parserContentId64]",
        "contentKind": "Parser",
        "displayName": "corelight_profinet_debug parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject64').parserContentId64,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject64').parserContentId64,'-', '1.0.0')))]",
        "version": "[variables('parserObject64').parserVersion64]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject64')._parserName64]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_profinet_debug parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_profinet_debug",
        "query": "let corelight_profinet_debug = view () {\n    Corelight_v2_profinet_debug_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        raw_data=raw_data_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"profinet_debug\",\n        ts=TimeGenerated\n};\ncorelight_profinet_debug\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject64')._parserId64,'/'))))]",
      "dependsOn": [
        "[variables('parserObject64')._parserId64]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_profinet_debug')]",
        "contentId": "[variables('parserObject64').parserContentId64]",
        "kind": "Parser",
        "version": "[variables('parserObject64').parserVersion64]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject65').parserTemplateSpecName65]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_radius Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject65').parserVersion65]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject65')._parserName65]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_radius parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_radius",
                "query": "let corelight_radius = view () {\n    Corelight_v2_radius_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        username=username_s,\n        mac=mac_s,\n        framed_addr=framed_addr_s,\n        tunnel_client=tunnel_client_s,\n        connect_info=connect_info_s,\n        reply_msg=reply_msg_s,\n        result=result_s,\n        ttl=ttl_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"radius\",\n        ts=TimeGenerated\n};\ncorelight_radius\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject65')._parserId65,'/'))))]",
              "dependsOn": [
                "[variables('parserObject65')._parserId65]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_radius')]",
                "contentId": "[variables('parserObject65').parserContentId65]",
                "kind": "Parser",
                "version": "[variables('parserObject65').parserVersion65]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject65').parserContentId65]",
        "contentKind": "Parser",
        "displayName": "corelight_radius parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject65').parserContentId65,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject65').parserContentId65,'-', '1.0.0')))]",
        "version": "[variables('parserObject65').parserVersion65]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject65')._parserName65]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_radius parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_radius",
        "query": "let corelight_radius = view () {\n    Corelight_v2_radius_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        username=username_s,\n        mac=mac_s,\n        framed_addr=framed_addr_s,\n        tunnel_client=tunnel_client_s,\n        connect_info=connect_info_s,\n        reply_msg=reply_msg_s,\n        result=result_s,\n        ttl=ttl_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"radius\",\n        ts=TimeGenerated\n};\ncorelight_radius\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject65')._parserId65,'/'))))]",
      "dependsOn": [
        "[variables('parserObject65')._parserId65]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_radius')]",
        "contentId": "[variables('parserObject65').parserContentId65]",
        "kind": "Parser",
        "version": "[variables('parserObject65').parserVersion65]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject66').parserTemplateSpecName66]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_rdp Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject66').parserVersion66]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject66')._parserName66]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_rdp parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_rdp",
                "query": "let dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_rdp = view () {\n    union isfuzzy=true Corelight_v2_rdp_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        auth_success = column_ifexists(\"auth_success_b\", \"\"),\n        cert_count = column_ifexists(\"cert_count_d\", real(null)),\n        channels_joined = column_ifexists(\"channels_joined_d\", real(null)),\n        cookie = column_ifexists(\"cookie_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        inferences = column_ifexists(\"inferences_s\", \"\"),\n        result = column_ifexists(\"result_s\", \"\"),\n        security_protocol = column_ifexists(\"security_protocol_s\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        client_channels = column_ifexists(\"client_channels_s\", \"\"),\n        keyboard_layout = column_ifexists(\"keyboard_layout_s\", \"\"),\n        client_build = column_ifexists(\"client_build_s\", \"\"),\n        client_name = column_ifexists(\"client_name_s\", \"\"),\n        client_dig_product_id = column_ifexists(\"client_dig_product_id_s\", \"\"),\n        desktop_width = column_ifexists(\"desktop_width_d\", real(null)),\n        desktop_height = column_ifexists(\"desktop_height_d\", real(null)),\n        requested_color_depth = column_ifexists(\"requested_color_depth_s\", \"\"),\n        cert_type = column_ifexists(\"cert_type_s\", \"\"),\n        cert_permanent = column_ifexists(\"cert_permanent_b\", \"\"),\n        encryption_level = column_ifexists(\"encryption_level_s\", \"\"),\n        encryption_method = column_ifexists(\"encryption_method_s\", \"\"),\n        rdpeudp_uid = column_ifexists(\"rdpeudp_uid_s\", \"\"),\n        rdfp_string = column_ifexists(\"rdfp_string_s\", \"\"),\n        rdfp_hash = column_ifexists(\"rdfp_hash_s\", \"\")\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"rdp\",\n        ts = TimeGenerated,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        app = security_protocol,\n        sensor_name = coalesce(system_name, \"unknown\")\n    | extend \n        action = case(result == \"Success\", \"success\", result == \"SSL_NOT_ALLOWED_BY_SERVER\", \"failure\", auth_success == \"true\", \"success\", auth_success == \"false\", \"failure\", \"unknown\"),\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        auth_success,\n        cert_count,\n        channels_joined,\n        cookie,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        inferences,\n        result,\n        security_protocol,\n        uid,\n        client_channels,\n        keyboard_layout,\n        client_build,\n        client_name,\n        client_dig_product_id,\n        desktop_width,\n        desktop_height,\n        requested_color_depth,\n        cert_type,\n        cert_permanent,\n        encryption_level,\n        encryption_method,\n        rdpeudp_uid,\n        rdfp_string,\n        rdfp_hash,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        app,\n        sensor_name,\n        action,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip\n};\ncorelight_rdp\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject66')._parserId66,'/'))))]",
              "dependsOn": [
                "[variables('parserObject66')._parserId66]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_rdp')]",
                "contentId": "[variables('parserObject66').parserContentId66]",
                "kind": "Parser",
                "version": "[variables('parserObject66').parserVersion66]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject66').parserContentId66]",
        "contentKind": "Parser",
        "displayName": "corelight_rdp parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject66').parserContentId66,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject66').parserContentId66,'-', '1.1.0')))]",
        "version": "[variables('parserObject66').parserVersion66]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject66')._parserName66]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_rdp parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_rdp",
        "query": "let dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_rdp = view () {\n    union isfuzzy=true Corelight_v2_rdp_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        auth_success = column_ifexists(\"auth_success_b\", \"\"),\n        cert_count = column_ifexists(\"cert_count_d\", real(null)),\n        channels_joined = column_ifexists(\"channels_joined_d\", real(null)),\n        cookie = column_ifexists(\"cookie_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        inferences = column_ifexists(\"inferences_s\", \"\"),\n        result = column_ifexists(\"result_s\", \"\"),\n        security_protocol = column_ifexists(\"security_protocol_s\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        client_channels = column_ifexists(\"client_channels_s\", \"\"),\n        keyboard_layout = column_ifexists(\"keyboard_layout_s\", \"\"),\n        client_build = column_ifexists(\"client_build_s\", \"\"),\n        client_name = column_ifexists(\"client_name_s\", \"\"),\n        client_dig_product_id = column_ifexists(\"client_dig_product_id_s\", \"\"),\n        desktop_width = column_ifexists(\"desktop_width_d\", real(null)),\n        desktop_height = column_ifexists(\"desktop_height_d\", real(null)),\n        requested_color_depth = column_ifexists(\"requested_color_depth_s\", \"\"),\n        cert_type = column_ifexists(\"cert_type_s\", \"\"),\n        cert_permanent = column_ifexists(\"cert_permanent_b\", \"\"),\n        encryption_level = column_ifexists(\"encryption_level_s\", \"\"),\n        encryption_method = column_ifexists(\"encryption_method_s\", \"\"),\n        rdpeudp_uid = column_ifexists(\"rdpeudp_uid_s\", \"\"),\n        rdfp_string = column_ifexists(\"rdfp_string_s\", \"\"),\n        rdfp_hash = column_ifexists(\"rdfp_hash_s\", \"\")\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"rdp\",\n        ts = TimeGenerated,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        app = security_protocol,\n        sensor_name = coalesce(system_name, \"unknown\")\n    | extend \n        action = case(result == \"Success\", \"success\", result == \"SSL_NOT_ALLOWED_BY_SERVER\", \"failure\", auth_success == \"true\", \"success\", auth_success == \"false\", \"failure\", \"unknown\"),\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        auth_success,\n        cert_count,\n        channels_joined,\n        cookie,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        inferences,\n        result,\n        security_protocol,\n        uid,\n        client_channels,\n        keyboard_layout,\n        client_build,\n        client_name,\n        client_dig_product_id,\n        desktop_width,\n        desktop_height,\n        requested_color_depth,\n        cert_type,\n        cert_permanent,\n        encryption_level,\n        encryption_method,\n        rdpeudp_uid,\n        rdfp_string,\n        rdfp_hash,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        app,\n        sensor_name,\n        action,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip\n};\ncorelight_rdp\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject66')._parserId66,'/'))))]",
      "dependsOn": [
        "[variables('parserObject66')._parserId66]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_rdp')]",
        "contentId": "[variables('parserObject66').parserContentId66]",
        "kind": "Parser",
        "version": "[variables('parserObject66').parserVersion66]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject67').parserTemplateSpecName67]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_reporter Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject67').parserVersion67]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject67')._parserName67]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_reporter parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_reporter",
                "query": "let corelight_reporter = view () {\n    Corelight_v2_reporter_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        level=Level,\n        message=Message,\n        location=location_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"reporter\",\n        ts=TimeGenerated\n};\ncorelight_reporter\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject67')._parserId67,'/'))))]",
              "dependsOn": [
                "[variables('parserObject67')._parserId67]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_reporter')]",
                "contentId": "[variables('parserObject67').parserContentId67]",
                "kind": "Parser",
                "version": "[variables('parserObject67').parserVersion67]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject67').parserContentId67]",
        "contentKind": "Parser",
        "displayName": "corelight_reporter parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject67').parserContentId67,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject67').parserContentId67,'-', '1.0.0')))]",
        "version": "[variables('parserObject67').parserVersion67]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject67')._parserName67]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_reporter parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_reporter",
        "query": "let corelight_reporter = view () {\n    Corelight_v2_reporter_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        level=Level,\n        message=Message,\n        location=location_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"reporter\",\n        ts=TimeGenerated\n};\ncorelight_reporter\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject67')._parserId67,'/'))))]",
      "dependsOn": [
        "[variables('parserObject67')._parserId67]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_reporter')]",
        "contentId": "[variables('parserObject67').parserContentId67]",
        "kind": "Parser",
        "version": "[variables('parserObject67').parserVersion67]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject68').parserTemplateSpecName68]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_rfb Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject68').parserVersion68]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject68')._parserName68]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_rfb parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_rfb",
                "query": "let corelight_rfb = view () {\n    Corelight_v2_rfb_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        client_major_version=client_major_version_s,\n        client_minor_version=client_minor_version_s,\n        server_major_version=server_major_version_s,\n        server_minor_version=server_minor_version_s,\n        authentication_method=authentication_method_s,\n        auth=auth_b,\n        share_flag=share_flag_b,\n        desktop_name=desktop_name_s,\n        width=width_d,\n        height=height_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"rfb\",\n        ts=TimeGenerated\n};\ncorelight_rfb\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject68')._parserId68,'/'))))]",
              "dependsOn": [
                "[variables('parserObject68')._parserId68]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_rfb')]",
                "contentId": "[variables('parserObject68').parserContentId68]",
                "kind": "Parser",
                "version": "[variables('parserObject68').parserVersion68]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject68').parserContentId68]",
        "contentKind": "Parser",
        "displayName": "corelight_rfb parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject68').parserContentId68,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject68').parserContentId68,'-', '1.0.0')))]",
        "version": "[variables('parserObject68').parserVersion68]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject68')._parserName68]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_rfb parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_rfb",
        "query": "let corelight_rfb = view () {\n    Corelight_v2_rfb_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        client_major_version=client_major_version_s,\n        client_minor_version=client_minor_version_s,\n        server_major_version=server_major_version_s,\n        server_minor_version=server_minor_version_s,\n        authentication_method=authentication_method_s,\n        auth=auth_b,\n        share_flag=share_flag_b,\n        desktop_name=desktop_name_s,\n        width=width_d,\n        height=height_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"rfb\",\n        ts=TimeGenerated\n};\ncorelight_rfb\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject68')._parserId68,'/'))))]",
      "dependsOn": [
        "[variables('parserObject68')._parserId68]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_rfb')]",
        "contentId": "[variables('parserObject68').parserContentId68]",
        "kind": "Parser",
        "version": "[variables('parserObject68').parserVersion68]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject69').parserTemplateSpecName69]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_s7comm Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject69').parserVersion69]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject69')._parserName69]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_s7comm parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_s7comm",
                "query": "let corelight_s7comm = view () {\n    Corelight_v2_s7comm_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        rosctr=rosctr_s,\n        parameter=parameter_s,\n        item_count=item_count_d,\n        data_info=data_info_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"s7comm\",\n        ts=TimeGenerated\n};\ncorelight_s7comm\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject69')._parserId69,'/'))))]",
              "dependsOn": [
                "[variables('parserObject69')._parserId69]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_s7comm')]",
                "contentId": "[variables('parserObject69').parserContentId69]",
                "kind": "Parser",
                "version": "[variables('parserObject69').parserVersion69]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject69').parserContentId69]",
        "contentKind": "Parser",
        "displayName": "corelight_s7comm parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject69').parserContentId69,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject69').parserContentId69,'-', '1.0.0')))]",
        "version": "[variables('parserObject69').parserVersion69]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject69')._parserName69]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_s7comm parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_s7comm",
        "query": "let corelight_s7comm = view () {\n    Corelight_v2_s7comm_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        rosctr=rosctr_s,\n        parameter=parameter_s,\n        item_count=item_count_d,\n        data_info=data_info_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"s7comm\",\n        ts=TimeGenerated\n};\ncorelight_s7comm\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject69')._parserId69,'/'))))]",
      "dependsOn": [
        "[variables('parserObject69')._parserId69]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_s7comm')]",
        "contentId": "[variables('parserObject69').parserContentId69]",
        "kind": "Parser",
        "version": "[variables('parserObject69').parserVersion69]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject70').parserTemplateSpecName70]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_signatures Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject70').parserVersion70]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject70')._parserName70]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_signatures parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_signatures",
                "query": "let corelight_signatures = view () {\n    Corelight_v2_signatures_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        src_addr=src_addr_s,\n        src_port=src_port_d,\n        dst_addr=dst_addr_s,\n        dst_port=dst_port_d,\n        note=note_s,\n        sig_id=sig_id_s,\n        event_msg=event_msg_s,\n        sub_msg=sub_msg_s,\n        sig_count=sig_count_d,\n        host_count=host_count_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"signatures\",\n        ts=TimeGenerated\n};\ncorelight_signatures\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject70')._parserId70,'/'))))]",
              "dependsOn": [
                "[variables('parserObject70')._parserId70]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_signatures')]",
                "contentId": "[variables('parserObject70').parserContentId70]",
                "kind": "Parser",
                "version": "[variables('parserObject70').parserVersion70]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject70').parserContentId70]",
        "contentKind": "Parser",
        "displayName": "corelight_signatures parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject70').parserContentId70,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject70').parserContentId70,'-', '1.0.0')))]",
        "version": "[variables('parserObject70').parserVersion70]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject70')._parserName70]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_signatures parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_signatures",
        "query": "let corelight_signatures = view () {\n    Corelight_v2_signatures_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        src_addr=src_addr_s,\n        src_port=src_port_d,\n        dst_addr=dst_addr_s,\n        dst_port=dst_port_d,\n        note=note_s,\n        sig_id=sig_id_s,\n        event_msg=event_msg_s,\n        sub_msg=sub_msg_s,\n        sig_count=sig_count_d,\n        host_count=host_count_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"signatures\",\n        ts=TimeGenerated\n};\ncorelight_signatures\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject70')._parserId70,'/'))))]",
      "dependsOn": [
        "[variables('parserObject70')._parserId70]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_signatures')]",
        "contentId": "[variables('parserObject70').parserContentId70]",
        "kind": "Parser",
        "version": "[variables('parserObject70').parserVersion70]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject71').parserTemplateSpecName71]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_sip Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject71').parserVersion71]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject71')._parserName71]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_sip parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_sip",
                "query": "let corelight_sip = view () {\n    Corelight_v2_sip_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        trans_depth=trans_depth_d,\n        method=method_s,\n        uri=uri_s,\n        _date=date_s,\n        request_from=request_from_s,\n        request_to=request_to_s,\n        response_from=response_from_s,\n        response_to=response_to_s,\n        reply_to=reply_to_s,\n        call_id=call_id_s,\n        seq=seq_s,\n        subject=subject_s,\n        request_path=request_path_s,\n        response_path=response_path_s,\n        user_agent=user_agent_s,\n        status_code=status_code_d,\n        status_msg=status_msg_s,\n        warning=warning_s,\n        request_body_len=request_body_len_d,\n        response_body_len=response_body_len_d,\n        content_type=content_type_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"sip\",\n        ts=TimeGenerated\n};\ncorelight_sip\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject71')._parserId71,'/'))))]",
              "dependsOn": [
                "[variables('parserObject71')._parserId71]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_sip')]",
                "contentId": "[variables('parserObject71').parserContentId71]",
                "kind": "Parser",
                "version": "[variables('parserObject71').parserVersion71]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject71').parserContentId71]",
        "contentKind": "Parser",
        "displayName": "corelight_sip parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject71').parserContentId71,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject71').parserContentId71,'-', '1.0.0')))]",
        "version": "[variables('parserObject71').parserVersion71]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject71')._parserName71]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_sip parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_sip",
        "query": "let corelight_sip = view () {\n    Corelight_v2_sip_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        trans_depth=trans_depth_d,\n        method=method_s,\n        uri=uri_s,\n        _date=date_s,\n        request_from=request_from_s,\n        request_to=request_to_s,\n        response_from=response_from_s,\n        response_to=response_to_s,\n        reply_to=reply_to_s,\n        call_id=call_id_s,\n        seq=seq_s,\n        subject=subject_s,\n        request_path=request_path_s,\n        response_path=response_path_s,\n        user_agent=user_agent_s,\n        status_code=status_code_d,\n        status_msg=status_msg_s,\n        warning=warning_s,\n        request_body_len=request_body_len_d,\n        response_body_len=response_body_len_d,\n        content_type=content_type_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"sip\",\n        ts=TimeGenerated\n};\ncorelight_sip\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject71')._parserId71,'/'))))]",
      "dependsOn": [
        "[variables('parserObject71')._parserId71]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_sip')]",
        "contentId": "[variables('parserObject71').parserContentId71]",
        "kind": "Parser",
        "version": "[variables('parserObject71').parserVersion71]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject72').parserTemplateSpecName72]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_smartpcap Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject72').parserVersion72]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject72')._parserName72]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_smartpcap parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_smartpcap",
                "query": "let corelight_smartpcap = view () {\n    Corelight_v2_smartpcap_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        logstr=logstr_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smartpcap\",\n        ts=TimeGenerated\n};\ncorelight_smartpcap\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject72')._parserId72,'/'))))]",
              "dependsOn": [
                "[variables('parserObject72')._parserId72]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smartpcap')]",
                "contentId": "[variables('parserObject72').parserContentId72]",
                "kind": "Parser",
                "version": "[variables('parserObject72').parserVersion72]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject72').parserContentId72]",
        "contentKind": "Parser",
        "displayName": "corelight_smartpcap parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject72').parserContentId72,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject72').parserContentId72,'-', '1.0.0')))]",
        "version": "[variables('parserObject72').parserVersion72]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject72')._parserName72]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_smartpcap parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_smartpcap",
        "query": "let corelight_smartpcap = view () {\n    Corelight_v2_smartpcap_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        logstr=logstr_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smartpcap\",\n        ts=TimeGenerated\n};\ncorelight_smartpcap\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject72')._parserId72,'/'))))]",
      "dependsOn": [
        "[variables('parserObject72')._parserId72]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smartpcap')]",
        "contentId": "[variables('parserObject72').parserContentId72]",
        "kind": "Parser",
        "version": "[variables('parserObject72').parserVersion72]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject73').parserTemplateSpecName73]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_smartpcap_stats Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject73').parserVersion73]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject73')._parserName73]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_smartpcap_stats parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_smartpcap_stats",
                "query": "let corelight_smartpcap_stats = view () {\n    Corelight_v2_smartpcap_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        cap_bytes=cap_bytes_d,\n        cap_flows=cap_flows_d,\n        flows_buffered=flows_buffered_d,\n        socket_errors=socket_errors_d,\n        packet_drops=packet_drops_d,\n        socket_timeouts=socket_timeouts_d,\n        socket_closes=socket_closes_d,\n        flow_pauses=flow_pauses_d,\n        flow_resumes=flow_resumes_d,\n        byte_drops=byte_drops_d,\n        packet_writes=packet_writes_d,\n        byte_writes=byte_writes_d,\n        socket_writes=socket_writes_d,\n        socket_connects=socket_connects_d,\n        unknown_packets=unknown_packets_d,\n        unknown_bytes=unknown_bytes_d,\n        lever_triggers=lever_triggers_d,\n        lever_failures=lever_failures_d,\n        uncap_flows_buflimit=uncap_flows_buflimit_d,\n        uncap_flows_closed=uncap_flows_closed_d,\n        rule_stats=rule_stats_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smartpcap-stats\",\n        ts=TimeGenerated\n};\ncorelight_smartpcap_stats\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject73')._parserId73,'/'))))]",
              "dependsOn": [
                "[variables('parserObject73')._parserId73]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smartpcap_stats')]",
                "contentId": "[variables('parserObject73').parserContentId73]",
                "kind": "Parser",
                "version": "[variables('parserObject73').parserVersion73]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject73').parserContentId73]",
        "contentKind": "Parser",
        "displayName": "corelight_smartpcap_stats parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject73').parserContentId73,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject73').parserContentId73,'-', '1.0.0')))]",
        "version": "[variables('parserObject73').parserVersion73]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject73')._parserName73]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_smartpcap_stats parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_smartpcap_stats",
        "query": "let corelight_smartpcap_stats = view () {\n    Corelight_v2_smartpcap_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        cap_bytes=cap_bytes_d,\n        cap_flows=cap_flows_d,\n        flows_buffered=flows_buffered_d,\n        socket_errors=socket_errors_d,\n        packet_drops=packet_drops_d,\n        socket_timeouts=socket_timeouts_d,\n        socket_closes=socket_closes_d,\n        flow_pauses=flow_pauses_d,\n        flow_resumes=flow_resumes_d,\n        byte_drops=byte_drops_d,\n        packet_writes=packet_writes_d,\n        byte_writes=byte_writes_d,\n        socket_writes=socket_writes_d,\n        socket_connects=socket_connects_d,\n        unknown_packets=unknown_packets_d,\n        unknown_bytes=unknown_bytes_d,\n        lever_triggers=lever_triggers_d,\n        lever_failures=lever_failures_d,\n        uncap_flows_buflimit=uncap_flows_buflimit_d,\n        uncap_flows_closed=uncap_flows_closed_d,\n        rule_stats=rule_stats_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smartpcap-stats\",\n        ts=TimeGenerated\n};\ncorelight_smartpcap_stats\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject73')._parserId73,'/'))))]",
      "dependsOn": [
        "[variables('parserObject73')._parserId73]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smartpcap_stats')]",
        "contentId": "[variables('parserObject73').parserContentId73]",
        "kind": "Parser",
        "version": "[variables('parserObject73').parserVersion73]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject74').parserTemplateSpecName74]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_smb_files Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject74').parserVersion74]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject74')._parserName74]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_smb_files parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_smb_files",
                "query": "let corelight_smb_files = view () {\n    Corelight_v2_smb_files_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        fuid=fuid_s,\n        action=action_s,\n        path=path_s,\n        name=name_s,\n        size=size_d,\n        prev_name=prev_name_s,\n        times_modified=times_modified_t,\n        times_accessed=times_accessed_t,\n        times_created=times_created_t,\n        times_changed=times_changed_t,\n        data_offset_req=data_offset_req_d,\n        data_len_req=data_len_req_d,\n        data_len_rsp=data_len_rsp_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smb_files\",\n        ts=TimeGenerated\n};\ncorelight_smb_files\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject74')._parserId74,'/'))))]",
              "dependsOn": [
                "[variables('parserObject74')._parserId74]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smb_files')]",
                "contentId": "[variables('parserObject74').parserContentId74]",
                "kind": "Parser",
                "version": "[variables('parserObject74').parserVersion74]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject74').parserContentId74]",
        "contentKind": "Parser",
        "displayName": "corelight_smb_files parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject74').parserContentId74,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject74').parserContentId74,'-', '1.0.0')))]",
        "version": "[variables('parserObject74').parserVersion74]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject74')._parserName74]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_smb_files parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_smb_files",
        "query": "let corelight_smb_files = view () {\n    Corelight_v2_smb_files_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        fuid=fuid_s,\n        action=action_s,\n        path=path_s,\n        name=name_s,\n        size=size_d,\n        prev_name=prev_name_s,\n        times_modified=times_modified_t,\n        times_accessed=times_accessed_t,\n        times_created=times_created_t,\n        times_changed=times_changed_t,\n        data_offset_req=data_offset_req_d,\n        data_len_req=data_len_req_d,\n        data_len_rsp=data_len_rsp_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smb_files\",\n        ts=TimeGenerated\n};\ncorelight_smb_files\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject74')._parserId74,'/'))))]",
      "dependsOn": [
        "[variables('parserObject74')._parserId74]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smb_files')]",
        "contentId": "[variables('parserObject74').parserContentId74]",
        "kind": "Parser",
        "version": "[variables('parserObject74').parserVersion74]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject75').parserTemplateSpecName75]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_smb_mapping Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject75').parserVersion75]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject75')._parserName75]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_smb_mapping parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_smb_mapping",
                "query": "let corelight_smb_mapping = view () {\n    Corelight_v2_smb_mapping_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        path=path_s,\n        service=service_s,\n        native_file_system=native_file_system_s,\n        share_type=share_type_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smb_mapping\",\n        ts=TimeGenerated\n};\ncorelight_smb_mapping\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject75')._parserId75,'/'))))]",
              "dependsOn": [
                "[variables('parserObject75')._parserId75]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smb_mapping')]",
                "contentId": "[variables('parserObject75').parserContentId75]",
                "kind": "Parser",
                "version": "[variables('parserObject75').parserVersion75]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject75').parserContentId75]",
        "contentKind": "Parser",
        "displayName": "corelight_smb_mapping parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject75').parserContentId75,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject75').parserContentId75,'-', '1.0.0')))]",
        "version": "[variables('parserObject75').parserVersion75]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject75')._parserName75]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_smb_mapping parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_smb_mapping",
        "query": "let corelight_smb_mapping = view () {\n    Corelight_v2_smb_mapping_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        path=path_s,\n        service=service_s,\n        native_file_system=native_file_system_s,\n        share_type=share_type_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smb_mapping\",\n        ts=TimeGenerated\n};\ncorelight_smb_mapping\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject75')._parserId75,'/'))))]",
      "dependsOn": [
        "[variables('parserObject75')._parserId75]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smb_mapping')]",
        "contentId": "[variables('parserObject75').parserContentId75]",
        "kind": "Parser",
        "version": "[variables('parserObject75').parserVersion75]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject76').parserTemplateSpecName76]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_smtp Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject76').parserVersion76]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject76')._parserName76]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_smtp parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_smtp",
                "query": "let corelight_smtp = view () {\n    Corelight_v2_smtp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        trans_depth=trans_depth_d,\n        helo=helo_s,\n        mailfrom=mailfrom_s,\n        rcptto=rcptto_s,\n        _date=date_s,\n        from=from_s,\n        _to=to_s,\n        cc=cc_s,\n        reply_to=reply_to_s,\n        msg_id=msg_id_s,\n        in_reply_to=in_reply_to_s,\n        subject=subject_s,\n        x_originating_ip=x_originating_ip_s,\n        first_received=first_received_s,\n        second_received=second_received_s,\n        last_reply=last_reply_s,\n        path=path_s,\n        user_agent=user_agent_s,\n        tls=tls_b,\n        fuids=fuids_s,\n        is_webmail=is_webmail_b,\n        urls=urls_s,\n        domains=domains_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smtp\",\n        ts=TimeGenerated\n};\ncorelight_smtp\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject76')._parserId76,'/'))))]",
              "dependsOn": [
                "[variables('parserObject76')._parserId76]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smtp')]",
                "contentId": "[variables('parserObject76').parserContentId76]",
                "kind": "Parser",
                "version": "[variables('parserObject76').parserVersion76]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject76').parserContentId76]",
        "contentKind": "Parser",
        "displayName": "corelight_smtp parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject76').parserContentId76,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject76').parserContentId76,'-', '1.0.0')))]",
        "version": "[variables('parserObject76').parserVersion76]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject76')._parserName76]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_smtp parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_smtp",
        "query": "let corelight_smtp = view () {\n    Corelight_v2_smtp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        trans_depth=trans_depth_d,\n        helo=helo_s,\n        mailfrom=mailfrom_s,\n        rcptto=rcptto_s,\n        _date=date_s,\n        from=from_s,\n        _to=to_s,\n        cc=cc_s,\n        reply_to=reply_to_s,\n        msg_id=msg_id_s,\n        in_reply_to=in_reply_to_s,\n        subject=subject_s,\n        x_originating_ip=x_originating_ip_s,\n        first_received=first_received_s,\n        second_received=second_received_s,\n        last_reply=last_reply_s,\n        path=path_s,\n        user_agent=user_agent_s,\n        tls=tls_b,\n        fuids=fuids_s,\n        is_webmail=is_webmail_b,\n        urls=urls_s,\n        domains=domains_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smtp\",\n        ts=TimeGenerated\n};\ncorelight_smtp\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject76')._parserId76,'/'))))]",
      "dependsOn": [
        "[variables('parserObject76')._parserId76]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smtp')]",
        "contentId": "[variables('parserObject76').parserContentId76]",
        "kind": "Parser",
        "version": "[variables('parserObject76').parserVersion76]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject77').parserTemplateSpecName77]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_smtp_links Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject77').parserVersion77]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject77')._parserName77]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_smtp_links parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_smtp_links",
                "query": "let corelight_smtp_links = view () {\n    Corelight_v2_smtp_links_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        fuid=fuid_s,\n        link=link_s,\n        domain=domain_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smtp_links\",\n        ts=TimeGenerated\n};\ncorelight_smtp_links\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject77')._parserId77,'/'))))]",
              "dependsOn": [
                "[variables('parserObject77')._parserId77]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smtp_links')]",
                "contentId": "[variables('parserObject77').parserContentId77]",
                "kind": "Parser",
                "version": "[variables('parserObject77').parserVersion77]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject77').parserContentId77]",
        "contentKind": "Parser",
        "displayName": "corelight_smtp_links parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject77').parserContentId77,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject77').parserContentId77,'-', '1.0.0')))]",
        "version": "[variables('parserObject77').parserVersion77]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject77')._parserName77]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_smtp_links parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_smtp_links",
        "query": "let corelight_smtp_links = view () {\n    Corelight_v2_smtp_links_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        fuid=fuid_s,\n        link=link_s,\n        domain=domain_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"smtp_links\",\n        ts=TimeGenerated\n};\ncorelight_smtp_links\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject77')._parserId77,'/'))))]",
      "dependsOn": [
        "[variables('parserObject77')._parserId77]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_smtp_links')]",
        "contentId": "[variables('parserObject77').parserContentId77]",
        "kind": "Parser",
        "version": "[variables('parserObject77').parserVersion77]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject78').parserTemplateSpecName78]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_snmp Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject78').parserVersion78]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject78')._parserName78]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_snmp parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_snmp",
                "query": "let corelight_snmp = view () {\n    Corelight_v2_snmp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        duration=duration_d,\n        version=version_s,\n        community=community_s,\n        get_requests=get_requests_d,\n        get_bulk_requests=get_bulk_requests_d,\n        get_responses=get_responses_d,\n        set_requests=set_requests_d,\n        display_string=display_string_s,\n        up_since=up_since_t\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"snmp\",\n        ts=TimeGenerated\n};\ncorelight_snmp\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject78')._parserId78,'/'))))]",
              "dependsOn": [
                "[variables('parserObject78')._parserId78]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_snmp')]",
                "contentId": "[variables('parserObject78').parserContentId78]",
                "kind": "Parser",
                "version": "[variables('parserObject78').parserVersion78]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject78').parserContentId78]",
        "contentKind": "Parser",
        "displayName": "corelight_snmp parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject78').parserContentId78,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject78').parserContentId78,'-', '1.0.0')))]",
        "version": "[variables('parserObject78').parserVersion78]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject78')._parserName78]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_snmp parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_snmp",
        "query": "let corelight_snmp = view () {\n    Corelight_v2_snmp_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        duration=duration_d,\n        version=version_s,\n        community=community_s,\n        get_requests=get_requests_d,\n        get_bulk_requests=get_bulk_requests_d,\n        get_responses=get_responses_d,\n        set_requests=set_requests_d,\n        display_string=display_string_s,\n        up_since=up_since_t\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"snmp\",\n        ts=TimeGenerated\n};\ncorelight_snmp\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject78')._parserId78,'/'))))]",
      "dependsOn": [
        "[variables('parserObject78')._parserId78]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_snmp')]",
        "contentId": "[variables('parserObject78').parserContentId78]",
        "kind": "Parser",
        "version": "[variables('parserObject78').parserVersion78]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject79').parserTemplateSpecName79]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_socks Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject79').parserVersion79]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject79')._parserName79]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_socks parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_socks",
                "query": "let corelight_socks = view () {\n    Corelight_v2_socks_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        version=version_d,\n        user=user_s,\n        password=password_s,\n        status=status_s,\n        request_host=request_host_s,\n        request_name=request_name_s,\n        request_p=request_p_d,\n        bound_host=bound_host_s,\n        bound_name=bound_name_s,\n        bound_p=bound_p_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"socks\",\n        ts=TimeGenerated\n};\ncorelight_socks\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject79')._parserId79,'/'))))]",
              "dependsOn": [
                "[variables('parserObject79')._parserId79]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_socks')]",
                "contentId": "[variables('parserObject79').parserContentId79]",
                "kind": "Parser",
                "version": "[variables('parserObject79').parserVersion79]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject79').parserContentId79]",
        "contentKind": "Parser",
        "displayName": "corelight_socks parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject79').parserContentId79,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject79').parserContentId79,'-', '1.0.0')))]",
        "version": "[variables('parserObject79').parserVersion79]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject79')._parserName79]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_socks parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_socks",
        "query": "let corelight_socks = view () {\n    Corelight_v2_socks_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        version=version_d,\n        user=user_s,\n        password=password_s,\n        status=status_s,\n        request_host=request_host_s,\n        request_name=request_name_s,\n        request_p=request_p_d,\n        bound_host=bound_host_s,\n        bound_name=bound_name_s,\n        bound_p=bound_p_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"socks\",\n        ts=TimeGenerated\n};\ncorelight_socks\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject79')._parserId79,'/'))))]",
      "dependsOn": [
        "[variables('parserObject79')._parserId79]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_socks')]",
        "contentId": "[variables('parserObject79').parserContentId79]",
        "kind": "Parser",
        "version": "[variables('parserObject79').parserVersion79]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject80').parserTemplateSpecName80]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_software Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject80').parserVersion80]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject80')._parserName80]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_software parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_software",
                "query": "let corelight_software = view () {\n    Corelight_v2_software_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        host=host_s,\n        host_p=host_p_d,\n        software_type=software_type_s,\n        name=name_s,\n        version_major=version_major_d,\n        version_minor=version_minor_d,\n        version_minor2=version_minor2_d,\n        version_minor3=version_minor3_d,\n        version_addl=version_addl_s,\n        unparsed_version=unparsed_version_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"software\",\n        ts=TimeGenerated\n};\ncorelight_software\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject80')._parserId80,'/'))))]",
              "dependsOn": [
                "[variables('parserObject80')._parserId80]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_software')]",
                "contentId": "[variables('parserObject80').parserContentId80]",
                "kind": "Parser",
                "version": "[variables('parserObject80').parserVersion80]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject80').parserContentId80]",
        "contentKind": "Parser",
        "displayName": "corelight_software parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject80').parserContentId80,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject80').parserContentId80,'-', '1.0.0')))]",
        "version": "[variables('parserObject80').parserVersion80]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject80')._parserName80]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_software parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_software",
        "query": "let corelight_software = view () {\n    Corelight_v2_software_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        host=host_s,\n        host_p=host_p_d,\n        software_type=software_type_s,\n        name=name_s,\n        version_major=version_major_d,\n        version_minor=version_minor_d,\n        version_minor2=version_minor2_d,\n        version_minor3=version_minor3_d,\n        version_addl=version_addl_s,\n        unparsed_version=unparsed_version_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"software\",\n        ts=TimeGenerated\n};\ncorelight_software\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject80')._parserId80,'/'))))]",
      "dependsOn": [
        "[variables('parserObject80')._parserId80]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_software')]",
        "contentId": "[variables('parserObject80').parserContentId80]",
        "kind": "Parser",
        "version": "[variables('parserObject80').parserVersion80]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject81').parserTemplateSpecName81]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_specific_dns_tunnels Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject81').parserVersion81]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject81')._parserName81]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_specific_dns_tunnels parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_specific_dns_tunnels",
                "query": "let corelight_specific_dns_tunnels = view () {\n    Corelight_v2_specific_dns_tunnels_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        trans_id=trans_id_d,\n        dns_client=dns_client_s,\n        resolver=resolver_s,\n        query=query_s,\n        program=program_s,\n        session_id=session_id_d,\n        detection=detection_s,\n        sods_id=sods_id_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"specific_dns_tunnels\",\n        ts=TimeGenerated\n};\ncorelight_specific_dns_tunnels\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject81')._parserId81,'/'))))]",
              "dependsOn": [
                "[variables('parserObject81')._parserId81]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_specific_dns_tunnels')]",
                "contentId": "[variables('parserObject81').parserContentId81]",
                "kind": "Parser",
                "version": "[variables('parserObject81').parserVersion81]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject81').parserContentId81]",
        "contentKind": "Parser",
        "displayName": "corelight_specific_dns_tunnels parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject81').parserContentId81,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject81').parserContentId81,'-', '1.0.0')))]",
        "version": "[variables('parserObject81').parserVersion81]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject81')._parserName81]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_specific_dns_tunnels parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_specific_dns_tunnels",
        "query": "let corelight_specific_dns_tunnels = view () {\n    Corelight_v2_specific_dns_tunnels_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        trans_id=trans_id_d,\n        dns_client=dns_client_s,\n        resolver=resolver_s,\n        query=query_s,\n        program=program_s,\n        session_id=session_id_d,\n        detection=detection_s,\n        sods_id=sods_id_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"specific_dns_tunnels\",\n        ts=TimeGenerated\n};\ncorelight_specific_dns_tunnels\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject81')._parserId81,'/'))))]",
      "dependsOn": [
        "[variables('parserObject81')._parserId81]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_specific_dns_tunnels')]",
        "contentId": "[variables('parserObject81').parserContentId81]",
        "kind": "Parser",
        "version": "[variables('parserObject81').parserVersion81]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject82').parserTemplateSpecName82]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_ssh Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject82').parserVersion82]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject82')._parserName82]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_ssh parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_ssh",
                "query": "let InferencesLookup = datatable(\n    InferenceName: string,\n    inferences: string,\n    Description: string\n)[\n    \"Client Authentication Bypass Exploit\",\"ABP\",\"The client did not complete the SSH state machine for authentication and likely sent the server an exploit\",\n    \"Keystrokes\",\"KS\",\"Interactive session\",\n    \"Client Bruteforce Guessing\",\"BF\",\"The client failed to authenticate more than the configured threshold\",\n    \"Client Bruteforce Success\",\"BFS\",\"The client failed to authenticate more than the configured threshold but then successfully authenticated\",\n    \"Client Scanner Version\",\"SV\",\"This indicates a connection/scan attempt which terminated after server responded with version. nmap -p 22 localhost --script=ssh-hostkey\",\n    \"Client Scanner Capabilities\",\"SC\",\"This indicates a connection/scan attempt which terminated after server responded with capabilities. nmap -p 22 localhost --script=ssh2-enum-algos\",\n    \"Client Scanner Port\",\"SP\",\"Probes for SSH ports. nmap -p 22 -sV localhost\",\n    \"Client Scanner Authentication\",\"SA\",\"SSH clients which scanned the server for supported authentication methods. nmap -p 22 localhost --script=ssh-auth-methods\",\n    \"Small File Upload\",\"SFU\",\"This indicates a small file upload.\",\n    \"Small File Download\",\"SFD\",\"This indicates a small file download.\",\n    \"Large File Upload\",\"LFU\",\"This indicates a non interactive session where a file was possibly uploaded.\",\n    \"Large File Download\",\"LFD\",\"This indicates a non interactive session where a file was possibly downloaded.\",\n    \"Automated Password Authentication\",\"APWA\",\"The client auth'd with an automated password tool (like sshpass). This inference applies to only the auth type that succeeded. Before it, publickey or password authentication attempts could have occurred.\",\n    \"Interactive Password Authentication\",\"IPWA\",\"The client interactively typed their password to auth. The first authentication attempt which succeeded was interactive. This could mean that a tool such as winSCP was used to automatically authenticate but the tool was provided an incorrect password, prompted the user for a different password, and then the user authenticated.\",\n    \"Public Key Authentication\",\"PKA\",\"The client automatically auth'd using pubkey auth.  This inference applies to only the auth type that succeeded. Before it, publickey or password authentication attempts could have occurred.\",\n    \"None Authentication\",\"NA\",\"The client successfully authenticated using the None method\",\n    \"Multifactor authentication\",\"MFA\",\"After a password or public key was accepted, the server required a second form of auth (a code) and the client successfully provided it\",\n    \"Unknown authentication\",\"UA\",\"We weren't able to determine the authentication method. Telemetry around these could be used to improve authentication inferences.\",\n    \"Automated interaction\",\"AUTO\",\"The client was a script or automated utility and not driven by a user\",\n    \"Server Banner\",\"BAN\",\"The server sent the client a pre-authentication banner, likely for legal reasons\",\n    \"Client trusted server\",\"CTS\",\"The client likely already had an entry in its known_hosts file for this server\",\n    \"Client untrusted server\",\"CUS\",\"The client likely did NOT already have an entry in its known_hosts file for this server\",\n    \"Reverse SSH Provisioned (ssh -R)\",\"RSP\",\"The client connected with a -R flag, which provisions the ports to be used for a Reverse Session to be set up at any point onwards. ssh -R 31337:localhost:22 user@192.168.20.33\",\n    \"Reverse SSH Initiated\",\"RSI\",\"The Reverse session is inititated from the server back to the Client. This initiation can be done at any stage during the session. From the Server, the attacker would initiate the Reverse session by e.g.ssh victim@localhost -p 31337\",\n    \"Reverse SSH Initiation Automated\",\"RSIA\",\"Indicates that the initiation of the Reverse session happened very early in the packet stream, indicating automation\",\n    \"Reverse SSH Logged in\",\"RSL\",\"The Reverse tunnel login login has succeeded, the attacker now has shell on the victim's device\",\n    \"Reverse SSH Keystrokes\",\"RSK\",\"Keystrokes are detected within the Reverse tunnel\",\n    \"No Remote Command (ssh -N)\",\"NRC\",\"The -N flag was used in the SSH session. This is used when no interactivity is required/desired and that only the ports necessary for tunelling are transmitted. If this inference is seen with any of the R* inferences, it would be extremely suspicious. e.g ssh -N -R 31337:localhost:22 attacker@192.168.20.12\",\n    \"SSH Agent Forwarding Requested\",\"AFR\",\"Agent forwarding was requested by the Client e.g ssh -A -i ~/.ssh/id_1_rsa user@192.168.20.33\"\n];\nlet dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_ssh = view () {\n    union isfuzzy=true Corelight_v2_ssh_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter\n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    |project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        auth_attempts = column_ifexists(\"auth_attempts_d\", real(null)),\n        auth_success = column_ifexists(\"auth_success_b\", \"\"),\n        cipher_alg = column_ifexists(\"cipher_alg_s\", \"\"),\n        client = column_ifexists(\"client_s\", \"\"),\n        compression_alg = column_ifexists(\"compression_alg_s\", \"\"),\n        cshka = column_ifexists(\"cshka_s\", \"\"),\n        hassh = column_ifexists(\"hassh_s\", \"\"),\n        hasshAlgorithms = column_ifexists(\"hasshAlgorithms_s\", \"\"),\n        hasshServer = column_ifexists(\"hasshServer_s\", \"\"),\n        hasshServerAlgorithms = column_ifexists(\"hasshServerAlgorithms_s\", \"\"),\n        hasshVersion = column_ifexists(\"hasshVersion_s\", \"\"),\n        host_key = column_ifexists(\"host_key_s\", \"\"),\n        host_key_alg = column_ifexists(\"host_key_alg_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        inferences = column_ifexists(\"inferences_s\", \"\"),\n        kex_alg = column_ifexists(\"kex_alg_s\", \"\"),\n        mac_alg = column_ifexists(\"mac_alg_s\", \"\"),\n        server = column_ifexists(\"server_s\", \"\"),\n        sshka = column_ifexists(\"sshka_s\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        version = column_ifexists(\"version_d\", real(null)),\n        remote_location_country_code = column_ifexists(\"remote_location_country_code_s\", \"\"),\n        remote_location_region = column_ifexists(\"remote_location_region_s\", \"\"),\n        remote_location_city = column_ifexists(\"remote_location_city_s\", \"\"),\n        remote_location_latitude = column_ifexists(\"remote_location_latitude_d\", real(null)),\n        remote_location_longitude = column_ifexists(\"remote_location_longitude_d\", real(null)),\n        direction = column_ifexists(\"direction_s\", \"\")\n    | mv-expand todynamic(inferences)\n    | extend inferences_string = tostring(inferences)\n    | lookup kind=leftouter InferencesLookup on $left.inferences_string == $right.inferences\n    | summarize InferenceNames = make_list(InferenceName), Descriptions = make_list(Description), Inferences = make_list(inferences_string), arg_max(TimeGenerated, *) by uid\n    | extend\n        EventVendor =\"Corelight\",\n        EventProduct =\"CorelightSensor\",\n        EventType =\"ssh\",\n        ts = TimeGenerated,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        sensor_name = coalesce(system_name, \"unknown\"),\n        action = iff(auth_success == \"true\", \"Success\", \"Failure\")\n    | extend\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"), \"true\", \"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        auth_attempts,\n        auth_success,\n        cipher_alg,\n        client,\n        compression_alg,\n        cshka,\n        hassh,\n        hasshAlgorithms,\n        hasshServer,\n        hasshServerAlgorithms,\n        hasshVersion,\n        host_key,\n        host_key_alg,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        Inferences,\n        kex_alg,\n        mac_alg,\n        server,\n        sshka,\n        uid,\n        version,\n        remote_location_country_code,\n        remote_location_region,\n        remote_location_city,\n        remote_location_latitude,\n        remote_location_longitude,\n        direction,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        sensor_name,\n        action,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip,\n        InferenceNames,\n        Descriptions\n};\ncorelight_ssh\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject82')._parserId82,'/'))))]",
              "dependsOn": [
                "[variables('parserObject82')._parserId82]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ssh')]",
                "contentId": "[variables('parserObject82').parserContentId82]",
                "kind": "Parser",
                "version": "[variables('parserObject82').parserVersion82]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject82').parserContentId82]",
        "contentKind": "Parser",
        "displayName": "corelight_ssh parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject82').parserContentId82,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject82').parserContentId82,'-', '1.1.0')))]",
        "version": "[variables('parserObject82').parserVersion82]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject82')._parserName82]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_ssh parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_ssh",
        "query": "let InferencesLookup = datatable(\n    InferenceName: string,\n    inferences: string,\n    Description: string\n)[\n    \"Client Authentication Bypass Exploit\",\"ABP\",\"The client did not complete the SSH state machine for authentication and likely sent the server an exploit\",\n    \"Keystrokes\",\"KS\",\"Interactive session\",\n    \"Client Bruteforce Guessing\",\"BF\",\"The client failed to authenticate more than the configured threshold\",\n    \"Client Bruteforce Success\",\"BFS\",\"The client failed to authenticate more than the configured threshold but then successfully authenticated\",\n    \"Client Scanner Version\",\"SV\",\"This indicates a connection/scan attempt which terminated after server responded with version. nmap -p 22 localhost --script=ssh-hostkey\",\n    \"Client Scanner Capabilities\",\"SC\",\"This indicates a connection/scan attempt which terminated after server responded with capabilities. nmap -p 22 localhost --script=ssh2-enum-algos\",\n    \"Client Scanner Port\",\"SP\",\"Probes for SSH ports. nmap -p 22 -sV localhost\",\n    \"Client Scanner Authentication\",\"SA\",\"SSH clients which scanned the server for supported authentication methods. nmap -p 22 localhost --script=ssh-auth-methods\",\n    \"Small File Upload\",\"SFU\",\"This indicates a small file upload.\",\n    \"Small File Download\",\"SFD\",\"This indicates a small file download.\",\n    \"Large File Upload\",\"LFU\",\"This indicates a non interactive session where a file was possibly uploaded.\",\n    \"Large File Download\",\"LFD\",\"This indicates a non interactive session where a file was possibly downloaded.\",\n    \"Automated Password Authentication\",\"APWA\",\"The client auth'd with an automated password tool (like sshpass). This inference applies to only the auth type that succeeded. Before it, publickey or password authentication attempts could have occurred.\",\n    \"Interactive Password Authentication\",\"IPWA\",\"The client interactively typed their password to auth. The first authentication attempt which succeeded was interactive. This could mean that a tool such as winSCP was used to automatically authenticate but the tool was provided an incorrect password, prompted the user for a different password, and then the user authenticated.\",\n    \"Public Key Authentication\",\"PKA\",\"The client automatically auth'd using pubkey auth.  This inference applies to only the auth type that succeeded. Before it, publickey or password authentication attempts could have occurred.\",\n    \"None Authentication\",\"NA\",\"The client successfully authenticated using the None method\",\n    \"Multifactor authentication\",\"MFA\",\"After a password or public key was accepted, the server required a second form of auth (a code) and the client successfully provided it\",\n    \"Unknown authentication\",\"UA\",\"We weren't able to determine the authentication method. Telemetry around these could be used to improve authentication inferences.\",\n    \"Automated interaction\",\"AUTO\",\"The client was a script or automated utility and not driven by a user\",\n    \"Server Banner\",\"BAN\",\"The server sent the client a pre-authentication banner, likely for legal reasons\",\n    \"Client trusted server\",\"CTS\",\"The client likely already had an entry in its known_hosts file for this server\",\n    \"Client untrusted server\",\"CUS\",\"The client likely did NOT already have an entry in its known_hosts file for this server\",\n    \"Reverse SSH Provisioned (ssh -R)\",\"RSP\",\"The client connected with a -R flag, which provisions the ports to be used for a Reverse Session to be set up at any point onwards. ssh -R 31337:localhost:22 user@192.168.20.33\",\n    \"Reverse SSH Initiated\",\"RSI\",\"The Reverse session is inititated from the server back to the Client. This initiation can be done at any stage during the session. From the Server, the attacker would initiate the Reverse session by e.g.ssh victim@localhost -p 31337\",\n    \"Reverse SSH Initiation Automated\",\"RSIA\",\"Indicates that the initiation of the Reverse session happened very early in the packet stream, indicating automation\",\n    \"Reverse SSH Logged in\",\"RSL\",\"The Reverse tunnel login login has succeeded, the attacker now has shell on the victim's device\",\n    \"Reverse SSH Keystrokes\",\"RSK\",\"Keystrokes are detected within the Reverse tunnel\",\n    \"No Remote Command (ssh -N)\",\"NRC\",\"The -N flag was used in the SSH session. This is used when no interactivity is required/desired and that only the ports necessary for tunelling are transmitted. If this inference is seen with any of the R* inferences, it would be extremely suspicious. e.g ssh -N -R 31337:localhost:22 attacker@192.168.20.12\",\n    \"SSH Agent Forwarding Requested\",\"AFR\",\"Agent forwarding was requested by the Client e.g ssh -A -i ~/.ssh/id_1_rsa user@192.168.20.33\"\n];\nlet dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_ssh = view () {\n    union isfuzzy=true Corelight_v2_ssh_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter\n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    |project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        auth_attempts = column_ifexists(\"auth_attempts_d\", real(null)),\n        auth_success = column_ifexists(\"auth_success_b\", \"\"),\n        cipher_alg = column_ifexists(\"cipher_alg_s\", \"\"),\n        client = column_ifexists(\"client_s\", \"\"),\n        compression_alg = column_ifexists(\"compression_alg_s\", \"\"),\n        cshka = column_ifexists(\"cshka_s\", \"\"),\n        hassh = column_ifexists(\"hassh_s\", \"\"),\n        hasshAlgorithms = column_ifexists(\"hasshAlgorithms_s\", \"\"),\n        hasshServer = column_ifexists(\"hasshServer_s\", \"\"),\n        hasshServerAlgorithms = column_ifexists(\"hasshServerAlgorithms_s\", \"\"),\n        hasshVersion = column_ifexists(\"hasshVersion_s\", \"\"),\n        host_key = column_ifexists(\"host_key_s\", \"\"),\n        host_key_alg = column_ifexists(\"host_key_alg_s\", \"\"),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        inferences = column_ifexists(\"inferences_s\", \"\"),\n        kex_alg = column_ifexists(\"kex_alg_s\", \"\"),\n        mac_alg = column_ifexists(\"mac_alg_s\", \"\"),\n        server = column_ifexists(\"server_s\", \"\"),\n        sshka = column_ifexists(\"sshka_s\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        version = column_ifexists(\"version_d\", real(null)),\n        remote_location_country_code = column_ifexists(\"remote_location_country_code_s\", \"\"),\n        remote_location_region = column_ifexists(\"remote_location_region_s\", \"\"),\n        remote_location_city = column_ifexists(\"remote_location_city_s\", \"\"),\n        remote_location_latitude = column_ifexists(\"remote_location_latitude_d\", real(null)),\n        remote_location_longitude = column_ifexists(\"remote_location_longitude_d\", real(null)),\n        direction = column_ifexists(\"direction_s\", \"\")\n    | mv-expand todynamic(inferences)\n    | extend inferences_string = tostring(inferences)\n    | lookup kind=leftouter InferencesLookup on $left.inferences_string == $right.inferences\n    | summarize InferenceNames = make_list(InferenceName), Descriptions = make_list(Description), Inferences = make_list(inferences_string), arg_max(TimeGenerated, *) by uid\n    | extend\n        EventVendor =\"Corelight\",\n        EventProduct =\"CorelightSensor\",\n        EventType =\"ssh\",\n        ts = TimeGenerated,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        sensor_name = coalesce(system_name, \"unknown\"),\n        action = iff(auth_success == \"true\", \"Success\", \"Failure\")\n    | extend\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"), \"true\", \"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        auth_attempts,\n        auth_success,\n        cipher_alg,\n        client,\n        compression_alg,\n        cshka,\n        hassh,\n        hasshAlgorithms,\n        hasshServer,\n        hasshServerAlgorithms,\n        hasshVersion,\n        host_key,\n        host_key_alg,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        Inferences,\n        kex_alg,\n        mac_alg,\n        server,\n        sshka,\n        uid,\n        version,\n        remote_location_country_code,\n        remote_location_region,\n        remote_location_city,\n        remote_location_latitude,\n        remote_location_longitude,\n        direction,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        sensor_name,\n        action,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip,\n        InferenceNames,\n        Descriptions\n};\ncorelight_ssh\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject82')._parserId82,'/'))))]",
      "dependsOn": [
        "[variables('parserObject82')._parserId82]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ssh')]",
        "contentId": "[variables('parserObject82').parserContentId82]",
        "kind": "Parser",
        "version": "[variables('parserObject82').parserVersion82]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject83').parserTemplateSpecName83]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_ssl Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject83').parserVersion83]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject83')._parserName83]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_ssl parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_ssl",
                "query": "let dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_ssl = view () {\n    union isfuzzy=true Corelight_v2_ssl_CL,\n    Corelight_v2_ssl_red_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    (corelight_conn\n    | project uid, local_orig, local_resp    \n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend \n        path=column_ifexists(\"_path_s\", \"\"),\n        system_name=column_ifexists(\"_system_name_s\", \"\"),\n        write_ts=column_ifexists(\"_write_ts_t\", \"\"),\n        cert_chain_fps=column_ifexists(\"cert_chain_fps_s\", \"\"),\n        cipher=column_ifexists(\"cipher_s\", \"\"),\n        client_cert_chain_fps=column_ifexists(\"client_cert_chain_fps_s\", \"\"),\n        curve=column_ifexists(\"curve_s\", \"\"),\n        established=column_ifexists(\"established_b\", \"\"),\n        id_orig_h=column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p=column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h=column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p=column_ifexists(\"id_resp_p_d\", real(null)),\n        id_vlan=column_ifexists(\"id_vlan_d\", real(null)),\n        ja3=column_ifexists(\"ja3_s\", \"\"),\n        ja3s=column_ifexists(\"ja3s_s\", \"\"),\n        resumed=column_ifexists(\"resumed_b\", \"\"),\n        server_name=column_ifexists(\"server_name_s\", \"\"),\n        sni_matches_cert=column_ifexists(\"sni_matches_cert_b\", \"\"),\n        ssl_history=column_ifexists(\"ssl_history_s\", \"\"),\n        uid=column_ifexists(\"uid_s\", \"\"),\n        validation_status=column_ifexists(\"validation_status_s\", \"\"),\n        version=column_ifexists(\"version_s\", \"\"),\n        last_alert=column_ifexists(\"last_alert_s\", \"\"),\n        next_protocol=column_ifexists(\"next_protocol_s\", \"\"),\n        issuer=column_ifexists(\"issuer_s\", \"\"),\n        subject=column_ifexists(\"subject_s\", \"\")\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ssl\",\n        ts = TimeGenerated,\n        src=id_orig_h,\n        src_ip=id_orig_h,\n        src_port=id_orig_p,\n        dest=id_resp_h,\n        dest_ip=id_resp_h,\n        dest_port=id_resp_p,\n        ssl_cipher=cipher,\n        ssl_curve=curve,\n        ssl_subject_common_name=server_name,\n        fingerprint=cert_chain_fps,\n        is_self_signed = iff(validation_status==\"self signed certificate\", \"yes\", \"no\"),\n        action = iff(established==\"true\",\"success\",\"failure\"),\n        sensor_name = coalesce(system_name, \"unknown\"),\n        signature=validation_status,\n        ssl_version = version,\n        ssl_issuer=issuer,\n        ssl_subject=subject\n    | extend \n        is_broadcast = iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        ssl_issuer_common_name = extract('CN=(?<ssl_issuer_common_name>[^,\"]+)', 1, issuer), \n        ssl_issuer_email_domain = extract('emailAddress=[0-9A-Za-z_]+@(?<ssl_issuer_email_domain>[0-9A-Za-z_]+.[0-9A-Za-z_]+)', 1, issuer), \n        ssl_subject_email_domain = extract('emailAddress=[0-9A-Za-z_]+@(?<ssl_subject_email_domain>[0-9A-Za-z_]+.[0-9A-Za-z_]+)', 1, subject) \n    | project \n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        uid,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        version,\n        cipher,\n        curve,\n        server_name,\n        resumed,\n        last_alert,\n        next_protocol,\n        established,\n        ssl_history,\n        cert_chain_fps,\n        client_cert_chain_fps,\n        sni_matches_cert,\n        validation_status,\n        ja3,\n        ja3s,\n        id_vlan,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        ssl_cipher,\n        ssl_curve,\n        ssl_subject_common_name,\n        fingerprint,\n        is_self_signed,\n        action,\n        sensor_name,\n        signature,\n        ssl_version,\n        is_broadcast,\n        is_src_internal_ip,\n        is_dest_internal_ip,\n        ssl_issuer_common_name,\n        ssl_issuer_email_domain,\n        ssl_subject_email_domain\n};\ncorelight_ssl\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject83')._parserId83,'/'))))]",
              "dependsOn": [
                "[variables('parserObject83')._parserId83]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ssl')]",
                "contentId": "[variables('parserObject83').parserContentId83]",
                "kind": "Parser",
                "version": "[variables('parserObject83').parserVersion83]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject83').parserContentId83]",
        "contentKind": "Parser",
        "displayName": "corelight_ssl parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject83').parserContentId83,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject83').parserContentId83,'-', '1.1.0')))]",
        "version": "[variables('parserObject83').parserVersion83]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject83')._parserName83]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_ssl parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_ssl",
        "query": "let dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_ssl = view () {\n    union isfuzzy=true Corelight_v2_ssl_CL,\n    Corelight_v2_ssl_red_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    (corelight_conn\n    | project uid, local_orig, local_resp    \n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend \n        path=column_ifexists(\"_path_s\", \"\"),\n        system_name=column_ifexists(\"_system_name_s\", \"\"),\n        write_ts=column_ifexists(\"_write_ts_t\", \"\"),\n        cert_chain_fps=column_ifexists(\"cert_chain_fps_s\", \"\"),\n        cipher=column_ifexists(\"cipher_s\", \"\"),\n        client_cert_chain_fps=column_ifexists(\"client_cert_chain_fps_s\", \"\"),\n        curve=column_ifexists(\"curve_s\", \"\"),\n        established=column_ifexists(\"established_b\", \"\"),\n        id_orig_h=column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p=column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h=column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p=column_ifexists(\"id_resp_p_d\", real(null)),\n        id_vlan=column_ifexists(\"id_vlan_d\", real(null)),\n        ja3=column_ifexists(\"ja3_s\", \"\"),\n        ja3s=column_ifexists(\"ja3s_s\", \"\"),\n        resumed=column_ifexists(\"resumed_b\", \"\"),\n        server_name=column_ifexists(\"server_name_s\", \"\"),\n        sni_matches_cert=column_ifexists(\"sni_matches_cert_b\", \"\"),\n        ssl_history=column_ifexists(\"ssl_history_s\", \"\"),\n        uid=column_ifexists(\"uid_s\", \"\"),\n        validation_status=column_ifexists(\"validation_status_s\", \"\"),\n        version=column_ifexists(\"version_s\", \"\"),\n        last_alert=column_ifexists(\"last_alert_s\", \"\"),\n        next_protocol=column_ifexists(\"next_protocol_s\", \"\"),\n        issuer=column_ifexists(\"issuer_s\", \"\"),\n        subject=column_ifexists(\"subject_s\", \"\")\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ssl\",\n        ts = TimeGenerated,\n        src=id_orig_h,\n        src_ip=id_orig_h,\n        src_port=id_orig_p,\n        dest=id_resp_h,\n        dest_ip=id_resp_h,\n        dest_port=id_resp_p,\n        ssl_cipher=cipher,\n        ssl_curve=curve,\n        ssl_subject_common_name=server_name,\n        fingerprint=cert_chain_fps,\n        is_self_signed = iff(validation_status==\"self signed certificate\", \"yes\", \"no\"),\n        action = iff(established==\"true\",\"success\",\"failure\"),\n        sensor_name = coalesce(system_name, \"unknown\"),\n        signature=validation_status,\n        ssl_version = version,\n        ssl_issuer=issuer,\n        ssl_subject=subject\n    | extend \n        is_broadcast = iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"),\"true\",\"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        ssl_issuer_common_name = extract('CN=(?<ssl_issuer_common_name>[^,\"]+)', 1, issuer), \n        ssl_issuer_email_domain = extract('emailAddress=[0-9A-Za-z_]+@(?<ssl_issuer_email_domain>[0-9A-Za-z_]+.[0-9A-Za-z_]+)', 1, issuer), \n        ssl_subject_email_domain = extract('emailAddress=[0-9A-Za-z_]+@(?<ssl_subject_email_domain>[0-9A-Za-z_]+.[0-9A-Za-z_]+)', 1, subject) \n    | project \n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        uid,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        version,\n        cipher,\n        curve,\n        server_name,\n        resumed,\n        last_alert,\n        next_protocol,\n        established,\n        ssl_history,\n        cert_chain_fps,\n        client_cert_chain_fps,\n        sni_matches_cert,\n        validation_status,\n        ja3,\n        ja3s,\n        id_vlan,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        ssl_cipher,\n        ssl_curve,\n        ssl_subject_common_name,\n        fingerprint,\n        is_self_signed,\n        action,\n        sensor_name,\n        signature,\n        ssl_version,\n        is_broadcast,\n        is_src_internal_ip,\n        is_dest_internal_ip,\n        ssl_issuer_common_name,\n        ssl_issuer_email_domain,\n        ssl_subject_email_domain\n};\ncorelight_ssl\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject83')._parserId83,'/'))))]",
      "dependsOn": [
        "[variables('parserObject83')._parserId83]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ssl')]",
        "contentId": "[variables('parserObject83').parserContentId83]",
        "kind": "Parser",
        "version": "[variables('parserObject83').parserVersion83]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject84').parserTemplateSpecName84]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_ssl_red Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject84').parserVersion84]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject84')._parserName84]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_ssl_red parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_ssl_red",
                "query": "let corelight_ssl_red = view () {\n    Corelight_v2_ssl_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        version=version_s,\n        cipher=cipher_s,\n        curve=curve_s,\n        server_name=server_name_s,\n        resumed=resumed_b,\n        last_alert=last_alert_s,\n        next_protocol=next_protocol_s,\n        established=established_b,\n        ssl_history=ssl_history_s,\n        cert_chain_fps=cert_chain_fps_s,\n        client_cert_chain_fps=client_cert_chain_fps_s,\n        sni_matches_cert=sni_matches_cert_b,\n        validation_status=validation_status_s,\n        ja3=ja3_s,\n        ja3s=ja3s_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ssl_red\",\n        ts=TimeGenerated\n};\ncorelight_ssl_red\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject84')._parserId84,'/'))))]",
              "dependsOn": [
                "[variables('parserObject84')._parserId84]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ssl_red')]",
                "contentId": "[variables('parserObject84').parserContentId84]",
                "kind": "Parser",
                "version": "[variables('parserObject84').parserVersion84]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject84').parserContentId84]",
        "contentKind": "Parser",
        "displayName": "corelight_ssl_red parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject84').parserContentId84,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject84').parserContentId84,'-', '1.0.0')))]",
        "version": "[variables('parserObject84').parserVersion84]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject84')._parserName84]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_ssl_red parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_ssl_red",
        "query": "let corelight_ssl_red = view () {\n    Corelight_v2_ssl_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        version=version_s,\n        cipher=cipher_s,\n        curve=curve_s,\n        server_name=server_name_s,\n        resumed=resumed_b,\n        last_alert=last_alert_s,\n        next_protocol=next_protocol_s,\n        established=established_b,\n        ssl_history=ssl_history_s,\n        cert_chain_fps=cert_chain_fps_s,\n        client_cert_chain_fps=client_cert_chain_fps_s,\n        sni_matches_cert=sni_matches_cert_b,\n        validation_status=validation_status_s,\n        ja3=ja3_s,\n        ja3s=ja3s_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"ssl_red\",\n        ts=TimeGenerated\n};\ncorelight_ssl_red\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject84')._parserId84,'/'))))]",
      "dependsOn": [
        "[variables('parserObject84')._parserId84]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_ssl_red')]",
        "contentId": "[variables('parserObject84').parserContentId84]",
        "kind": "Parser",
        "version": "[variables('parserObject84').parserVersion84]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject85').parserTemplateSpecName85]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_stats Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject85').parserVersion85]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject85')._parserName85]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_stats parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_stats",
                "query": "let corelight_stats = view () {\n    Corelight_v2_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        peer=peer_s,\n        mem=mem_d,\n        pkts_proc=pkts_proc_d,\n        bytes_recv=bytes_recv_d,\n        pkts_dropped=pkts_dropped_d,\n        pkts_link=pkts_link_d,\n        pkt_lag=pkt_lag_d,\n        events_proc=events_proc_d,\n        events_queued=events_queued_d,\n        active_tcp_conns=active_tcp_conns_d,\n        active_udp_conns=active_udp_conns_d,\n        active_icmp_conns=active_icmp_conns_d,\n        tcp_conns=tcp_conns_d,\n        udp_conns=udp_conns_d,\n        icmp_conns=icmp_conns_d,\n        timers=timers_d,\n        active_timers=active_timers_d,\n        files=files_d,\n        active_files=active_files_d,\n        dns_requests=dns_requests_d,\n        active_dns_requests=active_dns_requests_d,\n        reassem_tcp_size=reassem_tcp_size_d,\n        reassem_file_size=reassem_file_size_d,\n        reassem_frag_size=reassem_frag_size_d,\n        reassem_unknown_size=reassem_unknown_size_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"stats\",\n        ts=TimeGenerated\n};\ncorelight_stats\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject85')._parserId85,'/'))))]",
              "dependsOn": [
                "[variables('parserObject85')._parserId85]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stats')]",
                "contentId": "[variables('parserObject85').parserContentId85]",
                "kind": "Parser",
                "version": "[variables('parserObject85').parserVersion85]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject85').parserContentId85]",
        "contentKind": "Parser",
        "displayName": "corelight_stats parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject85').parserContentId85,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject85').parserContentId85,'-', '1.0.0')))]",
        "version": "[variables('parserObject85').parserVersion85]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject85')._parserName85]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_stats parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_stats",
        "query": "let corelight_stats = view () {\n    Corelight_v2_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        peer=peer_s,\n        mem=mem_d,\n        pkts_proc=pkts_proc_d,\n        bytes_recv=bytes_recv_d,\n        pkts_dropped=pkts_dropped_d,\n        pkts_link=pkts_link_d,\n        pkt_lag=pkt_lag_d,\n        events_proc=events_proc_d,\n        events_queued=events_queued_d,\n        active_tcp_conns=active_tcp_conns_d,\n        active_udp_conns=active_udp_conns_d,\n        active_icmp_conns=active_icmp_conns_d,\n        tcp_conns=tcp_conns_d,\n        udp_conns=udp_conns_d,\n        icmp_conns=icmp_conns_d,\n        timers=timers_d,\n        active_timers=active_timers_d,\n        files=files_d,\n        active_files=active_files_d,\n        dns_requests=dns_requests_d,\n        active_dns_requests=active_dns_requests_d,\n        reassem_tcp_size=reassem_tcp_size_d,\n        reassem_file_size=reassem_file_size_d,\n        reassem_frag_size=reassem_frag_size_d,\n        reassem_unknown_size=reassem_unknown_size_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"stats\",\n        ts=TimeGenerated\n};\ncorelight_stats\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject85')._parserId85,'/'))))]",
      "dependsOn": [
        "[variables('parserObject85')._parserId85]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stats')]",
        "contentId": "[variables('parserObject85').parserContentId85]",
        "kind": "Parser",
        "version": "[variables('parserObject85').parserVersion85]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject86').parserTemplateSpecName86]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_stepping Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject86').parserVersion86]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject86')._parserName86]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_stepping parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_stepping",
                "query": "let corelight_stepping = view () {\n    Corelight_v2_stepping_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        dt=dt_d,\n        uid1=uid1_s,\n        uid2=uid2_s,\n        direct=direct_b,\n        client1_h=client1_h_s,\n        client1_p=client1_p_d,\n        server1_h=server1_h_s,\n        server1_p=server1_p_d,\n        client2_h=client2_h_s,\n        client2_p=client2_p_d,\n        server2_h=server2_h_s,\n        server2_p=server2_p_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"stepping\",\n        ts=TimeGenerated\n};\ncorelight_stepping\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject86')._parserId86,'/'))))]",
              "dependsOn": [
                "[variables('parserObject86')._parserId86]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stepping')]",
                "contentId": "[variables('parserObject86').parserContentId86]",
                "kind": "Parser",
                "version": "[variables('parserObject86').parserVersion86]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject86').parserContentId86]",
        "contentKind": "Parser",
        "displayName": "corelight_stepping parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject86').parserContentId86,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject86').parserContentId86,'-', '1.0.0')))]",
        "version": "[variables('parserObject86').parserVersion86]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject86')._parserName86]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_stepping parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_stepping",
        "query": "let corelight_stepping = view () {\n    Corelight_v2_stepping_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        dt=dt_d,\n        uid1=uid1_s,\n        uid2=uid2_s,\n        direct=direct_b,\n        client1_h=client1_h_s,\n        client1_p=client1_p_d,\n        server1_h=server1_h_s,\n        server1_p=server1_p_d,\n        client2_h=client2_h_s,\n        client2_p=client2_p_d,\n        server2_h=server2_h_s,\n        server2_p=server2_p_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"stepping\",\n        ts=TimeGenerated\n};\ncorelight_stepping\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject86')._parserId86,'/'))))]",
      "dependsOn": [
        "[variables('parserObject86')._parserId86]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stepping')]",
        "contentId": "[variables('parserObject86').parserContentId86]",
        "kind": "Parser",
        "version": "[variables('parserObject86').parserVersion86]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject87').parserTemplateSpecName87]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_stun Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject87').parserVersion87]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject87')._parserName87]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_stun parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_stun",
                "query": "let corelight_stun = view () {\n    Corelight_v2_stun_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        is_orig=is_orig_b,\n        trans_id=trans_id_s,\n        method=method_s,\n        class=class_s,\n        attr_types=attr_types_s,\n        attr_vals=attr_vals_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"stun\",\n        ts=TimeGenerated\n};\ncorelight_stun\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject87')._parserId87,'/'))))]",
              "dependsOn": [
                "[variables('parserObject87')._parserId87]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stun')]",
                "contentId": "[variables('parserObject87').parserContentId87]",
                "kind": "Parser",
                "version": "[variables('parserObject87').parserVersion87]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject87').parserContentId87]",
        "contentKind": "Parser",
        "displayName": "corelight_stun parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject87').parserContentId87,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject87').parserContentId87,'-', '1.0.0')))]",
        "version": "[variables('parserObject87').parserVersion87]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject87')._parserName87]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_stun parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_stun",
        "query": "let corelight_stun = view () {\n    Corelight_v2_stun_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        is_orig=is_orig_b,\n        trans_id=trans_id_s,\n        method=method_s,\n        class=class_s,\n        attr_types=attr_types_s,\n        attr_vals=attr_vals_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"stun\",\n        ts=TimeGenerated\n};\ncorelight_stun\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject87')._parserId87,'/'))))]",
      "dependsOn": [
        "[variables('parserObject87')._parserId87]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stun')]",
        "contentId": "[variables('parserObject87').parserContentId87]",
        "kind": "Parser",
        "version": "[variables('parserObject87').parserVersion87]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject88').parserTemplateSpecName88]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_stun_nat Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject88').parserVersion88]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject88')._parserName88]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_stun_nat parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_stun_nat",
                "query": "let corelight_stun_nat = view () {\n    Corelight_v2_stun_nat_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        is_orig=is_orig_b,\n        wan_addrs=wan_addrs_s,\n        wan_ports=wan_ports_s,\n        lan_addrs=lan_addrs_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"stun_nat\",\n        ts=TimeGenerated\n};\ncorelight_stun_nat\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject88')._parserId88,'/'))))]",
              "dependsOn": [
                "[variables('parserObject88')._parserId88]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stun_nat')]",
                "contentId": "[variables('parserObject88').parserContentId88]",
                "kind": "Parser",
                "version": "[variables('parserObject88').parserVersion88]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject88').parserContentId88]",
        "contentKind": "Parser",
        "displayName": "corelight_stun_nat parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject88').parserContentId88,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject88').parserContentId88,'-', '1.0.0')))]",
        "version": "[variables('parserObject88').parserVersion88]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject88')._parserName88]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_stun_nat parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_stun_nat",
        "query": "let corelight_stun_nat = view () {\n    Corelight_v2_stun_nat_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        is_orig=is_orig_b,\n        wan_addrs=wan_addrs_s,\n        wan_ports=wan_ports_s,\n        lan_addrs=lan_addrs_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"stun_nat\",\n        ts=TimeGenerated\n};\ncorelight_stun_nat\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject88')._parserId88,'/'))))]",
      "dependsOn": [
        "[variables('parserObject88')._parserId88]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_stun_nat')]",
        "contentId": "[variables('parserObject88').parserContentId88]",
        "kind": "Parser",
        "version": "[variables('parserObject88').parserVersion88]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject89').parserTemplateSpecName89]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_suricata_corelight Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject89').parserVersion89]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject89')._parserName89]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_suricata_corelight parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_suricata_corelight",
                "query": "let corelight_suricata_corelight = view () {\n    Corelight_v2_suricata_corelight_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        icmp_type=icmp_type_d,\n        icmp_code=icmp_code_d,\n        suri_id=suri_id_s,\n        service=service_s,\n        flow_id=flow_id_d,\n        tx_id=tx_id_d,\n        pcap_cnt=pcap_cnt_d,\n        alert_action=alert_action_s,\n        alert_gid=alert_gid_d,\n        alert_signature_id=alert_signature_id_d,\n        alert_rev=alert_rev_d,\n        alert_signature=alert_signature_s,\n        alert_category=alert_category_s,\n        alert_severity=alert_severity_d,\n        alert_metadata=alert_metadata_s,\n        community_id=community_id_s,\n        payload=payload_s,\n        packet=packet_s,\n        metadata=metadata_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"suricata_corelight\",\n        ts=TimeGenerated\n};\ncorelight_suricata_corelight\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject89')._parserId89,'/'))))]",
              "dependsOn": [
                "[variables('parserObject89')._parserId89]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_corelight')]",
                "contentId": "[variables('parserObject89').parserContentId89]",
                "kind": "Parser",
                "version": "[variables('parserObject89').parserVersion89]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject89').parserContentId89]",
        "contentKind": "Parser",
        "displayName": "corelight_suricata_corelight parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject89').parserContentId89,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject89').parserContentId89,'-', '1.0.0')))]",
        "version": "[variables('parserObject89').parserVersion89]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject89')._parserName89]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_suricata_corelight parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_suricata_corelight",
        "query": "let corelight_suricata_corelight = view () {\n    Corelight_v2_suricata_corelight_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        icmp_type=icmp_type_d,\n        icmp_code=icmp_code_d,\n        suri_id=suri_id_s,\n        service=service_s,\n        flow_id=flow_id_d,\n        tx_id=tx_id_d,\n        pcap_cnt=pcap_cnt_d,\n        alert_action=alert_action_s,\n        alert_gid=alert_gid_d,\n        alert_signature_id=alert_signature_id_d,\n        alert_rev=alert_rev_d,\n        alert_signature=alert_signature_s,\n        alert_category=alert_category_s,\n        alert_severity=alert_severity_d,\n        alert_metadata=alert_metadata_s,\n        community_id=community_id_s,\n        payload=payload_s,\n        packet=packet_s,\n        metadata=metadata_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"suricata_corelight\",\n        ts=TimeGenerated\n};\ncorelight_suricata_corelight\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject89')._parserId89,'/'))))]",
      "dependsOn": [
        "[variables('parserObject89')._parserId89]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_corelight')]",
        "contentId": "[variables('parserObject89').parserContentId89]",
        "kind": "Parser",
        "version": "[variables('parserObject89').parserVersion89]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject90').parserTemplateSpecName90]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_suricata_eve Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject90').parserVersion90]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject90')._parserName90]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_suricata_eve parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_suricata_eve",
                "query": "let corelight_suricata_eve = view () {\n    Corelight_v2_suricata_eve_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        raw_alert=raw_alert_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"suricata_eve\",\n        ts=TimeGenerated\n};\ncorelight_suricata_eve\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject90')._parserId90,'/'))))]",
              "dependsOn": [
                "[variables('parserObject90')._parserId90]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_eve')]",
                "contentId": "[variables('parserObject90').parserContentId90]",
                "kind": "Parser",
                "version": "[variables('parserObject90').parserVersion90]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject90').parserContentId90]",
        "contentKind": "Parser",
        "displayName": "corelight_suricata_eve parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject90').parserContentId90,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject90').parserContentId90,'-', '1.0.0')))]",
        "version": "[variables('parserObject90').parserVersion90]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject90')._parserName90]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_suricata_eve parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_suricata_eve",
        "query": "let corelight_suricata_eve = view () {\n    Corelight_v2_suricata_eve_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        raw_alert=raw_alert_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"suricata_eve\",\n        ts=TimeGenerated\n};\ncorelight_suricata_eve\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject90')._parserId90,'/'))))]",
      "dependsOn": [
        "[variables('parserObject90')._parserId90]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_eve')]",
        "contentId": "[variables('parserObject90').parserContentId90]",
        "kind": "Parser",
        "version": "[variables('parserObject90').parserVersion90]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject91').parserTemplateSpecName91]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_suricata_stats Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject91').parserVersion91]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject91')._parserName91]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_suricata_stats parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_suricata_stats",
                "query": "let corelight_suricata_stats = view () {\n    Corelight_v2_suricata_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        raw_mgmt=raw_mgmt_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"suricata_stats\",\n        ts=TimeGenerated\n};\ncorelight_suricata_stats\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject91')._parserId91,'/'))))]",
              "dependsOn": [
                "[variables('parserObject91')._parserId91]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_stats')]",
                "contentId": "[variables('parserObject91').parserContentId91]",
                "kind": "Parser",
                "version": "[variables('parserObject91').parserVersion91]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject91').parserContentId91]",
        "contentKind": "Parser",
        "displayName": "corelight_suricata_stats parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject91').parserContentId91,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject91').parserContentId91,'-', '1.0.0')))]",
        "version": "[variables('parserObject91').parserVersion91]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject91')._parserName91]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_suricata_stats parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_suricata_stats",
        "query": "let corelight_suricata_stats = view () {\n    Corelight_v2_suricata_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        raw_mgmt=raw_mgmt_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"suricata_stats\",\n        ts=TimeGenerated\n};\ncorelight_suricata_stats\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject91')._parserId91,'/'))))]",
      "dependsOn": [
        "[variables('parserObject91')._parserId91]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_stats')]",
        "contentId": "[variables('parserObject91').parserContentId91]",
        "kind": "Parser",
        "version": "[variables('parserObject91').parserVersion91]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject92').parserTemplateSpecName92]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_suricata_zeek_stats Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject92').parserVersion92]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject92')._parserName92]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_suricata_zeek_stats parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_suricata_zeek_stats",
                "query": "let corelight_suricata_zeek_stats = view () {\n    Corelight_v2_suricata_zeek_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        raised_alerts=raised_alerts_d,\n        matched_conn_alerts=matched_conn_alerts_d,\n        unparsed_alerts=unparsed_alerts_d,\n        closed_conn_alerts=closed_conn_alerts_d,\n        unmatched_conn_alerts=unmatched_conn_alerts_d,\n        uniq_matched_conns=uniq_matched_conns_d,\n        uniq_closed_conns=uniq_closed_conns_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"suricata_zeek_stats\",\n        ts=TimeGenerated\n};\ncorelight_suricata_zeek_stats\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject92')._parserId92,'/'))))]",
              "dependsOn": [
                "[variables('parserObject92')._parserId92]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_zeek_stats')]",
                "contentId": "[variables('parserObject92').parserContentId92]",
                "kind": "Parser",
                "version": "[variables('parserObject92').parserVersion92]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject92').parserContentId92]",
        "contentKind": "Parser",
        "displayName": "corelight_suricata_zeek_stats parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject92').parserContentId92,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject92').parserContentId92,'-', '1.0.0')))]",
        "version": "[variables('parserObject92').parserVersion92]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject92')._parserName92]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_suricata_zeek_stats parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_suricata_zeek_stats",
        "query": "let corelight_suricata_zeek_stats = view () {\n    Corelight_v2_suricata_zeek_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        raised_alerts=raised_alerts_d,\n        matched_conn_alerts=matched_conn_alerts_d,\n        unparsed_alerts=unparsed_alerts_d,\n        closed_conn_alerts=closed_conn_alerts_d,\n        unmatched_conn_alerts=unmatched_conn_alerts_d,\n        uniq_matched_conns=uniq_matched_conns_d,\n        uniq_closed_conns=uniq_closed_conns_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"suricata_zeek_stats\",\n        ts=TimeGenerated\n};\ncorelight_suricata_zeek_stats\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject92')._parserId92,'/'))))]",
      "dependsOn": [
        "[variables('parserObject92')._parserId92]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_suricata_zeek_stats')]",
        "contentId": "[variables('parserObject92').parserContentId92]",
        "kind": "Parser",
        "version": "[variables('parserObject92').parserVersion92]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject93').parserTemplateSpecName93]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_syslog Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject93').parserVersion93]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject93')._parserName93]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_syslog parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_syslog",
                "query": "let corelight_syslog = view () {\n    Corelight_v2_syslog_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        facility=facility_s,\n        severity=severity_s,\n        message=Message\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"syslog\",\n        ts=TimeGenerated\n};\ncorelight_syslog\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject93')._parserId93,'/'))))]",
              "dependsOn": [
                "[variables('parserObject93')._parserId93]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_syslog')]",
                "contentId": "[variables('parserObject93').parserContentId93]",
                "kind": "Parser",
                "version": "[variables('parserObject93').parserVersion93]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject93').parserContentId93]",
        "contentKind": "Parser",
        "displayName": "corelight_syslog parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject93').parserContentId93,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject93').parserContentId93,'-', '1.0.0')))]",
        "version": "[variables('parserObject93').parserVersion93]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject93')._parserName93]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_syslog parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_syslog",
        "query": "let corelight_syslog = view () {\n    Corelight_v2_syslog_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        proto=proto_s,\n        facility=facility_s,\n        severity=severity_s,\n        message=Message\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"syslog\",\n        ts=TimeGenerated\n};\ncorelight_syslog\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject93')._parserId93,'/'))))]",
      "dependsOn": [
        "[variables('parserObject93')._parserId93]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_syslog')]",
        "contentId": "[variables('parserObject93').parserContentId93]",
        "kind": "Parser",
        "version": "[variables('parserObject93').parserVersion93]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject94').parserTemplateSpecName94]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_tds Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject94').parserVersion94]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject94')._parserName94]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_tds parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_tds",
                "query": "let corelight_tds = view () {\n    Corelight_v2_tds_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        command=command_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"tds\",\n        ts=TimeGenerated\n};\ncorelight_tds\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject94')._parserId94,'/'))))]",
              "dependsOn": [
                "[variables('parserObject94')._parserId94]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tds')]",
                "contentId": "[variables('parserObject94').parserContentId94]",
                "kind": "Parser",
                "version": "[variables('parserObject94').parserVersion94]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject94').parserContentId94]",
        "contentKind": "Parser",
        "displayName": "corelight_tds parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject94').parserContentId94,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject94').parserContentId94,'-', '1.0.0')))]",
        "version": "[variables('parserObject94').parserVersion94]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject94')._parserName94]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_tds parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_tds",
        "query": "let corelight_tds = view () {\n    Corelight_v2_tds_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        command=command_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"tds\",\n        ts=TimeGenerated\n};\ncorelight_tds\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject94')._parserId94,'/'))))]",
      "dependsOn": [
        "[variables('parserObject94')._parserId94]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tds')]",
        "contentId": "[variables('parserObject94').parserContentId94]",
        "kind": "Parser",
        "version": "[variables('parserObject94').parserVersion94]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject95').parserTemplateSpecName95]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_tds_rpc Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject95').parserVersion95]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject95')._parserName95]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_tds_rpc parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_tds_rpc",
                "query": "let corelight_tds_rpc = view () {\n    Corelight_v2_tds_rpc_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        procedure_name=procedure_name_s,\n        parameters=parameters_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"tds_rpc\",\n        ts=TimeGenerated\n};\ncorelight_tds_rpc\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject95')._parserId95,'/'))))]",
              "dependsOn": [
                "[variables('parserObject95')._parserId95]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tds_rpc')]",
                "contentId": "[variables('parserObject95').parserContentId95]",
                "kind": "Parser",
                "version": "[variables('parserObject95').parserVersion95]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject95').parserContentId95]",
        "contentKind": "Parser",
        "displayName": "corelight_tds_rpc parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject95').parserContentId95,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject95').parserContentId95,'-', '1.0.0')))]",
        "version": "[variables('parserObject95').parserVersion95]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject95')._parserName95]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_tds_rpc parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_tds_rpc",
        "query": "let corelight_tds_rpc = view () {\n    Corelight_v2_tds_rpc_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        procedure_name=procedure_name_s,\n        parameters=parameters_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"tds_rpc\",\n        ts=TimeGenerated\n};\ncorelight_tds_rpc\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject95')._parserId95,'/'))))]",
      "dependsOn": [
        "[variables('parserObject95')._parserId95]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tds_rpc')]",
        "contentId": "[variables('parserObject95').parserContentId95]",
        "kind": "Parser",
        "version": "[variables('parserObject95').parserVersion95]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject96').parserTemplateSpecName96]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_tds_sql_batch Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject96').parserVersion96]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject96')._parserName96]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_tds_sql_batch parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_tds_sql_batch",
                "query": "let corelight_tds_sql_batch = view () {\n    Corelight_v2_tds_sql_batch_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        header_type=header_type_s,\n        query=query_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"tds_sql_batch\",\n        ts=TimeGenerated\n};\ncorelight_tds_sql_batch\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject96')._parserId96,'/'))))]",
              "dependsOn": [
                "[variables('parserObject96')._parserId96]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tds_sql_batch')]",
                "contentId": "[variables('parserObject96').parserContentId96]",
                "kind": "Parser",
                "version": "[variables('parserObject96').parserVersion96]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject96').parserContentId96]",
        "contentKind": "Parser",
        "displayName": "corelight_tds_sql_batch parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject96').parserContentId96,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject96').parserContentId96,'-', '1.0.0')))]",
        "version": "[variables('parserObject96').parserVersion96]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject96')._parserName96]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_tds_sql_batch parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_tds_sql_batch",
        "query": "let corelight_tds_sql_batch = view () {\n    Corelight_v2_tds_sql_batch_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        header_type=header_type_s,\n        query=query_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"tds_sql_batch\",\n        ts=TimeGenerated\n};\ncorelight_tds_sql_batch\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject96')._parserId96,'/'))))]",
      "dependsOn": [
        "[variables('parserObject96')._parserId96]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tds_sql_batch')]",
        "contentId": "[variables('parserObject96').parserContentId96]",
        "kind": "Parser",
        "version": "[variables('parserObject96').parserVersion96]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject97').parserTemplateSpecName97]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_traceroute Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject97').parserVersion97]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject97')._parserName97]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_traceroute parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_traceroute",
                "query": "let corelight_traceroute = view () {\n    Corelight_v2_traceroute_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        src=src_s,\n        dst=dst_s,\n        proto=proto_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"traceroute\",\n        ts=TimeGenerated\n};\ncorelight_traceroute\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject97')._parserId97,'/'))))]",
              "dependsOn": [
                "[variables('parserObject97')._parserId97]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_traceroute')]",
                "contentId": "[variables('parserObject97').parserContentId97]",
                "kind": "Parser",
                "version": "[variables('parserObject97').parserVersion97]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject97').parserContentId97]",
        "contentKind": "Parser",
        "displayName": "corelight_traceroute parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject97').parserContentId97,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject97').parserContentId97,'-', '1.0.0')))]",
        "version": "[variables('parserObject97').parserVersion97]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject97')._parserName97]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_traceroute parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_traceroute",
        "query": "let corelight_traceroute = view () {\n    Corelight_v2_traceroute_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        src=src_s,\n        dst=dst_s,\n        proto=proto_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"traceroute\",\n        ts=TimeGenerated\n};\ncorelight_traceroute\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject97')._parserId97,'/'))))]",
      "dependsOn": [
        "[variables('parserObject97')._parserId97]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_traceroute')]",
        "contentId": "[variables('parserObject97').parserContentId97]",
        "kind": "Parser",
        "version": "[variables('parserObject97').parserVersion97]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject98').parserTemplateSpecName98]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_tunnel Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject98').parserVersion98]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject98')._parserName98]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_tunnel parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_tunnel",
                "query": "let corelight_tunnel = view () {\n    Corelight_v2_tunnel_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        tunnel_type=tunnel_type_s,\n        action=action_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"tunnel\",\n        ts=TimeGenerated\n};\ncorelight_tunnel\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject98')._parserId98,'/'))))]",
              "dependsOn": [
                "[variables('parserObject98')._parserId98]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tunnel')]",
                "contentId": "[variables('parserObject98').parserContentId98]",
                "kind": "Parser",
                "version": "[variables('parserObject98').parserVersion98]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject98').parserContentId98]",
        "contentKind": "Parser",
        "displayName": "corelight_tunnel parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject98').parserContentId98,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject98').parserContentId98,'-', '1.0.0')))]",
        "version": "[variables('parserObject98').parserVersion98]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject98')._parserName98]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_tunnel parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_tunnel",
        "query": "let corelight_tunnel = view () {\n    Corelight_v2_tunnel_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        tunnel_type=tunnel_type_s,\n        action=action_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"tunnel\",\n        ts=TimeGenerated\n};\ncorelight_tunnel\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject98')._parserId98,'/'))))]",
      "dependsOn": [
        "[variables('parserObject98')._parserId98]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_tunnel')]",
        "contentId": "[variables('parserObject98').parserContentId98]",
        "kind": "Parser",
        "version": "[variables('parserObject98').parserVersion98]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject99').parserTemplateSpecName99]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_unknown_smartpcap Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject99').parserVersion99]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject99')._parserName99]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_unknown_smartpcap parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_unknown_smartpcap",
                "query": "let corelight_unknown_smartpcap = view () {\n    Corelight_v2_unknown_smartpcap_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        tid=tid_s,\n        pkts=pkts_d,\n        url=url_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"unknown-smartpcap\",\n        ts=TimeGenerated\n};\ncorelight_unknown_smartpcap\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject99')._parserId99,'/'))))]",
              "dependsOn": [
                "[variables('parserObject99')._parserId99]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_unknown_smartpcap')]",
                "contentId": "[variables('parserObject99').parserContentId99]",
                "kind": "Parser",
                "version": "[variables('parserObject99').parserVersion99]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject99').parserContentId99]",
        "contentKind": "Parser",
        "displayName": "corelight_unknown_smartpcap parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject99').parserContentId99,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject99').parserContentId99,'-', '1.0.0')))]",
        "version": "[variables('parserObject99').parserVersion99]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject99')._parserName99]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_unknown_smartpcap parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_unknown_smartpcap",
        "query": "let corelight_unknown_smartpcap = view () {\n    Corelight_v2_unknown_smartpcap_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        tid=tid_s,\n        pkts=pkts_d,\n        url=url_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"unknown-smartpcap\",\n        ts=TimeGenerated\n};\ncorelight_unknown_smartpcap\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject99')._parserId99,'/'))))]",
      "dependsOn": [
        "[variables('parserObject99')._parserId99]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_unknown_smartpcap')]",
        "contentId": "[variables('parserObject99').parserContentId99]",
        "kind": "Parser",
        "version": "[variables('parserObject99').parserVersion99]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject100').parserTemplateSpecName100]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_util_stats Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject100').parserVersion100]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject100')._parserName100]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_util_stats parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_util_stats",
                "query": "let corelight_util_stats = view () {\n    Corelight_v2_util_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        bytes_received=bytes_received_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"util_stats\",\n        ts=TimeGenerated\n};\ncorelight_util_stats\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject100')._parserId100,'/'))))]",
              "dependsOn": [
                "[variables('parserObject100')._parserId100]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_util_stats')]",
                "contentId": "[variables('parserObject100').parserContentId100]",
                "kind": "Parser",
                "version": "[variables('parserObject100').parserVersion100]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject100').parserContentId100]",
        "contentKind": "Parser",
        "displayName": "corelight_util_stats parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject100').parserContentId100,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject100').parserContentId100,'-', '1.0.0')))]",
        "version": "[variables('parserObject100').parserVersion100]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject100')._parserName100]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_util_stats parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_util_stats",
        "query": "let corelight_util_stats = view () {\n    Corelight_v2_util_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        bytes_received=bytes_received_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"util_stats\",\n        ts=TimeGenerated\n};\ncorelight_util_stats\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject100')._parserId100,'/'))))]",
      "dependsOn": [
        "[variables('parserObject100')._parserId100]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_util_stats')]",
        "contentId": "[variables('parserObject100').parserContentId100]",
        "kind": "Parser",
        "version": "[variables('parserObject100').parserVersion100]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject101').parserTemplateSpecName101]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_vpn Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject101').parserVersion101]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject101')._parserName101]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_vpn parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_vpn",
                "query": "let VpnInferencesLookup = datatable(\n    Code: string,\n    Name: string,\n    Description: string\n)[\n    \"ABP Authentication Bypass\",\"N/A\",\"A client wasn't adhering to expectations of SSH either through server exploit or by the client and server switching to a protocol other than SSH after encryption begins.\",\n    \"BF Brute Force Guessing\",\"N/A\",\"A client made a number of authentication attempts that exceeded some configured per-connection threshold.\",\n    \"BFS Brute Force Success\",\"N/A\",\"A client made a number of authentication attempts that exceeded some configured per-connection threshold.\",\n    \"SFD\",\"Small Client File Download\",\"A file transfer occurred in which the server sent a sequence of bytes to the client.\",\n    \"LFD\",\"Large Client File Download\",\"A file transfer occurred in which the server sent a sequence of bytes to the client. Large files are identified dynamically based on trains of MTU-sized packets.\",\n    \"SFU\",\"Small Client File Upload\",\"A file transfer occurred in which the client sent a sequence of bytes to the server.\",\n    \"LFU\",\"Large Client File Upload\",\"A file transfer occurred in which the client sent a sequence of bytes to the server. Large files are identified dynamically based on trains of MTU-sized packets.\",\n    \"KS\",\"Keystrokes\",\"An interactive session occurred in which the client set user-driven keystrokes to the server.\",\n    \"SC\",\"Capabilities Scan- ning\",\"A client exchanged capabilities with the server and then disconnected.\",\n    \"SP\",\"Other Scanning\",\"A client and server didn't exchange encrypted packets but the client wasn't a version or capabilities scanner.\",\n    \"SV\",\"Version Scanning\",\"A client exchanged version strings with the server and then disconnected.\",\n    \"SA Scanning\",\"N/A\",\"The client scanned authentication methods with the server and then disconnected.\",\n    \"APWA\",\"Automated Password Authentication\",\"The client authenticated with an automated password tool (like sshpass).\",\n    \"IPWA\",\"Interactive Password Authentication\",\"The client interactively typed their password to authenticate.\",\n    \"PKA\",\"Public Key Authentication\",\"The client automatically authenticated using pubkey authentication.\",\n    \"NA\",\"None Authentication\",\"The client successfully authenticated using the None method.\",\n    \"MFA\",\"Multifactor authentication\",\"The server required a second form of authentication (a code) after a password or public key was accepted and the client successfully provided it.\",\n    \"UA\",\"Unknown authentication\",\"The authentication method is not determined or is unknown.\",\n    \"AUTO\",\"Automated interaction\",\"The client is a script or automated utility and not driven by a user.\",\n    \"BAN\",\"Server Banner\",\"The server sent the client a pre-authentication banner likely for legal reasons.\",\n    \"CTS trusted server\",\"N/A\",\"The client already has an entry in its known_hosts file for this server.\",\n    \"CUS untrusted server\",\"N/A\",\"The client did not have an entry in its known_hosts file for this server.\",\n    \"RSP\",\"Reverse SSH Provisioned\",\"The client connected with a -R flag which provisions the ports to be used for a Reverse Session set up at any future time.\",\n    \"RSI\",\"Reverse SSH Initiated\",\"The Reverse session is initiated from the server back to the Client.\",\n    \"RSIA\",\"Reverse SSH Initiation Automated\",\"The initiation of the Reverse session happened very early in the packet stream indicating automation.\",\n    \"RSL\",\"Reverse SSH Logged I'n\",\"The Reverse tunnel login has succeeded.\",\n    \"RSK\",\"Reverse SSH Keystrokes\",\"Keystrokes are detected within the Reverse tunnel.\",\n    \"NRC\",\"No Remote Com- mand\",\"The -N flag was used in the SSH session.\",\n    \"AFR\",\"SSH Agent For- warding Requested\",\"Agent forwarding is requested by the Client.\",\n    \"FC\",\"FreeRDP Driven Client\",\"Indicates a CLI tool client (likely FreeRDP-based). This inference doesn't require that the client successfully authenticated to the server.\",\n    \"MSC\",\"Metasploit Scanner Client\",\"Indicates a Metasploit client.\",\n    \"HBC\",\"THC-Hydra Bruteforce Client\",\"Indicates a Hydra client.\",\n    \"CBC\",\"Crowbar Bruteforce Client\",\"Indicates a Crowbar client.\",\n    \"SLC\",\"SharpRDP Lateral Movement Client\",\"Indicates a SharpRDP client.\",\n    \"SOC\",\"Scanner Other Client\",\"Indicates that the client is likely a scanner or exploit tool that the package can't specifically identify (for example, rdpscan or impacket).\"\n    \"RCGA\",\"Remote Credential Guard Authentication\",\"Indicates that the client authenticated using Restricted Admin Mode.\",\n    \"RAMA\",\"Restricted Admin Mode Authentication\",\"Indicates a Metasploit client.\",\n    \"APWA\",\"Automated NTLM Password Authentication\",\"Indicates that the client authenticated using an NTLM password that was provided before the connection was initiated.\",\n    \"IPWA\",\"Interactive NTLM Password Authentication\",\"Indicates that the client authenticated using an NTLM password that was provided after the connection was initiated, suggesting a human-driven connection.\"\n    \"SLH\",\"Slow Handshake\",\"Indicates that the handshake (RDPBCGR connection sequence) took an unusually long time to complete.\",\n    \"COM\",\"N/A\",\"Indicates the presence of a commercial VPN service (such as PrivateInternetAccess or NordVPN).\"\n    \"NSP\",\"N/A\",\"Non Standard Port. FW - Using a port to subvert a firewall (i.e. 53/udp).\",\n    \"RW\",\"N/A\",\"Road warrior configuration detected (i.e. Cisco Anyconnect).\",\n    \"SK\",\"N/A\",\"Static Key\",\n    \"TLS\",\"N/A\",\"TLS Auth\",\n    \"FW\",\"N/A\",\"Indicates that the VPN might be trying to subvert network security by using a port that is usually allowed.\"\n];\nlet dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_vpn = view () {\n    union isfuzzy=true Corelight_v2_vpn_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        client_info = column_ifexists(\"client_info_s\", \"\"),\n        duration = column_ifexists(\"duration_d\", real(null)),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        inferences = column_ifexists(\"inferences_s\", \"\"),\n        issuer = column_ifexists(\"issuer_s\", \"\"),\n        ja3 = column_ifexists(\"ja3_s\", \"\"),\n        ja3s = column_ifexists(\"ja3s_s\", \"\"),\n        orig_bytes = column_ifexists(\"orig_bytes_d\", real(null)),\n        orig_cc = column_ifexists(\"orig_cc_s\", \"\"),\n        orig_city = column_ifexists(\"orig_city_s\", \"\"),\n        orig_region = column_ifexists(\"orig_region_s\", \"\"),\n        proto = column_ifexists(\"proto_s\", \"\"),\n        resp_bytes = column_ifexists(\"resp_bytes_d\", real(null)),\n        resp_cc = column_ifexists(\"resp_cc_s\", \"\"),\n        resp_city = column_ifexists(\"resp_city_s\", \"\"),\n        resp_region = column_ifexists(\"resp_region_s\", \"\"),\n        server_name = column_ifexists(\"server_name_s\", \"\"),\n        service = column_ifexists(\"service_s\", \"\"),\n        subject = column_ifexists(\"subject_s\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        vpn_type = column_ifexists(\"vpn_type_s\", \"\")\n    | mv-expand todynamic(inferences)\n    | extend code_string = tostring(inferences)\n    | lookup kind=leftouter VpnInferencesLookup on $left.code_string == $right.Code\n    | summarize Inferences = make_list(code_string), Names = make_list(Name), Descriptions = make_list(Description), arg_max(TimeGenerated, *) by uid\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"vpn\",\n        ts = TimeGenerated,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        bytes_out = orig_bytes,\n        transport = proto,\n        bytes_in = resp_bytes,\n        signature = vpn_type,\n        sensor_name = coalesce(system_name, \"unknown\")\n    | extend\n        bytes = bytes_in + bytes_out,\n        services = split(service, ','),\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"), \"true\", \"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        client_info,\n        duration,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        Inferences,\n        issuer,\n        ja3,\n        ja3s,\n        orig_bytes,\n        orig_cc,\n        orig_city,\n        orig_region,\n        proto,\n        resp_bytes,\n        resp_cc,\n        resp_city,\n        resp_region,\n        server_name,\n        service,\n        subject,\n        uid,\n        vpn_type,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        bytes_out,\n        transport,\n        bytes_in,\n        signature,\n        sensor_name,\n        bytes,\n        services,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip,\n        Names,\n        Descriptions\n};\ncorelight_vpn\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject101')._parserId101,'/'))))]",
              "dependsOn": [
                "[variables('parserObject101')._parserId101]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_vpn')]",
                "contentId": "[variables('parserObject101').parserContentId101]",
                "kind": "Parser",
                "version": "[variables('parserObject101').parserVersion101]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject101').parserContentId101]",
        "contentKind": "Parser",
        "displayName": "corelight_vpn parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject101').parserContentId101,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject101').parserContentId101,'-', '1.1.0')))]",
        "version": "[variables('parserObject101').parserVersion101]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject101')._parserName101]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_vpn parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_vpn",
        "query": "let VpnInferencesLookup = datatable(\n    Code: string,\n    Name: string,\n    Description: string\n)[\n    \"ABP Authentication Bypass\",\"N/A\",\"A client wasn't adhering to expectations of SSH either through server exploit or by the client and server switching to a protocol other than SSH after encryption begins.\",\n    \"BF Brute Force Guessing\",\"N/A\",\"A client made a number of authentication attempts that exceeded some configured per-connection threshold.\",\n    \"BFS Brute Force Success\",\"N/A\",\"A client made a number of authentication attempts that exceeded some configured per-connection threshold.\",\n    \"SFD\",\"Small Client File Download\",\"A file transfer occurred in which the server sent a sequence of bytes to the client.\",\n    \"LFD\",\"Large Client File Download\",\"A file transfer occurred in which the server sent a sequence of bytes to the client. Large files are identified dynamically based on trains of MTU-sized packets.\",\n    \"SFU\",\"Small Client File Upload\",\"A file transfer occurred in which the client sent a sequence of bytes to the server.\",\n    \"LFU\",\"Large Client File Upload\",\"A file transfer occurred in which the client sent a sequence of bytes to the server. Large files are identified dynamically based on trains of MTU-sized packets.\",\n    \"KS\",\"Keystrokes\",\"An interactive session occurred in which the client set user-driven keystrokes to the server.\",\n    \"SC\",\"Capabilities Scan- ning\",\"A client exchanged capabilities with the server and then disconnected.\",\n    \"SP\",\"Other Scanning\",\"A client and server didn't exchange encrypted packets but the client wasn't a version or capabilities scanner.\",\n    \"SV\",\"Version Scanning\",\"A client exchanged version strings with the server and then disconnected.\",\n    \"SA Scanning\",\"N/A\",\"The client scanned authentication methods with the server and then disconnected.\",\n    \"APWA\",\"Automated Password Authentication\",\"The client authenticated with an automated password tool (like sshpass).\",\n    \"IPWA\",\"Interactive Password Authentication\",\"The client interactively typed their password to authenticate.\",\n    \"PKA\",\"Public Key Authentication\",\"The client automatically authenticated using pubkey authentication.\",\n    \"NA\",\"None Authentication\",\"The client successfully authenticated using the None method.\",\n    \"MFA\",\"Multifactor authentication\",\"The server required a second form of authentication (a code) after a password or public key was accepted and the client successfully provided it.\",\n    \"UA\",\"Unknown authentication\",\"The authentication method is not determined or is unknown.\",\n    \"AUTO\",\"Automated interaction\",\"The client is a script or automated utility and not driven by a user.\",\n    \"BAN\",\"Server Banner\",\"The server sent the client a pre-authentication banner likely for legal reasons.\",\n    \"CTS trusted server\",\"N/A\",\"The client already has an entry in its known_hosts file for this server.\",\n    \"CUS untrusted server\",\"N/A\",\"The client did not have an entry in its known_hosts file for this server.\",\n    \"RSP\",\"Reverse SSH Provisioned\",\"The client connected with a -R flag which provisions the ports to be used for a Reverse Session set up at any future time.\",\n    \"RSI\",\"Reverse SSH Initiated\",\"The Reverse session is initiated from the server back to the Client.\",\n    \"RSIA\",\"Reverse SSH Initiation Automated\",\"The initiation of the Reverse session happened very early in the packet stream indicating automation.\",\n    \"RSL\",\"Reverse SSH Logged I'n\",\"The Reverse tunnel login has succeeded.\",\n    \"RSK\",\"Reverse SSH Keystrokes\",\"Keystrokes are detected within the Reverse tunnel.\",\n    \"NRC\",\"No Remote Com- mand\",\"The -N flag was used in the SSH session.\",\n    \"AFR\",\"SSH Agent For- warding Requested\",\"Agent forwarding is requested by the Client.\",\n    \"FC\",\"FreeRDP Driven Client\",\"Indicates a CLI tool client (likely FreeRDP-based). This inference doesn't require that the client successfully authenticated to the server.\",\n    \"MSC\",\"Metasploit Scanner Client\",\"Indicates a Metasploit client.\",\n    \"HBC\",\"THC-Hydra Bruteforce Client\",\"Indicates a Hydra client.\",\n    \"CBC\",\"Crowbar Bruteforce Client\",\"Indicates a Crowbar client.\",\n    \"SLC\",\"SharpRDP Lateral Movement Client\",\"Indicates a SharpRDP client.\",\n    \"SOC\",\"Scanner Other Client\",\"Indicates that the client is likely a scanner or exploit tool that the package can't specifically identify (for example, rdpscan or impacket).\"\n    \"RCGA\",\"Remote Credential Guard Authentication\",\"Indicates that the client authenticated using Restricted Admin Mode.\",\n    \"RAMA\",\"Restricted Admin Mode Authentication\",\"Indicates a Metasploit client.\",\n    \"APWA\",\"Automated NTLM Password Authentication\",\"Indicates that the client authenticated using an NTLM password that was provided before the connection was initiated.\",\n    \"IPWA\",\"Interactive NTLM Password Authentication\",\"Indicates that the client authenticated using an NTLM password that was provided after the connection was initiated, suggesting a human-driven connection.\"\n    \"SLH\",\"Slow Handshake\",\"Indicates that the handshake (RDPBCGR connection sequence) took an unusually long time to complete.\",\n    \"COM\",\"N/A\",\"Indicates the presence of a commercial VPN service (such as PrivateInternetAccess or NordVPN).\"\n    \"NSP\",\"N/A\",\"Non Standard Port. FW - Using a port to subvert a firewall (i.e. 53/udp).\",\n    \"RW\",\"N/A\",\"Road warrior configuration detected (i.e. Cisco Anyconnect).\",\n    \"SK\",\"N/A\",\"Static Key\",\n    \"TLS\",\"N/A\",\"TLS Auth\",\n    \"FW\",\"N/A\",\"Indicates that the VPN might be trying to subvert network security by using a port that is usually allowed.\"\n];\nlet dummy_table = datatable(TimeGenerated: datetime, uid_s: string) [];\nlet corelight_vpn = view () {\n    union isfuzzy=true Corelight_v2_vpn_CL, dummy_table\n    | summarize arg_max(TimeGenerated, *) by uid_s\n    | join kind=leftouter \n    ( corelight_conn\n    | project uid, local_orig, local_resp\n    ) on $left.uid_s == $right.uid\n    | project-away uid\n    | extend\n        path = column_ifexists(\"_path_s\", \"\"),\n        system_name = column_ifexists(\"_system_name_s\", \"\"),\n        write_ts = column_ifexists(\"_write_ts_t\", \"\"),\n        client_info = column_ifexists(\"client_info_s\", \"\"),\n        duration = column_ifexists(\"duration_d\", real(null)),\n        id_orig_h = column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p = column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h = column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p = column_ifexists(\"id_resp_p_d\", real(null)),\n        inferences = column_ifexists(\"inferences_s\", \"\"),\n        issuer = column_ifexists(\"issuer_s\", \"\"),\n        ja3 = column_ifexists(\"ja3_s\", \"\"),\n        ja3s = column_ifexists(\"ja3s_s\", \"\"),\n        orig_bytes = column_ifexists(\"orig_bytes_d\", real(null)),\n        orig_cc = column_ifexists(\"orig_cc_s\", \"\"),\n        orig_city = column_ifexists(\"orig_city_s\", \"\"),\n        orig_region = column_ifexists(\"orig_region_s\", \"\"),\n        proto = column_ifexists(\"proto_s\", \"\"),\n        resp_bytes = column_ifexists(\"resp_bytes_d\", real(null)),\n        resp_cc = column_ifexists(\"resp_cc_s\", \"\"),\n        resp_city = column_ifexists(\"resp_city_s\", \"\"),\n        resp_region = column_ifexists(\"resp_region_s\", \"\"),\n        server_name = column_ifexists(\"server_name_s\", \"\"),\n        service = column_ifexists(\"service_s\", \"\"),\n        subject = column_ifexists(\"subject_s\", \"\"),\n        uid = column_ifexists(\"uid_s\", \"\"),\n        vpn_type = column_ifexists(\"vpn_type_s\", \"\")\n    | mv-expand todynamic(inferences)\n    | extend code_string = tostring(inferences)\n    | lookup kind=leftouter VpnInferencesLookup on $left.code_string == $right.Code\n    | summarize Inferences = make_list(code_string), Names = make_list(Name), Descriptions = make_list(Description), arg_max(TimeGenerated, *) by uid\n    | extend\n        EventVendor = \"Corelight\",\n        EventProduct = \"CorelightSensor\",\n        EventType = \"vpn\",\n        ts = TimeGenerated,\n        src = id_orig_h,\n        src_ip = id_orig_h,\n        src_port = id_orig_p,\n        dest = id_resp_h,\n        dest_ip = id_resp_h,\n        dest_port = id_resp_p,\n        bytes_out = orig_bytes,\n        transport = proto,\n        bytes_in = resp_bytes,\n        signature = vpn_type,\n        sensor_name = coalesce(system_name, \"unknown\")\n    | extend\n        bytes = bytes_in + bytes_out,\n        services = split(service, ','),\n        is_broadcast =iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"), \"true\", \"false\"),\n        is_dest_internal_ip = iff(local_resp == true, \"true\", \"false\"),\n        is_src_internal_ip = iff(local_orig == true, \"true\", \"false\")\n    | project\n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        client_info,\n        duration,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        Inferences,\n        issuer,\n        ja3,\n        ja3s,\n        orig_bytes,\n        orig_cc,\n        orig_city,\n        orig_region,\n        proto,\n        resp_bytes,\n        resp_cc,\n        resp_city,\n        resp_region,\n        server_name,\n        service,\n        subject,\n        uid,\n        vpn_type,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ts,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        bytes_out,\n        transport,\n        bytes_in,\n        signature,\n        sensor_name,\n        bytes,\n        services,\n        is_broadcast,\n        is_dest_internal_ip,\n        is_src_internal_ip,\n        Names,\n        Descriptions\n};\ncorelight_vpn\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject101')._parserId101,'/'))))]",
      "dependsOn": [
        "[variables('parserObject101')._parserId101]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_vpn')]",
        "contentId": "[variables('parserObject101').parserContentId101]",
        "kind": "Parser",
        "version": "[variables('parserObject101').parserVersion101]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject102').parserTemplateSpecName102]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_weird Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject102').parserVersion102]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject102')._parserName102]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_weird parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_weird",
                "query": "let corelight_weird = view () {\n    Corelight_v2_weird_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        name=name_s,\n        addl=addl_s,\n        notice=notice_b,\n        source=source_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"weird\",\n        ts=TimeGenerated\n};\ncorelight_weird\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject102')._parserId102,'/'))))]",
              "dependsOn": [
                "[variables('parserObject102')._parserId102]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_weird')]",
                "contentId": "[variables('parserObject102').parserContentId102]",
                "kind": "Parser",
                "version": "[variables('parserObject102').parserVersion102]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject102').parserContentId102]",
        "contentKind": "Parser",
        "displayName": "corelight_weird parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject102').parserContentId102,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject102').parserContentId102,'-', '1.0.0')))]",
        "version": "[variables('parserObject102').parserVersion102]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject102')._parserName102]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_weird parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_weird",
        "query": "let corelight_weird = view () {\n    Corelight_v2_weird_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        name=name_s,\n        addl=addl_s,\n        notice=notice_b,\n        source=source_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"weird\",\n        ts=TimeGenerated\n};\ncorelight_weird\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject102')._parserId102,'/'))))]",
      "dependsOn": [
        "[variables('parserObject102')._parserId102]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_weird')]",
        "contentId": "[variables('parserObject102').parserContentId102]",
        "kind": "Parser",
        "version": "[variables('parserObject102').parserVersion102]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject103').parserTemplateSpecName103]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_weird_red Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject103').parserVersion103]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject103')._parserName103]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_weird_red parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_weird_red",
                "query": "let corelight_weird_red = view () {\n    Corelight_v2_weird_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        name=name_s,\n        addl=addl_s,\n        notice=notice_b,\n        peer=peer_s,\n        source=source_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"weird_red\",\n        ts=TimeGenerated\n};\ncorelight_weird_red\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject103')._parserId103,'/'))))]",
              "dependsOn": [
                "[variables('parserObject103')._parserId103]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_weird_red')]",
                "contentId": "[variables('parserObject103').parserContentId103]",
                "kind": "Parser",
                "version": "[variables('parserObject103').parserVersion103]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject103').parserContentId103]",
        "contentKind": "Parser",
        "displayName": "corelight_weird_red parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject103').parserContentId103,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject103').parserContentId103,'-', '1.0.0')))]",
        "version": "[variables('parserObject103').parserVersion103]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject103')._parserName103]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_weird_red parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_weird_red",
        "query": "let corelight_weird_red = view () {\n    Corelight_v2_weird_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        name=name_s,\n        addl=addl_s,\n        notice=notice_b,\n        peer=peer_s,\n        source=source_s\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"weird_red\",\n        ts=TimeGenerated\n};\ncorelight_weird_red\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject103')._parserId103,'/'))))]",
      "dependsOn": [
        "[variables('parserObject103')._parserId103]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_weird_red')]",
        "contentId": "[variables('parserObject103').parserContentId103]",
        "kind": "Parser",
        "version": "[variables('parserObject103').parserVersion103]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject104').parserTemplateSpecName104]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_weird_stats Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject104').parserVersion104]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject104')._parserName104]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_weird_stats parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_weird_stats",
                "query": "let corelight_weird_stats = view () {\n    Corelight_v2_weird_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        name=name_s,\n        num_seen=num_seen_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"weird_stats\",\n        ts=TimeGenerated\n};\ncorelight_weird_stats\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject104')._parserId104,'/'))))]",
              "dependsOn": [
                "[variables('parserObject104')._parserId104]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_weird_stats')]",
                "contentId": "[variables('parserObject104').parserContentId104]",
                "kind": "Parser",
                "version": "[variables('parserObject104').parserVersion104]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject104').parserContentId104]",
        "contentKind": "Parser",
        "displayName": "corelight_weird_stats parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject104').parserContentId104,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject104').parserContentId104,'-', '1.0.0')))]",
        "version": "[variables('parserObject104').parserVersion104]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject104')._parserName104]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_weird_stats parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_weird_stats",
        "query": "let corelight_weird_stats = view () {\n    Corelight_v2_weird_stats_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        name=name_s,\n        num_seen=num_seen_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"weird_stats\",\n        ts=TimeGenerated\n};\ncorelight_weird_stats\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject104')._parserId104,'/'))))]",
      "dependsOn": [
        "[variables('parserObject104')._parserId104]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_weird_stats')]",
        "contentId": "[variables('parserObject104').parserContentId104]",
        "kind": "Parser",
        "version": "[variables('parserObject104').parserVersion104]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject105').parserTemplateSpecName105]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_wireguard Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject105').parserVersion105]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject105')._parserName105]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_wireguard parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_wireguard",
                "query": "let corelight_wireguard = view () {\n    Corelight_v2_wireguard_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        established=established_b,\n        initiations=initiations_d,\n        responses=responses_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"wireguard\",\n        ts=TimeGenerated\n};\ncorelight_wireguard\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject105')._parserId105,'/'))))]",
              "dependsOn": [
                "[variables('parserObject105')._parserId105]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_wireguard')]",
                "contentId": "[variables('parserObject105').parserContentId105]",
                "kind": "Parser",
                "version": "[variables('parserObject105').parserVersion105]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject105').parserContentId105]",
        "contentKind": "Parser",
        "displayName": "corelight_wireguard parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject105').parserContentId105,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject105').parserContentId105,'-', '1.0.0')))]",
        "version": "[variables('parserObject105').parserVersion105]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject105')._parserName105]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_wireguard parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_wireguard",
        "query": "let corelight_wireguard = view () {\n    Corelight_v2_wireguard_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        uid=uid_s,\n        id_orig_h=id_orig_h_s,\n        id_orig_p=id_orig_p_d,\n        id_resp_h=id_resp_h_s,\n        id_resp_p=id_resp_p_d,\n        established=established_b,\n        initiations=initiations_d,\n        responses=responses_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"wireguard\",\n        ts=TimeGenerated\n};\ncorelight_wireguard\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject105')._parserId105,'/'))))]",
      "dependsOn": [
        "[variables('parserObject105')._parserId105]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_wireguard')]",
        "contentId": "[variables('parserObject105').parserContentId105]",
        "kind": "Parser",
        "version": "[variables('parserObject105').parserVersion105]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject106').parserTemplateSpecName106]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_x509 Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject106').parserVersion106]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject106')._parserName106]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_x509 parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_x509",
                "query": "let dummy_table = datatable(TimeGenerated: datetime) [];\nlet corelight_x509 = view () {\n    union isfuzzy=true Corelight_v2_x509_CL, Corelight_v2_x509_red_CL, dummy_table\n    | extend \n        path=column_ifexists(\"_path_s\", \"\"),\n        system_name=column_ifexists(\"_system_name_s\", \"\"),\n        write_ts=column_ifexists(\"_write_ts_t\", \"\"),\n        fingerprint=column_ifexists(\"fingerprint_s\", \"\"),\n        certificate_version=column_ifexists(\"certificate_version_d\", real(null)),\n        certificate_serial=column_ifexists(\"certificate_serial_s\", \"\"),\n        certificate_subject=column_ifexists(\"certificate_subject_s\", \"\"),\n        certificate_issuer=column_ifexists(\"certificate_issuer_s\", \"\"),\n        certificate_not_valid_before=column_ifexists(\"certificate_not_valid_before_t\", \"\"),\n        certificate_not_valid_after=column_ifexists(\"certificate_not_valid_after_t\", \"\"),\n        certificate_key_alg=column_ifexists(\"certificate_key_alg_s\", \"\"),\n        certificate_sig_alg=column_ifexists(\"certificate_sig_alg_s\", \"\"),\n        certificate_key_type=column_ifexists(\"certificate_key_type_s\", \"\"),\n        certificate_key_length=column_ifexists(\"certificate_key_length_d\", real(null)),\n        certificate_exponent=column_ifexists(\"certificate_exponent_s\", \"\"),\n        certificate_curve=column_ifexists(\"certificate_curve_s\", \"\"),\n        san_dns=column_ifexists(\"san_dns_s\", \"\"),\n        san_uri=column_ifexists(\"san_uri_s\", \"\"),\n        san_email=column_ifexists(\"san_email_s\", \"\"),\n        san_ip=column_ifexists(\"san_ip_s\", \"\"),\n        basic_constraints_ca=column_ifexists(\"basic_constraints_ca_b\", \"\"),\n        basic_constraints_path_len=column_ifexists(\"basic_constraints_path_len_d\", real(null)),\n        host_cert=column_ifexists(\"host_cert_b\", \"\"),\n        client_cert=column_ifexists(\"client_cert_b\", \"\"),\n        vlan=column_ifexists(\"vlan_d\", real(null)),\n        id_orig_h=column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p=column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h=column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p=column_ifexists(\"id_resp_p_d\", real(null))\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"x509\",\n        ssl_issuer=certificate_issuer,\n        ssl_publickey_algorithm=certificate_key_alg,\n        not_valid_after=certificate_not_valid_after,\n        ssl_end_time=certificate_not_valid_after,\n        ssl_start_time=certificate_not_valid_before,\n        ssl_serial=certificate_serial,\n        ssl_signature_algorithm=certificate_sig_alg,\n        ssl_subject=certificate_subject,\n        ssl_version=certificate_version,\n        ssl_hash = fingerprint,\n        ts=TimeGenerated,\n        sensor_name=coalesce(system_name, \"unknown\"),\n        src=id_orig_h,\n        src_ip=id_orig_h,\n        src_port=id_orig_p,\n        dest=id_resp_h,\n        dest_ip=id_resp_h,\n        dest_port=id_resp_p\n    | extend \n        days_to_expiry = datetime_diff('day', todatetime(not_valid_after), now()),\n        ssl_validity_window=datetime_diff('day', todatetime(ssl_end_time), todatetime(ssl_start_time)),\n        ssl_is_valid = iff(ts > todatetime(ssl_start_time) and ts < todatetime(ssl_end_time), \"true\", \"false\"),\n        ssl_issuer_email_domain = extract('emailAddress=[0-9A-Za-z_]+@(?<ssl_issuer_email_domain>[0-9A-Za-z_]+.[0-9A-Za-z_]+)', 1, ssl_issuer),\n        ssl_subject_email_domain = extract('emailAddress=[0-9A-Za-z_]+@(?<ssl_subject_email_domain>[0-9A-Za-z_]+.[0-9A-Za-z_]+)', 1, ssl_subject),\n        ssl_subject_common_name = extract('CN=(?<ssl_subject_common_name>[^,\"]+)', 1, ssl_subject),\n        ssl_issuer_common_name=extract('CN=(?<ssl_issuer_common_name>[^,\"]+)', 1, ssl_issuer),\n        ssl_issuer_organization = extract('O=(?<ssl_issuer_organization>[^,]+)', 1, ssl_issuer),\n        ssl_issuer_unit = extract('OU=(?<ssl_issuer_unit>[^,]+)', 1, ssl_issuer),\n        ssl_issuer_locality = extract('L=(?<ssl_issuer_locality>[^,]+)', 1, ssl_issuer),\n        ssl_issuer_state = extract('ST=(?<ssl_issuer_state>[^,]+)', 1, ssl_issuer),\n        ssl_issuer_country = extract('C=(?<ssl_issuer_country>[^,]+)', 1, ssl_issuer),\n        ssl_subject_organization = extract('O=(?<ssl_subject_organization>[^,]+)', 1, ssl_subject),\n        ssl_subject_unit = extract('OU=(?<ssl_subject_unit>[^,]+)', 1, ssl_subject),\n        ssl_subject_locality = extract('L=(?<ssl_subject_locality>[^,]+)', 1, ssl_subject),\n        ssl_subject_state = extract('ST=(?<ssl_subject_state>[^,]+)', 1, ssl_subject),\n        ssl_subject_country = extract('C=(?<ssl_subject_country>[^,]+)', 1, ssl_subject),\n        ssl_issuer_email = extract('emailAddress=(?<ssl_issuer_email>[^,]+)', 1, ssl_issuer),\n        ssl_subject_email = extract('emailAddress=(?<ssl_subject_email>[^,]+)', 1, ssl_subject),\n        ssl_issuer_domain = extract('DC=(?<ssl_issuer_domain>[^,]+)', 1, ssl_issuer),\n        ssl_name = extract('title=(?<ssl_name>[^,]+)', 1, ssl_issuer),\n        ssl_subject_domain = extract('DC=(?<ssl_subject_domain>[^,]+)', 1, ssl_subject),\n        ssl_subject_name = extract('title=(?<ssl_name>[^,]+)', 1, ssl_subject),\n        is_broadcast = iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"), \"true\", \"false\"),\n        is_src_internal_ip = iff(ipv4_is_in_any_range(src, \"10.0.0.0/8\", \"172.16.0.0/12\", \"192.168.0.0/16\"), \"true\", \"false\"),\n        is_dest_internal_ip = iff(ipv4_is_in_any_range(dest, \"10.0.0.0/8\", \"172.16.0.0/12\", \"192.168.0.0/16\"), \"true\", \"false\")\n    | project \n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        fingerprint,\n        certificate_version,\n        certificate_serial,\n        certificate_subject,\n        certificate_issuer,\n        certificate_not_valid_before,\n        certificate_not_valid_after,\n        certificate_key_alg,\n        certificate_sig_alg,\n        certificate_key_type,\n        certificate_key_length,\n        certificate_exponent,\n        certificate_curve,\n        san_dns,\n        san_uri,\n        san_email,\n        san_ip,\n        basic_constraints_ca,\n        basic_constraints_path_len,\n        host_cert,\n        client_cert,\n        vlan,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ssl_issuer,\n        ssl_publickey_algorithm,\n        not_valid_after,\n        ssl_end_time,\n        ssl_start_time,\n        ssl_serial,\n        ssl_signature_algorithm,\n        ssl_subject,\n        ssl_version,\n        ssl_hash,\n        ts,\n        sensor_name,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        days_to_expiry,\n        ssl_validity_window,\n        ssl_is_valid,\n        ssl_issuer_email_domain,\n        ssl_subject_email_domain,\n        ssl_subject_common_name,\n        ssl_issuer_common_name,\n        ssl_issuer_organization,\n        ssl_issuer_unit,\n        ssl_issuer_locality,\n        ssl_issuer_state,\n        ssl_issuer_country,\n        ssl_subject_organization,\n        ssl_subject_unit,\n        ssl_subject_locality,\n        ssl_subject_state,\n        ssl_subject_country,\n        ssl_issuer_email,\n        ssl_subject_email,\n        ssl_issuer_domain,\n        ssl_name,\n        ssl_subject_domain,\n        ssl_subject_name,\n        is_broadcast,\n        is_src_internal_ip,\n        is_dest_internal_ip\n};\ncorelight_x509\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject106')._parserId106,'/'))))]",
              "dependsOn": [
                "[variables('parserObject106')._parserId106]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_x509')]",
                "contentId": "[variables('parserObject106').parserContentId106]",
                "kind": "Parser",
                "version": "[variables('parserObject106').parserVersion106]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject106').parserContentId106]",
        "contentKind": "Parser",
        "displayName": "corelight_x509 parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject106').parserContentId106,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject106').parserContentId106,'-', '1.1.0')))]",
        "version": "[variables('parserObject106').parserVersion106]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject106')._parserName106]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_x509 parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_x509",
        "query": "let dummy_table = datatable(TimeGenerated: datetime) [];\nlet corelight_x509 = view () {\n    union isfuzzy=true Corelight_v2_x509_CL, Corelight_v2_x509_red_CL, dummy_table\n    | extend \n        path=column_ifexists(\"_path_s\", \"\"),\n        system_name=column_ifexists(\"_system_name_s\", \"\"),\n        write_ts=column_ifexists(\"_write_ts_t\", \"\"),\n        fingerprint=column_ifexists(\"fingerprint_s\", \"\"),\n        certificate_version=column_ifexists(\"certificate_version_d\", real(null)),\n        certificate_serial=column_ifexists(\"certificate_serial_s\", \"\"),\n        certificate_subject=column_ifexists(\"certificate_subject_s\", \"\"),\n        certificate_issuer=column_ifexists(\"certificate_issuer_s\", \"\"),\n        certificate_not_valid_before=column_ifexists(\"certificate_not_valid_before_t\", \"\"),\n        certificate_not_valid_after=column_ifexists(\"certificate_not_valid_after_t\", \"\"),\n        certificate_key_alg=column_ifexists(\"certificate_key_alg_s\", \"\"),\n        certificate_sig_alg=column_ifexists(\"certificate_sig_alg_s\", \"\"),\n        certificate_key_type=column_ifexists(\"certificate_key_type_s\", \"\"),\n        certificate_key_length=column_ifexists(\"certificate_key_length_d\", real(null)),\n        certificate_exponent=column_ifexists(\"certificate_exponent_s\", \"\"),\n        certificate_curve=column_ifexists(\"certificate_curve_s\", \"\"),\n        san_dns=column_ifexists(\"san_dns_s\", \"\"),\n        san_uri=column_ifexists(\"san_uri_s\", \"\"),\n        san_email=column_ifexists(\"san_email_s\", \"\"),\n        san_ip=column_ifexists(\"san_ip_s\", \"\"),\n        basic_constraints_ca=column_ifexists(\"basic_constraints_ca_b\", \"\"),\n        basic_constraints_path_len=column_ifexists(\"basic_constraints_path_len_d\", real(null)),\n        host_cert=column_ifexists(\"host_cert_b\", \"\"),\n        client_cert=column_ifexists(\"client_cert_b\", \"\"),\n        vlan=column_ifexists(\"vlan_d\", real(null)),\n        id_orig_h=column_ifexists(\"id_orig_h_s\", \"\"),\n        id_orig_p=column_ifexists(\"id_orig_p_d\", real(null)),\n        id_resp_h=column_ifexists(\"id_resp_h_s\", \"\"),\n        id_resp_p=column_ifexists(\"id_resp_p_d\", real(null))\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"x509\",\n        ssl_issuer=certificate_issuer,\n        ssl_publickey_algorithm=certificate_key_alg,\n        not_valid_after=certificate_not_valid_after,\n        ssl_end_time=certificate_not_valid_after,\n        ssl_start_time=certificate_not_valid_before,\n        ssl_serial=certificate_serial,\n        ssl_signature_algorithm=certificate_sig_alg,\n        ssl_subject=certificate_subject,\n        ssl_version=certificate_version,\n        ssl_hash = fingerprint,\n        ts=TimeGenerated,\n        sensor_name=coalesce(system_name, \"unknown\"),\n        src=id_orig_h,\n        src_ip=id_orig_h,\n        src_port=id_orig_p,\n        dest=id_resp_h,\n        dest_ip=id_resp_h,\n        dest_port=id_resp_p\n    | extend \n        days_to_expiry = datetime_diff('day', todatetime(not_valid_after), now()),\n        ssl_validity_window=datetime_diff('day', todatetime(ssl_end_time), todatetime(ssl_start_time)),\n        ssl_is_valid = iff(ts > todatetime(ssl_start_time) and ts < todatetime(ssl_end_time), \"true\", \"false\"),\n        ssl_issuer_email_domain = extract('emailAddress=[0-9A-Za-z_]+@(?<ssl_issuer_email_domain>[0-9A-Za-z_]+.[0-9A-Za-z_]+)', 1, ssl_issuer),\n        ssl_subject_email_domain = extract('emailAddress=[0-9A-Za-z_]+@(?<ssl_subject_email_domain>[0-9A-Za-z_]+.[0-9A-Za-z_]+)', 1, ssl_subject),\n        ssl_subject_common_name = extract('CN=(?<ssl_subject_common_name>[^,\"]+)', 1, ssl_subject),\n        ssl_issuer_common_name=extract('CN=(?<ssl_issuer_common_name>[^,\"]+)', 1, ssl_issuer),\n        ssl_issuer_organization = extract('O=(?<ssl_issuer_organization>[^,]+)', 1, ssl_issuer),\n        ssl_issuer_unit = extract('OU=(?<ssl_issuer_unit>[^,]+)', 1, ssl_issuer),\n        ssl_issuer_locality = extract('L=(?<ssl_issuer_locality>[^,]+)', 1, ssl_issuer),\n        ssl_issuer_state = extract('ST=(?<ssl_issuer_state>[^,]+)', 1, ssl_issuer),\n        ssl_issuer_country = extract('C=(?<ssl_issuer_country>[^,]+)', 1, ssl_issuer),\n        ssl_subject_organization = extract('O=(?<ssl_subject_organization>[^,]+)', 1, ssl_subject),\n        ssl_subject_unit = extract('OU=(?<ssl_subject_unit>[^,]+)', 1, ssl_subject),\n        ssl_subject_locality = extract('L=(?<ssl_subject_locality>[^,]+)', 1, ssl_subject),\n        ssl_subject_state = extract('ST=(?<ssl_subject_state>[^,]+)', 1, ssl_subject),\n        ssl_subject_country = extract('C=(?<ssl_subject_country>[^,]+)', 1, ssl_subject),\n        ssl_issuer_email = extract('emailAddress=(?<ssl_issuer_email>[^,]+)', 1, ssl_issuer),\n        ssl_subject_email = extract('emailAddress=(?<ssl_subject_email>[^,]+)', 1, ssl_subject),\n        ssl_issuer_domain = extract('DC=(?<ssl_issuer_domain>[^,]+)', 1, ssl_issuer),\n        ssl_name = extract('title=(?<ssl_name>[^,]+)', 1, ssl_issuer),\n        ssl_subject_domain = extract('DC=(?<ssl_subject_domain>[^,]+)', 1, ssl_subject),\n        ssl_subject_name = extract('title=(?<ssl_name>[^,]+)', 1, ssl_subject),\n        is_broadcast = iff(src in(\"0.0.0.0\", \"255.255.255.255\") or dest in(\"255.255.255.255\", \"0.0.0.0\"), \"true\", \"false\"),\n        is_src_internal_ip = iff(ipv4_is_in_any_range(src, \"10.0.0.0/8\", \"172.16.0.0/12\", \"192.168.0.0/16\"), \"true\", \"false\"),\n        is_dest_internal_ip = iff(ipv4_is_in_any_range(dest, \"10.0.0.0/8\", \"172.16.0.0/12\", \"192.168.0.0/16\"), \"true\", \"false\")\n    | project \n        TimeGenerated,\n        path,\n        system_name,\n        write_ts,\n        fingerprint,\n        certificate_version,\n        certificate_serial,\n        certificate_subject,\n        certificate_issuer,\n        certificate_not_valid_before,\n        certificate_not_valid_after,\n        certificate_key_alg,\n        certificate_sig_alg,\n        certificate_key_type,\n        certificate_key_length,\n        certificate_exponent,\n        certificate_curve,\n        san_dns,\n        san_uri,\n        san_email,\n        san_ip,\n        basic_constraints_ca,\n        basic_constraints_path_len,\n        host_cert,\n        client_cert,\n        vlan,\n        id_orig_h,\n        id_orig_p,\n        id_resp_h,\n        id_resp_p,\n        EventVendor,\n        EventProduct,\n        EventType,\n        ssl_issuer,\n        ssl_publickey_algorithm,\n        not_valid_after,\n        ssl_end_time,\n        ssl_start_time,\n        ssl_serial,\n        ssl_signature_algorithm,\n        ssl_subject,\n        ssl_version,\n        ssl_hash,\n        ts,\n        sensor_name,\n        src,\n        src_ip,\n        src_port,\n        dest,\n        dest_ip,\n        dest_port,\n        days_to_expiry,\n        ssl_validity_window,\n        ssl_is_valid,\n        ssl_issuer_email_domain,\n        ssl_subject_email_domain,\n        ssl_subject_common_name,\n        ssl_issuer_common_name,\n        ssl_issuer_organization,\n        ssl_issuer_unit,\n        ssl_issuer_locality,\n        ssl_issuer_state,\n        ssl_issuer_country,\n        ssl_subject_organization,\n        ssl_subject_unit,\n        ssl_subject_locality,\n        ssl_subject_state,\n        ssl_subject_country,\n        ssl_issuer_email,\n        ssl_subject_email,\n        ssl_issuer_domain,\n        ssl_name,\n        ssl_subject_domain,\n        ssl_subject_name,\n        is_broadcast,\n        is_src_internal_ip,\n        is_dest_internal_ip\n};\ncorelight_x509\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject106')._parserId106,'/'))))]",
      "dependsOn": [
        "[variables('parserObject106')._parserId106]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_x509')]",
        "contentId": "[variables('parserObject106').parserContentId106]",
        "kind": "Parser",
        "version": "[variables('parserObject106').parserVersion106]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject107').parserTemplateSpecName107]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_x509_red Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject107').parserVersion107]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject107')._parserName107]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_x509_red parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_x509_red",
                "query": "let corelight_x509_red = view () {\n    Corelight_v2_x509_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        fingerprint=fingerprint_s,\n        certificate_version=certificate_version_d,\n        certificate_serial=certificate_serial_s,\n        certificate_subject=certificate_subject_s,\n        certificate_issuer=certificate_issuer_s,\n        certificate_not_valid_before=certificate_not_valid_before_t,\n        certificate_not_valid_after=certificate_not_valid_after_t,\n        certificate_key_alg=certificate_key_alg_s,\n        certificate_sig_alg=certificate_sig_alg_s,\n        certificate_key_type=certificate_key_type_s,\n        certificate_key_length=certificate_key_length_d,\n        certificate_exponent=certificate_exponent_s,\n        certificate_curve=certificate_curve_s,\n        san_dns=san_dns_s,\n        san_uri=san_uri_s,\n        san_email=san_email_s,\n        san_ip=san_ip_s,\n        basic_constraints_ca=basic_constraints_ca_b,\n        basic_constraints_path_len=basic_constraints_path_len_d,\n        host_cert=host_cert_b,\n        client_cert=client_cert_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"x509_red\",\n        ts=TimeGenerated\n};\ncorelight_x509_red\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject107')._parserId107,'/'))))]",
              "dependsOn": [
                "[variables('parserObject107')._parserId107]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_x509_red')]",
                "contentId": "[variables('parserObject107').parserContentId107]",
                "kind": "Parser",
                "version": "[variables('parserObject107').parserVersion107]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject107').parserContentId107]",
        "contentKind": "Parser",
        "displayName": "corelight_x509_red parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject107').parserContentId107,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject107').parserContentId107,'-', '1.0.0')))]",
        "version": "[variables('parserObject107').parserVersion107]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject107')._parserName107]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_x509_red parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_x509_red",
        "query": "let corelight_x509_red = view () {\n    Corelight_v2_x509_red_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        fingerprint=fingerprint_s,\n        certificate_version=certificate_version_d,\n        certificate_serial=certificate_serial_s,\n        certificate_subject=certificate_subject_s,\n        certificate_issuer=certificate_issuer_s,\n        certificate_not_valid_before=certificate_not_valid_before_t,\n        certificate_not_valid_after=certificate_not_valid_after_t,\n        certificate_key_alg=certificate_key_alg_s,\n        certificate_sig_alg=certificate_sig_alg_s,\n        certificate_key_type=certificate_key_type_s,\n        certificate_key_length=certificate_key_length_d,\n        certificate_exponent=certificate_exponent_s,\n        certificate_curve=certificate_curve_s,\n        san_dns=san_dns_s,\n        san_uri=san_uri_s,\n        san_email=san_email_s,\n        san_ip=san_ip_s,\n        basic_constraints_ca=basic_constraints_ca_b,\n        basic_constraints_path_len=basic_constraints_path_len_d,\n        host_cert=host_cert_b,\n        client_cert=client_cert_b\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"x509_red\",\n        ts=TimeGenerated\n};\ncorelight_x509_red\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject107')._parserId107,'/'))))]",
      "dependsOn": [
        "[variables('parserObject107')._parserId107]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_x509_red')]",
        "contentId": "[variables('parserObject107').parserContentId107]",
        "kind": "Parser",
        "version": "[variables('parserObject107').parserVersion107]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject108').parserTemplateSpecName108]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "corelight_zeek_doctor Data Parser with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject108').parserVersion108]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject108')._parserName108]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "corelight_zeek_doctor parser for Corelight",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "corelight_zeek_doctor",
                "query": "let corelight_zeek_doctor = view () {\n    Corelight_v2_zeek_doctor_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        node=node_s,\n        check=check_s,\n        total=total_d,\n        hits=hits_d,\n        total_delta=total_delta_d,\n        hits_delta=hits_delta_d,\n        percent=percent_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"zeek_doctor\",\n        ts=TimeGenerated\n};\ncorelight_zeek_doctor\n\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject108')._parserId108,'/'))))]",
              "dependsOn": [
                "[variables('parserObject108')._parserId108]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_zeek_doctor')]",
                "contentId": "[variables('parserObject108').parserContentId108]",
                "kind": "Parser",
                "version": "[variables('parserObject108').parserVersion108]",
                "source": {
                  "name": "Corelight",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject108').parserContentId108]",
        "contentKind": "Parser",
        "displayName": "corelight_zeek_doctor parser for Corelight",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject108').parserContentId108,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject108').parserContentId108,'-', '1.0.0')))]",
        "version": "[variables('parserObject108').parserVersion108]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject108')._parserName108]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "corelight_zeek_doctor parser for Corelight",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "corelight_zeek_doctor",
        "query": "let corelight_zeek_doctor = view () {\n    Corelight_v2_zeek_doctor_CL\n    | project-rename\n        _path=_path_s,\n        _system_name=_system_name_s,\n        _write_ts=_write_ts_t,\n        node=node_s,\n        check=check_s,\n        total=total_d,\n        hits=hits_d,\n        total_delta=total_delta_d,\n        hits_delta=hits_delta_d,\n        percent=percent_d\n    | extend\n        EventVendor=\"Corelight\",\n        EventProduct=\"CorelightSensor\",\n        EventType=\"zeek_doctor\",\n        ts=TimeGenerated\n};\ncorelight_zeek_doctor\n\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject108')._parserId108,'/'))))]",
      "dependsOn": [
        "[variables('parserObject108')._parserId108]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'corelight_zeek_doctor')]",
        "contentId": "[variables('parserObject108').parserContentId108]",
        "kind": "Parser",
        "version": "[variables('parserObject108').parserVersion108]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject1').huntingQueryTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightAbnormalEmailSubject_HuntingQueries Hunting Query with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject1').huntingQueryVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Corelight_Hunting_Query_1",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight - Abnormal Email Subject",
                "category": "Hunting Queries",
                "query": "corelight_smtp\n| where subject hasprefix @'\\=?utf-16'\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for emails with NON-Ascii characters within the Subject ."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1566"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1),'/'))))]",
              "properties": {
                "description": "Corelight Hunting Query 1",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1)]",
                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
        "contentKind": "HuntingQuery",
        "displayName": "Corelight - Abnormal Email Subject",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject2').huntingQueryTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightCompressedFilesTransferredOverHTTP_HuntingQueries Hunting Query with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject2').huntingQueryVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Corelight_Hunting_Query_2",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight - Compressed Files Transferred over HTTP",
                "category": "Hunting Queries",
                "query": "corelight_http\n| where TimeGenerated > ago(24h)\n| where method in~ ('POST', 'PUT')\n| where orig_mime_types has_any ('application/vnd.ms-cab-compressed', 'application/warc', 'application/x-7z-compressed', 'application/x-ace', 'application/x-arc', 'application/x-archive', 'application/x-arj', 'application/x-compress', 'application/x-cpio', 'application/x-dmg', 'application/x-eet', 'application/x-gzip', 'application/x-lha', 'application/x-lrzip', 'application/x-lz4', 'application/x-lzma', 'application/x-lzh', 'application/x-lzip', 'application/x-rar', 'application/x-rpm', 'application/x-stuffit', 'application/x-tar', 'application/x-xz', 'application/x-zoo', 'application/zip')\n| summarize count() by id_orig_h\n| top 10 by count_\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for top sources which transferred compressed archives over HTTP."
                  },
                  {
                    "name": "tactics",
                    "value": "Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1560"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2),'/'))))]",
              "properties": {
                "description": "Corelight Hunting Query 2",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2)]",
                "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject2').huntingQueryVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
        "contentKind": "HuntingQuery",
        "displayName": "Corelight - Compressed Files Transferred over HTTP",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject3').huntingQueryTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightDataTransferedByIp_HuntingQueries Hunting Query with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject3').huntingQueryVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Corelight_Hunting_Query_3",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight - Top sources of data transferred",
                "category": "Hunting Queries",
                "query": "corelight_http\n| where TimeGenerated > ago(24h)\n| where method in~ ('POST', 'PUT')\n| summarize data_sent = sum(tolong(request_body_len)) by id_orig_h\n| top 10 by data_sent\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for top sources by transferred data over period of time."
                  },
                  {
                    "name": "tactics",
                    "value": "Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1560"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3),'/'))))]",
              "properties": {
                "description": "Corelight Hunting Query 3",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3)]",
                "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject3').huntingQueryVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
        "contentKind": "HuntingQuery",
        "displayName": "Corelight - Top sources of data transferred",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject4').huntingQueryTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightExternalServices_HuntingQueries Hunting Query with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject4').huntingQueryVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Corelight_Hunting_Query_4",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight - External Facing Services",
                "category": "Hunting Queries",
                "query": "corelight_conn\n| where TimeGenerated > ago(24h)\n| where ipv4_is_private(id_orig_h) == false\n| where isnotempty(id_resp_p)\n| where history startswith 'Sh'\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for external facing services."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1190,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject4')._huntingQuerycontentId4),'/'))))]",
              "properties": {
                "description": "Corelight Hunting Query 4",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject4')._huntingQuerycontentId4)]",
                "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject4').huntingQueryVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
        "contentKind": "HuntingQuery",
        "displayName": "Corelight - External Facing Services",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject4')._huntingQuerycontentId4,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject4')._huntingQuerycontentId4,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject5').huntingQueryTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightFilesSeen_HuntingQueries Hunting Query with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject5').huntingQueryVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Corelight_Hunting_Query_5",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight - Files in logs",
                "category": "Hunting Queries",
                "query": "corelight_files\n| mv-expand todynamic(conn_uids)\n| extend uid=tostring(conn_uids)\n| join kind=leftouter corelight_conn on uid\n| summarize makeset(filename) by id_orig_h\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for files which where seen in logs over period of time."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess,Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1566,T1560"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject5')._huntingQuerycontentId5),'/'))))]",
              "properties": {
                "description": "Corelight Hunting Query 5",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject5')._huntingQuerycontentId5)]",
                "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject5').huntingQueryVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
        "contentKind": "HuntingQuery",
        "displayName": "Corelight - Files in logs",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject5')._huntingQuerycontentId5,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject5')._huntingQuerycontentId5,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject6').huntingQueryTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightFilesTransferedByIp_HuntingQueries Hunting Query with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject6').huntingQueryVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Corelight_Hunting_Query_6",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight - File uploads by source",
                "category": "Hunting Queries",
                "query": "corelight_http\n| where TimeGenerated > ago(24h)\n| where method in~ ('POST', 'PUT')\n| where orig_filenames != '[\"\"]'\n| mv-expand(todynamic(orig_filenames))\n| summarize f_list = makeset(tostring(orig_filenames)) by id_orig_h\n| extend f_cnt = array_length(f_list)\n| order by f_cnt\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for files uploaded over period of time by each source."
                  },
                  {
                    "name": "tactics",
                    "value": "Exfiltration"
                  },
                  {
                    "name": "techniques",
                    "value": "T1560"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject6')._huntingQuerycontentId6),'/'))))]",
              "properties": {
                "description": "Corelight Hunting Query 6",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject6')._huntingQuerycontentId6)]",
                "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject6').huntingQueryVersion6]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
        "contentKind": "HuntingQuery",
        "displayName": "Corelight - File uploads by source",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject6')._huntingQuerycontentId6,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject6')._huntingQuerycontentId6,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject7').huntingQueryTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightMultipleRemoteSMBConnectionsFromSingleIP_HuntingQueries Hunting Query with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject7').huntingQueryVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Corelight_Hunting_Query_7",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight - Multiple Remote SMB Connections from single client",
                "category": "Hunting Queries",
                "query": "let threshold = 50;\ncorelight_smb_mapping\n| where TimeGenerated > ago(24h)\n| where isnotempty(path)\n| summarize sh_cnt = dcount(path) by id_orig_h, bin(TimeGenerated, 1m)\n| where sh_cnt > threshold\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Detects when a single source is connecting to many different SMB or file shares."
                  },
                  {
                    "name": "tactics",
                    "value": "Discovery"
                  },
                  {
                    "name": "techniques",
                    "value": "T1135"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject7')._huntingQuerycontentId7),'/'))))]",
              "properties": {
                "description": "Corelight Hunting Query 7",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject7')._huntingQuerycontentId7)]",
                "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject7').huntingQueryVersion7]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
        "contentKind": "HuntingQuery",
        "displayName": "Corelight - Multiple Remote SMB Connections from single client",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject7')._huntingQuerycontentId7,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject7')._huntingQuerycontentId7,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject8').huntingQueryTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightObfuscatedBinary_HuntingQueries Hunting Query with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject8').huntingQueryVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Corelight_Hunting_Query_8",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight - Obfuscated binary filenames",
                "category": "Hunting Queries",
                "query": "corelight_http\n| where TimeGenerated > ago(24h)\n| where resp_mime_types has_any ('application/java-archive', 'application/mshelp', 'application/chrome-ext', 'application/x-object', 'application/x-executable', 'application/x-dosexec', 'application/x-msdownload', 'application/vnd.microsoft.portable-executable ')\n| where uri !hassuffix '.exe' or uri !hassuffix '.dll' or uri !hassuffix '.msi'\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for downloaded obfuscated binary file names."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1189,T1133"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject8')._huntingQuerycontentId8),'/'))))]",
              "properties": {
                "description": "Corelight Hunting Query 8",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject8')._huntingQuerycontentId8)]",
                "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject8').huntingQueryVersion8]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
        "contentKind": "HuntingQuery",
        "displayName": "Corelight - Obfuscated binary filenames",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject8')._huntingQuerycontentId8,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject8')._huntingQuerycontentId8,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject9').huntingQueryTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightRarePOST_HuntingQueries Hunting Query with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject9').huntingQueryVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Corelight_Hunting_Query_9",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight - Rare PUT or POST",
                "category": "Hunting Queries",
                "query": "corelight_http\n| where TimeGenerated > ago(24h)\n| where method in~ ('POST', 'PUT')\n| where toint(status_code) >= 400 and toint(status_code) < 500\n| where request_body_len != 0 or response_body_len != 0\n| extend fe = extract(@'.*(\\.\\w+)$', 1, uri)\n| where fe in~ ('.aspx', '.asp', '.php', '.jsp', '.jspx', '.war', '.ashx', '.asmx', '.ascx', '.asx', '.cshtml', '.cfm', '.cfc', '.cfml', '.wss', '.do', '.action', '.pl', '.plx', '.pm', '.xs', '.t', '.pod', '.php-s', '.pht', '.phar', '.phps', '.php7', '.php5', '.php4', '.php3', '.phtml', '.py', '.rb', '.rhtml', '.cgi', '.dll', '.ayws', '.cgi', '.erb', '.rjs', '.hta', '.htc', '.cs', '.kt', '.lua', '.vbhtml')\n| summarize count() by id_orig_h\n| where count_ < 10\n| order by count_ asc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for rare post requests to a single location."
                  },
                  {
                    "name": "tactics",
                    "value": "Persistence"
                  },
                  {
                    "name": "techniques",
                    "value": "T1100,T1505"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject9')._huntingQuerycontentId9),'/'))))]",
              "properties": {
                "description": "Corelight Hunting Query 9",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject9')._huntingQuerycontentId9)]",
                "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject9').huntingQueryVersion9]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
        "contentKind": "HuntingQuery",
        "displayName": "Corelight - Rare PUT or POST",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject9')._huntingQuerycontentId9,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject9')._huntingQuerycontentId9,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject10').huntingQueryTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CorelightRepetitiveDnsFailures_HuntingQueries Hunting Query with template version 3.1.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject10').huntingQueryVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Corelight_Hunting_Query_10",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Corelight - Repetitive DNS Failures",
                "category": "Hunting Queries",
                "query": "let threshold = 100;\ncorelight_dns\n| where TimeGenerated > ago(24h)\n| where rcode_name in~ ('NXDOMAIN', 'SERVFAIL')\n| summarize count() by id_orig_h, bin(TimeGenerated, 1h)\n| where count_ > threshold\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for repetitive DNS resolution failures from single host."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1094,T1043"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject10')._huntingQuerycontentId10),'/'))))]",
              "properties": {
                "description": "Corelight Hunting Query 10",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject10')._huntingQuerycontentId10)]",
                "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject10').huntingQueryVersion10]",
                "source": {
                  "kind": "Solution",
                  "name": "Corelight",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Corelight",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Corelight",
                  "tier": "Partner",
                  "link": "https://support.corelight.com/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
        "contentKind": "HuntingQuery",
        "displayName": "Corelight - Repetitive DNS Failures",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject10')._huntingQuerycontentId10,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject10')._huntingQuerycontentId10,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.1.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Corelight",
        "publisherDisplayName": "Corelight",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Corelight/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://corelight.com/\">Corelight</a> solution provides the capability to ingest events from <a href=\"https://zeek.org/\">Zeek</a> and <a href=\"https://suricata.io/\">Suricata</a> via Corelight Sensors into Microsoft Sentinel.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><a href=\"https://docs.microsoft.com/azure/azure-monitor/agents/data-sources-custom-logs\">Agent based logs collection from Windows and Linux machines</a></li>\n</ol>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 108, <strong>Workbooks:</strong> 1, <strong>Analytic Rules:</strong> 10, <strong>Hunting Queries:</strong> 10</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Corelight/Data%20Connectors/Logo/corelight.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Corelight",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
              "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject3').parserContentId3]",
              "version": "[variables('parserObject3').parserVersion3]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject4').parserContentId4]",
              "version": "[variables('parserObject4').parserVersion4]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject5').parserContentId5]",
              "version": "[variables('parserObject5').parserVersion5]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject6').parserContentId6]",
              "version": "[variables('parserObject6').parserVersion6]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject7').parserContentId7]",
              "version": "[variables('parserObject7').parserVersion7]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject8').parserContentId8]",
              "version": "[variables('parserObject8').parserVersion8]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject9').parserContentId9]",
              "version": "[variables('parserObject9').parserVersion9]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject10').parserContentId10]",
              "version": "[variables('parserObject10').parserVersion10]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject11').parserContentId11]",
              "version": "[variables('parserObject11').parserVersion11]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject12').parserContentId12]",
              "version": "[variables('parserObject12').parserVersion12]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject13').parserContentId13]",
              "version": "[variables('parserObject13').parserVersion13]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject14').parserContentId14]",
              "version": "[variables('parserObject14').parserVersion14]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject15').parserContentId15]",
              "version": "[variables('parserObject15').parserVersion15]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject16').parserContentId16]",
              "version": "[variables('parserObject16').parserVersion16]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject17').parserContentId17]",
              "version": "[variables('parserObject17').parserVersion17]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject18').parserContentId18]",
              "version": "[variables('parserObject18').parserVersion18]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject19').parserContentId19]",
              "version": "[variables('parserObject19').parserVersion19]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject20').parserContentId20]",
              "version": "[variables('parserObject20').parserVersion20]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject21').parserContentId21]",
              "version": "[variables('parserObject21').parserVersion21]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject22').parserContentId22]",
              "version": "[variables('parserObject22').parserVersion22]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject23').parserContentId23]",
              "version": "[variables('parserObject23').parserVersion23]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject24').parserContentId24]",
              "version": "[variables('parserObject24').parserVersion24]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject25').parserContentId25]",
              "version": "[variables('parserObject25').parserVersion25]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject26').parserContentId26]",
              "version": "[variables('parserObject26').parserVersion26]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject27').parserContentId27]",
              "version": "[variables('parserObject27').parserVersion27]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject28').parserContentId28]",
              "version": "[variables('parserObject28').parserVersion28]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject29').parserContentId29]",
              "version": "[variables('parserObject29').parserVersion29]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject30').parserContentId30]",
              "version": "[variables('parserObject30').parserVersion30]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject31').parserContentId31]",
              "version": "[variables('parserObject31').parserVersion31]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject32').parserContentId32]",
              "version": "[variables('parserObject32').parserVersion32]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject33').parserContentId33]",
              "version": "[variables('parserObject33').parserVersion33]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject34').parserContentId34]",
              "version": "[variables('parserObject34').parserVersion34]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject35').parserContentId35]",
              "version": "[variables('parserObject35').parserVersion35]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject36').parserContentId36]",
              "version": "[variables('parserObject36').parserVersion36]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject37').parserContentId37]",
              "version": "[variables('parserObject37').parserVersion37]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject38').parserContentId38]",
              "version": "[variables('parserObject38').parserVersion38]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject39').parserContentId39]",
              "version": "[variables('parserObject39').parserVersion39]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject40').parserContentId40]",
              "version": "[variables('parserObject40').parserVersion40]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject41').parserContentId41]",
              "version": "[variables('parserObject41').parserVersion41]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject42').parserContentId42]",
              "version": "[variables('parserObject42').parserVersion42]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject43').parserContentId43]",
              "version": "[variables('parserObject43').parserVersion43]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject44').parserContentId44]",
              "version": "[variables('parserObject44').parserVersion44]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject45').parserContentId45]",
              "version": "[variables('parserObject45').parserVersion45]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject46').parserContentId46]",
              "version": "[variables('parserObject46').parserVersion46]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject47').parserContentId47]",
              "version": "[variables('parserObject47').parserVersion47]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject48').parserContentId48]",
              "version": "[variables('parserObject48').parserVersion48]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject49').parserContentId49]",
              "version": "[variables('parserObject49').parserVersion49]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject50').parserContentId50]",
              "version": "[variables('parserObject50').parserVersion50]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject51').parserContentId51]",
              "version": "[variables('parserObject51').parserVersion51]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject52').parserContentId52]",
              "version": "[variables('parserObject52').parserVersion52]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject53').parserContentId53]",
              "version": "[variables('parserObject53').parserVersion53]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject54').parserContentId54]",
              "version": "[variables('parserObject54').parserVersion54]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject55').parserContentId55]",
              "version": "[variables('parserObject55').parserVersion55]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject56').parserContentId56]",
              "version": "[variables('parserObject56').parserVersion56]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject57').parserContentId57]",
              "version": "[variables('parserObject57').parserVersion57]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject58').parserContentId58]",
              "version": "[variables('parserObject58').parserVersion58]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject59').parserContentId59]",
              "version": "[variables('parserObject59').parserVersion59]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject60').parserContentId60]",
              "version": "[variables('parserObject60').parserVersion60]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject61').parserContentId61]",
              "version": "[variables('parserObject61').parserVersion61]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject62').parserContentId62]",
              "version": "[variables('parserObject62').parserVersion62]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject63').parserContentId63]",
              "version": "[variables('parserObject63').parserVersion63]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject64').parserContentId64]",
              "version": "[variables('parserObject64').parserVersion64]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject65').parserContentId65]",
              "version": "[variables('parserObject65').parserVersion65]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject66').parserContentId66]",
              "version": "[variables('parserObject66').parserVersion66]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject67').parserContentId67]",
              "version": "[variables('parserObject67').parserVersion67]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject68').parserContentId68]",
              "version": "[variables('parserObject68').parserVersion68]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject69').parserContentId69]",
              "version": "[variables('parserObject69').parserVersion69]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject70').parserContentId70]",
              "version": "[variables('parserObject70').parserVersion70]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject71').parserContentId71]",
              "version": "[variables('parserObject71').parserVersion71]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject72').parserContentId72]",
              "version": "[variables('parserObject72').parserVersion72]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject73').parserContentId73]",
              "version": "[variables('parserObject73').parserVersion73]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject74').parserContentId74]",
              "version": "[variables('parserObject74').parserVersion74]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject75').parserContentId75]",
              "version": "[variables('parserObject75').parserVersion75]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject76').parserContentId76]",
              "version": "[variables('parserObject76').parserVersion76]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject77').parserContentId77]",
              "version": "[variables('parserObject77').parserVersion77]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject78').parserContentId78]",
              "version": "[variables('parserObject78').parserVersion78]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject79').parserContentId79]",
              "version": "[variables('parserObject79').parserVersion79]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject80').parserContentId80]",
              "version": "[variables('parserObject80').parserVersion80]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject81').parserContentId81]",
              "version": "[variables('parserObject81').parserVersion81]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject82').parserContentId82]",
              "version": "[variables('parserObject82').parserVersion82]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject83').parserContentId83]",
              "version": "[variables('parserObject83').parserVersion83]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject84').parserContentId84]",
              "version": "[variables('parserObject84').parserVersion84]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject85').parserContentId85]",
              "version": "[variables('parserObject85').parserVersion85]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject86').parserContentId86]",
              "version": "[variables('parserObject86').parserVersion86]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject87').parserContentId87]",
              "version": "[variables('parserObject87').parserVersion87]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject88').parserContentId88]",
              "version": "[variables('parserObject88').parserVersion88]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject89').parserContentId89]",
              "version": "[variables('parserObject89').parserVersion89]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject90').parserContentId90]",
              "version": "[variables('parserObject90').parserVersion90]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject91').parserContentId91]",
              "version": "[variables('parserObject91').parserVersion91]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject92').parserContentId92]",
              "version": "[variables('parserObject92').parserVersion92]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject93').parserContentId93]",
              "version": "[variables('parserObject93').parserVersion93]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject94').parserContentId94]",
              "version": "[variables('parserObject94').parserVersion94]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject95').parserContentId95]",
              "version": "[variables('parserObject95').parserVersion95]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject96').parserContentId96]",
              "version": "[variables('parserObject96').parserVersion96]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject97').parserContentId97]",
              "version": "[variables('parserObject97').parserVersion97]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject98').parserContentId98]",
              "version": "[variables('parserObject98').parserVersion98]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject99').parserContentId99]",
              "version": "[variables('parserObject99').parserVersion99]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject100').parserContentId100]",
              "version": "[variables('parserObject100').parserVersion100]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject101').parserContentId101]",
              "version": "[variables('parserObject101').parserVersion101]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject102').parserContentId102]",
              "version": "[variables('parserObject102').parserVersion102]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject103').parserContentId103]",
              "version": "[variables('parserObject103').parserVersion103]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject104').parserContentId104]",
              "version": "[variables('parserObject104').parserVersion104]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject105').parserContentId105]",
              "version": "[variables('parserObject105').parserVersion105]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject106').parserContentId106]",
              "version": "[variables('parserObject106').parserVersion106]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject107').parserContentId107]",
              "version": "[variables('parserObject107').parserVersion107]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject108').parserContentId108]",
              "version": "[variables('parserObject108').parserVersion108]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
              "version": "[variables('huntingQueryObject1').huntingQueryVersion1]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
              "version": "[variables('huntingQueryObject2').huntingQueryVersion2]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
              "version": "[variables('huntingQueryObject3').huntingQueryVersion3]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
              "version": "[variables('huntingQueryObject4').huntingQueryVersion4]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
              "version": "[variables('huntingQueryObject5').huntingQueryVersion5]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
              "version": "[variables('huntingQueryObject6').huntingQueryVersion6]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
              "version": "[variables('huntingQueryObject7').huntingQueryVersion7]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
              "version": "[variables('huntingQueryObject8').huntingQueryVersion8]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
              "version": "[variables('huntingQueryObject9').huntingQueryVersion9]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
              "version": "[variables('huntingQueryObject10').huntingQueryVersion10]"
            }
          ]
        },
        "firstPublishDate": "2022-06-01",
        "providers": [
          "Corelight"
        ],
        "categories": {
          "domains": [
            "IT Operations",
            "Security - Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
