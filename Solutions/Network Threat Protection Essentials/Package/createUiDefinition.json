{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "config": {
      "isWizard": false,
      "basics": {
        "description": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\" width=\"75px\" height=\"75px\">\n\n**Note:** Please refer to the following before installing the solution: \n\n• Review the solution [Release Notes](https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Network%20Threat%20Protection%20Essentials/ReleaseNotes.md)\n\n • There may be [known issues](https://aka.ms/sentinelsolutionsknownissues) pertaining to this Solution, please refer to them before installing.\n\nThe **Network Threat Protection Essentials** solution contain queries that identifies suspicious network behavior based on various data sources ingested in Sentinel. The solution contains queries to detect common network-based attacks - things like malicious user agents, mining pools, Base64 encoded IPv4 address in request URL etc. The solution will be constantly updated to add more detection/hunting query as well as other sentinel content.\r\n \r\n**Pre-requisites:**\r\n \r\nThis is a [domain solution](https://learn.microsoft.com/en-us/azure/sentinel/sentinel-solutions-catalog#domain-solutions) and does not include any data connectors. The content in this solution supports the connectors listed below. Install one or more of the listed solutions, to unlock the value provided by this solution.\r\n \r\n 1. Microsoft 365 \r\n \r\n 2. Amazon Web Services\r\n \r\n 3. Windows Server DNS\r\n \r\n 4. Azure Firewall \r\n \r\n 5. Windows Forwarded Events \r\n \r\n 6. ZScaler Internet Access \r\n \r\n 7. Palo Alto Networks \r\n \r\n 8. Fortinet FortiGate \r\n \r\n 9. Check Point \r\n \r\n**Keywords:** Malicious IP/User agent, DNS, TOR, mining\n\n**Analytic Rules:** 2, **Hunting Queries:** 3\n\n[Learn more about Microsoft Sentinel](https://aka.ms/azuresentinel) | [Learn more about Solutions](https://aka.ms/azuresentinelsolutionsdoc)",
        "subscription": {
          "resourceProviders": [
            "Microsoft.OperationsManagement/solutions",
            "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "Microsoft.Insights/workbooks",
            "Microsoft.Logic/workflows"
          ]
        },
        "location": {
          "metadata": {
            "hidden": "Hiding location, we get it from the log analytics workspace"
          },
          "visible": false
        },
        "resourceGroup": {
          "allowExisting": true
        }
      }
    },
    "basics": [
      {
        "name": "getLAWorkspace",
        "type": "Microsoft.Solutions.ArmApiControl",
        "toolTip": "This filters by workspaces that exist in the Resource Group selected",
        "condition": "[greater(length(resourceGroup().name),0)]",
        "request": {
          "method": "GET",
          "path": "[concat(subscription().id,'/providers/Microsoft.OperationalInsights/workspaces?api-version=2020-08-01')]"
        }
      },
      {
        "name": "workspace",
        "type": "Microsoft.Common.DropDown",
        "label": "Workspace",
        "placeholder": "Select a workspace",
        "toolTip": "This dropdown will list only workspace that exists in the Resource Group selected",
        "constraints": {
          "allowedValues": "[map(filter(basics('getLAWorkspace').value, (filter) => contains(toLower(filter.id), toLower(resourceGroup().name))), (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
          "required": true
        },
        "visible": true
      }
    ],
    "steps": [
      {
        "name": "analytics",
        "label": "Analytics",
        "subLabel": {
          "preValidation": "Configure the analytics",
          "postValidation": "Done"
        },
        "bladeTitle": "Analytics",
        "elements": [
          {
            "name": "analytics-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "This solution installs the following analytic rule templates. After installing the solution, create and enable analytic rules in Manage solution view."
            }
          },
          {
            "name": "analytics-link",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "link": {
                "label": "Learn more",
                "uri": "https://docs.microsoft.com/azure/sentinel/tutorial-detect-threats-custom?WT.mc_id=Portal-Microsoft_Azure_CreateUIDef"
              }
            }
          },
          {
            "name": "analytic1",
            "type": "Microsoft.Common.Section",
            "label": "Network endpoint to host executable correlation",
            "elements": [
              {
                "name": "analytic1-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "Correlates blocked URLs hosting [malicious] executables with host endpoint data\nto identify potential instances of executables of the same name having been recently run."
                }
              }
            ]
          },
          {
            "name": "analytic2",
            "type": "Microsoft.Common.Section",
            "label": "New UserAgent observed in last 24 hours",
            "elements": [
              {
                "name": "analytic2-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "Identifies new UserAgents observed in the last 24 hours versus the previous 14 days. This detection\nextracts words from user agents to build the baseline and determine rareity rather than perform a\ndirect comparison. This avoids FPs caused by version numbers and other high entropy user agent components.\nThese new UserAgents could be benign. However, in normally stable environments,\nthese new UserAgents could provide a starting point for investigating malicious activity.\nNote: W3CIISLog can be noisy depending on the environment, however OfficeActivity and AWSCloudTrail are\nusually stable with low numbers of detections."
                }
              }
            ]
          }
        ]
      },
      {
        "name": "huntingqueries",
        "label": "Hunting Queries",
        "bladeTitle": "Hunting Queries",
        "elements": [
          {
            "name": "huntingqueries-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "This solution installs the following hunting queries. After installing the solution, run these hunting queries to hunt for threats in Manage solution view. "
            }
          },
          {
            "name": "huntingqueries-link",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "link": {
                "label": "Learn more",
                "uri": "https://docs.microsoft.com/azure/sentinel/hunting"
              }
            }
          },
          {
            "name": "huntingquery1",
            "type": "Microsoft.Common.Section",
            "label": "Exploit and Pentest Framework User Agent",
            "elements": [
              {
                "name": "huntingquery1-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This query detects suspicious user agent strings used by exploit and pen test frameworks. This hunting query depends on Office365 AWS AzureMonitor(IIS) data connector (OfficeActivity AWSCloudTrail W3CIISLog Parser or Table)"
                }
              }
            ]
          },
          {
            "name": "huntingquery2",
            "type": "Microsoft.Common.Section",
            "label": "Base64 encoded IPv4 address in request url",
            "elements": [
              {
                "name": "huntingquery2-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This query detects Base64-encoded IPv4 addresses in outbound request URLs. It uses pre-computed base64 offsets for IPv4 sequences, eliminating the need for decoding. After identifying a candidate,the query extracts the plaintext IPv4 address pattern. This hunting query depends on Zscaler Fortinet CheckPoint PaloAltoNetworks data connector (CommonSecurityLog CommonSecurityLog CommonSecurityLog CommonSecurityLog Parser or Table)"
                }
              }
            ]
          },
          {
            "name": "huntingquery3",
            "type": "Microsoft.Common.Section",
            "label": "Risky base64 encoded command in URL",
            "elements": [
              {
                "name": "huntingquery3-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This query detects risky Base64-encoded commands in web requests. It identifies potential C2 server communication and illuminates injected webshells. Note that base64 is case-sensitive, requiring multiple permutations for full coverage. This hunting query depends on Zscaler Fortinet CheckPoint PaloAltoNetworks data connector (CommonSecurityLog CommonSecurityLog CommonSecurityLog CommonSecurityLog Parser or Table)"
                }
              }
            ]
          }
        ]
      }
    ],
    "outputs": {
      "workspace-location": "[first(map(filter(basics('getLAWorkspace').value, (filter) => and(contains(toLower(filter.id), toLower(resourceGroup().name)),equals(filter.name,basics('workspace')))), (item) => item.location))]",
      "location": "[location()]",
      "workspace": "[basics('workspace')]"
    }
  }
}
