{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Network Threat Protection Essentials"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Network Threat Protection Essentials",
    "_solutionVersion": "3.0.1",
    "solutionId": "azuresentinel.azure-sentinel-solution-networkthreatdetection",
    "_solutionId": "[variables('solutionId')]",
    "huntingQueryObject1": {
      "huntingQueryVersion1": "1.0.2",
      "_huntingQuerycontentId1": "df75ac6c-7b0b-40d2-82e4-191c012f1a07",
      "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('df75ac6c-7b0b-40d2-82e4-191c012f1a07')))]"
    },
    "huntingQueryObject2": {
      "huntingQueryVersion2": "1.0.1",
      "_huntingQuerycontentId2": "39156a1d-c9e3-439e-967b-be7dcba918d9",
      "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('39156a1d-c9e3-439e-967b-be7dcba918d9')))]"
    },
    "huntingQueryObject3": {
      "huntingQueryVersion3": "1.0.1",
      "_huntingQuerycontentId3": "c46eeb45-c324-4a84-9df1-248c6d1507bb",
      "huntingQueryTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('c46eeb45-c324-4a84-9df1-248c6d1507bb')))]"
    },
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.1.5",
      "_analyticRulecontentId1": "01f64465-b1ef-41ea-a7f5-31553a11ad43",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '01f64465-b1ef-41ea-a7f5-31553a11ad43')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('01f64465-b1ef-41ea-a7f5-31553a11ad43')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','01f64465-b1ef-41ea-a7f5-31553a11ad43','-', '1.1.5')))]"
    },
    "analyticRuleObject2": {
      "analyticRuleVersion2": "1.0.4",
      "_analyticRulecontentId2": "b725d62c-eb77-42ff-96f6-bdc6745fc6e0",
      "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b725d62c-eb77-42ff-96f6-bdc6745fc6e0')]",
      "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b725d62c-eb77-42ff-96f6-bdc6745fc6e0')))]",
      "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b725d62c-eb77-42ff-96f6-bdc6745fc6e0','-', '1.0.4')))]"
    },
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject1').huntingQueryTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "UseragentExploitPentest_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject1').huntingQueryVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Network_Threat_Protection_Essentials_Hunting_Query_1",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Exploit and Pentest Framework User Agent",
                "category": "Hunting Queries",
                "query": "let UserAgentList = \"Internet Explorer |Mozilla/4\\\\.0 \\\\(compatible; MSIE 6\\\\.0; Windows NT 5\\\\.1; SV1; InfoPath\\\\.2\\\\)|Mozilla/5\\\\.0 \\\\(Windows NT 10\\\\.0; Win32; x32; rv:60\\\\.0\\\\)|Mozilla/4\\\\.0 \\\\(compatible; Metasploit RSPEC\\\\)|Mozilla/4\\\\.0 \\\\(compatible; MSIE 6\\\\.1; Windows NT\\\\)|Mozilla/4\\\\.0 \\\\(compatible; MSIE 6\\\\.0; Windows NT 5\\\\.1\\\\)|Mozilla/4\\\\.0 \\\\(compatible; MSIE 8\\\\.0; Windows NT 6\\\\.0; Trident/4\\\\.0\\\\)|Mozilla/4\\\\.0 \\\\(compatible; MSIE 7\\\\.0; Windows NT 6\\\\.0; Trident/4\\\\.0; SIMBAR={7DB0F6DE-8DE7-4841-9084-28FA914B0F2E}; SLCC1; \\\\.N\\\\)|Mozilla/5\\\\.0 \\\\(Windows; U; Windows NT 5\\\\.1; en-US\\\\) AppleWebKit/525\\\\.13 \\\\(KHTML, like Gecko\\\\) Chrome/4\\\\.0\\\\.221\\\\.6 Safari/525\\\\.13|Mozilla/5\\\\.0 \\\\(compatible; MSIE 9\\\\.0; Windows NT 6\\\\.1; WOW64; Trident/5\\\\.0; MAAU\\\\)|Mozilla/5\\\\.0[^\\\\s]|Mozilla/4\\\\.0 \\\\(compatible; SPIPE/1\\\\.0\\\\)|Mozilla/5\\\\.0 \\\\(Windows NT 6\\\\.3; rv:39\\\\.0\\\\) Gecko/20100101 Firefox/35\\\\.0|Sametime Community Agent|X-FORWARDED-FOR|DotDotPwn v2\\\\.1|SIPDROID|wordpress hash grabber|exploit|okhttp/\";\n// Excluding for IIS, as the main malicious usage for okhttp that we have seen was in the OfficeActivity logs and this can create noise for IIS.\nlet ExcludeIIS = \"okhttp/\";\n(union isfuzzy=true\n(OfficeActivity\n| where ExtendedProperties has \"UserAgent\"\n| extend UserAgent = extractjson(\"$[0].Value\", ExtendedProperties, typeof(string))\n| where UserAgent matches regex UserAgentList\n| extend SourceIP = ClientIP\n| project TimeGenerated, Type, UserAgent, SourceIP\n),\n(\nW3CIISLog\n| extend UserAgent = replace('\\\\+', ' ', csUserAgent) \n| where UserAgent matches regex UserAgentList\n| where UserAgent !startswith ExcludeIIS\n| extend SourceIP = cIP\n| project TimeGenerated, Type, UserAgent, SourceIP\n),\n(\nAWSCloudTrail\n| where UserAgent matches regex UserAgentList\n| extend SourceIP = SourceIpAddress\n| project TimeGenerated, Type, UserAgent, SourceIP\n))\n| summarize min(TimeGenerated), max(TimeGenerated), count() by Type, UserAgent, SourceIP\n| extend timestamp = min_TimeGenerated\n| extend IP_0_Address = SourceIP\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query detects suspicious user agent strings used by exploit and pen test frameworks."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess,CommandAndControl,Execution"
                  },
                  {
                    "name": "techniques",
                    "value": "T1189,T1071,T1203"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1),'/'))))]",
              "properties": {
                "description": "Network Threat Protection Essentials Hunting Query 1",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1)]",
                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Network Threat Protection Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
        "contentKind": "HuntingQuery",
        "displayName": "Exploit and Pentest Framework User Agent",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.0.2')))]",
        "version": "1.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject2').huntingQueryTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "B64IPInURL_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject2').huntingQueryVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Network_Threat_Protection_Essentials_Hunting_Query_2",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Base64 encoded IPv4 address in request url",
                "category": "Hunting Queries",
                "query": "let starttime = todatetime('{{StartTimeISO}}');\nlet endtime = todatetime('{{EndTimeISO}}');\nlet ipv4_plaintext_extraction_regex = @\"((?:(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.)){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1,3})\";\nlet ipv4_encoded_identification_regex = @\"\\=([a-zA-Z0-9\\/\\+]*(?:(?:MC|Au|wL|MS|Eu|xL|Mi|Iu|yL|My|Mu|zL|NC|Qu|0L|NS|Uu|1L|Ni|Yu|2L|Ny|cu|3L|OC|gu|4L|OS|ku|5L){1}[a-zA-Z0-9\\/\\+]{2,4}){3}[a-zA-Z0-9\\/\\+\\=]*)\";\nlet ipv4_decoded_hex_extract = @\"((?:(?:61|62|63|64|65|66|67|68|69|6a|6b|6c|6d|6e|6f|70|71|72|73|74|75|76|77|78|79|7a|41|42|43|44|45|46|47|48|49|4a|4b|4c|4d|4e|4f|50|51|52|53|54|55|56|57|58|59|5a|2f|2b|3d),){7,15})\";\nCommonSecurityLog\n| where TimeGenerated between(starttime .. endtime)\n| where isnotempty(RequestURL)\n// Identify requests with encoded IPv4 addresses\n| where RequestURL matches regex ipv4_encoded_identification_regex\n| project TimeGenerated, RequestURL\n// Extract IP candidates in their base64 encoded format, significantly reducing the dataset\n| extend extracted_encoded_ip_candidate = extract_all(ipv4_encoded_identification_regex, RequestURL)\n// We could have more than one candidate, expand them out\n| mv-expand extracted_encoded_ip_candidate to typeof(string)\n| summarize Start=min(TimeGenerated), End=max(TimeGenerated), make_set(RequestURL,100) by extracted_encoded_ip_candidate\n// Pad if we need to\n| extend extracted_encoded_ip_candidate = iff(strlen(extracted_encoded_ip_candidate) % 2 == 0, extracted_encoded_ip_candidate, strcat(extracted_encoded_ip_candidate, \"=\"))\n// Now decode the candidate to a long array, we cannot go straight to string as it cannot handle non-UTF8, we need to strip that first\n| extend extracted_encoded_ip_candidate = tostring(base64_decode_toarray(extracted_encoded_ip_candidate))\n// Extract the IP candidates from the array\n| extend hex_extracted = extract_all(ipv4_decoded_hex_extract, extracted_encoded_ip_candidate)\n// Expand, it's still possible that we might have more than 1 IP\n| mv-expand hex_extracted\n// Now we should have a clean string. We need to put it back into a dynamic array for converting back to a string\n| extend hex_extracted = trim_end(\",\", tostring(hex_extracted))\n| extend hex_extracted = strcat(\"[\",hex_extracted,\"]\")\n| extend hex_extracted = todynamic(hex_extracted)\n| extend extracted_encoded_ip_candidate = todynamic(extracted_encoded_ip_candidate)\n// Convert the array back into a string\n| extend decoded_ip_candidate = make_string(hex_extracted)\n| summarize by decoded_ip_candidate, tostring(set_RequestURL), Start, End\n// Now the IP candidates will be in plaintext, extract the IPs using a regex\n| extend ipmatch = extract_all(ipv4_plaintext_extraction_regex, decoded_ip_candidate)\n// If it's not an IP, throw it out\n| where isnotnull(ipmatch)\n| mv-expand ipmatch to typeof(string)\n| extend timestamp = Start\n| extend IP_0_Address = ipmatch\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query detects Base64-encoded IPv4 addresses in outbound request URLs. It uses pre-computed base64 offsets for IPv4 sequences, eliminating the need for decoding. After identifying a candidate,the query extracts the plaintext IPv4 address pattern."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1071.001"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2),'/'))))]",
              "properties": {
                "description": "Network Threat Protection Essentials Hunting Query 2",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2)]",
                "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject2').huntingQueryVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Network Threat Protection Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
        "contentKind": "HuntingQuery",
        "displayName": "Base64 encoded IPv4 address in request url",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.0.1')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.0.1')))]",
        "version": "1.0.1"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject3').huntingQueryTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "RiskyCommandB64EncodedInUrl_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject3').huntingQueryVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Network_Threat_Protection_Essentials_Hunting_Query_3",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Risky base64 encoded command in URL",
                "category": "Hunting Queries",
                "query": "let mapping = datatable (CommandFound:string, match_list:dynamic) [\n\"whoami\", dynamic(['d2hvYW1p', 'dob2Fta', '3aG9hbW']),\n\"net share\", dynamic(['bmV0IHNoYXJl', '5ldCBzaGFyZ', 'uZXQgc2hhcm']),\n\"net use\", dynamic(['bmV0IHVzZ', '5ldCB1c2', 'uZXQgdXNl']),\n\"net view\", dynamic(['bmV0IHZpZX', '5ldCB2aWV3', 'uZXQgdmlld']),\n\"ipconfig\", dynamic(['aXBjb25maWc', 'lwY29uZmln', 'pcGNvbmZpZ']),\n\"net sh\", dynamic(['bmV0c2gg', '5ldHNoI', 'uZXRzaC']),\n\"schtasks\", dynamic(['2NodGFza3', 'NjaHRhc2tz', 'zY2h0YXNrc']),\n\"Invoke- \", dynamic(['SW52b2tlL', 'ludm9rZS', 'JbnZva2Ut']),\n];\nlet riskyCommandRegex = @\"(d2hvYW1p|dob2Fta|3aG9hbW|bmV0IHNoYXJl|5ldCBzaGFyZ|uZXQgc2hhcm|bmV0IHVzZ|5ldCB1c2|uZXQgdXNl|bmV0IHZpZX|5ldCB2aWV3|uZXQgdmlld|aXBjb25maWc|lwY29uZmln|pcGNvbmZpZ|bmV0c2gg|5ldHNoI|uZXRzaC|2NodGFza3|NjaHRhc2tz|zY2h0YXNrc|SW52b2tlL|ludm9rZS|JbnZva2Ut)\";\nCommonSecurityLog\n| where TimeGenerated > ago(3d)\n| where RequestURL matches regex riskyCommandRegex\n| extend B64MatchData = extract_all(riskyCommandRegex, RequestURL)\n| where isnotempty(B64MatchData)\n| mv-expand B64MatchData to typeof(string)\n| join kind=leftouter ( \n    mapping\n    | mv-expand match_list to typeof(string)\n) on $left.B64MatchData == $right.match_list\n| project TimeGenerated, B64MatchData, CommandFound, RequestURL, RequestMethod, DestinationHostName, DestinationIP, SourceIP, DeviceVendor, DeviceProduct, Activity\n| extend timestamp = TimeGenerated\n| extend HostName = tostring(split(DestinationHostName, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(DestinationHostName, '.'), 1, -1), '.'))\n| extend IP_0_Address = SourceIP\n| extend IP_1_Address = DestinationIP\n| extend DNS_0_HostName = HostName\n| extend DNS_0_DnsDomain = DnsDomain  \n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query detects risky Base64-encoded commands in web requests. It identifies potential C2 server communication and illuminates injected webshells. Note that base64 is case-sensitive, requiring multiple permutations for full coverage."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  },
                  {
                    "name": "techniques",
                    "value": "T1071.001"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3),'/'))))]",
              "properties": {
                "description": "Network Threat Protection Essentials Hunting Query 3",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3)]",
                "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject3').huntingQueryVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Network Threat Protection Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
        "contentKind": "HuntingQuery",
        "displayName": "Risky base64 encoded command in URL",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '1.0.1')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '1.0.1')))]",
        "version": "1.0.1"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "NetworkEndpointCorrelation_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Correlates blocked URLs hosting [malicious] executables with host endpoint data\nto identify potential instances of executables of the same name having been recently run.",
                "displayName": "Network endpoint to host executable correlation",
                "enabled": false,
                "query": "let endpointData = \n(union isfuzzy=true\n(SecurityEvent\n  | where EventID == 4688\n  | extend shortFileName = tolower(tostring(split(NewProcessName, '\\\\')[-1]))\n  ),\n  (WindowsEvent\n  | where EventID == 4688\n  | extend  NewProcessName = tostring(EventData.NewProcessName)\n  | extend shortFileName = tolower(tostring(split(NewProcessName, '\\\\')[-1]))\n  | extend TargetUserName = tostring(EventData.TargetUserName)\n  ));\n// Correlate suspect executables seen in TrendMicro rule updates with similar activity on endpoints\nCommonSecurityLog\n| where DeviceVendor =~ \"Trend Micro\"\n| where Activity =~ \"Deny List updated\" \n| where RequestURL endswith \".exe\"\n| project TimeGenerated, Activity , RequestURL , SourceIP, DestinationIP\n| extend suspectExeName = tolower(tostring(split(RequestURL, '/')[-1]))\n| join kind=innerunique (endpointData) on $left.suspectExeName == $right.shortFileName \n| extend HostName = tostring(split(Computer, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(Computer, '.'), 1, -1), '.'))\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "TrendMicro",
                    "dataTypes": [
                      "CommonSecurityLog"
                    ]
                  },
                  {
                    "connectorId": "SecurityEvents",
                    "dataTypes": [
                      "SecurityEvent"
                    ]
                  },
                  {
                    "connectorId": "WindowsSecurityEvents",
                    "dataTypes": [
                      "SecurityEvents"
                    ]
                  },
                  {
                    "connectorId": "WindowsForwardedEvents",
                    "dataTypes": [
                      "WindowsEvent"
                    ]
                  }
                ],
                "tactics": [
                  "Execution"
                ],
                "techniques": [
                  "T1204"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "TargetUserName"
                      }
                    ]
                  },
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "DestinationIP"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "identifier": "Url",
                        "columnName": "RequestURL"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Network Threat Protection Essentials Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Network Threat Protection Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Network endpoint to host executable correlation",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "NewUserAgentLast24h_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies new UserAgents observed in the last 24 hours versus the previous 14 days. This detection\nextracts words from user agents to build the baseline and determine rareity rather than perform a\ndirect comparison. This avoids FPs caused by version numbers and other high entropy user agent components.\nThese new UserAgents could be benign. However, in normally stable environments,\nthese new UserAgents could provide a starting point for investigating malicious activity.\nNote: W3CIISLog can be noisy depending on the environment, however OfficeActivity and AWSCloudTrail are\nusually stable with low numbers of detections.",
                "displayName": "New UserAgent observed in last 24 hours",
                "enabled": false,
                "query": "let starttime = 14d;\nlet endtime = 1d;\nlet UserAgentAll =\n(union isfuzzy=true\n(OfficeActivity\n| where TimeGenerated >= ago(starttime)\n| where isnotempty(UserAgent)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent, SourceIP = ClientIP, Account = UserId, Type, RecordType, Operation\n),\n(\nW3CIISLog\n| where TimeGenerated >= ago(starttime)\n| where isnotempty(csUserAgent)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent = csUserAgent, SourceIP = cIP, Account = csUserName, Type, sSiteName, csMethod, csUriStem\n),\n(\nAWSCloudTrail\n| where TimeGenerated >= ago(starttime)\n| where isnotempty(UserAgent)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserAgent, SourceIP = SourceIpAddress, Account = UserIdentityUserName, Type, EventSource, EventName\n))\n// remove wordSize blocks of non-numeric hex characters prior to word extraction\n| extend UserAgentNoHexAlphas = replace(\"([A-Fa-f]{4,})\", \"x\", UserAgent)\n// once blocks of hex chars are removed, extract wordSize blocks of a-z\n| extend Tokens = extract_all(\"([A-Za-z]{4,})\", UserAgentNoHexAlphas)\n// concatenate extracted words to create a summarized user agent for baseline and comparison\n| extend NormalizedUserAgent = strcat_array(Tokens, \"|\")\n| project-away UserAgentNoHexAlphas, Tokens;\nUserAgentAll\n| where StartTime >= ago(endtime)\n| summarize StartTime = min(StartTime), EndTime = max(EndTime), count() by UserAgent, NormalizedUserAgent, SourceIP, Account, Type, RecordType, Operation, EventSource, EventName, sSiteName, csMethod, csUriStem\n| join kind=leftanti\n(\nUserAgentAll\n| where StartTime < ago(endtime)\n| summarize by NormalizedUserAgent, SourceIP, Account, Type, RecordType, Operation, EventSource, EventName, sSiteName, csMethod, csUriStem\n)\non NormalizedUserAgent\n| extend timestamp = StartTime\n| extend Name = tostring(split(Account, '@', 0)[0]), UPNSuffix = tostring(split(Account, '@', 1)[0])\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "AWS",
                    "dataTypes": [
                      "AWSCloudTrail"
                    ]
                  },
                  {
                    "connectorId": "Office365",
                    "dataTypes": [
                      "OfficeActivity"
                    ]
                  },
                  {
                    "connectorId": "AzureMonitor(IIS)",
                    "dataTypes": [
                      "W3CIISLog"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess",
                  "CommandAndControl",
                  "Execution"
                ],
                "techniques": [
                  "T1189",
                  "T1071",
                  "T1203"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "Name"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "UPNSuffix"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SourceIP"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
              "properties": {
                "description": "Network Threat Protection Essentials Analytics Rule 2",
                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Network Threat Protection Essentials",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
        "contentKind": "AnalyticsRule",
        "displayName": "New UserAgent observed in last 24 hours",
        "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Network Threat Protection Essentials",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong><p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <strong>Network Threat Protection Essentials</strong> solution contain queries that identifies suspicious network behavior based on various data sources ingested in Sentinel. The solution contains queries to detect common network-based attacks - things like malicious user agents, mining pools, Base64 encoded IPv4 address in request URL etc. The solution will be constantly updated to add more detection/hunting query as well as other sentinel content.</p>\n<p><strong>Pre-requisites:</strong></p>\n<p>This is a <a href=\"https://learn.microsoft.com/en-us/azure/sentinel/sentinel-solutions-catalog#domain-solutions\">domain solution</a> and does not include any data connectors. The content in this solution supports the connectors listed below. Install one or more of the listed solutions, to unlock the value provided by this solution.</p>\n<p>1.Microsoft 365</p>\n<p>2.Amazon Web Services</p>\n<p>3.Windows Server DNS</p>\n<p>4.Azure Firewall</p>\n<p>5.Windows Forwarded Events</p>\n<p>6.ZScaler Internet Access</p>\n<p>7.Palo Alto Networks</p>\n<p>8.Fortinet FortiGate</p>\n<p>9.Check Point</p>\n<p><strong>Keywords:</strong> Malicious IP/User agent, DNS, TOR, mining</p>\n<p><strong>Analytic Rules:</strong> 2, <strong>Hunting Queries:</strong> 3</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Network Threat Protection Essentials",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
              "version": "[variables('huntingQueryObject1').huntingQueryVersion1]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
              "version": "[variables('huntingQueryObject2').huntingQueryVersion2]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
              "version": "[variables('huntingQueryObject3').huntingQueryVersion3]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            },
			{
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-office365"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-dns"
            },
            {
              "kind": "Solution",
              "contentId": "sentinel4azurefirewall.sentinel4azurefirewall"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-windowsforwardedevents"
            },
            {
              "kind": "Solution",
              "contentId": "zscaler1579058425289.zscaler_internet_access_mss"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-paloaltopanos"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-fortinetfortigate"
            },
            {
              "kind": "Solution",
              "contentId": "checkpoint.checkpoint-sentinel-solutions"
            }
          ]
        },
        "firstPublishDate": "2022-11-16",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection",
            "Security - Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
