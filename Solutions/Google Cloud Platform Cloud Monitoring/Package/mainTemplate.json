{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Google Cloud Platform Cloud Monitoring"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "resource group name where Microsoft Sentinel is setup"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "[last(split(subscription().id, '/'))]",
      "metadata": {
        "description": "subscription id where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Google Cloud Platform Cloud Monitoring",
    "_solutionVersion": "3.0.2",
    "solutionId": "azuresentinel.azure-sentinel-solution-gcpmonitoring",
    "_solutionId": "[variables('solutionId')]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','GCP_MONITOR')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'GCP_MONITOR')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('GCP_MONITOR-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "GCP_MONITOR-Parser"
    },
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "dataConnectorCCPVersion": "1.0.0",
    "_dataConnectorContentIdConnectorDefinition1": "GCPMonitorCCPDefinition",
    "dataConnectorTemplateNameConnectorDefinition1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition1')))]",
    "_dataConnectorContentIdConnections1": "GCPMonitorCCPDefinitionConnections",
    "dataConnectorTemplateNameConnections1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections1')))]",
    "dataCollectionEndpointId1": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
    "blanks": "[replace('b', 'b', '')]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "GCP_MONITOR Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for GCP_MONITOR",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "GCP_MONITOR",
                "query": "let GCP_MONITORING_CL_View = view () {\nGCP_MONITORING_CL\n| extend EventVendor = 'GCP'\n| extend EventProduct = 'Cloud Monitoring'\n| extend\n      MetricLabelsInstanceName= column_ifexists('metric_labels_instance_name_s', ''),\n      MetricType= column_ifexists('metric_type_s', ''),\n      ResourceType= column_ifexists('resource_type_s', ''),\n      ResourceLabelsProjectId= column_ifexists('resource_labels_project_id_s', ''),\n      ResourceLabelsInstanceId= column_ifexists('resource_labels_instance_id_s', ''),\n      ResourceLabelsZone= column_ifexists('resource_labels_zone_s', ''),\n      MetricKind= column_ifexists('metricKind_s', ''),\n      ValueType= column_ifexists('valueType_s', ''),\n      IntervalStartTime= column_ifexists('interval_startTime_t', ''),\n      IntervalEndTime= column_ifexists('interval_endTime_t', ''),\n      ValueInt64Value= column_ifexists('value_int64Value_d', '')\n};\nlet GCP_MONITORINGV2_CL_View = view () {\nGCP_MONITORINGV2_CL\n| extend EventVendor = 'GCP'\n| extend EventProduct = 'Cloud Monitoring'\n| extend \n      MetricType= column_ifexists('MetricType', ''),\n      MetricLabelsInstanceName = column_ifexists('tostring(MetricLabels.instance_name)', ''), \n      ResourceType = column_ifexists('tostring(Resource.type)', ''), \n      ResourceLabelsProjectId = column_ifexists('tostring(Resource.labels.project_id)', ''),\n      ResourceLabelsInstanceId = column_ifexists('tostring(Resource.labels.instance_id)', ''),\n      ResourceLabelsZone =column_ifexists('tostring(Resource.labels.zone)', ''),\n      IntervalStartTime = column_ifexists('tostring(Points.interval.startTime)', ''), \n      IntervalEndTime = column_ifexists('tostring(Points.interval.endTime)', ''),\n      ValueInt64Value = column_ifexists('tostring(ValueType.int64Value)', ''),\n      MetricKind= column_ifexists('MetricKind', ''),\n      ValueType= column_ifexists('ValueType', '')\n};\nunion isfuzzy=true (GCP_MONITORING_CL_View), (GCP_MONITORINGV2_CL_View)\n| project MetricLabelsInstanceName, MetricType, ResourceType, ResourceLabelsProjectId, ResourceLabelsInstanceId, ResourceLabelsZone, MetricKind, ValueType, IntervalStartTime, IntervalEndTime, ValueInt64Value\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'GCP_MONITOR')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Google Cloud Platform Cloud Monitoring",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Parser for GCP_MONITOR",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for GCP_MONITOR",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "GCP_MONITOR",
        "query": "let GCP_MONITORING_CL_View = view () {\nGCP_MONITORING_CL\n| extend EventVendor = 'GCP'\n| extend EventProduct = 'Cloud Monitoring'\n| extend\n      MetricLabelsInstanceName= column_ifexists('metric_labels_instance_name_s', ''),\n      MetricType= column_ifexists('metric_type_s', ''),\n      ResourceType= column_ifexists('resource_type_s', ''),\n      ResourceLabelsProjectId= column_ifexists('resource_labels_project_id_s', ''),\n      ResourceLabelsInstanceId= column_ifexists('resource_labels_instance_id_s', ''),\n      ResourceLabelsZone= column_ifexists('resource_labels_zone_s', ''),\n      MetricKind= column_ifexists('metricKind_s', ''),\n      ValueType= column_ifexists('valueType_s', ''),\n      IntervalStartTime= column_ifexists('interval_startTime_t', ''),\n      IntervalEndTime= column_ifexists('interval_endTime_t', ''),\n      ValueInt64Value= column_ifexists('value_int64Value_d', '')\n};\nlet GCP_MONITORINGV2_CL_View = view () {\nGCP_MONITORINGV2_CL\n| extend EventVendor = 'GCP'\n| extend EventProduct = 'Cloud Monitoring'\n| extend \n      MetricType= column_ifexists('MetricType', ''),\n      MetricLabelsInstanceName = column_ifexists('tostring(MetricLabels.instance_name)', ''), \n      ResourceType = column_ifexists('tostring(Resource.type)', ''), \n      ResourceLabelsProjectId = column_ifexists('tostring(Resource.labels.project_id)', ''),\n      ResourceLabelsInstanceId = column_ifexists('tostring(Resource.labels.instance_id)', ''),\n      ResourceLabelsZone =column_ifexists('tostring(Resource.labels.zone)', ''),\n      IntervalStartTime = column_ifexists('tostring(Points.interval.startTime)', ''), \n      IntervalEndTime = column_ifexists('tostring(Points.interval.endTime)', ''),\n      ValueInt64Value = column_ifexists('tostring(ValueType.int64Value)', ''),\n      MetricKind= column_ifexists('MetricKind', ''),\n      ValueType= column_ifexists('ValueType', '')\n};\nunion isfuzzy=true (GCP_MONITORING_CL_View), (GCP_MONITORINGV2_CL_View)\n| project MetricLabelsInstanceName, MetricType, ResourceType, ResourceLabelsProjectId, ResourceLabelsInstanceId, ResourceLabelsZone, MetricKind, ValueType, IntervalStartTime, IntervalEndTime, ValueInt64Value\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'GCP_MONITOR')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Google Cloud Platform Cloud Monitoring",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "displayName": "Google Cloud Platform Cloud Monitoring (via Codeless Connector Framework)",
        "contentKind": "DataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "GCPMonitorCCPDefinition",
                  "title": "Google Cloud Platform Cloud Monitoring (via Codeless Connector Framework)",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "The Google Cloud Platform Cloud Monitoring data connector ingests Monitoring logs from Google Cloud into Microsoft Sentinel using the Google Cloud Monitoring API. Refer to [Cloud Monitoring API](https://cloud.google.com/monitoring/api/v3) documentation for more details.",
                  "graphQueriesTableName": "GCPMonitoring",
                  "graphQueries": [
                    {
                      "metricName": "Total events received",
                      "legend": "Google Cloud Platform Cloud Monitoring Events",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Get a sample of Google Cloud Platform Cloud Monitoring logs",
                      "query": "{{graphQueriesTableName}}\n | take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors"
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true,
                          "action": false
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "title": "Connect Google Cloud Platform Cloud Monitoring to Microsoft Sentinel",
                      "instructions": [
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 1. Setup GCP Monitoring Integration\n To fetch logs from GCP Cloud Monitoring to Sentinel **Project ID** of Google cloud is required."
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 2. Chose the **Metric Type**\n To collect logs from Google Cloud Monitoring provide the required Metric type.\n\nFor more details, refer to [Google Cloud Metrics](https://cloud.google.com/monitoring/api/metrics_gcp)."
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 3. OAuth Credentials\n To Fetch Oauth client id and client secret refer to this [documentation](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Google%20Cloud%20Platform%20Cloud%20Monitoring/Data%20Connectors/Readme.md)."
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 4. Connect to Sentinel\n Click on **Connect** to start pulling monitoring logs from Google Cloud into Microsoft Sentinel."
                          }
                        },
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "GCP Project ID",
                            "name": "projectid",
                            "required": true,
                            "description": "Enter your Google Cloud Project ID."
                          }
                        },
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "Metric Type",
                            "type": "text",
                            "name": "metrictype",
                            "required": true,
                            "description": "Provide the metric types you want to collect logs for with comma separated.For example: compute.googleapis.com/instance/disk/write_bytes_count,compute.googleapis.com/instance/uptime_total"
                          }
                        },
                        {
                          "type": "OAuthForm",
                          "parameters": {
                            "clientIdLabel": "Client ID",
                            "clientSecretLabel": "Client Secret",
                            "connectButtonLabel": "Connect",
                            "disconnectButtonLabel": "Disconnect"
                          }
                        },
                        {
                          "type": "DataConnectorsGrid",
                          "parameters": {
                            "mapping": [
                              {
                                "columnName": "Metric Type",
                                "columnValue": "properties.addOnAttributes.metrictype"
                              },
                              {
                                "columnName": "Project ID",
                                "columnValue": "properties.addOnAttributes.projectid"
                              }
                            ],
                            "menuItems": [
                              "DeleteConnector"
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "version": "[variables('dataConnectorCCPVersion')]",
                      "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                      "kind": "ResourcesDataConnector"
                    }
                  ]
                }
              }
            },
            {
              "name": "GCPMonitorDCR",
              "apiVersion": "2022-06-01",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "kind": "[variables('blanks')]",
              "properties": {
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws1"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Microsoft-GCPMonitoring"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ]
                  }
                ],
                "dataCollectionEndpointId": "[variables('dataCollectionEndpointId1')]"
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "GCPMonitorCCPDefinition",
          "title": "Google Cloud Platform Cloud Monitoring (via Codeless Connector Framework)",
          "publisher": "Microsoft",
          "descriptionMarkdown": "The Google Cloud Platform Cloud Monitoring data connector ingests Monitoring logs from Google Cloud into Microsoft Sentinel using the Google Cloud Monitoring API. Refer to [Cloud Monitoring API](https://cloud.google.com/monitoring/api/v3) documentation for more details.",
          "graphQueriesTableName": "GCPMonitoring",
          "graphQueries": [
            {
              "metricName": "Total events received",
              "legend": "Google Cloud Platform Cloud Monitoring Events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "Get a sample of Google Cloud Platform Cloud Monitoring logs",
              "query": "{{graphQueriesTableName}}\n | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true,
                  "action": false
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "title": "Connect Google Cloud Platform Cloud Monitoring to Microsoft Sentinel",
              "instructions": [
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 1. Setup GCP Monitoring Integration\n To fetch logs from GCP Cloud Monitoring to Sentinel **Project ID** of Google cloud is required."
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 2. Chose the **Metric Type**\n To collect logs from Google Cloud Monitoring provide the required Metric type.\n\nFor more details, refer to [Google Cloud Metrics](https://cloud.google.com/monitoring/api/metrics_gcp)."
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 3. OAuth Credentials\n To Fetch Oauth client id and client secret refer to this [documentation](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Google%20Cloud%20Platform%20Cloud%20Monitoring/Data%20Connectors/Readme.md)."
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 4. Connect to Sentinel\n Click on **Connect** to start pulling monitoring logs from Google Cloud into Microsoft Sentinel."
                  }
                },
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "GCP Project ID",
                    "name": "projectid",
                    "required": true,
                    "description": "Enter your Google Cloud Project ID."
                  }
                },
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "Metric Type",
                    "type": "text",
                    "name": "metrictype",
                    "required": true,
                    "description": "Provide the metric types you want to collect logs for with comma separated.For example: compute.googleapis.com/instance/disk/write_bytes_count,compute.googleapis.com/instance/uptime_total"
                  }
                },
                {
                  "type": "OAuthForm",
                  "parameters": {
                    "clientIdLabel": "Client ID",
                    "clientSecretLabel": "Client Secret",
                    "connectButtonLabel": "Connect",
                    "disconnectButtonLabel": "Disconnect"
                  }
                },
                {
                  "type": "DataConnectorsGrid",
                  "parameters": {
                    "mapping": [
                      {
                        "columnName": "Metric Type",
                        "columnValue": "properties.addOnAttributes.metrictype"
                      },
                      {
                        "columnName": "Project ID",
                        "columnValue": "properties.addOnAttributes.projectid"
                      }
                    ],
                    "menuItems": [
                      "DeleteConnector"
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorCCPVersion')]",
        "source": {
          "sourceId": "[variables('_solutionId')]",
          "name": "[variables('_solutionName')]",
          "kind": "Solution"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "version": "[variables('dataConnectorCCPVersion')]",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "kind": "ResourcesDataConnector"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnections1')]",
        "displayName": "Google Cloud Platform Cloud Monitoring (via Codeless Connector Framework)",
        "contentKind": "ResourcesDataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {
            "guidValue": {
              "defaultValue": "[[newGuid()]",
              "type": "securestring"
            },
            "innerWorkspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "connectorDefinitionName": {
              "defaultValue": "Google Cloud Platform Cloud Monitoring (via Codeless Connector Framework)",
              "type": "securestring",
              "minLength": 1
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "dcrConfig": {
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              },
              "type": "object"
            },
            "projectid": {
              "defaultValue": "projectid",
              "type": "securestring",
              "minLength": 1
            },
            "metrictype": {
              "defaultValue": "metrictype",
              "type": "securestring",
              "minLength": 1
            },
            "ClientId": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 1
            },
            "ClientSecret": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 1
            },
            "AuthorizationCode": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 1
            }
          },
          "variables": {
            "commaSeparatedArray": "[[split(parameters('metrictype'), ',')]"
          },
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'GCPCloudMonitoringPolling', parameters('guidValue'), copyIndex())]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "GCPMonitorCCPDefinition",
                "dcrConfig": {
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]",
                  "streamName": "SENTINEL_GCP_MONITORING_LOGS"
                },
                "dataType": "GCPMonitoring",
                "addOnAttributes": {
                  "metrictype": "[[variables('commaSeparatedArray')[copyIndex()]]",
                  "projectid": "[[parameters('projectid')]"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$.timeSeries"
                  ],
                  "format": "json"
                },
                "paging": {
                  "pagingType": "NextPageToken",
                  "nextPageTokenJsonPath": "$.nextPageToken",
                  "pageSize": 100,
                  "PageSizeParaName": "pageSize",
                  "PageTokenParaName": "pageToken",
                  "NextPageParaName": "pageToken"
                },
                "auth": {
                  "type": "OAuth2",
                  "IsClientSecretInHeader": "true",
                  "IsCredentialsInHeaders": "true",
                  "ClientSecret": "[[parameters('clientSecret')]",
                  "ClientId": "[[parameters('clientId')]",
                  "AuthorizationCode": "[[parameters('authorizationCode')]",
                  "GrantType": "authorization_code",
                  "TokenEndpoint": "https://oauth2.googleapis.com/token",
                  "tokenEndpointHeaders": {
                    "Accept": "application/json",
                    "Content-Type": "application/x-www-form-urlencoded"
                  },
                  "authorizationEndpoint": "https://accounts.google.com/o/oauth2/auth",
                  "authorizationEndpointQueryParameters": {
                    "prompt": "consent",
                    "access_type": "offline"
                  },
                  "scope": "https://www.googleapis.com/auth/monitoring.read",
                  "redirectUri": "https://portal.azure.com/TokenAuthorize/ExtensionName/Microsoft_Azure_Security_Insights"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://monitoring.googleapis.com/v3/projects/',parameters('projectid'),'/timeSeries?filter=metric.type=\"',trim(variables('commaSeparatedArray')[copyIndex()]),'\"')]",
                  "httpMethod": "GET",
                  "queryParameters": {
                    "interval.startTime": "{_QueryWindowStartTime}",
                    "interval.endTime": "{_QueryWindowEndTime}"
                  },
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "rateLimitQPS": 10,
                  "retryCount": 3,
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json"
                  }
                },
                "isActive": true
              },
              "copy": {
                "name": "copyObject",
                "count": "[[length(variables('commaSeparatedArray'))]"
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.2",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Google Cloud Platform Cloud Monitoring",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Google%20Cloud%20Platform%20Cloud%20Monitoring/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://cloud.google.com/gcp\">Google Cloud Platform</a> Cloud Monitoring data connector provides the capability to ingest <a href=\"https://cloud.google.com/monitoring/api/metrics_gcp\">GCP Monitoring metrics</a> into Microsoft Sentinel using the GCP Monitoring API. Refer to <a href=\"https://cloud.google.com/monitoring/api/v3\">GCP Monitoring API documentation</a> for more information.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<p>• <a href=\"https://aka.ms/Sentinel-CCP_Platform\">Microsoft Sentinel Codeless Connector Framework</a></p>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/google_logo.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Google Cloud Platform Cloud Monitoring",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "version": "[variables('dataConnectorCCPVersion')]"
            }
          ]
        },
        "firstPublishDate": "2022-07-01",
        "providers": [
          "Google"
        ],
        "categories": {
          "domains": [
            "Cloud Provider"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
