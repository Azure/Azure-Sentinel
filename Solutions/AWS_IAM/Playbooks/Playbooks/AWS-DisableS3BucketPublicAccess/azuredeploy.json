{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "AWS - Disable S3 Bucket Public Access",
        "description": "This playbook disables public access AWS S3 bucket. It is triggered by an incident in Microsoft Sentinel and perform the following actions:\n 1. Get the Bucket Name from incident entities.\n 2. Call the AWS IAM Function App Connector to disable public access of S3 bucket.\n 3. Add a comment to the incident with the result of the action.",
        "prerequisites": [
            "1. Prior to the deployment of this playbook, [AWS IAM Function App Connector](../../AWS_IAM_FunctionAppConnector/azuredeploy.json) needs to be deployed under the same subscription.",
            "2. Obtain AWS IAM API credentials. Refer to [AWS IAM Function App Connector](../../AWS_IAM/Playbooks/AWS_IAM_FunctionAppConnector/readme.md) documentation."
        ],
        "postDeployment": [
            "1. Authorize each connection.",
            "2. Configure Playbook in Microsoft Sentinel Analytic Rule.",
            "3. Assign Microsoft Sentinel Responder Role to Playbook.",
            "4. Update Function App Settings with AWS Credentials.",
            "5. Check readme.md for detailed instructions."

        ],
        "prerequisitesDeployTemplateFile": "../../AWS_IAM_FunctionAppConnector/azuredeploy.json",
        "lastUpdateTime": "2025-04-24T12:00:00.000Z",
        "entities": [
            "CloudApplication"
        ],
        "tags": [
            "AWS",
            "S3"
        ],
        "support": {
            "tier": "Microsoft"
        },
        "author": {
            "name": "Microsoft"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AWS-DisableS3BucketPublicAccess",
            "type": "string"
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "functionAppName": "[concat('aws-iam-', uniqueString(resourceGroup().id))]",
        "AWSIAMFunctionAppID": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('functionAppName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                            },
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Parse_JSON_-_Get_Entities": {
                            "runAfter": {
                                "Initialize_variables_-_OutputMessage": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "kind": {
                                                "type": "string"
                                            },
                                            "properties": {
                                                "type": "object",
                                                "properties": {
                                                    "appName": {
                                                        "type": "string"
                                                    },
                                                    "friendlyName": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "For_each_Entity": {
                            "foreach": "@body('Parse_JSON_-_Get_Entities')",
                            "actions": {
                                "Condition_to_check_if_entity_type_is_CloudApplication": {
                                    "actions": {
                                        "disabls3bucketpublicaccess-DisableS3BucketPublicAccess": {
                                            "type": "Function",
                                            "inputs": {
                                                "method": "GET",
                                                "queries": {
                                                    "BucketName": "@{item()?['properties']?['appName']}"
                                                },
                                                "function": {
                                                    "id": "[concat(variables('AWSIAMFunctionAppID'), '/functions/DisableS3BucketPublicAccess')]"
                                                }
                                            }
                                        },
                                        "Condition_to_check_success": {
                                            "actions": {
                                                "Compose_Output_Message_on_success": {
                                                    "type": "Compose",
                                                    "inputs": {
                                                        "BucketName": "@{item()?['properties']?['appName']}",
                                                        "Action": "Disabled Public Access"
                                                    }
                                                },
                                                "Append_to_array_variable_-_Success_OutputMessage": {
                                                    "runAfter": {
                                                        "Compose_Output_Message_on_success": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "OutputMessage",
                                                        "value": "@outputs('Compose_Output_Message_on_success')"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "disabls3bucketpublicaccess-DisableS3BucketPublicAccess": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Compose_Output_Message_on_failure": {
                                                        "type": "Compose",
                                                        "inputs": {
                                                            "BucketName": "@{item()?['properties']?['appName']}",
                                                            "Action": "There is some issue with Playbook. Check the playbook run for more details."
                                                        }
                                                    },
                                                    "Append_to_array_variable_-_Failure_OutputMessage": {
                                                        "runAfter": {
                                                            "Compose_Output_Message_on_failure": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "AppendToArrayVariable",
                                                        "inputs": {
                                                            "name": "OutputMessage",
                                                            "value": "@outputs('Compose_Output_Message_on_failure')"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@outputs('disabls3bucketpublicaccess-DisableS3BucketPublicAccess')?['statusCode']",
                                                            200
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@item()?['kind']",
                                                    "CloudApplication"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Parse_JSON_-_Get_Entities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variables_-_OutputMessage": {
                            "runAfter": {
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "OutputMessage",
                                        "type": "array",
                                        "value": [
                                        ]
                                    }
                                ]
                            }
                        },
                        "Create_OutputMessage_HTML_table": {
                            "runAfter": {
                                "For_each_Entity": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@variables('OutputMessage')",
                                "format": "HTML"
                            }
                        },
                        "Add_comment_to_incident_(V3)": {
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p class=\"editor-paragraph\">@{body('Create_OutputMessage_HTML_table')}</p>"
                                },
                                "path": "/Incidents/Comment"
                            },
                            "runAfter": {
                                "Create_OutputMessage_HTML_table": [
                                    "Succeeded"
                                ]
                            }
                        }
                    },
                    "outputs": {
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "hidden-SentinelTemplateName": "AWS-DisableS3BucketPublicAccess",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {
                },
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}
