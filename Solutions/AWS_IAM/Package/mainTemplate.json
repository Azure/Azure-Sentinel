{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for AWS_IAM"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-amazonwebservicesiam",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "AWSIAM-AddTagToUser": "AWSIAM-AddTagToUser",
    "_AWSIAM-AddTagToUser": "[variables('AWSIAM-AddTagToUser')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "AWSIAM-AddTagToUser",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1')))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "AWSIAM-DeleteAccessKeys": "AWSIAM-DeleteAccessKeys",
    "_AWSIAM-DeleteAccessKeys": "[variables('AWSIAM-DeleteAccessKeys')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "AWSIAM-DeleteAccessKeys",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2')))]",
    "AWSIAM-EnrichIncidentWithUserInfo": "AWSIAM-EnrichIncidentWithUserInfo",
    "_AWSIAM-EnrichIncidentWithUserInfo": "[variables('AWSIAM-EnrichIncidentWithUserInfo')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "AWSIAM-EnrichIncidentWithUserInfo",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3')))]",
	"aws_iam_functionapp_id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/aws-iam-', uniqueString(resourceGroup().id))]",
    "_aws_iam_functionapp_id": "[variables('aws_iam_functionapp_id')]"																																																			  
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2022-02-01",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "AWSIAM-AddTagToUser playbook",
        "displayName": "AWSIAM-AddTagToUser playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2022-02-01",
      "name": "[concat(variables('playbookTemplateSpecName1'),'/',variables('playbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "AWSIAM-AddTagToUser Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "AWSIAM-AddTagToUser",
              "type": "String"
            },
            "TagKey": {
              "type": "String"
            },
            "TagValue": {
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "aws_iam_functionapp_id": "[variables('_aws_iam_functionapp_id')]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Accounts": {
                      "runAfter": {
                        "Initialize_variable_tag_value": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "For_each_user": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "TagUser": [
                              "Failed",
                              "TimedOut"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Tag @{variables('tag_key')} @{variables('tag_value')} was not added to user @{outputs('get_user_name')} due to error.</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Add_comment_to_incident_(V3)_2": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)": [
                              "Skipped"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Tag @{variables('tag_key')} @{variables('tag_value')} was added to user @{outputs('get_user_name')}.</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        },
                        "TagUser": {
                          "runAfter": {
                            "get_user_name": [
                              "Succeeded"
                            ]
                          },
                          "type": "Function",
                          "inputs": {
                            "function": {
                              "id": "[[concat(variables('aws_iam_functionapp_id'), '/functions/TagUser')]"
                            },
                            "method": "PUT",
                            "queries": {
                              "tag_key": "@variables('tag_key')",
                              "tag_value": "@variables('tag_value')",
                              "username": "@outputs('get_user_name')"
                            }
                          }
                        },
                        "get_user_name": {
                          "type": "Compose",
                          "inputs": "@items('For_each_user')?['Name']"
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Initialize_variable_tag_key": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "tag_key",
                            "type": "string",
                            "value": "[[parameters('TagKey')]"
                          }
                        ]
                      }
                    },
                    "Initialize_variable_tag_value": {
                      "runAfter": {
                        "Initialize_variable_tag_key": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "tag_value",
                            "type": "string",
                            "value": "[[parameters('TagValue')]"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "AWS_IAM",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "AWS IAM - Add tag to user",
            "description": "Once a new Microsoft Sentinel incident is created, this playbook gets triggered and performs the following actions:\n 1. Gets users from the incident.\n 2. [Adds tag](https://docs.aws.amazon.com/IAM/latest/APIReference/API_TagUser.html) to users in AWS (tag key and value are defined during the playbook deployment).\n 3. Adds information about added tags as a comment to the incident.",
            "prerequisites": [
              "1. Prior to the deployment of this playbook, [AWS IAM Function App Connector](https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/AWS_IAM/Playbooks/AWS_IAM_FunctionAppConnector) needs to be deployed under the same subscription.",
              "2. Obtain AWS IAM API credentials. Refer to [AWS IAM Function App Connector](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/AWS_IAM/Playbooks/AWS_IAM_FunctionAppConnector/readme.md) documentation."
            ],
            "lastUpdateTime": "2022-08-10T12:00:00Z",
            "entities": [
              "Account"
            ],
            "tags": [
              "Remediation"
            ],
            "postDeployment": [
              "**a. Authorize connections**",
              "Once deployment is complete, authorize each connection.",
              "1. Click the Microsoft Sentinel connection resource",
              "2. Click edit API connection",
              "3. Click Authorize",
              "4. Sign in",
              "5. Click Save",
              "6. Repeat steps for other connections",
              "**b. Configurations in Sentinel**",
              "1. In Microsoft sentinel, analytical rules should be configured to trigger an incident that contains user name in AWS. In the Entity maping section of the analytics rule creation workflow, user name should be mapped to **Name** identitfier of the **Account** entity type. Check the [documentation](https://learn.microsoft.com/azure/sentinel/map-data-fields-to-entities) to learn more about mapping entities.",
              "2. Configure the automation rules to trigger the playbook. Check the [documentation](https://learn.microsoft.com/azure/sentinel/tutorial-respond-threats-playbook?tabs=LAC) to learn more about automation rules."
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "AWS IAM - Add tag to user",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2022-02-01",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "AWSIAM-DeleteAccessKeys playbook",
        "displayName": "AWSIAM-DeleteAccessKeys playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2022-02-01",
      "name": "[concat(variables('playbookTemplateSpecName2'),'/',variables('playbookVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "AWSIAM-DeleteAccessKeys Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "AWSIAM-DeleteAccessKeys",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "aws_iam_functionapp_id": "[variables('_aws_iam_functionapp_id')]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Accounts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "For_each_user": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_2": {
                          "runAfter": {
                            "Scope": [
                              "Failed",
                              "TimedOut"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Playbook could not delete access keys for user @{outputs('Get_user_name')}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Get_user_name": {
                          "type": "Compose",
                          "inputs": "@items('For_each_user')?['Name']"
                        },
                        "Scope": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Create_message": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p>@{outputs('Create_message')}</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Create_HTML_table_with_access_keys": {
                              "runAfter": {
                                "For_each_access_key": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "columns": [
                                  {
                                    "value": "@item()"
                                  }
                                ],
                                "format": "HTML",
                                "from": "@body('Parse_ListAccessKeys_response')"
                              }
                            },
                            "Create_message": {
                              "runAfter": {
                                "Create_HTML_table_with_access_keys": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Compose",
                              "inputs": "User name: @{outputs('Get_user_name')}\nSuccessfuly deleted user's access keys:\n@{body('Create_HTML_table_with_access_keys')}"
                            },
                            "For_each_access_key": {
                              "foreach": "@body('Parse_ListAccessKeys_response')",
                              "actions": {
                                "DeleteAccessKey": {
                                  "type": "Function",
                                  "inputs": {
                                    "function": {
                                      "id": "[[concat(variables('aws_iam_functionapp_id'), '/functions/DeleteAccessKey')]"
                                    },
                                    "method": "DELETE",
                                    "queries": {
                                      "accesskeyid": "@items('For_each_access_key')",
                                      "username": "@outputs('Get_user_name')"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Parse_ListAccessKeys_response": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Foreach"
                            },
                            "ListAccessKeys": {
                              "type": "Function",
                              "inputs": {
                                "function": {
                                  "id": "[[concat(variables('aws_iam_functionapp_id'), '/functions/ListAccessKeys')]"
                                },
                                "method": "GET",
                                "queries": {
                                  "username": "@outputs('Get_user_name')"
                                }
                              }
                            },
                            "Parse_ListAccessKeys_response": {
                              "runAfter": {
                                "ListAccessKeys": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('ListAccessKeys')",
                                "schema": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Get_user_name": [
                              "Succeeded"
                            ]
                          },
                          "type": "Scope"
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "AWS_IAM",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "AWS IAM - Delete access keys",
            "description": "Once a new Microsoft Sentinel incident is created, this playbook gets triggered and performs the following actions:\n 1. Gets users from the incident.\n 2. [Get list of access keys](https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAccessKeys.html) from these users. \n 3. Delete selected access keys. \n 4. Adds information about deleted user's access keys as a comment to the incident.",
            "prerequisites": [
              "1. Prior to the deployment of this playbook, [AWS IAM Function App Connector](https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/AWS_IAM/Playbooks/AWS_IAM_FunctionAppConnector) needs to be deployed under the same subscription.",
              "2. Obtain AWS IAM API credentials. Refer to [AWS IAM Function App Connector](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/AWS_IAM/Playbooks/AWS_IAM_FunctionAppConnector/readme.md) documentation."
            ],
            "lastUpdateTime": "2022-08-10T12:00:00Z",
            "entities": [
              "Account"
            ],
            "tags": [
              "Remediation"
            ],
            "postDeployment": [
              "**a. Authorize connections**",
              "Once deployment is complete, authorize each connection.",
              "1. Click the Microsoft Sentinel connection resource",
              "2. Click edit API connection",
              "3. Click Authorize",
              "4. Sign in",
              "5. Click Save",
              "6. Repeat steps for other connections",
              "**b. Configurations in Sentinel**",
              "1. In Microsoft sentinel, analytical rules should be configured to trigger an incident that contains user name in AWS. In the Entity maping section of the analytics rule creation workflow, user name should be mapped to **Name** identitfier of the **Account** entity type. Check the [documentation](https://learn.microsoft.com/azure/sentinel/map-data-fields-to-entities) to learn more about mapping entities.",
              "2. Configure the automation rules to trigger the playbook. Check the [documentation](https://learn.microsoft.com/azure/sentinel/tutorial-respond-threats-playbook?tabs=LAC) to learn more about automation rules."
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "AWS IAM - Delete access keys",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2022-02-01",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "properties": {
        "description": "AWSIAM-EnrichIncidentWithUserInfo playbook",
        "displayName": "AWSIAM-EnrichIncidentWithUserInfo playbook"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2022-02-01",
      "name": "[concat(variables('playbookTemplateSpecName3'),'/',variables('playbookVersion3'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Playbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('playbookTemplateSpecName3'))]"
      ],
      "properties": {
        "description": "AWSIAM-EnrichIncidentWithUserInfo Playbook with template version 2.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "AWSIAM-EnrichIncidentWithUserInfo",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "aws_iam_functionapp_id": "[variables('_aws_iam_functionapp_id')]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Accounts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/account"
                      }
                    },
                    "For_each_user": {
                      "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_2": {
                          "runAfter": {
                            "Scope": [
                              "TimedOut",
                              "Failed"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Playbook could not obtain information about user @{outputs('Get_user_name')}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Get_user_name": {
                          "type": "Compose",
                          "inputs": "@items('For_each_user')?['Name']"
                        },
                        "Scope": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Create_message": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p>@{outputs('Create_message')}</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Create_HTML_table_with_tags": {
                              "runAfter": {
                                "Parse_GetUser_response": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@body('Parse_GetUser_response')?['Tags']"
                              }
                            },
                            "Create_HTML_table_with_user_groups": {
                              "runAfter": {
                                "Select_user_groups_fields_for_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "format": "HTML",
                                "from": "@body('Select_user_groups_fields_for_table')"
                              }
                            },
                            "Create_message": {
                              "runAfter": {
                                "Create_HTML_table_with_user_groups": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Compose",
                              "inputs": "User name: @{body('Parse_GetUser_response')?['UserName']}\nUser ID: @{body('Parse_GetUser_response')?['UserId']}\nUser create date: @{body('Parse_GetUser_response')?['CreateDate']}\nUser tags:\n@{body('Create_HTML_table_with_tags')}\nUser groups:\n@{body('Create_HTML_table_with_user_groups')}"
                            },
                            "GetUser": {
                              "type": "Function",
                              "inputs": {
                                "function": {
                                  "id": "[[concat(variables('aws_iam_functionapp_id'), '/functions/GetUser')]"
                                },
                                "method": "GET",
                                "queries": {
                                  "username": "@outputs('Get_user_name')"
                                }
                              }
                            },
                            "ListGroupsForUser": {
                              "runAfter": {
                                "GetUser": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Function",
                              "inputs": {
                                "function": {
                                  "id": "[[concat(variables('aws_iam_functionapp_id'), '/functions/ListGroupsForUser')]"
                                },
                                "method": "GET",
                                "queries": {
                                  "username": "@outputs('Get_user_name')"
                                }
                              }
                            },
                            "Parse_GetUser_response": {
                              "runAfter": {
                                "ListGroupsForUser": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('GetUser')",
                                "schema": {
                                  "properties": {
                                    "Arn": {
                                      "type": "string"
                                    },
                                    "CreateDate": {
                                      "type": "string"
                                    },
                                    "Path": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "items": {
                                        "properties": {
                                          "Key": {
                                            "type": "string"
                                          },
                                          "Value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "Key",
                                          "Value"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "UserId": {
                                      "type": "string"
                                    },
                                    "UserName": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Parse_ListGroupsForUser_response": {
                              "runAfter": {
                                "Create_HTML_table_with_tags": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('ListGroupsForUser')",
                                "schema": {
                                  "items": {
                                    "properties": {
                                      "Arn": {
                                        "type": "string"
                                      },
                                      "CreateDate": {
                                        "type": "string"
                                      },
                                      "GroupId": {
                                        "type": "string"
                                      },
                                      "GroupName": {
                                        "type": "string"
                                      },
                                      "Path": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "Path",
                                      "GroupName",
                                      "GroupId",
                                      "Arn",
                                      "CreateDate"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "Select_user_groups_fields_for_table": {
                              "runAfter": {
                                "Parse_ListGroupsForUser_response": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Select",
                              "inputs": {
                                "from": "@body('Parse_ListGroupsForUser_response')",
                                "select": {
                                  "GroupId": "@item()['GroupId']",
                                  "GroupName": "@item()['GroupName']"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Get_user_name": [
                              "Succeeded"
                            ]
                          },
                          "type": "Scope"
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_Accounts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]"
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "AWS_IAM",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "AWS IAM - Enrich incident with user info",
            "description": "Once a new Microsoft Sentinel incident is created, this playbook gets triggered and performs the following actions:\n 1. Gets users from the incident.\n 2. Obtains information about users in AWS IAM.\n 3. Adds obtained information as a comment to the incident.",
            "prerequisites": [
              "1. Prior to the deployment of this playbook, [AWS IAM Function App Connector](https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/AWS_IAM/Playbooks/AWS_IAM_FunctionAppConnector) needs to be deployed under the same subscription.",
              "2. Obtain AWS IAM API credentials. Refer to [AWS IAM Function App Connector](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/AWS_IAM/Playbooks/AWS_IAM_FunctionAppConnector/readme.md) documentation."
            ],
            "lastUpdateTime": "2022-08-10T12:00:00Z",
            "entities": [
              "Account"
            ],
            "tags": [
              "Enrichment"
            ],
            "postDeployment": [
              "**a. Authorize connections**",
              "Once deployment is complete, authorize each connection.",
              "1. Click the Microsoft Sentinel connection resource",
              "2. Click edit API connection",
              "3. Click Authorize",
              "4. Sign in",
              "5. Click Save",
              "6. Repeat steps for other connections",
              "**b. Configurations in Sentinel**",
              "1. In Microsoft sentinel, analytical rules should be configured to trigger an incident that contains user name in AWS. In the Entity maping section of the analytics rule creation workflow, user name should be mapped to **Name** identitfier of the **Account** entity type. Check the [documentation](https://learn.microsoft.com/azure/sentinel/map-data-fields-to-entities) to learn more about mapping entities.",
              "2. Configure the automation rules to trigger the playbook. Check the [documentation](https://learn.microsoft.com/azure/sentinel/tutorial-respond-threats-playbook?tabs=LAC) to learn more about automation rules."
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "AWS IAM - Enrich incident with user info",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "AWS_IAM",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Playbook",
              "contentId": "[variables('_AWSIAM-AddTagToUser')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_AWSIAM-DeleteAccessKeys')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_AWSIAM-EnrichIncidentWithUserInfo')]",
              "version": "[variables('playbookVersion3')]"
            }
          ]
        },
        "firstPublishDate": "2022-09-28",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Identity",
            "Security - Automation (SOAR)"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
