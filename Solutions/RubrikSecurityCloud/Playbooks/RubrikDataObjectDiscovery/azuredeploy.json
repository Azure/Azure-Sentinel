{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "Rubrik Data Object Discovery",
        "description":  "This playbook queries Rubrik Security Cloud to enrich the incoming event with additional information from Rubrik about the object and it's snapshots that the event refers to.",
        "prerequisites":  [
            "1. The Rubrik Security Cloud data connector should be configured to send appropriate events to Microsoft Sentinel.",
            "2. The Rubrik Security Cloud solution should be configured to [connect to Rubrik Security Cloud API end points using a Service Account](https://docs.rubrik.com/en-us/saas/saas/polaris_api_access_with_service_accounts.html), the service account should be assigned a role that includes the relevant privileges necessary to perform the desired operations (see [Roles and Permissions](https://docs.rubrik.com/en-us/saas/saas/common/roles_and_permissions.html) in the Rubrik Security Cloud user guide).",
            "3. Rubrik custom connector needs to be deployed prior to the deployment of this playbook, in the same resource group and region. Relevant instructions can be found in the connector doc page.",
            "4. Store Service account credentials in Key Vault and obtain keyvault name and tenantId",
                "a. Create a Key Vault with unique name",
                "b. Go to KeyVault -> secrets -> Generate/import and create 'Rubrik-AS-Int-ClientId' & 'Rubrik-AS-Int-ClientSecret' for storing client_id and client_secret respectively"
        ],
        "postDeployment":  [
            "**a. Authorize connections**",
            "Once deployment is complete, authorize each connection.",
            "1. Click the Custom Connector connection resource",
            "2. Click edit API connection",
            "3. Click Authorize",
            "4. Sign in",
            "5. Click Save",
            "6. Repeat steps for other connections"
        ],
        "prerequisitesDeployTemplateFile": "Azure-Sentinel/Solutions/RubrikSecurityCloud/Playbooks/RubrikCustomConnector/Rubrik_custom_conn.json",
        "lastUpdateTime":  "2022-01-20T00:00:00.000Z",
        "entities":  ["account","url"],
        "tags":  ["Object","Discovery","Security","Rubrik"],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  "Rubrik"
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "RubrikDataObjectDiscovery",
            "type":  "string"
        },
        "Rubrik Connector name": {
            "defaultValue": "RubrikCustomConnector",
            "type": "String",
            "metadata": {
                "description": "Rubrik Custom Connector name"
            }
        },
        "keyvaultName": {
            "defaultValue": "RubrikSentinelKeyVault",
            "type": "string"
        },
        "tenantId": {
            "type": "string"
        }
    },
    "variables":  {
        "RubrikcustomconnectorConnectionName":  "[concat('Rubrikcustomconnector-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName":  "[concat('Keyvault-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "manual":  {
                            "type":  "Request",
                            "kind":  "Http",
                            "inputs":  {
                                "schema":  {
                                    "properties":  {
                                        "BaseUrl":  {
                                            "type":  "string"
                                        },
                                        "ObjectId":  {
                                            "type":  "string"
                                        },
                                        "ObjectName":  {
                                            "type":  "string"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        }
                    },
                    "actions":  {
                        "Authentication_2":  {
                            "runAfter":  {
                                "ClientSecret":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "client_id":  "@body('ClientId')?['value']",
                                    "client_secret":  "@body('ClientSecret')?['value']"
                                },
                                "headers":  {
                                    "Content-Type":  "application/json"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['RubrikCustomConnector']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/api/client_token"
                            },
                            "runtimeConfiguration":  {
                                "secureData":  {
                                    "properties":  [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "ClientId":  {
                            "runAfter":  {
                                "Initialize_error_message_variable_for_vm":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['keyvault_1']['connectionId']"
                                    }
                                },
                                "method":  "get",
                                "path":  "/secrets/@{encodeURIComponent('Rubrik-AS-Int-ClientId')}/value"
                            },
                            "runtimeConfiguration":  {
                                "secureData":  {
                                    "properties":  [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "ClientSecret":  {
                            "runAfter":  {
                                "ClientId":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['keyvault_1']['connectionId']"
                                    }
                                },
                                "method":  "get",
                                "path":  "/secrets/@{encodeURIComponent('Rubrik-AS-Int-ClientSecret')}/value"
                            },
                            "runtimeConfiguration":  {
                                "secureData":  {
                                    "properties":  [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Initialize_Object_Name":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "ObjectName",
                                        "type":  "string",
                                        "value":  "@{triggerBody()?['ObjectName']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_1_File":  {
                            "runAfter":  {
                                "access_token":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckConditionFile1",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_1_Snapshot":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_4_VM":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckCondition9",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_1_VM":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_4_File":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckCondition5",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_2_File":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_1_File":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckConditionFile2",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_2_Snapshot":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_1_Snapshot":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckCondition10",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_2_VM":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_1_VM":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckCondition6",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_3_File":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_2_File":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckConditionFile3",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_3_Snapshot":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_2_Snapshot":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckCondition11",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_3_VM":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_2_VM":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckCondition7",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_4_File":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_3_File":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckConditionFile4",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_check_condition_-_4_VM":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_3_VM":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "CheckCondition8",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_error_message_variable_for_file":  {
                            "runAfter":  {
                                "Initialize_variable_for_general_error_message":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "ErrorMessageFile",
                                        "type":  "string",
                                        "value":  "No Errors"
                                    }
                                ]
                            }
                        },
                        "Initialize_error_message_variable_for_vm":  {
                            "runAfter":  {
                                "Initialize_error_message_variable_for_file":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "ErrorMessageVm",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_terminate_variable_for_File":  {
                            "runAfter":  {
                                "Initialize_check_condition_-_3_Snapshot":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "terminate",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_terminate_variable_for_Snapshot":  {
                            "runAfter":  {
                                "Initialize_terminate_variable_for_VM":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "terminateFileset",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_terminate_variable_for_VM":  {
                            "runAfter":  {
                                "Initialize_terminate_variable_for_File":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "terminateVM",
                                        "type":  "boolean",
                                        "value":  "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_Object_Id":  {
                            "runAfter":  {
                                "Initialize_Object_Name":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "ObjectId",
                                        "type":  "string",
                                        "value":  "@{triggerBody()?['ObjectId']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_for_general_error_message":  {
                            "runAfter":  {
                                "Initialize_variable_Object_Id":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "ErrorMessage",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Is_Authentication_Failed":  {
                            "actions":  {
                                "Response_if_status_code_is_NOT_200":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Response",
                                    "kind":  "Http",
                                    "inputs":  {
                                        "body":  "@body('Authentication_2')?['message']",
                                        "statusCode":  "@outputs('Authentication_2')['statusCode']"
                                    }
                                },
                                "auth_failed":  {
                                    "runAfter":  {
                                        "Response_if_status_code_is_NOT_200":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Terminate",
                                    "inputs":  {
                                        "runError":  {
                                            "code":  "@{outputs('Authentication_2')['statusCode']}",
                                            "message":  "@{body('Authentication_2')?['message']}"
                                        },
                                        "runStatus":  "Failed"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Authentication_2":  [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "not":  {
                                            "equals":  [
                                                "@outputs('Authentication_2')['statusCode']",
                                                200
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "Is_there_an_Object_Name":  {
                            "actions":  {
                                "Check_for_effective_Sla_domain_Id_is_empty_or_not":  {
                                    "actions":  {
                                        "Check_for_effective_Sla_domain_Id":  {
                                            "foreach":  "@body('Parse_Search_the_global_objects')?['data']?['globalSearchResults']?['nodes']",
                                            "actions":  {
                                                "Condition_7":  {
                                                    "actions":  {
                                                        "Set_variable_16":  {
                                                            "runAfter":  {
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "CheckConditionFile4",
                                                                "value":  "@true"
                                                            }
                                                        }
                                                    },
                                                    "runAfter":  {
                                                    },
                                                    "else":  {
                                                        "actions":  {
                                                            "Set_variable_17":  {
                                                                "runAfter":  {
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "CheckConditionFile4",
                                                                    "value":  "@{false}"
                                                                }
                                                            },
                                                            "Set_variable_18":  {
                                                                "runAfter":  {
                                                                    "Set_variable_17":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "terminate",
                                                                    "value":  "@false"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression":  {
                                                        "and":  [
                                                            {
                                                                "not":  {
                                                                    "equals":  [
                                                                        "@items('check_for_effective_Sla_domain_Id')?['effectiveSlaDomain']?['id']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Check_for_physical_Path_name_":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  "@equals(variables('terminate'), true)",
                                    "limit":  {
                                        "count":  60,
                                        "timeout":  "PT1H"
                                    },
                                    "type":  "Until"
                                },
                                "Check_for_effective_Sla_domain_Id_is_empty_or_not_VM":  {
                                    "actions":  {
                                        "For_each_7":  {
                                            "foreach":  "@body('Parse_Search_the_global_objects')?['data']?['globalSearchResults']?['nodes']",
                                            "actions":  {
                                                "Condition_13":  {
                                                    "actions":  {
                                                        "Set_variable_28":  {
                                                            "runAfter":  {
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "CheckCondition8",
                                                                "value":  "@true"
                                                            }
                                                        }
                                                    },
                                                    "runAfter":  {
                                                    },
                                                    "else":  {
                                                        "actions":  {
                                                            "Set_variable_29":  {
                                                                "runAfter":  {
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "CheckCondition8",
                                                                    "value":  "@false"
                                                                }
                                                            },
                                                            "Set_variable_30":  {
                                                                "runAfter":  {
                                                                    "Set_variable_29":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "terminateVM",
                                                                    "value":  "@false"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression":  {
                                                        "and":  [
                                                            {
                                                                "not":  {
                                                                    "equals":  [
                                                                        "@items('For_each_7')?['effectiveSlaDomain']?['id']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Check_for_physical_Path_name_VM":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  "@equals(variables('terminateVM'), true)",
                                    "limit":  {
                                        "count":  60,
                                        "timeout":  "PT1H"
                                    },
                                    "type":  "Until"
                                },
                                "Check_for_id_and_name_which_has_File_data":  {
                                    "actions":  {
                                        "Check_for_id_and_name":  {
                                            "foreach":  "@body('Parse_Search_the_global_objects')?['data']?['globalSearchResults']?['edges']",
                                            "actions":  {
                                                "Condition_3":  {
                                                    "actions":  {
                                                        "Condition_4":  {
                                                            "actions":  {
                                                                "Set_variable_10":  {
                                                                    "runAfter":  {
                                                                    },
                                                                    "type":  "SetVariable",
                                                                    "inputs":  {
                                                                        "name":  "CheckConditionFile2",
                                                                        "value":  "@true"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter":  {
                                                            },
                                                            "else":  {
                                                                "actions":  {
                                                                    "Set_variable_11":  {
                                                                        "runAfter":  {
                                                                        },
                                                                        "type":  "SetVariable",
                                                                        "inputs":  {
                                                                            "name":  "CheckConditionFile2",
                                                                            "value":  "@false"
                                                                        }
                                                                    },
                                                                    "Set_variable_12":  {
                                                                        "runAfter":  {
                                                                            "Set_variable_11":  [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type":  "SetVariable",
                                                                        "inputs":  {
                                                                            "name":  "terminate",
                                                                            "value":  "@false"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression":  {
                                                                "and":  [
                                                                    {
                                                                        "not":  {
                                                                            "equals":  [
                                                                                "@items('Check_for_id_and_name')?['node']?['id']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "not":  {
                                                                            "equals":  [
                                                                                "@items('Check_for_id_and_name')?['node']?['name']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type":  "If"
                                                        }
                                                    },
                                                    "runAfter":  {
                                                    },
                                                    "else":  {
                                                        "actions":  {
                                                            "Set_variable_44":  {
                                                                "runAfter":  {
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "CheckConditionFile2",
                                                                    "value":  "@false"
                                                                }
                                                            },
                                                            "Set_variable_45":  {
                                                                "runAfter":  {
                                                                    "Set_variable_44":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "terminate",
                                                                    "value":  "@false"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression":  {
                                                        "and":  [
                                                            {
                                                                "contains":  [
                                                                    "@items('Check_for_id_and_name')?['node']?['objectType']",
                                                                    "File"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Check_snapshotId_is_empty_or_not":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  "@equals(variables('terminate'), true)",
                                    "limit":  {
                                        "count":  60,
                                        "timeout":  "PT1H"
                                    },
                                    "type":  "Until"
                                },
                                "Check_for_id_and_name_which_has_VM_data":  {
                                    "actions":  {
                                        "For_each_4":  {
                                            "foreach":  "@body('Parse_Search_the_global_objects')?['data']?['globalSearchResults']?['edges']",
                                            "actions":  {
                                                "Condition_9":  {
                                                    "actions":  {
                                                        "Condition_10":  {
                                                            "actions":  {
                                                                "Set_variable_22":  {
                                                                    "runAfter":  {
                                                                    },
                                                                    "type":  "SetVariable",
                                                                    "inputs":  {
                                                                        "name":  "CheckCondition6",
                                                                        "value":  "@true"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter":  {
                                                            },
                                                            "else":  {
                                                                "actions":  {
                                                                    "Set_variable_23":  {
                                                                        "runAfter":  {
                                                                        },
                                                                        "type":  "SetVariable",
                                                                        "inputs":  {
                                                                            "name":  "CheckCondition6",
                                                                            "value":  "@false"
                                                                        }
                                                                    },
                                                                    "Set_variable_24":  {
                                                                        "runAfter":  {
                                                                            "Set_variable_23":  [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type":  "SetVariable",
                                                                        "inputs":  {
                                                                            "name":  "terminateVM",
                                                                            "value":  "@false"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression":  {
                                                                "and":  [
                                                                    {
                                                                        "not":  {
                                                                            "equals":  [
                                                                                "@items('For_each_4')?['node']?['id']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "not":  {
                                                                            "equals":  [
                                                                                "@items('For_each_4')?['node']?['name']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type":  "If"
                                                        }
                                                    },
                                                    "runAfter":  {
                                                    },
                                                    "expression":  {
                                                        "and":  [
                                                            {
                                                                "contains":  [
                                                                    "@items('For_each_4')?['node']?['objectType']",
                                                                    "VM"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Check_snapshotId_is_empty_or_not_in_VM":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  "@equals(variables('terminateVM'), true)",
                                    "limit":  {
                                        "count":  60,
                                        "timeout":  "PT1H"
                                    },
                                    "type":  "Until"
                                },
                                "Check_for_physical_Path_name_":  {
                                    "actions":  {
                                        "For_each":  {
                                            "foreach":  "@body('Parse_Search_the_global_objects')?['data']?['globalSearchResults']?['nodes']",
                                            "actions":  {
                                                "For_each_2":  {
                                                    "foreach":  "@items('For_each')?['physicalPath']",
                                                    "actions":  {
                                                        "Condition_5":  {
                                                            "actions":  {
                                                                "Condition_6":  {
                                                                    "actions":  {
                                                                        "Set_variable_13":  {
                                                                            "runAfter":  {
                                                                            },
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "CheckConditionFile3",
                                                                                "value":  "@true"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter":  {
                                                                    },
                                                                    "else":  {
                                                                        "actions":  {
                                                                            "Set_variable_14":  {
                                                                                "runAfter":  {
                                                                                },
                                                                                "type":  "SetVariable",
                                                                                "inputs":  {
                                                                                    "name":  "CheckConditionFile3",
                                                                                    "value":  "@false"
                                                                                }
                                                                            },
                                                                            "Set_variable_15":  {
                                                                                "runAfter":  {
                                                                                    "Set_variable_14":  [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type":  "SetVariable",
                                                                                "inputs":  {
                                                                                    "name":  "terminate",
                                                                                    "value":  "@true"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression":  {
                                                                        "and":  [
                                                                            {
                                                                                "not":  {
                                                                                    "equals":  [
                                                                                        "@items('For_each_2')?['name']",
                                                                                        "@null"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type":  "If"
                                                                }
                                                            },
                                                            "runAfter":  {
                                                            },
                                                            "expression":  {
                                                                "and":  [
                                                                    {
                                                                        "equals":  [
                                                                            "@items('For_each_2')?['objectType']",
                                                                            "VSphereHost"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type":  "If"
                                                        }
                                                    },
                                                    "runAfter":  {
                                                    },
                                                    "type":  "Foreach"
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Check_for_id_and_name_which_has_File_data":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  "@equals(variables('terminate'), false)",
                                    "limit":  {
                                        "count":  60,
                                        "timeout":  "PT1H"
                                    },
                                    "type":  "Until"
                                },
                                "Check_for_physical_Path_name_VM":  {
                                    "actions":  {
                                        "For_each_5":  {
                                            "foreach":  "@body('Parse_Search_the_global_objects')?['data']?['globalSearchResults']?['nodes']",
                                            "actions":  {
                                                "For_each_6":  {
                                                    "foreach":  "@items('For_each_5')?['physicalPath']",
                                                    "actions":  {
                                                        "Condition_11":  {
                                                            "actions":  {
                                                                "Condition_12":  {
                                                                    "actions":  {
                                                                        "Set_variable_25":  {
                                                                            "runAfter":  {
                                                                            },
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "CheckCondition7",
                                                                                "value":  "@true"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter":  {
                                                                    },
                                                                    "else":  {
                                                                        "actions":  {
                                                                            "Set_variable_26":  {
                                                                                "runAfter":  {
                                                                                },
                                                                                "type":  "SetVariable",
                                                                                "inputs":  {
                                                                                    "name":  "CheckCondition7",
                                                                                    "value":  "@false"
                                                                                }
                                                                            },
                                                                            "Set_variable_27":  {
                                                                                "runAfter":  {
                                                                                    "Set_variable_26":  [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type":  "SetVariable",
                                                                                "inputs":  {
                                                                                    "name":  "terminateVM",
                                                                                    "value":  "@true"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression":  {
                                                                        "and":  [
                                                                            {
                                                                                "not":  {
                                                                                    "equals":  [
                                                                                        "@items('For_each_6')?['name']",
                                                                                        "@null"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type":  "If"
                                                                }
                                                            },
                                                            "runAfter":  {
                                                            },
                                                            "expression":  {
                                                                "and":  [
                                                                    {
                                                                        "equals":  [
                                                                            "@items('For_each_6')?['objectType']",
                                                                            "VSphereVCenter"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type":  "If"
                                                        }
                                                    },
                                                    "runAfter":  {
                                                    },
                                                    "type":  "Foreach"
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Check_for_id_and_name_which_has_VM_data":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  "@equals(variables('terminateVM'), false)",
                                    "limit":  {
                                        "count":  60,
                                        "timeout":  "PT1H"
                                    },
                                    "type":  "Until"
                                },
                                "Check_snapshotId_is_empty_or_not":  {
                                    "actions":  {
                                        "check_snapshotId":  {
                                            "foreach":  "@body('Parse_Search_the_global_objects')?['data']?['globalSearchResults']?['nodes']",
                                            "actions":  {
                                                "Condition":  {
                                                    "actions":  {
                                                        "Set_variable_5":  {
                                                            "runAfter":  {
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "CheckConditionFile1",
                                                                "value":  "@true"
                                                            }
                                                        }
                                                    },
                                                    "runAfter":  {
                                                    },
                                                    "else":  {
                                                        "actions":  {
                                                            "Set_variable_8":  {
                                                                "runAfter":  {
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "CheckConditionFile1",
                                                                    "value":  "@false"
                                                                }
                                                            },
                                                            "Set_variable_9":  {
                                                                "runAfter":  {
                                                                    "Set_variable_8":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "terminate",
                                                                    "value":  "@true"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression":  {
                                                        "and":  [
                                                            {
                                                                "not":  {
                                                                    "equals":  [
                                                                        "@items('check_snapshotId')?['snapshotDistribution']?['id']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "List_the_snapshots_for_all_objects_gets_status_code_200_or_not":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  "@equals(variables('terminate'), false)",
                                    "limit":  {
                                        "count":  60,
                                        "timeout":  "PT1H"
                                    },
                                    "type":  "Until"
                                },
                                "Check_snapshotId_is_empty_or_not_in_VM":  {
                                    "actions":  {
                                        "For_each_3":  {
                                            "foreach":  "@body('Parse_Search_the_global_objects')?['data']?['globalSearchResults']?['nodes']",
                                            "actions":  {
                                                "Condition_8":  {
                                                    "actions":  {
                                                        "Set_variable_19":  {
                                                            "runAfter":  {
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "CheckCondition5",
                                                                "value":  "@true"
                                                            }
                                                        }
                                                    },
                                                    "runAfter":  {
                                                    },
                                                    "else":  {
                                                        "actions":  {
                                                            "Set_variable_20":  {
                                                                "runAfter":  {
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "CheckCondition5",
                                                                    "value":  "@false"
                                                                }
                                                            },
                                                            "Set_variable_21":  {
                                                                "runAfter":  {
                                                                    "Set_variable_20":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "terminateVM",
                                                                    "value":  "@true"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression":  {
                                                        "and":  [
                                                            {
                                                                "not":  {
                                                                    "equals":  [
                                                                        "@items('For_each_3')?['snapshotDistribution']?['id']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "List_the_snapshots_for_all_objects_gets_status_code_200_or_not":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  "@equals(variables('terminateVM'), false)",
                                    "limit":  {
                                        "count":  60,
                                        "timeout":  "PT1H"
                                    },
                                    "type":  "Until"
                                },
                                "Is_Fileset_data_returned":  {
                                    "actions":  {
                                    },
                                    "runAfter":  {
                                        "Check_for_effective_Sla_domain_Id_is_empty_or_not":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                            "Set_variable_40":  {
                                                "runAfter":  {
                                                },
                                                "type":  "SetVariable",
                                                "inputs":  {
                                                    "name":  "ErrorMessageFile",
                                                    "value":  "No data for this type was obtained"
                                                }
                                            }
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "not":  {
                                                    "equals":  [
                                                        "@variables('CheckConditionFile1')",
                                                        "@false"
                                                    ]
                                                }
                                            },
                                            {
                                                "not":  {
                                                    "equals":  [
                                                        "@variables('CheckConditionFile2')",
                                                        "@false"
                                                    ]
                                                }
                                            },
                                            {
                                                "not":  {
                                                    "equals":  [
                                                        "@variables('CheckConditionFile3')",
                                                        "@false"
                                                    ]
                                                }
                                            },
                                            {
                                                "not":  {
                                                    "equals":  [
                                                        "@variables('CheckConditionFile4')",
                                                        "@false"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "Is_VM_data_returned":  {
                                    "actions":  {
                                    },
                                    "runAfter":  {
                                        "Check_for_effective_Sla_domain_Id_is_empty_or_not_VM":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                            "Set_variable_41":  {
                                                "runAfter":  {
                                                },
                                                "type":  "SetVariable",
                                                "inputs":  {
                                                    "name":  "ErrorMessageVm",
                                                    "value":  "No data for this type was obtained"
                                                }
                                            }
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@variables('CheckCondition5')",
                                                    "@true"
                                                ]
                                            },
                                            {
                                                "equals":  [
                                                    "@variables('CheckCondition6')",
                                                    "@true"
                                                ]
                                            },
                                            {
                                                "equals":  [
                                                    "@variables('CheckCondition7')",
                                                    "@true"
                                                ]
                                            },
                                            {
                                                "equals":  [
                                                    "@variables('CheckCondition8')",
                                                    "@true"
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "List_the_snapshots_for_all_objects_2":  {
                                    "runAfter":  {
                                        "Search_the_global_objects_gets_status_code_200_or_not":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "body":  {
                                            "query":  "query SnapshotsListSingleQuery($workloadId: String!, $first: Int, $after: String, $snapshotFilter: [SnapshotQueryFilterInput!], $sortBy: SnapshotQuerySortByField, $sortOrder: SortOrder, $timeRange: TimeRangeInput) {\r\n  snapshotsListConnection: snapshotOfASnappableConnection(\r\n    workloadId: $workloadId\r\n    first: $first\r\n    after: $after\r\n    snapshotFilter: $snapshotFilter\r\n    sortBy: $sortBy\r\n    sortOrder: $sortOrder\r\n    timeRange: $timeRange\r\n  ) {\r\n    edges {\r\n      node {\r\n        id\r\n        date\r\n        expirationDate\r\n        isOnDemandSnapshot\r\n        ... on CdmSnapshot {\r\n          cdmVersion\r\n          isDownloadedSnapshot\r\n          cluster {\r\n            id\r\n            name\r\n            version\r\n            status\r\n          }\r\n          pendingSnapshotDeletion {\r\n            id: snapshotFid\r\n            status\r\n          }\r\n          slaDomain {\r\n            name\r\n            ... on ClusterSlaDomain {\r\n              fid\r\n              cluster {\r\n                id\r\n                name\r\n              }\r\n            }\r\n            ... on GlobalSlaReply {\r\n              id\r\n            }\r\n          }\r\n          pendingSla {\r\n            id\r\n            name\r\n          }\r\n          snapshotRetentionInfo {\r\n            archivalInfos {\r\n              name\r\n              isExpirationDateCalculated\r\n              expirationTime\r\n            }\r\n            localInfo {\r\n              name\r\n              isExpirationDateCalculated\r\n              expirationTime\r\n            }\r\n            replicationInfos {\r\n              name\r\n              isExpirationDateCalculated\r\n              expirationTime\r\n            }\r\n          }\r\n          sapHanaAppMetadata {\r\n            backupId\r\n            backupPrefix\r\n            snapshotType\r\n            files {\r\n              backupFileSizeInBytes\r\n            }\r\n          }\r\n          legalHoldInfo {\r\n            shouldHoldInPlace\r\n          }\r\n        }\r\n        ... on PolarisSnapshot {\r\n          isDownloadedSnapshot\r\n          isReplica\r\n          isArchivalCopy\r\n          slaDomain {\r\n            name\r\n            ... on ClusterSlaDomain {\r\n              fid\r\n              cluster {\r\n                id\r\n                name\r\n              }\r\n            }\r\n            ... on GlobalSlaReply {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    pageInfo {\r\n      endCursor\r\n      hasNextPage\r\n    }\r\n  }\r\n}\r\n",
                                            "variables":  {
                                                "snapshotFilter":  [
                                                    {
                                                        "field":  "SNAPSHOT_TYPE",
                                                        "typeFilters":  [
                                                            "ON_DEMAND"
                                                        ]
                                                    }
                                                ],
                                                "sortBy":  "CREATION_TIME",
                                                "sortOrder":  "DESC",
                                                "timeRange":  {
                                                    "end":  "2022-12-05",
                                                    "start":  "2022-11-21"
                                                },
                                                "workloadId":  "@{triggerBody()?['ObjectId']}"
                                            }
                                        },
                                        "headers":  {
                                            "Authorization":  "Bearer @{variables('access_token')}",
                                            "Content-Type":  "application/json"
                                        },
                                        "method":  "POST",
                                        "path":  "/api/graphql",
                                        "uri":  "@{triggerBody()?['BaseUrl']}/api/graphql"
                                    }
                                },
                                "List_the_snapshots_for_all_objects_gets_status_code_200_or_not":  {
                                    "actions":  {
                                        "check_for_error_in_response":  {
                                            "actions":  {
                                                "Response_if_has_error_in_response_":  {
                                                    "runAfter":  {
                                                        "Set_error_message_if_has_error_in_response_2":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "Response",
                                                    "kind":  "Http",
                                                    "inputs":  {
                                                        "body":  "@variables('ErrorMessage')",
                                                        "statusCode":  200
                                                    }
                                                },
                                                "Set_error_message_if_has_error_in_response_2":  {
                                                    "runAfter":  {
                                                    },
                                                    "type":  "SetVariable",
                                                    "inputs":  {
                                                        "name":  "ErrorMessage",
                                                        "value":  "@{body('List_the_snapshots_for_all_objects_2')?['errors'][0]?['message']}"
                                                    }
                                                },
                                                "Terminate_if_has_error_in_response_":  {
                                                    "runAfter":  {
                                                        "Response_if_has_error_in_response_":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "Terminate",
                                                    "inputs":  {
                                                        "runError":  {
                                                            "code":  "@{outputs('List_the_snapshots_for_all_objects_2')?['statusCode']}",
                                                            "message":  "@{body('List_the_snapshots_for_all_objects_2')?['errors'][0]?['message']}"
                                                        },
                                                        "runStatus":  "Failed"
                                                    }
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "expression":  {
                                                "and":  [
                                                    {
                                                        "contains":  [
                                                            "@body('List_the_snapshots_for_all_objects_2')",
                                                            "errors"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type":  "If"
                                        }
                                    },
                                    "runAfter":  {
                                        "List_the_snapshots_for_all_objects_2":  [
                                            "Succeeded",
                                            "Failed"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                            "Response_4_if_status_code_is_NOT_200_":  {
                                                "runAfter":  {
                                                    "Set_error_message3_if_status_code_is_NOT_200_":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type":  "Response",
                                                "kind":  "Http",
                                                "inputs":  {
                                                    "body":  "@body('List_the_snapshots_for_all_objects_2')?['message']",
                                                    "statusCode":  "@outputs('List_the_snapshots_for_all_objects_2')['statusCode']"
                                                }
                                            },
                                            "Set_error_message3_if_status_code_is_NOT_200_":  {
                                                "runAfter":  {
                                                },
                                                "type":  "SetVariable",
                                                "inputs":  {
                                                    "name":  "ErrorMessage",
                                                    "value":  "@{body('List_the_snapshots_for_all_objects_2')?['message']}"
                                                }
                                            },
                                            "Terminate_If_status_code_is_NOT_200_":  {
                                                "runAfter":  {
                                                    "Response_4_if_status_code_is_NOT_200_":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type":  "Terminate",
                                                "inputs":  {
                                                    "runError":  {
                                                        "code":  "@{outputs('List_the_snapshots_for_all_objects_2')?['statusCode']}",
                                                        "message":  "@{body('List_the_snapshots_for_all_objects_2')?['message']}"
                                                    },
                                                    "runStatus":  "Failed"
                                                }
                                            }
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@outputs('List_the_snapshots_for_all_objects_2')?['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "Response_if_successed":  {
                                    "runAfter":  {
                                        "Is_Fileset_data_returned":  [
                                            "Succeeded"
                                        ],
                                        "Is_VM_data_returned":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Response",
                                    "kind":  "Http",
                                    "inputs":  {
                                        "body":  {
                                            "File-data-message":  "@{variables('ErrorMessageFile')}",
                                            "Status":  "Successful",
                                            "Vm-data-message":  "@{variables('ErrorMessageVm')}",
                                            "general-message":  "@{variables('ErrorMessage')}"
                                        },
                                        "statusCode":  200
                                    }
                                },
                                "Search_the_global_objects":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "body":  {
                                            "query":  "query GlobalSearchResults($first: Int, $after: String, $last: Int, $before: String, $sortBy: HierarchySortByField, $sortOrder: SortOrder, $filter: [Filter!]) {\r\n  globalSearchResults(first: $first, after: $after, last: $last, before: $before, sortBy: $sortBy, sortOrder: $sortOrder, filter: $filter) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        objectType\r\n        slaAssignment\r\n        slaPauseStatus\r\n        numWorkloadDescendants\r\n      }\r\n    }\r\n    nodes {\r\n      id\r\n      name\r\n      objectType\r\n      slaAssignment\r\n      effectiveSlaDomain {\r\n        id\r\n        name\r\n        version\r\n      }\r\n      slaPauseStatus\r\n      snapshotDistribution {\r\n        totalCount\r\n        scheduledCount\r\n        onDemandCount\r\n        retrievedCount\r\n        id\r\n      }\r\n      effectiveRetentionSlaDomain {\r\n        id\r\n        name\r\n        version\r\n      }\r\n      configuredSlaDomain {\r\n        id\r\n        name\r\n        version\r\n      }\r\n      effectiveSlaSourceObject {\r\n        fid\r\n        name\r\n        objectType\r\n      }\r\n      logicalPath {\r\n        fid\r\n        name\r\n        objectType\r\n      }\r\n      physicalPath {\r\n        fid\r\n        name\r\n        objectType\r\n      }\r\n      numWorkloadDescendants\r\n    }\r\n    pageInfo {\r\n      startCursor\r\n      endCursor\r\n      hasPreviousPage\r\n      hasNextPage\r\n    }\r\n    count\r\n  }\r\n}",
                                            "variables":  {
                                                "filter":  [
                                                    {
                                                        "field":  "NAME",
                                                        "texts":  [
                                                            "@{triggerBody()?['ObjectName']}"
                                                        ]
                                                    }
                                                ],
                                                "first":  10,
                                                "sortBy":  "ID",
                                                "sortOrder":  "ASC"
                                            }
                                        },
                                        "headers":  {
                                            "Authorization":  "Bearer @{variables('access_token')}",
                                            "Content-Type":  "application/json"
                                        },
                                        "method":  "POST",
                                        "path":  "/api/graphql",
                                        "uri":  "@{triggerBody()?['BaseUrl']}/api/graphql"
                                    }
                                },
                                "Search_the_global_objects_gets_status_code_200_or_not":  {
                                    "actions":  {
                                        "Search_the_global_objects_API_has_error_in_response":  {
                                            "actions":  {
                                                "Response_if_has_error_in_response":  {
                                                    "runAfter":  {
                                                        "Set_error_message_if_has_error_in_response":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "Response",
                                                    "kind":  "Http",
                                                    "inputs":  {
                                                        "body":  "@variables('ErrorMessage')",
                                                        "statusCode":  200
                                                    }
                                                },
                                                "Set_error_message_if_has_error_in_response":  {
                                                    "runAfter":  {
                                                    },
                                                    "type":  "SetVariable",
                                                    "inputs":  {
                                                        "name":  "ErrorMessage",
                                                        "value":  "@{body('Search_the_global_objects')?['errors'][0]?['message']}"
                                                    }
                                                },
                                                "Terminate_if_has_error_in_response":  {
                                                    "runAfter":  {
                                                        "Response_if_has_error_in_response":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "Terminate",
                                                    "inputs":  {
                                                        "runError":  {
                                                            "code":  "@{outputs('Search_the_global_objects')?['statusCode']}",
                                                            "message":  "@{body('Search_the_global_objects')?['errors'][0]?['message']}"
                                                        },
                                                        "runStatus":  "Failed"
                                                    }
                                                }
                                            },
                                            "runAfter":  {
                                            },
                                            "else":  {
                                                "actions":  {
                                                    "Parse_Search_the_global_objects":  {
                                                        "runAfter":  {
                                                        },
                                                        "type":  "ParseJson",
                                                        "inputs":  {
                                                            "content":  "@body('Search_the_global_objects')",
                                                            "schema":  {
                                                                "properties":  {
                                                                    "data":  {
                                                                        "properties":  {
                                                                            "globalSearchResults":  {
                                                                                "properties":  {
                                                                                    "count":  {
                                                                                        "type":  "integer"
                                                                                    },
                                                                                    "edges":  {
                                                                                        "items":  {
                                                                                            "properties":  {
                                                                                                "cursor":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "node":  {
                                                                                                    "properties":  {
                                                                                                        "id":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "name":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "numWorkloadDescendants":  {
                                                                                                            "type":  "integer"
                                                                                                        },
                                                                                                        "objectType":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "slaAssignment":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "slaPauseStatus":  {
                                                                                                            "type":  "boolean"
                                                                                                        }
                                                                                                    },
                                                                                                    "type":  "object"
                                                                                                }
                                                                                            },
                                                                                            "required":  [
                                                                                                "cursor",
                                                                                                "node"
                                                                                            ],
                                                                                            "type":  "object"
                                                                                        },
                                                                                        "type":  "array"
                                                                                    },
                                                                                    "nodes":  {
                                                                                        "items":  {
                                                                                            "properties":  {
                                                                                                "configuredSlaDomain":  {
                                                                                                    "properties":  {
                                                                                                        "id":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "name":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "version":  {
                                                                                                        }
                                                                                                    },
                                                                                                    "type":  [
                                                                                                        "object",
                                                                                                        "null"
                                                                                                    ]
                                                                                                },
                                                                                                "effectiveRetentionSlaDomain":  {
                                                                                                },
                                                                                                "effectiveSlaDomain":  {
                                                                                                    "properties":  {
                                                                                                        "id":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "name":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "version":  {
                                                                                                        }
                                                                                                    },
                                                                                                    "type":  [
                                                                                                        "object",
                                                                                                        "null"
                                                                                                    ]
                                                                                                },
                                                                                                "effectiveSlaSourceObject":  {
                                                                                                    "properties":  {
                                                                                                        "fid":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "name":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "objectType":  {
                                                                                                            "type":  "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type":  [
                                                                                                        "object",
                                                                                                        "null"
                                                                                                    ]
                                                                                                },
                                                                                                "id":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "logicalPath":  {
                                                                                                    "items":  {
                                                                                                        "properties":  {
                                                                                                            "fid":  {
                                                                                                                "type":  "string"
                                                                                                            },
                                                                                                            "name":  {
                                                                                                                "type":  "string"
                                                                                                            },
                                                                                                            "objectType":  {
                                                                                                                "type":  "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "required":  [
                                                                                                            "fid",
                                                                                                            "name",
                                                                                                            "objectType"
                                                                                                        ],
                                                                                                        "type":  [
                                                                                                            "object",
                                                                                                            "null"
                                                                                                        ]
                                                                                                    },
                                                                                                    "type":  "array"
                                                                                                },
                                                                                                "name":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "numWorkloadDescendants":  {
                                                                                                    "type":  "integer"
                                                                                                },
                                                                                                "objectType":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "physicalPath":  {
                                                                                                    "items":  {
                                                                                                        "properties":  {
                                                                                                            "fid":  {
                                                                                                                "type":  "string"
                                                                                                            },
                                                                                                            "name":  {
                                                                                                                "type":  "string"
                                                                                                            },
                                                                                                            "objectType":  {
                                                                                                                "type":  "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "required":  [
                                                                                                            "fid",
                                                                                                            "name",
                                                                                                            "objectType"
                                                                                                        ],
                                                                                                        "type":  [
                                                                                                            "object",
                                                                                                            "null"
                                                                                                        ]
                                                                                                    },
                                                                                                    "type":  "array"
                                                                                                },
                                                                                                "slaAssignment":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "slaPauseStatus":  {
                                                                                                    "type":  "boolean"
                                                                                                },
                                                                                                "snapshotDistribution":  {
                                                                                                    "properties":  {
                                                                                                        "id":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "onDemandCount":  {
                                                                                                            "type":  "integer"
                                                                                                        },
                                                                                                        "retrievedCount":  {
                                                                                                            "type":  "integer"
                                                                                                        },
                                                                                                        "scheduledCount":  {
                                                                                                            "type":  "integer"
                                                                                                        },
                                                                                                        "totalCount":  {
                                                                                                            "type":  "integer"
                                                                                                        }
                                                                                                    },
                                                                                                    "type":  [
                                                                                                        "object",
                                                                                                        "null"
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            "required":  [
                                                                                                "id",
                                                                                                "name",
                                                                                                "objectType",
                                                                                                "slaAssignment",
                                                                                                "effectiveSlaDomain",
                                                                                                "slaPauseStatus",
                                                                                                "snapshotDistribution",
                                                                                                "effectiveRetentionSlaDomain",
                                                                                                "configuredSlaDomain",
                                                                                                "effectiveSlaSourceObject",
                                                                                                "logicalPath",
                                                                                                "physicalPath",
                                                                                                "numWorkloadDescendants"
                                                                                            ],
                                                                                            "type":  "object"
                                                                                        },
                                                                                        "type":  "array"
                                                                                    },
                                                                                    "pageInfo":  {
                                                                                        "properties":  {
                                                                                            "endCursor":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "hasNextPage":  {
                                                                                                "type":  "boolean"
                                                                                            },
                                                                                            "hasPreviousPage":  {
                                                                                                "type":  "boolean"
                                                                                            },
                                                                                            "startCursor":  {
                                                                                                "type":  "string"
                                                                                            }
                                                                                        },
                                                                                        "type":  "object"
                                                                                    }
                                                                                },
                                                                                "type":  "object"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "expression":  {
                                                "and":  [
                                                    {
                                                        "contains":  [
                                                            "@body('Search_the_global_objects')",
                                                            "errors"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type":  "If"
                                        }
                                    },
                                    "runAfter":  {
                                        "Search_the_global_objects":  [
                                            "Succeeded",
                                            "Failed"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                            "Response_if_status_code_is_NOT_200_2":  {
                                                "runAfter":  {
                                                    "Set_error_message_if_status_code_is_NOT_200_2":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type":  "Response",
                                                "kind":  "Http",
                                                "inputs":  {
                                                    "body":  "@body('Search_the_global_objects')?['message']",
                                                    "statusCode":  "@outputs('Search_the_global_objects')['statusCode']"
                                                }
                                            },
                                            "Set_error_message_if_status_code_is_NOT_200_2":  {
                                                "runAfter":  {
                                                },
                                                "type":  "SetVariable",
                                                "inputs":  {
                                                    "name":  "ErrorMessage",
                                                    "value":  "@{body('Search_the_global_objects')?['message']}"
                                                }
                                            },
                                            "Terminate_if_status_code_is_NOT_200_2":  {
                                                "runAfter":  {
                                                    "Response_if_status_code_is_NOT_200_2":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type":  "Terminate",
                                                "inputs":  {
                                                    "runError":  {
                                                        "code":  "@{outputs('Search_the_global_objects')?['statusCode']}",
                                                        "message":  "@{body('Search_the_global_objects')?['message']}"
                                                    },
                                                    "runStatus":  "Failed"
                                                }
                                            }
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@outputs('Search_the_global_objects')?['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                }
                            },
                            "runAfter":  {
                                "Initialize_terminate_variable_for_Snapshot":  [
                                    "Succeeded"
                                ]
                            },
                            "else":  {
                                "actions":  {
                                    "Is_object_ID_provided":  {
                                        "actions":  {
                                            "Check_Date_is_empty_or_not_in_Snapshotdata":  {
                                                "actions":  {
                                                    "For_each_10":  {
                                                        "foreach":  "@body('Response_of_List_the_snapshots_for_all_objects')?['data']?['snapshotsListConnection']?['edges']",
                                                        "actions":  {
                                                            "Condition_16":  {
                                                                "actions":  {
                                                                    "Set_variable_37":  {
                                                                        "runAfter":  {
                                                                        },
                                                                        "type":  "SetVariable",
                                                                        "inputs":  {
                                                                            "name":  "CheckCondition11",
                                                                            "value":  "@true"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter":  {
                                                                },
                                                                "else":  {
                                                                    "actions":  {
                                                                        "Set_variable_38":  {
                                                                            "runAfter":  {
                                                                            },
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "CheckCondition11",
                                                                                "value":  "@false"
                                                                            }
                                                                        },
                                                                        "Set_variable_39":  {
                                                                            "runAfter":  {
                                                                                "Set_variable_38":  [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "terminateFileset",
                                                                                "value":  "@true"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "expression":  {
                                                                    "and":  [
                                                                        {
                                                                            "not":  {
                                                                                "equals":  [
                                                                                    "@items('For_each_10')?['node']?['date']",
                                                                                    "@null"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "type":  "If"
                                                            }
                                                        },
                                                        "runAfter":  {
                                                        },
                                                        "type":  "Foreach"
                                                    }
                                                },
                                                "runAfter":  {
                                                    "Check_SnapshotId_Id_is_empty_or_not_in_Snapshotdata":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "expression":  "@equals(variables('terminateFileset'), false)",
                                                "limit":  {
                                                    "count":  60,
                                                    "timeout":  "PT1H"
                                                },
                                                "type":  "Until"
                                            },
                                            "Check_SnapshotId_Id_is_empty_or_not_in_Snapshotdata":  {
                                                "actions":  {
                                                    "For_each_9":  {
                                                        "foreach":  "@body('Response_of_List_the_snapshots_for_all_objects')?['data']?['snapshotsListConnection']?['edges']",
                                                        "actions":  {
                                                            "Condition_15":  {
                                                                "actions":  {
                                                                    "Set_variable_34":  {
                                                                        "runAfter":  {
                                                                        },
                                                                        "type":  "SetVariable",
                                                                        "inputs":  {
                                                                            "name":  "CheckCondition10",
                                                                            "value":  "@true"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter":  {
                                                                },
                                                                "else":  {
                                                                    "actions":  {
                                                                        "Set_variable_35":  {
                                                                            "runAfter":  {
                                                                            },
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "CheckCondition10",
                                                                                "value":  "@false"
                                                                            }
                                                                        },
                                                                        "Set_variable_36":  {
                                                                            "runAfter":  {
                                                                                "Set_variable_35":  [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "terminateFileset",
                                                                                "value":  "@false"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "expression":  {
                                                                    "and":  [
                                                                        {
                                                                            "not":  {
                                                                                "equals":  [
                                                                                    "@items('For_each_9')?['node']?['pendingSnapshotDeletion']",
                                                                                    "@null"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "type":  "If"
                                                            }
                                                        },
                                                        "runAfter":  {
                                                        },
                                                        "type":  "Foreach"
                                                    }
                                                },
                                                "runAfter":  {
                                                    "Check_object_Id_is_empty_or_not_in_Snapshotdata":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "expression":  "@equals(variables('terminateFileset'), true)",
                                                "limit":  {
                                                    "count":  60,
                                                    "timeout":  "PT1H"
                                                },
                                                "type":  "Until"
                                            },
                                            "Check_object_Id_is_empty_or_not_in_Snapshotdata":  {
                                                "actions":  {
                                                    "For_each_8":  {
                                                        "foreach":  "@body('Response_of_List_the_snapshots_for_all_objects')?['data']?['snapshotsListConnection']?['edges']",
                                                        "actions":  {
                                                            "Condition_14":  {
                                                                "actions":  {
                                                                    "Set_variable_31":  {
                                                                        "runAfter":  {
                                                                        },
                                                                        "type":  "SetVariable",
                                                                        "inputs":  {
                                                                            "name":  "CheckCondition9",
                                                                            "value":  "@true"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter":  {
                                                                },
                                                                "else":  {
                                                                    "actions":  {
                                                                        "Set_variable_32":  {
                                                                            "runAfter":  {
                                                                            },
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "CheckCondition9",
                                                                                "value":  "@false"
                                                                            }
                                                                        },
                                                                        "Set_variable_33":  {
                                                                            "runAfter":  {
                                                                                "Set_variable_32":  [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "terminateFileset",
                                                                                "value":  "@true"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "expression":  {
                                                                    "and":  [
                                                                        {
                                                                            "not":  {
                                                                                "equals":  [
                                                                                    "@items('For_each_8')?['node']?['id']",
                                                                                    "@null"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "type":  "If"
                                                            }
                                                        },
                                                        "runAfter":  {
                                                        },
                                                        "type":  "Foreach"
                                                    }
                                                },
                                                "runAfter":  {
                                                    "Response_of_List_the_snapshots_for_all_objects":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "expression":  "@equals(variables('terminateFileset'), false)",
                                                "limit":  {
                                                    "count":  60,
                                                    "timeout":  "PT1H"
                                                },
                                                "type":  "Until"
                                            },
                                            "Is_Snapshot_data_returned":  {
                                                "actions":  {
                                                },
                                                "runAfter":  {
                                                    "Check_Date_is_empty_or_not_in_Snapshotdata":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "else":  {
                                                    "actions":  {
                                                        "Set_variable_43":  {
                                                            "runAfter":  {
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "ErrorMessage",
                                                                "value":  "No data for this type was obtained"
                                                            }
                                                        }
                                                    }
                                                },
                                                "expression":  {
                                                    "or":  [
                                                        {
                                                            "equals":  [
                                                                "@variables('CheckCondition9')",
                                                                "@true"
                                                            ]
                                                        },
                                                        {
                                                            "equals":  [
                                                                "@variables('CheckCondition10')",
                                                                "@true"
                                                            ]
                                                        },
                                                        {
                                                            "equals":  [
                                                                "@variables('CheckCondition11')",
                                                                "@true"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type":  "If"
                                            },
                                            "List_the_snapshots_for_all_objects":  {
                                                "runAfter":  {
                                                },
                                                "type":  "Http",
                                                "inputs":  {
                                                    "body":  {
                                                        "query":  "query SnapshotsListSingleQuery($workloadId: String!, $first: Int, $after: String, $snapshotFilter: [SnapshotQueryFilterInput!], $sortBy: SnapshotQuerySortByField, $sortOrder: SortOrder, $timeRange: TimeRangeInput) {\r\n  snapshotsListConnection: snapshotOfASnappableConnection(\r\n    workloadId: $workloadId\r\n    first: $first\r\n    after: $after\r\n    snapshotFilter: $snapshotFilter\r\n    sortBy: $sortBy\r\n    sortOrder: $sortOrder\r\n    timeRange: $timeRange\r\n  ) {\r\n    edges {\r\n      node {\r\n        id\r\n        date\r\n        expirationDate\r\n        isOnDemandSnapshot\r\n        ... on CdmSnapshot {\r\n          cdmVersion\r\n          isDownloadedSnapshot\r\n          cluster {\r\n            id\r\n            name\r\n            version\r\n            status\r\n          }\r\n          pendingSnapshotDeletion {\r\n            id: snapshotFid\r\n            status\r\n          }\r\n          slaDomain {\r\n            name\r\n            ... on ClusterSlaDomain {\r\n              fid\r\n              cluster {\r\n                id\r\n                name\r\n              }\r\n            }\r\n            ... on GlobalSla {\r\n              id\r\n            }\r\n          }\r\n          pendingSla {\r\n            id\r\n            name\r\n          }\r\n          snapshotRetentionInfo {\r\n            archivalInfos {\r\n              name\r\n              isExpirationDateCalculated\r\n              expirationTime\r\n            }\r\n            localInfo {\r\n              name\r\n              isExpirationDateCalculated\r\n              expirationTime\r\n            }\r\n            replicationInfos {\r\n              name\r\n              isExpirationDateCalculated\r\n              expirationTime\r\n            }\r\n          }\r\n          sapHanaAppMetadata {\r\n            backupId\r\n            backupPrefix\r\n            snapshotType\r\n            files {\r\n              backupFileSizeInBytes\r\n            }\r\n          }\r\n          legalHoldInfo {\r\n            shouldHoldInPlace\r\n          }\r\n        }\r\n        ... on PolarisSnapshot {\r\n          isDownloadedSnapshot\r\n          isReplica\r\n          isArchivalCopy\r\n          slaDomain {\r\n            name\r\n            ... on ClusterSlaDomain {\r\n              fid\r\n              cluster {\r\n                id\r\n                name\r\n              }\r\n            }\r\n            ... on GlobalSla {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    pageInfo {\r\n      endCursor\r\n      hasNextPage\r\n    }\r\n  }\r\n}\r\n",
                                                        "variables":  {
                                                            "snapshotFilter":  [
                                                                {
                                                                    "field":  "SNAPSHOT_TYPE",
                                                                    "typeFilters":  [
                                                                        "ON_DEMAND"
                                                                    ]
                                                                }
                                                            ],
                                                            "sortBy":  "CREATION_TIME",
                                                            "sortOrder":  "DESC",
                                                            "timeRange":  {
                                                                "end":  "2022-12-05",
                                                                "start":  "2022-11-21"
                                                            },
                                                            "workloadId":  "@{triggerBody()?['ObjectId']}"
                                                        }
                                                    },
                                                    "headers":  {
                                                        "Authorization":  "Bearer @{variables('access_token')}",
                                                        "Content-Type":  "application/json"
                                                    },
                                                    "method":  "POST",
                                                    "uri":  "@{triggerBody()?['BaseUrl']}/api/graphql"
                                                }
                                            },
                                            "Response_2":  {
                                                "runAfter":  {
                                                    "Is_Snapshot_data_returned":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type":  "Response",
                                                "kind":  "Http",
                                                "inputs":  {
                                                    "body":  {
                                                        "error":  "@variables('ErrorMessage')",
                                                        "status":  "Successed"
                                                    },
                                                    "statusCode":  200
                                                }
                                            },
                                            "Response_of_List_the_snapshots_for_all_objects":  {
                                                "runAfter":  {
                                                    "check_List_the_snapshots_for_all_objects_gets_200_or_not":  [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type":  "ParseJson",
                                                "inputs":  {
                                                    "content":  "@body('List_the_snapshots_for_all_objects')",
                                                    "schema":  {
                                                        "properties":  {
                                                            "data":  {
                                                                "properties":  {
                                                                    "snapshotsListConnection":  {
                                                                        "properties":  {
                                                                            "edges":  {
                                                                                "items":  {
                                                                                    "properties":  {
                                                                                        "node":  {
                                                                                            "properties":  {
                                                                                                "cdmVersion":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "cluster":  {
                                                                                                    "properties":  {
                                                                                                        "id":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "name":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "status":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "version":  {
                                                                                                            "type":  "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type":  "object"
                                                                                                },
                                                                                                "date":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "expirationDate":  {
                                                                                                },
                                                                                                "id":  {
                                                                                                    "type":  "string"
                                                                                                },
                                                                                                "isDownloadedSnapshot":  {
                                                                                                    "type":  "boolean"
                                                                                                },
                                                                                                "isOnDemandSnapshot":  {
                                                                                                    "type":  "boolean"
                                                                                                },
                                                                                                "legalHoldInfo":  {
                                                                                                },
                                                                                                "pendingSla":  {
                                                                                                },
                                                                                                "pendingSnapshotDeletion":  {
                                                                                                },
                                                                                                "sapHanaAppMetadata":  {
                                                                                                },
                                                                                                "slaDomain":  {
                                                                                                    "properties":  {
                                                                                                        "id":  {
                                                                                                            "type":  "string"
                                                                                                        },
                                                                                                        "name":  {
                                                                                                            "type":  "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type":  "object"
                                                                                                },
                                                                                                "snapshotRetentionInfo":  {
                                                                                                }
                                                                                            },
                                                                                            "type":  "object"
                                                                                        }
                                                                                    },
                                                                                    "required":  [
                                                                                        "node"
                                                                                    ],
                                                                                    "type":  "object"
                                                                                },
                                                                                "type":  "array"
                                                                            },
                                                                            "pageInfo":  {
                                                                                "properties":  {
                                                                                    "endCursor":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "hasNextPage":  {
                                                                                        "type":  "boolean"
                                                                                    }
                                                                                },
                                                                                "type":  "object"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            }
                                                        },
                                                        "type":  "object"
                                                    }
                                                }
                                            },
                                            "check_List_the_snapshots_for_all_objects_gets_200_or_not":  {
                                                "actions":  {
                                                    "Check_if_response_contains_error_or_not":  {
                                                        "actions":  {
                                                            "Response_8":  {
                                                                "runAfter":  {
                                                                    "Set_error_message_if_has_error_in_response_3":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "Response",
                                                                "kind":  "Http",
                                                                "inputs":  {
                                                                    "body":  "@body('List_the_snapshots_for_all_objects')?['errors'][0]?['message']",
                                                                    "statusCode":  200
                                                                }
                                                            },
                                                            "Set_error_message_if_has_error_in_response_3":  {
                                                                "runAfter":  {
                                                                },
                                                                "type":  "SetVariable",
                                                                "inputs":  {
                                                                    "name":  "ErrorMessage",
                                                                    "value":  "@{body('List_the_snapshots_for_all_objects')?['errors'][0]?['message']}"
                                                                }
                                                            },
                                                            "Terminate_6":  {
                                                                "runAfter":  {
                                                                    "Response_8":  [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type":  "Terminate",
                                                                "inputs":  {
                                                                    "runError":  {
                                                                        "code":  "@{outputs('List_the_snapshots_for_all_objects')?['statusCode']}",
                                                                        "message":  "@{body('List_the_snapshots_for_all_objects')?['errors'][0]?['message']}"
                                                                    },
                                                                    "runStatus":  "Failed"
                                                                }
                                                            }
                                                        },
                                                        "runAfter":  {
                                                        },
                                                        "expression":  {
                                                            "and":  [
                                                                {
                                                                    "contains":  [
                                                                        "@body('List_the_snapshots_for_all_objects')",
                                                                        "errors"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type":  "If"
                                                    }
                                                },
                                                "runAfter":  {
                                                    "List_the_snapshots_for_all_objects":  [
                                                        "Succeeded",
                                                        "Failed"
                                                    ]
                                                },
                                                "else":  {
                                                    "actions":  {
                                                        "Response_7":  {
                                                            "runAfter":  {
                                                                "Set_error_message_if_status_code_is_NOT_200_5":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "Response",
                                                            "kind":  "Http",
                                                            "inputs":  {
                                                                "body":  "@body('List_the_snapshots_for_all_objects')?['message']",
                                                                "statusCode":  "@outputs('List_the_snapshots_for_all_objects')['statusCode']"
                                                            }
                                                        },
                                                        "Set_error_message_if_status_code_is_NOT_200_5":  {
                                                            "runAfter":  {
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "ErrorMessage",
                                                                "value":  "@{body('List_the_snapshots_for_all_objects')?['message']}"
                                                            }
                                                        },
                                                        "Terminate":  {
                                                            "runAfter":  {
                                                                "Response_7":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "Terminate",
                                                            "inputs":  {
                                                                "runError":  {
                                                                    "code":  "@{outputs('List_the_snapshots_for_all_objects')?['statusCode']}",
                                                                    "message":  "@{body('List_the_snapshots_for_all_objects')?['message']}"
                                                                },
                                                                "runStatus":  "Failed"
                                                            }
                                                        }
                                                    }
                                                },
                                                "expression":  {
                                                    "and":  [
                                                        {
                                                            "equals":  [
                                                                "@outputs('List_the_snapshots_for_all_objects')?['statusCode']",
                                                                200
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type":  "If"
                                            }
                                        },
                                        "runAfter":  {
                                        },
                                        "else":  {
                                            "actions":  {
                                                "Response":  {
                                                    "runAfter":  {
                                                        "Set_error_message_if_status_code_is_NOT_200_4":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type":  "Response",
                                                    "kind":  "Http",
                                                    "inputs":  {
                                                        "body":  {
                                                            "error":  "@variables('ErrorMessage')",
                                                            "status":  "Successed"
                                                        },
                                                        "statusCode":  200
                                                    }
                                                },
                                                "Set_error_message_if_status_code_is_NOT_200_4":  {
                                                    "runAfter":  {
                                                    },
                                                    "type":  "SetVariable",
                                                    "inputs":  {
                                                        "name":  "ErrorMessage",
                                                        "value":  "Either object_name or object_id input must be provided."
                                                    }
                                                }
                                            }
                                        },
                                        "expression":  {
                                            "and":  [
                                                {
                                                    "not":  {
                                                        "equals":  [
                                                            "@empty(triggerBody()?['ObjectId'])",
                                                            "@true"
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "type":  "If"
                                    }
                                }
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "not":  {
                                            "equals":  [
                                                "@empty(triggerBody()?['ObjectName'])",
                                                "@true"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "access_token":  {
                            "runAfter":  {
                                "Is_Authentication_Failed":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "access_token",
                                        "type":  "string",
                                        "value":  "@{body('Authentication_2')?['access_token']}"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "RubrikCustomConnector":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('RubrikcustomconnectorConnectionName'))]",
                                "connectionName":  "[variables('RubrikcustomconnectorConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('Rubrik Connector name'))]"
                            },
                            "keyvault_1":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName":  "[variables('KeyvaultConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "RubrikDataObjectDiscovery",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('RubrikcustomconnectorConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('RubrikcustomconnectorConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('RubrikcustomconnectorConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('Rubrik Connector name'))]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('KeyvaultConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('KeyvaultConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
                },
                "parameterValues": {
                    "token:TenantId": "[parameters('tenantId')]",
                    "token:grantType": "code",
                    "vaultName": "[parameters('keyvaultName')]"
                }
            }
        }
    ]
}
