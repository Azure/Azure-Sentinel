{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Rubrik User Intelligence Analysis",
        "description": "This playbook queries Rubrik Security Cloud to get user sensitive data and update severity of incident accordingly. This playbook calls the RubrikRetrieveUserIntelligenceInformation playbook internally to get user risk details and policy hits details to enrich the incident.",
        "prerequisites": [
            "1. The Rubrik Security Cloud solution should be configured to [connect to Rubrik Security Cloud API end points using a Service Account](https://docs.rubrik.com/en-us/saas/saas/polaris_api_access_with_service_accounts.html), the service account should be assigned a role that includes the relevant privileges necessary to perform the desired operations (see [Roles and Permissions](https://docs.rubrik.com/en-us/saas/saas/common/roles_and_permissions.html) in the Rubrik Security Cloud user guide).",
            "2. Store Service account credentials in Key Vault and obtain keyvault name and tenantId",
            "a. Create a Key Vault with a unique name",
            "b. Go to KeyVault -> secrets, click on Generate/import and create 'Rubrik-AS-Int-ClientId' & 'Rubrik-AS-Int-ClientSecret' for storing client_id and client_secret respectively",
            "NOTE: Make sure the Permission model in the Access Configuration of Keyvault is selected to the Vault access policy. If not then change it to 'Vault access policy'",
            "3. Make sure that RubrikRetrieveUserIntelligenceInformation playbook is deployed before deploying RubrikUserIntelligenceAnalysis playbook."
        ],
        "postDeployment": [
            "**a. Authorize connections**",
            "Once deployment is complete, authorize each connection.",
            "1. Go to your logic app -> API connections -> Select keyvault connection resource",
            "2. Go to General -> edit API connection",
            "5. Click Authorize",
            "6. Sign in",
            "7. Click Save",
            "8. Repeat steps for other connections",
            "**b. Assign Role to add comment in incident**",
            "After authorizing each connection, assign role to this playbook.",
            "1. Go to Log Analytics Workspace → <your workspace> → Access Control → Add",
            "2. Add role assignment",
            "3. Assignment type: Job function roles",
            "4. Role: Microsoft Sentinel Contributor",
            "5. Members: select managed identity for assigned access to and add your logic app as member as shown in screenshot below",
            "6. Click on review+assign",
            "**c. Add Access policy in Keyvault**",
            "Add access policy for the playbook's managed identity and authorized user to read, and write secrets of key vault.",
            "1. Go to logic app → <your logic app> → identity → System assigned Managed identity and copy Object (principal) ID.",
            "2. Go to keyvaults → <your keyvault> → Access policies → create.",
            "3. Select all keys & secrets permissions. Click next.",
            "4. In the principal section, search by copied object ID. Click next.",
            "5. Click review + create.",
            "6. Repeat the above step 2 to 5 to add accee policy for the user account using which connection is authorized.",
            "**d. Configurations in Microsoft Sentinel**",
            "1. In Microsoft Sentinel, Configure the analytic rules to trigger an incident.",
            "a. Analytic Rule must contain at least one of the below fields mapped in Custom Details to successfully run this playbook.",
            "Username",
            "Email",
            "2. In Microsoft Sentinel, Configure the automation rules to trigger the playbook.",
            "a. Go to Microsoft Sentinel -> <your workspace> -> Automation",
            "b. Click on Create -> Automation rule",
            "c. Provide name for your rule",
            "d. In Analytic rule name condition, select analytic rule which you have created.",
            "e. In Actions dropdown select Run playbook",
            "f. In second dropdown select your deployed playbook",
            "g. Click on Apply",
            "h. Save the Automation rule.",
            "NOTE: If you want to manually run the playbook on a particular incident follow the below steps:",
            "a. Go to Microsoft Sentinel -> <your workspace> -> Incidents",
            "b. Select an incident.",
            "c. In the right pane, click on Actions, and from the dropdown select the 'Run Playbook' option.",
            "d. click on the Run button beside this playbook."
        ],
        "entities": ["account"],
        "tags": ["User", "Context", "Rubrik", "Access"],
        "support": {
            "tier": "Community",
            "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "lastUpdateTime": "2024-07-23T10:00:00.000Z",
        "author": {
            "name": "Rubrik"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "RubrikUserIntelligenceAnalysis",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please do not keep 'PlaybookName' parameter empty, else you will receive validation failure"
            }
        },
        "KeyvaultName": {
            "type": "string",
            "metadata": {
                "description": "Enter name of keyvault where service account credentials are stored(e.g. RubrikSentinelKeyVault)"
            }
        },
        "TenantId": {
            "type": "string",
            "metadata": {
                "description": "Enter Tenant Id of your Microsoft EntraID where keyvault is available"
            }
        },
        "BaseUrl": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Base Url of the RubrikApi instance(e.g. https://rubrik-rcf-32348.my.rubrik.com)"
            }
        },
        "RiskPolicyHitsPlaybookName": {
            "type": "string",
            "metadata": {
                "description": "Playbook name that you have given while deployment of playbook RubrikRetrieveUserIntelligenceInformation(e.g.RubrikRetrieveUserIntelligenceInformation)"
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Does_status_code_of_get_access_token_equal_to_200": {
                            "actions": {},
                            "runAfter": {
                                "Get_Access_Token": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Terminate_due_to_authentication_failure": {
                                        "runAfter": {},
                                        "type": "Terminate",
                                        "inputs": {
                                            "runError": {
                                                "code": "@{outputs('Get_Access_Token')['statusCode']}",
                                                "message": "@{body('Get_Access_Token')?['message']}"
                                            },
                                            "runStatus": "Failed"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@outputs('Get_Access_Token')['statusCode']",
                                            200
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Does_username_available_in_incident": {
                            "actions": {
                                "Does_HTTP_request_get_status_code_equal_to_200": {
                                    "actions": {
                                        "Does_response_contain_error": {
                                            "actions": {
                                                "Terminate_due_to_error_in_response": {
                                                    "runAfter": {},
                                                    "type": "Terminate",
                                                    "inputs": {
                                                        "runError": {
                                                            "message": "Error: @{body('Get_User_risk_information_for_username')?['errors'][0]?['message']}"
                                                        },
                                                        "runStatus": "Failed"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Does_response_contain_user_data": {
                                                        "actions": {
                                                            "For_user": {
                                                                "foreach": "@body('Parse_User_risk_information_response')?['data']?['principalSummaries']?['edges']",
                                                                "actions": {
                                                                    "Does_incidentCommentCount_reached_the_limit": {
                                                                        "actions": {
                                                                            "Add_comment_to_incident_that_more_users_details_can_be_found_in_table": {
                                                                                "runAfter": {},
                                                                                "type": "ApiConnection",
                                                                                "inputs": {
                                                                                    "body": {
                                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                        "message": "<p>Incident reached maximum number of comments. You can still find information about more users related to user risk detail and policy hits details in log analytics workspace tables. &nbsp;</p>"
                                                                                    },
                                                                                    "host": {
                                                                                        "connection": {
                                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                        }
                                                                                    },
                                                                                    "method": "post",
                                                                                    "path": "/Incidents/Comment"
                                                                                }
                                                                            }
                                                                        },
                                                                        "runAfter": {
                                                                            "Set_userData_to_null": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "expression": {
                                                                            "and": [
                                                                                {
                                                                                    "greaterOrEquals": [
                                                                                        "@variables('incidentCommentCount')",
                                                                                        98
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "If"
                                                                    },
                                                                    "Increment_variable": {
                                                                        "runAfter": {
                                                                            "RubrikUserRiskPolicyDetails_3": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "IncrementVariable",
                                                                        "inputs": {
                                                                            "name": "incidentCommentCount",
                                                                            "value": 2
                                                                        }
                                                                    },
                                                                    "Is_riskLevel_of_User_High": {
                                                                        "actions": {
                                                                            "Update_incident_Severity_to_High_based_on_user_risk": {
                                                                                "runAfter": {},
                                                                                "type": "ApiConnection",
                                                                                "inputs": {
                                                                                    "body": {
                                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                        "severity": "High"
                                                                                    },
                                                                                    "host": {
                                                                                        "connection": {
                                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                        }
                                                                                    },
                                                                                    "method": "put",
                                                                                    "path": "/Incidents"
                                                                                }
                                                                            }
                                                                        },
                                                                        "runAfter": {},
                                                                        "expression": {
                                                                            "and": [
                                                                                {
                                                                                    "equals": [
                                                                                        "@items('For_user')?['node']?['riskLevel']",
                                                                                        "HIGH_RISK"
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "If"
                                                                    },
                                                                    "Is_riskLevel_of_user_Low_and_incident_severity_not_Medium_or_High": {
                                                                        "actions": {
                                                                            "Update_incident_severity_to_low": {
                                                                                "runAfter": {},
                                                                                "type": "ApiConnection",
                                                                                "inputs": {
                                                                                    "body": {
                                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                        "severity": "Low"
                                                                                    },
                                                                                    "host": {
                                                                                        "connection": {
                                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                        }
                                                                                    },
                                                                                    "method": "put",
                                                                                    "path": "/Incidents"
                                                                                }
                                                                            }
                                                                        },
                                                                        "runAfter": {
                                                                            "Is_riskLevel_of_user_Medium_and_incident_severity_not_High": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "expression": {
                                                                            "and": [
                                                                                {
                                                                                    "equals": [
                                                                                        "@items('For_user')?['node']?['riskLevel']",
                                                                                        "LOW_RISK"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "not": {
                                                                                        "equals": [
                                                                                            "@or(equals(triggerBody()?['object']?['properties']?['severity'],'Medium'),equals(triggerBody()?['object']?['properties']?['severity'],'High'))",
                                                                                            "@true"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "If"
                                                                    },
                                                                    "Is_riskLevel_of_user_Medium_and_incident_severity_not_High": {
                                                                        "actions": {
                                                                            "Update_incident_severity_to_medium": {
                                                                                "runAfter": {},
                                                                                "type": "ApiConnection",
                                                                                "inputs": {
                                                                                    "body": {
                                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                        "severity": "Medium"
                                                                                    },
                                                                                    "host": {
                                                                                        "connection": {
                                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                        }
                                                                                    },
                                                                                    "method": "put",
                                                                                    "path": "/Incidents"
                                                                                }
                                                                            }
                                                                        },
                                                                        "runAfter": {
                                                                            "Is_riskLevel_of_User_High": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "expression": {
                                                                            "and": [
                                                                                {
                                                                                    "equals": [
                                                                                        "@items('For_user')?['node']?['riskLevel']",
                                                                                        "MEDIUM_RISK"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "not": {
                                                                                        "equals": [
                                                                                            "@triggerBody()?['object']?['properties']?['severity']",
                                                                                            "High"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": "If"
                                                                    },
                                                                    "RubrikUserRiskPolicyDetails_3": {
                                                                        "runAfter": {
                                                                            "Set_userData_for_username": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "Workflow",
                                                                        "inputs": {
                                                                            "body": {
                                                                                "accessToken": "@variables('AccessToken')",
                                                                                "baseUrl": "@variables('BaseUrl')",
                                                                                "incidentARMId": "@triggerBody()?['object']?['id']",
                                                                                "userData": "@variables('userData')",
                                                                                "userId": "@variables('userId')",
                                                                                "userEmail": "",
                                                                                "userName": "@variables('Username')"
                                                                            },
                                                                            "host": {
                                                                                "triggerName": "manual",
                                                                                "workflow": {
                                                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/',parameters('RiskPolicyHitsPlaybookName'))]"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "Set_userData_for_username": {
                                                                        "runAfter": {
                                                                            "Set_userId": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "AppendToArrayVariable",
                                                                        "inputs": {
                                                                            "name": "userData",
                                                                            "value": {
                                                                                "RiskDetails": {
                                                                                    "riskLevel": "@items('For_user')?['node']?['riskLevel']"
                                                                                },
                                                                                "sensitiveData": {
                                                                                    "highRiskFiles": "@items('For_user')?['node']?['sensitiveFiles']?['highRiskFileCount']?['totalCount']",
                                                                                    "lowRiskFiles": "@items('For_user')?['node']?['sensitiveFiles']?['lowRiskFileCount']?['totalCount']",
                                                                                    "mediumRiskFiles": "@items('For_user')?['node']?['sensitiveFiles']?['mediumRiskFileCount']?['totalCount']",
                                                                                    "sensitiveHits": "@items('For_user')?['node']?['totalSensitiveHits']?['totalHits']",
                                                                                    "sensitiveObjects": "@items('For_user')?['node']?['sensitiveObjectCount']?['totalCount']"
                                                                                },
                                                                                "userDetails": {
                                                                                    "userEmail": "@items('For_user')?['node']?['upn']",
                                                                                    "userFullName": "@items('For_user')?['node']?['fullName']",
                                                                                    "userId": "@items('For_user')?['node']?['principalId']"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "Set_userData_to_null": {
                                                                        "runAfter": {
                                                                            "Increment_variable": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "userData",
                                                                            "value": "@null"
                                                                        }
                                                                    },
                                                                    "Set_userId": {
                                                                        "runAfter": {
                                                                            "Is_riskLevel_of_user_Low_and_incident_severity_not_Medium_or_High": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "userId",
                                                                            "value": "@items('For_user')?['node']?['principalId']"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {},
                                                                "type": "Foreach",
                                                                "runtimeConfiguration": {
                                                                    "concurrency": {
                                                                        "repetitions": 1
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Parse_User_risk_information_response": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "else": {
                                                            "actions": {
                                                                "Add_comment_that_no_information_is_available_related_to_username": {
                                                                    "runAfter": {},
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                            "message": "<p>Sensitive Data Access information is not available related to user @{outputs('Username_or_Email')}</p>"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/Incidents/Comment"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@empty(body('Parse_User_risk_information_response')?['data']?['principalSummaries']?['edges'])",
                                                                        "@false"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    },
                                                    "Parse_User_risk_information_response": {
                                                        "runAfter": {},
                                                        "type": "ParseJson",
                                                        "inputs": {
                                                            "content": "@body('Get_User_risk_information_for_username')",
                                                            "schema": {
                                                                "properties": {
                                                                    "data": {
                                                                        "properties": {
                                                                            "principalSummaries": {
                                                                                "properties": {
                                                                                    "__typename": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "edges": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "__typename": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "cursor": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "node": {
                                                                                                    "properties": {
                                                                                                        "__typename": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "fullName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "principalId": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "riskLevel": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "sensitiveFiles": {
                                                                                                            "properties": {
                                                                                                                "__typename": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "highRiskFileCount": {
                                                                                                                    "properties": {
                                                                                                                        "__typename": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "totalCount": {
                                                                                                                            "type": "integer"
                                                                                                                        },
                                                                                                                        "violatedCount": {
                                                                                                                            "type": "integer"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "type": [
                                                                                                                        "object",
                                                                                                                        "null"
                                                                                                                    ]
                                                                                                                },
                                                                                                                "lowRiskFileCount": {
                                                                                                                    "properties": {
                                                                                                                        "__typename": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "totalCount": {
                                                                                                                            "type": "integer"
                                                                                                                        },
                                                                                                                        "violatedCount": {
                                                                                                                            "type": "integer"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "type": [
                                                                                                                        "object",
                                                                                                                        "null"
                                                                                                                    ]
                                                                                                                },
                                                                                                                "mediumRiskFileCount": {
                                                                                                                    "properties": {
                                                                                                                        "__typename": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "totalCount": {
                                                                                                                            "type": "integer"
                                                                                                                        },
                                                                                                                        "violatedCount": {
                                                                                                                            "type": "integer"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "type": [
                                                                                                                        "object",
                                                                                                                        "null"
                                                                                                                    ]
                                                                                                                }
                                                                                                            },
                                                                                                            "type": [
                                                                                                                "object",
                                                                                                                "null"
                                                                                                            ]
                                                                                                        },
                                                                                                        "sensitiveObjectCount": {
                                                                                                            "properties": {
                                                                                                                "__typename": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "totalCount": {
                                                                                                                    "type": "integer"
                                                                                                                },
                                                                                                                "violatedCount": {
                                                                                                                    "type": "integer"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": [
                                                                                                                "object",
                                                                                                                "null"
                                                                                                            ]
                                                                                                        },
                                                                                                        "totalSensitiveHits": {
                                                                                                            "properties": {
                                                                                                                "__typename": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "totalHits": {
                                                                                                                    "type": "integer"
                                                                                                                },
                                                                                                                "violatedHits": {
                                                                                                                    "type": "integer"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": [
                                                                                                                "object",
                                                                                                                "null"
                                                                                                            ]
                                                                                                        },
                                                                                                        "upn": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "cursor",
                                                                                                "node",
                                                                                                "__typename"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "pageInfo": {
                                                                                        "properties": {
                                                                                            "__typename": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "endCursor": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "hasNextPage": {
                                                                                                "type": "boolean"
                                                                                            },
                                                                                            "hasPreviousPage": {
                                                                                                "type": "boolean"
                                                                                            },
                                                                                            "startCursor": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('Get_User_risk_information_for_username')",
                                                            "errors"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Get_User_risk_information_for_username": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Terminate_due_to_api_failure": {
                                                "runAfter": {},
                                                "type": "Terminate",
                                                "inputs": {
                                                    "runError": {
                                                        "code": "@{outputs('Get_User_risk_information_for_username')['statusCode']}",
                                                        "message": "@{body('Get_User_risk_information_for_username')?['message']}"
                                                    },
                                                    "runStatus": "Failed"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@outputs('Get_User_risk_information_for_username')['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Get_User_risk_information_for_username": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "query": "query UserAccessPrincipalListQuery($filter: PrincipalSummariesFilterInput, $timelineDate: String!, $sort: ListPrincipalsSummarySortInput, $first: Int, $after: String, $includeWhitelistedResults: Boolean, $isGroupPrincipalType: Boolean!) {\r\n  principalSummaries(\r\n    filter: $filter\r\n    timelineDate: $timelineDate\r\n    sort: $sort\r\n    first: $first\r\n    after: $after\r\n    includeWhitelistedResults: $includeWhitelistedResults\r\n  ) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        principalId\r\n        fullName\r\n        upn @skip(if: $isGroupPrincipalType)\r\n        riskLevel\r\n        sensitiveFiles {\r\n          ...SensitiveFilesTableCellFragment\r\n          __typename\r\n        }\r\n        totalSensitiveHits {\r\n          ...SummaryHitsFragment\r\n          __typename\r\n        }\r\n        sensitiveObjectCount {\r\n          ...SummaryCountFragment\r\n          __typename\r\n        }\r\n        numDescendants @include(if: $isGroupPrincipalType)\r\n        domainName @include(if: $isGroupPrincipalType)\r\n        __typename\r\n      }\r\n      __typename\r\n    }\r\n    pageInfo {\r\n      startCursor\r\n      endCursor\r\n      hasNextPage\r\n      hasPreviousPage\r\n      __typename\r\n    }\r\n    __typename\r\n  }\r\n}\r\n\r\nfragment SensitiveFilesTableCellFragment on SensitiveFiles {\r\n  highRiskFileCount {\r\n    ...SummaryCountFragment\r\n    __typename\r\n  }\r\n  mediumRiskFileCount {\r\n    ...SummaryCountFragment\r\n    __typename\r\n  }\r\n  lowRiskFileCount {\r\n    ...SummaryCountFragment\r\n    __typename\r\n  }\r\n  __typename\r\n}\r\n\r\nfragment SummaryCountFragment on SummaryCount {\r\n  totalCount\r\n  violatedCount\r\n  __typename\r\n}\r\n\r\nfragment SummaryHitsFragment on SummaryHits {\r\n  totalHits\r\n  violatedHits\r\n  __typename\r\n}\r\n",
                                            "variables": {
                                                "filter": {
                                                    "groupId": "",
                                                    "policyIds": [],
                                                    "principalName": "@{variables('Username')}",
                                                    "principalSummaryCategory": "USERS_WITH_SENSITIVE_ACCESS",
                                                    "principalType": "USER"
                                                },
                                                "first": 50,
                                                "includeWhitelistedResults": true,
                                                "isGroupPrincipalType": false,
                                                "sort": {
                                                    "sortBy": "RISK_LEVEL",
                                                    "sortOrder": "DESC"
                                                },
                                                "timelineDate": "@{concat(formatDateTime(utcNow(),'yyyy-MM-dd'),'T00:00:00+00:00')}"
                                            }
                                        },
                                        "headers": {
                                            "Authorization": "Bearer @{variables('AccessToken')}"
                                        },
                                        "method": "POST",
                                        "uri": "@{variables('BaseUrl')}/api/graphql"
                                    }
                                }
                            },
                            "runAfter": {
                                "Username_or_Email": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Does_UserId_available": {
                                        "actions": {
                                            "Terminate": {
                                                "runAfter": {},
                                                "type": "Terminate",
                                                "inputs": {
                                                    "runStatus": "Succeeded"
                                                }
                                            }
                                        },
                                        "runAfter": {
                                            "Until": [
                                                "Succeeded"
                                            ]
                                        },
                                        "else": {
                                            "actions": {
                                                "Add_comment_to_incident_(V3)": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "message": "<p>No user with email @{outputs('Username_or_Email')} is available in Rubrik.</p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    }
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "not": {
                                                        "equals": [
                                                            "@empty(variables('userId'))",
                                                            "@true"
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "Does_user_email_available_in_incident": {
                                        "actions": {},
                                        "runAfter": {},
                                        "else": {
                                            "actions": {
                                                "Terminate_flow_as_user_information_is_not_available": {
                                                    "runAfter": {},
                                                    "type": "Terminate",
                                                    "inputs": {
                                                        "runError": {
                                                            "code": "400",
                                                            "message": "No username or email found in incident data hence exiting the flow"
                                                        },
                                                        "runStatus": "Failed"
                                                    }
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "equals": [
                                                        "@empty(variables('UserEmail'))",
                                                        "@false"
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "Until": {
                                        "actions": {
                                            "Does_Get_user_risk_information_get_status_code_equal_to_200": {
                                                "actions": {
                                                    "Does_user_risk_info_api_response_contain_errors": {
                                                        "actions": {
                                                            "Set_error_message_of_user_list_response_contain_error": {
                                                                "runAfter": {},
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "errorMessage",
                                                                    "value": "@{body('Get_user_risk_information')?['errors'][0]?['message']}"
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "else": {
                                                            "actions": {
                                                                "Does_API_response_contain_data": {
                                                                    "actions": {
                                                                        "Check_if_next_page_exist": {
                                                                            "actions": {
                                                                                "Set_hasNextPage": {
                                                                                    "runAfter": {
                                                                                        "Set_variable_for_pagination": [
                                                                                            "Succeeded"
                                                                                        ]
                                                                                    },
                                                                                    "type": "SetVariable",
                                                                                    "inputs": {
                                                                                        "name": "hasNextPage",
                                                                                        "value": "@true"
                                                                                    }
                                                                                },
                                                                                "Set_variable_for_pagination": {
                                                                                    "runAfter": {},
                                                                                    "type": "SetVariable",
                                                                                    "inputs": {
                                                                                        "name": "uservariable",
                                                                                        "value": {
                                                                                            "after": "@body('Parse_User_risk_Information')?['data']?['principalSummaries']?['pageInfo']?['endCursor']",
                                                                                            "filter": {
                                                                                                "groupId": "",
                                                                                                "policyIds": [],
                                                                                                "principalSummaryCategory": "USERS_WITH_SENSITIVE_ACCESS",
                                                                                                "principalType": "USER"
                                                                                            },
                                                                                            "first": 1000,
                                                                                            "includeWhitelistedResults": true,
                                                                                            "isGroupPrincipalType": false,
                                                                                            "sort": {
                                                                                                "sortBy": "RISK_LEVEL",
                                                                                                "sortOrder": "DESC"
                                                                                            },
                                                                                            "timelineDate": "@{concat(formatDateTime(utcNow(),'yyyy-MM-dd'),'T00:00:00+00:00')}"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "runAfter": {
                                                                                "Does_response_contain_data_related_to_email_fetch_from_incident": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "else": {
                                                                                "actions": {
                                                                                    "Set_hasNextPage_to_false": {
                                                                                        "runAfter": {},
                                                                                        "type": "SetVariable",
                                                                                        "inputs": {
                                                                                            "name": "hasNextPage",
                                                                                            "value": "@false"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "and": [
                                                                                    {
                                                                                        "equals": [
                                                                                            "@body('Parse_User_risk_Information')?['data']?['principalSummaries']?['pageInfo']?['hasNextPage']",
                                                                                            "@true"
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "If"
                                                                        },
                                                                        "Does_response_contain_data_related_to_email_fetch_from_incident": {
                                                                            "actions": {
                                                                                "For_each": {
                                                                                    "foreach": "@body('Filter_array')",
                                                                                    "actions": {
                                                                                        "Is_risk_of_user_high": {
                                                                                            "actions": {
                                                                                                "Update_incident_Severity_to_High": {
                                                                                                    "runAfter": {},
                                                                                                    "type": "ApiConnection",
                                                                                                    "inputs": {
                                                                                                        "body": {
                                                                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                                            "severity": "High"
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "connection": {
                                                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                                            }
                                                                                                        },
                                                                                                        "method": "put",
                                                                                                        "path": "/Incidents"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "runAfter": {},
                                                                                            "expression": {
                                                                                                "and": [
                                                                                                    {
                                                                                                        "equals": [
                                                                                                            "@items('For_each')?['node']?['riskLevel']",
                                                                                                            "HIGH_RISK"
                                                                                                        ]
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "type": "If"
                                                                                        },
                                                                                        "Is_risk_of_user_low_and_severity_not_Medium_or_High": {
                                                                                            "actions": {
                                                                                                "Update_incident_severity_to_low_based_on_user_email": {
                                                                                                    "runAfter": {},
                                                                                                    "type": "ApiConnection",
                                                                                                    "inputs": {
                                                                                                        "body": {
                                                                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                                            "severity": "Low"
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "connection": {
                                                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                                            }
                                                                                                        },
                                                                                                        "method": "put",
                                                                                                        "path": "/Incidents"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "runAfter": {
                                                                                                "Is_risk_of_user_medium_and_severity_not_High": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "expression": {
                                                                                                "and": [
                                                                                                    {
                                                                                                        "equals": [
                                                                                                            "@items('For_each')?['node']?['riskLevel']",
                                                                                                            "LOW_RISK"
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "equals": [
                                                                                                            "@or(equals(triggerBody()?['object']?['properties']?['severity'],'Medium'),equals(triggerBody()?['object']?['properties']?['severity'],'High'))",
                                                                                                            "@true"
                                                                                                        ]
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "type": "If"
                                                                                        },
                                                                                        "Is_risk_of_user_medium_and_severity_not_High": {
                                                                                            "actions": {
                                                                                                "Update_incident_severity_to_medium_based_risk_of_email_user": {
                                                                                                    "runAfter": {},
                                                                                                    "type": "ApiConnection",
                                                                                                    "inputs": {
                                                                                                        "body": {
                                                                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                                            "severity": "Medium"
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "connection": {
                                                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                                            }
                                                                                                        },
                                                                                                        "method": "put",
                                                                                                        "path": "/Incidents"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "runAfter": {
                                                                                                "Is_risk_of_user_high": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "expression": {
                                                                                                "and": [
                                                                                                    {
                                                                                                        "equals": [
                                                                                                            "@items('For_each')?['node']?['riskLevel']",
                                                                                                            "MEDIUM_RISK"
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "not": {
                                                                                                            "equals": [
                                                                                                                "@triggerBody()?['object']?['properties']?['severity']",
                                                                                                                "High"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "type": "If"
                                                                                        },
                                                                                        "RubrikUserRiskPolicyDetails": {
                                                                                            "runAfter": {
                                                                                                "Set_useremailFound_status": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "type": "Workflow",
                                                                                            "inputs": {
                                                                                                "body": {
                                                                                                    "accessToken": "@variables('AccessToken')",
                                                                                                    "baseUrl": "@variables('BaseUrl')",
                                                                                                    "incidentARMId": "@body('Update_incident_Severity_to_High')?['id']",
                                                                                                    "userData": "@variables('userData')",
                                                                                                    "userId": "@variables('userId')",
                                                                                                    "userEmail": "@variables('UserEmail')",
                                                                                                    "userName": ""
                                                                                                },
                                                                                                "host": {
                                                                                                    "triggerName": "manual",
                                                                                                    "workflow": {
                                                                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/',parameters('RiskPolicyHitsPlaybookName'))]"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "Set_userId_based_on_email": {
                                                                                            "runAfter": {
                                                                                                "set_userData": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "type": "SetVariable",
                                                                                            "inputs": {
                                                                                                "name": "userId",
                                                                                                "value": "@items('For_each')?['node']?['principalId']"
                                                                                            }
                                                                                        },
                                                                                        "Set_useremailFound_status": {
                                                                                            "runAfter": {
                                                                                                "Set_userId_based_on_email": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "type": "SetVariable",
                                                                                            "inputs": {
                                                                                                "name": "useremailFound",
                                                                                                "value": "@true"
                                                                                            }
                                                                                        },
                                                                                        "set_userData": {
                                                                                            "runAfter": {
                                                                                                "Is_risk_of_user_low_and_severity_not_Medium_or_High": [
                                                                                                    "Succeeded"
                                                                                                ]
                                                                                            },
                                                                                            "type": "AppendToArrayVariable",
                                                                                            "inputs": {
                                                                                                "name": "userData",
                                                                                                "value": {
                                                                                                    "RiskDetails": {
                                                                                                        "riskLevel": "@items('For_each')?['node']?['riskLevel']"
                                                                                                    },
                                                                                                    "sensitiveData": {
                                                                                                        "highRiskFiles": "@items('For_each')?['node']?['sensitiveFiles']?['highRiskFileCount']?['totalCount']",
                                                                                                        "lowRiskFiles": "@items('For_each')?['node']?['sensitiveFiles']?['lowRiskFileCount']?['totalCount']",
                                                                                                        "mediumRiskFiles": "@items('For_each')?['node']?['sensitiveFiles']?['mediumRiskFileCount']?['totalCount']",
                                                                                                        "sensitiveHits": "@items('For_each')?['node']?['totalSensitiveHits']?['totalHits']",
                                                                                                        "sensitiveObjects": "@items('For_each')?['node']?['sensitiveObjectCount']?['totalCount']"
                                                                                                    },
                                                                                                    "userDetails": {
                                                                                                        "userEmail": "@items('For_each')?['node']?['upn']",
                                                                                                        "userFullName": "@items('For_each')?['node']?['fullName']",
                                                                                                        "userId": "@items('For_each')?['node']?['principalId']"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "runAfter": {},
                                                                                    "type": "Foreach"
                                                                                }
                                                                            },
                                                                            "runAfter": {
                                                                                "Filter_array": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "expression": {
                                                                                "and": [
                                                                                    {
                                                                                        "equals": [
                                                                                            "@empty(body('Filter_array'))",
                                                                                            "@false"
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "If"
                                                                        },
                                                                        "Filter_array": {
                                                                            "runAfter": {
                                                                                "Parse_User_risk_Information": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "Query",
                                                                            "inputs": {
                                                                                "from": "@body('Parse_User_risk_Information')?['data']?['principalSummaries']?['edges']",
                                                                                "where": "@equals(item()?['node']?['upn'], variables('UserEmail'))"
                                                                            }
                                                                        },
                                                                        "Parse_User_risk_Information": {
                                                                            "runAfter": {},
                                                                            "type": "ParseJson",
                                                                            "inputs": {
                                                                                "content": "@body('Get_user_risk_information')",
                                                                                "schema": {
                                                                                    "properties": {
                                                                                        "data": {
                                                                                            "properties": {
                                                                                                "principalSummaries": {
                                                                                                    "properties": {
                                                                                                        "__typename": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "edges": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "__typename": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "cursor": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "node": {
                                                                                                                        "properties": {
                                                                                                                            "__typename": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "fullName": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "principalId": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "riskLevel": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "sensitiveFiles": {
                                                                                                                                "properties": {
                                                                                                                                    "__typename": {
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "highRiskFileCount": {
                                                                                                                                        "properties": {
                                                                                                                                            "__typename": {
                                                                                                                                                "type": "string"
                                                                                                                                            },
                                                                                                                                            "totalCount": {
                                                                                                                                                "type": "integer"
                                                                                                                                            },
                                                                                                                                            "violatedCount": {
                                                                                                                                                "type": "integer"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "type": [
                                                                                                                                            "object",
                                                                                                                                            "null"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "lowRiskFileCount": {
                                                                                                                                        "properties": {
                                                                                                                                            "__typename": {
                                                                                                                                                "type": "string"
                                                                                                                                            },
                                                                                                                                            "totalCount": {
                                                                                                                                                "type": "integer"
                                                                                                                                            },
                                                                                                                                            "violatedCount": {
                                                                                                                                                "type": "integer"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "type": [
                                                                                                                                            "object",
                                                                                                                                            "null"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    "mediumRiskFileCount": {
                                                                                                                                        "properties": {
                                                                                                                                            "__typename": {
                                                                                                                                                "type": "string"
                                                                                                                                            },
                                                                                                                                            "totalCount": {
                                                                                                                                                "type": "integer"
                                                                                                                                            },
                                                                                                                                            "violatedCount": {
                                                                                                                                                "type": "integer"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "type": [
                                                                                                                                            "object",
                                                                                                                                            "null"
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "type": [
                                                                                                                                    "object",
                                                                                                                                    "null"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            "sensitiveObjectCount": {
                                                                                                                                "properties": {
                                                                                                                                    "__typename": {
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "totalCount": {
                                                                                                                                        "type": "integer"
                                                                                                                                    },
                                                                                                                                    "violatedCount": {
                                                                                                                                        "type": "integer"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "type": [
                                                                                                                                    "object",
                                                                                                                                    "null"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            "totalSensitiveHits": {
                                                                                                                                "properties": {
                                                                                                                                    "__typename": {
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "totalHits": {
                                                                                                                                        "type": "integer"
                                                                                                                                    },
                                                                                                                                    "violatedHits": {
                                                                                                                                        "type": "integer"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "type": [
                                                                                                                                    "object",
                                                                                                                                    "null"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            "upn": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "cursor",
                                                                                                                    "node",
                                                                                                                    "__typename"
                                                                                                                ],
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "pageInfo": {
                                                                                                            "properties": {
                                                                                                                "__typename": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "endCursor": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "hasNextPage": {
                                                                                                                    "type": "boolean"
                                                                                                                },
                                                                                                                "hasPreviousPage": {
                                                                                                                    "type": "boolean"
                                                                                                                },
                                                                                                                "startCursor": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {},
                                                                    "else": {
                                                                        "actions": {
                                                                            "Add_comment_to_incident_that_no_users_are_available": {
                                                                                "runAfter": {},
                                                                                "type": "ApiConnection",
                                                                                "inputs": {
                                                                                    "body": {
                                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                        "message": "<p>Sensitive Data Access information is not available related to user @{outputs('Username_or_Email')}</p>"
                                                                                    },
                                                                                    "host": {
                                                                                        "connection": {
                                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                        }
                                                                                    },
                                                                                    "method": "post",
                                                                                    "path": "/Incidents/Comment"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@empty(body('Get_user_risk_information'))",
                                                                                    "@false"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "contains": [
                                                                        "@body('Get_user_risk_information')",
                                                                        "errors"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                },
                                                "runAfter": {
                                                    "Get_user_risk_information": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "else": {
                                                    "actions": {
                                                        "Set_error_message_due_to_failure_of_user_list_api": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "errorMessage",
                                                                "value": "@{body('Get_user_risk_information')?['message']}"
                                                            }
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "equals": [
                                                                "@outputs('Get_user_risk_information')['statusCode']",
                                                                200
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "Get_user_risk_information": {
                                                "runAfter": {},
                                                "type": "Http",
                                                "inputs": {
                                                    "body": {
                                                        "query": "query UserAccessPrincipalListQuery($filter: PrincipalSummariesFilterInput, $timelineDate: String!, $sort: ListPrincipalsSummarySortInput, $first: Int, $after: String, $includeWhitelistedResults: Boolean, $isGroupPrincipalType: Boolean!) {\r\n  principalSummaries(\r\n    filter: $filter\r\n    timelineDate: $timelineDate\r\n    sort: $sort\r\n    first: $first\r\n    after: $after\r\n    includeWhitelistedResults: $includeWhitelistedResults\r\n  ) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        principalId\r\n        fullName\r\n        upn @skip(if: $isGroupPrincipalType)\r\n        riskLevel\r\n        sensitiveFiles {\r\n          ...SensitiveFilesTableCellFragment\r\n          __typename\r\n        }\r\n        totalSensitiveHits {\r\n          ...SummaryHitsFragment\r\n          __typename\r\n        }\r\n        sensitiveObjectCount {\r\n          ...SummaryCountFragment\r\n          __typename\r\n        }\r\n        numDescendants @include(if: $isGroupPrincipalType)\r\n        domainName @include(if: $isGroupPrincipalType)\r\n        __typename\r\n      }\r\n      __typename\r\n    }\r\n    pageInfo {\r\n      startCursor\r\n      endCursor\r\n      hasNextPage\r\n      hasPreviousPage\r\n      __typename\r\n    }\r\n    __typename\r\n  }\r\n}\r\n\r\nfragment SensitiveFilesTableCellFragment on SensitiveFiles {\r\n  highRiskFileCount {\r\n    ...SummaryCountFragment\r\n    __typename\r\n  }\r\n  mediumRiskFileCount {\r\n    ...SummaryCountFragment\r\n    __typename\r\n  }\r\n  lowRiskFileCount {\r\n    ...SummaryCountFragment\r\n    __typename\r\n  }\r\n  __typename\r\n}\r\n\r\nfragment SummaryCountFragment on SummaryCount {\r\n  totalCount\r\n  violatedCount\r\n  __typename\r\n}\r\n\r\nfragment SummaryHitsFragment on SummaryHits {\r\n  totalHits\r\n  violatedHits\r\n  __typename\r\n}\r\n",
                                                        "variables": "@variables('uservariable')"
                                                    },
                                                    "headers": {
                                                        "Authorization": "Bearer @{variables('AccessToken')}"
                                                    },
                                                    "method": "POST",
                                                    "uri": "@{variables('BaseUrl')}/api/graphql"
                                                }
                                            }
                                        },
                                        "runAfter": {
                                            "Does_user_email_available_in_incident": [
                                                "Succeeded"
                                            ]
                                        },
                                        "expression": "@equals(or(equals(variables('useremailFound'), true), equals(variables('hasNextPage'), false)), true)",
                                        "limit": {
                                            "count": 60,
                                            "timeout": "PT1H"
                                        },
                                        "type": "Until"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@empty(variables('Username'))",
                                            "@false"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_each_alert_details": {
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions": {
                                "Parse_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@items('For_each_alert_details')?['properties']?['additionalData']?['Custom Details']",
                                        "schema": {
                                            "properties": {
                                                "Email": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Username": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Set_Email": {
                                    "runAfter": {
                                        "Set_Username": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "UserEmail",
                                        "value": "@{if(not(empty(body('Parse_JSON')?['Email'])), body('Parse_JSON')?['Email'][0], '')}"
                                    }
                                },
                                "Set_Username": {
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Username",
                                        "value": "@{if(not(empty(body('Parse_JSON')?['Username'])), body('Parse_JSON')?['Username'][0], '')}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_Email": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Get_Access_Token": {
                            "runAfter": {
                                "Get_Rubrik_ClientSecret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "client_id": "@{body('Get_Rubrik_ClientId')?['value']}",
                                    "client_secret": "@{body('Get_Rubrik_ClientSecret')?['value']}"
                                },
                                "method": "POST",
                                "uri": "@{variables('BaseUrl')}/api/client_token"
                            }
                        },
                        "Get_Rubrik_ClientId": {
                            "runAfter": {
                                "Initialize_user_policy_hits_data_logType": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('Rubrik-AS-Int-ClientId')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Get_Rubrik_ClientSecret": {
                            "runAfter": {
                                "Get_Rubrik_ClientId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('Rubrik-AS-Int-ClientSecret')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Initialize_AccessToken": {
                            "runAfter": {
                                "Does_status_code_of_get_access_token_equal_to_200": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AccessToken",
                                        "type": "string",
                                        "value": "@{body('Get_Access_Token')?['access_token']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_BaseUrl": {
                            "runAfter": {
                                "For_each_alert_details": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "BaseUrl",
                                        "type": "string",
                                        "value": "[parameters('BaseUrl')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_Email": {
                            "runAfter": {
                                "Initialize_Username": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UserEmail",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Username": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Username",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_errormessage": {
                            "runAfter": {
                                "Initialize_users_data": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "errorMessage",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_hasNextPage": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "hasNextPage",
                                        "type": "boolean",
                                        "value": "@true"
                                    }
                                ]
                            }
                        },
                        "Initialize_incidentCommentCount": {
                            "runAfter": {
                                "Initialize_hasNextPage": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "incidentCommentCount",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize_status": {
                            "runAfter": {
                                "Initialize_userGroups": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "useremailFound",
                                        "type": "boolean",
                                        "value": "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_userGroups": {
                            "runAfter": {
                                "Initialize_userId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "userGroups",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_userId": {
                            "runAfter": {
                                "Initialize_BaseUrl": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "userId",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_userPolicy": {
                            "runAfter": {
                                "Initialize_status": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "userPolicyData",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_user_policy_hits_data_logType": {
                            "runAfter": {
                                "Initialize_userdetails_logType": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "userPolicyHitsDataLogType",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_userdetails_logType": {
                            "runAfter": {
                                "Initialize_incidentCommentCount": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "userDetailsLogType",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_users_data": {
                            "runAfter": {
                                "Initialize_userPolicy": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "userData",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "Initialize_errormessage": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "uservariable",
                                        "type": "object",
                                        "value": {
                                            "filter": {
                                                "groupId": "",
                                                "policyIds": [],
                                                "principalSummaryCategory": "USERS_WITH_SENSITIVE_ACCESS",
                                                "principalType": "USER"
                                            },
                                            "first": 1000,
                                            "includeWhitelistedResults": true,
                                            "isGroupPrincipalType": false,
                                            "sort": {
                                                "sortBy": "RISK_LEVEL",
                                                "sortOrder": "DESC"
                                            },
                                            "timelineDate": "@{concat(formatDateTime(utcNow(),'yyyy-MM-dd'),'T00:00:00+00:00')}"
                                        }
                                    }
                                ]
                            }
                        },
                        "Username_or_Email": {
                            "inputs": "@if(empty(variables('Username')),variables('UserEmail'),variables('Username'))",
                            "runAfter": {
                                "Initialize_AccessToken": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName": "[variables('KeyvaultConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "Feature": "UserContext&Access",
                "Rubrik": "Rubrik",
                "hidden-SentinelTemplateName": "RubrikUserIntelligenceAnalysis",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('KeyvaultConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('KeyvaultConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
                },
                "parameterValues": {
                    "token:TenantId": "[parameters('TenantId')]",
                    "token:grantType": "code",
                    "vaultName": "[parameters('KeyvaultName')]"
                }
            }
        }
    ]
}
