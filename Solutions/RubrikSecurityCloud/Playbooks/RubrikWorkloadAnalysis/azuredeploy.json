{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "RubrikWorkloadAnalysis",
        "description": "This playbook retrieves sensitive IP and Host data to enrich the incident details, and adjusts the incident's severity level based on the gathered information.",
        "prerequisites": [
            "1. User must have a valid Rubrik Client Id and Client Secret.",
            "2. Store Service account credentials in Key Vault and obtain keyvault name and tenantId",
            "a. Create a Key Vault with a unique name",
            "b. Go to KeyVault -> secrets, click on Generate/import and create 'Rubrik-Client-Id' & 'Rubrik-Client-Secret' for storing client_id and client_secret respectively",
            "NOTE: Make sure the Permission model in the Access Configuration of Keyvault is selected to the Vault access policy. If not then change it to 'Vault access policy'"
        ],
        "postDeployment": [
            "**a. Authorize connections**",
            "Once deployment is complete, authorize each connection.",
            "1. Go to your logic app -> API connections -> Select keyvault connection resource",
            "2. Go to General -> edit API connection",
            "3. Click the keyvault connection resource",
            "4. Click edit API connection",
            "5. Click Authorize",
            "6. Sign in",
            "7. Click Save",
            "8. Repeat steps for other connections",
            "**b. Assign Role to add comment in incident**",
            "After authorizing each connection, assign role to this playbook.",
            "1. Go to Log Analytics Workspace → <your workspace> → Access Control → Add",
            "2. Add role assignment",
            "3. Assignment type: Job function roles -> Add 'Microsoft Sentinel Contributor' as a Role",
            "4. Members: select managed identity for assigned access to and add your logic app as member",
            "5. Click on review+assign",
            "**c. Add Access policy in Keyvault**",
            "Add access policy for the playbook's managed identity and authorized user to read, and write secrets of key vault.",
            "1. Go to logic app → <your logic app> → identity → System assigned Managed identity and copy Object (principal) ID.",
            "2. Go to keyvaults → <your keyvault> → Access policies → create.",
            "3. Select all keys & secrets permissions. Click next.",
            "4. In the principal section, search by copied object ID. Click next.",
            "5. Click review + create.",
            "**d. Configurations in Microsoft Sentinel**",
            "1. In Microsoft Sentinel, Configure the analytic rules to trigger an incident.",
            "a. Analytic Rule must contain at least one of the below fields mapped in Entity Mapping or Custom Details to successfully fetch data.",
            "IP",
            "Host",
            "2. In Microsoft Sentinel, Configure the automation rules to trigger the playbook.",
            "a. Go to Microsoft Sentinel -> <your workspace> -> Automation",
            "b. Click on Create -> Automation rule",
            "c. Provide name for your rule",
            "d. In Analytic rule name condition, select analytic rule which you have created.",
            "e. In Actions dropdown select Run playbook",
            "f. In second dropdown select your deployed playbook",
            "g. Click on Apply",
            "h. Save the Automation rule.",
            "NOTE: If you want to manually run the playbook on a particular incident follow the below steps:",
            "a. Go to Microsoft Sentinel -> <your workspace> -> Incidents",
            "b. Select an incident.",
            "c. In the right pane, click on Actions, and from the dropdown select the 'Run Playbook' option.",
            "d. click on the Run button beside this playbook."
        ],
        "lastUpdateTime": "2024-11-08T18:00:00.000Z",
        "entities": [
            "ip",
            "Host"
        ],
        "tags": [
            "ip",
            "Host",
            "Rubrik"
        ],
        "support": {
            "tier": "Community",
            "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author": {
            "name": "Rubrik"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "RubrikWorkloadAnalysis",
            "minLength": 1,
            "type": "string",
            "metadata": {
                "description": "Please do not keep 'Playbook Name' parameter empty, else you will receive validation failure"
            }
        },
        "Keyvault Name": {
            "type": "string",
            "metadata": {
                "description": "Enter name of keyvault where service account credentials are stored(Example: RubrikSentinelKeyVault)"
            }
        },
        "Tenant Id": {
            "type": "string",
            "metadata": {
                "description": "Enter Tenant ID of your Microsoft EntraID where keyvault is available"
            }
        },
        "Rubrik Base URL": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "https://rubrik-tme.my.rubrik.com",
            "metadata": {
                "description": "Enter Base URL of the RubrikApi instance (Example: https://rubrik-tme.my.rubrik.com)"
            }
        },
        "IncreaseSeverityLevel": {
            "defaultValue": 1,
            "allowedValues": [
                1,
                2,
                3
            ],
            "type": "Int",
            "metadata": {
                "description": "Enter a value to increase the severity level of the incident.(Example: for value 1 incident severity will change from Low to Medium)"
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                            },
                            "type": "Object"
                        },
                        "Increase_Severity_Level": {
                            "defaultValue": "[parameters('IncreaseSeverityLevel')]",
                            "type": "Int"
                        },
                        "Rubrik_Base_URL": {
                            "defaultValue": "[trim(parameters('Rubrik Base URL'))]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Check_For_Status_Code_Of_Generating_Access_Token": {
                            "actions": {
                                "Set_Access_Token": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Access_Token",
                                        "value": "@{body('Get_Access_Token')?['access_token']}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_Access_Token": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Terminate_Due_To_Authentication_Failure": {
                                        "runAfter": {},
                                        "type": "Terminate",
                                        "inputs": {
                                            "runError": {
                                                "code": "@{outputs('Get_Access_Token')['statusCode']}",
                                                "message": "@{body('Get_Access_Token')?['message']}"
                                            },
                                            "runStatus": "Failed"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@outputs('Get_Access_Token')['statusCode']",
                                            200
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Verify_Empty_List_Of_IP_-_Host": {
                            "actions": {
                                "Terminate_Due_Empty_IP_-_Host_List": {
                                    "runAfter": {},
                                    "type": "Terminate",
                                    "inputs": {
                                        "runError": {
                                            "code": "404",
                                            "message": "IP or Host are not Mapped with Incident"
                                        },
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {
                                "For_Hosts_In_Entity_Mapping": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(variables('IP_Host_List'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_To_Verify_Length_Of_Failed_IP_-_Host_List": {
                            "actions": {
                                "Condition_To_Check_All_Failure": {
                                    "actions": {},
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "Update_Incident_(2)": {
                                                "runAfter": {},
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                        "severity": "@variables('Incident_Severity')"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "put",
                                                    "path": "/Incidents"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@length(variables('Failed_IP_Host_List'))",
                                                    "@length(variables('IP_Host_List'))"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_To_Verify_That_Incident_Comment_Does_Not_Reach_Limit_(2)": {
                                    "actions": {
                                        "Add_Failed_IP_-_Host_List_Into_Incident_Comment": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@body('Update_Incident_(2)')?['id']",
                                                    "message": "<p>Failed IP/Host List: @{replace(replace(replace(replace(string(variables('Failed_IP_Host_List')), '\"', ''), '[', ''), ']', ''), ',', ', ')}</p>"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Incidents/Comment"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_To_Check_All_Failure": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "less": [
                                                    "@variables('Comment_Count')",
                                                    100
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "For_Each_IP_Or_Host": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Update_Incident": {
                                        "runAfter": {},
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                "severity": "@variables('Incident_Severity')"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "put",
                                            "path": "/Incidents"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('Failed_IP_Host_List'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "For_Each_Alert_Details": {
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions": {
                                "Condition_To_Verify_Custom_Details_Is_Not_Empty": {
                                    "actions": {
                                        "Condition_To_Verify_Host_Is_Mapped_In_Custom_Details": {
                                            "actions": {
                                                "Condition_To_Verify_List_Of_Hosts": {
                                                    "actions": {
                                                        "For_Each_Host_In_Custom_Details": {
                                                            "foreach": "@json(body('Parse_Custom_Details')?['Host'][0])",
                                                            "actions": {
                                                                "Append_Host_Into_List": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "IP_Host_List",
                                                                        "value": "@items('For_Each_Host_In_Custom_Details')"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "type": "Foreach"
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "else": {
                                                        "actions": {
                                                            "Append_Host_Into_List_(2)": {
                                                                "runAfter": {},
                                                                "type": "AppendToArrayVariable",
                                                                "inputs": {
                                                                    "name": "IP_Host_List",
                                                                    "value": "@body('Parse_Custom_Details')?['Host'][0]"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@body('Parse_Custom_Details')?['Host'][0]",
                                                                    "]"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "runAfter": {
                                                "Set_IP_List_Size_(2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@empty(body('Parse_Custom_Details')?['Host'])",
                                                            "@false"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_To_Verify_IP_Is_Mapped_In_Custom_Details": {
                                            "actions": {
                                                "Condition_To_Verify_List_Of_IPs_(2)": {
                                                    "actions": {
                                                        "For_Each_IP_In_Custom_Details": {
                                                            "foreach": "@json(body('Parse_Custom_Details')?['IP'][0])",
                                                            "actions": {
                                                                "Condition_To_Verify_IP_Already_Not_Exist_In_List": {
                                                                    "actions": {
                                                                        "Append_IP_Into_List_(3)": {
                                                                            "runAfter": {},
                                                                            "type": "AppendToArrayVariable",
                                                                            "inputs": {
                                                                                "name": "IP_Host_List",
                                                                                "value": "@items('For_Each_IP_In_Custom_Details')"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {},
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@contains(variables('IP_Host_List'), items('For_Each_IP_In_Custom_Details'))",
                                                                                    "@false"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "type": "Foreach"
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "else": {
                                                        "actions": {
                                                            "Condition_To_Verify_IP_Already_Not_Exist_In_List_(2)": {
                                                                "actions": {
                                                                    "Append_IP_Into_List_(4)": {
                                                                        "runAfter": {},
                                                                        "type": "AppendToArrayVariable",
                                                                        "inputs": {
                                                                            "name": "IP_Host_List",
                                                                            "value": "@body('Parse_Custom_Details')?['IP'][0]"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {},
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "equals": [
                                                                                "@contains(variables('IP_Host_List'), body('Parse_Custom_Details')?['IP'][0])",
                                                                                "@false"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@body('Parse_Custom_Details')?['IP'][0]",
                                                                    "]"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_Custom_Details": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@empty(body('Parse_Custom_Details')?['IP'])",
                                                            "@false"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Parse_Custom_Details": {
                                            "runAfter": {},
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@items('For_Each_Alert_Details')?['properties']?['additionalData']?['Custom Details']",
                                                "schema": {
                                                    "properties": {
                                                        "Host": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "IP": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Set_IP_List_Size_(2)": {
                                            "runAfter": {
                                                "Condition_To_Verify_IP_Is_Mapped_In_Custom_Details": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "IP_List_Size",
                                                "value": "@length(variables('IP_Host_List'))"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@empty(items('For_Each_Alert_Details')?['properties']?['additionalData']?['Custom Details'])",
                                                    "@false"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Set_IP_List_Size": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_Each_IP_Or_Host": {
                            "foreach": "@variables('IP_Host_List')",
                            "actions": {
                                "Check_For_HTTP_Request_Status_Code": {
                                    "actions": {
                                        "Condition_To_Check_IP_-_Host_Invalid_Or_Data_Not_Found": {
                                            "actions": {
                                                "Append_IP_Address_Or_Host_Name_Into_Failed_List_(2)": {
                                                    "runAfter": {},
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "Failed_IP_Host_List",
                                                        "value": "@items('For_Each_IP_Or_Host')"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_Response": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Condition_To_Verify_Incident_Severity_Is_High": {
                                                        "actions": {},
                                                        "runAfter": {
                                                            "Condition_To_Verify_That_Incident_Comment_Does_Not_Reach_Limit": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "else": {
                                                            "actions": {
                                                                "Condition_To_Check_Incident_Updated_By_Increase_Level": {
                                                                    "actions": {
                                                                        "Condition_To_Check_Response_And_Update_Incident_Severity": {
                                                                            "actions": {
                                                                                "Condition_To_Verify_Increase_Level_Is_1": {
                                                                                    "actions": {
                                                                                        "Switch_Case_For_Update_Incident_Severity": {
                                                                                            "runAfter": {},
                                                                                            "cases": {
                                                                                                "Case_When_Severity_Is_Informational": {
                                                                                                    "case": "Informational",
                                                                                                    "actions": {
                                                                                                        "Set_Incident_Severity_Updated_To_True": {
                                                                                                            "runAfter": {
                                                                                                                "Set_Severity_For_Increase_Level_To_Low": [
                                                                                                                    "Succeeded"
                                                                                                                ]
                                                                                                            },
                                                                                                            "type": "SetVariable",
                                                                                                            "inputs": {
                                                                                                                "name": "Incident_Severity_Updated",
                                                                                                                "value": "@true"
                                                                                                            }
                                                                                                        },
                                                                                                        "Set_Severity_For_Increase_Level_To_Low": {
                                                                                                            "runAfter": {},
                                                                                                            "type": "SetVariable",
                                                                                                            "inputs": {
                                                                                                                "name": "Severity_For_Increase_Level",
                                                                                                                "value": "Low"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "Case_When_Severity_Is_Low": {
                                                                                                    "case": "Low",
                                                                                                    "actions": {
                                                                                                        "Set_Incident_Severity_Updated_To_True_(2)": {
                                                                                                            "runAfter": {
                                                                                                                "Set_Severity_For_Increase_Level_To_Medium": [
                                                                                                                    "Succeeded"
                                                                                                                ]
                                                                                                            },
                                                                                                            "type": "SetVariable",
                                                                                                            "inputs": {
                                                                                                                "name": "Incident_Severity_Updated",
                                                                                                                "value": "@true"
                                                                                                            }
                                                                                                        },
                                                                                                        "Set_Severity_For_Increase_Level_To_Medium": {
                                                                                                            "runAfter": {},
                                                                                                            "type": "SetVariable",
                                                                                                            "inputs": {
                                                                                                                "name": "Severity_For_Increase_Level",
                                                                                                                "value": "Medium"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "Case_When_Severity_Is_Medium": {
                                                                                                    "case": "Medium",
                                                                                                    "actions": {
                                                                                                        "Set_Incident_Severity_Updated_To_True_(3)": {
                                                                                                            "runAfter": {
                                                                                                                "Set_Severity_For_Increase_Level_To_High": [
                                                                                                                    "Succeeded"
                                                                                                                ]
                                                                                                            },
                                                                                                            "type": "SetVariable",
                                                                                                            "inputs": {
                                                                                                                "name": "Incident_Severity_Updated",
                                                                                                                "value": "@true"
                                                                                                            }
                                                                                                        },
                                                                                                        "Set_Severity_For_Increase_Level_To_High": {
                                                                                                            "runAfter": {},
                                                                                                            "type": "SetVariable",
                                                                                                            "inputs": {
                                                                                                                "name": "Severity_For_Increase_Level",
                                                                                                                "value": "High"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "expression": "@variables('Severity_For_Increase_Level')",
                                                                                            "type": "Switch"
                                                                                        }
                                                                                    },
                                                                                    "runAfter": {},
                                                                                    "else": {
                                                                                        "actions": {
                                                                                            "Condition_To_Verify_Increase_Level_Is_2_And_Incident_Severity_Is_Informational": {
                                                                                                "actions": {
                                                                                                    "Set_Incident_Severity_Updated_To_True_(4)": {
                                                                                                        "runAfter": {
                                                                                                            "Set_Severity_For_Increase_Level_To_Medium_(2)": [
                                                                                                                "Succeeded"
                                                                                                            ]
                                                                                                        },
                                                                                                        "type": "SetVariable",
                                                                                                        "inputs": {
                                                                                                            "name": "Incident_Severity_Updated",
                                                                                                            "value": "@true"
                                                                                                        }
                                                                                                    },
                                                                                                    "Set_Severity_For_Increase_Level_To_Medium_(2)": {
                                                                                                        "runAfter": {},
                                                                                                        "type": "SetVariable",
                                                                                                        "inputs": {
                                                                                                            "name": "Severity_For_Increase_Level",
                                                                                                            "value": "Medium"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "runAfter": {},
                                                                                                "else": {
                                                                                                    "actions": {
                                                                                                        "Set_Incident_Severity_Updated_To_True_(5)": {
                                                                                                            "runAfter": {
                                                                                                                "Set_Severity_For_Increase_Level_To_High_(2)": [
                                                                                                                    "Succeeded"
                                                                                                                ]
                                                                                                            },
                                                                                                            "type": "SetVariable",
                                                                                                            "inputs": {
                                                                                                                "name": "Incident_Severity_Updated",
                                                                                                                "value": "@true"
                                                                                                            }
                                                                                                        },
                                                                                                        "Set_Severity_For_Increase_Level_To_High_(2)": {
                                                                                                            "runAfter": {},
                                                                                                            "type": "SetVariable",
                                                                                                            "inputs": {
                                                                                                                "name": "Severity_For_Increase_Level",
                                                                                                                "value": "High"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "expression": {
                                                                                                    "and": [
                                                                                                        {
                                                                                                            "equals": [
                                                                                                                "@variables('Increase_Severity_Level')",
                                                                                                                2
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "equals": [
                                                                                                                "@variables('Severity_For_Increase_Level')",
                                                                                                                "Informational"
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "type": "If"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "expression": {
                                                                                        "and": [
                                                                                            {
                                                                                                "equals": [
                                                                                                    "@variables('Increase_Severity_Level')",
                                                                                                    1
                                                                                                ]
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "type": "If"
                                                                                }
                                                                            },
                                                                            "runAfter": {},
                                                                            "expression": {
                                                                                "and": [
                                                                                    {
                                                                                        "equals": [
                                                                                            "@or(\r\nif(equals(body('Parse_Response')?['threatHuntInfo']?['latestMaliciousThreatHunt']?['isMalicious'], 'Matches Found'), true, false),\r\nif(equals(body('Parse_Response')?['threatMonitoringInfo']?['latestMaliciousThreatMonitoring']?['isMalicious'], 'Matches Found'), true, false))",
                                                                                            "@true"
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type": "If"
                                                                        }
                                                                    },
                                                                    "runAfter": {},
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@variables('Incident_Severity_Updated')",
                                                                                    "@false"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "Condition_To_Check_Risk_Level": {
                                                                    "actions": {
                                                                        "Set_Severity_For_Risk_Level": {
                                                                            "runAfter": {},
                                                                            "type": "SetVariable",
                                                                            "inputs": {
                                                                                "name": "Severity_For_RiskLevel",
                                                                                "value": "@{variables('Severity_Mapping')?[toLower(body('Parse_Response')?['sensitiveInfo']?['riskLevel'])]}"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "Condition_To_Check_Incident_Updated_By_Increase_Level": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@contains(string(variables('Severity_Mapping')), toLower(body('Parse_Response')?['sensitiveInfo']?['riskLevel']))",
                                                                                    "@true"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "Condition_To_Verify_High_Severity": {
                                                                    "actions": {
                                                                        "Set_Incident_Severity_To_High": {
                                                                            "runAfter": {},
                                                                            "type": "SetVariable",
                                                                            "inputs": {
                                                                                "name": "Incident_Severity",
                                                                                "value": "High"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "Switch_Case_For_Anomaly_Severity": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "else": {
                                                                        "actions": {
                                                                            "Condition_To_Verify_Medium_Severity": {
                                                                                "actions": {
                                                                                    "Set_Incident_Severity_To_Medium": {
                                                                                        "runAfter": {},
                                                                                        "type": "SetVariable",
                                                                                        "inputs": {
                                                                                            "name": "Incident_Severity",
                                                                                            "value": "Medium"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "runAfter": {},
                                                                                "else": {
                                                                                    "actions": {
                                                                                        "Condition_To_Verify_Low_Severity": {
                                                                                            "actions": {
                                                                                                "Set_Incident_Severity_To_Low": {
                                                                                                    "runAfter": {},
                                                                                                    "type": "SetVariable",
                                                                                                    "inputs": {
                                                                                                        "name": "Incident_Severity",
                                                                                                        "value": "Low"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "runAfter": {},
                                                                                            "expression": {
                                                                                                "and": [
                                                                                                    {
                                                                                                        "equals": [
                                                                                                            "@or(if(equals(variables('Severity_For_Increase_Level'), 'Low'), true, false), if(equals(variables('Severity_For_RiskLevel'), 'Low'), true, false), if(equals(variables('Anomaly_Severity'), 'Low'), true, false), if(equals(variables('Incident_Severity'), 'Low'), true, false))",
                                                                                                            "@true"
                                                                                                        ]
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "type": "If"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "expression": {
                                                                                    "and": [
                                                                                        {
                                                                                            "equals": [
                                                                                                "@or(if(equals(variables('Severity_For_Increase_Level'), 'Medium'), true, false), if(equals(variables('Severity_For_RiskLevel'), 'Medium'), true, false), if(equals(variables('Anomaly_Severity'), 'Medium'), true, false), if(equals(variables('Incident_Severity'), 'Medium'), true, false))",
                                                                                                "@true"
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "type": "If"
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@or(if(equals(variables('Severity_For_Increase_Level'), 'High'), true, false), if(equals(variables('Severity_For_RiskLevel'), 'High'), true, false), if(equals(variables('Anomaly_Severity'), 'High'), true, false), if(equals(variables('Incident_Severity'), 'High'), true, false))",
                                                                                    "@true"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "Switch_Case_For_Anomaly_Severity": {
                                                                    "runAfter": {
                                                                        "Condition_To_Check_Risk_Level": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "cases": {
                                                                        "Case_When_Anomaly_Severity_Is_Critical": {
                                                                            "case": "critical",
                                                                            "actions": {
                                                                                "Set_Anomaly_Severity_To_High": {
                                                                                    "runAfter": {},
                                                                                    "type": "SetVariable",
                                                                                    "inputs": {
                                                                                        "name": "Anomaly_Severity",
                                                                                        "value": "High"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "Case_When_Anomaly_Severity_Is_Informational": {
                                                                            "case": "informational",
                                                                            "actions": {
                                                                                "Set_Anomaly_Severity_To_Informational": {
                                                                                    "runAfter": {},
                                                                                    "type": "SetVariable",
                                                                                    "inputs": {
                                                                                        "name": "Anomaly_Severity",
                                                                                        "value": "Informational"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "Case_When_Anomaly_Severity_Is_Warning": {
                                                                            "case": "warning",
                                                                            "actions": {
                                                                                "Set_Anomaly_Severity_To_Medium": {
                                                                                    "runAfter": {},
                                                                                    "type": "SetVariable",
                                                                                    "inputs": {
                                                                                        "name": "Anomaly_Severity",
                                                                                        "value": "Medium"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression": "@toLower(body('Parse_Response')?['anomalyInfo']?['severity'])",
                                                                    "type": "Switch"
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@variables('Incident_Severity')",
                                                                        "High"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    },
                                                    "Condition_To_Verify_That_Incident_Comment_Does_Not_Reach_Limit": {
                                                        "actions": {
                                                            "Condition_To_Verify_Length_Of_Detail_Response_To_30000_Characters_Limit": {
                                                                "actions": {
                                                                    "Add_Detail_Response_Of_IP_To_Incident_Comment": {
                                                                        "runAfter": {},
                                                                        "type": "ApiConnection",
                                                                        "inputs": {
                                                                            "body": {
                                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                "message": "<p>@{variables('Detailed_Response')}</p>"
                                                                            },
                                                                            "host": {
                                                                                "connection": {
                                                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                }
                                                                            },
                                                                            "method": "post",
                                                                            "path": "/Incidents/Comment"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {},
                                                                "else": {
                                                                    "actions": {
                                                                        "Add_Comment_For_30000_Characters_Limit": {
                                                                            "runAfter": {},
                                                                            "type": "ApiConnection",
                                                                            "inputs": {
                                                                                "body": {
                                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                    "message": "<p>Length of response is exceeded to 30,000 characters for @{items('For_Each_IP_Or_Host')}</p>"
                                                                                },
                                                                                "host": {
                                                                                    "connection": {
                                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                                    }
                                                                                },
                                                                                "method": "post",
                                                                                "path": "/Incidents/Comment"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "less": [
                                                                                "@length(variables('Detailed_Response'))",
                                                                                30000
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            },
                                                            "Increment_Comment_Count": {
                                                                "runAfter": {
                                                                    "Condition_To_Verify_Length_Of_Detail_Response_To_30000_Characters_Limit": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "IncrementVariable",
                                                                "inputs": {
                                                                    "name": "Comment_Count",
                                                                    "value": 1
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Set_Detailed_Response": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "less": [
                                                                        "@variables('Comment_Count')",
                                                                        100
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    },
                                                    "Set_Detailed_Response": {
                                                        "runAfter": {},
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "Detailed_Response",
                                                            "value": "<!-- General Info Table -->\n<h3>General Information for the given @{body('Parse_Response')?['sensitiveInfo']?['riskLevel']} risk : @{items('For_Each_IP_Or_Host')}</h3>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"4\">\n    <tr>\n        <td>FID</td>\n        <td>@{body('Parse_Response')?['generalInfo']?['fid']}</td>\n    </tr>\n    <tr>\n        <td>Name</td>\n        <td>@{body('Parse_Response')?['generalInfo']?['name']}</td>\n    </tr>\n    <tr>\n        <td>Object Type</td>\n        <td>@{body('Parse_Response')?['generalInfo']?['objectType']}</td>\n    </tr>\n    <tr>\n        <td>Protection Status</td>\n        <td>@{body('Parse_Response')?['generalInfo']?['protectionStatus']}</td>\n    </tr>\n    <tr>\n        <td>Last Snapshot</td>\n        <td>@{body('Parse_Response')?['generalInfo']?['lastSnapshot']}</td>\n    </tr>\n    <tr>\n        <td>Redirect Link</td>\n        <td><a href=@{body('Parse_Response')?['generalInfo']?['redirectLink']}>@{body('Parse_Response')?['generalInfo']?['redirectLink']}</a></td>\n    </tr>\n</table>\n\n<!-- Sensitive Info Table -->\n<h3>Sensitive Information</h3>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"4\">\n    <tr>\n        <td>Risk Level</td>\n        <td>@{body('Parse_Response')?['sensitiveInfo']?['riskLevel']}</td>\n    </tr>\n    <tr>\n        <td>Sensitive Files</td>\n        <td>\n            <p>mediumCount: @{body('Parse_Response')?['sensitiveInfo']?['sensitiveFiles']?['mediumCount']}</p>\n        </td>\n    </tr>\n    <tr>\n        <td>Sensitive Hits</td>\n        <td>@{body('Parse_Response')?['sensitiveInfo']?['sensitiveHits']}</td>\n    </tr>\n    <tr>\n        <td>Open Access Files</td>\n        <td>@{body('Parse_Response')?['sensitiveInfo']?['openAccessFiles']}</td>\n    </tr>\n    <tr>\n        <td>Stale Files</td>\n        <td>@{body('Parse_Response')?['sensitiveInfo']?['staleFiles']}</td>\n    </tr>\n    <tr>\n        <td>Policy Names</td>\n        <td>@{replace(replace(replace(replace(string(body('Parse_Response')?['sensitiveInfo']?['policyNames']), '\"', ''), '[', ''), ']', ''), ',', ', ')}</td>\n    </tr>\n    <tr>\n        <td>Redirect Link</td>\n        <td><a href=@{body('Parse_Response')?['sensitiveInfo']?['redirectLink']}>@{body('Parse_Response')?['sensitiveInfo']?['redirectLink']}</a></td>\n    </tr>\n</table>\n\n<!-- Anomaly Info Table -->\n<h3>Anomaly Information</h3>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"4\">\n    <tr>\n        <td>Severity</td>\n        <td>@{body('Parse_Response')?['anomalyInfo']?['severity']}</td>\n    </tr>\n    <tr>\n        <td>Detection Time</td>\n        <td>@{body('Parse_Response')?['anomalyInfo']?['detectionTime']}</td>\n    </tr>\n    <tr>\n        <td>Created File Count</td>\n        <td>@{body('Parse_Response')?['anomalyInfo']?['createdFileCount']}</td>\n    </tr>\n    <tr>\n        <td>Deleted File Count</td>\n        <td>@{body('Parse_Response')?['anomalyInfo']?['deletedFileCount']}</td>\n    </tr>\n    <tr>\n        <td>Modified File Count</td>\n        <td>@{body('Parse_Response')?['anomalyInfo']?['modifiedFileCount']}</td>\n    </tr>\n    <tr>\n        <td>Suspicious File Count</td>\n        <td>@{body('Parse_Response')?['anomalyInfo']?['suspiciousFileCount']}</td>\n    </tr>\n    <tr>\n        <td>Redirect Link</td>\n        <td><a href=@{body('Parse_Response')?['anomalyInfo']?['redirectLink']}>@{body('Parse_Response')?['anomalyInfo']?['redirectLink']}</a></td>\n    </tr>\n</table>\n\n<!-- Threat Hunt Info Table -->\n<h3>Threat Hunt Information</h3>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"4\">\n    <tr>\n        <td>Latest Threat Hunt</td>\n        <td>\n            <p>huntId: @{body('Parse_Response')?['threatHuntInfo']?['latestThreatHunt']?['huntId']}</p>\n            <p>huntStartTime: @{body('Parse_Response')?['threatHuntInfo']?['latestThreatHunt']?['huntStartTime']}</p>\n            <p>isMalicious: @{body('Parse_Response')?['threatHuntInfo']?['latestThreatHunt']?['isMalicious']}</p>\n        </td>\n    </tr>\n    <tr>\n        <td>Latest Malicious Threat Hunt</td>\n        <td>\n            <p>huntId: @{body('Parse_Response')?['threatHuntInfo']?['latestMaliciousThreatHunt']?['huntId']}</p>\n            <p>huntStartTime: @{body('Parse_Response')?['threatHuntInfo']?['latestMaliciousThreatHunt']?['huntStartTime']}</p>\n            <p>isMalicious: @{body('Parse_Response')?['threatHuntInfo']?['latestMaliciousThreatHunt']?['isMalicious']}</p>\n        </td>\n    </tr>\n    <tr>\n        <td>Redirect Link</td>\n        <td><a href=@{body('Parse_Response')?['threatHuntInfo']?['redirectLink']}>@{body('Parse_Response')?['threatHuntInfo']?['redirectLink']}</a></td>\n    </tr>\n</table>\n\n<!-- Threat Monitoring Info Table -->\n<h3>Threat Monitoring Information</h3>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"4\">\n    <tr>\n        <td>Latest Threat Monitoring</td>\n        <td>\n            <p>snapshotFid: @{body('Parse_Response')?['threatMonitoringInfo']?['latestThreatMonitoring']?['snapshotFid']}</p>\n            <p>monitoringScanTime: @{body('Parse_Response')?['threatMonitoringInfo']?['latestThreatMonitoring']?['monitoringScanTime']}</p>\n            <p>isMalicious: @{body('Parse_Response')?['threatMonitoringInfo']?['latestThreatMonitoring']?['isMalicious']}</p>\n        </td>\n    </tr>\n    <tr>\n        <td>Latest Malicious Threat Monitoring</td>\n        <td>\n            <p>snapshotFid: @{body('Parse_Response')?['threatMonitoringInfo']?['latestMaliciousThreatMonitoring']?['snapshotFid']}</p>\n            <p>monitoringScanTime: @{body('Parse_Response')?['threatMonitoringInfo']?['latestMaliciousThreatMonitoring']?['monitoringScanTime']}</p>\n            <p>isMalicious: @{body('Parse_Response')?['threatMonitoringInfo']?['latestMaliciousThreatMonitoring']?['isMalicious']}</p>\n        </td>\n    </tr>\n    <tr>\n        <td>Redirect Link</td>\n        <td><a href=@{body('Parse_Response')?['threatMonitoringInfo']?['redirectLink']}>@{body('Parse_Response')?['threatMonitoringInfo']?['redirectLink']}</a></td>\n    </tr>\n</table>"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "or": [
                                                    {
                                                        "equals": [
                                                            "@contains(body('Parse_Response')?['generalInfo']?['fid'], 'No Objects Found')",
                                                            "@true"
                                                        ]
                                                    },
                                                    {
                                                        "equals": [
                                                            "@contains(body('Parse_Response')?['generalInfo']?['name'], 'No Objects Found')",
                                                            "@true"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Parse_Response": {
                                            "runAfter": {},
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Get_Information')",
                                                "schema": {
                                                    "properties": {
                                                        "anomalyInfo": {
                                                            "properties": {
                                                                "createdFileCount": {
                                                                    "type": "string"
                                                                },
                                                                "deletedFileCount": {
                                                                    "type": "string"
                                                                },
                                                                "detectionTime": {
                                                                    "type": "string"
                                                                },
                                                                "modifiedFileCount": {
                                                                    "type": "string"
                                                                },
                                                                "redirectLink": {
                                                                    "type": "string"
                                                                },
                                                                "severity": {
                                                                    "type": "string"
                                                                },
                                                                "suspiciousFileCount": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "generalInfo": {
                                                            "properties": {
                                                                "fid": {
                                                                    "type": "string"
                                                                },
                                                                "lastSnapshot": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "objectType": {
                                                                    "type": "string"
                                                                },
                                                                "protectionStatus": {
                                                                    "type": "string"
                                                                },
                                                                "redirectLink": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "sensitiveInfo": {
                                                            "properties": {
                                                                "openAccessFiles": {
                                                                    "type": "integer"
                                                                },
                                                                "policyNames": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "redirectLink": {
                                                                    "type": "string"
                                                                },
                                                                "riskLevel": {
                                                                    "type": "string"
                                                                },
                                                                "sensitiveFiles": {
                                                                    "properties": {
                                                                        "mediumCount": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "sensitiveHits": {
                                                                    "type": "integer"
                                                                },
                                                                "staleFiles": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "threatHuntInfo": {
                                                            "properties": {
                                                                "latestMaliciousThreatHunt": {
                                                                    "properties": {
                                                                        "huntId": {
                                                                            "type": "string"
                                                                        },
                                                                        "huntStartTime": {
                                                                            "type": "string"
                                                                        },
                                                                        "isMalicious": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "latestThreatHunt": {
                                                                    "properties": {
                                                                        "huntId": {
                                                                            "type": "string"
                                                                        },
                                                                        "huntStartTime": {
                                                                            "type": "string"
                                                                        },
                                                                        "isMalicious": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "redirectLink": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "threatMonitoringInfo": {
                                                            "properties": {
                                                                "latestMaliciousThreatMonitoring": {
                                                                    "properties": {
                                                                        "isMalicious": {
                                                                            "type": "string"
                                                                        },
                                                                        "monitoringScanTime": {
                                                                            "type": "string"
                                                                        },
                                                                        "snapshotFid": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "latestThreatMonitoring": {
                                                                    "properties": {
                                                                        "isMalicious": {
                                                                            "type": "string"
                                                                        },
                                                                        "monitoringScanTime": {
                                                                            "type": "string"
                                                                        },
                                                                        "snapshotFid": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "redirectLink": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Get_Information": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Append_IP_Address_Or_Host_Name_Into_Failed_List": {
                                                "runAfter": {},
                                                "type": "AppendToArrayVariable",
                                                "inputs": {
                                                    "name": "Failed_IP_Host_List",
                                                    "value": "@items('For_Each_IP_Or_Host')"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@outputs('Get_Information')['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_To_Set_Search_Type": {
                                    "actions": {
                                        "Set_Search_Type_To_name": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Search_Type",
                                                "value": "name"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "Decrement_IP_List_Size_By_1": {
                                                "runAfter": {},
                                                "type": "DecrementVariable",
                                                "inputs": {
                                                    "name": "IP_List_Size",
                                                    "value": 1
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@variables('IP_List_Size')",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Get_Information": {
                                    "runAfter": {
                                        "Condition_To_Set_Search_Type": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Authorization": "Bearer @{variables('Access_Token')}"
                                        },
                                        "method": "GET",
                                        "queries": {
                                            "search_string": "@{items('For_Each_IP_Or_Host')}",
                                            "search_type": "@variables('Search_Type')"
                                        },
                                        "uri": "@{variables('Base_URL')}/api/thirdparty/workload_summary"
                                    }
                                }
                            },
                            "runAfter": {
                                "Check_For_Status_Code_Of_Generating_Access_Token": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "For_Hosts_In_Entity_Mapping": {
                            "foreach": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                            "actions": {
                                "Condition_To_Verify_Host": {
                                    "actions": {
                                        "Condition_To_Verify_List_Of_Hosts_(2)": {
                                            "actions": {
                                                "For_Each_Host_In_Entity_Mapping": {
                                                    "foreach": "@json(items('For_Hosts_In_Entity_Mapping')?['properties']?['hostName'])",
                                                    "actions": {
                                                        "Condition_To_Verify_Host_Already_Not_Exist_In_List": {
                                                            "actions": {
                                                                "Append_Host_Into_List_(3)": {
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable",
                                                                    "inputs": {
                                                                        "name": "IP_Host_List",
                                                                        "value": "@items('For_Each_Host_In_Entity_Mapping')"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@contains(variables('IP_Host_List'), items('For_Each_Host_In_Entity_Mapping'))",
                                                                            "@false"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "type": "Foreach"
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Condition_To_Verify_Host_Already_Not_Exist_In_List_(2)": {
                                                        "actions": {
                                                            "Append_Host_Into_List_(4)": {
                                                                "runAfter": {},
                                                                "type": "AppendToArrayVariable",
                                                                "inputs": {
                                                                    "name": "IP_Host_List",
                                                                    "value": "@items('For_Hosts_In_Entity_Mapping')?['properties']?['hostName']"
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@contains(variables('IP_Host_List'), items('For_Hosts_In_Entity_Mapping')?['properties']?['hostName'])",
                                                                        "@false"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@items('For_Hosts_In_Entity_Mapping')?['properties']?['hostName']",
                                                            "]"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_Hosts_In_Entity_Mapping')?['kind']",
                                                    "Host"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "For_Each_Alert_Details": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_IPs_In_Entity_Mapping": {
                            "foreach": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                            "actions": {
                                "Condition_To_Verify_IP": {
                                    "actions": {
                                        "Condition_To_Verify_List_Of_IPs": {
                                            "actions": {
                                                "For_Each_IP_In_Entity_Mapping": {
                                                    "foreach": "@json(items('For_IPs_In_Entity_Mapping')?['properties']?['address'])",
                                                    "actions": {
                                                        "Append_IP_Into_List": {
                                                            "runAfter": {},
                                                            "type": "AppendToArrayVariable",
                                                            "inputs": {
                                                                "name": "IP_Host_List",
                                                                "value": "@items('For_Each_IP_In_Entity_Mapping')"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "type": "Foreach"
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Append_IP_Into_List_(2)": {
                                                        "runAfter": {},
                                                        "type": "AppendToArrayVariable",
                                                        "inputs": {
                                                            "name": "IP_Host_List",
                                                            "value": "@items('For_IPs_In_Entity_Mapping')?['properties']?['address']"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@items('For_IPs_In_Entity_Mapping')?['properties']?['address']",
                                                            "]"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_IPs_In_Entity_Mapping')?['kind']",
                                                    "Ip"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Initialize_Severity_Mapping": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_Access_Token": {
                            "runAfter": {
                                "Condition_To_Verify_Empty_List_Of_IP_-_Host": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "client_id": "@body('Get_Rubrik_Client_ID')?['value']",
                                    "client_secret": "@body('Get_Rubrik_Client_Secret')?['value']"
                                },
                                "method": "POST",
                                "uri": "@{variables('Base_URL')}/api/client_token"
                            }
                        },
                        "Get_Rubrik_Client_ID": {
                            "runAfter": {
                                "Initialize_Count_Of_Comments_In_Incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('Rubrik-Client-Id')}/value"
                            }
                        },
                        "Get_Rubrik_Client_Secret": {
                            "runAfter": {
                                "Get_Rubrik_Client_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('Rubrik-Client-Secret')}/value"
                            }
                        },
                        "Initialize_AccessToken": {
                            "runAfter": {
                                "Initialize_Incident_Severity_Updated": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Access_Token",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Anomaly_Severity": {
                            "runAfter": {
                                "Initialize_Severity_For_Risk_Level": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Anomaly_Severity",
                                        "type": "string",
                                        "value": "@triggerBody()?['object']?['properties']?['severity']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Base_URL": {
                            "runAfter": {
                                "Initialize_Search_Type": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Base_URL",
                                        "type": "string",
                                        "value": "@parameters('Rubrik_Base_URL')"
                                    }
                                ]
                            }
                        },
                        "Initialize_Count_Of_Comments_In_Incident": {
                            "runAfter": {
                                "Initialize_Base_URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Comment_Count",
                                        "type": "integer",
                                        "value": "@length(triggerBody()?['object']?['properties']?['Comments'])"
                                    }
                                ]
                            }
                        },
                        "Initialize_Detailed_Response": {
                            "runAfter": {
                                "Initialize_AccessToken": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Detailed_Response",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Failed_IP_Address_And_Host_Name_List": {
                            "runAfter": {
                                "Initialize_IP_Address_And_Host_Name_List": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Failed_IP_Host_List",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_IP_Address_And_Host_Name_List": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IP_Host_List",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_IP_List_Size": {
                            "runAfter": {
                                "Initialize_Failed_IP_Address_And_Host_Name_List": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IP_List_Size",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize_Incident_Severity": {
                            "runAfter": {
                                "Get_Rubrik_Client_Secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Incident_Severity",
                                        "type": "string",
                                        "value": "@triggerBody()?['object']?['properties']?['severity']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Incident_Severity_Increase_Level": {
                            "runAfter": {
                                "Initialize_Anomaly_Severity": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Increase_Severity_Level",
                                        "type": "integer",
                                        "value": "@parameters('Increase_Severity_Level')"
                                    }
                                ]
                            }
                        },
                        "Initialize_Incident_Severity_Updated": {
                            "runAfter": {
                                "Initialize_Incident_Severity_Increase_Level": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Incident_Severity_Updated",
                                        "type": "boolean",
                                        "value": "@false"
                                    }
                                ]
                            }
                        },
                        "Initialize_Search_Type": {
                            "runAfter": {
                                "Initialize_IP_List_Size": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Search_Type",
                                        "type": "string",
                                        "value": "ipv4"
                                    }
                                ]
                            }
                        },
                        "Initialize_Severity_For_Increase_Level": {
                            "runAfter": {
                                "Initialize_Incident_Severity": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Severity_For_Increase_Level",
                                        "type": "string",
                                        "value": "@triggerBody()?['object']?['properties']?['severity']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Severity_For_Risk_Level": {
                            "runAfter": {
                                "Initialize_Severity_For_Increase_Level": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Severity_For_RiskLevel",
                                        "type": "string",
                                        "value": "@triggerBody()?['object']?['properties']?['severity']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Severity_Mapping": {
                            "runAfter": {
                                "Initialize_Detailed_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Severity_Mapping",
                                        "type": "object",
                                        "value": {
                                            "high": "High",
                                            "low": "Low",
                                            "medium": "Medium"
                                        }
                                    }
                                ]
                            }
                        },
                        "Set_IP_List_Size": {
                            "runAfter": {
                                "For_IPs_In_Entity_Mapping": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "IP_List_Size",
                                "value": "@length(variables('IP_Host_List'))"
                            }
                        }
                    },
                    "outputs": {
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName": "[variables('KeyvaultConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "hidden-SentinelTemplateName": "RubrikWorkloadAnalysis",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {
                },
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('KeyvaultConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('KeyvaultConnectionName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
                },
                "parameterValues": {
                    "token:TenantId": "[trim(parameters('Tenant Id'))]",
                    "token:grantType": "code",
                    "vaultName": "[trim(parameters('Keyvault Name'))]"
                }
            }
        }
    ]
}
