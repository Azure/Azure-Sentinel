{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata": {
    "title": "Rubrik Anomaly Incident Response",
    "description": "This playbook provides an end to end example of the collection of Ransomware Anomaly information from Rubrik, its enrichment with Data Classification insights (to aid in incident prioritization), and the options to optionally perform various recovery operations. It uses several other playbooks defined in this solution to perform these tasks.",
    "prerequisites": [
      "1. The Rubrik Security Cloud data connector should be configured to send appropriate events to Microsoft Sentinel.",
      "2. The Rubrik Security Cloud solution should be configured to [connect to Rubrik Security Cloud API end points using a Service Account](https://docs.rubrik.com/en-us/saas/saas/polaris_api_access_with_service_accounts.html), the service account should be assigned a role that includes the relevant privileges necessary to perform the desired operations (see [Roles and Permissions](https://docs.rubrik.com/en-us/saas/saas/common/roles_and_permissions.html) in the Rubrik Security Cloud user guide).",
      "3. Obtain Teams group id and channel id.",
      "4. Make sure that below mentioned playbooks are deployed before deploying RubrikAnomalyIncidentResponse playbook:",
      "- RubrikDataObjectDiscovery",
      "- RubrikAnomalyAnalysis",
      "- RubrikFilesetRansomwareDiscovery",
      "- RubrikRansomwareDiscoveryAndFileRecovery",
      "- RubrikRansomwareDiscoveryAndVMRecovery",
      "- RubrikFileObjectContextAnalysis"
    ],
    "postDeployment": [
      "**a. Authorize connections**",
      "Once deployment is complete, authorize each connection.",
      "1. Click the Microsoft Sentinel connection resource",
      "2. Click edit API connection",
      "3. Click Authorize",
      "4. Sign in",
      "5. Click Save",
      "6. Repeat steps for other connections",
      "**b. Configurations in Microsoft Sentinel**",
      "1. In Microsoft sentinel, analytical rules should be configured to trigger an incident. An incident should have the *ClusterId* - custom entity that contains clusterId of an event generated in rubrik, *ObjectId* - custom entity that contains objectId of an event generated in rubrik, *ObjectType* - custom entity that contains objectType of an event generated in rubrik, *ObjectName* -custom entity that contains objectName of an event generated in rubrik . It can be obtained from the corresponding field in Rubrik Anomaly Event logs. Check the [documentation](https://docs.microsoft.com/azure/sentinel/surface-custom-details-in-alerts) to learn more about adding custom entities to incidents.",
      "2. Configure the automation rules to trigger the playbook."
    ],
    "prerequisitesDeployTemplateFile": "Azure-Sentinel/Solutions/RubrikSecurityCloud/Playbooks/RubrikCustomConnector/Rubrik_custom_conn.json",
    "lastUpdateTime": "2022-01-20T00:00:00.000Z",
    "entities": [
      "account",
      "url"
    ],
    "tags": [
      "Anomaly",
      "Incident",
      "Rubrik"
    ],
    "support": {
      "tier": "community",
      "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
    },
    "author": {
      "name": "Rubrik"
    }
  },
    "parameters":  {
        "API Hostname": {
            "type": "String",
            "defaultValue": "rubrik-rcf-2512.my.rubrik.com",
            "metadata": {
                "description": "Hostname of the RubrikApi instance."
            }
        },
        "PlaybookName":  {
            "defaultValue":  "RubrikAnomalyIncidentResponse",
            "type":  "string"
        },
        "TeamsGroupId": {
            "defaultValue": "TeamsGroupIds",
            "type": "String",
            "metadata": {
                "description": "Id of the Teams Group where the adaptive card will be posted."
            }
        },
        "TeamsChannelId": {
            "defaultValue": "TeamsChannelId",
            "type": "String",
            "metadata": {
                "description": "Id of the Teams Channel where the adaptive card will be posted."
            }
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "TeamsConnectionName":  "[concat('Teams-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "For_each_2": {
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions": {
                                "Parse_JSON": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@items('For_each_2')?['properties']?['additionalData']?['Custom Details']",
                                        "schema": {
                                            "properties": {
                                                "ClusterId": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ObjectId": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ObjectName": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "ObjectType": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Set_ClusterId": {
                                    "runAfter": {
                                        "Set_ObjectId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "ClusterId",
                                        "value": "@{body('Parse_JSON')?['ClusterId'][0]}"
                                    }
                                },
                                "Set_ObjectId": {
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "ObjectId",
                                        "value": "@{body('Parse_JSON')?['ObjectId'][0]}"
                                    }
                                },
                                "Set_ObjectName": {
                                    "runAfter": {
                                        "Set_ClusterId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "ObjectName",
                                        "value": "@{body('Parse_JSON')?['ObjectName'][0]}"
                                    }
                                },
                                "Set_ObjectType": {
                                    "runAfter": {
                                        "Set_ObjectName": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "ObjectType",
                                        "value": "@{body('Parse_JSON')?['ObjectType'][0]}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_status": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_BaseURL": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name":  "BaseUrl",
                                        "type":  "string",
                                        "value":  "[concat('https://', parameters('API Hostname'))]"
                                    }
                                ]
                            }
                        },
                        "Initialize_Cluster_Id": {
                            "runAfter": {
                                "Initialize_Object_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ClusterId",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "Initialize_Object_Id": {
                            "runAfter": {
                                "Initialize_Cluster_Id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ObjectId",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "Initialize_Object_Name": {
                            "runAfter": {
                                "Initialize_Object_Type": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ObjectName",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "Initialize_Object_Type": {
                            "runAfter": {
                                "Initialize_BaseURL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ObjectType",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "Initialize_Start_Time_of_Incident": {
                            "runAfter": {
                                "Initialize_Object_Id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IncidentStartTime",
                                        "type": "string",
                                        "value": "@{formatDateTime(triggerBody()?['object']?['properties']?['createdTimeUtc'],'yy-MM-dd [hh:mm:ss tt]')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_status": {
                            "runAfter": {
                                "Initialize_Start_Time_of_Incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Status",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Is_object_type_Fileset": {
                            "actions": {
                                "RubrikFilesetRansomwareDiscovery": {
                                    "runAfter": {},
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": {
                                            "BaseUrl": "@variables('BaseUrl')",
                                            "ClusterId": "@variables('ClusterId')",
                                            "IncidentTime": "@variables('IncidentStartTime')",
                                            "ObjectId": "@variables('ObjectId')",
                                            "ObjectName": "@variables('ObjectName')",
                                            "ObjectType": "@variables('ObjectType')"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/RubrikFilesetRansomwareDiscovery')]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Is_object_type_Vm": {
                                        "actions": {
                                            "Collect_Ransomware_Discovery_and_Recovery_Data": {
                                                "runAfter": {},
                                                "type": "ApiConnectionWebhook",
                                                "inputs": {
                                                    "body": {
                                                        "body": {
                                                            "messageBody": "{\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"type\": \"AdaptiveCard\",\n    \"version\": \"1.3\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"Large\",\n            \"weight\": \"Bolder\",\n            \"text\": \"Ransomware Discovery and Recovery Data\",\n            \"horizontalAlignment\": \"Center\",\n            \"style\": \"heading\",\n            \"color\": \"Accent\",\n            \"fontType\": \"Default\",\n            \"wrap\": true,\n            \"id\": \"heading\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Please provide input values to initiate ransomware discovery and recovery.\",\n            \"wrap\": true,\n            \"style\": \"default\",\n            \"separator\": true,\n            \"id\": \"info\"\n        },\n\t\t{\n            \"type\": \"TextBlock\",\n            \"text\": \"Object Name =  @{variables('ObjectName')}\\n\\nCluster ID =  @{variables('ClusterId')}\\n\\nIncident Start Time = @{variables('IncidentStartTime')}\",\n            \"wrap\": true,\n            \"style\": \"default\",\n            \"color\": \"accent\",\n            \"separator\": true,\n            \"id\": \"x\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Which playbook to use for ransomware discovery and recovery?\",\n            \"wrap\": true,\n            \"weight\": \"Bolder\",\n            \"separator\": true,\n            \"id\": \"Ip1\"\n        },\n        {\n            \"type\": \"Input.ChoiceSet\",\n            \"choices\": [\n                {\n                    \"title\": \"Rubrik Ransomware Discovery and VM Recovery\",\n                    \"value\": \"Rubrik Ransomware Discovery and VM Recovery\"\n                },\n                {\n                    \"title\": \"Rubrik Ransomware Discovery and File Recovery\",\n                    \"value\": \"Rubrik Ransomware Discovery and File Recovery\"\n                },\n                {\n                    \"title\": \"No Recovery\",\n                    \"value\": \"No Recovery\"\n                }\n            ],\n            \"placeholder\": \"Placeholder text\",\n            \"value\": \"Rubrik Ransomware Discovery and VM Recovery\",\n            \"style\": \"expanded\",\n            \"id\": \"File VM or No recovery\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"type\": \"Action.Submit\",\n            \"title\": \"Submit Answer\",\n            \"data\": {\n                \"id\": \"LoginVal\"\n            },\n            \"style\": \"positive\",\n            \"id\": \"Submit\"\n        }\n    ]\n}\n",
                                                            "recipient": {
                                                                "channelId":  "[concat('', parameters('TeamsChannelId'))]",
                                                                "groupId":  "[concat('', parameters('TeamsGroupId'))]"
                                                            },
                                                            "updateMessage": "Response saved for further actions!"
                                                        },
                                                        "notificationUrl": "@{listCallbackUrl()}"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['teams_1']['connectionId']"
                                                        }
                                                    },
                                                    "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Channel')}/$subscriptions"
                                                }
                                            },
                                            "Shall_recovery_be_performed": {
                                                "actions": {
                                                    "Is_file_recovery_selected": {
                                                        "actions": {
                                                            "RubrikRansomwareDiscoveryAndFileRecovery": {
                                                                "runAfter": {},
                                                                "type": "Workflow",
                                                                "inputs": {
                                                                    "body": {
                                                                        "BaseUrl": "@variables('BaseUrl')",
                                                                        "ClusterId": "@variables('ClusterId')",
                                                                        "IncidentTime": "@variables('IncidentStartTime')",
                                                                        "ObjectId": "@variables('ObjectId')",
                                                                        "ObjectName": "@variables('ObjectType')",
                                                                        "ObjectType": "@variables('ObjectType')"
                                                                    },
                                                                    "host": {
                                                                        "triggerName": "manual",
                                                                        "workflow": {
                                                                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/RubrikRansomwareDiscoveryAndFileRecovery')]"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "else": {
                                                            "actions": {
                                                                "RubrikRansomwareDiscoveryAndVMRecovery": {
                                                                    "runAfter": {},
                                                                    "type": "Workflow",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "BaseUrl": "@variables('BaseUrl')",
                                                                            "ClusterId": "@variables('ClusterId')",
                                                                            "IncidentTime": "@variables('IncidentStartTime')",
                                                                            "ObjectId": "@variables('ObjectId')",
                                                                            "ObjectName": "@variables('ObjectName')",
                                                                            "ObjectType": "@variables('ObjectType')"
                                                                        },
                                                                        "host": {
                                                                            "triggerName": "manual",
                                                                            "workflow": {
                                                                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/RubrikRansomwareDiscoveryAndVMRecovery')]"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "contains": [
                                                                        "@body('Collect_Ransomware_Discovery_and_Recovery_Data')?['data']?['file VM or No recovery']",
                                                                        "File Recovery"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                },
                                                "runAfter": {
                                                    "Collect_Ransomware_Discovery_and_Recovery_Data": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "else": {
                                                    "actions": {
                                                        "Set_status_as_No_Recovery": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "Status",
                                                                "value": "Error: No recovery selected"
                                                            }
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "not": {
                                                                "contains": [
                                                                    "@body('Collect_Ransomware_Discovery_and_Recovery_Data')?['data']?['file VM or No recovery']",
                                                                    "No Recovery"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            }
                                        },
                                        "runAfter": {},
                                        "else": {
                                            "actions": {
                                                "Set_status_for_not_a_valid_object": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "Status",
                                                        "value": "Not a valid object"
                                                    }
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "contains": [
                                                        "@variables('ObjectType')",
                                                        "Vm"
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "contains": [
                                            "@variables('ObjectType')",
                                            "Fileset"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "RubrikAnomalyAnalysis": {
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "BaseUrl": "@variables('BaseUrl')",
                                    "ClusterId": "@variables('ClusterId')",
                                    "IncidentARMId": "@triggerBody()?['object']?['id']",
                                    "IncidentStartTime": "@triggerBody()?['object']?['properties']?['createdTimeUtc']",
                                    "ObjectId": "@variables('ObjectId')",
                                    "ObjectName": "@variables('ObjectName')",
                                    "ObjectType": "@variables('ObjectType')"
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/RubrikAnomalyAnalysis')]"
                                    }
                                }
                            }
                        },
                        "RubrikDataObjectDiscovery": {
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "BaseUrl": "@variables('BaseUrl')",
                                    "ObjectId": "@variables('ObjectId')",
                                    "ObjectName": "@variables('ObjectName')"
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/RubrikDataObjectDiscovery')]"
                                    }
                                }
                            }
                        },
                        "RubrikFileObjectContextAnalysis": {
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "Baseurl": "@variables('BaseUrl')",
                                    "ObjectId": "@variables('ObjectId')",
                                    "ObjectName": "@variables('ObjectName')",
                                    "ObjectType": "@variables('ObjectType')",
                                    "incidentStartTime": "@variables('IncidentStartTime')"
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/RubrikFileObjectContextAnalysis')]"
                                    }
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "teams_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "connectionName": "[variables('TeamsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "RubrikAnomalyIncidentResponse",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('TeamsConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('TeamsConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                }
            }
        }
    ]
}
