id: f56b2223-0d4d-4347-9de4-822d195624ee
name: User Accounts - Unusual authentications occurring when countries do not conduct normal business operations.
description: |
    'Identifies users whose single Factor Auth Events in scenarios where it has not been seen before, or where only multi factor auth has been observed.'
description_detailed: |
  'Identifies users whose single Factor Auth Events in scenarios where it has not been seen before, or where only multi factor auth has been observed.
  Ref: https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-user-accounts#monitoring-for-successful-unusual-sign-ins
  This query has also been updated to include UEBA logs IdentityInfo and BehaviorAnalytics for contextual information around the results.'
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - SigninLogs
  - connectorId: BehaviorAnalytics
    dataTypes:
      - IdentityInfo
tactics:
  - InitialAccess
relevantTechniques:
  - T1078
tags:
  - AADSecOpsGuide
query: |
  let starttime = totimespan('{{StartTimeISO}}');
  let endtime = totimespan('{{EndTimeISO}}');
  let isGUID = "[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}";
  let userthreshold = 25;
  let HistLogons = SigninLogs
  | where IsInteractive == true
  | where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))
  | extend HourOfLogin = hourofday(TimeGenerated), DayNumberofWeek = dayofweek(TimeGenerated)
  | extend DayofWeek = case(
    DayNumberofWeek == "00:00:00", "Sunday", 
    DayNumberofWeek == "1.00:00:00", "Monday", 
    DayNumberofWeek == "2.00:00:00", "Tuesday", 
    DayNumberofWeek == "3.00:00:00", "Wednesday", 
    DayNumberofWeek == "4.00:00:00", "Thursday", 
    DayNumberofWeek == "5.00:00:00", "Friday", 
    DayNumberofWeek == "6.00:00:00", "Saturday","InvalidTimeStamp")
  | summarize UserCount = dcount(UserPrincipalName) by HourOfLogin, Location, DayofWeek
  | where UserCount > userthreshold;
  HistLogons
  | join kind = rightanti (
  SigninLogs
  | where IsInteractive == true
  | where TimeGenerated > ago(1d)
  | extend HourOfLogin = hourofday(TimeGenerated), DayNumberofWeek = dayofweek(TimeGenerated)
  | extend DayofWeek = case(
    DayNumberofWeek == "00:00:00", "Sunday", 
    DayNumberofWeek == "1.00:00:00", "Monday", 
    DayNumberofWeek == "2.00:00:00", "Tuesday", 
    DayNumberofWeek == "3.00:00:00", "Wednesday", 
    DayNumberofWeek == "4.00:00:00", "Thursday", 
    DayNumberofWeek == "5.00:00:00", "Friday", 
    DayNumberofWeek == "6.00:00:00", "Saturday","InvalidTimeStamp")
    | summarize count(), FirstSuccessfulSignin = min(TimeGenerated), LastSuccessfulSignin = max(TimeGenerated), make_set(IPAddress), make_set(ClientAppUsed), make_set(UserAgent), make_set(AppDisplayName) by HourOfLogin, Location, DayofWeek, UserPrincipalName
    ) on Location, DayofWeek , HourOfLogin
    | extend timestamp = LastSuccessfulSignin, Account_0_Name = UserPrincipalName
  | join kind=leftouter (
      IdentityInfo
      | summarize LatestReportTime = arg_max(TimeGenerated, *) by AccountUPN
      | project AccountUPN, Tags, JobTitle, GroupMembership, AssignedRoles, UserType, IsAccountEnabled
      | summarize
          Tags = make_set(Tags, 1000),
          GroupMembership = make_set(GroupMembership, 1000),
          AssignedRoles = make_set(AssignedRoles, 1000),
          UserType = make_set(UserType, 1000),
          UserAccountControl = make_set(UserType, 1000)
      by AccountUPN
      | extend UserPrincipalName=tolower(AccountUPN)
  ) on UserPrincipalName
entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: Name
        columnName: UserPrincipalName
version: 1.0.2