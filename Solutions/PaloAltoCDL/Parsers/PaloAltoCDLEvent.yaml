id: 51643a38-679c-4989-9341-2c01a2bf478c
Function:
  Title: Parser for PaloAltoCDLEvent
  Version: '1.1.0'
  LastUpdated: '2023-08-23'
Category: Microsoft Sentinel Parser
FunctionName: PaloAltoCDLEvent
FunctionAlias: PaloAltoCDLEvent
FunctionQuery: |
    CommonSecurityLog
    | where DeviceVendor =~ 'Palo Alto Networks'
    | where DeviceProduct =~ 'LF'
    | extend EventVendor = 'Palo Alto Networks'
    | extend EventProduct = 'Cortex Data Lake'
    | extend EventSchemaVersion = 0.2
    | extend EventCount = 1
    | extend DeviceCustomNumber1 = coalesce(column_ifexists("FieldDeviceCustomNumber1", long(null)),DeviceCustomNumber1),
             DeviceCustomNumber2 = coalesce(column_ifexists("FieldDeviceCustomNumber2", long(null)),DeviceCustomNumber2),
             DeviceCustomNumber3 = coalesce(column_ifexists("FieldDeviceCustomNumber3", long(null)),DeviceCustomNumber3)
    | parse-kv AdditionalExtensions as (PanOSConfigVersion:string, start:datetime, PanOSBytes:int, PanOSSessionStartTime:datetime, PanOSSourceLocation:string, PanOSDestinationLocation:string, PanOSPacketsSent:int, PanOSPacketsReceived:int, PanOSDGHierarchyLevel1:string, PanOSDGHierarchyLevel2:string, PanOSDGHierarchyLevel3:string, PanOSDGHierarchyLevel4:string, PanOSVirtualSystemName:string, PanOSSourceUUID:string, PanOSDestinationUUID:string, PanOSIMSI:string, PanOSIMEI:string, PanOSParentSessionID:string, PanOSParentStarttime:datetime, PanOSTunnel:string, PanOSEndpointAssociationID:string, PanOSChunksTotal:int, PanOSChunksSent:int, PanOSChunksReceived:int, PanOSRuleUUID:string, PanOSHTTP2Connection:string, PanOSLinkChangeCount:int, PanOSSDWANPolicyName:string, PanOSLinkSwitches:string, PanOSSDWANCluster:string, PanOSSDWANDeviceType:string, PanOSSDWANClusterType:string, PanOSSDWANSite:string, PanOSDynamicUserGroupName:string, ["PanOSX-Forwarded-ForIP"]:string, PanOSSourceDeviceCategory:string, PanOSSourceDeviceProfile:string, PanOSSourceDeviceModel:string, PanOSSourceDeviceVendor:string, PanOSSourceDeviceOSFamily:string, PanOSSourceDeviceOSVersion:string, PanOSSourceDeviceHost:string, PanOSSourceDeviceMac:string, PanOSDestinationDeviceCategory:string, PanOSDestinationDeviceProfile:string, PanOSDestinationDeviceModel:string, PanOSDestinationDeviceVendor:string, PanOSDestinationDeviceOSFamily:string, PanOSDestinationDeviceOSVersion:string, PanOSDestinationDeviceHost:string, PanOSDestinationDeviceMac:string, PanOSContainerID:string, PanOSContainerNameSpace:string, PanOSContainerName:string, PanOSSourceEDL:string, PanOSDestinationEDL:string, PanOSGPHostID:string, PanOSEndpointSerialNumber:string, PanOSSourceDynamicAddressGroup:string, PanOSDestinationDynamicAddressGroup:string, PanOSHASessionOwner:string, PanOSTimeGeneratedHighResolution:string, PanOSNSSAINetworkSliceType:string, PanOSNSSAINetworkSliceDifferentiator:string, PanOSURLCounter:string, ["PanOSX-Forwarded-For"]:string, PanOSReferer:string, PanOSInlineMLVerdict:string, PanOSContentVersion:string, PanOSSigFlags:string, PanOSHTTPHeaders:string, PanOSURLCategoryList:string, PanOSHostID:string, PanOSThreatID:string, PanOSFileHash:string, PanOSApplianceOrCloud:string, PanOSFileType:string, PanOSSenderEmail:string, PanOSEmailSubject:string, PanOSRecipientEmail:string, PanOSReportID:string, PanOSThreatCategory:string, PanOSDomainEDL:string, PanOSPartialHash:string, PanOSTunnelEventType:string, PanOSMobileSubscriberISDN:string, PanOSAccessPointName:string, PanOSRadioAccessTechnology:string, PanOSTunnelMessageType:string, PanOSMobileIP:string, PanOSTunnelEndpointID1:string, PanOSTunnelEndpointID2:string, PanOSTunnelInterface:string, PanOSTunnelCauseCode:string, PanOSMobileCountryCode:string, PanOSMobileNetworkCode:string, PanOSMobileAreaCode:string, PanOSMobileBaseStationCode:string, PanOSTunnelEventCode:string, PanOSPacketsDroppedMax:string, PanOSPacketsDroppedTunnel:string, PanOSTunnelInspectionRule:string, PanOSTunnelRemoteUserIP:string, PanOSTunnelRemoteIMSIID:string, PanOSProtocolDataUnitsessionID:string, end:string, PanOSUGFlags:string, PanOSUserIdentifiedBySource:string, PanOSTag:string, PanOSEventTime:datetime, PanOSDeviceGroup:string, PanOSTemplate:string, PanOSSourceUser:string, PanOSHipMatchType:string, PanOSSource:string, PanOSTimestampDeviceIdentification:string, deviceExternalID:string, PanOSVirtualSystem:string, Name:string, PanOSStage:string, PanOSAuthMethod:string, PanOSTunnelType:string, PanOSSourceRegion:string, PanOSPrivateIPv4:string, PanOSPrivateIPv6:string, PanOSEndpointSN:string, PanOSGlobalProtectClientVersion:string, PanOSEndpointOSType:string, PanOSEndpointOSVersion:string, PanOSCountOfRepeats:string, PanOSQuarantineReason:string, PanOSConnectionError:string, PanOSDescription:string, PanOSGlobalProtectGatewayLocation:string, PanOSLoginDuration:string, PanOSConnectionMethod:string, PanOSConnectionErrorID:string, PanOSPortal:string, PanOSSequenceNo:string, PanOSGatewaySelectionType:string, PanOSSSLResponseTime:string, PanOSGatewayPriority:string, PanOSAttemptedGateways:string, PanOSGateway:string, PanOSVirtualSystemID:string, startTime:datetime, PanOSRecordType:string, PanOSCloudDNSClientIP:string, PanOSDNSResolverIP:string, PanOSDNSCategory:string, DestinationDNSDomain:string, suser0:string, duser0:string) with (pair_delimiter=';', kv_delimiter='=', quote="'")
    | extend DvcIpAddr = iff(DeviceCustomIPv6Address1Label == "Device IPv6 Address", DeviceCustomIPv6Address1, "")
             , DstIpAddr = iff(DeviceCustomIPv6Address3Label == "Destination IPv6 Address", DeviceCustomIPv6Address3, "")
             , SrcIpAddr = iff(DeviceCustomIPv6Address2Label == "Source IPv6 Address", DeviceCustomIPv6Address2, "")
             , EventResultDetails = coalesce(column_ifexists("reason",""),column_ifexists("Reason",""))
             , SrcZone = iff(DeviceCustomString4Label == "FromZone", DeviceCustomString4, "") 
             , DstZone = iff(DeviceCustomString5Label == "Zone", DeviceCustomString5, "") 
             , NetworkPackets = iff(DeviceCustomNumber2Label == "PacketsTotal", DeviceCustomNumber2, int(null))
             , NetworkDuration = iff(DeviceCustomNumber3Label == "SessionDuration", DeviceCustomNumber3, int(null))
             , NetworkSessionId =  iff(DeviceCustomNumber1Label == "SessionID", DeviceCustomNumber1, int(null))
             , EventStartTime = coalesce(column_ifexists("StartTime",datetime(null))
             , todatetime(column_ifexists("start","")))
             , EventEndTime = coalesce(column_ifexists("EventEndTime",datetime(null))
             , todatetime(column_ifexists("end","")))
             , EventType = coalesce(column_ifexists("DeviceEventCategory",""), column_ifexists("cat",""))
    | project-rename EventProductVersion = DeviceVersion
                    , DvcId = DeviceExternalID
                    , DvcHostname = DeviceName
                    , DstNatPortNumber = DestinationTranslatedPort
                    , DstHostname = DestinationHostName
                    , SrcNatPortNumber = SourceTranslatedPort
                    , SrcFileName = FileName
                    , SrcFilePath = FilePath
                    , EventMessage = Message
                    , EventSeverity = LogSeverity
                    , EventResult = Activity
                    , DstPortNumber = DestinationPort
                    , DstUserId = DestinationUserID
                    , EventResourceId = DeviceEventClassID
                    , HttpRequestMethod = RequestMethod
                    , Url = RequestURL
                    , HttpContentFormat = RequestContext
                    , SrcHostname = SourceHostName
                    , DvcAction = DeviceAction
                    , DstDomain = DestinationNTDomain
                    , SrcPortNumber = SourcePort
                    , DvcInboundInterface = DeviceInboundInterface
                    , DvcOutboundInterface = DeviceOutboundInterface
                    , NetworkProtocol = Protocol
                    , NetworkApplicationProtocol = ApplicationProtocol
                    , SrcDomain = SourceNTDomain
                    , SrcUserId = SourceUserID
                    , DstBytes = ReceivedBytes
                    , SrcBytes = SentBytes
    | extend EventTimeIngested = todatetime(ReceiptTime)
    | extend SrcNatIpAddr = case(isempty(SourceIP), SourceTranslatedAddress, 
                                pack_array(SourceTranslatedAddress,SourceIP))
    | extend DstNatIpAddr = case(isempty(DestinationIP), DestinationTranslatedAddress,
                                pack_array(DestinationTranslatedAddress, DestinationIP))
     | extend SrcUsername = case(isempty(suser0), SourceUserName, 
                                 pack_array(SourceUserName,suser0))
     | extend DstUsername = case(isempty(duser0), DestinationUserName,
                                 pack_array(DestinationUserName,duser0))
    | project-away ReceiptTime, Type, StartTime, EndTime, DeviceVendor, DeviceProduct, duser0, DestinationUserName, suser0, SourceUserName, AdditionalExtensions, DestinationTranslatedAddress, DestinationIP,SourceTranslatedAddress, SourceIP, DeviceCustom*, FlexString*
                  