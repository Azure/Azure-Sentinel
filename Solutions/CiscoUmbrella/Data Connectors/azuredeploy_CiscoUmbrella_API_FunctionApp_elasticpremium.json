{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "FunctionName": {
            "defaultValue": "Umbrella",
            "minLength": 1,
            "maxLength": 11,
            "type": "string"
        },
        "WorkspaceID": {
            "type": "string",
            "defaultValue": "<workspaceID>"
        },
        "WorkspaceKey": {
            "type": "securestring",
            "defaultValue": ""
        },
        "S3Bucket": {
            "type": "string",
            "defaultValue": "<S3Bucket>"
        },
        "AWSAccessKeyId": {
            "type": "string",
            "defaultValue": "<AWSAccessKeyId>"
        },
        "AWSSecretAccessKey": {
            "type": "securestring",
            "defaultValue": ""
        },
        "AppInsightsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Migrate Classic Application Insights to Log Analytic Workspace which is retiring by 29 Febraury 2024. Use 'Log Analytic Workspace-->Properties' blade having 'Resource ID' property value. This is a fully qualified resourceId which is in format '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}'"
            }
        },
        "existingVnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing Virtual Network"
            }
        },
        "existingVnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Resource Group where the existing Virtual Network is located"
            }
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing subnet within the Virtual Network for Function App VNet integration (must be delegated to Microsoft.Web/serverFarms)"
            }
        },
        "existingPrivateEndpointSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing subnet within the Virtual Network for Private Endpoints (cannot be delegated)"
            }
        }
    },
    "variables": {
        "FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",
        "StorageSuffix": "[environment().suffixes.storage]",
        "LogAnaltyicsUri": "[replace(environment().portal, 'https://portal', concat('https://', toLower(parameters('WorkspaceID')), '.ods.opinsights'))]",
        "privateEndpointName": "[concat(variables('FunctionName'), '-pe')]",
        "privateEndpointBlobName": "[concat(variables('FunctionName'), '-pe-blob')]",
        "privateEndpointFileName": "[concat(variables('FunctionName'), '-pe-file')]",
        "privateEndpointQueueName": "[concat(variables('FunctionName'), '-pe-queue')]",
        "privateEndpointTableName": "[concat(variables('FunctionName'), '-pe-table')]",
        "vnetResourceId": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('existingVnetName'))]",
        "subnetResourceId": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]",
        "privateEndpointSubnetResourceId": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingPrivateEndpointSubnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "name": "[concat(variables('FunctionName'), '-plan')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "EP1",
                "tier": "ElasticPremium",
                "family": "EP"
            },
            "kind": "elastic",
            "properties": {
                "maximumElasticWorkerCount": 20,
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('FunctionName')]",
                "WorkspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]"
            }
        },

        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-06-01",
            "name": "[tolower(variables('FunctionName'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "None",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage",
                    "requireInfrastructureEncryption": true
                },
                "publicNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2021-02-01",
            "name": "[variables('privateEndpointBlobName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]"
            ],
            "properties": {
                "subnet": {
                    "id": "[variables('privateEndpointSubnetResourceId')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "BlobConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                            "groupIds": [
                                "blob"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2021-02-01",
            "name": "[concat(variables('privateEndpointBlobName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointBlobName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "blob-config",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2021-02-01",
            "name": "[variables('privateEndpointFileName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]"
            ],
            "properties": {
                "subnet": {
                    "id": "[variables('privateEndpointSubnetResourceId')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "FileConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                            "groupIds": [
                                "file"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2021-02-01",
            "name": "[concat(variables('privateEndpointFileName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointFileName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "file-config",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2021-02-01",
            "name": "[variables('privateEndpointQueueName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.queue.core.windows.net')]"
            ],
            "properties": {
                "subnet": {
                    "id": "[variables('privateEndpointSubnetResourceId')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "QueueConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                            "groupIds": [
                                "queue"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2021-02-01",
            "name": "[concat(variables('privateEndpointQueueName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointQueueName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.queue.core.windows.net')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "queue-config",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.queue.core.windows.net')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2021-02-01",
            "name": "[variables('privateEndpointTableName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.table.core.windows.net')]"
            ],
            "properties": {
                "subnet": {
                    "id": "[variables('privateEndpointSubnetResourceId')]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "TableConnection",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                            "groupIds": [
                                "table"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2021-02-01",
            "name": "[concat(variables('privateEndpointTableName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointTableName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.table.core.windows.net')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "table-config",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.table.core.windows.net')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]",
                "[resourceId('Microsoft.Web/serverfarms', concat(variables('FunctionName'), '-plan'))]"
            ],
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('FunctionName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(variables('FunctionName'), '-plan'))]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "alwaysOn": true,
                "reserved": true,
                "virtualNetworkSubnetId": "[variables('subnetResourceId')]",
				"siteConfig": {
                    "linuxFxVersion": "python|3.11",
                    "vnetRouteAllEnabled": true
                }
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('FunctionName'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "FUNCTIONS_WORKER_RUNTIME": "python",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('FunctionName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('FunctionName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "WorkspaceID": "[parameters('WorkspaceID')]",
                        "WorkspaceKey": "[parameters('WorkspaceKey')]",
                        "S3Bucket": "[parameters('S3Bucket')]",
                        "AWSAccessKeyId": "[parameters('AWSAccessKeyId')]",
                        "AWSSecretAccessKey": "[parameters('AWSSecretAccessKey')]",
                        "logAnalyticsUri": "[variables('LogAnaltyicsUri')]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/sentinel-CiscoUmbrellaConn-functionapp"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/', tolower(variables('FunctionName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "privatelink.blob.core.windows.net",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "privatelink.file.core.windows.net",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "privatelink.queue.core.windows.net",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "privatelink.table.core.windows.net",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "privatelink.blob.core.windows.net/blob-link",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[variables('vnetResourceId')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "privatelink.file.core.windows.net/file-link",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[variables('vnetResourceId')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "privatelink.queue.core.windows.net/queue-link",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.queue.core.windows.net')]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[variables('vnetResourceId')]"
                },
                "registrationEnabled": false
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "privatelink.table.core.windows.net/table-link",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.table.core.windows.net')]"
            ],
            "properties": {
                "virtualNetwork": {
                    "id": "[variables('vnetResourceId')]"
                },
                "registrationEnabled": false
            }
        }
    ]
}