{
    "id": "CiscoUmbrellaDataConnector",
    "title": "Cisco Cloud Security",
    "publisher": "Cisco",
    "descriptionMarkdown": "The Cisco Cloud Security solution for Microsoft Sentinel enables you to ingest [Cisco Secure Access](https://docs.sse.cisco.com/sse-user-guide/docs/welcome-cisco-secure-access) and [Cisco Umbrella](https://docs.umbrella.com/umbrella-user-guide/docs/getting-started) [logs](https://docs.sse.cisco.com/sse-user-guide/docs/manage-your-logs) stored in Amazon S3 into Microsoft Sentinel using the Amazon S3 REST API. Refer to [Cisco Cloud Security log management documentation](https://docs.umbrella.com/deployment-umbrella/docs/log-management) for more information.",
    "additionalRequirementBanner": "These queries and workbooks are dependent on a parser based on Kusto to work as expected. Follow the steps to use this Kusto functions alias **Cisco_Umbrella** in queries and workbooks. [Follow steps to get this Kusto functions>](https://aka.ms/sentinel-ciscoumbrella-function) ",
    "graphQueries": [
        {
            "metricName": "Cisco Cloud Security DNS Logs",
            "legend": "Cisco_Umbrella_dns_CL",
            "baseQuery": "Cisco_Umbrella_dns_CL"
        },
        {
            "metricName": "Cisco Cloud Security Proxy Logs",
            "legend": "Cisco_Umbrella_proxy_CL",
            "baseQuery": "Cisco_Umbrella_proxy_CL"
        },
        {
            "metricName": "Cisco Cloud Security IP Logs",
            "legend": "Cisco_Umbrella_ip_CL",
            "baseQuery": "Cisco_Umbrella_ip_CL"
        },
        {
            "metricName": "Cisco Cloud Security Cloud Firewall Logs",
            "legend": "Cisco_Umbrella_cloudfirewall_CL",
            "baseQuery": "Cisco_Umbrella_cloudfirewall_CL"
        },
        {
            "metricName": "Cisco Cloud Security Firewall Logs",
            "legend": "Cisco_Umbrella_firewall_CL",
            "baseQuery": "Cisco_Umbrella_firewall_CL"
        },
        {
            "metricName": "Cisco Cloud Security DLP Logs",
            "legend": "Cisco_Umbrella_dlp_CL",
            "baseQuery": "Cisco_Umbrella_dlp_CL"
        },
        {
            "metricName": "Cisco Cloud Security Cloud RAVPN Logs",
            "legend": "Cisco_Umbrella_ravpnlogs_CL",
            "baseQuery": "Cisco_Umbrella_ravpnlogs_CL"
        },
        {
            "metricName": "Cisco Cloud Security Audit Logs",
            "legend": "Cisco_Umbrella_audit_CL",
            "baseQuery": "Cisco_Umbrella_audit_CL"
        },
        {
            "metricName": "Cisco Cloud Security ZTNA Logs",
            "legend": "Cisco_Umbrella_ztna_CL",
            "baseQuery": "Cisco_Umbrella_ztna_CL"
        },
        {
            "metricName": "Cisco Cloud Security Intrusion Logs",
            "legend": "Cisco_Umbrella_intrusion_CL",
            "baseQuery": "Cisco_Umbrella_intrusion_CL"
        },
        {
            "metricName": "Cisco Cloud Security ZTA flow Logs",
            "legend": "Cisco_Umbrella_ztaflow_CL",
            "baseQuery": "Cisco_Umbrella_ztaflow_CL"
        },
        {
            "metricName": "Cisco Cloud Security File Event Logs",
            "legend": "Cisco_Umbrella_fileevent_CL",
            "baseQuery": "Cisco_Umbrella_fileevent_CL"
        }
    ],
    "sampleQueries": [
        {
            "description": "All Cisco Cloud Security Logs",
            "query": "Cisco_Umbrella\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security DNS Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'dnslogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security Proxy Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'proxylogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security IP Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'iplogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security Cloud Firewall Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'cloudfirewalllogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security Firewall Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'firewalllogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security DLP Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'dlplogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security Cloud RAVPN Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'ravpnlogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security Audit Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'auditlogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security ZTNA Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'ztnalogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security Cloud Intrusion Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'intrusionlogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security Cloud ZTA Flow Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'ztaflowlogs'\n| sort by TimeGenerated desc"
        },
        {
            "description": "Cisco Cloud Security Cloud File Event Logs",
            "query": "Cisco_Umbrella\n | where EventType == 'fileeventlogs'\n| sort by TimeGenerated desc"
        }
    ],
    "dataTypes": [
        {
            "name": "Cisco_Umbrella_dns_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_dns_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_proxy_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_proxy_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_ip_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_ip_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_cloudfirewall_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_cloudfirewall_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_firewall_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_firewall_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_dlp_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_dlp_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_ravpnlogs_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_ravpnlogs_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_audit_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_audit_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_ztna_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_ztna_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_intrusion_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_intrusion_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_ztaflow_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_ztaflow_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        },
        {
            "name": "Cisco_Umbrella_fileevent_CL",
            "lastDataReceivedQuery": "Cisco_Umbrella_fileevent_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
        }
    ],
    "connectivityCriterias": [
        {
            "type": "IsConnectedQuery",
            "value": [
                "Cisco_Umbrella_dns_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_proxy_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_ip_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_cloudfirewall_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_firewall_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_dlp_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_ravpnlogs_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_audit_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_ztna_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_intrusion_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_ztaflow_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)",
                "Cisco_Umbrella_fileevent_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)"
            ]
        }
    ],
    "availability": {
        "status": 1,
        "isPreview": false
    },
    "permissions": {
        "resourceProvider": [
            {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                    "write": true,
                    "read": true,
                    "delete": true
                }
            },
            {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                    "action": true
                }
            }
        ],
        "customs": [
            {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
            },
            {
                "name": "Amazon S3 REST API Credentials/permissions",
                "description": "**AWS Access Key Id**, **AWS Secret Access Key**, **AWS S3 Bucket Name** are required for Amazon S3 REST API."
            }
        ]
    },
    "instructionSteps": [
        {
            "title": "",
            "description": ">**NOTE:** This connector uses Azure Functions to connect to the Amazon S3 REST API to pull logs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
        },
        {
            "title": "",
            "description": ">**NOTE:** This connector has been updated to support [Cisco Cloud Security log schema version 11.](https://docs.umbrella.com/deployment-umbrella/docs/log-formats-and-versioning)"
        },
        {
            "title": "",
            "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Functions App."
        },
        {
            "title": "",
            "description": ">**NOTE:** This connector uses a parser based on a Kusto Function to normalize fields. [Follow these steps](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Parsers/CiscoUmbrella/Cisco_Umbrella) to create the Kusto function alias **Cisco_Umbrella**."
        },
        {
            "title": "",
            "description": "**STEP 1 - Configuration of the Cisco Cloud Security logs collection**\n\n[See documentation](https://docs.umbrella.com/deployment-umbrella/docs/log-management#section-logging-to-amazon-s-3) and follow the instructions for set up logging and obtain credentials."
        },
        {
            "title": "",
            "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Functions**\n\n>**IMPORTANT:** Before deploying the Cisco Cloud Security data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following), as well as the Amazon S3 REST API Authorization credentials, readily available.",
            "instructions": [
                {
                    "parameters": {
                        "fillWith": [
                            "WorkspaceId"
                        ],
                        "label": "Workspace ID"
                    },
                    "type": "CopyableLabel"
                },
                {
                    "parameters": {
                        "fillWith": [
                            "PrimaryKey"
                        ],
                        "label": "Primary Key"
                    },
                    "type": "CopyableLabel"
                }
            ]
        },
        {
            "instructions": [
                {
                    "parameters": {
                        "instructionSteps": [
                            {
                                "title": "Option 1 - Azure Resource Manager (ARM) Template",
                                "description": "Use this method for automated deployment of the Cisco Cloud Security data connector using an ARM Tempate.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinelciscoumbrellaazuredeploy) [![Deploy to Azure Gov](https://aka.ms/deploytoazuregovbutton)](https://aka.ms/sentinelciscoumbrellaazuredeploy-gov)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Workspace ID**, **Workspace Key**, **S3Bucket**, **AWSAccessKeyId**, **AWSSecretAccessKey**\n**Note:** For the S3Bucket use the value that Cisco referrs to as the _S3 Bucket Data Path_ and add a / (forward slash) to the end of the value\n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**.\n5. Click **Purchase** to deploy."
                            },
                            {
                                "title": "Option 2 - Manual Deployment of Azure Functions",
                                "description": "Use the following step-by-step instructions to deploy the Cisco Cloud Security data connector manually with Azure Functions (Deployment via Visual Studio Code).",
                                "instructions": [
                                    {
                                        "parameters": {
                                            "instructionSteps": [
                                                {
                                                    "title": "Step 1 - Deploy a Function App",
                                                    "description": "**NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/create-first-function-vs-code-python) for Azure Functions development.\n\n1. Download the [Azure Functions App](https://aka.ms/sentinel-CiscoUmbrellaConn-functionapp) file. Extract archive to your local development computer.\n2. Follow the [function app manual deployment instructions](https://github.com/Azure/Azure-Sentinel/blob/master/DataConnectors/AzureFunctionsManualDeploymentWithPythonVersion3.9.md#function-app-manual-deployment-instructions) to deploy the Azure Functions app using VSCode.\n3. After successful deployment of the function app, follow next steps for configuring it."
                                                },
                                                {
                                                    "title": "Step 2 - Configure the Function App",
                                                    "description": "1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tWorkspaceID\n\t\tWorkspaceKey\n\t\tS3Bucket\n\t\tAWSAccessKeyId\n\t\tAWSSecretAccessKey\n\t\tlogAnalyticsUri (optional)\n> - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n3. Once all application settings have been entered, click **Save**."
                                                }
                                            ]
                                        },
                                        "type": "InstructionStepsGroup"
                                    }
                                ]
                            }
                        ]
                    },
                    "type": "InstructionStepsGroup"
                }
            ]
        }
    ]
}