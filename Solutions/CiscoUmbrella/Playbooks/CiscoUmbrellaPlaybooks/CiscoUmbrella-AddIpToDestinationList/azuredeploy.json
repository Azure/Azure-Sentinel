{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "CiscoUmbrella-AddIpToDestinationList",
        "description": "This playbook creates a team notification and once acted on team notification it adds the IP to Cisco Umbrella's destination list and also add's comment to incident. For more details, click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/CiscoUmbrella/Playbooks/CiscoUmbrellaPlaybooks/CiscoUmbrella-AddIpToDestinationList/readme.md#summary).",
        "prerequisites": [
            "1. Login to Cisco Umbrella dashboard and navigating to Admin-->API Keys. Create New API Key if not already created and select the appropriate 'Key Scope' with Read/Write permission. Store 'Api Key' and 'Key Secret' to a safe place. This 'Api Key' is a 'Client Id' and 'Key Secret' is a 'Secret' used for this Playbook.",
            "2. Store the 'Api Key' and 'Key Secret' from previous step to Key vault Secrets.",
            "3. To send notification to Microsoft Teams, Teams group id and channel id is needed at the time of playbook creation."
        ],
        "postDeployment": [
            "For more details on Post Deployment Instructions, click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/CiscoUmbrella/Playbooks/CiscoUmbrellaPlaybooks/CiscoUmbrella-AddIpToDestinationList/readme.md#post-deployment-instructions)."
        ],
        "lastUpdateTime": "2024-12-16T10:00:00.000Z",
        "entities": [
            "IP"
        ],
        "tags": [
            "Notification",
            "Teams Response"
        ],
        "support": {
            "tier": "Microsoft"
        },
        "author": {
            "name": "Microsoft"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "CiscoUmbrella-AddIpToDestinationList",
            "type": "string"
        },
        "TeamsGroupId": {
            "defaultValue": "TeamsGroupIds",
            "type": "string",
            "metadata": {
                "description": "Id of the Teams Group where the adaptive card will be posted."
            }
        },
        "TeamsChannelId": {
            "defaultValue": "TeamsChannelId",
            "type": "string",
            "metadata": {
                "description": "Id of the Teams Channel where the adaptive card will be posted."
            }
        },
        "Keyvault name": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Enter the Key vault name where CiscoUmbrella Secrets are stored"
            }
        },
        "Umbrella API ClientId Key Name": {
            "type": "string",
            "metadata": {
                "description": "Enter CiscoUmbrella ClientId Key Name from Key vault"
            }
        },
        "Umbrella API Secret Key Name": {
            "type": "securestring",
            "metadata": {
                "description": "Enter CiscoUmbrella Secret Key Name from Key vault"
            }
        },
        "Host End Point": {
            "type": "string",
            "defaultValue": "api.umbrella.com",
            "metadata": {
                "description": "Enter Host End Point(hostname) without http:// or https://"
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "TeamsConnectionName": "[concat('teams-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]"
    },
    "resources": [
    {
        "properties": {
            "provisioningState": "Succeeded",
            "state": "Enabled",
            "definition": {
                "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                    "$connections": {
                        "defaultValue": {},
                        "type": "Object"
                    },
                    "Umbrella API ClientId Key Name": {
                        "type": "string",
                        "defaultValue": "[parameters('Umbrella API ClientId Key Name')]"
                    },
                    "Umbrella API Secret Key Name": {
                        "type": "securestring",
                        "defaultValue": "[parameters('Umbrella API Secret Key Name')]"
                    },
                    "Host End Point": {
                        "type": "string",
                        "defaultValue": "[parameters('Host End Point')]"
                    }
                },
                "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                        "type": "ApiConnectionWebhook",
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                }
                            },
                            "body": {
                                "callback_url": "@{listCallbackUrl()}"
                            },
                            "path": "/incident-creation"
                        }
                    }
                },
                "actions": {
                    "Append_to_array_variable": {
                        "runAfter": {
                            "Initialize_variable_dest_lists_array": ["Succeeded"]
                        },
                        "type": "AppendToArrayVariable",
                        "inputs": {
                            "name": "dest_lists_array",
                            "value": {
                                "title": "Ignore",
                                "value": 0
                            }
                        }
                    },
                    "For_each_IP": {
                        "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                        "actions": {
                            "Add_IP_to_destination_list": {
                                "actions": {
                                    "Compose": {
                                        "runAfter": {
                                            "Filter_array": ["Succeeded"]
                                        },
                                        "type": "Compose",
                                        "inputs": "@body('Filter_array')[0]['title']"
                                    },
                                    "Filter_array": {
                                        "runAfter": {
                                            "Set_variable_3": ["Skipped"]
                                        },
                                        "type": "Query",
                                        "inputs": {
                                            "from": "@variables('dest_lists_array')",
                                            "where": "@equals(string(item()['value']), body('Post_adaptive_card_and_wait_for_a_response')['data']['action_choices'])"
                                        }
                                    },
                                    "Set_variable": {
                                        "runAfter": {
                                            "Compose": ["Succeeded"]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "action_message",
                                            "value": "IP @{outputs('Get_IP')} added to \"@{outputs('Compose')}\" destination list."
                                        }
                                    },
                                    "Set_variable_3": {
                                        "runAfter": {
                                            "HTTP_-_Add_list_of_destinations_to_destination_list": [
                                                "TimedOut",
                                                "Failed"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "action_message",
                                            "value": "IP @{outputs('Get_IP')} was not added to \"\" destination lists due to Cisco Umbrella API error."
                                        }
                                    },
                                    "HTTP_-_Add_list_of_destinations_to_destination_list": {
                                        "type": "Http",
                                        "inputs": {
                                            "uri": "https://@{parameters('Host End Point')}/policies/v2/destinationlists/@{encodeURIComponent(body('Post_adaptive_card_and_wait_for_a_response')['data']['action_choices'])}/destinations",
                                            "method": "POST",
                                            "headers": {
                                                "Content-Type": "application/json",
                                                "Accept": "application/json",
                                                "Authorization": "Bearer @{body('Parse_JSON_-_Parse_Login_Response')?['access_token']}"
                                            },
                                            "body": [
                                                {
                                                    "destination": "@{outputs('Get_IP')}"
                                                }
                                            ]
                                        },
                                        "runtimeConfiguration": {
                                            "contentTransfer": {
                                                "transferMode": "Chunked"
                                            }
                                        }
                                    }
                                },
                                "runAfter": {
                                    "Post_adaptive_card_and_wait_for_a_response": ["Succeeded"]
                                },
                                "else": {
                                    "actions": {}
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "not": {
                                                "equals": [
                                                    "@body('Post_adaptive_card_and_wait_for_a_response')?['data']",
                                                    "@null"
                                                ]
                                            }
                                        },
                                        {
                                            "not": {
                                                "equals": [
                                                    "@body('Post_adaptive_card_and_wait_for_a_response')?['data']?['action_choices']",
                                                    "@'0'"
                                                ]
                                            }
                                        },
                                        {
                                            "contains": [
                                                "@body('Post_adaptive_card_and_wait_for_a_response')?['data']",
                                                "action_choices"
                                            ]
                                        }
                                    ]
                                },
                                "type": "If"
                            },
                            "Add_comment_to_incident_(V3)": {
                                "runAfter": {
                                    "Get_Cisco_logo": ["Succeeded"]
                                },
                                "type": "ApiConnection",
                                "inputs": {
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "body": {
                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                        "message": "<p>@{outputs('Get_Cisco_logo')}<strong>CiscoUmbrella-AddIpToDestinationList</strong><br>\nActions taken:<br>\n@{variables('action_message')}<br>\n@{variables('status_message')}<br>\n@{variables('severity_message')}</p>"
                                    },
                                    "path": "/Incidents/Comment"
                                }
                            },
                            "Create_body_for_adaptive_card": {
                                "type": "Compose",
                                "inputs": {
                                    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                                    "actions": [
                                        {
                                            "id": "btnSubmit",
                                            "title": "Submit",
                                            "type": "Action.Submit"
                                        },
                                        {
                                            "id": "btnIgnore",
                                            "title": "Ignore",
                                            "type": "Action.Submit"
                                        }
                                    ],
                                    "body": [
                                        {
                                            "size": "large",
                                            "text": "Suspicious IP - Microsoft Sentinel",
                                            "type": "TextBlock",
                                            "weight": "bolder",
                                            "wrap": true
                                        },
                                        {
                                            "text": " Incident No : @{triggerBody()?['object']?['properties']?['incidentNumber']}  ",
                                            "type": "TextBlock",
                                            "weight": "Bolder",
                                            "wrap": true
                                        },
                                        {
                                            "text": "@{triggerBody()?['object']?['properties']?['description']}",
                                            "type": "TextBlock",
                                            "wrap": true
                                        },
                                        {
                                            "text": "For more details check the incident:",
                                            "type": "TextBlock",
                                            "weight": "Bolder",
                                            "wrap": true
                                        },
                                        {
                                            "text": "[Click here to view the Incident](@{triggerBody()?['object']?['properties']?['incidentUrl']})",
                                            "type": "TextBlock",
                                            "wrap": true
                                        },
                                        {
                                            "id": "PollQuestionAction",
                                            "text": "Select the Cisco Umbrella destination list to add IP  to.",
                                            "type": "TextBlock"
                                        },
                                        {
                                            "choices": "@variables('dest_lists_array')",
                                            "id": "action_choices",
                                            "placeholder": "Select from these choices",
                                            "style": "compact",
                                            "type": "Input.ChoiceSet"
                                        },
                                        {
                                            "id": "PollQuestionSeverity",
                                            "text": "Select incident severity",
                                            "type": "TextBlock"
                                        },
                                        {
                                            "choices": [
                                                {
                                                    "title": "High",
                                                    "value": "high"
                                                },
                                                {
                                                    "title": "Medium",
                                                    "value": "medium"
                                                },
                                                {
                                                    "title": "Low",
                                                    "value": "low"
                                                },
                                                {
                                                    "title": "Informational",
                                                    "value": "informational"
                                                }
                                            ],
                                            "id": "severity_choices",
                                            "placeholder": "Select from these choices",
                                            "style": "compact",
                                            "type": "Input.ChoiceSet"
                                        },
                                        {
                                            "id": "PollQuestionStatus",
                                            "text": "Select incident status",
                                            "type": "TextBlock"
                                        },
                                        {
                                            "choices": [
                                            {
                                                "title": "New",
                                                "value": "new"
                                            },
                                            {
                                                "title": "Active",
                                                "value": "active"
                                            },
                                            {
                                                "title": "Closed: True Positive - suspicious activity",
                                                "value": "close_tp"
                                            },
                                            {
                                                "title": "Closed: Benign Positive - suspicious but expected",
                                                "value": "close_bp"
                                            },
                                            {
                                                "title": "Closed: False Positive - incorrect alert logic",
                                                "value": "close_fp_incorrect_logic"
                                            },
                                            {
                                                "title": "Closed: False Positive - inaccurate data",
                                                "value": "close_fp_inaccurate_data"
                                            },
                                            {
                                                "title": "Closed: Undetermined",
                                                "value": "close_undetermined"
                                            }
                                            ],
                                            "id": "status_choices",
                                            "placeholder": "Select from these choices",
                                            "style": "compact",
                                            "type": "Input.ChoiceSet"
                                        }
                                    ],
                                    "type": "AdaptiveCard",
                                    "version": "1.0"
                                }
                            },
                            "Get_Cisco_logo": {
                                "runAfter": {
                                    "Update_status": ["Succeeded"]
                                },
                                "type": "Compose",
                                "inputs": "<img src=\"https://github.com/socprime/Azure-Sentinel/raw/master/Solutions/CiscoUmbrella/Playbooks/cisco-logo.png\"  width=\"32\" height=\"32\">"
                            },
                            "Post_adaptive_card_and_wait_for_a_response": {
                                "runAfter": {
                                    "Get_IP": ["Succeeded"]
                                },
                                "type": "ApiConnectionWebhook",
                                "inputs": {
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['teams']['connectionId']"
                                        }
                                    },
                                    "body": {
                                        "notificationUrl": "@{listCallbackUrl()}",
                                        "body": {
                                            "messageBody": "@{outputs('Create_body_for_adaptive_card')}",
                                            "updateMessage": "Thanks for your response!",
                                            "recipient": {
                                                "groupId": "@variables('TeamsGroupId')",
                                                "channelId": "@variables('TeamsChannelId')"
                                            }
                                        }
                                    },
                                    "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Channel')}/$subscriptions"
                                }
                            },
                            "Set_variable_14": {
                                "runAfter": {
                                    "Create_body_for_adaptive_card": ["Succeeded"]
                                },
                                "type": "SetVariable",
                                "inputs": {
                                    "name": "action_message",
                                    "value": "\"\""
                                }
                            },
                            "Set_variable_15": {
                                "runAfter": {
                                    "Set_variable_14": ["Succeeded"]
                                },
                                "type": "SetVariable",
                                "inputs": {
                                    "name": "severity_message",
                                    "value": "\"\""
                                }
                            },
                            "Set_variable_16": {
                                "runAfter": {
                                    "Set_variable_15": ["Succeeded"]
                                },
                                "type": "SetVariable",
                                "inputs": {
                                    "name": "status_message",
                                    "value": "\"\""
                                }
                            },
                            "Update_severity": {
                                "actions": {
                                    "Switch": {
                                        "cases": {
                                            "high_severity": {
                                                "case": "high",
                                                "actions": {
                                                    "Set_variable_2": {
                                                        "runAfter": {
                                                            "Update_incident_high_severity": ["Succeeded"]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "severity_message",
                                                            "value": "Incident severity was changed to \"High\"."
                                                        }
                                                    },
                                                    "Update_incident_high_severity": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "severity": "High"
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            },
                                            "informational_severity": {
                                                "case": "informational",
                                                "actions": {
                                                    "Set_variable_4": {
                                                        "runAfter": {
                                                            "Update_incident_informational_severity": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "severity_message",
                                                            "value": "Incident severity was changed to \"Informational\"."
                                                        }
                                                    },
                                                    "Update_incident_informational_severity": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "severity": "Informational"
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            },
                                            "low_severity": {
                                                "case": "low",
                                                "actions": {
                                                    "Set_variable_5": {
                                                        "runAfter": {
                                                            "Update_incident_low_severity": ["Succeeded"]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "severity_message",
                                                            "value": "Incident severity was changed to \"Low\"."
                                                        }
                                                    },
                                                    "Update_incident_low_severity": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "severity": "Low"
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            },
                                            "medium_severity": {
                                                "case": "medium",
                                                "actions": {
                                                    "Set_variable_6": {
                                                        "runAfter": {
                                                            "Update_incident_medium_severity": ["Succeeded"]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "severity_message",
                                                            "value": "Incident severity was changed to \"Medium\"."
                                                        }
                                                    },
                                                    "Update_incident_medium_severity": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "severity": "Medium"
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "default": {
                                            "actions": {}
                                        },
                                        "expression": "@body('Post_adaptive_card_and_wait_for_a_response')['data']['severity_choices']",
                                        "type": "Switch"
                                    }
                                },
                                "runAfter": {
                                    "Add_IP_to_destination_list": ["Succeeded"]
                                },
                                "else": {
                                    "actions": {}
                                },
                                "expression": {
                                    "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@body('Post_adaptive_card_and_wait_for_a_response')?['data']",
                                                "@null"
                                            ]
                                        }
                                    },
                                    {
                                        "contains": [
                                            "@body('Post_adaptive_card_and_wait_for_a_response')?['data']",
                                            "severity_choices"
                                        ]
                                    }
                                    ]
                                },
                                "type": "If"
                            },
                            "Update_status": {
                                "actions": {
                                    "Switch_2": {
                                        "cases": {
                                            "Case": {
                                                "case": "new",
                                                "actions": {
                                                    "Set_variable_7": {
                                                        "runAfter": {
                                                            "Update_incident": ["Succeeded"]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "status_message",
                                                            "value": "Incident status was changed to \"New\"."
                                                        }
                                                    },
                                                    "Update_incident": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "status": "New"
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            },
                                            "Case_2": {
                                                "case": "active",
                                                "actions": {
                                                    "Set_variable_8": {
                                                        "runAfter": {
                                                            "Update_incident_2": ["Succeeded"]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "status_message",
                                                            "value": "Incident status was changed to \"Active\"."
                                                        }
                                                    },
                                                    "Update_incident_2": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "status": "Active"
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            },
                                            "Case_3": {
                                                "case": "close_tp",
                                                "actions": {
                                                    "Set_variable_9": {
                                                        "runAfter": {
                                                            "Update_incident_3": ["Succeeded"]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "status_message",
                                                            "value": "Incident status was changed to \"Closed: True Positive - suspicious activity\"."
                                                        }
                                                    },
                                                    "Update_incident_3": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "status": "Closed",
                                                                "classification": {
                                                                    "ClassificationAndReason": "TruePositive - SuspiciousActivity"
                                                                }
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            },
                                            "Case_4": {
                                                "case": "close_bp",
                                                "actions": {
                                                    "Set_variable_10": {
                                                        "runAfter": {
                                                            "Update_incident_4": ["Succeeded"]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "status_message",
                                                            "value": "Incident status was changed to \"Closed: Benign Positive - suspicious but expected\"."
                                                        }
                                                    },
                                                    "Update_incident_4": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "status": "Closed",
                                                                "classification": {
                                                                    "ClassificationAndReason": "BenignPositive - SuspiciousButExpected"
                                                                }
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            },
                                            "Case_5": {
                                                "case": "close_fp_incorrect_logic",
                                                "actions": {
                                                    "Set_variable_11": {
                                                        "runAfter": {
                                                            "Update_incident_5": ["Succeeded"]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "status_message",
                                                            "value": "Incident status was changed to \"Closed: False Positive - incorrect alert logic\"."
                                                        }
                                                    },
                                                    "Update_incident_5": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "status": "Closed",
                                                                "classification": {
                                                                    "ClassificationAndReason": "FalsePositive - IncorrectAlertLogic"
                                                                }
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            },
                                            "Case_6": {
                                                "case": "close_fp_inaccurate_data",
                                                "actions": {
                                                    "Set_variable_12": {
                                                        "runAfter": {
                                                            "Update_incident_6": ["Succeeded"]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "status_message",
                                                            "value": "Incident status was changed to \"Closed: False Positive - inaccurate data\"."
                                                        }
                                                    },
                                                    "Update_incident_6": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "status": "Closed",
                                                                "classification": {
                                                                    "ClassificationAndReason": "FalsePositive - InaccurateData"
                                                                }
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            },
                                            "Case_7": {
                                                "case": "close_undetermined",
                                                "actions": {
                                                    "Set_variable_13": {
                                                        "runAfter": {
                                                            "Update_incident_7": ["Succeeded"]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "status_message",
                                                            "value": "Incident status was changed to \"Closed: Undetermined\"."
                                                        }
                                                    },
                                                    "Update_incident_7": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "status": "Closed",
                                                                "classification": {
                                                                    "ClassificationAndReason": "Undetermined"
                                                                }
                                                            },
                                                            "path": "/Incidents"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "default": {
                                            "actions": {}
                                        },
                                        "expression": "@body('Post_adaptive_card_and_wait_for_a_response')['data']['status_choices']",
                                        "type": "Switch"
                                    }
                                },
                                "runAfter": {
                                    "Update_severity": ["Succeeded"]
                                },
                                "else": {
                                    "actions": {}
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "not": {
                                                "equals": [
                                                    "@body('Post_adaptive_card_and_wait_for_a_response')?['data']",
                                                    "@null"
                                                ]
                                            }
                                        },
                                        {
                                            "contains": [
                                                "@body('Post_adaptive_card_and_wait_for_a_response')?['data']",
                                                "status_choices"
                                            ]
                                        }
                                    ]
                                },
                                "type": "If"
                            },
                            "Get_IP": {
                                "runAfter": {
                                    "Set_variable_16": ["Succeeded"]
                                },
                                "type": "Compose",
                                "inputs": "@item()['address']"
                            }
                        },
                        "runAfter": {
                            "Entities_-_Get_IPs": ["Succeeded"]
                        },
                        "type": "Foreach"
                    },
                    "Get_list_of_destinations_lists_for_Teams_adaptive_card": {
                        "runAfter": {
                            "Parse_JSON_-_Parse_destination_lists": ["Succeeded"]
                        },
                        "type": "Select",
                        "inputs": {
                            "from": "@body('Parse_JSON_-_Parse_destination_lists')?['data']",
                            "select": {
                                "title": "@item()['name']",
                                "value": "@item()['id']"
                            }
                        }
                    },
                    "Initialize_variable_TeamsChannelId": {
                        "runAfter": {
                            "Initialize_variable_TeamsGroupId": ["Succeeded"]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "TeamsChannelId",
                                    "type": "string",
                                    "value": "[parameters('TeamsChannelId')]"
                                }
                            ]
                        }
                    },
                    "Initialize_variable_TeamsGroupId": {
                        "runAfter": {},
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "TeamsGroupId",
                                    "type": "string",
                                    "value": "[parameters('TeamsGroupId')]"
                                }
                            ]
                        }
                    },
                    "Initialize_variable_action_message": {
                        "runAfter": {
                            "Initialize_variable_TeamsChannelId": ["Succeeded"]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "action_message",
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "Initialize_variable_dest_lists_array": {
                        "runAfter": {
                            "Get_list_of_destinations_lists_for_Teams_adaptive_card": [
                                "Succeeded"
                            ]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "dest_lists_array",
                                    "type": "array",
                                    "value": "@body('Get_list_of_destinations_lists_for_Teams_adaptive_card')"
                                }
                            ]
                        }
                    },
                    "Initialize_variable_severity_message": {
                        "runAfter": {
                            "Initialize_variable_action_message": ["Succeeded"]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "severity_message",
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "Initialize_variable_status_message": {
                        "runAfter": {
                            "Initialize_variable_severity_message": ["Succeeded"]
                        },
                        "type": "InitializeVariable",
                        "inputs": {
                            "variables": [
                                {
                                    "name": "status_message",
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "Get_Client_Id": {
                        "runAfter": {
                            "Initialize_variable_status_message": ["Succeeded"]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                                }
                            },
                            "method": "get",
                            "path": "/secrets/@{encodeURIComponent(parameters('Umbrella API ClientId Key Name'))}/value"
                        },
                        "runtimeConfiguration": {
                            "secureData": {
                                "properties": ["inputs", "outputs"]
                            }
                        }
                    },
                    "Get_Secret": {
                        "runAfter": {
                            "Get_Client_Id": ["Succeeded"]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                                }
                            },
                            "method": "get",
                            "path": "/secrets/@{encodeURIComponent(parameters('Umbrella API Secret Key Name'))}/value"
                        },
                        "runtimeConfiguration": {
                            "secureData": {
                                "properties": ["inputs", "outputs"]
                            }
                        }
                    },
                    "HTTP_-_Generate_Login_Token": {
                        "runAfter": {
                            "Get_Secret": ["Succeeded"]
                        },
                        "type": "Http",
                        "inputs": {
                            "uri": "https://@{parameters('Host End Point')}/auth/v2/token",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "authentication": {
                                "type": "Basic",
                                "username": "@{body('Get_Client_Id')?['value']}",
                                "password": "@{body('Get_Secret')?['value']}"
                            }
                        },
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            },
                            "secureData": {
                                "properties": ["inputs", "outputs"]
                            }
                        }
                    },
                    "Parse_JSON_-_Parse_Login_Response": {
                        "runAfter": {
                            "HTTP_-_Generate_Login_Token": ["Succeeded"]
                        },
                        "type": "ParseJson",
                        "inputs": {
                            "content": "@body('HTTP_-_Generate_Login_Token')",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token_type": {
                                        "type": "string"
                                    },
                                    "access_token": {
                                        "type": "string"
                                    },
                                    "expires_in": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "HTTP_-_Retrieve_all_destination_lists": {
                        "runAfter": {
                            "Parse_JSON_-_Parse_Login_Response": ["Succeeded"]
                        },
                        "type": "Http",
                        "inputs": {
                            "uri": "https://@{parameters('Host End Point')}/policies/v2/destinationlists",
                            "method": "GET",
                            "headers": {
                                "Content-Type": "application-json",
                                "Authorization": "Bearer @{body('Parse_JSON_-_Parse_Login_Response')?['access_token']}"
                            }
                        },
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            }
                        }
                    },
                    "Parse_JSON_-_Parse_destination_lists": {
                        "runAfter": {
                            "HTTP_-_Retrieve_all_destination_lists": ["Succeeded"]
                        },
                        "type": "ParseJson",
                        "inputs": {
                            "content": "@body('HTTP_-_Retrieve_all_destination_lists')",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "object",
                                        "properties": {
                                            "code": {
                                                "type": "integer"
                                            },
                                            "text": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "meta": {
                                        "type": "object",
                                        "properties": {
                                            "page": {
                                                "type": "integer"
                                            },
                                            "limit": {
                                                "type": "integer"
                                            },
                                            "total": {
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "organizationId": {
                                                    "type": "integer"
                                                },
                                                "access": {
                                                    "type": "string"
                                                },
                                                "isGlobal": {
                                                    "type": "boolean"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "thirdpartyCategoryId": {},
                                                "createdAt": {
                                                    "type": "integer"
                                                },
                                                "modifiedAt": {
                                                    "type": "integer"
                                                },
                                                "isMspDefault": {
                                                    "type": "boolean"
                                                },
                                                "markedForDeletion": {
                                                    "type": "boolean"
                                                },
                                                "bundleTypeId": {
                                                    "type": "integer"
                                                },
                                                "meta": {
                                                    "type": "object",
                                                    "properties": {
                                                    "domainCount": {
                                                        "type": "integer"
                                                    },
                                                    "urlCount": {
                                                        "type": "integer"
                                                    },
                                                    "ipv4Count": {
                                                        "type": "integer"
                                                    },
                                                    "applicationCount": {
                                                        "type": "integer"
                                                    },
                                                    "destinationCount": {
                                                        "type": "integer"
                                                    }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "organizationId",
                                                "access",
                                                "isGlobal",
                                                "name",
                                                "thirdpartyCategoryId",
                                                "createdAt",
                                                "modifiedAt",
                                                "isMspDefault",
                                                "markedForDeletion",
                                                "bundleTypeId",
                                                "meta"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "Entities_-_Get_IPs": {
                        "runAfter": {
                            "Append_to_array_variable": ["Succeeded"]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                }
                            },
                            "method": "post",
                            "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                            "path": "/entities/ip"
                        }
                    }
                },
                "outputs": {}
            },
            "parameters": {
                "$connections": {
                    "value": {
                        "microsoftsentinel": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                            "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                            "connectionProperties": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                }
                            }
                        },
                        "teams": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                            "connectionName": "[variables('TeamsConnectionName')]",
                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
                        },
                        "keyvault": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                            "connectionName": "[variables('KeyvaultConnectionName')]",
                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
                            "connectionProperties": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                }
                            }
                        }
                    }
                }
            }
        },
        "name": "[parameters('PlaybookName')]",
        "type": "Microsoft.Logic/workflows",
        "location": "[resourceGroup().location]",
        "identity": {
            "type": "SystemAssigned"
        },
        "tags": {
            "hidden-SentinelTemplateName": "CiscoUmbrella-AddIpToDestinationList",
            "hidden-SentinelTemplateVersion": "1.0"
        },
        "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('TeamsConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('TeamsConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('KeyvaultConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('KeyvaultConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('keyvault name')]"
                },
                "nonSecretParameterValues": {
                    "vaultName": "[parameters('keyvault name')]"
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                }
            }
        }
    ]
}