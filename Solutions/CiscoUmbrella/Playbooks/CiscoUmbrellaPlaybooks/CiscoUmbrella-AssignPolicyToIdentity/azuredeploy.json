{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "CiscoUmbrella-AssignPolicyToIdentity",
        "description": "This playbook provides an automated way to associate an identity to an existing policy in Cisco Umbrella. For more details, click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/CiscoUmbrella/Playbooks/CiscoUmbrellaPlaybooks/CiscoUmbrella-AssignPolicyToIdentity/readme.md#summary).",
        "prerequisites": [
            "1. Login to Cisco Umbrella dashboard and navigating to Admin-->API Keys. Create New API Key if not already created and select the appropriate 'Key Scope' with Read/Write permission. Store 'Api Key' and 'Key Secret' to a safe place. This 'Api Key' is a 'Client Id' and 'Key Secret' is a 'Secret' used for this Playbook.",
            "2. Store the 'Api Key' and 'Key Secret' from previous step to Key vault Secrets.",
            "3. To obtain the Organization ID and Policy ID, press F12 or right-click on the page and select 'Inspect' in your browser on the Cisco Umbrella dashboard page. Then, navigate to the 'Policies' section and click on the 'All Policies' tab. Now open the 'Network' tab and search with 'policy'. Open the 'Response' tab of the request to get the Policy ID and Organization ID. For more details click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/CiscoUmbrella/Playbooks/CiscoUmbrellaPlaybooks/CiscoUmbrella-AssignPolicyToIdentity/readme.md#Prerequisites)"
        ],
        "postDeployment": [
            "For more details on Post Deployment Instructions, click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/CiscoUmbrella/Playbooks/CiscoUmbrellaPlaybooks/CiscoUmbrella-AssignPolicyToIdentity/readme.md#post-deployment-instructions)."
        ],
        "lastUpdateTime": "2024-12-18T10:00:00.000Z",
        "entities": [],
        "tags": [
            "Notification"
        ],
        "support": {
            "tier": "Microsoft"
        },
        "author": {
            "name": "Microsoft"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "CiscoUmbrella-AssignPolicyToIdentity",
            "type": "string"
        },
        "CiscoUmbrellaOrganizationId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Organization Id from Cisco Umbrella."
            }
        },
        "CiscoUmbrellaPolicyId": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Policy Id from Cisco Umbrella."
            }
        },
        "Keyvault name": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Enter the Key vault name where CiscoUmbrella Secrets are stored"
            }
        },
        "Umbrella API ClientId Key Name": {
            "type": "string",
            "metadata": {
                "description": "Enter CiscoUmbrella ClientId Key Name from Key vault"
            }
        },
        "Umbrella API Secret Key Name": {
            "type": "securestring",
            "metadata": {
                "description": "Enter CiscoUmbrella Secret Key Name from Key vault"
            }
        },
        "Host End Point": {
            "type": "string",
            "defaultValue": "api.umbrella.com",
            "metadata": {
                "description": "Enter Host End Point(hostname) without http:// or https://"
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "Umbrella API ClientId Key Name": {
                            "type": "string",
                            "defaultValue": "[parameters('Umbrella API ClientId Key Name')]"
                        },
                        "Umbrella API Secret Key Name": {
                            "type": "securestring",
                            "defaultValue": "[parameters('Umbrella API Secret Key Name')]"
                        },
                        "Host End Point": {
                            "type": "string",
                            "defaultValue": "[parameters('Host End Point')]"
                        }
                    },
                    "triggers": {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                        "type": "ApiConnectionWebhook",
                        "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                    }
                                },
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "runAfter": {
                                "Create_logo": ["Succeeded"]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><strong></strong><strong>@{outputs('Create_logo')}</strong><strong> CiscoUmbrella-AssignPolicyToIdentity</strong><br>\nThe following origin ids were assigned to policy @{variables('policyId')} for organization @{variables('organizationId')}:<br>\n@{body('Create_HTML_table_with_updated_origin_IDs')}<br>\nThe following origin ids were not assigned because of errors:<br>\n@{body('Create_HTML_table_with_not_updated_origin_IDs')}</p>"
                                },
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Create_HTML_table_with_not_updated_origin_IDs": {
                            "runAfter": {
                                "Create_HTML_table_with_updated_origin_IDs": ["Succeeded"]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@variables('not_updated_oridinIds_array')",
                                "format": "HTML",
                                "columns": [
                                    {
                                        "header": "originId",
                                        "value": "@item()"
                                    }
                                ]
                            }
                        },
                        "Create_HTML_table_with_updated_origin_IDs": {
                            "runAfter": {
                                "For_each_originId_assign_policy_to_originId": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@variables('updated_oridinIds_array')",
                                "format": "HTML",
                                "columns": [
                                    {
                                        "header": "originId",
                                        "value": "@item()"
                                    }
                                ]
                            }
                        },
                        "Create_logo": {
                            "runAfter": {
                                "Create_HTML_table_with_not_updated_origin_IDs": ["Succeeded"]
                            },
                            "type": "Compose",
                            "inputs": "<img src=\"https://github.com/Azure/Azure-Sentinel/raw/master/Solutions/CiscoUmbrella/Playbooks/cisco-logo.png\"  width=\"32\" height=\"32\">"
                        },
                        "For_each_alert_in_incident": {
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions": {
                                "For_each_originId": {
                                "foreach": "@body('Parse_alert_custom_details')?['originId']",
                                "actions": {
                                    "Add_unique_originId_to_OriginId_array": {
                                        "actions": {
                                            "Append_to_array_variable": {
                                                "type": "AppendToArrayVariable",
                                                "inputs": {
                                                    "name": "originId_array",
                                                    "value": "@items('For_each_originId')"
                                                }
                                            }
                                        },
                                        "else": {
                                            "actions": {}
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "not": {
                                                        "contains": [
                                                            "@variables('originId_array')",
                                                            "@items('For_each_originId')"
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    }
                                },
                                "runAfter": {
                                    "Parse_alert_custom_details": ["Succeeded"]
                                },
                                "type": "Foreach"
                                },
                                "Parse_alert_custom_details": {
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@items('For_each_alert_in_incident')?['properties']?['additionalData']?['Custom Details']",
                                        "schema": {
                                            "properties": {
                                                "originId": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON_-_Parse_Login_Response": ["Succeeded"]
                            },
                            "type": "Foreach"
                        },
                        "For_each_originId_assign_policy_to_originId": {
                            "foreach": "@variables('originId_array')",
                            "actions": {
                                "Append_originId_to_not_updated_originIds_array_variable_in_case_of_error": {
                                    "runAfter": {
                                        "HTTP_-_Assign_a_policy_to_an_identity": [
                                            "Failed",
                                            "TimedOut"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "not_updated_oridinIds_array",
                                        "value": "@items('For_each_originId_assign_policy_to_originId')"
                                    }
                                },
                                "Append_originId_to_updated_originIds_array_variable": {
                                    "runAfter": {
                                        "Append_originId_to_not_updated_originIds_array_variable_in_case_of_error": [
                                            "Skipped"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "updated_oridinIds_array",
                                        "value": "@items('For_each_originId_assign_policy_to_originId')"
                                    }
                                },
                                "HTTP_-_Assign_a_policy_to_an_identity": {
                                    "type": "Http",
                                    "inputs": {
                                        "uri": "https://@{parameters('Host End Point')}/deployments/v2/policies/@{encodeURIComponent(variables('policyId'))}/identities/@{encodeURIComponent(items('For_each_originId_assign_policy_to_originId'))}",
                                        "method": "PUT",
                                        "headers": {
                                            "Content-Type": "application-json",
                                            "Authorization": "Bearer @{body('Parse_JSON_-_Parse_Login_Response')?['access_token']}"
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_alert_in_incident": ["Succeeded"]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_not_updated_oridinIds_array": {
                            "runAfter": {
                                "Initialize_variable_updated_oridinIds_array": ["Succeeded"]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "not_updated_oridinIds_array",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_organizationId": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "organizationId",
                                        "type": "string",
                                        "value": "[parameters('CiscoUmbrellaOrganizationId')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_originId_array": {
                            "runAfter": {
                                "Initialize_variable_policyId": ["Succeeded"]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "originId_array",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_policyId": {
                            "runAfter": {
                                "Initialize_variable_organizationId": ["Succeeded"]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "policyId",
                                        "type": "string",
                                        "value": "[parameters('CiscoUmbrellaPolicyId')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_updated_oridinIds_array": {
                            "runAfter": {
                                "Initialize_variable_originId_array": ["Succeeded"]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "updated_oridinIds_array",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Get_Client_Id": {
                            "runAfter": {
                                "Initialize_variable_not_updated_oridinIds_array": ["Succeeded"]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent(parameters('Umbrella API ClientId Key Name'))}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": ["inputs", "outputs"]
                                }
                            }
                        },
                        "Get_Secret": {
                            "runAfter": {
                                "Get_Client_Id": ["Succeeded"]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent(parameters('Umbrella API Secret Key Name'))}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": ["inputs", "outputs"]
                                }
                            }
                        },
                        "HTTP_-_Generate_Login_Token": {
                            "runAfter": {
                                "Get_Secret": ["Succeeded"]
                            },
                            "type": "Http",
                            "inputs": {
                                "uri": "https://@{parameters('Host End Point')}/auth/v2/token",
                                "method": "POST",
                                "headers": {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                },
                                "authentication": {
                                    "type": "Basic",
                                    "username": "@{body('Get_Client_Id')?['value']}",
                                    "password": "@{body('Get_Secret')?['value']}"
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                },
                                "secureData": {
                                    "properties": ["inputs", "outputs"]
                                }
                            }
                        },
                        "Parse_JSON_-_Parse_Login_Response": {
                            "runAfter": {
                                "HTTP_-_Generate_Login_Token": ["Succeeded"]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_-_Generate_Login_Token')",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "microsoftsentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName": "[variables('KeyvaultConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "hidden-SentinelTemplateName": "CiscoUmbrella-AssignPolicyToIdentity",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('KeyvaultConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('KeyvaultConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('keyvault name')]"
                },
                "nonSecretParameterValues": {
                    "vaultName": "[parameters('keyvault name')]"
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
                }
            }
        }
    ]
}