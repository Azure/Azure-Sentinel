{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "config": {
      "isWizard": false,
      "basics": {
        "description": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\" width=\"75px\" height=\"75px\">\n\n**Note:** Please refer to the following before installing the solution: \n\n• Review the solution [Release Notes](https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Web%20Shells%20Threat%20Protection/ReleaseNotes.md)\n\n • There may be [known issues](https://aka.ms/sentinelsolutionsknownissues) pertaining to this Solution, please refer to them before installing.\n\nThe Web Shells Threat Protection solution contains security content that helps proactive and reactive detection of Web Shells used by attackers. Web Shells are malicious scripts that attackers use to compromise internet facing servers. These are commonly used as a backdoor into the targeted web applications and servers. Microsoft Security Research has highlighted the threat, usage and detection of Web Shells in an enterprise environment in the following blogs: \n\n - [Web shell attacks continue to rise](https://www.microsoft.com/en-us/security/blog/2021/02/11/web-shell-attacks-continue-to-rise/) \n\n - [Analyzing attacks taking advantage of the Exchange Server vulnerabilities](https://www.microsoft.com/en-us/security/blog/2021/03/25/analyzing-attacks-taking-advantage-of-the-exchange-server-vulnerabilities/)\n\n**Pre-requisites:**\n\n This is a [domain solution](https://learn.microsoft.com/en-us/azure/sentinel/sentinel-solutions-catalog#domain-solutions) and does not include any data connectors. The content in this solution supports the connectors listed below. Install one or more of the listed solutions, to unlock the value provided by this solution. \r\n \r\n 1. Microsoft Defender XDR \n\n 2. Windows Security Events \n\n 3. Azure Web Application Firewall\n\n**Keywords:** WebDAV, SysAid, Mercury, CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, CVE-2021-27065, SUPERNOVA, SpringShell, CVE-2022-22965\n\n**Analytic Rules:** 3, **Hunting Queries:** 6\n\n[Learn more about Microsoft Sentinel](https://aka.ms/azuresentinel) | [Learn more about Solutions](https://aka.ms/azuresentinelsolutionsdoc)",
        "subscription": {
          "resourceProviders": [
            "Microsoft.OperationsManagement/solutions",
            "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "Microsoft.Insights/workbooks",
            "Microsoft.Logic/workflows"
          ]
        },
        "location": {
          "metadata": {
            "hidden": "Hiding location, we get it from the log analytics workspace"
          },
          "visible": false
        },
        "resourceGroup": {
          "allowExisting": true
        }
      }
    },
    "basics": [
      {
        "name": "getLAWorkspace",
        "type": "Microsoft.Solutions.ArmApiControl",
        "toolTip": "This filters by workspaces that exist in the Resource Group selected",
        "condition": "[greater(length(resourceGroup().name),0)]",
        "request": {
          "method": "GET",
          "path": "[concat(subscription().id,'/providers/Microsoft.OperationalInsights/workspaces?api-version=2020-08-01')]"
        }
      },
      {
        "name": "workspace",
        "type": "Microsoft.Common.DropDown",
        "label": "Workspace",
        "placeholder": "Select a workspace",
        "toolTip": "This dropdown will list only workspace that exists in the Resource Group selected",
        "constraints": {
          "allowedValues": "[map(filter(basics('getLAWorkspace').value, (filter) => contains(toLower(filter.id), toLower(resourceGroup().name))), (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
          "required": true
        },
        "visible": true
      }
    ],
    "steps": [
      {
        "name": "analytics",
        "label": "Analytics",
        "subLabel": {
          "preValidation": "Configure the analytics",
          "postValidation": "Done"
        },
        "bladeTitle": "Analytics",
        "elements": [
          {
            "name": "analytics-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "This solution installs the following analytic rule templates. After installing the solution, create and enable analytic rules in Manage solution view."
            }
          },
          {
            "name": "analytics-link",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "link": {
                "label": "Learn more",
                "uri": "https://docs.microsoft.com/azure/sentinel/tutorial-detect-threats-custom?WT.mc_id=Portal-Microsoft_Azure_CreateUIDef"
              }
            }
          },
          {
            "name": "analytic1",
            "type": "Microsoft.Common.Section",
            "label": "Identify SysAid Server web shell creation",
            "elements": [
              {
                "name": "analytic1-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This query looks for potential webshell creation by the threat actor Mercury after the sucessful exploitation of SysAid server. \nReference:  https://www.microsoft.com/security/blog/2022/08/25/mercury-leveraging-log4j-2-vulnerabilities-in-unpatched-systems-to-target-israeli-organizations/"
                }
              }
            ]
          },
          {
            "name": "analytic2",
            "type": "Microsoft.Common.Section",
            "label": "Malicious web application requests linked with Microsoft Defender for Endpoint (formerly Microsoft Defender ATP) alerts",
            "elements": [
              {
                "name": "analytic2-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "Takes Microsoft Defender for Endpoint (formerly Microsoft Defender ATP) alerts where web scripts are present in the evidence and correlates with requests made to those scripts in the WCSIISLog to surface new alerts for potentially malicious web request activity.\nThe lookback for alerts is set to 1h and the lookback for W3CIISLogs is set to 7d. A sample set of popular web script extensions has been provided in scriptExtensions that should be tailored to your environment."
                }
              }
            ]
          },
          {
            "name": "analytic3",
            "type": "Microsoft.Common.Section",
            "label": "SUPERNOVA webshell",
            "elements": [
              {
                "name": "analytic3-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "Identifies SUPERNOVA webshell based on W3CIISLog data.\n References:\n - https://unit42.paloaltonetworks.com/solarstorm-supernova/"
                }
              }
            ]
          }
        ]
      },
      {
        "name": "huntingqueries",
        "label": "Hunting Queries",
        "bladeTitle": "Hunting Queries",
        "elements": [
          {
            "name": "huntingqueries-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "This solution installs the following hunting queries. After installing the solution, run these hunting queries to hunt for threats in Manage solution view. "
            }
          },
          {
            "name": "huntingqueries-link",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "link": {
                "label": "Learn more",
                "uri": "https://docs.microsoft.com/azure/sentinel/hunting"
              }
            }
          },
          {
            "name": "huntingquery1",
            "type": "Microsoft.Common.Section",
            "label": "Possible webshell drop",
            "elements": [
              {
                "name": "huntingquery1-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This query searches for files with common web page content extensions created by IIS or Apache that could run arbitrary code. It includes a throttling mechanism to reduce false positive detections for web-based content management. This hunting query depends on MicrosoftThreatProtection data connector (DeviceFileEvents Parser or Table)"
                }
              }
            ]
          },
          {
            "name": "huntingquery2",
            "type": "Microsoft.Common.Section",
            "label": "Exchange IIS Worker Dropping Webshells",
            "elements": [
              {
                "name": "huntingquery2-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This query checks for the IIS worker process dropping files that resemble web shells and other artifacts seen in known attacks. Reference: https://msrc-blog.microsoft.com/2021/03/02/multiple-security-updates-released-for-exchange-server This hunting query depends on MicrosoftThreatProtection data connector (DeviceFileEvents Parser or Table)"
                }
              }
            ]
          },
          {
            "name": "huntingquery3",
            "type": "Microsoft.Common.Section",
            "label": "Webshell Detection",
            "elements": [
              {
                "name": "huntingquery3-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "Web shells are scripts that allow remote administration when uploaded to a web server. This query can detect web shells using GET requests by searching for keywords in URL strings. This hunting query depends on AzureMonitor(IIS) data connector (W3CIISLog Parser or Table)"
                }
              }
            ]
          },
          {
            "name": "huntingquery4",
            "type": "Microsoft.Common.Section",
            "label": "Possible Webshell usage attempt related to SpringShell(CVE-2022-22965)",
            "elements": [
              {
                "name": "huntingquery4-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This query searches Azure Web Application Firewall data for potential Webshell usage related to the SpringShell RCE vulnerability (CVE-2022-22965). For more information refer to Microsoft's security blog. This hunting query depends on WAF data connector (AzureDiagnostics Parser or Table)"
                }
              }
            ]
          },
          {
            "name": "huntingquery5",
            "type": "Microsoft.Common.Section",
            "label": "UMWorkerProcess Creating Webshell",
            "elements": [
              {
                "name": "huntingquery5-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This query detects unusual file content created by UMWorkerProcess, indicating exploitation of CVE-2021-26858 to generate a web shell. More related queries can be found on the Microsoft Security Response Center blog. This hunting query depends on MicrosoftThreatProtection data connector (DeviceFileEvents Parser or Table)"
                }
              }
            ]
          },
          {
            "name": "huntingquery6",
            "type": "Microsoft.Common.Section",
            "label": "Web Shell Activity",
            "elements": [
              {
                "name": "huntingquery6-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This query detects web shells by analyzing the distribution of commonly-used scripts against regular scripts for public client IPs with no W3CIIS activity in a fixed lookback period. This hunting query depends on AzureMonitor(IIS) data connector (W3CIISLog Parser or Table)"
                }
              }
            ]
          }
        ]
      }
    ],
    "outputs": {
      "workspace-location": "[first(map(filter(basics('getLAWorkspace').value, (filter) => and(contains(toLower(filter.id), toLower(resourceGroup().name)),equals(filter.name,basics('workspace')))), (item) => item.location))]",
      "location": "[location()]",
      "workspace": "[basics('workspace')]"
    }
  }
}
