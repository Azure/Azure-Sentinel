{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "Commvault Disable User Logic App Playbook",
        "description":  "This Logic App executes when called upon by an Automation Rule. Accessing the KeyVault to retrieve various credentials, it executes a specific runbook depending on the use case.",
        "prerequisites":  ["1. Administrative access to your Commvault/Metallic environment.",
        "2. Administrative access to your Azure Resource Group and Subscription.",
        "3. A Microsoft Sentinel instance in the aforementioned Azure Resource Group.",
        "4. A Keyvault and an Automation Account configured as mentioned in the documentation here :- (https://github.com/Cv-securityIQ/Azure-Integration/blob/master/Solutions/Commvault%20Security%20IQ/README.md)"],
        "postDeployment":  ["1. Steps to follow the instructions are mentioned here :- (https://github.com/Cv-securityIQ/Azure-Integration/blob/master/Solutions/Commvault%20Security%20IQ/README.md)",
        "2. Give the required permissions to the logic app to get the secrets from the keyvault.",
        "3. Setup the Managed Identity"        
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "2023-08-24T00:00:00.000Z",
        "entities":  [],
        "tags":  [ "Commvault", "Metallic", "Threat Intelligence", "Ransomware", "Security - Automation (SOAR)"
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  "microsoft"
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "logic-app-disable-user",
            "type":  "string"
        },
		"Automation-Account": {
			"defaultValue": "Commvault-Automation-Account",
			"type": "string"
		},
        "keyvaultName": {
            "type": "string"
        }
    },
    "variables":  {
        "subscriptionId": "[subscription().subscriptionId]",
        "tenantId": "[subscription().tenantId]",
        "AzureautomationConnectionName":  "[concat('Azureautomation-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName":  "[concat('Keyvault-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Access_Token": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('access-token')}/value"
                            }
                        },
                        "Disable_User": {
                            "actions": {
                                "For_each": {
                                    "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                                    "actions": {
                                        "Parse_JSON": {
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@items('For_each')?['properties']?['additionalData']?['Custom Details']",
                                                "schema": {
                                                    "type": "object",
                                                    "properties": {
                                                        "User": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "For_each_user": {
                                            "foreach": "@body('Parse_JSON')?['User']",
                                            "actions": {
                                                "Disable_User_Job": {
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                                            }
                                                        },
                                                        "method": "put",
                                                        "body": {
                                                            "properties": {
                                                                "parameters": {
                                                                    "EnvironmentEndpointURL": "@body('Environment_Endpoint_URL')?['value']",
                                                                    "UserIdentity": "@items('For_each_user')",
                                                                    "apiAccessToken": "@body('Access_Token')?['value']"
                                                                }
                                                            }
                                                        },
                                                        "path": "/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent('Commvault-Automation-Account')}/jobs",
                                                        "queries": {
                                                            "x-ms-api-version": "2015-10-31",
                                                            "runbookName": "Commvault_Disable_User",
                                                            "wait": true
                                                        }
                                                    }
                                                },
                                                "Disable_User_Job_Output": {
                                                    "runAfter": {
                                                        "Disable_User_Job": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/subscriptions/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['SubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['workspaceInfo']?['ResourceGroupName'])}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent('Commvault-Automation-Account')}/jobs/@{encodeURIComponent(body('Disable_User_Job')?['properties']?['jobId'])}/output",
                                                        "queries": {
                                                            "x-ms-api-version": "2015-10-31"
                                                        }
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "Environment_Endpoint_URL": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {}
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "startsWith": [
                                                "@triggerBody()?['object']?['properties']?['description']",
                                                "User"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Environment_Endpoint_URL": {
                            "runAfter": {
                                "Access_Token": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('environment-endpoint-url')}/value"
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azureautomation":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzureautomationConnectionName'))]",
                                "connectionName":  "[variables('AzureautomationConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureautomation')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName":  "[variables('KeyvaultConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "logic-app-disable-user",
                "hidden-SentinelTemplateVersion":  "1.1"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzureautomationConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzureautomationConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzureautomationConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureautomation')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('KeyvaultConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('KeyvaultConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "alternativeParameterValues": {
                    "token:TenantId": "[variables('tenantId')]",
                    "token:grantType": "code",
                    "vaultName": "[parameters('keyvaultName')]"
            },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
                }
            }
        }
    ]
}
