{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Dataminr - info@dataminr.com",
    "comments": "Solution template for Dataminr Pulse"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Dataminr Pulse Alerts",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "watchlist1-id": {
      "type": "string",
      "defaultValue": "DataminrPulseAsset",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist2-id": {
      "type": "string",
      "defaultValue": "DataminrPulseVulnerableDomain",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist3-id": {
      "type": "string",
      "defaultValue": "DataminrPulseVulnerableHash",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist4-id": {
      "type": "string",
      "defaultValue": "DataminrPulseVulnerableIp",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist5-id": {
      "type": "string",
      "defaultValue": "DataminrPulseVulnerableMalware",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    }
  },
  "variables": {
    "email": "info@dataminr.com",
    "_email": "[variables('email')]",
    "_solutionName": "Dataminr Pulse",
    "_solutionVersion": "3.0.3",
    "solutionId": "dataminrinc1648845584891.dataminr_sentinel",
    "_solutionId": "[variables('solutionId')]",
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.0.0",
      "_analyticRulecontentId1": "64a46029-3236-4d03-b5df-207366a623f1",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '64a46029-3236-4d03-b5df-207366a623f1')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('64a46029-3236-4d03-b5df-207366a623f1')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','64a46029-3236-4d03-b5df-207366a623f1','-', '1.0.0')))]"
    },
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "DataminrPulseAlerts",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "DataminrPulseAsset": "DataminrPulseAsset",
    "_DataminrPulseAsset": "[variables('DataminrPulseAsset')]",
    "DataminrPulseVulnerableDomain": "DataminrPulseVulnerableDomain",
    "_DataminrPulseVulnerableDomain": "[variables('DataminrPulseVulnerableDomain')]",
    "DataminrPulseVulnerableHash": "DataminrPulseVulnerableHash",
    "_DataminrPulseVulnerableHash": "[variables('DataminrPulseVulnerableHash')]",
    "DataminrPulseVulnerableIp": "DataminrPulseVulnerableIp",
    "_DataminrPulseVulnerableIp": "[variables('DataminrPulseVulnerableIp')]",
    "DataminrPulseVulnerableMalware": "DataminrPulseVulnerableMalware",
    "_DataminrPulseVulnerableMalware": "[variables('DataminrPulseVulnerableMalware')]",
    "DataminrPulseAlertEnrichment": "DataminrPulseAlertEnrichment",
    "_DataminrPulseAlertEnrichment": "[variables('DataminrPulseAlertEnrichment')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "DataminrPulseAlertEnrichment",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "blanks": "[replace('b', 'b', '')]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','DataminrPulseAlerts')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DataminrPulseAlerts')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('DataminrPulseAlerts-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "DataminrPulseAlerts-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','DataminrPulseCyberAlerts')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DataminrPulseCyberAlerts')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('DataminrPulseCyberAlerts-Parser')))]",
      "parserVersion2": "1.0.0",
      "parserContentId2": "DataminrPulseCyberAlerts-Parser"
    },
    "uiConfigId1": "DataminrPulseAlerts",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "DataminrPulseAlerts",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DataminrSentinelAlerts_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Rule helps to detect whenever there is an alert found which has urgent alert-type in Dataminr.",
                "displayName": "Dataminr - urgent alerts detected",
                "enabled": false,
                "query": "DataminrPulseAlerts\n| where EventSource in~ ('Greynoise', 'Shodan', 'VirusTotal', 'alienvault open threat exchange', 'urlscan')\n  and AlertType == \"Urgent\"\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DataminrPulseAlerts",
                    "dataTypes": [
                      "DataminrPulseAlerts"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "techniques": [
                  "T1546"
                ],
                "entityMappings": [
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "columnName": "PostLink",
                        "identifier": "Url"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dataminr Alert: {{AlertId}}",
                  "alertDescriptionFormat": "{{Caption}}"
                },
                "incidentConfiguration": {
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Dataminr Pulse Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Dataminr Pulse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dataminr",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dataminr Support",
                  "email": "support@dataminr.com",
                  "tier": "Partner",
                  "link": "https://www.dataminr.com/dataminr-support#support"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Dataminr - urgent alerts detected",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DataminrPulseAlerts Workbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "This Workbook provides insight into the data coming from DataminrPulse."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"da8b6813-e862-406d-be73-aed634a083a2\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Alert Overview\",\"subTarget\":\"Alert Overview\",\"style\":\"link\",\"linkIsContextBlade\":true},{\"id\":\"75b5e827-ff38-4252-bbd1-6beedbfe4534\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Cyber Threat Overview\",\"subTarget\":\"Cyber Threat Overview\",\"style\":\"link\"},{\"id\":\"e4bdb76d-c81a-498f-b0ba-5130dba5d9ab\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"IOC Overview\",\"subTarget\":\"IOC Overview\",\"style\":\"link\"},{\"id\":\"d76fe7f8-78c7-4537-8de6-7d8a1d050478\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Close Proximity Overview\",\"subTarget\":\"Close Proximity Overview\",\"style\":\"link\"},{\"id\":\"6de2158e-490d-4bed-85c4-f6e87706afc5\",\"cellValue\":\"setTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Alerts Drilldown\",\"subTarget\":\"Alerts Drilldown\",\"style\":\"link\"}]},\"name\":\"links - 13\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Dataminr Alert Overview\\r\\n### Watchlists created in Dataminr\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9c52736d-df9f-4db2-a196-6395ba392fe2\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"select_time_range\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":86400000}},{\"id\":\"21aeafb7-3429-4c8c-b74b-d296f0ce22b2\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"watchlist\",\"label\":\"Watchlist\",\"type\":2,\"isRequired\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(WatchlistsMatchedByType)\\r\\n| where isnotempty(WatchlistsMatchedByType[\\\"name\\\"])\\r\\n| distinct tostring(WatchlistsMatchedByType[\\\"name\\\"])\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"select_time_range\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":\"value::all\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Help\",\"expandable\":true,\"items\":[{\"type\":1,\"content\":{\"json\":\"This dashboards shows high level analytics about the Dataminr alerts from the selected Watchlist.\"},\"name\":\"text - 0\"}]},\"name\":\"Help\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| where ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}')) and isnotempty(AlertType)\\r\\n| summarize distinct_count=dcount(AlertId) by AlertType\\r\\n| sort by distinct_count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Alerts by Type\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"select_time_range\",\"showRefreshButton\":true,\"exportFieldName\":\"x\",\"exportParameterName\":\"alert_type\",\"exportDefaultValue\":\"None\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\",\"chartSettings\":{\"xAxis\":\"AlertType\",\"seriesLabelSettings\":[{\"seriesName\":\"Urgent\",\"color\":\"orange\"},{\"seriesName\":\"Alert\",\"color\":\"yellow\"},{\"seriesName\":\"Flash\",\"color\":\"redBright\"}],\"ySettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"customWidth\":\"50\",\"name\":\"Alerts by Type\",\"styleSettings\":{\"padding\":\"24px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| where ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n| mv-expand todynamic(Company)\\r\\n| extend companyName =  tostring(Company[\\\"name\\\"])\\r\\n| where isnotempty(Company)\\r\\n| summarize Count=dcount(AlertId) by companyName\\r\\n| sort by Count desc\",\"size\":3,\"showAnalytics\":true,\"title\":\"Alerts by Company\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"select_time_range\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"yAxis\":[\"Count\"],\"group\":\"companyName\",\"createOtherGroup\":10,\"ySettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"customWidth\":\"50\",\"name\":\"Alerts by Company\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a bars in the above 'Alert by Type' chart to view more details_\"},\"name\":\"text - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| where ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and isnotempty(AlertType) and AlertType == '{alert_type}'\\r\\n| summarize count=dcount(AlertId) by AlertType\",\"size\":4,\"showAnalytics\":true,\"title\":\"Selected Alerts Type Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"select_time_range\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000}},\"conditionalVisibility\":{\"parameterName\":\"alert_type\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"},\"name\":\"query - 8\",\"styleSettings\":{\"showBorder\":true}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"89d85ee2-81ec-42ed-bd7e-d8e7bcee1ab1\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Category_name\",\"label\":\"Category Name\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"DataminrPulseCyberAlerts \\r\\n| mv-expand todynamic(Category)\\r\\n| extend categories = tostring(Category[\\\"name\\\"])\\r\\n| where ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}')) and isnotempty(categories)\\r\\n| distinct categories\\r\\n\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"select_time_range\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts \\r\\n| mv-expand todynamic(Category)\\r\\n| extend Date = format_datetime(todatetime(TimeGenerated), 'yyyy-MM-dd'), CategoryName = tostring(Category[\\\"name\\\"])\\r\\n| where ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}')) and ('*' in ({Category_name}) or CategoryName in ({Category_name})) and isnotempty(CategoryName)\\r\\n| summarize Dcount=dcount(AlertId) by Date, CategoryName\\r\\n| project Date, Dcount, CategoryName\\r\\n| order by Date asc\",\"size\":0,\"aggregation\":5,\"showAnalytics\":true,\"title\":\"Alerts Trend\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"select_time_range\",\"showRefreshButton\":true,\"exportedParameters\":[{\"fieldName\":\"x\",\"parameterName\":\"date_Occurrence_Trend\",\"parameterType\":1,\"defaultValue\":\"None\"},{\"fieldName\":\"series\",\"parameterName\":\"CategoryName_Occurrence_Trend\",\"parameterType\":1,\"defaultValue\":\"None\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"xAxis\":\"Date\",\"group\":\"CategoryName\",\"createOtherGroup\":99,\"showDataPoints\":true}},\"customWidth\":\"50\",\"name\":\"Alerts Trend\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| where ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}')) and isnotempty(EventLocationName) and isnotempty(WatchlistsMatchedByType)\\r\\n| summarize dcount=dcount(AlertId) by Latitude, Longitude, EventLocationName\\r\\n| extend latlng = strcat(\\\"Latitude : \\\",Latitude,\\\"\\\\nLongitude : \\\",Longitude,\\\"\\\\nName : \\\",EventLocationName,\\\"\\\\nCount : \\\",dcount)\\r\\n| order by dcount desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Alerts by Location\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"select_time_range\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"map\",\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"lat\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"countID\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"mapSettings\":{\"locInfo\":\"LatLong\",\"latitude\":\"Latitude\",\"longitude\":\"Longitude\",\"sizeSettings\":\"dcount\",\"sizeAggregation\":\"Sum\",\"labelSettings\":\"latlng\",\"legendMetric\":\"dcount\",\"numberOfMetrics\":99,\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"nodeColorField\":\"dcount\",\"colorAggregation\":\"Sum\",\"type\":\"heatmap\",\"heatmapPalette\":\"greenRed\"}}},\"customWidth\":\"50\",\"name\":\"Alerts by Location\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a data points in the above 'Alerts Trend' chart to view more details_\"},\"customWidth\":\"45\",\"name\":\"text - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts \\r\\n| extend TimeGenerated = tostring(TimeGenerated), Channel = substring(SourceChannels,1,strlen(SourceChannels)-2), category = parse_json(Category), embededLabels = parse_json(EmbeddedLabels)\\r\\n| mv-apply category on (summarize Topics = make_list(category.name))\\r\\n| mv-apply embededLabels on (summarize addresses = make_list(embededLabels.addresses))\\r\\n| extend CategoryName = array_index_of(Topics,'{CategoryName_Occurrence_Trend}'), Date = format_datetime(todatetime(TimeGenerated), 'yyyy-MM-dd')\\r\\n| where TimeGenerated contains '{date_Occurrence_Trend}' and CategoryName >= 0 and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n| summarize any(*) by AlertId, Date\\r\\n| project-rename [\\\"Alert ID\\\"] = AlertId, [\\\"Alert Type\\\"] = any_AlertType, [\\\"Category Names\\\"] = any_Topics, Companies = any_Company, [\\\"Cyber Addresses\\\"] = any_addresses, [\\\"Location Name\\\"] = any_EventLocationName, [\\\"Matched Watchlist\\\"] = any_WatchlistNames, Source = any_EventSource, [\\\"Source Channels\\\"]= any_Channel, [\\\"Publisher Name\\\"] = any_PublisherCategoryName, [\\\"Time Generated\\\"] = any_TimeGenerated, Caption = any_Caption\\r\\n| project [\\\"Alert ID\\\"], [\\\"Alert Type\\\"], Caption, [\\\"Category Names\\\"], Companies, [\\\"Cyber Addresses\\\"], [\\\"Location Name\\\"], format_datetime(todatetime([\\\"Time Generated\\\"]), 'yy-MM-dd HH:mm:ss'), [\\\"Matched Watchlist\\\"], Source, parse_json([\\\"Source Channels\\\"]), [\\\"Publisher Name\\\"]\\r\\n| sort by [\\\"Time Generated\\\"] asc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Alerts Trend Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"select_time_range\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibilities\":[{\"parameterName\":\"date_Occurrence_Trend\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"},{\"parameterName\":\"CategoryName_Occurrence_Trend\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"},{\"parameterName\":\"CategoryName_Occurrence_Trend\",\"comparison\":\"isNotEqualTo\",\"value\":\"Other\"}],\"name\":\"query - 7\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| where ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n| extend EventTime = unixtime_milliseconds_todatetime(toint(EventTime)), Channel = substring(SourceChannels,1,strlen(SourceChannels)-2)\\r\\n| summarize any(*) by AlertId\\r\\n| project-rename ['Alert ID'] = AlertId, Time = any_TimeGenerated, [\\\"Alert Type\\\"] = any_AlertType, Source = any_EventSource, [\\\"Source Channels\\\"]= any_Channel, Publisher = any_PublisherCategoryName, Caption = any_Caption, Company = any_CompanyNames, Topics = any_CategoryNames\\r\\n| project ['Alert ID'], format_datetime(todatetime(Time), 'yy-MM-dd HH:mm:ss'), [\\\"Alert Type\\\"], Caption, Company, Source, parse_json([\\\"Source Channels\\\"]), Publisher, Topics\\r\\n| order by Time desc\\r\\n| limit 10\",\"size\":3,\"showAnalytics\":true,\"title\":\"Recent 10 Alerts\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"select_time_range\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Alert ID\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true}}],\"filter\":true}},\"name\":\"Recent 10 Alerts\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝 ***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 13\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Alert Overview\"},\"name\":\"group - 2\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Dataminr Close Proximity Overview\\r\\n### Show Dataminr alerts in close proximity of important Customer locations\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"7b8368ba-ff5f-4cc6-a7b3-4bc4a7c00789\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Select_Time_Range\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Help\",\"expandable\":true,\"items\":[{\"type\":1,\"content\":{\"json\":\"This dashboards shows Dataminr alerts within threshold miles from important customer locations.\\r\\n\\r\\nThe important customer locations are configured as part of Sentinel Watchlist. The Watchlist file is included as part of this app.\\r\\n\\r\\nPlease update the Watchlist file manually.\"},\"name\":\"text - 0\"}]},\"name\":\"group - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"_GetWatchlist('DataminrPulseAsset')\\r\\n| extend crossjoin = 1\\r\\n| join kind=inner (DataminrPulseAlerts | extend crossjoin = 1) on crossjoin\\r\\n| extend asset_distance_miles = abs(3956 * (2 * asin(sqrt(pow(sin(((Latitude*pi()/180)-(todouble(asset_lat)*pi()/180)) / 2),2) + cos((Latitude*pi()/180)) * cos((todouble(asset_lat)*pi()/180)) * pow(sin(((Longitude*pi()/180)-(todouble(asset_long)*pi()/180)) / 2),2)))))\\r\\n| where asset_distance_miles <= toreal(alerting_distance_miles)\\r\\n| summarize any(asset_name), dcount=dcount(AlertId) by AlertId, tostring(asset_lat), tostring(asset_long)\\r\\n| extend latlng = strcat(\\\"Name : \\\",any_asset_name,\\\"\\\\nLatitude : \\\",asset_lat,\\\"\\\\nLongitude:   \\\",asset_long)\\r\\n| order by asset_lat desc\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Alerts in Close Proximity Map\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"Select_Time_Range\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"map\",\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"AlertId\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"dcount\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"mapSettings\":{\"locInfo\":\"LatLong\",\"latitude\":\"asset_lat\",\"longitude\":\"asset_long\",\"sizeSettings\":\"dcount\",\"sizeAggregation\":\"Sum\",\"labelSettings\":\"latlng\",\"legendMetric\":\"dcount\",\"numberOfMetrics\":0,\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"nodeColorField\":\"dcount\",\"colorAggregation\":\"Sum\",\"type\":\"heatmap\",\"heatmapPalette\":\"greenRed\"}}},\"customWidth\":\"50\",\"showPin\":false,\"name\":\"Alerts in Close Proximity Map\",\"styleSettings\":{\"padding\":\"20px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"_GetWatchlist('DataminrPulseAsset')\\r\\n| extend crossjoin = 1\\r\\n| join kind=inner (DataminrPulseAlerts | extend crossjoin = 1) on crossjoin\\r\\n| extend asset_distance_miles = abs(3956 * (2 * asin(sqrt(pow(sin(((Latitude*pi()/180)-(todouble(asset_lat)*pi()/180)) / 2),2) + cos((Latitude*pi()/180)) * cos((todouble(asset_lat)*pi()/180)) * pow(sin(((Longitude*pi()/180)-(todouble(asset_long)*pi()/180)) / 2),2)))))\\r\\n| where asset_distance_miles <= toreal(alerting_distance_miles)\\r\\n| project-rename [\\\"Asset Name\\\"] = asset_name, [\\\"Asset Type\\\"] = asset_type, [\\\"Alert ID\\\"] = AlertId, [\\\"Asset Distance Miles\\\"] = asset_distance_miles\\r\\n| project [\\\"Asset Name\\\"], [\\\"Asset Type\\\"], Caption, [\\\"Alert ID\\\"], [\\\"Asset Distance Miles\\\"]\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"  Alerts in Close Proximity\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"Select_Time_Range\",\"showRefreshButton\":true,\"exportFieldName\":\"Alert ID\",\"exportParameterName\":\"alertid\",\"exportDefaultValue\":\"None\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"showExpandCollapseGrid\":true,\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"Alerts in Close Proximity\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"\"},\"customWidth\":\"50\",\"name\":\"text - 7\"},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above 'Alerts in Close Proximity' grid to view more details_\"},\"customWidth\":\"50\",\"name\":\"text - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseAlerts\\r\\n| where AlertId == '{alertid}'\",\"size\":4,\"showAnalytics\":true,\"title\":\"Selected Close Proximity Alert Data\",\"timeContextFromParameter\":\"Select_Time_Range\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\"},\"conditionalVisibility\":{\"parameterName\":\"alertid\",\"comparison\":\"isNotEqualTo\",\"value\":\"None\"},\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"_GetWatchlist('DataminrPulseAsset')\\r\\n| project-rename [\\\"Asset Name\\\"] = asset_name, [\\\"Asset Type\\\"] = asset_type, [\\\"Asset Description\\\"] = asset_description, [\\\"Alerting Distance Miles\\\"] = alerting_distance_miles, [\\\"Asset Latitude\\\"] =  asset_lat, [\\\"Asset Longitude\\\"] = asset_long\\r\\n| project [\\\"Asset Name\\\"], [\\\"Asset Type\\\"], [\\\"Asset Description\\\"], [\\\"Alerting Distance Miles\\\"], [\\\"Asset Latitude\\\"], [\\\"Asset Longitude\\\"]\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Configured Important Locations\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"Select_Time_Range\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Asset Latitude\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"Asset Latitude\",\"sortOrder\":1}]},\"name\":\"Configured Important Locations\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝 ***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 9\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Close Proximity Overview\"},\"name\":\"Close Proximity Overview\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Dataminr IOC Overview\\r\\n### IOCs (IP, URL, domain, hashes, filenames) extracted from alerts created by Dataminr\"},\"showPin\":false,\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"4889f111-32cd-4a9f-8ad3-3d5a1a43d812\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"time\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Help\",\"expandable\":true,\"items\":[{\"type\":1,\"content\":{\"json\":\"This dashboards shows Indicator of Compromise in the current Sentinel environment.\\r\\n\\r\\nEach row in the panels showing vulnerable IOCs are clickable. Click the row to view more details about the vulnerable IOC.\\r\\n\\r\\n\"},\"name\":\"text - 0\"}]},\"name\":\"group - 14\"},{\"type\":1,\"content\":{\"json\":\"#### 📝 Note: To view the Affected IOCs related panles in this dashboard, ASim parsers must be deployed in the workspace and lookup csv data must be available in watchlist. \"},\"name\":\"text - 21\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true\\r\\n(ASimNetworkSession\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | summarize  src_ip = make_set(SrcIpAddr), dst_ip = make_set(DstIpAddr)\\r\\n    | summarize ip = make_set(set_union(src_ip, dst_ip))),\\r\\n(ASimDns\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | summarize  src_ip = make_set(SrcIpAddr), dst_ip = make_set(DstIpAddr)\\r\\n    | summarize ip = make_set(set_union(src_ip, dst_ip))),\\r\\n(ASimWebSession\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | summarize  src_ip = make_set(SrcIpAddr), dst_ip = make_set(DstIpAddr)\\r\\n    | summarize ip = make_set(set_union(src_ip, dst_ip))),\\r\\n(ASimAuditEvent\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | summarize  src_ip = make_set(SrcIpAddr), dst_ip = make_set(TargetIpAddr)\\r\\n    | summarize ip = make_set(set_union(src_ip, dst_ip)))\\r\\n| mv-expand ip\\r\\n| where isnotempty(ip)\\r\\n| extend ip = tostring(ip)\\r\\n| join kind=inner (_GetWatchlist(\\\"DataminrPulseVulnerableIp\\\")\\r\\n                    | project ip, caption) on ip\\r\\n| project-rename [\\\"ASIM Ip\\\"] = ip, [\\\"Lookup Ip\\\"] = ip1\\r\\n| summarize ip_count=dcount([\\\"ASIM Ip\\\"])\\r\\n| project ip_count\",\"size\":4,\"showAnalytics\":true,\"title\":\"Affected IP Address\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"}},\"rightContent\":{\"columnMatch\":\"ip_count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"},\"emptyValCustomText\":\"0\"}},\"showBorder\":false,\"size\":\"auto\"},\"graphSettings\":{\"type\":0,\"centerContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"}},\"nodeIdField\":\"Count\",\"sourceIdField\":\"Count\",\"targetIdField\":\"Count\",\"graphOrientation\":3,\"showOrientationToggles\":false,\"staticNodeSize\":100,\"hivesMargin\":5},\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"25\",\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true\\r\\n(imFileEvent\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | summarize src_md5=make_set(SrcFileMD5), src_sha1=make_set(SrcFileSHA1), src_sha256=make_set(SrcFileSHA256), src_sha512=make_set(SrcFileSHA512), dst_md5=make_set(TargetFileMD5), dst_sha1=make_set(TargetFileSHA1), dst_sha256=make_set(TargetFileSHA256), dst_sha512=make_set(TargetFileSHA512)\\r\\n    | summarize  Hashes = make_set(set_union(src_md5, src_sha1, src_sha256, src_sha512, dst_md5, dst_sha1, dst_sha256, dst_sha512))\\r\\n    | project Hashes),\\r\\n(ASimProcessEvent\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | summarize src_md5=make_set(ParentProcessMD5), src_sha1=make_set(ParentProcessSHA1), src_sha256=make_set(ParentProcessSHA256), src_sha512=make_set(ParentProcessSHA512), dst_md5=make_set(TargetProcessMD5), dst_sha1=make_set(TargetProcessSHA1), dst_sha256=make_set(TargetProcessSHA256), dst_sha512=make_set(TargetProcessSHA512), act_md5 = make_set(ActingProcessMD5), act_sha1=make_set(ActingProcessSHA1), act_sha256=make_set(ActingProcessSHA256), act_sha512=make_set(ActingProcessSHA512)\\r\\n    | summarize  Hashes = make_set(set_union(src_md5, src_sha1, src_sha256, src_sha512, dst_md5, dst_sha1, dst_sha256, dst_sha512, act_md5, act_sha1, act_sha256, act_sha512))\\r\\n    | project Hashes),\\r\\n(ASimWebSession\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | summarize file_md5=make_set(FileMD5), file_sha1=make_set(FileSHA1), file_sha256=make_set(FileSHA256), file_sha512=make_set(FileSHA512)\\r\\n    | summarize Hashes = make_set(set_union(file_md5, file_sha1, file_sha256, file_sha512))\\r\\n    | project Hashes)\\r\\n| mv-expand Hashes\\r\\n| where isnotempty(Hashes)\\r\\n| extend Hashes = tostring(Hashes)\\r\\n| join kind=inner (_GetWatchlist('DataminrPulseVulnerableHash')\\r\\n                    | project Hashes=SearchKey, caption) on Hashes\\r\\n| project-rename [\\\"ASIM Hashes\\\"] = Hashes, [\\\"Lookup Hashes\\\"] = Hashes1\\r\\n| summarize hash_count = dcount([\\\"ASIM Hashes\\\"])\\r\\n| project hash_count\",\"size\":4,\"showAnalytics\":true,\"title\":\"Affected Hashes\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"}},\"rightContent\":{\"columnMatch\":\"hash_count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"},\"emptyValCustomText\":\"0\"}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"25\",\"name\":\"query - 2 - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true\\r\\n(ASimWebSession\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | project url=Url),\\r\\n(imFileEvent\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | project url = TargetUrl),\\r\\n(ASimAuditEvent\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | project url = TargetUrl)\\r\\n| join kind=inner (_GetWatchlist('DataminrPulseVulnerableDomain')\\r\\n                    | project url, caption) on url\\r\\n| project-rename [\\\"ASIM URLs\\\"] = url, [\\\"Lookup URLs\\\"] = url1\\r\\n| summarize domain_count=dcount([\\\"ASIM URLs\\\"])\\r\\n| project domain_count\",\"size\":4,\"showAnalytics\":true,\"title\":\"Affected Domains\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"}},\"rightContent\":{\"columnMatch\":\"domain_count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"},\"emptyValCustomText\":\"0\"}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"25\",\"name\":\"query - 2 - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true\\r\\n(ASimAuditEvent\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | extend malware = ThreatName\\r\\n    | project malware),\\r\\n(ASimNetworkSession\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | extend malware = ThreatName\\r\\n    | project malware),\\r\\n(ASimDns\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | extend malware = ThreatName\\r\\n    | project malware),\\r\\n(ASimWebSession\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | extend malware = ThreatName\\r\\n    | project malware)\\r\\n| join kind=inner (_GetWatchlist('DataminrPulseVulnerableMalware')\\r\\n                    | project malware, caption) on malware\\r\\n| project-rename [\\\"ASIM Malwares\\\"] = malware, [\\\"Lookup Hashes\\\"] = malware1\\r\\n| summarize malware_count= dcount([\\\"ASIM Malwares\\\"])\\r\\n| project malware_count\",\"size\":4,\"showAnalytics\":true,\"title\":\"Affected Malwares\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"}},\"rightContent\":{\"columnMatch\":\"malware_count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"},\"emptyValCustomText\":\"0\"}},\"showBorder\":false,\"size\":\"auto\"}},\"customWidth\":\"25\",\"name\":\"query - 2 - Copy - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true\\r\\n(ASimNetworkSession\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | extend ip = pack_array(SrcIpAddr, DstIpAddr)\\r\\n    | project ip, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType),\\r\\n(ASimDns\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | extend ip = pack_array(SrcIpAddr, DstIpAddr)\\r\\n    | project ip, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType),\\r\\n(ASimWebSession\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | extend ip = pack_array(SrcIpAddr, DstIpAddr)\\r\\n    | project ip, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType),\\r\\n(ASimAuditEvent\\r\\n    | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n    | extend ip = pack_array(SrcIpAddr, TargetIpAddr)\\r\\n    | project ip, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType)\\r\\n| mv-expand ip\\r\\n| where isnotempty(ip)\\r\\n| extend ip = tostring(ip)\\r\\n| join kind=inner (_GetWatchlist(\\\"DataminrPulseVulnerableIp\\\")\\r\\n                    | project ip, caption) on ip\\r\\n| project [\\\"Ip Addresses\\\"]=ip, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType, caption\",\"size\":0,\"showAnalytics\":true,\"title\":\"Affected IP Address Details\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 17\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true\\r\\n    (imFileEvent\\r\\n        | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n        | extend Hashes = pack_array(SrcFileMD5, SrcFileSHA1, SrcFileSHA256, SrcFileSHA512, TargetFileMD5, TargetFileSHA1, TargetFileSHA256, TargetFileSHA512)\\r\\n        | project Hashes, EventSchema, EventVendor, EventProduct, EventSeverity, EventType),\\r\\n    (ASimProcessEvent\\r\\n        | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n        | extend Hashes= pack_array(ParentProcessMD5, ParentProcessSHA1, ParentProcessSHA256, ParentProcessSHA512, ActingProcessMD5, ActingProcessSHA1, ActingProcessSHA256, ActingProcessSHA512, TargetProcessMD5, TargetProcessSHA1, TargetProcessSHA256, TargetProcessSHA512)\\r\\n        | project Hashes, EventSchema, EventVendor, EventProduct, EventSeverity, EventType ),\\r\\n    (ASimWebSession\\r\\n        | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n        | extend Hashes = pack_array(FileMD5, FileSHA1, FileSHA256, FileSHA512)\\r\\n        | project Hashes, EventSchema, EventVendor, EventProduct, EventSeverity, EventType)\\r\\n| mv-expand todynamic(Hashes)\\r\\n| where isnotempty(Hashes)\\r\\n| extend Hashes = tostring(Hashes)\\r\\n| join kind=inner (_GetWatchlist('DataminrPulseVulnerableHash')\\r\\n                    | project Hashes=SearchKey, caption) on Hashes\\r\\n| project Hashes, EventSchema, EventVendor, EventProduct, EventSeverity, EventType, caption\",\"size\":0,\"showAnalytics\":true,\"title\":\"Affected Hashes Details\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 17 - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true\\r\\n    (ASimWebSession\\r\\n        | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n        | extend url=Url\\r\\n        | project url, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType),\\r\\n    (imFileEvent\\r\\n        | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n        | extend url = TargetUrl\\r\\n        | project url, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType),\\r\\n    (ASimAuditEvent\\r\\n        | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n        | extend url = TargetUrl\\r\\n        | project url, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType)\\r\\n| where isnotempty(url)\\r\\n| join kind=inner (_GetWatchlist('DataminrPulseVulnerableDomain')\\r\\n                    | project url, caption) on url\\r\\n| project URL=url, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType\",\"size\":0,\"showAnalytics\":true,\"title\":\"Affected Domains Details\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 17 - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union isfuzzy=true\\r\\n    (ASimAuditEvent\\r\\n        | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n        | extend malware = ThreatName\\r\\n        | project malware, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType),\\r\\n    (ASimNetworkSession\\r\\n        | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n        | extend malware = ThreatName\\r\\n        | project malware, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType),\\r\\n    (ASimDns\\r\\n        | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n        | extend malware = ThreatName\\r\\n        | project malware, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType),\\r\\n    (ASimWebSession\\r\\n        | where EventVendor !contains_cs(\\\"Dataminr\\\")\\r\\n        | extend malware = ThreatName\\r\\n        | project malware, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType)\\r\\n| where isnotempty(malware) \\r\\n| join kind=inner (_GetWatchlist('DataminrPulseVulnerableMalware')\\r\\n                    | project malware, caption) on malware\\r\\n| project malware, EventSchema, EventVendor, EventProduct, TimeGenerated, EventSeverity, EventType\",\"size\":0,\"showAnalytics\":true,\"title\":\"Affected Malwares Details\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 17 - Copy - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| extend embededLabels = parse_json(EmbeddedLabels)\\r\\n| mv-apply embededLabels on (summarize addresses = make_list(embededLabels.data.addresses))\\r\\n| mv-apply addresses on (summarize ip = make_list(addresses.ip))\\r\\n| where isnotempty(ip)\\r\\n| mv-expand ip\\r\\n| summarize Count=count_distinct(AlertId) by tostring(ip)\\r\\n| project-rename [\\\"IP Addresses\\\"] = ip\\r\\n| order by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Dataminr: Vulnerable IP Addresses\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"IP Addresses\",\"exportParameterName\":\"SelectedIP\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"IP Addresses\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"85%\"}},{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\",\"customColumnWidthSetting\":\"15%\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| extend embededLabels = parse_json(EmbeddedLabels)\\r\\n| mv-apply embededLabels on (summarize hashValues = make_list(embededLabels.data.hashValues))\\r\\n| mv-apply hashValues on (summarize Hash=make_list(hashValues.value))\\r\\n| where isnotempty(Hash)\\r\\n| mv-expand Hash\\r\\n| summarize Count=count_distinct(AlertId) by tostring(Hash)\\r\\n| order by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Dataminr: Vulnerable Hashes\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"Hash\",\"exportParameterName\":\"SelectedHash\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Hash\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"85%\"}},{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\",\"customColumnWidthSetting\":\"15%\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 6 - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| extend embededLabels = parse_json(EmbeddedLabels)\\r\\n| mv-apply embededLabels on (summarize urls = make_list(embededLabels.data.URLs))\\r\\n| where isnotempty(urls)\\r\\n| extend Domain = extract_all(@'\\\\\\\"?(?:[^\\\"]*https*:\\\\/\\\\/)*((w*\\\\.))*((?P<subdomain>[a-z-A-Z0-9-]+)\\\\.)*(?P<domain>(?:\\\\w+(?:\\\\.|\\\\[\\\\.\\\\])(?:com|co|org|gov|int|edu|mil|net)(?:(?:\\\\.|\\\\[\\\\.\\\\])\\\\w{1,3})*)|\\\\d+(?:(?:\\\\.|\\\\[\\\\.\\\\])\\\\d+){2}|[a-z-A-Z0-9-]+(?:\\\\.|\\\\[\\\\.\\\\])\\\\w+)(?:\\\\/[^\\\"]*)*\\\\\\\"?[,\\\\n\\\\]]',dynamic(['domain']),tostring(urls))\\r\\n| where isnotempty(Domain)\\r\\n| mv-expand Domain\\r\\n| summarize Count=count_distinct(AlertId) by tostring(Domain)\\r\\n| mv-expand todynamic(Domain)\\r\\n| order by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Dataminr: Vulnerable Domains\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"Domain\",\"exportParameterName\":\"SelectedDomain\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Domain\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"85%\"}},{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\",\"customColumnWidthSetting\":\"15%\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 6 - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| extend embededLabels = parse_json(EmbeddedLabels)\\r\\n| mv-apply embededLabels on (summarize Malware = make_list(embededLabels.data.malwares))\\r\\n| where isnotempty(Malware)\\r\\n| mv-expand Malware\\r\\n| summarize Count=count_distinct(AlertId) by tostring(Malware)\\r\\n| order by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Dataminr: Vulnerable Malwares\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"Malware\",\"exportParameterName\":\"SelectedMalware\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Malware\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"85%\"}},{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\",\"customColumnWidthSetting\":\"15%\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 6 - Copy - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above 'Dataminr: Vulnerable IP Addresses', 'Dataminr: Vulnerable Hashes', 'Dataminr: Vulnerable Domains' & 'Dataminr: Vulnerable Malwares' grid to view more details_\"},\"name\":\"text - 15\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| extend embededLabels = parse_json(EmbeddedLabels)\\r\\n| mv-apply embededLabels on (summarize addresses = make_list(embededLabels.data.addresses))\\r\\n| where addresses contains_cs '{SelectedIP}'\\r\\n| project [\\\"Alert ID\\\"]=AlertId, [\\\"Alert Type\\\"]=AlertType, Caption, [\\\"Category Names\\\"]=CategoryNames, Companies=Company, [\\\"Cyber Addresses\\\"]=addresses, [\\\"Location Name\\\"]=EventLocationName, TimeGenerated, [\\\"Matched Watchlist\\\"]=WatchlistNames, Source=EventSource\\r\\n| order by [\\\"Alert Type\\\"] asc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Dataminr: Vulnerable IP Details\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"SelectedIP\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 10\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| extend embededLabels = parse_json(EmbeddedLabels)\\r\\n| mv-apply embededLabels on (summarize hashValues = make_list(embededLabels.data.hashValues))\\r\\n| mv-apply hashValues on (summarize Hash=make_list(hashValues.value))\\r\\n| where set_has_element(Hash, '{SelectedHash}')\\r\\n| project [\\\"Alert ID\\\"]=AlertId, [\\\"Alert Type\\\"]=AlertType, Caption, [\\\"Category Names\\\"]=CategoryNames, Companies=Company, [\\\"Cyber Hashes\\\"]=Hash, [\\\"Location Name\\\"]=EventLocationName, TimeGenerated, [\\\"Matched Watchlist\\\"]=WatchlistNames, Source=EventSource\\r\\n| order by [\\\"Alert Type\\\"] asc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Dataminr: Vulnerable Hash Details\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"SelectedHash\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 10 - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| extend embededLabels = parse_json(EmbeddedLabels)\\r\\n| mv-apply embededLabels on (summarize urls = make_list(embededLabels.data.URLs))\\r\\n| where isnotempty(urls)\\r\\n| extend Domain = extract_all(@'\\\\\\\"?(?:[^\\\"]*https*:\\\\/\\\\/)*((w*\\\\.))*((?P<subdomain>[a-z-A-Z0-9-]+)\\\\.)*(?P<domain>(?:\\\\w+(?:\\\\.|\\\\[\\\\.\\\\])(?:com|co|org|gov|int|edu|mil|net)(?:(?:\\\\.|\\\\[\\\\.\\\\])\\\\w{1,3})*)|\\\\d+(?:(?:\\\\.|\\\\[\\\\.\\\\])\\\\d+){2}|[a-z-A-Z0-9-]+(?:\\\\.|\\\\[\\\\.\\\\])\\\\w+)(?:\\\\/[^\\\"]*)*\\\\\\\"?[,\\\\n\\\\]]',dynamic(['domain']),tostring(urls))\\r\\n| where Domain contains_cs '{SelectedDomain}'\\r\\n| project [\\\"Alert ID\\\"]=AlertId, [\\\"Alert Type\\\"]=AlertType, Caption, [\\\"Category Names\\\"]=CategoryNames, Companies=Company, URL=urls, [\\\"Location Name\\\"]=EventLocationName, TimeGenerated, [\\\"Matched Watchlist\\\"]=WatchlistNames, Source=EventSource\\r\\n| order by [\\\"Alert Type\\\"] asc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Dataminr: Vulnerable Domain Details\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"SelectedDomain\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 10 - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| extend embededLabels = parse_json(EmbeddedLabels)\\r\\n| mv-apply embededLabels on (summarize Malwares = make_list(embededLabels.data.malwares))\\r\\n| where set_has_element(Malwares, '{SelectedMalware}')\\r\\n| project [\\\"Alert ID\\\"]=AlertId, [\\\"Alert Type\\\"]=AlertType, Caption, [\\\"Category Names\\\"]=CategoryNames, Companies=Company, [\\\"Cyber Malwares\\\"]=Malwares, [\\\"Location Name\\\"]=EventLocationName, TimeGenerated, [\\\"Matched Watchlist\\\"]=WatchlistNames, Source=EventSource\\r\\n| order by [\\\"Alert Type\\\"] asc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Dataminr: Vulnerable Malware Details\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"SelectedMalware\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 10 - Copy - Copy - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝 ***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 9\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"IOC Overview\"},\"name\":\"group - 5\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Dataminr Cyber Threat Overview\\r\\n### Cyber alerts created by Dataminr\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"e6627420-466f-4e23-ae50-7d153fe50b0c\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"time\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let trendline=toscalar(DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Advanced Persistent Threats\\\",\\\"Ransomware\\\",\\\"Hacktivists\\\") \\r\\n| extend selectedAllTopics = parse_json('[\\\"Advanced Persistent Threats\\\",\\\"Ransomware\\\",\\\"Hacktivists\\\"]')\\r\\n| make-series Trend = dcount(AlertId) default = 0 on TimeGenerated from {time:start} to {time:end} step {time:grain} by tostring(selectedAllTopics)\\r\\n| project Trend);\\r\\nDataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Advanced Persistent Threats\\\",\\\"Ransomware\\\",\\\"Hacktivists\\\")\\r\\n| summarize  Count = dcount(AlertId) by tostring(selectedTopic), bin(TimeGenerated, 1d)\\r\\n| summarize total = sum(Count) by TimeGenerated\\r\\n| extend today = iff(TimeGenerated==(startofday(now())), total, 0)\\r\\n| extend yesterday = iff(TimeGenerated==(startofday(now())-1d), total, 0)\\r\\n| extend Trend = trendline\\r\\n| serialize\\r\\n| order by TimeGenerated desc\\r\\n| extend nextyesterday = iff((today == 0 and yesterday > 0), yesterday, iff(isempty(next(yesterday)), 0, next(yesterday)))\\r\\n| limit 1\\r\\n| extend percentage = (todouble(today-nextyesterday)/nextyesterday)*100\",\"size\":4,\"showAnalytics\":true,\"title\":\"Threat Actor Activities\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":5},\"leftContent\":{\"columnMatch\":\"today\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"},\"emptyValCustomText\":\"0\"}},\"rightContent\":{\"columnMatch\":\"percentage\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\">\",\"thresholdValue\":\"0\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"0\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"gray\",\"text\":\"0\"},{\"operator\":\"is Empty\",\"representation\":\"gray\",\"text\":\"N/A\"},{\"operator\":\"Default\",\"representation\":\"redBright\",\"text\":\"N/A\"}]},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"query - 2\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let trendline=toscalar(DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Malware\\\",\\\"Network Disruptions\\\",\\\"Phishing\\\",\\\"DDoS\\\",\\\"Defacement\\\",\\\"Domain Impersonation\\\",\\\"Network Scans\\\") \\r\\n| extend selectedAllTopics = parse_json('[\\\"Malware\\\",\\\"Network Disruptions\\\",\\\"Phishing\\\",\\\"DDoS\\\",\\\"Defacement\\\",\\\"Domain Impersonation\\\",\\\"Network Scans\\\"]')\\r\\n| make-series Trend = dcount(AlertId) default = 0 on TimeGenerated from {time:start} to {time:end} step {time:grain} by tostring(selectedAllTopics)\\r\\n| project Trend);\\r\\nDataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Malware\\\",\\\"Network Disruptions\\\",\\\"Phishing\\\",\\\"DDoS\\\",\\\"Defacement\\\",\\\"Domain Impersonation\\\",\\\"Network Scans\\\")\\r\\n| summarize  Count = dcount(AlertId) by tostring(selectedTopic), bin(TimeGenerated, 1d)\\r\\n| summarize total = sum(Count) by TimeGenerated\\r\\n| extend today = iff(TimeGenerated==(startofday(now())), total, 0)\\r\\n| extend yesterday = iff(TimeGenerated==(startofday(now())-1d), total, 0)\\r\\n| extend Trend = trendline\\r\\n| serialize\\r\\n| order by TimeGenerated desc\\r\\n| extend nextyesterday = iff((today == 0 and yesterday > 0), yesterday, iff(isempty(next(yesterday)), 0, next(yesterday)))\\r\\n| limit 1\\r\\n| extend percentage = (todouble(today-nextyesterday)/nextyesterday)*100\",\"size\":4,\"showAnalytics\":true,\"title\":\"Cyber Attacks\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":5},\"leftContent\":{\"columnMatch\":\"today\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"},\"emptyValCustomText\":\"0\"}},\"rightContent\":{\"columnMatch\":\"percentage\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\">\",\"thresholdValue\":\"0\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"0\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"gray\",\"text\":\"0\"},{\"operator\":\"is Empty\",\"representation\":\"gray\",\"text\":\"N/A\"},{\"operator\":\"Default\",\"representation\":\"redBright\",\"text\":\"N/A\"}]},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"query - 3\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let trendline=toscalar(DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Data Exposure and Breaches\\\",\\\"Doxxing and Leaked Credentials\\\") \\r\\n| extend selectedAllTopics = parse_json('[\\\"Data Exposure and Breaches\\\",\\\"Doxxing and Leaked Credentials\\\"]')\\r\\n| make-series Trend = dcount(AlertId) default = 0 on TimeGenerated from {time:start} to {time:end} step {time:grain} by tostring(selectedAllTopics)\\r\\n| project Trend);\\r\\nDataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Data Exposure and Breaches\\\",\\\"Doxxing and Leaked Credentials\\\")\\r\\n| summarize  Count = dcount(AlertId) by tostring(selectedTopic), bin(TimeGenerated, 1d)\\r\\n| summarize total = sum(Count) by TimeGenerated\\r\\n| extend today = iff(TimeGenerated==(startofday(now())), total, 0)\\r\\n| extend yesterday = iff(TimeGenerated==(startofday(now())-1d), total, 0)\\r\\n| extend Trend = trendline\\r\\n| serialize\\r\\n| order by TimeGenerated desc\\r\\n| extend nextyesterday = iff((today == 0 and yesterday > 0), yesterday, iff(isempty(next(yesterday)), 0, next(yesterday)))\\r\\n| limit 1\\r\\n| extend percentage = (todouble(today-nextyesterday)/nextyesterday)*100\\r\\n\",\"size\":4,\"showAnalytics\":true,\"title\":\"Data Breaches\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":5},\"leftContent\":{\"columnMatch\":\"today\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"},\"emptyValCustomText\":\"0\"}},\"rightContent\":{\"columnMatch\":\"percentage\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\">\",\"thresholdValue\":\"0\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"0\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"gray\",\"text\":\"0\"},{\"operator\":\"is Empty\",\"representation\":\"gray\",\"text\":\"N/A\"},{\"operator\":\"Default\",\"representation\":\"redBright\",\"text\":\"N/A\"}]},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"query - 4\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let trendline=toscalar(DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Email and Web Servers\\\",\\\"Encryption and Certificates\\\",\\\"Remote Access and Management Systems\\\",\\\"Vulnerability Disclosures\\\",\\\"Exploits\\\",\\\"Bug Bounties\\\") \\r\\n| extend selectedAllTopics = parse_json('[\\\"Email and Web Servers\\\",\\\"Encryption and Certificates\\\",\\\"Remote Access and Management Systems\\\",\\\"Vulnerability Disclosures\\\",\\\"Exploits\\\",\\\"Bug Bounties\\\"]')\\r\\n| make-series Trend = dcount(AlertId) default = 0 on TimeGenerated from {time:start} to {time:end} step {time:grain} by tostring(selectedAllTopics)\\r\\n| project Trend);\\r\\nDataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Email and Web Servers\\\",\\\"Encryption and Certificates\\\",\\\"Remote Access and Management Systems\\\",\\\"Vulnerability Disclosures\\\",\\\"Exploits\\\",\\\"Bug Bounties\\\")\\r\\n| summarize  Count = dcount(AlertId) by tostring(selectedTopic), bin(TimeGenerated, 1d)\\r\\n| summarize total = sum(Count) by TimeGenerated\\r\\n| extend today = iff(TimeGenerated==(startofday(now())), total, 0)\\r\\n| extend yesterday = iff(TimeGenerated==(startofday(now())-1d), total, 0)\\r\\n| extend Trend = trendline\\r\\n| serialize\\r\\n| order by TimeGenerated desc\\r\\n| extend nextyesterday = iff((today == 0 and yesterday > 0), yesterday, iff(isempty(next(yesterday)), 0, next(yesterday)))\\r\\n| limit 1\\r\\n| extend percentage = (todouble(today-nextyesterday)/nextyesterday)*100\",\"size\":4,\"showAnalytics\":true,\"title\":\"Vulnerabilities\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"formatter\":5},\"leftContent\":{\"columnMatch\":\"today\",\"formatter\":12,\"formatOptions\":{\"palette\":\"none\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"},\"emptyValCustomText\":\"0\"}},\"rightContent\":{\"columnMatch\":\"percentage\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\">\",\"thresholdValue\":\"0\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\"<\",\"thresholdValue\":\"0\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"gray\",\"text\":\"0\"},{\"operator\":\"is Empty\",\"representation\":\"gray\",\"text\":\"N/A\"},{\"operator\":\"Default\",\"representation\":\"redBright\",\"text\":\"N/A\"}]},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false,\"size\":\"full\"}},\"customWidth\":\"25\",\"name\":\"query - 5\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Advanced Persistent Threats\\\",\\\"Ransomware\\\",\\\"Hacktivists\\\") \\r\\n| make-series Trend = dcount(AlertId) default = 0 on TimeGenerated from {time:start} to {time:end} step {time:grain} by tostring(selectedTopic)\\r\\n| project-away TimeGenerated\\r\\n| extend Count=array_sum(Trend)\\r\\n| project Topics=selectedTopic, Count, Trend\\r\\n| order by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Trending Threat Actor Activities\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"Topics\",\"exportParameterName\":\"ThreatActorselectedTopic\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Topics\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"10%\"}},{\"columnMatch\":\"Count\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"5%\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"85%\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Malware\\\",\\\"Network Disruptions\\\",\\\"Phishing\\\",\\\"DDoS\\\",\\\"Defacement\\\",\\\"Domain Impersonation\\\",\\\"Network Scans\\\") \\r\\n| make-series Trend = dcount(AlertId) default = 0 on TimeGenerated from {time:start} to {time:end} step {time:grain} by tostring(selectedTopic)\\r\\n| project-away TimeGenerated\\r\\n| extend Count=array_sum(Trend)\\r\\n| project Topics=selectedTopic, Count, Trend\\r\\n| order by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Trending Cyber Attacks\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"Topics\",\"exportParameterName\":\"CyberAttackselectedTopic\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Topics\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"10%\"}},{\"columnMatch\":\"Count\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"5%\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"85%\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 7\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Data Exposure and Breaches\\\",\\\"Doxxing and Leaked Credentials\\\") \\r\\n| make-series Trend = dcount(AlertId) default = 0 on TimeGenerated from {time:start} to {time:end} step {time:grain} by tostring(selectedTopic)\\r\\n| project-away TimeGenerated\\r\\n| extend Count=array_sum(Trend)\\r\\n| project Topics=selectedTopic, Count, Trend\\r\\n| order by Count desc \",\"size\":0,\"showAnalytics\":true,\"title\":\"Trending Data Breaches\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"Topics\",\"exportParameterName\":\"DataBreachselectedTopic\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Topics\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"10%\"}},{\"columnMatch\":\"Count\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"5%\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"85%\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 8\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Email and Web Servers\\\",\\\"Encryption and Certificates\\\",\\\"Remote Access and Management Systems\\\",\\\"Vulnerability Disclosures\\\",\\\"Exploits\\\",\\\"Bug Bounties\\\")  \\r\\n| make-series Trend = count_distinct(AlertId) default = 0 on TimeGenerated from {time:start} to {time:end} step {time:grain} by tostring(selectedTopic)\\r\\n| project-away TimeGenerated\\r\\n| extend Count=array_sum(Trend)\\r\\n| project Topics=selectedTopic, Count, Trend\\r\\n| order by Count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Trending Vulnerabilities\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"Topics\",\"exportParameterName\":\"VulnerabilityselectedTopic\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Topics\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"10%\"}},{\"columnMatch\":\"Count\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"5%\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"85%\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"25\",\"name\":\"query - 9\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above 'Trending Threat Actor Activities', 'Trending Cyber Attacks', 'Trending Data Breaches' & 'Trending Vulnerabilities' grid to view more details_\"},\"name\":\"text - 26\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category), todynamic(EmbeddedLabels)\\r\\n| extend addresses = tostring(parse_json(EmbeddedLabels.data.addresses))\\r\\n| extend vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply vulnerabilities on (summarize vulnerabilitiesId = make_list(vulnerabilities.id))\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic == '{ThreatActorselectedTopic}'\\r\\n| summarize any(*) by AlertId\\r\\n| project [\\\"Alert ID\\\"]=AlertId, [\\\"Alert Post Link\\\"]=any_PostLink, [\\\"Alert Type\\\"]=any_AlertType, Caption=any_Caption, [\\\"Category Names\\\"]=any_CategoryNames, Companies=any_Company, [\\\"Cyber Addresses\\\"]=any_addresses, [\\\"Location Name\\\"]=any_EventLocationName, TimeGenerated=any_TimeGenerated, Source=any_EventSource, [\\\"Source Channels\\\"]=any_SourceChannels, [\\\"Vulnerability IDs\\\"]=any_vulnerabilitiesId\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Trending Threat Actor Activity Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"ThreatActorselectedTopic\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 18\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category), todynamic(EmbeddedLabels)\\r\\n| extend addresses = tostring(parse_json(EmbeddedLabels.data.addresses))\\r\\n| extend vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply vulnerabilities on (summarize vulnerabilitiesId = make_list(vulnerabilities.id))\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic == '{CyberAttackselectedTopic}'\\r\\n| summarize any(*)by AlertId\\r\\n| project [\\\"Alert ID\\\"]=AlertId, [\\\"Alert Post Link\\\"]=any_PostLink, [\\\"Alert Type\\\"]=any_AlertType, Caption=any_Caption, [\\\"Category Names\\\"]=any_CategoryNames, Companies=any_Company, [\\\"Cyber Addresses\\\"]=any_addresses, [\\\"Location Name\\\"]=any_EventLocationName, TimeGenerated=any_TimeGenerated, Source=any_EventSource, [\\\"Source Channels\\\"]=any_SourceChannels, [\\\"Vulnerability IDs\\\"]=any_vulnerabilitiesId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Trending Cyber Attack Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"CyberAttackselectedTopic\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 19\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category), todynamic(EmbeddedLabels)\\r\\n| extend addresses = tostring(parse_json(EmbeddedLabels.data.addresses))\\r\\n| extend vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply vulnerabilities on (summarize vulnerabilitiesId = make_list(vulnerabilities.id))\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic == '{DataBreachselectedTopic}'\\r\\n| summarize any(*)by AlertId\\r\\n| project [\\\"Alert ID\\\"]=AlertId, [\\\"Alert Post Link\\\"]=any_PostLink, [\\\"Alert Type\\\"]=any_AlertType, Caption=any_Caption, [\\\"Category Names\\\"]=any_CategoryNames, Companies=any_Company, [\\\"Cyber Addresses\\\"]=any_addresses, [\\\"Location Name\\\"]=any_EventLocationName, TimeGenerated=any_TimeGenerated, Source=any_EventSource, [\\\"Source Channels\\\"]=any_SourceChannels, [\\\"Vulnerability IDs\\\"]=any_vulnerabilitiesId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Trending Data Breach Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"DataBreachselectedTopic\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 20\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category), todynamic(EmbeddedLabels)\\r\\n| extend addresses = tostring(parse_json(EmbeddedLabels.data.addresses))\\r\\n| extend vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply vulnerabilities on (summarize vulnerabilitiesId = make_list(vulnerabilities.id))\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic == '{VulnerabilityselectedTopic}'\\r\\n| summarize any(*)by AlertId\\r\\n| project [\\\"Alert ID\\\"]=AlertId, [\\\"Alert Post Link\\\"]=any_PostLink, [\\\"Alert Type\\\"]=any_AlertType, Caption=any_Caption, [\\\"Category Names\\\"]=any_CategoryNames, Companies=any_Company, [\\\"Cyber Addresses\\\"]=any_addresses, [\\\"Location Name\\\"]=any_EventLocationName, TimeGenerated=any_TimeGenerated, Source=any_EventSource, [\\\"Source Channels\\\"]=any_SourceChannels, [\\\"Vulnerability IDs\\\"]=any_vulnerabilitiesId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Trending Vulnerability Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"VulnerabilityselectedTopic\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 21\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Advanced Persistent Threats\\\",\\\"Ransomware\\\",\\\"Hacktivists\\\")\\r\\n| project TimeGenerated, Caption, Topic=selectedTopic, Severity=AlertType, Source=EventSource, Company=CompanyNames, AlertId\\r\\n\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Threat Actor Activities\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"AlertId\",\"exportParameterName\":\"ThreatActorAlertId\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"AlertId\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 10\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Malware\\\",\\\"Network Disruptions\\\",\\\"Phishing\\\",\\\"DDoS\\\",\\\"Defacement\\\",\\\"Domain Impersonation\\\",\\\"Network Scans\\\")\\r\\n| project TimeGenerated, Caption, Topic=selectedTopic, Severity=AlertType, Source=EventSource, Company=CompanyNames, AlertId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Cyber Attacks\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"AlertId\",\"exportParameterName\":\"CyberAttackAlertId\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"AlertId\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 11\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above 'Threat Actor Activities' grid to view more details_\"},\"customWidth\":\"50\",\"name\":\"text - 22\"},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above 'Cyber Attacks' grid to view more details_\"},\"customWidth\":\"50\",\"name\":\"text - 22 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Data Exposure and Breaches\\\",\\\"Doxxing and Leaked Credentials\\\") \\r\\n| project TimeGenerated, Caption, Topic=selectedTopic, Severity=AlertType, Source=EventSource, Company=CompanyNames, AlertId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Data Breaches\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"AlertId\",\"exportParameterName\":\"DataBreachesAlertId\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"AlertId\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 12\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| mv-expand todynamic(Category)\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| where selectedTopic in (\\\"Email and Web Servers\\\",\\\"Encryption and Certificates\\\",\\\"Remote Access and Management Systems\\\",\\\"Vulnerability Disclosures\\\",\\\"Exploits\\\",\\\"Bug Bounties\\\")\\r\\n| project TimeGenerated, Caption, Topic=selectedTopic, Severity=AlertType, Source=EventSource, Company=CompanyNames, AlertId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Vulnerabilities\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"AlertId\",\"exportParameterName\":\"VulnerabilitiesAlertId\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"AlertId\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 13\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above 'Data Breaches' grid to view more details_\"},\"customWidth\":\"50\",\"name\":\"text - 24\"},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above 'Vulnerabilities' grid to view more details_\"},\"customWidth\":\"50\",\"name\":\"text - 24 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| where AlertId == '{ThreatActorAlertId}'\\r\\n| mv-expand todynamic(Category), todynamic(EmbeddedLabels)\\r\\n| extend addresses = tostring(parse_json(EmbeddedLabels.data.addresses))\\r\\n| extend vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply vulnerabilities on (summarize vulnerabilitiesId = make_list(vulnerabilities.id))\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| summarize any(*) by AlertId\\r\\n| project AlertId, [\\\"Alert Post Link\\\"]=any_PostLink, [\\\"Alert Type\\\"]=any_AlertType,Caption=any_Caption, [\\\"Category Names\\\"]=any_CategoryNames, Companies=any_Company, [\\\"Cyber Addresses\\\"]=any_addresses, [\\\"Location Name\\\"]=any_EventLocationName, TimeGenerated=any_TimeGenerated, [\\\"Matched Watchlist\\\"]=any_WatchlistNames,   Source=any_EventSource, [\\\"Source Channels\\\"]=any_SourceChannels, [\\\"Vulnerability IDs\\\"]=any_vulnerabilitiesId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Threat Actor Activity Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000}},\"conditionalVisibility\":{\"parameterName\":\"ThreatActorAlertId\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 14\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| where AlertId == '{CyberAttackAlertId}'\\r\\n| mv-expand todynamic(Category), todynamic(EmbeddedLabels)\\r\\n| extend addresses = tostring(parse_json(EmbeddedLabels.data.addresses))\\r\\n| extend vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply vulnerabilities on (summarize vulnerabilitiesId = make_list(vulnerabilities.id))\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| summarize any(*) by AlertId\\r\\n| project AlertId, [\\\"Alert Post Link\\\"]=any_PostLink, [\\\"Alert Type\\\"]=any_AlertType, Caption=any_Caption, [\\\"Category Names\\\"]=any_CategoryNames, Companies=any_Company, [\\\"Cyber Addresses\\\"]=any_addresses, [\\\"Location Name\\\"]=any_EventLocationName, TimeGenerated=any_TimeGenerated, [\\\"Matched Watchlist\\\"]=any_WatchlistNames, Source=any_EventSource, [\\\"Source Channels\\\"]=any_SourceChannels, [\\\"Vulnerability IDs\\\"]=any_vulnerabilitiesId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Cyber Attack Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000}},\"conditionalVisibility\":{\"parameterName\":\"CyberAttackAlertId\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 15\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| where AlertId == '{DataBreachesAlertId}'\\r\\n| mv-expand todynamic(Category), todynamic(EmbeddedLabels)\\r\\n| extend addresses = tostring(parse_json(EmbeddedLabels.data.addresses))\\r\\n| extend vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply vulnerabilities on (summarize vulnerabilitiesId = make_list(vulnerabilities.id))\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| summarize any(*) by AlertId\\r\\n| project AlertId, [\\\"Alert Post Link\\\"]=any_PostLink, [\\\"Alert Type\\\"]=any_AlertType,Caption=any_Caption, [\\\"Category Names\\\"]=any_CategoryNames, Companies=any_Company, [\\\"Cyber Addresses\\\"]=any_addresses, [\\\"Location Name\\\"]=any_EventLocationName, TimeGenerated=any_TimeGenerated, [\\\"Matched Watchlist\\\"]=any_WatchlistNames,   Source=any_EventSource, [\\\"Source Channels\\\"]=any_SourceChannels, [\\\"Vulnerability IDs\\\"]=any_vulnerabilitiesId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Data Breach Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000}},\"conditionalVisibility\":{\"parameterName\":\"DataBreachesAlertId\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 16\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseCyberAlerts\\r\\n| where AlertId == '{VulnerabilitiesAlertId}'\\r\\n| mv-expand todynamic(Category), todynamic(EmbeddedLabels)\\r\\n| extend addresses = tostring(parse_json(EmbeddedLabels.data.addresses))\\r\\n| extend vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply vulnerabilities on (summarize vulnerabilitiesId = make_list(vulnerabilities.id))\\r\\n| extend selectedTopic = Category[\\\"name\\\"]\\r\\n| summarize any(*) by AlertId\\r\\n| project AlertId, [\\\"Alert Post Link\\\"]=any_PostLink, [\\\"Alert Type\\\"]=any_AlertType,Caption=any_Caption, [\\\"Category Names\\\"]=any_CategoryNames, Companies=any_Company, [\\\"Cyber Addresses\\\"]=any_addresses, [\\\"Location Name\\\"]=any_EventLocationName, TimeGenerated=any_TimeGenerated, [\\\"Matched Watchlist\\\"]=any_WatchlistNames,   Source=any_EventSource, [\\\"Source Channels\\\"]=any_SourceChannels, [\\\"Vulnerability IDs\\\"]=any_vulnerabilitiesId\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Vulnerability Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10000}},\"conditionalVisibility\":{\"parameterName\":\"VulnerabilitiesAlertId\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"query - 17\"},{\"type\":1,\"content\":{\"json\":\"📝 ***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 27\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Cyber Threat Overview\"},\"name\":\"group - 4\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Dataminr Alerts Drilldown\\r\\n### An overview of your Dataminr alerts stored in Sentinel.\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"c71807b7-f47d-48e8-8b38-13af8b856313\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"time\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":86400000}},{\"id\":\"7c5ac891-169b-4194-a76d-c05fe5e4a381\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"location\",\"label\":\"Location\",\"type\":2,\"isRequired\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"DataminrPulseAlerts\\r\\n| where TimeGenerated >=ago(90d)\\r\\n| distinct EventLocationName\\r\\n| where isnotempty(EventLocationName)\\r\\n\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"b565146d-68da-42cf-b6ab-b5bd6d426e05\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"event_source\",\"label\":\"Source\",\"type\":2,\"isRequired\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"DataminrPulseAlerts\\r\\n| where TimeGenerated >=ago(90d)\\r\\n| distinct EventSource\\r\\n| where isnotempty(EventSource)\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"020f92cc-41a5-4fc7-bd00-1c71460a169f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"company\",\"label\":\"Company\",\"type\":2,\"isRequired\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"DataminrPulseAlerts\\r\\n| where TimeGenerated >=ago(90d)\\r\\n| mv-expand todynamic(Company)\\r\\n| distinct tostring(Company[\\\"name\\\"])\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"c103d8bb-76dc-42bf-a5da-f6b03bbda2d4\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"severity\",\"label\":\"Severity\",\"type\":2,\"isRequired\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"DataminrPulseAlerts\\r\\n| where TimeGenerated >=ago(90d)\\r\\n| distinct AlertType = case(isempty(AlertType), \\\"Unknown\\\", AlertType)\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"32f3344a-34e3-4d68-8c2b-ce82e707729e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"topic\",\"label\":\"Topic\",\"type\":2,\"isRequired\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"DataminrPulseAlerts\\r\\n| where TimeGenerated >=ago(90d)\\r\\n| mv-expand todynamic(Category)\\r\\n| distinct tostring(Category[\\\"name\\\"])\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"232e3e4d-8112-4f65-ab5d-15bd4f18da9d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"watchlist\",\"label\":\"Watchlist\",\"type\":2,\"isRequired\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"DataminrPulseAlerts\\r\\n| where TimeGenerated >=ago(90d)\\r\\n| mv-expand todynamic(WatchlistsMatchedByType)\\r\\n| distinct tostring(WatchlistsMatchedByType[\\\"name\\\"])\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"1a2c6025-a4fb-4002-9aa8-9254b1351bc0\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"search_keyword\",\"label\":\"Keyword Search\",\"type\":1,\"description\":\"Provide * for fetching All values\",\"isRequired\":true,\"value\":\"*\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseAlerts\\r\\n| where isnotempty(Latitude) and isnotempty(Longitude) \\r\\n    and ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| summarize any(EventLocationName), distinct_count=dcount(AlertId) by tostring(Latitude), tostring(Longitude)\\r\\n| extend latlng = strcat(\\\"Name: \\\",any_EventLocationName,\\\"\\\\nLatitude: \\\",Latitude,\\\"\\\\nLongitude: \\\",Longitude)\\r\\n| order by distinct_count desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Alerts Location Map\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"map\",\"mapSettings\":{\"locInfo\":\"LatLong\",\"latitude\":\"Latitude\",\"longitude\":\"Longitude\",\"sizeSettings\":\"distinct_count\",\"sizeAggregation\":\"Sum\",\"labelSettings\":\"latlng\",\"legendMetric\":\"distinct_count\",\"numberOfMetrics\":0,\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"nodeColorField\":\"distinct_count\",\"colorAggregation\":\"Sum\",\"type\":\"heatmap\",\"heatmapPalette\":\"greenRed\"},\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}}},\"customWidth\":\"50\",\"name\":\"Alerts Location Map\",\"styleSettings\":{\"padding\":\"22px\",\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseAlerts\\r\\n| where TimeGenerated >= ago(14d) and TimeGenerated <=ago(7d)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| mv-expand todynamic(Category)\\r\\n| extend Topics = Category[\\\"name\\\"]\\r\\n| where ('*' == ('{topic}') or  Topics == '{topic}')\\r\\n| summarize dcount(AlertId) by tostring(Topics)\\r\\n| project Topics, dcount_AlertId\\r\\n| join kind=rightouter (DataminrPulseAlerts \\r\\n        | where TimeGenerated >= ago(7d)\\r\\n        | where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n            and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n            and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n            and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n            and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n            and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n            and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n        | mv-expand todynamic(Category)\\r\\n        | extend Topics = Category[\\\"name\\\"]\\r\\n        | where ('*' == ('{topic}') or  Topics == '{topic}')\\r\\n        | summarize dcount(AlertId) by tostring(Topics)\\r\\n        | project Topics, dcount_AlertId) on Topics\\r\\n| extend WeekTrendvalue = dcount_AlertId1 - dcount_AlertId\\r\\n| extend WeekTrend = iff(WeekTrendvalue > 0,strcat(\\\"+\\\",WeekTrendvalue),tostring(WeekTrendvalue))\\r\\n| project Topic=Topics1, [\\\"Week Trend\\\"]=WeekTrend, Count=dcount_AlertId1\\r\\n| order by Count desc \",\"size\":0,\"showAnalytics\":true,\"title\":\"Latest Topics\",\"noDataMessage\":\"No data found in selected timerange.\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Topic\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"50%\"}},{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\",\"customColumnWidthSetting\":\"25%\"}},{\"columnMatch\":\"WeekTrend\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25%\"}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"Latest Topics\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"This panel displays data for the alerts ingested in Sentinel for the last 7 days.\",\"style\":\"info\"},\"name\":\"text - 1\"}]},\"customWidth\":\"50\",\"name\":\"group - 17\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseAlerts\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| extend dt = unixtime_milliseconds_todatetime(EventTime)\\r\\n| extend Time = format_datetime(dt,'MM-dd-yy HH:mm:ss')\\r\\n| summarize any(*) by AlertId\\r\\n| extend Caption = replace_string(any_Caption,\\\"\\\\n\\\",\\\" \\\")\\r\\n| project-rename [\\\"Alert Type\\\"] = any_AlertType\\r\\n| project Caption, [\\\"Alert Type\\\"], Time=any_Time, [\\\"Source Link\\\"] = any_PostLink\\r\\n| order by Time desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Latest Alerts Details\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"Caption\",\"exportParameterName\":\"SelectedCaption\",\"exportDefaultValue\":\"none\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Caption\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"45%\"}},{\"columnMatch\":\"Source Link\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\"}}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"Latest Alerts Details\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on a row in the above 'Latest Alerts Details' grid to view more details_\"},\"name\":\"text - 14\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let CyberAddresses = toscalar(\\r\\nDataminrPulseAlerts\\r\\n| mv-expand todynamic(EmbeddedLabels)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| extend Addresses = tostring(parse_json(EmbeddedLabels.data.addresses))\\r\\n| summarize any(*) by AlertId\\r\\n| extend Caption = replace_string(any_Caption,\\\"\\\\n\\\",\\\" \\\")\\r\\n| where any_Caption == ```{SelectedCaption}```\\r\\n| sort by AlertId\\r\\n| project any_Addresses\\r\\n);\\r\\nlet Vulnerabilities = toscalar(\\r\\nDataminrPulseAlerts\\r\\n| mv-expand todynamic(EmbeddedLabels)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| extend Vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply Vulnerabilities on (summarize VulnerabilitiesId = make_list(Vulnerabilities.id))\\r\\n| summarize any(*) by AlertId\\r\\n| extend Caption = replace_string(any_Caption,\\\"\\\\n\\\",\\\" \\\")\\r\\n| where any_Caption == ```{SelectedCaption}```\\r\\n| sort by AlertId\\r\\n| project any_VulnerabilitiesId\\r\\n);\\r\\nDataminrPulseAlerts\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| extend Caption = replace_string(Caption,\\\"\\\\n\\\",\\\" \\\")\\r\\n| where Caption == ```{SelectedCaption}```\\r\\n| sort by AlertId\\r\\n| extend Addresses = CyberAddresses, Vulnerabilities = Vulnerabilities\\r\\n| project-rename [\\\"Alert Id\\\"]=AlertId, [\\\"Alert Post Link\\\"]=PostLink, [\\\"Alert type\\\"]=AlertType, [\\\"category Names\\\"]=CategoryNames, [\\\"Cyber Addresses\\\"]=Addresses, [\\\"Location Name\\\"]=EventLocationName, [\\\"Time Generated\\\"]=TimeGenerated, [\\\"Matched watchlist\\\"]=WatchlistNames, [\\\"Source Channels\\\"]=SourceChannels, [\\\"Vulnerability IDs\\\"]=Vulnerabilities\\r\\n| project [\\\"Alert Id\\\"], [\\\"Alert Post Link\\\"], [\\\"Alert type\\\"], Caption, [\\\"category Names\\\"], Companies=Company, [\\\"Cyber Addresses\\\"], [\\\"Location Name\\\"], [\\\"Time Generated\\\"],[\\\"Matched watchlist\\\"], Source=EventSource,[\\\"Source Channels\\\"], [\\\"Vulnerability IDs\\\"]\\r\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"Selected Alert data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Alert Id\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true}},{\"columnMatch\":\"Alert Post Link\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\"}},{\"columnMatch\":\"AlertId\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true}}],\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibility\":{\"parameterName\":\"SelectedCaption\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},\"name\":\"Selected Alert data\",\"styleSettings\":{\"showBorder\":true}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"f139d998-2ddd-43b7-9323-c60889d9fed2\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"total\",\"type\":1,\"query\":\"DataminrPulseAlerts\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| summarize dcount(AlertId) by EventSource\\r\\n| where isnotempty(EventSource)\\r\\n| summarize totalcount=sum(dcount_AlertId)\\r\\n| project totalcount = iff(totalcount == 0, \\\"0\\\", tostring(totalcount))\",\"isHiddenWhenLocked\":true,\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"time\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseAlerts\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| summarize distinct_count=dcount(AlertId) by EventSource\\r\\n| where isnotempty(EventSource)\\r\\n| order by distinct_count desc\",\"size\":3,\"showAnalytics\":true,\"title\":\"Alerts by Source (Total {total} Alerts)\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"series\",\"exportParameterName\":\"SelectedEventSource\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"group\":\"EventSource\",\"createOtherGroup\":10,\"ySettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true,\"maximumSignificantDigits\":15}}}}},\"customWidth\":\"50\",\"name\":\"Alerts by Source\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseAlerts\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| mv-expand todynamic(SourceChannels)\\r\\n| summarize distinct_count=dcount(AlertId) by tostring(SourceChannels)\\r\\n| where isnotempty(SourceChannels)\\r\\n| project tostring(SourceChannels), distinct_count\\r\\n| order by distinct_count desc\",\"size\":3,\"showAnalytics\":true,\"title\":\"Alerts by Channel\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"exportFieldName\":\"series\",\"exportParameterName\":\"SelectedChannels\",\"exportDefaultValue\":\"none\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"group\":\"SourceChannels\",\"createOtherGroup\":10,\"ySettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true,\"maximumSignificantDigits\":15}}}}},\"customWidth\":\"50\",\"name\":\"query - 6\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"💡 _Click on the above 'Alerts by Source' pie chart to view more details_\"},\"customWidth\":\"50\",\"name\":\"text - 15\"},{\"type\":1,\"content\":{\"json\":\"_💡 Click on the above 'Alerts by Channel' pie chart to view more details_\\r\\n\\r\\n\"},\"customWidth\":\"50\",\"name\":\"text - 16\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseAlerts\\r\\n| mv-expand todynamic(Company), todynamic(WatchlistsMatchedByType), todynamic(Category), todynamic(EmbeddedLabels)\\r\\n| extend Vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities), Addresses = parse_json(EmbeddedLabels.data.addresses)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| mv-expand Vulnerabilities\\r\\n| mv-apply Vulnerabilities on (summarize VulnerabilitiesId = make_list(Vulnerabilities.id))\\r\\n| summarize any(*) by AlertId\\r\\n| where any_EventSource=='{SelectedEventSource}'\\r\\n| project-rename [\\\"Alert Id\\\"]=AlertId, [\\\"Alert Post Link\\\"]=any_PostLink, [\\\"Alert type\\\"]=any_AlertType, [\\\"category Names\\\"]=any_CategoryNames, [\\\"Cyber Addresses\\\"]=any_Addresses, [\\\"Location Name\\\"]=any_EventLocationName, [\\\"Time Generated\\\"]=any_TimeGenerated, [\\\"Matched watchlist\\\"]=any_WatchlistNames, [\\\"Source Channels\\\"]=any_SourceChannels, [\\\"Vulnerability IDs\\\"]=any_VulnerabilitiesId\\r\\n| project [\\\"Alert Id\\\"], [\\\"Alert Post Link\\\"], [\\\"Alert type\\\"], Caption=any_Caption, [\\\"category Names\\\"], Companies=any_Company, [\\\"Cyber Addresses\\\"], [\\\"Location Name\\\"], [\\\"Time Generated\\\"],[\\\"Matched watchlist\\\"], Source=any_EventSource,[\\\"Source Channels\\\"], [\\\"Vulnerability IDs\\\"]\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Alerts by Source Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Alert Id\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true}},{\"columnMatch\":\"Alert Post Link\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Companies\",\"formatter\":1},{\"columnMatch\":\"Cyber Addresses\",\"formatter\":1},{\"columnMatch\":\"Time Generated\",\"formatter\":6}],\"rowLimit\":10000,\"filter\":true}},\"conditionalVisibilities\":[{\"parameterName\":\"SelectedEventSource\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},{\"parameterName\":\"SelectedEventSource\",\"comparison\":\"isNotEqualTo\",\"value\":\"Other\"}],\"name\":\"Selected Alerts by Source Data\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DataminrPulseAlerts\\r\\n| mv-expand todynamic(Company), todynamic(WatchlistsMatchedByType), todynamic(Category), todynamic(EmbeddedLabels)\\r\\n| extend Vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities), Addresses = parse_json(EmbeddedLabels.data.addresses)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| mv-expand Vulnerabilities\\r\\n| mv-apply Vulnerabilities on (summarize VulnerabilitiesId = make_list(Vulnerabilities.id))\\r\\n| summarize any(*) by AlertId\\r\\n| mv-expand todynamic(any_SourceChannels)\\r\\n| where tostring(any_SourceChannels)=='{SelectedChannels}'\\r\\n| project-rename [\\\"Alert Id\\\"]=AlertId, [\\\"Alert Post Link\\\"]=any_PostLink, [\\\"Alert type\\\"]=any_AlertType, [\\\"category Names\\\"]=any_CategoryNames, [\\\"Cyber Addresses\\\"]=any_Addresses, [\\\"Location Name\\\"]=any_EventLocationName, [\\\"Time Generated\\\"]=any_TimeGenerated, [\\\"Matched watchlist\\\"]=any_WatchlistNames, [\\\"Source Channels\\\"]=any_SourceChannels, [\\\"Vulnerability IDs\\\"]=any_VulnerabilitiesId\\r\\n| project [\\\"Alert Id\\\"], [\\\"Alert Post Link\\\"], [\\\"Alert type\\\"], Caption=any_Caption, [\\\"category Names\\\"], Companies=any_Company, [\\\"Cyber Addresses\\\"], [\\\"Location Name\\\"], [\\\"Time Generated\\\"],[\\\"Matched watchlist\\\"], Source=any_EventSource,[\\\"Source Channels\\\"], [\\\"Vulnerability IDs\\\"]\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Selected Alerts by Channel Data\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Alert Id\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"linkIsContextBlade\":true}},{\"columnMatch\":\"Alert Post Link\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Companies\",\"formatter\":1},{\"columnMatch\":\"Cyber Addresses\",\"formatter\":1}],\"rowLimit\":10000,\"filter\":true,\"sortBy\":[{\"itemKey\":\"Cyber Addresses\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"Cyber Addresses\",\"sortOrder\":2}]},\"conditionalVisibilities\":[{\"parameterName\":\"SelectedChannels\",\"comparison\":\"isNotEqualTo\",\"value\":\"none\"},{\"parameterName\":\"SelectedChannels\",\"comparison\":\"isNotEqualTo\",\"value\":\"Other\"}],\"name\":\"Selected Alerts by Channel Data\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let total = toscalar(DataminrPulseAlerts\\r\\n| mv-expand todynamic(EmbeddedLabels)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| extend addresses = parse_json(EmbeddedLabels.data.addresses)\\r\\n| mv-apply addresses on (summarize ip=make_list(addresses.ip))\\r\\n| mv-expand ip\\r\\n| summarize dcount(AlertId) by tostring(ip)\\r\\n| summarize total=sum(dcount_AlertId)\\r\\n| project total);\\r\\nDataminrPulseAlerts\\r\\n| mv-expand todynamic(EmbeddedLabels)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| extend addresses = parse_json(EmbeddedLabels.data.addresses)\\r\\n| mv-apply addresses on (summarize ip=make_list(addresses.ip))\\r\\n| mv-expand ip\\r\\n| where isnotempty(ip)\\r\\n| summarize dcount(AlertId) by tostring(ip)\\r\\n| extend Percent = 100*todouble(dcount_AlertId)/total\\r\\n| project-rename Count = dcount_AlertId\\r\\n| project [\\\"IP Address\\\"]=ip, Count, Percent\\r\\n| order by Percent desc\\r\\n| limit 10\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 Exploiting IP Addresses\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\"}},{\"columnMatch\":\"Percent\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33.33\",\"name\":\"Top 10 Exploiting IP Addresses\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let total = toscalar(DataminrPulseAlerts\\r\\n| mv-expand todynamic(EmbeddedLabels)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| extend vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply vulnerabilities on (summarize vulnids=make_list(vulnerabilities.id))\\r\\n| mv-expand vulnids\\r\\n| where isnotempty(vulnids)\\r\\n| summarize dcount(AlertId) by tostring(vulnids)\\r\\n| summarize total=sum(dcount_AlertId)\\r\\n| project total);\\r\\nDataminrPulseAlerts\\r\\n| mv-expand todynamic(EmbeddedLabels)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| extend vulnerabilities = parse_json(EmbeddedLabels.data.vulnerabilities)\\r\\n| mv-apply vulnerabilities on (summarize vulnids=make_list(vulnerabilities.id))\\r\\n| mv-expand vulnids\\r\\n| where isnotempty(vulnids)\\r\\n| summarize dcount(AlertId) by tostring(vulnids)\\r\\n| extend Percent = 100*todouble(dcount_AlertId)/total\\r\\n| project-rename Count = dcount_AlertId\\r\\n| project [\\\"Vulnerability ID\\\"]=vulnids, Count, Percent\\r\\n| order by Percent desc\\r\\n| limit 10\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 Trending CVEs\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\"}},{\"columnMatch\":\"Percent\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33.33\",\"name\":\"Top 10 Trending CVEs\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let total = toscalar(DataminrPulseAlerts\\r\\n| mv-expand todynamic(EmbeddedLabels)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| extend addresses = parse_json(EmbeddedLabels.data.addresses)\\r\\n| mv-apply addresses on (summarize port=make_list(addresses.port))\\r\\n| mv-expand port\\r\\n| summarize dcount(AlertId) by tostring(port)\\r\\n| summarize total=sum(dcount_AlertId)\\r\\n| project total);\\r\\nDataminrPulseAlerts\\r\\n| mv-expand todynamic(EmbeddedLabels)\\r\\n| where ('*' == ('{location}') or EventLocationName == ('{location}'))\\r\\n    and ('*' == ('{event_source}') or EventSource == ('{event_source}'))\\r\\n    and ('*' == ('{company}') or set_has_element(todynamic(CompanyNames),'{company}'))\\r\\n    and ('*' == ('{severity}') or AlertType == ('{severity}'))\\r\\n    and ('*' == ('{topic}') or  set_has_element(todynamic(CategoryNames), '{topic}'))\\r\\n    and ('*' == ('{watchlist}') or set_has_element(todynamic(WatchlistNames),'{watchlist}'))\\r\\n    and  ('{search_keyword:label}' == '*' or (* has '{search_keyword:label}'))\\r\\n| extend addresses = parse_json(EmbeddedLabels.data.addresses)\\r\\n| mv-apply addresses on (summarize port=make_list(addresses.port))\\r\\n| mv-expand port\\r\\n| where isnotempty(port)\\r\\n| summarize dcount(AlertId) by tostring(port)\\r\\n| extend Percent = 100*todouble(dcount_AlertId)/total\\r\\n| project-rename Count = dcount_AlertId\\r\\n| project [\\\"Port\\\"]=port, Count, Percent\\r\\n| sort by Percent desc\\r\\n| limit 10\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 Open Ports\",\"noDataMessage\":\"No data found in selected timerange.\",\"timeContextFromParameter\":\"time\",\"showRefreshButton\":true,\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\"}},{\"columnMatch\":\"Percent\",\"formatter\":4,\"formatOptions\":{\"min\":0,\"palette\":\"greenRed\"},\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"33.33\",\"name\":\"Top 10 Open Ports\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"📝 ***Refresh the web page to fetch details of recently collected events***\"},\"name\":\"text - 9\"}]},\"conditionalVisibility\":{\"parameterName\":\"setTab\",\"comparison\":\"isEqualTo\",\"value\":\"Alerts Drilldown\"},\"name\":\"Alerts Drilldown\"}],\"fromTemplateId\":\"sentinel-DataminrPulseAlerts\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=DataminrPulseAlerts; logoFileName=DataminrPulse.svg; description=This Workbook provides insight into the data coming from DataminrPulse.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Dataminr Pulse Alerts; templateRelativePath=DataminrPulseAlerts.json; provider=Dataminr}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dataminr Pulse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dataminr",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dataminr Support",
                  "email": "support@dataminr.com",
                  "tier": "Partner",
                  "link": "https://www.dataminr.com/dataminr-support#support"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "DataminrPulse_Alerts_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "DataminrPulseAlerts",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist1-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "DataminrPulseAsset",
        "watchlistAlias": "DataminrPulseAsset",
        "source": "dataminr_asset_close_proximity_alerting.csv",
        "description": "Watchlist contains data of assets to use in Close Proximity Overview dashboard.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "asset_name",
        "rawContent": "asset_name,asset_type,asset_description,asset_lat,asset_long,alerting_distance_miles\r\nDataminr_Newyork,Office,Dataminr Inc. 135 Madison Ave Floor 10 New York NY 10016 United States,40.745900,-73.983940,5\r\nDataminr_Bozeman,Office,Dataminr Inc. 131 W Main St Unit D Bozeman MT 59715,45.6794878,-111.0398014,5\r\nDataminr_Virginia,Office,Dataminr Inc. 2101 Wilson Blvd #1002 Arlington VA 22201 United States,38.8940199,-77.0683043,5\r\nDataminr_Dublin,Office,Dataminr Inc. 2 Windmill Lane D02 K156 Dublin Ireland,53.3458505,-6.245248,5\r\nDataminr_London,Office,Dataminr Inc. 10 York Rd London SE1 7ND UK,51.5037543,-0.1181606,5\r\nDataminr_Melbourne,Office,Dataminr Inc. 120 Spencer St Melbourne VIC 3000 Australia,-37.8182119,144.9521438,5\r\nDataminr_Seattle,Office,Dataminr Inc. 925 4th Ave #11th Seattle WA 98104,47.6054854,-122.3354275,5"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist2-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "DataminrPulseVulnerableDomain",
        "watchlistAlias": "DataminrPulseVulnerableDomain",
        "source": "dataminr_vulnerable_domains_30d.csv",
        "description": "Watchlist contains data of vulnerable domains of Dataminr to use in IOC Overview dashboard.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "url",
        "rawContent": "_time,domain,url,caption,company,source\r\n1678819858,000webhostapp.com,https://centers4f3ty67v3rific4ti0nc0mf1rm4t10n.0source00webhostapp.com/verifications-security-pages.php,Phishing URL detected impersonating Facebook: Local Source via urlscan.,Meta Platforms, Inc.,urlscan\r\n1678819910,amazonaws.com,ec2-175-41-177-135.ap-southeast-1.compute.amazonaws.com,Amazon Web Services IP 175.41.177.135 has open RDP port 3389: Local Source via Shodan.,Amazon Web Services, Inc.,Shodan\r\n1678819861,anaturaledit.co.uk,https://anaturaledit.co.uk/login.html?dozpufx=FHOwMm3Oe5wz6vzgjhEbSKgoX9TeV&oxvprhsis=UUhdLARKkboE1nwm9et&nohjyzal=Aq5U1zYzvKYhERjGv8D1JxSYh,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation,urlscan\r\n1678819858,co.nz,bestandlesstravel.co.nz,Rackspace IP 119.9.51.147 hosts server configuration with CVE(s): Local Source via Shodan.,Rackspace Hosting, Inc.,Shodan\r\n1678819901,columbia.edu,ds1.cs.columbia.edu,Columbia Sportswear IP 128.59.22.27 has exposed MongoDB database: Local Source via Shodan.,Columbia Sportswear Company,Shodan\r\n1678819879,com.au,ec2-3-104-52-84.ap-southeast-2.compute.amazonaws.com,Amazon IP 3.104.52.84 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon.com, Inc.,Shodan\r\n1678810260,connectlon.org,https://connectlon.org/login,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation,urlscan\r\n1678819887,easynet.nl,213.201.230.reverse.easynet.nl,GTT Communications IP 213.201.230.96 hosts server configuration with CVE(s): Local Source via Shodan.,GTT Communications, Inc.,Shodan\r\n1678819860,filedn.com,https://filedn.com/lmtf06DxeexRuabg6razTLL/testoff%20(1).html,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation,urlscan\r\n1678819879,firebaseapp.com,https://business-page-appeal-19f1a.firebaseapp.com/,Phishing URL detected impersonating Facebook: Local Source via urlscan.,Meta Platforms, Inc.,urlscan\r\n1678819860,fleek.co,https://twilight-bonus-4110.on.fleek.co/support-closing.html,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation,urlscan\r\n1678819879,fleek.one,https://storageapi-stg.fleek.one/8837a275-8aca-4d7b-9c7f-25709249184e-bucket/way/wordindx.html,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation,urlscan\r\n1678819910,gassafetycerts.com,ec2-79-125-76-130.eu-west-1.compute.amazonaws.com,Amazon Web Services IP 79.125.76.130 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.,Shodan\r\n1678819888,googlefiber.net,136-36-82-15.googlefiber.net,Google IP 136.36.82.15 hosts server configuration with CVE(s): Local Source via Shodan.,Google LLC,Shodan\r\n1678819908,googleusercontent.com,15.56.64.34.bc.googleusercontent.com,Google IP 34.64.56.15 has exposed MySQL database: Local Source via Shodan.,Google LLC,Shodan\r\n1678819864,guesteasy.uk,http://guesteasy.uk/0000/quad/,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation,urlscan\r\n1678819875,inet.fi,mobile-user-c2fb13-242.dhcp.inet.fi,Telia Company IP 194.251.19.242 has exposed MS-SQL Server 2017 RTM database: Local Source via Shodan.,Telia Company AB (publ),Shodan\r\n1678819849,jblapps.com,oa.jblapps.com,Verizon IP 202.94.114.21 hosts server configuration with CVE(s): Local Source via Shodan.,Jabil Inc.,Shodan\r\n1678819859,jhadlkacoiwuz.co.vu,http://jhadlkacoiwuz.co.vu/Policies.html,Phishing URL detected impersonating Facebook: Local Source via urlscan.,Meta Platforms, Inc.,urlscan\r\n1678819905,kyivstar.net,94-153-188-61.mobile.kyivstar.net,Kyivstar IP 94.153.188.61 has exposed MySQL database: Local Source via Shodan.,VEON Ltd.,Shodan\r\n1678819842,leadcom.biz,https://leadcom.biz/godaddy/godaddy.php?user=,Phishing URL detected impersonating Godaddy: Local Source via urlscan.,GoDaddy Inc.,urlscan\r\n1678819844,llnw.net,lvp-029.phx7.llnw.net,Limelight Networks IP 68.142.64.87 hosts server configuration with CVE(s): Local Source via Shodan.,Limelight Networks, Inc.,Shodan\r\n1678819887,mirai.ne.jp,p211246.bsn.mirai.ne.jp,Mirai IP 210.172.211.246 has exposed PostgreSQL database: Local Source via Shodan.,Toyota Motor Corporation,Shodan\r\n1678819906,mitre.org,mrt-js.mitre.org,The MITRE Corporation IP 66.170.227.78 hosts server configuration with CVE(s): Local Source via Shodan.,The MITRE Corporation,Shodan\r\n1678819863,mystudywriters.com,https://mystudywriters.com/static/css/godaddy/godaddy.php?user=*@*,Phishing URL detected impersonating Godaddy: Local Source via urlscan.,GoDaddy Inc.,urlscan\r\n1678819845,negozialia.com,ec2-46-137-73-18.eu-west-1.compute.amazonaws.com,Amazon Web Services IP 46.137.73.18 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.,NULL\r\n1678819879,network-support.us,http://network-support.us/landing/form/4fc67c03-4ed5-4240-9ce9-14d9d4d33c02,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation,urlscan\r\n1678819885,oxford-union.org,speakers.oxford-union.org,Amazon Web Services IP 46.137.87.82 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.,Shodan\r\n1678819904,r2ceurope.com,153.vps.r2ceurope.com,VMware IP 185.69.233.145 hosts server configuration with CVE(s): Local Source via Shodan.,VMware, Inc.,Shodan\r\n1678819905,route-server.jp,b4kebweac120.route-server.jp,KDDI IP 180.235.234.120 has exposed MySQL database: Local Source via Shodan.,NULL,Shodan\r\n1678819842,sharestion.com,https://www.sharestion.com/gbr/73a29c01-4e78-437f-a0d4-c8553e1960c1/14ebb15a-e337-46a2-8cfc-e84e6ad3b319/4a07b645-7049-4161-ac15-d994427c31b9/login?id=a2dPQ0dqZkxYV1duc3crcHhqdE9iT2w4K0VHZkxMWTJVYjIzamV5N0NXZE9EcEhlYnJpbjd2NEJtRGNoQldicWpoOGo5dFVWalMvWFY2eXVFZmtOYW45RlNPbzRsT2FNZDhZVEdORkNBS3ZoMnUwNjlhcERZdTVaYTZJYUJwK2V4NEFUUTVGM0U1cmVjUCt1Qi9qVVNWTEJNSHNwUG05bExPblFvcWJOc3FpbEdoSkFTbXgwL3E2Um5TYzB1TEJBVndITXNJSk9heDNjbi82WXNTak92L1UreDZ1WXNGdGFNcTg0REc2L1BVT0dNbkRnN080YXFXRHI5TXlOdXJPZ3ZMNUJFUzliRDZqUE9iLzZCM2JLakIveVRhM2daNTUremVTTkpGQncrUGZOejdEMjQwaXlZMldsbWpMbUxkUURyWXZVYmRReUY5UzY1bHA4QzR1NVhTbXcrOG5lcVNaZzM5cGlGc0tmdExIWC9Bb3gzaVpSK04wR2xORE9TcWFx,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation,urlscan\r\n1678819889,sprintdatacenter.net,n8236h209.sprintdatacenter.net,Sprint data center IP 188.68.236.209 has exposed MS-SQL Server 2014 SP2 database: Local Source via Shodan.,Sprintex Limited,Shodan\r\n1678819890,steadfastdns.net,ip24.23-29-134.static.steadfastdns.net,Fortinet IP 23.29.134.24 hosts server configuration with CVE(s): Local Source via Shodan.,Fortinet, Inc.,Shodan\r\n1678819850,taica.family,ec2-176-32-71-215.ap-northeast-1.compute.amazonaws.com,Amazon Web Services IP 176.32.71.215 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.,Shodan\r\n1678819858,tiptoealaska.com,http://tiptoealaska.com/,Phishing URL detected impersonating Facebook: Local Source via urlscan.,Meta Platforms, Inc.,urlscan\r\n1678811471,trucktrax.biz,http://trucktrax.biz/,Phishing URL detected impersonating Facebook: Local Source via urlscan.,Meta Platforms, Inc.,urlscan\r\n1678819902,tylertech.com,tylertech.com,Tyler Technologies IP 207.182.213.172 hosts server configuration with CVE(s): Local Source via Shodan.,Tyler Technologies, Inc.,Shodan\r\n1678819875,verizonwireless.com,scspersonas-qe3-tdc.verizonwireless.com,Verizon IP 8.15.65.94 has SSL certificate expiring within 24 hours: Local Source via Shodan.,Verizon Communications Inc.,Shodan\r\n1678819848,wavenetuk.net,195-26-42-122.dsl.wavenetuk.net,Wavenet IP 195.26.42.122 has open Telnet port 23: Local Source via Shodan.,DEEPMIND TECHNOLOGIES LIMITED,Shodan\r\n1678819880,web.app,https://business-page-appeal-12e2c.web.app/,Phishing URL detected impersonating Facebook: Local Source via urlscan.,Meta Platforms, Inc.,urlscan\r\n1678819892,ziggo.nl,84-25-193-69.cable.dynamic.v4.ziggo.nl,Ziggo IP 84.25.193.69 has exposed PostgreSQL database: Local Source via Shodan.,VodafoneZiggo Group B.V.,Shodan\r\n"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist3-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "DataminrPulseVulnerableHash",
        "watchlistAlias": "DataminrPulseVulnerableHash",
        "source": "dataminr_vulnerable_hashes_30d.csv",
        "description": "Watchlist contains data of vulnerable hashes of Dataminr to use in IOC Overview dashboard.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "hash",
        "rawContent": "hash,caption,_time,source\r\n3f7eae6cc61fdc2553a2acdede69be84945a7a724b632dea3ff8466f74b56249,Sample of android malware GodFather impersonating MYT Music app to target Turkish users detected and analyzed: Blog via VirusTotal.,1671560525,VirusTotal\r\n"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist4-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "DataminrPulseVulnerableIp",
        "watchlistAlias": "DataminrPulseVulnerableIp",
        "source": "dataminr_vulnerable_ips_30d.csv",
        "description": "Watchlist contains data of vulnerable ips of Dataminr to use in IOC Overview dashboard.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "ip",
        "rawContent": "ip,_time,caption,company\r\n119.9.46.78,1678819861,Rackspace IP 119.9.46.78 hosts server configuratiServiceson with CVE(s): Local Source via Shodan.,Rackspace Hosting, Inc.\r\n119.9.51.147,1678819858,Rackspace IP 119.9.51.147 hosts server configuration with CVE(s): Local Source via Shodan.,Rackspace Hosting, Inc.\r\n122.248.205.188,1678819876,Amazon Web Services IP 122.248.205.188 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.\r\n128.59.22.27,1678819901,Columbia Sportswear IP 128.59.22.27 has exposed MongoDB database: Local Source via Shodan.,Columbia Sportswear Company\r\n13.124.104.139,1678819887,Amazon Web Services IP 13.124.104.139 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n13.124.15.202,1678819887,Amazon Web Services IP 13.124.15.202 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n13.125.134.248,1678819904,Amazon Web Services IP 13.125.134.248 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n13.125.61.135,1678819886,Amazon Web Services IP 13.125.61.135 has exposed PostgreSQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n13.209.157.214,1678819907,Amazon Web Services IP 13.209.157.214 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n13.209.212.118,1678819910,Amazon Web Services IP 13.209.212.118 has exposed PostgreSQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n13.209.58.95,1678819886,Amazon Web Services IP 13.209.58.95 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n13.236.26.207,1678819863,Amazon IP 13.236.26.207 has exposed MS-SQL Server 2017 CU19 database: Local Source via Shodan.,Amazon.com, Inc.\r\n13.238.230.228,1678819876,Amazon IP 13.238.230.228 has exposed MySQL database: Local Source via Shodan.,Amazon.com, Inc.\r\n13.54.80.13,1678819889,Amazon IP 13.54.80.13 has exposed MySQL database: Local Source via Shodan.,Amazon.com, Inc.\r\n136.36.82.15,1678819888,Google IP 136.36.82.15 hosts server configuration with CVE(s): Local Source via Shodan.,Google LLC\r\n147.161.131.98,1678819910,Zscaler IP 147.161.131.98 has open Memcached port 11211: Local Source via Shodan.,Zscaler, Inc.\r\n149.18.115.9,1678819849,AT&T IP 149.18.115.9 has exposed MS-SQL Server 2022 CTP1.0+ database: Local Source via Shodan.,AT&T Inc.\r\n149.18.118.63,1678819850,AT&T IP 149.18.118.63 has exposed MS-SQL Server 2022 CTP1.0+ database: Local Source via Shodan.,AT&T Inc.\r\n149.18.119.207,1678819901,AT&T IP 149.18.119.207 has exposed MS-SQL Server 2022 CTP1.0+ database: Local Source via Shodan.,AT&T Inc.\r\n149.18.119.238,1678819903,AT&T IP 149.18.119.238 has exposed MS-SQL Server 2022 CTP1.0+ database: Local Source via Shodan.,AT&T Inc.\r\n149.18.124.59,1678819875,AT&T IP 149.18.124.59 has exposed MS-SQL Server 2022 CTP1.0+ database: Local Source via Shodan.,AT&T Inc.\r\n149.18.125.143,1678819864,AT&T IP 149.18.125.143 has exposed MS-SQL Server 2022 CTP1.0+ database: Local Source via Shodan.,AT&T Inc.\r\n149.18.127.170,1678819909,AT&T IP 149.18.127.170 has exposed MS-SQL Server 2022 CTP1.0+ database: Local Source via Shodan.,AT&T Inc.\r\n15.164.118.15,1678819847,Amazon Web Services IP 15.164.118.15 has exposed MS-SQL Server 2019 CU8 database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n15.164.129.2,1678819893,Amazon Web Services IP 15.164.129.2 has exposed MongoDB database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n15.164.15.11,1678819841,Amazon Web Services IP 15.164.15.11 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n15.164.199.202,1678819859,Amazon Web Services IP 15.164.199.202 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n15.165.176.124,1678819890,Amazon Web Services IP 15.165.176.124 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n15.165.242.79,1678819906,Amazon Web Services IP 15.165.242.79 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n175.41.138.27,1678819906,Amazon Web Services IP 175.41.138.27 has exposed PostgreSQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n175.41.147.118,1678819903,Amazon Web Services IP 175.41.147.118 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.\r\n175.41.177.135,1678819910,Amazon Web Services IP 175.41.177.135 has open RDP port 3389: Local Source via Shodan.,Amazon Web Services, Inc.\r\n175.41.246.120,1678819893,Amazon Web Services IP 175.41.246.120 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n176.32.71.215,1678819850,Amazon Web Services IP 176.32.71.215 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.\r\n180.235.234.120,1678819905,KDDI IP 180.235.234.120 has exposed MySQL database: Local Source via Shodan.,NULL\r\n185.180.12.68,1678819858,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation\r\n185.59.220.194,1678819879,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation\r\n185.69.233.145,1678819904,VMware IP 185.69.233.145 hosts server configuration with CVE(s): Local Source via Shodan.,VMware, Inc.\r\n188.68.236.209,1678819889,Sprint data center IP 188.68.236.209 has exposed MS-SQL Server 2014 SP2 database: Local Source via Shodan.,Sprintex Limited\r\n194.251.19.242,1678819875,Telia Company IP 194.251.19.242 has exposed MS-SQL Server 2017 RTM database: Local Source via Shodan.,Telia Company AB (publ)\r\n195.26.42.122,1678819848,Wavenet IP 195.26.42.122 has open Telnet port 23: Local Source via Shodan.,DEEPMIND TECHNOLOGIES LIMITED\r\n202.159.8.148,1678819850,Microsoft IP 202.159.8.148 hosts server configuration with CVE(s): Local Source via Shodan.,Microsoft Corporation\r\n202.94.114.21,1678819849,Verizon IP 202.94.114.21 hosts server configuration with CVE(s): Local Source via Shodan.,Jabil Inc.\r\n206.62.165.185,1678819846,Matrix IP 206.62.165.185 has exposed MySQL database: Local Source via Shodan.,Toyota Motor Corporation\r\n207.182.213.172,1678819902,Tyler Technologies IP 207.182.213.172 hosts server configuration with CVE(s): Local Source via Shodan.,Tyler Technologies, Inc.\r\n210.172.211.246,1678819887,Mirai IP 210.172.211.246 has exposed PostgreSQL database: Local Source via Shodan.,Toyota Motor Corporation\r\n213.201.230.96,1678819887,GTT Communications IP 213.201.230.96 hosts server configuration with CVE(s): Local Source via Shodan.,GTT Communications, Inc.\r\n213.71.13.147,1678819864,Verizon IP 213.71.13.147 hosts server configuration with CVE(s): Local Source via Shodan.,Verizon Communications Inc.\r\n23.109.93.100,1678819860,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation\r\n23.228.187.201,1678819877,Google IP 23.228.187.201 hosts server configuration with CVE(s): Local Source via Shodan.,Google LLC\r\n23.29.134.24,1678819890,Fortinet IP 23.29.134.24 hosts server configuration with CVE(s): Local Source via Shodan.,Fortinet, Inc.\r\n3.104.237.239,1678819888,Amazon IP 3.104.237.239 has exposed PostgreSQL database: Local Source via Shodan.,Amazon.com, Inc.\r\n3.104.52.84,1678819879,Amazon IP 3.104.52.84 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon.com, Inc.\r\n3.106.51.243,1678819893,Amazon IP 3.106.51.243 has exposed MySQL database: Local Source via Shodan.,Amazon.com, Inc.\r\n3.217.14.223,1678819879,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation\r\n3.24.249.113,1678819849,Amazon IP 3.24.249.113 has exposed MySQL database: Local Source via Shodan.,Amazon.com, Inc.\r\n3.34.0.4,1678819906,Amazon Web Services IP 3.34.0.4 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.34.15.214,1678819900,Amazon Web Services IP 3.34.15.214 has exposed PostgreSQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.34.231.79,1678819903,Amazon Web Services IP 3.34.231.79 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.34.70.32,1678819892,Amazon Web Services IP 3.34.70.32 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.34.86.214,1678819909,Amazon Web Services IP 3.34.86.214 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.34.98.152,1678819848,Amazon Web Services IP 3.34.98.152 has exposed MongoDB database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.35.191.42,1678819849,Amazon Web Services IP 3.35.191.42 has exposed PostgreSQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.35.247.137,1678810284,Amazon Web Services IP 3.35.247.137 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.35.54.62,1678819858,Amazon Web Services IP 3.35.54.62 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.37.202.208,1678819905,Amazon Web Services IP 3.37.202.208 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.38.55.14,1678819843,Amazon Web Services IP 3.38.55.14 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.39.26.110,1678819879,Amazon Web Services IP 3.39.26.110 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.39.70.101,1678819848,Amazon Web Services IP 3.39.70.101 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.39.83.10,1678819901,Amazon Web Services IP 3.39.83.10 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n3.39.88.211,1678819901,Amazon Web Services IP 3.39.88.211 has exposed PostgreSQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n34.101.186.137,1678819889,Google IP 34.101.186.137 hosts server configuration with CVE(s): Local Source via Shodan.,Google LLC\r\n34.101.219.45,1678819859,Google IP 34.101.219.45 has exposed PostgreSQL database: Local Source via Shodan.,Google LLC\r\n34.101.225.45,1678810262,Google IP 34.101.225.45 hosts server configuration with CVE(s): Local Source via Shodan.,Google LLC\r\n34.101.82.9,1678819902,Google IP 34.101.82.9 has exposed MySQL database: Local Source via Shodan.,Google LLC\r\n34.223.244.1,1678819858,Expedia IP 34.223.244.1 has exposed Elastic database: Local Source via Shodan.,Expedia Group, Inc.\r\n34.64.165.63,1678819867,Google IP 34.64.165.63 hosts server configuration with CVE(s): Local Source via Shodan.,Google LLC\r\n34.64.171.179,1678819887,Google IP 34.64.171.179 has SSL certificate expiring within 24 hours: Local Source via Shodan.,Google LLC\r\n34.64.233.209,1678819901,Google IP 34.64.233.209 has open RDP port 3389: Local Source via Shodan.,Google LLC\r\n34.64.56.15,1678819908,Google IP 34.64.56.15 has exposed MySQL database: Local Source via Shodan.,Google LLC\r\n35.219.4.100,1678819892,Google IP 35.219.4.100 has exposed MongoDB database: Local Source via Shodan.,Google LLC\r\n46.137.73.18,1678819846,Amazon Web Services IP 46.137.73.18 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.\r\n46.137.87.82,1678819885,Amazon Web Services IP 46.137.87.82 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.\r\n46.51.135.214,1678819847,Amazon Web Services IP 46.51.135.214 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.\r\n47.254.71.1,1678819859,Phishing URL detected impersonating Facebook: Local Source via urlscan.,Meta Platforms, Inc.\r\n52.78.153.43,1678819902,Amazon Web Services IP 52.78.153.43 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n52.78.58.206,1678810284,Amazon Web Services IP 52.78.58.206 has exposed PostgreSQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n52.79.161.41,1678819874,Amazon Web Services IP 52.79.161.41 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n52.79.75.171,1678819909,Amazon Web Services IP 52.79.75.171 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n54.180.56.82,1678819892,Amazon Web Services IP 54.180.56.82 has exposed PostgreSQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n54.180.96.177,1678819859,Amazon Web Services IP 54.180.96.177 has exposed MySQL database: Local Source via Shodan.,Amazon Web Services, Inc.\r\n65.154.226.14,1678819879,Palo Alto Networks IP 65.154.226.14 has open SMB port 445: Local Source via Shodan.,Palo Alto Networks, Inc.\r\n66.170.109.0,1678819906,VMware IP 66.170.109.0 has open RDP port 3389: Local Source via Shodan.,VMware, Inc.\r\n66.170.227.78,1678819906,The MITRE Corporation IP 66.170.227.78 hosts server configuration with CVE(s): Local Source via Shodan.,The MITRE Corporation\r\n66.29.128.152,1678819863,Phishing URL detected impersonating Godaddy: Local Source via urlscan.,GoDaddy Inc.\r\n68.142.64.87,1678819844,Limelight Networks IP 68.142.64.87 hosts server configuration with CVE(s): Local Source via Shodan.,Limelight Networks, Inc.\r\n69.49.244.24,1678819864,Phishing URL detected impersonating Microsoft: Local Source via urlscan.,Microsoft Corporation\r\n79.125.76.130,1678819910,Amazon Web Services IP 79.125.76.130 hosts server configuration with CVE(s): Local Source via Shodan.,Amazon Web Services, Inc.\r\n8.15.65.94,1678819875,Verizon IP 8.15.65.94 has SSL certificate expiring within 24 hours: Local Source via Shodan.,Verizon Communications Inc.\r\n83.246.46.51,1678819879,VMware IP 83.246.46.51 hosts server configuration with CVE(s): Local Source via Shodan.,VMware, Inc.\r\n84.25.193.69,1678819892,Ziggo IP 84.25.193.69 has exposed PostgreSQL database: Local Source via Shodan.,VodafoneZiggo Group B.V.\r\n94.153.188.61,1678819905,Kyivstar IP 94.153.188.61 has exposed MySQL database: Local Source via Shodan.,VEON Ltd.\r\n"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist5-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "DataminrPulseVulnerableMalware",
        "watchlistAlias": "DataminrPulseVulnerableMalware",
        "source": "dataminr_vulnerable_malwares_30d.csv",
        "description": "Watchlist contains data of vulnerable malwares of Dataminr to use in IOC Overview dashboard.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "malware",
        "rawContent": "malware,caption,_time,hash,ip,source\r\nGodFather,Sample of android malware GodFather impersonating MYT Music app to tadeployingrget Turkish users detected and analyzed: Blog via VirusTotal.,1671560525,3f7eae6cc61fdc2553a2acdede69be84945a7a724b632dea3ff8466f74b56249,,VirusTotal\r\nGodFather,Sample of android malware GodFather impersonating as MYT Music app to target Turkish users detected and analyzed: Blog via VirusTotal.,1671553995,e67b8b78550396f542ded77d2118487ac1afb0d4ac6b70774889bbb4e6d88265,,VirusTotal\r\nOWASSRF,CrowdStrike shares tool to check logs for evidence of OWASSRF exploitation: Local Source via GitHub.,1671564801,,,GitHub\r\nPupy RAT,C2 server associated with threat actors deploying Pupy RAT malware by exploiting Windows Problem Reporting detected: Blog via VirusTotal.,1673020170,,103.79.76[.]40,VirusTotal\r\nW4SP Stealer,Hackers targeting PyPI Python package repository using W4SP Stealer malware hidden inside malicious packages to steal software developers' data: Blog via Bleeping Computer.,1671562554,,,Bleeping Computer\r\n"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DataminrPulseAlertEnrichment Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "DataminrPulseAlertEnrichment",
              "type": "string"
            },
            "azure key vault": {
              "type": "string",
              "defaultValue": "vault.azure",
              "metadata": {
                "description": "Enter value for azure key vault"
              }
            },
            "KeyVaultName": {
              "type": "string",
              "minLength": 1
            },
            "tenantId": {
              "type": "string",
              "minLength": 1
            },
            "BaseURL": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Enter baseurl for your Dataminr account.(e.g. https://gateway.dataminr.com/)"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "KeyvaultConnectionName": "[[concat('Keyvault-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Keyvault')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "azure key vault": {
                      "type": "string",
                      "defaultValue": "[[parameters('azure key vault')]"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "For_Each_Alerts": {
                      "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                      "actions": {
                        "Does_DstDomain_exist_in_the_incident": {
                          "actions": {
                            "Append_DstDomain_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['DstDomain'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_SrcDomain_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['DstDomain'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_DstHostname_exist_in_the_incident": {
                          "actions": {
                            "Append_DstHostname_to_query_string_": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['DstHostname'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_SrcHostname_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['DstHostname'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_DstIpAddr_exist_in_the_incident": {
                          "actions": {
                            "Append_DstIpAddr_to_query_string_": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['DstIpAddr'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_SrcIpAddr_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['DstIpAddr'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_DstMacAddr_exist_in_the_incident": {
                          "actions": {
                            "Append_DstMacAddr_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['DstMacAddr'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_SrcMacAddr_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['DstMacAddr'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_SrcDomain_exist_in_the_incident": {
                          "actions": {
                            "Append_SrcDomain_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcDomain'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_DstHostname_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcDomain'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_SrcFileMD5_exist_in_the_incident": {
                          "actions": {
                            "Append_SrcFileMD5_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcFileMD5'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_DstMacAddr_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcFileMD5'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_SrcFileSHA1_exist_in_the_incident": {
                          "actions": {
                            "Append_SrcFileSHA1_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcFileSHA1'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_TargetFileMD5_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcFileSHA1'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_SrcFileSHA256_exist_in_the_incident": {
                          "actions": {
                            "Append_SrcFileSHA256_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcFileSHA256'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_TargetFileSHA1_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcFileSHA256'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_SrcFileSHA512_exist_in_the_incident": {
                          "actions": {
                            "Append_SrcFileSHA512_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcFileSHA512'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_TargetFileSHA256_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcFileSHA512'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_SrcHostname_exist_in_the_incident": {
                          "actions": {
                            "Append_SrcHostname_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcHostname'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_DstIpAddr_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcHostname'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_SrcIpAddr_exist_in_the_incident": {
                          "actions": {
                            "Append_SrcIpAddr_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcIpAddr'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_Alerts_Custom_Data_into_JSON": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcIpAddr'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_SrcMacAddr_exist_in_the_incident": {
                          "actions": {
                            "Append_SrcMacAddr_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcMacAddr'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_DstDomain_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['SrcMacAddr'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_TargetFileMD5_exist_in_the_incident": {
                          "actions": {
                            "Append_TargetFileMD5_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['TargetFileMD5'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_SrcFileMD5_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['TargetFileMD5'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_TargetFileSHA1_exist_in_the_incident": {
                          "actions": {
                            "Append_TargetFileSHA1_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['TargetFileSHA1'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_SrcFileSHA1_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['TargetFileSHA1'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_TargetFileSHA256_exist_in_the_incident": {
                          "actions": {
                            "Append_TargetFileSHA256_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['TargetFileSHA256'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_SrcFileSHA256_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['TargetFileSHA256'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_TargetFileSHA512_exist_in_the_incident": {
                          "actions": {
                            "Append_TargetFileSHA512_to_query_string": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['TargetFileSHA512'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_SrcFileSHA512_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['TargetFileSHA512'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Does_Url_exist_in_the_incident": {
                          "actions": {
                            "Append_Url_to_string_variable": {
                              "type": "AppendToStringVariable",
                              "inputs": {
                                "name": "query",
                                "value": "@concat(body('Parse_Alerts_Custom_Data_into_JSON')?['Url'],',')"
                              }
                            }
                          },
                          "runAfter": {
                            "Does_TargetFileSHA512_exist_in_the_incident": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@empty(body('Parse_Alerts_Custom_Data_into_JSON')?['Url'])",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Parse_Alerts_Custom_Data_into_JSON": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_Each_Alerts')?['properties']?['additionalData']?['Custom Details']",
                            "schema": {
                              "properties": {
                                "DstDomain": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "DstHostname": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "DstIpAddr": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "DstMacAddr": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "SrcDomain": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "SrcFileMD5": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "SrcFileSHA1": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "SrcFileSHA256": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "SrcFileSHA512": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "SrcHostname": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "SrcIpAddr": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "SrcMacAddr": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "TargetFileMD5": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "TargetFileSHA1": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "TargetFileSHA256": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "TargetFileSHA512": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "Url": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_categories": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Get_ClientId": {
                      "runAfter": {
                        "For_Each_Alerts": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('DataMinrPulse-clientId')}/value"
                      },
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "inputs",
                            "outputs"
                          ]
                        }
                      }
                    },
                    "Get_ClientSecret": {
                      "runAfter": {
                        "Get_ClientId": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('DataMinrPulse-clientSecret')}/value"
                      },
                      "runtimeConfiguration": {
                        "secureData": {
                          "properties": [
                            "inputs",
                            "outputs"
                          ]
                        }
                      }
                    },
                    "If_alerts_contain_data": {
                      "actions": {
                        "For_each_alert": {
                          "foreach": "@body('Parse_Alerts_Data_into_JSON')?['data']?['alerts']",
                          "actions": {
                            "Add_comment_to_incident_when_matching_alert_data_found": {
                              "runAfter": {
                                "If_cyber_metadata_contains_hashValues": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p><span style=\"font-size: 14px\"><strong>alertId: </strong></span>@{items('For_each_alert')?['alertId']}<br>\n<span style=\"font-size: 14px\"><strong>eventTime: </strong></span><span style=\"font-size: 12px\"></span><span style=\"font-size: 12px\">@{addToTime('1970-01-01T00:00:00Z',div(int(items('For_each_alert')?['eventTime']),1000),'second')}</span><span style=\"font-size: 12px\"></span><span style=\"font-size: 14px\"><strong><br>\nwatchlistsMatchedByType: </strong></span><span style=\"font-size: 14px\"><strong>@{variables('watchlistsMatchedByType')}</strong></span><span style=\"font-size: 14px\"><strong></strong></span><br>\n<span style=\"font-size: 14px\"><strong>source_channels :</strong></span> @{items('For_each_alert')?['source']?['channels']}<br>\n<span style=\"font-size: 14px\"><strong>caption :</strong></span> @{items('For_each_alert')?['caption']}<br>\n<span style=\"font-size: 14px\"><strong>alertType :</strong></span> @{items('For_each_alert')?['alertType']?['id']}<br>\n<span style=\"font-size: 14px\"><strong>related Terms:</strong></span><span style=\"font-size: 14px\"> </span><span style=\"font-size: 14px\">@{variables('relatedTermsText')}</span><span style=\"font-size: 14px\"><br>\n</span><span style=\"font-size: 14px\"><strong>expandAlertURL:</strong></span><strong> </strong>@{items('For_each_alert')?['expandAlertURL']}<br>\n<span style=\"font-size: 14px\"><strong>categories:</strong></span><span style=\"font-size: 14px\"> </span><span style=\"font-size: 14px\">@{variables('categories')}</span><span style=\"font-size: 14px\"><br>\n</span><span style=\"font-size: 14px\"><strong>companies:</strong></span><span style=\"font-size: 12px\"> </span><span style=\"font-size: 12px\">@{variables('companies')}</span><span style=\"font-size: 12px\"></span><span style=\"font-size: 14px\"><strong><br>\neventLocation related details<br>\n</strong></span><span style=\"font-size: 12px\"><strong>coordinates: </strong></span><span style=\"font-size: 12px\"></span><span style=\"font-size: 12px\">@{items('For_each_alert')?['eventLocation']?['coordinates']}</span><span style=\"font-size: 12px\"><br>\n</span><span style=\"font-size: 12px\"><strong>name:</strong></span><span style=\"font-size: 12px\"> </span><span style=\"font-size: 12px\">@{items('For_each_alert')?['eventLocation']?['name']}</span><span style=\"font-size: 12px\"><br>\n</span><span style=\"font-size: 14px\"><br>\n</span><span style=\"font-size: 14px\"><strong>CYBER related metadata</strong></span><span style=\"font-size: 14px\"><br>\n</span><strong>vulnerabilities : </strong>@{variables('vulnerabilities')}<br>\n<strong>ip addresses :</strong> @{variables('ip')}<strong><br>\nport : </strong>@{variables('port')}<strong><br>\nasns :</strong> @{variables('asns')}<br>\n<strong>orgs : </strong>@{items('For_each_alert')?['metadata']?['cyber']?['orgs']}<br>\n<strong>products : </strong>@{items('For_each_alert')?['metadata']?['cyber']?['products']}<br>\n<strong>URLs : </strong>@{items('For_each_alert')?['metadata']?['cyber']?['URLs']}<br>\n<strong>threats : </strong>@{items('For_each_alert')?['metadata']?['cyber']?['threats']}<br>\n<strong>asOrgs : </strong><strong>@{variables('asOrg')}</strong><strong><br>\nhashes : </strong>@{variables('hashValues')}<br>\n<strong>Malwares :</strong> @{items('For_each_alert')?['metadata']?['cyber']?['malwares']}</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              }
                            },
                            "If_alerts_contain_Companies": {
                              "actions": {
                                "For_each_companies": {
                                  "foreach": "@items('For_each_alert')['companies']",
                                  "actions": {
                                    "Append_name_to_companies": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "companies",
                                        "value": "@if(contains(items('For_each_companies'),'name'),items('For_each_companies')?['name'],'')"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {
                                "If_alerts_contain_watchlistsMatchedByType_property": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@contains(items('For_each_alert'),'companies')",
                                      true
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "If_alerts_contain_categories_property": {
                              "actions": {
                                "For_each_category": {
                                  "foreach": "@items('For_each_alert')?['categories']",
                                  "actions": {
                                    "Append_name_to_categories": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "categories",
                                        "value": "@if(contains(items('For_each_category'),'name'),items('For_each_category')?['name'],'')"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {
                                "If_alerts_contain_related_Terms": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@contains(items('For_each_alert'),'categories')",
                                      true
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "If_alerts_contain_related_Terms": {
                              "actions": {
                                "For_each_related_Terms": {
                                  "foreach": "@items('For_each_alert')?['relatedTerms']",
                                  "actions": {
                                    "Append_text_to_relatedTermsText": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "relatedTermsText",
                                        "value": "@if(contains(items('For_each_related_Terms'),'text'),items('For_each_related_Terms')?['text'],'')"
                                      }
                                    },
                                    "Append_url_to_relatedTermsUrl": {
                                      "runAfter": {
                                        "Append_text_to_relatedTermsText": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "relatedTermsUrl",
                                        "value": "@if(contains(items('For_each_related_Terms'),'url'),items('For_each_related_Terms')?['url'],'')"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@contains(items('For_each_alert'),'relatedTerms')",
                                      true
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "If_alerts_contain_watchlistsMatchedByType_property": {
                              "actions": {
                                "For_each_watchlists": {
                                  "foreach": "@items('For_each_alert')['watchlistsMatchedByType']",
                                  "actions": {
                                    "Append_name_to_watchlistsMatchedByType": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "watchlistsMatchedByType",
                                        "value": "@if(contains(items('For_each_watchlists'),'name'),items('For_each_watchlists')?['name'],'')"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {
                                "If_alerts_contain_categories_property": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@contains(items('For_each_alert'),'watchlistsMatchedByType')",
                                      true
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "If_cyber_metadata_contains_addresses": {
                              "actions": {
                                "For_each_cyber_addresses": {
                                  "foreach": "@items('For_each_alert')['metadata']['cyber']['addresses']",
                                  "actions": {
                                    "Set_ip": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "ip",
                                        "value": "@{if(contains(items('For_each_cyber_addresses'),'ip'),items('For_each_cyber_addresses')?['ip'],'')}"
                                      }
                                    },
                                    "Set_port": {
                                      "runAfter": {
                                        "Set_ip": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "port",
                                        "value": "@{if(contains(items('For_each_cyber_addresses'),'port'),items('For_each_cyber_addresses')?['port'],'')}"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {
                                "If_alerts_contain_Companies": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@if(contains(items('For_each_alert'),'metadata'),if(contains(items('For_each_alert')?['metadata'],'cyber'),if(contains(items('For_each_alert')?['metadata']?['cyber'],'addresses'),true,false),false),false)",
                                      true
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "If_cyber_metadata_contains_asOrgs": {
                              "actions": {
                                "For_each_asOrgs": {
                                  "foreach": "@items('For_each_alert')?['metadata']?['cyber']?['asOrgs']",
                                  "actions": {
                                    "Append_asn_to_asns": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "asns",
                                        "value": "@if(contains(items('For_each_asOrgs'),'asn'),items('For_each_asOrgs')?['asn'],'')"
                                      }
                                    },
                                    "Append_to_array_variable": {
                                      "runAfter": {
                                        "Append_asn_to_asns": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "asOrg",
                                        "value": "@if(contains(items('For_each_asOrgs'),'asOrg'),items('For_each_asOrgs')?['asOrg'],'')"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {
                                "Ifcyber_metadata_contains_vulnerabilities": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@if(contains(items('For_each_alert'),'metadata'),if(contains(items('For_each_alert')?['metadata'],'cyber'),if(contains(items('For_each_alert')?['metadata']?['cyber'],'asOrgs'),true,false),false),false)",
                                      "@true"
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "If_cyber_metadata_contains_hashValues": {
                              "actions": {
                                "For_each_hashValues": {
                                  "foreach": "@items('For_each_alert')?['metadata']?['cyber']?['hashValues']",
                                  "actions": {
                                    "Append_to_array_hashValues": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "hashValues",
                                        "value": "@if(contains(items('For_each_hashValues'),'value'),items('For_each_hashValues')?['value'],'')"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {
                                "If_cyber_metadata_contains_asOrgs": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@if(contains(items('For_each_alert'),'metadata'),if(contains(items('For_each_alert')?['metadata'],'cyber'),if(contains(items('For_each_alert')?['metadata']?['cyber'],'hashValues'),true,false),false),false)",
                                      "@true"
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Ifcyber_metadata_contains_vulnerabilities": {
                              "actions": {
                                "For_each_vulnerabilities": {
                                  "foreach": "@items('For_each_alert')?['metadata']?['cyber']?['vulnerabilities']",
                                  "actions": {
                                    "Append_id_to_velnerabilities": {
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "vulnerabilities",
                                        "value": "@if(contains(items('For_each_vulnerabilities'),'id'),items('For_each_vulnerabilities')?['id'],'')"
                                      }
                                    }
                                  },
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {
                                "If_cyber_metadata_contains_addresses": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@if(contains(items('For_each_alert'),'metadata'),if(contains(items('For_each_alert')?['metadata'],'cyber'),if(contains(items('For_each_alert')?['metadata']?['cyber'],'vulnerabilities'),true,false),false),false)",
                                      true
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Set_asOrg_to_empty": {
                              "runAfter": {
                                "Set_asns_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "asOrg",
                                "value": "@null"
                              }
                            },
                            "Set_asns_to_empty": {
                              "runAfter": {
                                "Set_vulnerabilities_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "asns",
                                "value": "@null"
                              }
                            },
                            "Set_categories": {
                              "runAfter": {
                                "Add_comment_to_incident_when_matching_alert_data_found": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "categories",
                                "value": "@null"
                              }
                            },
                            "Set_companies_to_empty": {
                              "runAfter": {
                                "Set_relatedTermsUrl": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "companies",
                                "value": "@null"
                              }
                            },
                            "Set_hashValues_to_empty": {
                              "runAfter": {
                                "Set_asOrg_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "hashValues",
                                "value": "@null"
                              }
                            },
                            "Set_relatedTermsText": {
                              "runAfter": {
                                "Set_categories": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "relatedTermsText",
                                "value": "@null"
                              }
                            },
                            "Set_relatedTermsUrl": {
                              "runAfter": {
                                "Set_relatedTermsText": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "relatedTermsUrl",
                                "value": "@null"
                              }
                            },
                            "Set_vulnerabilities_to_empty": {
                              "runAfter": {
                                "Set_watchlistsMatchedByType_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "vulnerabilities",
                                "value": "@null"
                              }
                            },
                            "Set_watchlistsMatchedByType_to_empty": {
                              "runAfter": {
                                "Set_companies_to_empty": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "watchlistsMatchedByType",
                                "value": "@null"
                              }
                            }
                          },
                          "type": "Foreach",
                          "runtimeConfiguration": {
                            "concurrency": {
                              "repetitions": 1
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "If_status_code_is_not_200": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Add_comment_to_incident_when_no_matching_alert_data_found": {
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                "message": "<p>No data found from DataminrPulse related to &nbsp;query parameter : @{variables('query')}</p>"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "post",
                              "path": "/Incidents/Comment"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@empty(body('Parse_Alerts_Data_into_JSON')?['data']?['alerts'])",
                              false
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "If_loop_exit_due_to_authentication_error": {
                      "actions": {
                        "Terminate_": {
                          "type": "Terminate",
                          "inputs": {
                            "runError": {
                              "code": "@{outputs('Generate_auth_token')['statusCode']}",
                              "message": "@variables('AuthErrorMessage')"
                            },
                            "runStatus": "Failed"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_hashValues": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@empty(variables('AuthErrorMessage'))",
                              false
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "If_status_code_is_not_200": {
                      "actions": {
                        "Terminate": {
                          "type": "Terminate",
                          "inputs": {
                            "runError": {
                              "code": "@{outputs('Get_Alerts_from_Dataminr_Pulse_API')['statusCode']}",
                              "message": "@{body('Get_Alerts_from_Dataminr_Pulse_API')?['errors'][0]?['message']}"
                            },
                            "runStatus": "Failed"
                          }
                        }
                      },
                      "runAfter": {
                        "If_loop_exit_due_to_authentication_error": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@outputs('Get_Alerts_from_Dataminr_Pulse_API')['statusCode']",
                                200
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_AuthErrorMessage": {
                      "runAfter": {
                        "Initialize_ErrorMessage": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "AuthErrorMessage",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_BaseUrl": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "BaseUrl",
                            "type": "string",
                            "value": "[[parameters('BaseURL')]"
                          }
                        ]
                      }
                    },
                    "Initialize_DmaTokenKey": {
                      "runAfter": {
                        "Initialize_AuthErrorMessage": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "DmaTokenKey",
                            "type": "string",
                            "value": "DataMinrPulse-DmaToken"
                          }
                        ]
                      }
                    },
                    "Initialize_ErrorMessage": {
                      "runAfter": {
                        "Initialize_BaseUrl": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "ErrorMessage",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_ExpireTimeKey": {
                      "runAfter": {
                        "Initialize_RefreshTokenKey": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "ExpireTimeKey",
                            "type": "string",
                            "value": "DataMinrPulse-Expire"
                          }
                        ]
                      }
                    },
                    "Initialize_KeyVaultName": {
                      "runAfter": {
                        "Initialize_ExpireTimeKey": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "KeyVaultName",
                            "type": "string",
                            "value": "[[parameters('KeyVaultName')]"
                          }
                        ]
                      }
                    },
                    "Initialize_RefreshTokenKey": {
                      "runAfter": {
                        "Initialize_DmaTokenKey": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RefreshTokenKey",
                            "type": "string",
                            "value": "DataMinrPulse-RefreshToken"
                          }
                        ]
                      }
                    },
                    "Initialize_asOrg": {
                      "runAfter": {
                        "Initialize_asns": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "asOrg",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_asns": {
                      "runAfter": {
                        "Initialize_vulnerabilities": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "asns",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_categories": {
                      "runAfter": {
                        "Initialize_relatedTermsText": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "categories",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_companies": {
                      "runAfter": {
                        "Initialize_watchlistsMatchedByType": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "companies",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_count": {
                      "runAfter": {
                        "Initialize_query": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "count",
                            "type": "integer",
                            "value": 2
                          }
                        ]
                      }
                    },
                    "Initialize_hashValues": {
                      "runAfter": {
                        "Initialize_asOrg": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "hashValues",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_ip": {
                      "runAfter": {
                        "Initialize_relatedTermsUrl": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "ip",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_port": {
                      "runAfter": {
                        "Initialize_ip": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "port",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_query": {
                      "runAfter": {
                        "Initialize_KeyVaultName": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "query",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_relatedTermsText": {
                      "runAfter": {
                        "Initialize_count": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "relatedTermsText",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_relatedTermsUrl": {
                      "runAfter": {
                        "Initialize_companies": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "relatedTermsUrl",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_vulnerabilities": {
                      "runAfter": {
                        "Initialize_port": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "vulnerabilities",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_watchlistsMatchedByType": {
                      "runAfter": {
                        "Until_retry_count_gets_0": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "watchlistsMatchedByType",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Until_retry_count_gets_0": {
                      "actions": {
                        "Get_Alerts_from_Dataminr_Pulse_API": {
                          "runAfter": {
                            "Get_DmaToken": [
                              "Succeeded"
                            ]
                          },
                          "type": "Http",
                          "inputs": {
                            "headers": {
                              "Authorization": "Dmauth @{body('Get_DmaToken')?['value']}"
                            },
                            "method": "GET",
                            "queries": {
                              "alertversion": "14",
                              "query": "@variables('query')"
                            },
                            "uri": "@{concat(variables('BaseUrl'),'api/3/alerts')}"
                          }
                        },
                        "Get_DmaToken": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['keyvault']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/secrets/@{encodeURIComponent('DataMinrPulse-DmaToken')}/value"
                          },
                          "runtimeConfiguration": {
                            "secureData": {
                              "properties": [
                                "inputs",
                                "outputs"
                              ]
                            }
                          }
                        },
                        "_if_status_code_is_200": {
                          "actions": {
                            "Parse_Alerts_Data_into_JSON": {
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Get_Alerts_from_Dataminr_Pulse_API')",
                                "schema": {
                                  "properties": {
                                    "data": {
                                      "properties": {
                                        "alerts": {
                                          "items": {
                                            "properties": {
                                              "alertId": {
                                                "type": "string"
                                              },
                                              "alertType": {
                                                "properties": {
                                                  "color": {
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "availableRelatedAlerts": {
                                                "type": "integer"
                                              },
                                              "caption": {
                                                "type": "string"
                                              },
                                              "categories": {
                                                "items": {
                                                  "properties": {
                                                    "id": {
                                                      "type": "string"
                                                    },
                                                    "idStr": {
                                                      "type": "string"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "path": {
                                                      "type": "string"
                                                    },
                                                    "requested": {
                                                      "type": "string"
                                                    },
                                                    "retired": {
                                                      "type": "boolean"
                                                    },
                                                    "topicType": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "companies": {
                                                "items": {
                                                  "properties": {
                                                    "dm_bucket": {
                                                      "items": {
                                                        "properties": {
                                                          "id": {
                                                            "type": "string"
                                                          },
                                                          "name": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    },
                                                    "dm_sector": {
                                                      "items": {
                                                        "properties": {
                                                          "id": {
                                                            "type": "string"
                                                          },
                                                          "name": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    },
                                                    "id": {
                                                      "type": "string"
                                                    },
                                                    "idStr": {
                                                      "type": "string"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "retired": {
                                                      "type": "boolean"
                                                    },
                                                    "ticker": {
                                                      "type": "string"
                                                    },
                                                    "topicType": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "eventLocation": {
                                                "properties": {
                                                  "coordinates": {
                                                    "items": {
                                                      "type": "number"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "places": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "probability": {
                                                    "type": "integer"
                                                  },
                                                  "radius": {
                                                    "type": [
                                                      "number",
                                                      "integer"
                                                    ]
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "eventMapLargeURL": {
                                                "type": "string"
                                              },
                                              "eventMapSmallURL": {
                                                "type": "string"
                                              },
                                              "eventTime": {
                                                "type": "integer"
                                              },
                                              "eventVolume": {
                                                "type": "integer"
                                              },
                                              "expandAlertURL": {
                                                "type": "string"
                                              },
                                              "expandMapURL": {
                                                "type": "string"
                                              },
                                              "headerColor": {
                                                "type": "string"
                                              },
                                              "headerLabel": {
                                                "type": "string"
                                              },
                                              "metadata": {
                                                "properties": {
                                                  "cyber": {
                                                    "properties": {
                                                      "URLs": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "addresses": {
                                                        "items": {
                                                          "properties": {
                                                            "ip": {
                                                              "type": "string"
                                                            },
                                                            "port": {
                                                              "type": "integer"
                                                            },
                                                            "version": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "asOrgs": {
                                                        "items": {
                                                          "properties": {
                                                            "asOrg": {
                                                              "type": "string"
                                                            },
                                                            "asn": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "asns": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "hashValues": {
                                                        "items": {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "hashes": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "malwares": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "orgs": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "products": {
                                                        "items": {
                                                          "properties": {
                                                            "productName": {
                                                              "type": "string"
                                                            },
                                                            "productVendor": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": [
                                                            "object",
                                                            "string"
                                                          ]
                                                        },
                                                        "type": "array"
                                                      },
                                                      "threats": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "vulnerabilities": {
                                                        "items": {
                                                          "properties": {
                                                            "id": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object"
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "post": {
                                                "properties": {
                                                  "languages": {
                                                    "items": {
                                                      "properties": {
                                                        "lang": {
                                                          "type": "string"
                                                        },
                                                        "position": {
                                                          "type": "integer"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "link": {
                                                    "type": "string"
                                                  },
                                                  "media": {
                                                    "type": "array"
                                                  },
                                                  "text": {
                                                    "type": "string"
                                                  },
                                                  "timestamp": {
                                                    "type": "integer"
                                                  },
                                                  "translatedText": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "publisherCategory": {
                                                "properties": {
                                                  "color": {
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "shortName": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "relatedTerms": {
                                                "items": {
                                                  "properties": {
                                                    "text": {
                                                      "type": "string"
                                                    },
                                                    "url": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "relatedTermsQueryURL": {
                                                "type": "string"
                                              },
                                              "sectors": {
                                                "items": {
                                                  "properties": {
                                                    "id": {
                                                      "type": "string"
                                                    },
                                                    "idStr": {
                                                      "type": "string"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "retired": {
                                                      "type": "boolean"
                                                    },
                                                    "topicType": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "source": {
                                                "properties": {
                                                  "channels": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "verified": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "subCaption": {
                                                "properties": {
                                                  "bullets": {
                                                    "properties": {
                                                      "content": {
                                                        "type": "string"
                                                      },
                                                      "media": {
                                                        "type": "string"
                                                      },
                                                      "source": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "userRecentImages": {
                                                "type": "array"
                                              },
                                              "userTopHashtags": {
                                                "type": "array"
                                              },
                                              "watchlistsMatchedByType": {
                                                "items": {
                                                  "properties": {
                                                    "externalTopicIds": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    },
                                                    "id": {
                                                      "type": "string"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "userProperties": {
                                                      "properties": {
                                                        "omnilist": {
                                                          "type": "string"
                                                        },
                                                        "uiListType": {
                                                          "type": "string"
                                                        },
                                                        "watchlistColor": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "type": "object"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "from": {
                                          "type": "string"
                                        },
                                        "to": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Set_count_variable_to_0": {
                              "runAfter": {
                                "Parse_Alerts_Data_into_JSON": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "count",
                                "value": 0
                              }
                            }
                          },
                          "runAfter": {
                            "Get_Alerts_from_Dataminr_Pulse_API": [
                              "Succeeded",
                              "Failed"
                            ]
                          },
                          "else": {
                            "actions": {
                              "_if_status_code_is_401": {
                                "actions": {
                                  "Generate_auth_token": {
                                    "type": "Http",
                                    "inputs": {
                                      "body": "client_id=@{body('Get_ClientId')?['value']}&client_secret=@{body('Get_ClientSecret')?['value']}&grant_type=api_key",
                                      "headers": {
                                        "Content-Type": "application/x-www-form-urlencoded"
                                      },
                                      "method": "POST",
                                      "uri": "@{concat(variables('BaseUrl'),'auth/2/token')}"
                                    },
                                    "runtimeConfiguration": {
                                      "secureData": {
                                        "properties": [
                                          "outputs"
                                        ]
                                      }
                                    }
                                  },
                                  "If_Generate_auth_token_status_code_is_200": {
                                    "actions": {
                                      "If_Update_DmaToken_status_code_is_200": {
                                        "runAfter": {
                                          "Update_DmaToken_in_Keyvault": [
                                            "Succeeded",
                                            "Failed"
                                          ]
                                        },
                                        "else": {
                                          "actions": {
                                            "Set_AuthErrorMessage_for_updating_DmaToken": {
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "AuthErrorMessage",
                                                "value": "Error:@{body('Update_DmaToken_in_Keyvault')?['error']?['message']}"
                                              }
                                            },
                                            "Set_count_equals_to_0": {
                                              "runAfter": {
                                                "Set_AuthErrorMessage_for_updating_DmaToken": [
                                                  "Succeeded"
                                                ]
                                              },
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "count",
                                                "value": 0
                                              }
                                            }
                                          }
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "equals": [
                                                "@outputs('Update_DmaToken_in_Keyvault')['statusCode']",
                                                200
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      },
                                      "Parse_JSON": {
                                        "type": "ParseJson",
                                        "inputs": {
                                          "content": "@body('Generate_auth_token')",
                                          "schema": {
                                            "properties": {
                                              "dmaToken": {
                                                "type": "string"
                                              },
                                              "expire": {
                                                "type": "integer"
                                              },
                                              "refreshToken": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "Update_DmaToken_in_Keyvault": {
                                        "runAfter": {
                                          "Parse_JSON": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "Http",
                                        "inputs": {
                                          "authentication": {
                                            "audience": "[[concat('https://',parameters('azure key vault'),'.net')]",
                                            "type": "ManagedServiceIdentity"
                                          },
                                          "body": {
                                            "value": "@{body('Parse_JSON')?['dmaToken']}"
                                          },
                                          "method": "PUT",
                                          "uri": "@{concat('https://',variables('KeyVaultName'),'.',parameters('azure key vault'),'.net/secrets/',body('Get_DmaToken')?['name'],'?api-version=7.2')}"
                                        }
                                      },
                                      "if_count_value_is_greater_than_0": {
                                        "actions": {
                                          "Decrement_count_by_1": {
                                            "type": "DecrementVariable",
                                            "inputs": {
                                              "name": "count",
                                              "value": 1
                                            }
                                          }
                                        },
                                        "runAfter": {
                                          "If_Update_DmaToken_status_code_is_200": [
                                            "Succeeded",
                                            "Failed",
                                            "Skipped"
                                          ]
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "greater": [
                                                "@variables('count')",
                                                0
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      }
                                    },
                                    "runAfter": {
                                      "Generate_auth_token": [
                                        "Succeeded",
                                        "Failed"
                                      ]
                                    },
                                    "else": {
                                      "actions": {
                                        "Set_ErrorMessage": {
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "AuthErrorMessage",
                                            "value": "Message:@{body('Generate_auth_token')?['errors'][0]?['message']}"
                                          }
                                        },
                                        "Set_count_to_0_as_error_in_authentication": {
                                          "runAfter": {
                                            "Set_ErrorMessage": [
                                              "Succeeded"
                                            ]
                                          },
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "count",
                                            "value": 0
                                          }
                                        }
                                      }
                                    },
                                    "expression": {
                                      "and": [
                                        {
                                          "equals": [
                                            "@outputs('Generate_auth_token')['statusCode']",
                                            200
                                          ]
                                        }
                                      ]
                                    },
                                    "type": "If"
                                  }
                                },
                                "else": {
                                  "actions": {
                                    "Set_Errormessage_ofr_status_code_other_than_200_and_401": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "ErrorMessage",
                                        "value": "Error:@{body('Get_Alerts_from_Dataminr_Pulse_API')?['errors'][0]?['message']}"
                                      }
                                    },
                                    "Set_retry_count_to_0": {
                                      "runAfter": {
                                        "Set_Errormessage_ofr_status_code_other_than_200_and_401": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "count",
                                        "value": 0
                                      }
                                    }
                                  }
                                },
                                "expression": {
                                  "and": [
                                    {
                                      "equals": [
                                        "@outputs('Get_Alerts_from_Dataminr_Pulse_API')['statusCode']",
                                        401
                                      ]
                                    }
                                  ]
                                },
                                "type": "If"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@outputs('Get_Alerts_from_Dataminr_Pulse_API')['statusCode']",
                                  200
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Get_ClientSecret": [
                          "Succeeded"
                        ]
                      },
                      "expression": "@equals(variables('count'), 0)",
                      "limit": {
                        "count": 60,
                        "timeout": "PT1H"
                      },
                      "type": "Until"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Keyvault')]"
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "DataminrPulseAlertEnrichment",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2019-05-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('KeyvaultConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('KeyvaultConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-3')]"
                },
                "parameterValues": {
                  "token:TenantId": "[[parameters('tenantId')]",
                  "token:grantType": "code",
                  "vaultName": "[[parameters('keyvaultName')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dataminr Pulse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dataminr",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dataminr Support",
                  "email": "support@dataminr.com",
                  "tier": "Partner",
                  "link": "https://www.dataminr.com/dataminr-support#support"
                }
              }
            }
          ],
          "metadata": {
            "title": "DataminrPulseAlertEnrichment",
            "description": "This playbook provides an end-to-end example of how alert enrichment works. This will extract the IP, Domain, HostName, URL or Hashes from the generated incident and call the Get alerts API of Dataminr Pulse to get the data associated with that parameter and enrich the incident by adding Dataminr Pulse alerts data as an incident comment.",
            "prerequisites": [
              "1. Users must have a valid pair of Dataminr Pulse API Client ID and secret credentials.",
              "2. Store client credentials in Key Vault and obtain keyvault name and tenantId.",
              "a. Create a Key Vault with unique name",
              "b. Go to KeyVault -> secrets -> Generate/import and create 'DataMinrPulse-clientId'& 'DataMinrPulse-clientSecret' to store client_id and client_secret respectively. Also create a secret named 'DataMinrPulse-DmaToken' to store dmaToken."
            ],
            "postDeployment": [
              "**a. Authorize connections**",
              "Once deployment is complete, authorize each connection.",
              "1. Click the Keyvault connection resource",
              "2. Click edit API connection",
              "3. Click Authorize",
              "4. Sign in",
              "5. Click Save",
              "6. Repeat steps for other connections",
              "**b. Assign Role to add comment in incident**",
              "After authorizing each connection, assign role to this playbook.",
              "1. Go to Log Analytics Workspace → <your workspace> → Access Control → Add",
              "2.Add role assignment",
              "3.Assignment type: Job function roles",
              "4.Role: Microsoft Sentinel Contributor",
              "5.Members: select managed identity for assigned access to and add your logic app as member as shown in screenshot below",
              "6.Click on review+assign",
              "**c. Add Access policy in Keyvault**",
              "Add access policy for playbook's managed identity to read, write secrets of keyvault.",
              "1. Go to logic app → <your logic app> → identity → System assigned Managed identity and copied it.",
              "2. Go to keyvaults → <your keyvault> → Access policies → create.",
              "3. Select all keys & secrets permissions. Click next.",
              "4. In principal section, search by copied identity object ID. Click next.",
              "5. Click review + create.",
              "**d. Configurations in Sentinel**",
              "1. In Microsoft sentinel, Configure the analytic rules to trigger an incident.",
              "a. Analytic Rule must contain atleast one of the below fields mapped in Custom Details to successfully run this playbook.",
              "DstDomain",
              "DstHostname",
              "DstIpAddr",
              "DstMacAddr",
              "SrcDomain",
              "SrcFileMD5",
              "SrcFileSHA1",
              "SrcFileSHA256",
              "SrcFileSHA512",
              "SrcHostname",
              "SrcIpAddr",
              "SrcMacAddr",
              "TargetFileMD5",
              "TargetFileSHA1",
              "TargetFileSHA256",
              "TargetFileSHA512",
              "Url",
              "2. In Microsoft Sentinel, Configure the automation rules to trigger the playbook.",
              "a. Go to Microsoft Sentinel -> <your workspace> -> Automation",
              "b. Click on **Create** -> **Automation rule**",
              "c. Provide name for your rule",
              "d. In Analytic rule name condition, select analytic rule which you have created.",
              "e. In Actions dropdown select **Run playbook**",
              "f. In second dropdown select your deployed playbook",
              "g. Click on **Apply**",
              "h. Save the Automation rule."
            ],
            "entities": [
              "IP",
              "Host",
              "URL",
              "FileHash"
            ],
            "tags": [
              "Dataminr",
              "Pulse",
              "alerting",
              "enrichment"
            ],
            "lastUpdateTime": "2023-09-07T12:15:00Z",
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "DataminrPulseAlertEnrichment",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DataminrPulseAlerts Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for DataminrPulseAlerts",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "DataminrPulseAlerts",
                "query": "let DataminrPulseAlerts_view = view() {\n    DataminrPulse_Alerts_CL\n    | extend category = parse_json(categories_s)\n    | mv-apply category on (summarize CategoryNames = make_list(category.name))\n    | extend company = parse_json(companies_s)\n    | mv-apply company on (summarize CompanyNames = make_list(company.name))\n    | extend watchlist = parse_json(watchlistsMatchedByType_s)\n    | mv-apply watchlist on (summarize WatchlistNames = make_list(watchlist.name))\n    | summarize any(*) by index_s\n    | extend\n        EventVendor=\"Dataminr\",\n        EventProduct=\"Pulse\",\n        AlertId = column_ifexists('index_s', ''),\n        AlertType = column_ifexists('any_alertType_name_s', ''),\n        AvailableRelatedAlerts = column_ifexists('any_availableRelatedAlerts_d', ''),\n        Caption = column_ifexists('any_headline_s', ''),\n        Company = column_ifexists('any_companies_s', ''),\n        CompanyNames = tostring(column_ifexists('any_CompanyNames', '')),\n        Category = column_ifexists('any_categories_s', ''),\n        CategoryNames = tostring(column_ifexists('any_CategoryNames', '')),\n        Latitude = column_ifexists('any_location_latitude_d', ''),\n        Longitude = column_ifexists('any_location_longitude_d', ''),\n        EventLocationName = column_ifexists('any_location_name_s', ''),\n        EventLocationPlace = column_ifexists('any_location_places_s', ''),\n        EventLocationProbability = column_ifexists('any_location_probability_d', ''),\n        EventLocationRadius = column_ifexists('any_location_radius_d', ''),\n        EventSource = column_ifexists('any_headlineData_via_s', ''),\n        EventTime = column_ifexists('any_timestamp_d', ''),\n        EventVolume = column_ifexists('any_volume_d', ''),\n        EmbeddedLabels = column_ifexists('any__embedded_labels_s', ''),\n        PostLanguagae = column_ifexists('any_odsStatus_languages_s', ''),\n        PostLink = column_ifexists('any_odsStatus_link_s', ''),\n        PostMedia = column_ifexists('any_odsStatus_media_s', ''),\n        PostText = column_ifexists('any_odsStatus_text_s', ''),\n        PostTimestamp = column_ifexists('any_odsStatus_timestamp_d', ''),\n        PostTranslatedText = column_ifexists('any_odsStatus_translatedText_s', ''),\n        PublisherCategoryName = column_ifexists('any_publisherCategory_name_s', ''),\n        RelatedTerms = column_ifexists('any_referenceTerms_s', ''),\n        Sectors = column_ifexists('any_sectors_s', ''),\n        SourceChannels = column_ifexists('any_odsStatus_source_channels_s', ''),\n        SourceDisplayName = column_ifexists('any_odsStatus_source_display_name_s', ''),\n        SourceEntityName = column_ifexists('any_odsStatus_source_entity_name_s', ''),\n        SourceLink = column_ifexists('any_odsStatus_source_link_s', ''),\n        SourceVerified = column_ifexists('any_odsStatus_source_verified_s', ''),\n        SubCaptionBulletsContent = column_ifexists('any_dataMap_bullets_content_s', ''),\n        SubCaptionBulletsMedia = column_ifexists('any_dataMap_bullets_media_s', ''),\n        SubCaptionBulletsSource = column_ifexists('any_dataMap_bullets_source_s', ''),\n        WatchlistsMatchedByType = column_ifexists('any_watchlistsMatchedByType_s', ''),\n        WatchlistNames = tostring(column_ifexists('any_WatchlistNames', ''))\n    | project-rename TimeGenerated = any_TimeGenerated\n    | project\n        TimeGenerated,\n        EventVendor,\n        EventProduct,\n        AlertId,\n        AlertType,\n        AvailableRelatedAlerts,\n        Caption,\n        Company,\n        CompanyNames,\n        Category,\n        CategoryNames,\n        Latitude,\n        Longitude,\n        EventLocationName,\n        EventLocationPlace,\n        EventLocationProbability,\n        EventLocationRadius,\n        EventSource,\n        EventTime,\n        EventVolume,\n        EmbeddedLabels,\n        PostLanguagae,\n        PostLink,\n        PostMedia,\n        PostText,\n        PostTimestamp,\n        PostTranslatedText,\n        PublisherCategoryName,\n        RelatedTerms,\n        Sectors,\n        SourceChannels,\n        SourceDisplayName,\n        SourceEntityName,\n        SourceLink,\n        SourceVerified,\n        SubCaptionBulletsContent,\n        SubCaptionBulletsMedia,\n        SubCaptionBulletsSource,\n        WatchlistsMatchedByType,\n        WatchlistNames\n};\nDataminrPulseAlerts_view\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DataminrPulseAlerts')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Dataminr Pulse",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dataminr",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dataminr Support",
                  "email": "support@dataminr.com",
                  "tier": "Partner",
                  "link": "https://www.dataminr.com/dataminr-support#support"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Parser for DataminrPulseAlerts",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for DataminrPulseAlerts",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "DataminrPulseAlerts",
        "query": "let DataminrPulseAlerts_view = view() {\n    DataminrPulse_Alerts_CL\n    | extend category = parse_json(categories_s)\n    | mv-apply category on (summarize CategoryNames = make_list(category.name))\n    | extend company = parse_json(companies_s)\n    | mv-apply company on (summarize CompanyNames = make_list(company.name))\n    | extend watchlist = parse_json(watchlistsMatchedByType_s)\n    | mv-apply watchlist on (summarize WatchlistNames = make_list(watchlist.name))\n    | summarize any(*) by index_s\n    | extend\n        EventVendor=\"Dataminr\",\n        EventProduct=\"Pulse\",\n        AlertId = column_ifexists('index_s', ''),\n        AlertType = column_ifexists('any_alertType_name_s', ''),\n        AvailableRelatedAlerts = column_ifexists('any_availableRelatedAlerts_d', ''),\n        Caption = column_ifexists('any_headline_s', ''),\n        Company = column_ifexists('any_companies_s', ''),\n        CompanyNames = tostring(column_ifexists('any_CompanyNames', '')),\n        Category = column_ifexists('any_categories_s', ''),\n        CategoryNames = tostring(column_ifexists('any_CategoryNames', '')),\n        Latitude = column_ifexists('any_location_latitude_d', ''),\n        Longitude = column_ifexists('any_location_longitude_d', ''),\n        EventLocationName = column_ifexists('any_location_name_s', ''),\n        EventLocationPlace = column_ifexists('any_location_places_s', ''),\n        EventLocationProbability = column_ifexists('any_location_probability_d', ''),\n        EventLocationRadius = column_ifexists('any_location_radius_d', ''),\n        EventSource = column_ifexists('any_headlineData_via_s', ''),\n        EventTime = column_ifexists('any_timestamp_d', ''),\n        EventVolume = column_ifexists('any_volume_d', ''),\n        EmbeddedLabels = column_ifexists('any__embedded_labels_s', ''),\n        PostLanguagae = column_ifexists('any_odsStatus_languages_s', ''),\n        PostLink = column_ifexists('any_odsStatus_link_s', ''),\n        PostMedia = column_ifexists('any_odsStatus_media_s', ''),\n        PostText = column_ifexists('any_odsStatus_text_s', ''),\n        PostTimestamp = column_ifexists('any_odsStatus_timestamp_d', ''),\n        PostTranslatedText = column_ifexists('any_odsStatus_translatedText_s', ''),\n        PublisherCategoryName = column_ifexists('any_publisherCategory_name_s', ''),\n        RelatedTerms = column_ifexists('any_referenceTerms_s', ''),\n        Sectors = column_ifexists('any_sectors_s', ''),\n        SourceChannels = column_ifexists('any_odsStatus_source_channels_s', ''),\n        SourceDisplayName = column_ifexists('any_odsStatus_source_display_name_s', ''),\n        SourceEntityName = column_ifexists('any_odsStatus_source_entity_name_s', ''),\n        SourceLink = column_ifexists('any_odsStatus_source_link_s', ''),\n        SourceVerified = column_ifexists('any_odsStatus_source_verified_s', ''),\n        SubCaptionBulletsContent = column_ifexists('any_dataMap_bullets_content_s', ''),\n        SubCaptionBulletsMedia = column_ifexists('any_dataMap_bullets_media_s', ''),\n        SubCaptionBulletsSource = column_ifexists('any_dataMap_bullets_source_s', ''),\n        WatchlistsMatchedByType = column_ifexists('any_watchlistsMatchedByType_s', ''),\n        WatchlistNames = tostring(column_ifexists('any_WatchlistNames', ''))\n    | project-rename TimeGenerated = any_TimeGenerated\n    | project\n        TimeGenerated,\n        EventVendor,\n        EventProduct,\n        AlertId,\n        AlertType,\n        AvailableRelatedAlerts,\n        Caption,\n        Company,\n        CompanyNames,\n        Category,\n        CategoryNames,\n        Latitude,\n        Longitude,\n        EventLocationName,\n        EventLocationPlace,\n        EventLocationProbability,\n        EventLocationRadius,\n        EventSource,\n        EventTime,\n        EventVolume,\n        EmbeddedLabels,\n        PostLanguagae,\n        PostLink,\n        PostMedia,\n        PostText,\n        PostTimestamp,\n        PostTranslatedText,\n        PublisherCategoryName,\n        RelatedTerms,\n        Sectors,\n        SourceChannels,\n        SourceDisplayName,\n        SourceEntityName,\n        SourceLink,\n        SourceVerified,\n        SubCaptionBulletsContent,\n        SubCaptionBulletsMedia,\n        SubCaptionBulletsSource,\n        WatchlistsMatchedByType,\n        WatchlistNames\n};\nDataminrPulseAlerts_view\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DataminrPulseAlerts')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Dataminr Pulse",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dataminr",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dataminr Support",
          "email": "support@dataminr.com",
          "tier": "Partner",
          "link": "https://www.dataminr.com/dataminr-support#support"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DataminrPulseCyberAlerts Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for DataminrPulseCyberAlerts",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "DataminrPulseCyberAlerts",
                "query": "let DataminrPulseCyberAlerts_view = view() {\n    DataminrPulse_Alerts_CL\n    | mv-expand todynamic(watchlistsMatchedByType_s)\n    | extend property = watchlistsMatchedByType_s[\"userProperties\"]\n    | where property[\"uiListType\"] == \"CYBER\"\n    | extend category = parse_json(categories_s)\n    | mv-apply category on (summarize CategoryNames = make_list(category.name))\n    | extend company = parse_json(companies_s)\n    | mv-apply company on (summarize CompanyNames = make_list(company.name))\n    | extend watchlist = parse_json(watchlistsMatchedByType_s)\n    | mv-apply watchlist on (summarize WatchlistNames = make_list(watchlist.name))\n    | summarize any(*) by index_s\n    | extend\n        EventVendor=\"Dataminr\",\n        EventProduct=\"Pulse\",\n        AlertId = column_ifexists('index_s', ''),\n        AlertType = column_ifexists('any_alertType_name_s', ''),\n        AvailableRelatedAlerts = column_ifexists('any_availableRelatedAlerts_d', ''),\n        Caption = column_ifexists('any_headline_s', ''),\n        Company = column_ifexists('any_companies_s', ''),\n        CompanyNames = tostring(column_ifexists('any_CompanyNames', '')),\n        Category = column_ifexists('any_categories_s', ''),\n        CategoryNames = tostring(column_ifexists('any_CategoryNames', '')),\n        Latitude = column_ifexists('any_location_latitude_d', ''),\n        Longitude = column_ifexists('any_location_longitude_d', ''),\n        EventLocationName = column_ifexists('any_location_name_s', ''),\n        EventLocationPlace = column_ifexists('any_location_places_s', ''),\n        EventLocationProbability = column_ifexists('any_location_probability_d', ''),\n        EventLocationRadius = column_ifexists('any_location_radius_d', ''),\n        EventSource = column_ifexists('any_headlineData_via_s', ''),\n        EventTime = column_ifexists('any_timestamp_d', ''),\n        EventVolume = column_ifexists('any_volume_d', ''),\n        EmbeddedLabels = column_ifexists('any__embedded_labels_s', ''),\n        PostLanguagae = column_ifexists('any_odsStatus_languages_s', ''),\n        PostLink = column_ifexists('any_odsStatus_link_s', ''),\n        PostMedia = column_ifexists('any_odsStatus_media_s', ''),\n        PostText = column_ifexists('any_odsStatus_text_s', ''),\n        PostTimestamp = column_ifexists('any_odsStatus_timestamp_d', ''),\n        PostTranslatedText = column_ifexists('any_odsStatus_translatedText_s', ''),\n        PublisherCategoryName = column_ifexists('any_publisherCategory_name_s', ''),\n        RelatedTerms = column_ifexists('any_referenceTerms_s', ''),\n        Sectors = column_ifexists('any_sectors_s', ''),\n        SourceChannels = column_ifexists('any_odsStatus_source_channels_s', ''),\n        SourceDisplayName = column_ifexists('any_odsStatus_source_display_name_s', ''),\n        SourceEntityName = column_ifexists('any_odsStatus_source_entity_name_s', ''),\n        SourceLink = column_ifexists('any_odsStatus_source_link_s', ''),\n        SourceVerified = column_ifexists('any_odsStatus_source_verified_s', ''),\n        SubCaptionBulletsContent = column_ifexists('any_dataMap_bullets_content_s', ''),\n        SubCaptionBulletsMedia = column_ifexists('any_dataMap_bullets_media_s', ''),\n        SubCaptionBulletsSource = column_ifexists('any_dataMap_bullets_source_s', ''),\n        WatchlistsMatchedByType = column_ifexists('any_watchlistsMatchedByType_s', ''),\n        WatchlistNames = tostring(column_ifexists('any_WatchlistNames', ''))\n    | project-rename TimeGenerated = any_TimeGenerated\n    | project\n        TimeGenerated,\n        EventVendor,\n        EventProduct,\n        AlertId,\n        AlertType,\n        AvailableRelatedAlerts,\n        Caption,\n        Company,\n        CompanyNames,\n        CategoryNames,\n        Category,\n        Latitude,\n        Longitude,\n        EventLocationName,\n        EventLocationPlace,\n        EventLocationProbability,\n        EventLocationRadius,\n        EventSource,\n        EventTime,\n        EventVolume,\n        EmbeddedLabels,\n        PostLanguagae,\n        PostLink,\n        PostMedia,\n        PostText,\n        PostTimestamp,\n        PostTranslatedText,\n        PublisherCategoryName,\n        RelatedTerms,\n        Sectors,\n        SourceChannels,\n        SourceDisplayName,\n        SourceEntityName,\n        SourceLink,\n        SourceVerified,\n        SubCaptionBulletsContent,\n        SubCaptionBulletsMedia,\n        SubCaptionBulletsSource,\n        WatchlistsMatchedByType,\n        WatchlistNames\n};\nDataminrPulseCyberAlerts_view\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DataminrPulseCyberAlerts')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "Dataminr Pulse",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dataminr",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dataminr Support",
                  "email": "support@dataminr.com",
                  "tier": "Partner",
                  "link": "https://www.dataminr.com/dataminr-support#support"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "Parser for DataminrPulseCyberAlerts",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for DataminrPulseCyberAlerts",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "DataminrPulseCyberAlerts",
        "query": "let DataminrPulseCyberAlerts_view = view() {\n    DataminrPulse_Alerts_CL\n    | mv-expand todynamic(watchlistsMatchedByType_s)\n    | extend property = watchlistsMatchedByType_s[\"userProperties\"]\n    | where property[\"uiListType\"] == \"CYBER\"\n    | extend category = parse_json(categories_s)\n    | mv-apply category on (summarize CategoryNames = make_list(category.name))\n    | extend company = parse_json(companies_s)\n    | mv-apply company on (summarize CompanyNames = make_list(company.name))\n    | extend watchlist = parse_json(watchlistsMatchedByType_s)\n    | mv-apply watchlist on (summarize WatchlistNames = make_list(watchlist.name))\n    | summarize any(*) by index_s\n    | extend\n        EventVendor=\"Dataminr\",\n        EventProduct=\"Pulse\",\n        AlertId = column_ifexists('index_s', ''),\n        AlertType = column_ifexists('any_alertType_name_s', ''),\n        AvailableRelatedAlerts = column_ifexists('any_availableRelatedAlerts_d', ''),\n        Caption = column_ifexists('any_headline_s', ''),\n        Company = column_ifexists('any_companies_s', ''),\n        CompanyNames = tostring(column_ifexists('any_CompanyNames', '')),\n        Category = column_ifexists('any_categories_s', ''),\n        CategoryNames = tostring(column_ifexists('any_CategoryNames', '')),\n        Latitude = column_ifexists('any_location_latitude_d', ''),\n        Longitude = column_ifexists('any_location_longitude_d', ''),\n        EventLocationName = column_ifexists('any_location_name_s', ''),\n        EventLocationPlace = column_ifexists('any_location_places_s', ''),\n        EventLocationProbability = column_ifexists('any_location_probability_d', ''),\n        EventLocationRadius = column_ifexists('any_location_radius_d', ''),\n        EventSource = column_ifexists('any_headlineData_via_s', ''),\n        EventTime = column_ifexists('any_timestamp_d', ''),\n        EventVolume = column_ifexists('any_volume_d', ''),\n        EmbeddedLabels = column_ifexists('any__embedded_labels_s', ''),\n        PostLanguagae = column_ifexists('any_odsStatus_languages_s', ''),\n        PostLink = column_ifexists('any_odsStatus_link_s', ''),\n        PostMedia = column_ifexists('any_odsStatus_media_s', ''),\n        PostText = column_ifexists('any_odsStatus_text_s', ''),\n        PostTimestamp = column_ifexists('any_odsStatus_timestamp_d', ''),\n        PostTranslatedText = column_ifexists('any_odsStatus_translatedText_s', ''),\n        PublisherCategoryName = column_ifexists('any_publisherCategory_name_s', ''),\n        RelatedTerms = column_ifexists('any_referenceTerms_s', ''),\n        Sectors = column_ifexists('any_sectors_s', ''),\n        SourceChannels = column_ifexists('any_odsStatus_source_channels_s', ''),\n        SourceDisplayName = column_ifexists('any_odsStatus_source_display_name_s', ''),\n        SourceEntityName = column_ifexists('any_odsStatus_source_entity_name_s', ''),\n        SourceLink = column_ifexists('any_odsStatus_source_link_s', ''),\n        SourceVerified = column_ifexists('any_odsStatus_source_verified_s', ''),\n        SubCaptionBulletsContent = column_ifexists('any_dataMap_bullets_content_s', ''),\n        SubCaptionBulletsMedia = column_ifexists('any_dataMap_bullets_media_s', ''),\n        SubCaptionBulletsSource = column_ifexists('any_dataMap_bullets_source_s', ''),\n        WatchlistsMatchedByType = column_ifexists('any_watchlistsMatchedByType_s', ''),\n        WatchlistNames = tostring(column_ifexists('any_WatchlistNames', ''))\n    | project-rename TimeGenerated = any_TimeGenerated\n    | project\n        TimeGenerated,\n        EventVendor,\n        EventProduct,\n        AlertId,\n        AlertType,\n        AvailableRelatedAlerts,\n        Caption,\n        Company,\n        CompanyNames,\n        CategoryNames,\n        Category,\n        Latitude,\n        Longitude,\n        EventLocationName,\n        EventLocationPlace,\n        EventLocationProbability,\n        EventLocationRadius,\n        EventSource,\n        EventTime,\n        EventVolume,\n        EmbeddedLabels,\n        PostLanguagae,\n        PostLink,\n        PostMedia,\n        PostText,\n        PostTimestamp,\n        PostTranslatedText,\n        PublisherCategoryName,\n        RelatedTerms,\n        Sectors,\n        SourceChannels,\n        SourceDisplayName,\n        SourceEntityName,\n        SourceLink,\n        SourceVerified,\n        SubCaptionBulletsContent,\n        SubCaptionBulletsMedia,\n        SubCaptionBulletsSource,\n        WatchlistsMatchedByType,\n        WatchlistNames\n};\nDataminrPulseCyberAlerts_view\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DataminrPulseCyberAlerts')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "Dataminr Pulse",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dataminr",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dataminr Support",
          "email": "support@dataminr.com",
          "tier": "Partner",
          "link": "https://www.dataminr.com/dataminr-support#support"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Dataminr Pulse data connector with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Dataminr Pulse Alerts Data Connector (using Azure Functions)",
                  "publisher": "Dataminr",
                  "descriptionMarkdown": "Dataminr Pulse Alerts Data Connector brings our AI-powered real-time intelligence into Microsoft Sentinel for faster threat detection and response.",
                  "graphQueries": [
                    {
                      "metricName": "Total Alerts data received",
                      "legend": "DataminrPulse_Alerts_CL",
                      "baseQuery": "DataminrPulse_Alerts_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Dataminr Pulse Alerts Data for all alertTypes",
                      "query": "DataminrPulse_Alerts_CL\n | sort by TimeGenerated desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "DataminrPulse_Alerts_CL",
                      "lastDataReceivedQuery": "DataminrPulse_Alerts_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "DataminrPulse_Alerts_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions on the workspace are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Azure Subscription",
                        "description": "Azure Subscription with owner role is required to register an application in Microsoft Entra ID and assign role of contributor to app in resource group."
                      },
                      {
                        "name": "Microsoft.Web/sites permissions",
                        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                      },
                      {
                        "name": "Required Dataminr Credentials/permissions",
                        "description": "\n\na. Users must have a valid Dataminr Pulse API **client ID** and **secret** to use this data connector.\n\n b. One or more Dataminr Pulse Watchlists must be configured in the Dataminr Pulse website."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This connector uses Azure Functions to connect to the DataminrPulse in which logs are pushed via Dataminr RTAP and it will ingest logs into Microsoft Sentinel. Furthermore, the connector will fetch the ingested data from the custom logs table and create Threat Intelligence Indicators into Microsoft Sentinel Threat Intelligence. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                    },
                    {
                      "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
                    },
                    {
                      "description": "**STEP 1- Credentials for the Dataminr Pulse Client ID and Client Secret**\n\n * Obtain Dataminr Pulse user ID/password and API client ID/secret from your Dataminr Customer Success Manager (CSM)."
                    },
                    {
                      "description": "**STEP 2- Configure Watchlists in Dataminr Pulse portal.**\n\n Follow the steps in this section to configure watchlists in portal:\n\n 1. **Login** to the Dataminr Pulse [website](https://app.dataminr.com).\n\n 2. Click on the settings gear icon, and select **Manage Lists**.\n\n 3. Select the type of Watchlist you want to create (Cyber, Topic, Company, etc.) and click the **New List** button.\n\n 4. Provide a **name** for your new Watchlist, and select a highlight color for it, or keep the default color.\n\n 5. When you are done configuring the Watchlist, click **Save** to save it."
                    },
                    {
                      "description": "**STEP 3 - App Registration steps for the Application in Microsoft Entra ID**\n\n This integration requires an App registration in the Azure portal. Follow the steps in this section to create a new application in Microsoft Entra ID:\n 1. Sign in to the [Azure portal](https://portal.azure.com/).\n 2. Search for and select **Microsoft Entra ID**.\n 3. Under **Manage**, select **App registrations > New registration**.\n 4. Enter a display **Name** for your application.\n 5. Select **Register** to complete the initial app registration.\n 6. When registration finishes, the Azure portal displays the app registration's Overview pane. You see the **Application (client) ID** and **Tenant ID**. The client ID and Tenant ID is required as configuration parameters for the execution of DataminrPulse Data Connector. \n\n> **Reference link:** [https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app](https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app)"
                    },
                    {
                      "description": "**STEP 4 - Add a client secret for application in Microsoft Entra ID**\n\n Sometimes called an application password, a client secret is a string value required for the execution of DataminrPulse Data Connector. Follow the steps in this section to create a new Client Secret:\n 1. In the Azure portal, in **App registrations**, select your application.\n 2. Select **Certificates & secrets > Client secrets > New client secret**.\n 3. Add a description for your client secret.\n 4. Select an expiration for the secret or specify a custom lifetime. Limit is 24 months.\n 5. Select **Add**. \n 6. *Record the secret's value for use in your client application code. This secret value is never displayed again after you leave this page.* The secret value is required as configuration parameter for the execution of DataminrPulse Data Connector. \n\n> **Reference link:** [https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app#add-a-client-secret](https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app#add-a-client-secret)"
                    },
                    {
                      "description": "**STEP 5 - Assign role of Contributor to application in Microsoft Entra ID**\n\n Follow the steps in this section to assign the role:\n 1. In the Azure portal, Go to **Resource Group** and select your resource group.\n 2. Go to **Access control (IAM)** from left panel.\n 3. Click on **Add**, and then select **Add role assignment**.\n 4. Select **Contributor** as role and click on next.\n 5. In **Assign access to**, select `User, group, or service principal`.\n 6. Click on **add members** and type **your app name** that you have created and select it.\n 7. Now click on **Review + assign** and then again click on **Review + assign**. \n\n> **Reference link:** [https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal](https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal)"
                    },
                    {
                      "description": "**STEP 6 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Dataminr Pulse Microsoft Sentinel data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following) readily available.",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Primary Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ]
                    },
                    {
                      "description": "Use this method for automated deployment of the DataminrPulse connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-DataminrPulseAlerts-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the below information : \n\t\tFunction Name \n\t\tWorkspace ID \n\t\tWorkspace Key \n\t\tAlertsTableName \n\t\tBaseURL \n\t\tClientId \n\t\tClientSecret \n\t\tAzureClientId \n\t\tAzureClientSecret \n\t\tAzureTenantId \n\t\tAzureResourceGroupName \n\t\tAzureWorkspaceName \n\t\tAzureSubscriptionId \n\t\tSchedule \n\t\tLogLevel \n \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
                      "title": "Option 1 - Azure Resource Manager (ARM) Template"
                    },
                    {
                      "description": "Use the following step-by-step instructions to deploy the Dataminr Pulse Microsoft Sentinel data connector manually with Azure Functions (Deployment via Visual Studio Code).",
                      "title": "Option 2 - Manual Deployment of Azure Functions"
                    },
                    {
                      "description": "> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-DataminrPulseAlerts-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. DmPulseXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.8 or above.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration.",
                      "title": "1) Deploy a Function App"
                    },
                    {
                      "description": "1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following application settings individually, with their respective values (case-sensitive): \n\t\tFunction Name \n\t\tWorkspace ID \n\t\tWorkspace Key \n\t\tAlertsTableName \n\t\tBaseURL \n\t\tClientId \n\t\tClientSecret\n\t\tAzureClientId \n\t\tAzureClientSecret \n\t\tAzureTenantId \n\t\tAzureResourceGroupName \n\t\tAzureWorkspaceName \n\t\tAzureSubscriptionId \n\t\tSchedule \n\t\tLogLevel\n\t\tlogAnalyticsUri (optional) \n - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n4. Once all application settings have been entered, click **Save**.",
                      "title": "2) Configure the Function App"
                    },
                    {
                      "description": "**STEP 7 - Post Deployment steps**\n\n"
                    },
                    {
                      "description": "1. Go to Azure function Overview page and Click on **\"Functions\"** in the left blade.\n2. Click on the function called **\"DataminrPulseAlertsHttpStarter\"**.\n3. Go to **\"GetFunctionurl\"** and copy the function url.\n4. Replace **{functionname}**  with **\"DataminrPulseAlertsSentinelOrchestrator\"** in copied function url.",
                      "title": "1) Get the Function app endpoint"
                    },
                    {
                      "description": "1. Open any API request tool like Postman.\n2. Click on '+' to create a new request.\n3. Select HTTP request method as **'POST'**.\n4. Enter the url prepapred in **point 1)**, in the request URL part.\n5. In Body, select raw JSON and provide request body as below(case-sensitive): \n\t\t{ \n\t\t \"integration-settings\": \"ADD\", \n\t\t \"url\": \"`(URL part from copied Function-url)`\", \n\t\t \"token\": \"`(value of code parameter from copied Function-url)`\" \n\t\t}\n6. After providing all required details, click **Send**.\n7. You will receive an integration setting ID in the HTTP response with a status code of 200.\n8. Save **Integration ID** for future reference.",
                      "title": "2) To add integration settings in Dataminr RTAP using the function URL"
                    },
                    {
                      "description": "*Now we are done with the adding integration settings for Dataminr RTAP. Once the Dataminr RTAP send an alert data, Function app is triggered and you should be able to see the Alerts data from the Dataminr Pulse into LogAnalytics workspace table called \"DataminrPulse_Alerts_CL\".*\n\n"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dataminr Pulse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dataminr",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dataminr Support",
                  "email": "support@dataminr.com",
                  "tier": "Partner",
                  "link": "https://www.dataminr.com/dataminr-support#support"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Dataminr Pulse Alerts Data Connector (using Azure Functions)",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Dataminr Pulse",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dataminr",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dataminr Support",
          "email": "support@dataminr.com",
          "tier": "Partner",
          "link": "https://www.dataminr.com/dataminr-support#support"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Dataminr Pulse Alerts Data Connector (using Azure Functions)",
          "publisher": "Dataminr",
          "descriptionMarkdown": "Dataminr Pulse Alerts Data Connector brings our AI-powered real-time intelligence into Microsoft Sentinel for faster threat detection and response.",
          "graphQueries": [
            {
              "metricName": "Total Alerts data received",
              "legend": "DataminrPulse_Alerts_CL",
              "baseQuery": "DataminrPulse_Alerts_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "DataminrPulse_Alerts_CL",
              "lastDataReceivedQuery": "DataminrPulse_Alerts_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "DataminrPulse_Alerts_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Dataminr Pulse Alerts Data for all alertTypes",
              "query": "DataminrPulse_Alerts_CL\n | sort by TimeGenerated desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Azure Subscription",
                "description": "Azure Subscription with owner role is required to register an application in Microsoft Entra ID and assign role of contributor to app in resource group."
              },
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "Required Dataminr Credentials/permissions",
                "description": "\n\na. Users must have a valid Dataminr Pulse API **client ID** and **secret** to use this data connector.\n\n b. One or more Dataminr Pulse Watchlists must be configured in the Dataminr Pulse website."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the DataminrPulse in which logs are pushed via Dataminr RTAP and it will ingest logs into Microsoft Sentinel. Furthermore, the connector will fetch the ingested data from the custom logs table and create Threat Intelligence Indicators into Microsoft Sentinel Threat Intelligence. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": "**STEP 1- Credentials for the Dataminr Pulse Client ID and Client Secret**\n\n * Obtain Dataminr Pulse user ID/password and API client ID/secret from your Dataminr Customer Success Manager (CSM)."
            },
            {
              "description": "**STEP 2- Configure Watchlists in Dataminr Pulse portal.**\n\n Follow the steps in this section to configure watchlists in portal:\n\n 1. **Login** to the Dataminr Pulse [website](https://app.dataminr.com).\n\n 2. Click on the settings gear icon, and select **Manage Lists**.\n\n 3. Select the type of Watchlist you want to create (Cyber, Topic, Company, etc.) and click the **New List** button.\n\n 4. Provide a **name** for your new Watchlist, and select a highlight color for it, or keep the default color.\n\n 5. When you are done configuring the Watchlist, click **Save** to save it."
            },
            {
              "description": "**STEP 3 - App Registration steps for the Application in Microsoft Entra ID**\n\n This integration requires an App registration in the Azure portal. Follow the steps in this section to create a new application in Microsoft Entra ID:\n 1. Sign in to the [Azure portal](https://portal.azure.com/).\n 2. Search for and select **Microsoft Entra ID**.\n 3. Under **Manage**, select **App registrations > New registration**.\n 4. Enter a display **Name** for your application.\n 5. Select **Register** to complete the initial app registration.\n 6. When registration finishes, the Azure portal displays the app registration's Overview pane. You see the **Application (client) ID** and **Tenant ID**. The client ID and Tenant ID is required as configuration parameters for the execution of DataminrPulse Data Connector. \n\n> **Reference link:** [https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app](https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app)"
            },
            {
              "description": "**STEP 4 - Add a client secret for application in Microsoft Entra ID**\n\n Sometimes called an application password, a client secret is a string value required for the execution of DataminrPulse Data Connector. Follow the steps in this section to create a new Client Secret:\n 1. In the Azure portal, in **App registrations**, select your application.\n 2. Select **Certificates & secrets > Client secrets > New client secret**.\n 3. Add a description for your client secret.\n 4. Select an expiration for the secret or specify a custom lifetime. Limit is 24 months.\n 5. Select **Add**. \n 6. *Record the secret's value for use in your client application code. This secret value is never displayed again after you leave this page.* The secret value is required as configuration parameter for the execution of DataminrPulse Data Connector. \n\n> **Reference link:** [https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app#add-a-client-secret](https://learn.microsoft.com/azure/active-directory/develop/quickstart-register-app#add-a-client-secret)"
            },
            {
              "description": "**STEP 5 - Assign role of Contributor to application in Microsoft Entra ID**\n\n Follow the steps in this section to assign the role:\n 1. In the Azure portal, Go to **Resource Group** and select your resource group.\n 2. Go to **Access control (IAM)** from left panel.\n 3. Click on **Add**, and then select **Add role assignment**.\n 4. Select **Contributor** as role and click on next.\n 5. In **Assign access to**, select `User, group, or service principal`.\n 6. Click on **add members** and type **your app name** that you have created and select it.\n 7. Now click on **Review + assign** and then again click on **Review + assign**. \n\n> **Reference link:** [https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal](https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal)"
            },
            {
              "description": "**STEP 6 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Dataminr Pulse Microsoft Sentinel data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following) readily available.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the DataminrPulse connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-DataminrPulseAlerts-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the below information : \n\t\tFunction Name \n\t\tWorkspace ID \n\t\tWorkspace Key \n\t\tAlertsTableName \n\t\tBaseURL \n\t\tClientId \n\t\tClientSecret \n\t\tAzureClientId \n\t\tAzureClientSecret \n\t\tAzureTenantId \n\t\tAzureResourceGroupName \n\t\tAzureWorkspaceName \n\t\tAzureSubscriptionId \n\t\tSchedule \n\t\tLogLevel \n \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the Dataminr Pulse Microsoft Sentinel data connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-DataminrPulseAlerts-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. DmPulseXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.8 or above.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration.",
              "title": "1) Deploy a Function App"
            },
            {
              "description": "1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following application settings individually, with their respective values (case-sensitive): \n\t\tFunction Name \n\t\tWorkspace ID \n\t\tWorkspace Key \n\t\tAlertsTableName \n\t\tBaseURL \n\t\tClientId \n\t\tClientSecret\n\t\tAzureClientId \n\t\tAzureClientSecret \n\t\tAzureTenantId \n\t\tAzureResourceGroupName \n\t\tAzureWorkspaceName \n\t\tAzureSubscriptionId \n\t\tSchedule \n\t\tLogLevel\n\t\tlogAnalyticsUri (optional) \n - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n4. Once all application settings have been entered, click **Save**.",
              "title": "2) Configure the Function App"
            },
            {
              "description": "**STEP 7 - Post Deployment steps**\n\n"
            },
            {
              "description": "1. Go to Azure function Overview page and Click on **\"Functions\"** in the left blade.\n2. Click on the function called **\"DataminrPulseAlertsHttpStarter\"**.\n3. Go to **\"GetFunctionurl\"** and copy the function url.\n4. Replace **{functionname}**  with **\"DataminrPulseAlertsSentinelOrchestrator\"** in copied function url.",
              "title": "1) Get the Function app endpoint"
            },
            {
              "description": "1. Open any API request tool like Postman.\n2. Click on '+' to create a new request.\n3. Select HTTP request method as **'POST'**.\n4. Enter the url prepapred in **point 1)**, in the request URL part.\n5. In Body, select raw JSON and provide request body as below(case-sensitive): \n\t\t{ \n\t\t \"integration-settings\": \"ADD\", \n\t\t \"url\": \"`(URL part from copied Function-url)`\", \n\t\t \"token\": \"`(value of code parameter from copied Function-url)`\" \n\t\t}\n6. After providing all required details, click **Send**.\n7. You will receive an integration setting ID in the HTTP response with a status code of 200.\n8. Save **Integration ID** for future reference.",
              "title": "2) To add integration settings in Dataminr RTAP using the function URL"
            },
            {
              "description": "*Now we are done with the adding integration settings for Dataminr RTAP. Once the Dataminr RTAP send an alert data, Function app is triggered and you should be able to see the Alerts data from the Dataminr Pulse into LogAnalytics workspace table called \"DataminrPulse_Alerts_CL\".*\n\n"
            }
          ],
          "id": "[variables('_uiConfigId1')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.3",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Dataminr Pulse",
        "publisherDisplayName": "Dataminr Support",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Dataminr%20Pulse/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>Dataminr Pulse brings the most advanced AI-powered real-time intelligence into Microsoft Sentinel, easily fitting into your workflows and enabling rapid identification and mitigation of emerging threats so you can deliver faster time to detection and response.</p>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 2, <strong>Workbooks:</strong> 1, <strong>Analytic Rules:</strong> 1, <strong>Watchlists:</strong> 5, <strong>Playbooks:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/DataminrPulse.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Dataminr Pulse",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dataminr",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dataminr Support",
          "email": "support@dataminr.com",
          "tier": "Partner",
          "link": "https://www.dataminr.com/dataminr-support#support"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_DataminrPulseAsset')]",
              "version": "3.0.3"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_DataminrPulseVulnerableDomain')]",
              "version": "3.0.3"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_DataminrPulseVulnerableHash')]",
              "version": "3.0.3"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_DataminrPulseVulnerableIp')]",
              "version": "3.0.3"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_DataminrPulseVulnerableMalware')]",
              "version": "3.0.3"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_DataminrPulseAlertEnrichment')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2023-04-12",
        "lastPublishDate": "2023-04-12",
        "providers": [
          "Dataminr"
        ],
        "categories": {
          "domains": [
            "Security - Others",
            "Security - Threat Intelligence",
            "Security - Automation (SOAR)"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
