{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "title": "Infoblox-Block-Allow-IP-Domain",
    "description": "The playbook will add/remove IP or Domain value in Named List of Infoblox.",
    "prerequisites": [
      "1. User must have a valid Infoblox API Key",
      "2. Obtain Teams GroupId and ChannelId",
      "a. Create a Team with public channel.",
      "b. Click on three dots (...) present on right side of the your newly created teams channel and Get link to the channel.",
      "c. Copy the text from the link between /channel and /, decode it using online url decoder and copy it to use as channelId.",
      "d. Copy the text of groupId parameter from link to use as groupId. "
    ],
    "postDeployment": [
      "**a. Authorize connections**",
      "Once deployment is complete, authorize each connection.",
      "1. Go to your logic app → API connections → Select teams connection resource",
      "2. Go to General → edit API connection",
      "3. Click Authorize",
      "4. Sign in",
      "5. Click Save",
      "**b. Get Workflow URL**",
      "Once deployment is complete, authorize each connection.",
      "1. Go to your logic app → Overview",
      "2. Copy Workflow URL",
      "This URL can be use to trigger the Logic App directly"
    ],
    "entities": ["IP", "Domain"],
    "tags": ["Infoblox", "IP", "Domain"],
    "lastUpdateTime": "2024-07-19T16:15:48.355Z",
    "support": {
      "tier": "Community",
      "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
    },
    "author": {
      "name": "Infoblox"
    }
  },
  "parameters": {
    "PlaybookName": {
      "defaultValue": "Infoblox-Block-Allow-IP-Domain",
      "minLength": 1,
      "type": "string",
      "metadata": {
        "description": "Please do not keep 'Playbook Name' parameter empty, else you will receive validation failure"
      }
    },
    "Infoblox API Key": {
      "minLength": 1,
      "type": "securestring",
      "metadata": {
        "description": "Enter value for API Key"
      }
    },
    "Infoblox Base Url": {
      "type": "string",
      "defaultValue": "https://csp.infoblox.com",
      "metadata": {
        "description": "Enter Base Url for your Infoblox instance. (e.g. https://csp.infoblox.com)"
      }
    },
    "Teams Group Id": {
      "type": "string",
      "metadata": {
        "description": "Enter Id of the Teams Group where the adaptive card will be posted"
      }
    },
    "Teams Channel Id": {
      "type": "string",
      "metadata": {
        "description": "Enter Id of the Teams Channel where the adaptive card will be posted"
      }
    }
  },
  "variables": {
    "TeamsConnectionName": "[concat('Teams-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "properties": {
        "provisioningState": "Succeeded",
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "API_Token": {
              "defaultValue": "[trim(parameters('Infoblox API Key'))]",
              "type": "String"
            },
            "BaseUrl": {
              "defaultValue": "[trim(parameters('Infoblox Base Url'))]",
              "type": "String"
            },
            "TeamsChannelId": {
              "defaultValue": "[trim(parameters('Teams Channel Id'))]",
              "type": "String"
            },
            "TeamsGroupId": {
              "defaultValue": "[trim(parameters('Teams Group Id'))]",
              "type": "String"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "method": "GET",
                "schema": {}
              }
            }
          },
          "actions": {
            "Condition_For_Base_URL_is_Empty_or_Not": {
              "actions": {
                "Set_Default_Value_For_Base_URL": {
                  "runAfter": {},
                  "type": "SetVariable",
                  "inputs": {
                    "name": "base_url",
                    "value": "https://csp.infoblox.com"
                  }
                }
              },
              "runAfter": {
                "Initialize_Named_List_Action": ["Succeeded"]
              },
              "expression": {
                "and": [
                  {
                    "equals": ["@empty(variables('base_url'))", "@true"]
                  }
                ]
              },
              "type": "If"
            },
            "Condition_For_Response_is_Success_or_Not": {
              "actions": {
                "Condition_To_Check_If_There_is_Named_List_is_Available_in_Response": {
                  "actions": {
                    "Append_Add_to_List_Action_Variable": {
                      "runAfter": {
                        "For_Each_Lists_in_Result": ["Succeeded"]
                      },
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "List_action",
                        "value": {
                          "title": "Add",
                          "value": "inserted"
                        }
                      }
                    },
                    "Append_Remove_to_List_Action_Variable": {
                      "runAfter": {
                        "Append_Add_to_List_Action_Variable": ["Succeeded"]
                      },
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "List_action",
                        "value": {
                          "title": "Remove",
                          "value": "deleted"
                        }
                      }
                    },
                    "Condition_For_Response_is_Success_or_Not_For_PATCH_Call": {
                      "actions": {
                        "Terminate_If_Successfully_Added_to_Named_List": {
                          "runAfter": {},
                          "type": "Terminate",
                          "inputs": {
                            "runStatus": "Succeeded"
                          }
                        }
                      },
                      "runAfter": {
                        "HTTP_Call_To_Add_Remove_IP_or_Domain_in_Selected_Name_List": [
                          "Succeeded",
                          "Failed",
                          "TimedOut"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Terminate_If_Not_Added_In_Named_List": {
                            "runAfter": {},
                            "type": "Terminate",
                            "inputs": {
                              "runError": {
                                "code": "@{outputs('HTTP_Call_To_Add_Remove_IP_or_Domain_in_Selected_Name_List')['statusCode']}",
                                "message": "@{body('HTTP_Call_To_Add_Remove_IP_or_Domain_in_Selected_Name_List')}"
                              },
                              "runStatus": "Failed"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('HTTP_Call_To_Add_Remove_IP_or_Domain_in_Selected_Name_List')['statusCode']",
                              201
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "For_Each_Lists_in_Result": {
                      "foreach": "@body('Parse_JSON_API_Call_Response')?['results']",
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Append_Input_List_For_Adaptive_Card_DropDown": {
                              "runAfter": {},
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "Lists",
                                "value": {
                                  "title": "@{items('For_Each_Lists_in_Result')?['name']}",
                                  "value": "@{items('For_Each_Lists_in_Result')?['id']}"
                                }
                              }
                            }
                          },
                          "runAfter": {},
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "startsWith": [
                                    "@items('For_Each_Lists_in_Result')?['name']",
                                    "Threat Insight"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {},
                      "type": "Foreach"
                    },
                    "HTTP_Call_To_Add_Remove_IP_or_Domain_in_Selected_Name_List": {
                      "runAfter": {
                        "Set_Request_Body_For_PATCH_Call": ["Succeeded"]
                      },
                      "type": "Http",
                      "inputs": {
                        "body": "@variables('req_body')",
                        "headers": {
                          "Authorization": "Token @{parameters('API_Token')}"
                        },
                        "method": "PATCH",
                        "uri": "@{variables('base_url')}/api/atcfw/v1/named_lists/@{variables('list_id')}/items"
                      }
                    },
                    "Post_Adaptive_Card_For_Take_Input_For_Block_And_Allow_IP_Or_Domain": {
                      "runAfter": {
                        "Append_Remove_to_List_Action_Variable": ["Succeeded"]
                      },
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "body": {
                            "messageBody": "{\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"actions\": [\n        {\n            \"title\": \"Submit Answer\",\n            \"type\": \"Action.Submit\",\n            \"style\": \"positive\",\n            \"id\": \"Submit\"\n        }\n    ],\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"large\",\n            \"weight\": \"bolder\",\n            \"horizontalAlignment\": \"center\",\n            \"style\": \"heading\",\n            \"color\": \"accent\",\n            \"fontType\": \"Default\",\n            \"wrap\": true,\n            \"id\": \"heading\",\n            \"text\": \"Block and Allow IP / Domain\"\n        },\n        {\n            \"id\": \"group-choice\",\n            \"type\": \"Input.ChoiceSet\",\n            \"choices\": @{variables('Lists')},\n            \"isRequired\": true,\n            \"separator\": true,\n            \"label\": \"Select Named list to add/remove IP or Domain\",\n            \"errorMessage\": \"Please select one Named list first.\"\n        },\n{\n            \"id\": \"group-choice-1\",\n            \"type\": \"Input.ChoiceSet\",\n            \"choices\": @{variables('List_action')},\n            \"isRequired\": true,\n           \"weight\": \"bolder\",\n            \"label\": \"Select Named list action\",\n            \"errorMessage\": \"Please select one Named list action.\"\n        },\n        {\n            \"id\": \"member-input-1\",\n            \"type\": \"Input.Text\",\n            \"separator\": true,\n            \"placeholder\": \"Provide IP / Domain value\",\n            \"isRequired\": true,\n            \"label\": \"Provide IP or Domain value to add/remove into Named list\",\n            \"errorMessage\": \"Please enter one IP or Domain.\"\n        },\n        {\n            \"id\": \"member-input-2\",\n            \"type\": \"Input.Text\",\n            \"separator\": true,\n            \"placeholder\": \"Provide IP / Domain description\",\n            \"label\": \"Provide IP or Domain description\"\n        }\n    ],\n    \"type\": \"AdaptiveCard\",\n    \"version\": \"1.3\"\n}",
                            "recipient": {
                              "channelId": "@parameters('TeamsChannelId')",
                              "groupId": "@parameters('TeamsGroupId')"
                            },
                            "updateMessage": "Thanks for your response!"
                          },
                          "notificationUrl": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                          }
                        },
                        "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Channel')}/$subscriptions"
                      }
                    },
                    "Set_ID_From_Named_List_DropDown": {
                      "runAfter": {
                        "Set_Value_From_Adaptive_Card_Description": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "list_id",
                        "value": "@{body('Post_Adaptive_Card_For_Take_Input_For_Block_And_Allow_IP_Or_Domain')?['data']?['group-choice']}"
                      }
                    },
                    "Set_Named_List_Action_Variable": {
                      "runAfter": {
                        "Set_ID_From_Named_List_DropDown": ["Succeeded"]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "named_list_action",
                        "value": "@{body('Post_Adaptive_Card_For_Take_Input_For_Block_And_Allow_IP_Or_Domain')?['data']?['group-choice-1']}"
                      }
                    },
                    "Set_Request_Body_For_PATCH_Call": {
                      "runAfter": {
                        "Set_Named_List_Action_Variable": ["Succeeded"]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "req_body",
                        "value": {
                          "@{variables('named_list_action')}_items_described": [
                            {
                              "description": "@{variables('block_allow_description')}",
                              "item": "@{variables('block_allow_value')}"
                            }
                          ]
                        }
                      }
                    },
                    "Set_Value_From_Adaptive_Card": {
                      "runAfter": {
                        "Post_Adaptive_Card_For_Take_Input_For_Block_And_Allow_IP_Or_Domain": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "block_allow_value",
                        "value": "@{body('Post_Adaptive_Card_For_Take_Input_For_Block_And_Allow_IP_Or_Domain')?['data']?['member-input-1']}"
                      }
                    },
                    "Set_Value_From_Adaptive_Card_Description": {
                      "runAfter": {
                        "Set_Value_From_Adaptive_Card": ["Succeeded"]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "block_allow_description",
                        "value": "@{body('Post_Adaptive_Card_For_Take_Input_For_Block_And_Allow_IP_Or_Domain')?['data']?['member-input-2']}"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON_API_Call_Response": ["Succeeded"]
                  },
                  "else": {
                    "actions": {
                      "Terminate_When_List_is_Empty": {
                        "runAfter": {},
                        "type": "Terminate",
                        "inputs": {
                          "runError": {
                            "code": "@{outputs('HTTP_Call_For_Get_List_For_Named_List_Endpoint')['statusCode']}",
                            "message": "No Any Named List Available.  "
                          },
                          "runStatus": "Failed"
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@length(body('Parse_JSON_API_Call_Response')?['results'])",
                            0
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "Parse_JSON_API_Call_Response": {
                  "runAfter": {},
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('HTTP_Call_For_Get_List_For_Named_List_Endpoint')",
                    "schema": {
                      "properties": {
                        "results": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": ["id", "name"],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "runAfter": {
                "HTTP_Call_For_Get_List_For_Named_List_Endpoint": ["Succeeded"]
              },
              "else": {
                "actions": {
                  "Terminate_When_not_Getting_Named_List": {
                    "runAfter": {},
                    "type": "Terminate",
                    "inputs": {
                      "runError": {
                        "code": "@{outputs('HTTP_Call_For_Get_List_For_Named_List_Endpoint')['statusCode']}",
                        "message": "@{body('HTTP_Call_For_Get_List_For_Named_List_Endpoint')}"
                      },
                      "runStatus": "Failed"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@outputs('HTTP_Call_For_Get_List_For_Named_List_Endpoint')['statusCode']",
                      200
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "HTTP_Call_For_Get_List_For_Named_List_Endpoint": {
              "runAfter": {
                "Condition_For_Base_URL_is_Empty_or_Not": ["Succeeded"]
              },
              "type": "Http",
              "inputs": {
                "headers": {
                  "Authorization": "Token @{parameters('API_Token')}"
                },
                "method": "GET",
                "queries": {
                  "_fields": "name,id"
                },
                "uri": "@{variables('base_url')}/api/atcfw/v1/named_lists"
              }
            },
            "Initialize_Description_For_Adaptive_Card_": {
              "runAfter": {
                "Initialize_Value_For_Adaptive_Card": ["Succeeded"]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "block_allow_description",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Id_For_Named_List_DropDown": {
              "runAfter": {
                "Initialize_Input_List_For_Adaptive_Card_DropDown": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "list_id",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Input_List_For_Adaptive_Card_DropDown": {
              "runAfter": {
                "Initialize_Variable_Base_URL": ["Succeeded"]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Lists",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_List_For_Action": {
              "runAfter": {
                "Initialize_Request_Body_For_PATCH_Call": ["Succeeded"]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "List_action",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_Named_List_Action": {
              "runAfter": {
                "Initialize_List_For_Action": ["Succeeded"]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "named_list_action",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Request_Body_For_PATCH_Call": {
              "runAfter": {
                "Initialize_Description_For_Adaptive_Card_": ["Succeeded"]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "req_body",
                    "type": "object"
                  }
                ]
              }
            },
            "Initialize_Value_For_Adaptive_Card": {
              "runAfter": {
                "Initialize_Id_For_Named_List_DropDown": ["Succeeded"]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "block_allow_value",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Variable_Base_URL": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "base_url",
                    "type": "string",
                    "value": "@parameters('BaseUrl')"
                  }
                ]
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "teams": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                "connectionName": "[variables('TeamsConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
              }
            }
          }
        }
      },
      "name": "[parameters('PlaybookName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "tags": {
        "hidden-SentinelTemplateName": "Infoblox-Block-Allow-IP-Domain",
        "hidden-SentinelTemplateVersion": "1.0"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "apiVersion": "2017-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('TeamsConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('TeamsConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
        }
      }
    }
  ]
}
