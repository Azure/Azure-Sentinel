{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "Infoblox-SOC-Get-Insight-Details",
        "description":  "Leverages the Infoblox SOC Insights API to enrich a Microsoft Sentinel Incident triggered by an Infoblox SOC Insight & ingest Insight details into custom InfobloxInsight tables. The tables are used to build the Infoblox SOC Insights Workbook. This playbook can be configured to run automatically when an incident occurs (recommended) or run on demand.",
        "prerequisites":  [
            "1. User must have a valid Infoblox API Key",
            "2. User must have a valid Workspace ID",
            "3. User must have a valid Workspace Key"
        ], 
        "postDeployment":  [
            "**a. Authorize connections**",
            "Once deployment is complete, authorize each connection.",
            "1. Go to your logic app -> API connections -> Select azuremonitorlogs connection resource",
            "2. Go to General -> edit API connection",
            "3. Click Authorize",
            "4. Sign in",
            "5. Click Save",
            "6. Repeat steps for other connections",
            "**b. Assign Role to Update in incident**",
            "Assign role to this playbook.",    
            "1. Go to Log Analytics Workspace → <your workspace> → Access Control → Add","2. Add role assignment",
            "3. Assignment type: Job function roles -> Add 'Microsoft Sentinel Contributor' as a Role",
            "4. Members: select managed identity for assigned access to and add your logic app as member",
            "5. Click on review+assign"
        ],
        "prerequisitesDeployTemplateFile":  "",
        "entities":  [ "Security Group", "SecurityGroup", "Malware"
        ],
        "tags":  [ "Enrichment"
        ],
        "lastUpdateTime": "2024-07-19T16:15:48.355Z",
        "support":  {
            "tier":  "Community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  "Infoblox"
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Infoblox-SOC-Get-Insight-Details",
            "type":  "string"
        },
        "Infoblox API Key":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Infoblox API Key"
            }
        },
        "Workspace ID":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Workspace ID,use same Workspace ID for Authorization"
            }
        },
        "Workspace Key":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Workspace Key,use same Workspace Key for Authorization"
            }
        }
    },
    "variables":  {
        "AzureloganalyticsdatacollectorConnectionName":  "[concat('Azureloganalyticsdatacollector-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "Infoblox API Key":  {
                            "defaultValue":  "[trim(parameters('Infoblox API Key'))]",
                            "type":  "string"
                        },
                        "Workspace ID":  {
                            "defaultValue":  "[trim(parameters('Workspace ID'))]",
                            "type":  "string"
                        },
                        "Workspace Key":  {
                            "defaultValue":  "[trim(parameters('Workspace Key'))]",
                            "type":  "string"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Filter_array_for_Malware_Entity":  {
                            "runAfter":  {
                                "For_each":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Query",
                            "inputs":  {
                                "from":  "@body('Parse_Entities_JSON')",
                                "where":  "@equals(item()['kind'], 'Malware')"
                            }
                        },
                        "Filter_array_for_Object_GUID_Entity":  {
                            "runAfter":  {
                                "Parse_Entities_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Query",
                            "inputs":  {
                                "from":  "@body('Parse_Entities_JSON')",
                                "where":  "@equals(item()?['kind'], 'SecurityGroup')"
                            }
                        },
                        "For_each":  {
                            "foreach":  "@body('Filter_array_for_Object_GUID_Entity')",
                            "actions":  {
                                "Test_Connection_to_Infoblox_CSP":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "headers":  {
                                            "Authorization":  "Token @{parameters('Infoblox API Key')}"
                                        },
                                        "method":  "GET",
                                        "uri":  "https://csp.infoblox.com/api/v1/insights/@{items('For_each')?['properties']?['objectGuid']}"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Filter_array_for_Object_GUID_Entity":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "For_each_Insight_ID":  {
                            "foreach":  "@body('Filter_array_for_Object_GUID_Entity')",
                            "actions":  {
                                "Add_InfobloxInsightID_Tag":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "tagsToAdd":  {
                                                "TagsToAdd":  [
                                                    {
                                                        "Tag":  "InfobloxInsightID: @{items('For_each_Insight_ID')?['properties']?['objectGuid']}"
                                                    }
                                                ]
                                            }
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "put",
                                        "path":  "/Incidents"
                                    }
                                },
                                "Add_Summary_data_if_observed_via_CDC":  {
                                    "actions":  {
                                        "Get_Summary_Data":  {
                                            "runAfter":  {
                                            },
                                            "type":  "Http",
                                            "inputs":  {
                                                "headers":  {
                                                    "Authorization":  "Token @{parameters('Infoblox API Key')}"
                                                },
                                                "method":  "GET",
                                                "uri":  "https://csp.infoblox.com/api/v1/insights/@{items('For_each_Insight_ID')?['properties']?['objectGuid']}"
                                            }
                                        },
                                        "Parse_Summary_JSON":  {
                                            "runAfter":  {
                                                "Get_Summary_Data":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "ParseJson",
                                            "inputs":  {
                                                "content":  "@body('Get_Summary_Data')",
                                                "schema":  {
                                                    "properties":  {
                                                        "insight":  {
                                                            "properties":  {
                                                                "changer":  {
                                                                    "type":  "string"
                                                                },
                                                                "dateChanged":  {
                                                                    "type":  "string"
                                                                },
                                                                "description":  {
                                                                    "type":  "string"
                                                                },
                                                                "eventsBlockedCount":  {
                                                                    "type":  "string"
                                                                },
                                                                "eventsNotBlockedCount":  {
                                                                    "type":  "string"
                                                                },
                                                                "feedSource":  {
                                                                    "type":  "string"
                                                                },
                                                                "insightId":  {
                                                                    "type":  "string"
                                                                },
                                                                "mostRecentAt":  {
                                                                    "type":  "string"
                                                                },
                                                                "numEvents":  {
                                                                    "type":  "string"
                                                                },
                                                                "persistent":  {
                                                                    "type":  "string"
                                                                },
                                                                "persistentDate":  {
                                                                    "type":  "string"
                                                                },
                                                                "priorityText":  {
                                                                    "type":  "string"
                                                                },
                                                                "spreading":  {
                                                                    "type":  "string"
                                                                },
                                                                "spreadingDate":  {
                                                                    "type":  "string"
                                                                },
                                                                "startedAt":  {
                                                                    "type":  "string"
                                                                },
                                                                "status":  {
                                                                    "type":  "string"
                                                                },
                                                                "tClass":  {
                                                                    "type":  "string"
                                                                },
                                                                "tFamily":  {
                                                                    "type":  "string"
                                                                },
                                                                "threatType":  {
                                                                    "type":  "string"
                                                                },
                                                                "userComment":  {
                                                                    "type":  "string"
                                                                }
                                                            },
                                                            "type":  "object"
                                                        }
                                                    },
                                                    "type":  "object"
                                                }
                                            }
                                        },
                                        "Send_Summary_(Insight)_Data":  {
                                            "runAfter":  {
                                                "Parse_Summary_JSON":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "ApiConnection",
                                            "inputs":  {
                                                "body":  "@{addProperty(body('Parse_Summary_JSON')?['insight'], 'InfobloxInsightLogType', 'Insight')}",
                                                "headers":  {
                                                    "Log-Type":  "InfobloxInsight"
                                                },
                                                "host":  {
                                                    "connection":  {
                                                        "name":  "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                                    }
                                                },
                                                "method":  "post",
                                                "path":  "/api/logs"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Add_InfobloxInsightID_Tag":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "contains":  [
                                                    "@body('Add_InfobloxInsightID_Tag')?['properties']?['description']",
                                                    "Observed via CDC"
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "For_each_Asset":  {
                                    "foreach":  "@body('Parse_Assets_JSON')?['assets']",
                                    "actions":  {
                                        "Send_Asset_Data":  {
                                            "runAfter":  {
                                            },
                                            "type":  "ApiConnection",
                                            "inputs":  {
                                                "body":  "@{addProperty(addProperty(items('For_Each_Asset'), 'InfobloxInsightID', items('For_each_Insight_ID')?['properties']?['objectGuid']), 'InfobloxInsightLogType', 'Asset')}",
                                                "headers":  {
                                                    "Log-Type":  "InfobloxInsightAssets"
                                                },
                                                "host":  {
                                                    "connection":  {
                                                        "name":  "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                                    }
                                                },
                                                "method":  "post",
                                                "path":  "/api/logs"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_Assets_JSON":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "For_each_Comment":  {
                                    "foreach":  "@body('Parse_Comment_JSON')?['comments']",
                                    "actions":  {
                                        "Send_Comment_Data":  {
                                            "runAfter":  {
                                            },
                                            "type":  "ApiConnection",
                                            "inputs":  {
                                                "body":  "@{addProperty(addProperty(items('For_Each_Comment'), 'InfobloxInsightID', items('For_each_Insight_ID')?['properties']?['objectGuid']), 'InfobloxInsightLogType', 'Comment')}",
                                                "headers":  {
                                                    "Log-Type":  "InfobloxInsightComments"
                                                },
                                                "host":  {
                                                    "connection":  {
                                                        "name":  "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                                    }
                                                },
                                                "method":  "post",
                                                "path":  "/api/logs"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_Comment_JSON":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "For_each_Event":  {
                                    "foreach":  "@body('Parse_Event_JSON')?['events']",
                                    "actions":  {
                                        "Send_Event_Data":  {
                                            "runAfter":  {
                                            },
                                            "type":  "ApiConnection",
                                            "inputs":  {
                                                "body":  "@{addProperty(addProperty(items('For_Each_Event'), 'InfobloxInsightID', items('For_each_Insight_ID')?['properties']?['objectGuid']), 'InfobloxInsightLogType', 'Event')}",
                                                "headers":  {
                                                    "Log-Type":  "InfobloxInsightEvents"
                                                },
                                                "host":  {
                                                    "connection":  {
                                                        "name":  "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                                    }
                                                },
                                                "method":  "post",
                                                "path":  "/api/logs"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_Event_JSON":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "For_each_Indicator":  {
                                    "foreach":  "@body('Parse_Indicator_JSON')?['indicators']",
                                    "actions":  {
                                        "Send_Indicator_Data":  {
                                            "runAfter":  {
                                            },
                                            "type":  "ApiConnection",
                                            "inputs":  {
                                                "body":  "@{addProperty(addProperty(items('For_Each_Indicator'), 'InfobloxInsightID', items('For_each_Insight_ID')?['properties']?['objectGuid']), 'InfobloxInsightLogType', 'Indicator')\r\n}",
                                                "headers":  {
                                                    "Log-Type":  "InfobloxInsightIndicators"
                                                },
                                                "host":  {
                                                    "connection":  {
                                                        "name":  "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                                    }
                                                },
                                                "method":  "post",
                                                "path":  "/api/logs"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_Indicator_JSON":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "Get_Asset_Data":  {
                                    "runAfter":  {
                                        "Add_InfobloxInsightID_Tag":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "headers":  {
                                            "Authorization":  "Token @{parameters('Infoblox API Key')}"
                                        },
                                        "method":  "GET",
                                        "uri":  "https://csp.infoblox.com/api/v1/insights/@{items('For_each_Insight_ID')?['properties']?['objectGuid']}/assets"
                                    }
                                },
                                "Get_Comment_Data":  {
                                    "runAfter":  {
                                        "Add_InfobloxInsightID_Tag":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "headers":  {
                                            "Authorization":  "Token @{parameters('Infoblox API Key')}"
                                        },
                                        "method":  "GET",
                                        "uri":  "https://csp.infoblox.com/api/v1/insights/@{items('For_each_Insight_ID')?['properties']?['objectGuid']}/comments"
                                    }
                                },
                                "Get_Event_Data":  {
                                    "runAfter":  {
                                        "Add_InfobloxInsightID_Tag":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "headers":  {
                                            "Authorization":  "Token @{parameters('Infoblox API Key')}"
                                        },
                                        "method":  "GET",
                                        "uri":  "https://csp.infoblox.com/api/v1/insights/@{items('For_each_Insight_ID')?['properties']?['objectGuid']}/events"
                                    }
                                },
                                "Get_Indicator_Data":  {
                                    "runAfter":  {
                                        "Add_InfobloxInsightID_Tag":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "headers":  {
                                            "Authorization":  "Token @{parameters('Infoblox API Key')}"
                                        },
                                        "method":  "GET",
                                        "uri":  "https://csp.infoblox.com/api/v1/insights/@{items('For_each_Insight_ID')?['properties']?['objectGuid']}/indicators"
                                    }
                                },
                                "Parse_Assets_JSON":  {
                                    "runAfter":  {
                                        "Get_Asset_Data":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Get_Asset_Data')",
                                        "schema":  {
                                            "properties":  {
                                                "assets":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "cid":  {
                                                                "type":  "string"
                                                            },
                                                            "cmac":  {
                                                                "type":  "string"
                                                            },
                                                            "count":  {
                                                                "type":  "integer"
                                                            },
                                                            "location":  {
                                                                "type":  "string"
                                                            },
                                                            "os_version":  {
                                                                "type":  "string"
                                                            },
                                                            "qip":  {
                                                                "type":  "string"
                                                            },
                                                            "threat_indicator_distinct_count":  {
                                                                "type":  "string"
                                                            },
                                                            "threat_level_max":  {
                                                                "type":  "string"
                                                            },
                                                            "time_max":  {
                                                                "type":  "string"
                                                            },
                                                            "time_min":  {
                                                                "type":  "string"
                                                            },
                                                            "user":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Parse_Comment_JSON":  {
                                    "runAfter":  {
                                        "Get_Comment_Data":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Get_Comment_Data')",
                                        "schema":  {
                                            "properties":  {
                                                "comments":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "commentsChanger":  {
                                                                "type":  "string"
                                                            },
                                                            "dateChanged":  {
                                                                "type":  "string"
                                                            },
                                                            "newComment":  {
                                                                "type":  "string"
                                                            },
                                                            "status":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Parse_Event_JSON":  {
                                    "runAfter":  {
                                        "Get_Event_Data":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Get_Event_Data')",
                                        "schema":  {
                                            "properties":  {
                                                "events":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "action":  {
                                                                "type":  "string"
                                                            },
                                                            "class":  {
                                                                "type":  "string"
                                                            },
                                                            "confidence_level":  {
                                                                "type":  "string"
                                                            },
                                                            "detected":  {
                                                                "type":  "string"
                                                            },
                                                            "deviceIp":  {
                                                                "type":  "string"
                                                            },
                                                            "device_country":  {
                                                                "type":  "string"
                                                            },
                                                            "device_name":  {
                                                                "type":  "string"
                                                            },
                                                            "device_region":  {
                                                                "type":  "string"
                                                            },
                                                            "dhcp_fingerprint":  {
                                                                "type":  "string"
                                                            },
                                                            "dns_view":  {
                                                                "type":  "string"
                                                            },
                                                            "feed":  {
                                                                "type":  "string"
                                                            },
                                                            "mac_address":  {
                                                                "type":  "string"
                                                            },
                                                            "os_version":  {
                                                                "type":  "string"
                                                            },
                                                            "policy":  {
                                                                "type":  "string"
                                                            },
                                                            "property":  {
                                                                "type":  "string"
                                                            },
                                                            "query":  {
                                                                "type":  "string"
                                                            },
                                                            "query_type":  {
                                                                "type":  "string"
                                                            },
                                                            "response":  {
                                                                "type":  "string"
                                                            },
                                                            "response_country":  {
                                                                "type":  "string"
                                                            },
                                                            "response_region":  {
                                                                "type":  "string"
                                                            },
                                                            "source":  {
                                                                "type":  "string"
                                                            },
                                                            "threat_family":  {
                                                                "type":  "string"
                                                            },
                                                            "threat_indicator":  {
                                                                "type":  "string"
                                                            },
                                                            "threat_level":  {
                                                                "type":  "string"
                                                            },
                                                            "user":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Parse_Indicator_JSON":  {
                                    "runAfter":  {
                                        "Get_Indicator_Data":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Get_Indicator_Data')",
                                        "schema":  {
                                            "properties":  {
                                                "indicators":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "action":  {
                                                                "type":  "string"
                                                            },
                                                            "actor":  {
                                                                "type":  "string"
                                                            },
                                                            "confidence":  {
                                                                "type":  "string"
                                                            },
                                                            "count":  {
                                                                "type":  "integer"
                                                            },
                                                            "feed_name":  {
                                                                "type":  "string"
                                                            },
                                                            "indicator":  {
                                                                "type":  "string"
                                                            },
                                                            "threat_level_max":  {
                                                                "type":  "string"
                                                            },
                                                            "time_max":  {
                                                                "type":  "string"
                                                            },
                                                            "time_min":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "For_each_Malware_Entity":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "For_each_Malware_Entity":  {
                            "foreach":  "@body('Filter_array_for_Malware_Entity')",
                            "actions":  {
                                "Update_Incident_Tags":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "tagsToAdd":  {
                                                "TagsToAdd":  [
                                                    {
                                                        "Tag":  "@items('For_each_Malware_Entity')?['kind']"
                                                    },
                                                    {
                                                        "Tag":  "@items('For_each_Malware_Entity')?['properties']?['malwareName']"
                                                    },
                                                    {
                                                        "Tag":  "@items('For_each_Malware_Entity')?['properties']?['category']"
                                                    },
                                                    {
                                                        "Tag":  "Insight"
                                                    }
                                                ]
                                            }
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "put",
                                        "path":  "/Incidents"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Filter_array_for_Malware_Entity":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Parse_Entities_JSON":  {
                            "runAfter":  {
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "schema":  {
                                    "items":  {
                                        "properties":  {
                                            "id":  {
                                                "type":  "string"
                                            },
                                            "kind":  {
                                                "type":  "string"
                                            },
                                            "name":  {
                                                "type":  "string"
                                            },
                                            "properties":  {
                                                "properties":  {
                                                    "friendlyName":  {
                                                        "type":  "string"
                                                    },
                                                    "objectGuid":  {
                                                        "type":  "string"
                                                    }
                                                },
                                                "type":  "object"
                                            },
                                            "type":  {
                                                "type":  "string"
                                            }
                                        },
                                        "required":  [
                                        ],
                                        "type":  "object"
                                    },
                                    "type":  "array"
                                }
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azureloganalyticsdatacollector":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                                "connectionName":  "[variables('AzureloganalyticsdatacollectorConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureloganalyticsdatacollector')]"
                            },
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "Infoblox-SOC-Get-Insight-Details",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzureloganalyticsdatacollectorConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzureloganalyticsdatacollectorConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzureloganalyticsdatacollectorConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureloganalyticsdatacollector')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}
