// Reference : Using functions in Azure monitor log queries : https://docs.microsoft.com/azure/azure-monitor/log-query/functions
let CrowdstrikeReplicatorLogs_view  = view () { 
    CrowdstrikeReplicatorLogs_CL
    | extend customFields = parse_json(column_ifexists('custom_fields_message_s', ''))
    | extend 
        EventVendor="Crowdstrike",
        EventProduct="Replicator",
        FileMode=column_ifexists('FileMode_s', customFields.FileMode),
        DeviceSerialNumber=column_ifexists('DeviceSerialNumber_s', customFields.DeviceSerialNumber),
        IcmpCode=column_ifexists('IcmpCode_s', customFields.IcmpCode),
        IcmpType=column_ifexists('IcmpType_s', customFields.IcmpType),
        LastUpdateInstalledTime=column_ifexists('LastUpdateInstalledTime_s', customFields.LastUpdateInstalledTime),
        RebootRequired=column_ifexists('RebootRequired_s', customFields.RebootRequired),
        PendingUpdateIds=column_ifexists('PendingUpdateIds_s', customFields.PendingUpdateIds),
        InstalledUpdateIds=column_ifexists('InstalledUpdateIds_s', customFields.InstalledUpdateIds),
        InstalledUpdateExtendedStatus=column_ifexists('InstalledUpdateExtendedStatus_s', customFields.InstalledUpdateExtendedStatus),
        SupersededUpdateIds=column_ifexists('SupersededUpdateIds_s', customFields.SupersededUpdateIds),
        ConfigurationDescriptorValue=column_ifexists('ConfigurationDescriptorValue_s', customFields.ConfigurationDescriptorValue),
        ConfigurationDescriptorAttributes=column_ifexists('ConfigurationDescriptorAttributes_s', customFields.ConfigurationDescriptorAttributes),
        DeviceDescriptorUniqueIdentifier=column_ifexists('DeviceDescriptorUniqueIdentifier_s', customFields.DeviceDescriptorUniqueIdentifier),
        ConfigurationDescriptorName=column_ifexists('ConfigurationDescriptorName_s', customFields.ConfigurationDescriptorName),
        ConfigurationDescriptorNumInterfaces=column_ifexists('ConfigurationDescriptorNumInterfaces_s', customFields.ConfigurationDescriptorNumInterfaces),
        ConfigurationDescriptorMaxPowerDraw=column_ifexists('ConfigurationDescriptorMaxPowerDraw_s', customFields.ConfigurationDescriptorMaxPowerDraw),
        ScreenshotsTakenCount=column_ifexists('ScreenshotsTakenCount_s', customFields.ScreenshotsTakenCount),
        ExitCode=column_ifexists('ExitCode_s', customFields.ExitCode),
        ParentProcessId=column_ifexists('ParentProcessId_s', customFields.ParentProcessId),
        DstUserIdentity=column_ifexists('UserSid_s', customFields.DstUserIdentity),
        NetworkListenCount=column_ifexists('NetworkListenCount_s', customFields.NetworkListenCount),
        SuspiciousRawDiskReadCount=column_ifexists('SuspiciousRawDiskReadCount_s', customFields.SuspiciousRawDiskReadCount),
        NetworkBindCount=column_ifexists('NetworkBindCount_s', customFields.NetworkBindCount),
        NetworkRecvAcceptCount=column_ifexists('NetworkRecvAcceptCount_s', customFields.NetworkRecvAcceptCount),
        ContextData=column_ifexists('ContextData_s', customFields.ContextData),
        Id=column_ifexists('id_g', customFields.Id),
        NewExecutableWrittenCount=column_ifexists('NewExecutableWrittenCount_s', customFields.NewExecutableWrittenCount),
        ExeAndServiceCount=column_ifexists('ExeAndServiceCount_s', customFields.ExeAndServiceCount),
        NetworkCloseCount=column_ifexists('NetworkCloseCount_s', customFields.NetworkCloseCount),
        SuspectStackCount=column_ifexists('SuspectStackCount_s', customFields.SuspectStackCount),
        CLICreationCount=column_ifexists('CLICreationCount_s', customFields.CLICreationCount),
        UnsignedModuleLoadCount=column_ifexists('UnsignedModuleLoadCount_s', customFields.UnsignedModuleLoadCount),
        UserTime=column_ifexists('UserTime_s', customFields.UserTime),
        EventMessage=column_ifexists('event_simpleName_s', customFields.EventMessage),
        RawProcessId=column_ifexists('RawProcessId_s', customFields.RawProcessId),
        ContextTimeStamp=column_ifexists('ContextTimeStamp_s', customFields.ContextTimeStamp),
        AllocateVirtualMemoryCount=column_ifexists('AllocateVirtualMemoryCount_s', customFields.AllocateVirtualMemoryCount),
        ContextProcessId=column_ifexists('ContextProcessId_s', customFields.ContextProcessId),
        ServiceEventCount=column_ifexists('ServiceEventCount_s', customFields.ServiceEventCount),
        SnapshotFileOpenCount=column_ifexists('SnapshotFileOpenCount_s', customFields.SnapshotFileOpenCount),
        RemovableDiskFileWrittenCount=column_ifexists('RemovableDiskFileWrittenCount_s', customFields.RemovableDiskFileWrittenCount),
        InjectedDllCount=column_ifexists('InjectedDllCount_s', customFields.InjectedDllCount),
        ModuleLoadCount=column_ifexists('ModuleLoadCount_s', customFields.ModuleLoadCount),
        UserMemoryProtectExecutableCount=column_ifexists('UserMemoryProtectExecutableCount_s', customFields.UserMemoryProtectExecutableCount),
        NetworkCapableAsepWriteCount=column_ifexists('NetworkCapableAsepWriteCount_s', customFields.NetworkCapableAsepWriteCount),
        TargetProcessId=column_ifexists('TargetProcessId_s', customFields.TargetProcessId),
        DnsRequestCount=column_ifexists('DnsRequestCount_s', customFields.DnsRequestCount),
        ArchiveFileWrittenCount=column_ifexists('ArchiveFileWrittenCount_s', customFields.ArchiveFileWrittenCount),
        Entitlements=column_ifexists('Entitlements_s', customFields.Entitlements),
        Name=column_ifexists('name_s', customFields.Name),
        ProcessStartTime=column_ifexists('ProcessStartTime_s', customFields.ProcessStartTime),
        SetThreadContextCount=column_ifexists('SetThreadContextCount_s', customFields.SetThreadContextCount),
        SuspiciousCredentialModuleLoadCount=column_ifexists('SuspiciousCredentialModuleLoadCount_s', customFields.SuspiciousCredentialModuleLoadCount),
        DvcInterfaceGuid=replace_string(tostring(column_ifexists('aid_g', customFields.DvcInterfaceGuid))),
        Cid=column_ifexists('cid_g', customFields.Cid),
        FileDeletedCount=column_ifexists('FileDeletedCount_s', customFields.FileDeletedCount),
        UserMemoryAllocateExecutableCount=column_ifexists('UserMemoryAllocateExecutableCount_s', customFields.UserMemoryAllocateExecutableCount),
        DirectoryCreatedCount=column_ifexists('DirectoryCreatedCount_s', customFields.DirectoryCreatedCount),
        NetworkConnectCountUdp=column_ifexists('NetworkConnectCountUdp_s', customFields.NetworkConnectCountUdp),
        QueueApcCount=column_ifexists('QueueApcCount_s', customFields.QueueApcCount),
        ContextThreadId=column_ifexists('ContextThreadId_s', customFields.ContextThreadId),
        Aip=column_ifexists('aip_s', customFields.Aip),
        SuspiciousFontLoadCount=column_ifexists('SuspiciousFontLoadCount_s', customFields.SuspiciousFontLoadCount),
        ConHostId=column_ifexists('ConHostId_s', customFields.ConHostId),
        NetworkConnectCount=column_ifexists('NetworkConnectCount_s', customFields.NetworkConnectCount),
        BinaryExecutableWrittenCount=column_ifexists('BinaryExecutableWrittenCount_s', customFields.BinaryExecutableWrittenCount),
        CycleTime=column_ifexists('CycleTime_s', customFields.CycleTime),
        DvcOs=column_ifexists('event_platform_s', customFields.DvcOs),
        ConHostProcessId=column_ifexists('ConHostProcessId_s', customFields.ConHostProcessId),
        PrivilegedProcessHandleCount=column_ifexists('PrivilegedProcessHandleCount_s', customFields.PrivilegedProcessHandleCount),
        MaxThreadCount=column_ifexists('MaxThreadCount_s', customFields.MaxThreadCount),
        ImageSubsystem=column_ifexists('ImageSubsystem_s', customFields.ImageSubsystem),
        GenericFileWrittenCount=column_ifexists('GenericFileWrittenCount_s', customFields.GenericFileWrittenCount),
        EffectiveTransmissionClass=column_ifexists('EffectiveTransmissionClass_s', customFields.EffectiveTransmissionClass),
        ScriptEngineInvocationCount=column_ifexists('ScriptEngineInvocationCount_s', customFields.ScriptEngineInvocationCount),
        RunDllInvocationCount=column_ifexists('RunDllInvocationCount_s', customFields.RunDllInvocationCount),
        timestamp=column_ifexists('timestamp_s', customFields.timestamp),
        CreateProcessCount=column_ifexists('CreateProcessCount_s', customFields.CreateProcessCount),
        KernelTime=column_ifexists('KernelTime_s', customFields.KernelTime),
        DirectoryEnumeratedCount=column_ifexists('DirectoryEnumeratedCount_s', customFields.DirectoryEnumeratedCount),
        ConfigStateHash=column_ifexists('ConfigStateHash_s', customFields.ConfigStateHash),
        AsepWrittenCount=column_ifexists('AsepWrittenCount_s', customFields.AsepWrittenCount),
        SuspiciousDnsRequestCount=column_ifexists('SuspiciousDnsRequestCount_s', customFields.SuspiciousDnsRequestCount),
        DocumentFileWrittenCount=column_ifexists('DocumentFileWrittenCount_s', customFields.DocumentFileWrittenCount),
        ProtectVirtualMemoryCount=column_ifexists('ProtectVirtualMemoryCount_s', customFields.ProtectVirtualMemoryCount),
        ProcessHashSha256=column_ifexists('SHA256HashData_s', customFields.ProcessHashSha256),
        UserMemoryProtectExecutableRemoteCount=column_ifexists('UserMemoryProtectExecutableRemoteCount_s', customFields.UserMemoryProtectExecutableRemoteCount),
        ConfigBuild=column_ifexists('ConfigBuild_s', customFields.ConfigBuild),
        UserMemoryAllocateExecutableRemoteCount=column_ifexists('UserMemoryAllocateExecutableRemoteCount_s', customFields.UserMemoryAllocateExecutableRemoteCount),
        ExecutableDeletedCount=column_ifexists('ExecutableDeletedCount_s', customFields.ExecutableDeletedCount),
        RegKeySecurityDecreasedCount=column_ifexists('RegKeySecurityDecreasedCount_s', customFields.RegKeySecurityDecreasedCount),
        InjectedThreadCount=column_ifexists('InjectedThreadCount_s', customFields.InjectedThreadCount),
        NetworkModuleLoadCount=column_ifexists('NetworkModuleLoadCount_s', customFields.NetworkModuleLoadCount),
        WindowTitle=column_ifexists('WindowTitle_s', customFields.WindowTitle),
        ProcessCreateFlags=column_ifexists('ProcessCreateFlags_s', customFields.ProcessCreateFlags),
        IntegrityLevel=column_ifexists('IntegrityLevel_s', customFields.IntegrityLevel),
        SourceProcessId=column_ifexists('SourceProcessId_s', customFields.SourceProcessId),
        ProcessHashSha1=column_ifexists('SHA1HashData_s', customFields.ProcessHashSha1),
        TokenType=column_ifexists('TokenType_s', customFields.TokenType),
        ProcessEndTime=column_ifexists('ProcessEndTime_s', customFields.ProcessEndTime),
        AuthenticodeHashData=column_ifexists('AuthenticodeHashData_s', customFields.AuthenticodeHashData),
        ParentBaseFileName=column_ifexists('ParentBaseFileName_s', customFields.ParentBaseFileName),
        SessionId=column_ifexists('SessionId_s', customFields.SessionId),
        Tags=column_ifexists('Tags_s', customFields.Tags),
        ProcessHashMd5=column_ifexists('MD5HashData_g', customFields.ProcessHashMd5),
        ProcessSxsFlags=column_ifexists('ProcessSxsFlags_s', customFields.ProcessSxsFlags),
        AuthenticationId=column_ifexists('AuthenticationId_s', customFields.AuthenticationId),
        WindowFlags=column_ifexists('WindowFlags_s', customFields.WindowFlags),
        ProcessCommandLine=column_ifexists('CommandLine_s', customFields.ProcessCommandLine),
        ParentAuthenticationId=column_ifexists('ParentAuthenticationId_s', customFields.ParentAuthenticationId),
        FileName=column_ifexists('ImageFileName_s', customFields.FileName),
        SourceThreadId=column_ifexists('SourceThreadId_s', customFields.SourceThreadId),
        ProcessParameterFlags=column_ifexists('ProcessParameterFlags_s', customFields.ProcessParameterFlags),
        SignInfoFlags=column_ifexists('SignInfoFlags_s', customFields.SignInfoFlags),
        ChannelVersion=column_ifexists('ChannelVersion_s', customFields.ChannelVersion),
        ChannelVersionRequired=column_ifexists('ChannelVersionRequired_s', customFields.ChannelVersionRequired),
        ChannelId=column_ifexists('ChannelId_s', customFields.ChannelId),
        DnsResponseType=column_ifexists('DnsResponseType_s', customFields.DnsResponseType),
        IP4Records=column_ifexists('IP4Records_s', customFields.IP4Records),
        CNAMERecords=column_ifexists('CNAMERecords_s', customFields.CNAMERecords),
        QueryStatus=column_ifexists('QueryStatus_s', customFields.QueryStatus),
        InterfaceIndex=column_ifexists('InterfaceIndex_s', customFields.InterfaceIndex),
        DualRequest=column_ifexists('DualRequest_s', customFields.DualRequest),
        FirstIP4Record=column_ifexists('FirstIP4Record_s', customFields.FirstIP4Record),
        UrlDomain=column_ifexists('DomainName_s', customFields.UrlDomain),
        RespondingDnsServer=column_ifexists('RespondingDnsServer_s', customFields.RespondingDnsServer),
        RequestType=column_ifexists('RequestType_s', customFields.RequestType),
        FirewallRuleId=column_ifexists('FirewallRuleId_s', customFields.FirewallRuleId),
        Options=column_ifexists('Options_s', customFields.Options),
        MinorFunction=column_ifexists('MinorFunction_s', customFields.MinorFunction),
        FileIdentifier=column_ifexists('FileIdentifier_s', customFields.FileIdentifier),
        Information=column_ifexists('Information_s', customFields.Information),
        ShareAccess=column_ifexists('ShareAccess_s', customFields.ShareAccess),
        FileObject=column_ifexists('FileObject_s', customFields.FileObject),
        FilePermission=column_ifexists('FileAttributes_s', customFields.FilePermission),
        Status=column_ifexists('Status_s', customFields.Status),
        IrpFlags=column_ifexists('IrpFlags_s', customFields.IrpFlags),
        MajorFunction=column_ifexists('MajorFunction_s', customFields.MajorFunction),
        DesiredAccess=column_ifexists('DesiredAccess_s', customFields.DesiredAccess),
        OperationFlags=column_ifexists('OperationFlags_s', customFields.OperationFlags),
        TargetFileName=column_ifexists('TargetFileName_s', customFields.TargetFileName),
        CallStackModuleNamesVersion=column_ifexists('CallStackModuleNamesVersion_s', customFields.CallStackModuleNamesVersion),
        CsaProcessDataCollectionInstanceId=column_ifexists('CsaProcessDataCollectionInstanceId_s', customFields.CsaProcessDataCollectionInstanceId),
        CallStackModuleNames=column_ifexists('CallStackModuleNames_s', customFields.CallStackModuleNames),
        CreateProcessType=column_ifexists('CreateProcessType_s', customFields.CreateProcessType),
        EtwRawProcessId=column_ifexists('EtwRawProcessId_s', customFields.EtwRawProcessId),
        EventMax=column_ifexists('EventMax_s', customFields.EventMax),
        EtwRawThreadId=column_ifexists('EtwRawThreadId_s', customFields.EtwRawThreadId),
        Flags=column_ifexists('Flags_s', customFields.Flags),
        EventMin=column_ifexists('EventMin_s', customFields.EventMin),
        RawThreadId=column_ifexists('RawThreadId_s', customFields.RawThreadId),
        SrcIpAddr=column_ifexists('LocalAddressIP4_s', customFields.SrcIpAddr),
        ConnectionFlags=column_ifexists('ConnectionFlags_s', customFields.ConnectionFlags),
        DstIpPort=column_ifexists('RemotePort_s', customFields.DstIpPort),
        SrcIpPort=column_ifexists('LocalPort_s', customFields.SrcIpPort),
        Protocol=column_ifexists('Protocol_s', customFields.Protocol),
        DstIpAddr=column_ifexists('RemoteAddressIP4_s', customFields.DstIpAddr),
        ConnectionDirection=column_ifexists('ConnectionDirection_s', customFields.ConnectionDirection),
        InContext=column_ifexists('InContext_s', customFields.InContext),
        NetworkContainmentState=column_ifexists('NetworkContainmentState_s', customFields.NetworkContainmentState),
        ConfigIDBase=column_ifexists('ConfigIDBase_s', customFields.ConfigIDBase),
        SensorStateBitMap=column_ifexists('SensorStateBitMap_s', customFields.SensorStateBitMap),
        ConfigurationVersion=column_ifexists('ConfigurationVersion_s', customFields.ConfigurationVersion),
        ConfigIDPlatform=column_ifexists('ConfigIDPlatform_s', customFields.ConfigIDPlatform),
        ConfigIDBuild=column_ifexists('ConfigIDBuild_s', customFields.ConfigIDBuild),
        ProvisionState=column_ifexists('ProvisionState_s', customFields.ProvisionState),
        Size=column_ifexists('Size_s', customFields.Size),
        IsOnNetwork=column_ifexists('IsOnNetwork_s', customFields.IsOnNetwork),
        DiskParentDeviceInstanceId=column_ifexists('DiskParentDeviceInstanceId_s', customFields.DiskParentDeviceInstanceId),
        TemporaryFileName=column_ifexists('TemporaryFileName_s', customFields.TemporaryFileName),
        FileEcpBitmask=column_ifexists('FileEcpBitmask_s', customFields.FileEcpBitmask),
        IsOnRemovableDisk=column_ifexists('IsOnRemovableDisk_s', customFields.IsOnRemovableDisk),
        ModuleCharacteristics=column_ifexists('ModuleCharacteristics_s', customFields.ModuleCharacteristics),
        OriginalEventTimeStamp=column_ifexists('OriginalEventTimeStamp_s', customFields.OriginalEventTimeStamp),
        MappedFromUserMode=column_ifexists('MappedFromUserMode_s', customFields.MappedFromUserMode),
        TreeId=column_ifexists('TreeId_s', customFields.TreeId),
        PrimaryModule=column_ifexists('PrimaryModule_s', customFields.PrimaryModule),
        UserIsAdmin=column_ifexists('UserIsAdmin_s', customFields.UserIsAdmin),
        LogoffTime=column_ifexists('LogoffTime_s', customFields.LogoffTime),
        LogonTime=column_ifexists('LogonTime_s', customFields.LogonTime),
        LogonDomain=column_ifexists('LogonDomain_s', customFields.LogonDomain),
        RemoteAccount=column_ifexists('RemoteAccount_s', customFields.RemoteAccount),
        UserFlags=column_ifexists('UserFlags_s', customFields.UserFlags),
        LogonServer=column_ifexists('LogonServer_s', customFields.LogonServer),
        DstUserName=column_ifexists('UserName_s', customFields.DstUserName),
        LogonType=column_ifexists('LogonType_s', customFields.LogonType),
        AuthenticationPackage=column_ifexists('AuthenticationPackage_s', customFields.AuthenticationPackage),
        UserPrincipal=column_ifexists('UserPrincipal_s', customFields.UserPrincipal),
        PasswordLastSet=column_ifexists('PasswordLastSet_s', customFields.PasswordLastSet),
        UserLogoffType=column_ifexists('UserLogoffType_s', customFields.UserLogoffType),
        UserLogonFlags=column_ifexists('UserLogonFlags_s', customFields.UserLogonFlags),
        Parameter2=column_ifexists('Parameter2_s', customFields.Parameter2),
        Parameter1=column_ifexists('Parameter1_s', customFields.Parameter1),
        Parameter3=column_ifexists('Parameter3_s', customFields.Parameter3),
        Line=column_ifexists('Line_s', customFields.Line),
        ErrorStatus=column_ifexists('ErrorStatus_s', customFields.ErrorStatus),
        Facility=column_ifexists('Facility_s', customFields.Facility),
        File=column_ifexists('File_s', customFields.File),
        PublicKeys=column_ifexists('PublicKeys_s', customFields.PublicKeys),
        HandleCreated=column_ifexists('HandleCreated_s', customFields.HandleCreated),
        ExtendedKeyUsages=column_ifexists('ExtendedKeyUsages_s', customFields.ExtendedKeyUsages),
        FileSigningTime=column_ifexists('FileSigningTime_s', customFields.FileSigningTime),
        Object1Name=column_ifexists('Object1Name_s', customFields.Object1Name),
        Object1Type=column_ifexists('Object1Type_s', customFields.Object1Type),
        Certificate=column_ifexists('Certificate_s', customFields.Certificate),
        RpcClientProcessId=column_ifexists('RpcClientProcessId_s', customFields.RpcClientProcessId),
        SyntheticPR2Flags=column_ifexists('SyntheticPR2Flags_s', customFields.SyntheticPR2Flags),
        MachOSubType=column_ifexists('MachOSubType_s', customFields.MachOSubType),
        SessionProcessId=column_ifexists('SessionProcessId_s', customFields.SessionProcessId),
        SVUID=column_ifexists('SVUID_s', customFields.SVUID),
        ProcessGroupId=column_ifexists('ProcessGroupId_s', customFields.ProcessGroupId),
        GID=column_ifexists('GID_s', customFields.GID),
        SVGID=column_ifexists('SVGID_s', customFields.SVGID),
        UID=column_ifexists('UID_s', customFields.UID),
        RGID=column_ifexists('RGID_s', customFields.RGID),
        RUID=column_ifexists('RUID_s', customFields.RUID),
        NeighborList=column_ifexists('NeighborList_s', customFields.NeighborList),
        DownloadServer=column_ifexists('DownloadServer_s', customFields.DownloadServer),
        DownloadPath=column_ifexists('DownloadPath_s', customFields.DownloadPath),
        DownloadPort=column_ifexists('DownloadPort_s', customFields.DownloadPort),
        CompletionEventId=column_ifexists('CompletionEventId_s', customFields.CompletionEventId),
        IsTransactedFile=column_ifexists('IsTransactedFile_s', customFields.IsTransactedFile),
        WindowStation=column_ifexists('WindowStation_s', customFields.WindowStation),
        BoundingLimitCount=column_ifexists('BoundingLimitCount_s', customFields.BoundingLimitCount),
        ProcessBehaviorBitfield=column_ifexists('ProcessBehaviorBitfield_s', customFields.ProcessBehaviorBitfield),
        Desktop=column_ifexists('Desktop_s', customFields.Desktop),
        PatternId=column_ifexists('PatternId_s', customFields.PatternId),
        ExclusionType=column_ifexists('ExclusionType_s', customFields.ExclusionType),
        ExclusionSource=column_ifexists('ExclusionSource_s', customFields.ExclusionSource),
        DriverLoadFlags=column_ifexists('DriverLoadFlags_s', customFields.DriverLoadFlags),
        CompanyName=column_ifexists('CompanyName_s', customFields.CompanyName),
        OriginalFilename=column_ifexists('OriginalFilename_s', customFields.OriginalFilename),
        FileVersion=column_ifexists('FileVersion_s', customFields.FileVersion),
        GrandParentBaseFileName=column_ifexists('GrandParentBaseFileName_s', customFields.GrandParentBaseFileName),
        ShowWindowFlags=column_ifexists('ShowWindowFlags_s', customFields.ShowWindowFlags),
        ThreadStartAddress=column_ifexists('ThreadStartAddress_s', customFields.ThreadStartAddress),
        InjectedThreadFlag=column_ifexists('InjectedThreadFlag_s', customFields.InjectedThreadFlag),
        UserThread=column_ifexists('UserThread_s', customFields.UserThread),
        TargetThreadModule=column_ifexists('TargetThreadModule_s', customFields.TargetThreadModule),
        TargetThreadId=column_ifexists('TargetThreadId_s', customFields.TargetThreadId),
        ThreadStartContext=column_ifexists('ThreadStartContext_s', customFields.ThreadStartContext),
        SourceThreadStartAddress=column_ifexists('SourceThreadStartAddress_s', customFields.SourceThreadStartAddress),
        InterfaceGuid=column_ifexists('InterfaceGuid_g', customFields.InterfaceGuid),
        InterfaceVersion=column_ifexists('InterfaceVersion_s', customFields.InterfaceVersion),
        RpcClientThreadId=column_ifexists('RpcClientThreadId_s', customFields.RpcClientThreadId),
        TaskXml=column_ifexists('TaskXml_s', customFields.TaskXml),
        TaskAuthor=column_ifexists('TaskAuthor_s', customFields.TaskAuthor),
        TaskName=column_ifexists('TaskName_s', customFields.TaskName),
        RpcOpNum=column_ifexists('RpcOpNum_s', customFields.RpcOpNum),
        TaskExecArguments=column_ifexists('TaskExecArguments_s', customFields.TaskExecArguments),
        TaskExecCommand=column_ifexists('TaskExecCommand_s', customFields.TaskExecCommand),
        RpcNestingLevel=column_ifexists('RpcNestingLevel_s', customFields.RpcNestingLevel),
        ErrorLocation=column_ifexists('ErrorLocation_s', customFields.ErrorLocation),
        ErrorReason=column_ifexists('ErrorReason_s', customFields.ErrorReason),
        Parameter64_1=column_ifexists('Parameter64_1_s', customFields.Parameter64_1),
        ErrorSource=column_ifexists('ErrorSource_s', customFields.ErrorSource),
        ParameterSizedBuffer_1=column_ifexists('ParameterSizedBuffer_1_g', customFields.ParameterSizedBuffer_1),
        ErrorCode=column_ifexists('ErrorCode_s', customFields.ErrorCode),
        DeviceProductId=column_ifexists('DeviceProductId_s', customFields.DeviceProductId),
        DeviceVersion=column_ifexists('DeviceVersion_s', customFields.DeviceVersion),
        DeviceTimeStamp=column_ifexists('DeviceTimeStamp_s', customFields.DeviceTimeStamp),
        DeviceInstanceId=column_ifexists('DeviceInstanceId_s', customFields.DeviceInstanceId),
        DeviceDescriptorSetHash=column_ifexists('DeviceDescriptorSetHash_s', customFields.DeviceDescriptorSetHash),
        DeviceVendorId=column_ifexists('DeviceVendorId_s', customFields.DeviceVendorId),
        DeviceManufacturer=column_ifexists('DeviceManufacturer_s', customFields.DeviceManufacturer),
        DeviceProduct=column_ifexists('DeviceProduct_s', customFields.DeviceProduct),
        GroupRid=column_ifexists('GroupRid_s', customFields.GroupRid),
        UserRid=column_ifexists('UserRid_s', customFields.UserRid),
        DomainSid=column_ifexists('DomainSid_s', customFields.DomainSid),
        LightningLatencyState=column_ifexists('LightningLatencyState_s', customFields.LightningLatencyState),
        UnixMode=column_ifexists('UnixMode_s', customFields.UnixMode),
        VnodeType=column_ifexists('VnodeType_s', customFields.VnodeType),
        TargetDirectoryName=column_ifexists('TargetDirectoryName_s', customFields.TargetDirectoryName),
        ApiReturnValue=column_ifexists('ApiReturnValue_s', customFields.ApiReturnValue),
        ServiceDisplayName=column_ifexists('ServiceDisplayName_s', customFields.ServiceDisplayName),
        LinkName=column_ifexists('LinkName_s', customFields.LinkName),
        VersionInfo=column_ifexists('VersionInfo_s', customFields.VersionInfo),
        LanguageId=column_ifexists('LanguageId_s', customFields.LanguageId),
        AsepFlags=column_ifexists('AsepFlags_s', customFields.AsepFlags),
        RegObjectName=column_ifexists('RegObjectName_s', customFields.RegObjectName),
        Data1=column_ifexists('Data1_s', customFields.Data1),
        RegOperationType=column_ifexists('RegOperationType_s', customFields.RegOperationType),
        ProcessArgs=column_ifexists('TargetCommandLineParameters_s', customFields.ProcessArgs),
        RegStringValue=column_ifexists('RegStringValue_s', customFields.RegStringValue),
        RegType=column_ifexists('RegType_s', customFields.RegType),
        AsepClass=column_ifexists('AsepClass_s', customFields.AsepClass),
        AsepIndex=column_ifexists('AsepIndex_s', customFields.AsepIndex),
        RegValueName=column_ifexists('RegValueName_s', customFields.RegValueName),
        AsepValueType=column_ifexists('AsepValueType_s', customFields.AsepValueType),
        LocalSession=column_ifexists('LocalSession_s', customFields.LocalSession),
        DstDvcHostname=column_ifexists('ClientComputerName_s', customFields.DstDvcHostname),
        PrivilegesBitmask=column_ifexists('PrivilegesBitmask_s', customFields.PrivilegesBitmask),
        EnabledPrivilegesBitmask=column_ifexists('EnabledPrivilegesBitmask_s', customFields.EnabledPrivilegesBitmask),
        UserGroupsBitmask=column_ifexists('UserGroupsBitmask_s', customFields.UserGroupsBitmask),
        Timeout=column_ifexists('Timeout_s', customFields.Timeout),
        ProcessCount=column_ifexists('ProcessCount_s', customFields.ProcessCount),
        SuppressType=column_ifexists('SuppressType_s', customFields.SuppressType),
        BoundedCount=column_ifexists('BoundedCount_s', customFields.BoundedCount),
        IP6Records=column_ifexists('IP6Records_s', customFields.IP6Records),
        FirstIP6Record=column_ifexists('FirstIP6Record_s', customFields.FirstIP6Record),
        WmiQuery=column_ifexists('WmiQuery_s', customFields.WmiQuery),
        WmiNamespaceName=column_ifexists('WmiNamespaceName_s', customFields.WmiNamespaceName),
        RegClassificationIndex=column_ifexists('RegClassificationIndex_s', customFields.RegClassificationIndex),
        RegClassificationFlags=column_ifexists('RegClassificationFlags_s', customFields.RegClassificationFlags),
        RegClassification=column_ifexists('RegClassification_s', customFields.RegClassification),
        SystemTableIndex=column_ifexists('SystemTableIndex_s', customFields.SystemTableIndex),
        ScreenshotType=column_ifexists('ScreenshotType_s', customFields.ScreenshotType),
        SubStatus=column_ifexists('SubStatus_s', customFields.SubStatus),
        UmppaInjectAbortCount=column_ifexists('UmppaInjectAbortCount_s', customFields.UmppaInjectAbortCount),
        UmppaInjectFailedCount=column_ifexists('UmppaInjectFailedCount_s', customFields.UmppaInjectFailedCount),
        UmppaInjectionType=column_ifexists('UmppaInjectionType_s', customFields.UmppaInjectionType),
        UmppaInjectLoadFailCount=column_ifexists('UmppaInjectLoadFailCount_s', customFields.UmppaInjectLoadFailCount),
        UmppaInjectCfgCheckCount=column_ifexists('UmppaInjectCfgCheckCount_s', customFields.UmppaInjectCfgCheckCount),
        UmppaInjectExtensionErrorCount=column_ifexists('UmppaInjectExtensionErrorCount_s', customFields.UmppaInjectExtensionErrorCount),
        UmppaInjectInvalidThreadCount=column_ifexists('UmppaInjectInvalidThreadCount_s', customFields.UmppaInjectInvalidThreadCount),
        UmppaInjectFileSectionCount=column_ifexists('UmppaInjectFileSectionCount_s', customFields.UmppaInjectFileSectionCount),
        TotalCount=column_ifexists('TotalCount_s', customFields.TotalCount),
        UmppaInjectLoadErrorCount=column_ifexists('UmppaInjectLoadErrorCount_s', customFields.UmppaInjectLoadErrorCount),
        UmppaInjectBadAlertCount=column_ifexists('UmppaInjectBadAlertCount_s', customFields.UmppaInjectBadAlertCount),
        UmppaInjectApcInsertionCount=column_ifexists('UmppaInjectApcInsertionCount_s', customFields.UmppaInjectApcInsertionCount),
        UmppaInjectCopyFailCount=column_ifexists('UmppaInjectCopyFailCount_s', customFields.UmppaInjectCopyFailCount),
        FirewallRule=column_ifexists('FirewallRule_s', customFields.FirewallRule),
        RegNumericValue=column_ifexists('RegNumericValue_s', customFields.RegNumericValue),
        VolumeDriveLetter=column_ifexists('VolumeDriveLetter_s', customFields.VolumeDriveLetter),
        VolumeSnapshotName=column_ifexists('VolumeSnapshotName_s', customFields.VolumeSnapshotName),
        VolumeName=column_ifexists('VolumeName_s', customFields.VolumeName),
        UserCanonical=column_ifexists('UserCanonical_s', customFields.UserCanonical),
        LogonId=column_ifexists('LogonId_s', customFields.LogonId),
        ConfigStateData=column_ifexists('ConfigStateData_s', customFields.ConfigStateData),
        FirewallProfile=column_ifexists('FirewallProfile_s', customFields.FirewallProfile),
        FirewallOption=column_ifexists('FirewallOption_s', customFields.FirewallOption),
        FirewallOptionNumericValue=column_ifexists('FirewallOptionNumericValue_s', customFields.FirewallOptionNumericValue),
        SmbShareName=column_ifexists('SmbShareName_s', customFields.SmbShareName),
        TargetSHA256HashData=column_ifexists('TargetSHA256HashData_s', customFields.TargetSHA256HashData),
        IsCpuDataCommonOnAllCores=column_ifexists('IsCpuDataCommonOnAllCores_s', customFields.IsCpuDataCommonOnAllCores),
        SpibarDataFrap=column_ifexists('SpibarDataFrap_s', customFields.SpibarDataFrap),
        EfiVariableDbxSha256Hash=column_ifexists('EfiVariableDbxSha256Hash_s', customFields.EfiVariableDbxSha256Hash),
        PciConfigDataBgsm=column_ifexists('PciConfigDataBgsm_s', customFields.PciConfigDataBgsm),
        PciConfigDataDpr=column_ifexists('PciConfigDataDpr_s', customFields.PciConfigDataDpr),
        CpuDataCommonSmrrSupported=column_ifexists('CpuDataCommonSmrrSupported_s', customFields.CpuDataCommonSmrrSupported),
        SpibarDataHsfc=column_ifexists('SpibarDataHsfc_s', customFields.SpibarDataHsfc),
        EfiVariableSecureBoot=column_ifexists('EfiVariableSecureBoot_s', customFields.EfiVariableSecureBoot),
        PciConfigDataMesegMask=column_ifexists('PciConfigDataMesegMask_s', customFields.PciConfigDataMesegMask),
        PciConfigDataTolud=column_ifexists('PciConfigDataTolud_s', customFields.PciConfigDataTolud),
        EfiVariableDbxAttributes=column_ifexists('EfiVariableDbxAttributes_s', customFields.EfiVariableDbxAttributes),
        PciConfigDataPavpc=column_ifexists('PciConfigDataPavpc_s', customFields.PciConfigDataPavpc),
        EfiVariableCustomModeAttributes=column_ifexists('EfiVariableCustomModeAttributes_s', customFields.EfiVariableCustomModeAttributes),
        SpibarDataFreg3=column_ifexists('SpibarDataFreg3_s', customFields.SpibarDataFreg3),
        SpibarDataFreg4=column_ifexists('SpibarDataFreg4_s', customFields.SpibarDataFreg4),
        SpibarDataFreg1=column_ifexists('SpibarDataFreg1_s', customFields.SpibarDataFreg1),
        SpibarDataFreg2=column_ifexists('SpibarDataFreg2_s', customFields.SpibarDataFreg2),
        SpibarDataFreg0=column_ifexists('SpibarDataFreg0_s', customFields.SpibarDataFreg0),
        EfiSupported=column_ifexists('EfiSupported_s', customFields.EfiSupported),
        EfiVariablePkAttributes=column_ifexists('EfiVariablePkAttributes_s', customFields.EfiVariablePkAttributes),
        CpuDataCommonPrmrrUncorePhysicalMask=column_ifexists('CpuDataCommonPrmrrUncorePhysicalMask_s', customFields.CpuDataCommonPrmrrUncorePhysicalMask),
        PciConfigDataGenPmconA=column_ifexists('PciConfigDataGenPmconA_s', customFields.PciConfigDataGenPmconA),
        PciConfigDataTsegmb=column_ifexists('PciConfigDataTsegmb_s', customFields.PciConfigDataTsegmb),
        SpibarDataVscc0=column_ifexists('SpibarDataVscc0_s', customFields.SpibarDataVscc0),
        EfiVariablePkSha256Hash=column_ifexists('EfiVariablePkSha256Hash_s', customFields.EfiVariablePkSha256Hash),
        SpibarDataVscc1=column_ifexists('SpibarDataVscc1_s', customFields.SpibarDataVscc1),
        CpuDataCommonSmrrPhysicalMask=column_ifexists('CpuDataCommonSmrrPhysicalMask_s', customFields.CpuDataCommonSmrrPhysicalMask),
        NorthBridgeDeviceId=column_ifexists('NorthBridgeDeviceId_s', customFields.NorthBridgeDeviceId),
        IsNorthBridgeSupported=column_ifexists('IsNorthBridgeSupported_s', customFields.IsNorthBridgeSupported),
        PciConfigDataTom=column_ifexists('PciConfigDataTom_s', customFields.PciConfigDataTom),
        EfiVariableKekSha256Hash=column_ifexists('EfiVariableKekSha256Hash_s', customFields.EfiVariableKekSha256Hash),
        SouthBridgeVendorId=column_ifexists('SouthBridgeVendorId_s', customFields.SouthBridgeVendorId),
        EfiVariableSignatureSupport=column_ifexists('EfiVariableSignatureSupport_s', customFields.EfiVariableSignatureSupport),
        MmioDataTco1Cnt=column_ifexists('MmioDataTco1Cnt_s', customFields.MmioDataTco1Cnt),
        EfiVariableKekAttributes=column_ifexists('EfiVariableKekAttributes_s', customFields.EfiVariableKekAttributes),
        FirmwareAnalysisCpuSupported=column_ifexists('FirmwareAnalysisCpuSupported_s', customFields.FirmwareAnalysisCpuSupported),
        MmioDataSmiEn=column_ifexists('MmioDataSmiEn_s', customFields.MmioDataSmiEn),
        CpuDataCommonPrmrrUncoreSupported=column_ifexists('CpuDataCommonPrmrrUncoreSupported_s', customFields.CpuDataCommonPrmrrUncoreSupported),
        NorthBridgeVendorId=column_ifexists('NorthBridgeVendorId_s', customFields.NorthBridgeVendorId),
        CpuDataCommonMsrApicBase=column_ifexists('CpuDataCommonMsrApicBase_s', customFields.CpuDataCommonMsrApicBase),
        EfiVariableDbAttributes=column_ifexists('EfiVariableDbAttributes_s', customFields.EfiVariableDbAttributes),
        SpibarDataPr2=column_ifexists('SpibarDataPr2_s', customFields.SpibarDataPr2),
        SpibarDataBfpr=column_ifexists('SpibarDataBfpr_s', customFields.SpibarDataBfpr),
        SpibarDataPr1=column_ifexists('SpibarDataPr1_s', customFields.SpibarDataPr1),
        EfiVariableSecureBootAttributes=column_ifexists('EfiVariableSecureBootAttributes_s', customFields.EfiVariableSecureBootAttributes),
        SpibarDataPr0=column_ifexists('SpibarDataPr0_s', customFields.SpibarDataPr0),
        IsSouthBridgeSupported=column_ifexists('IsSouthBridgeSupported_s', customFields.IsSouthBridgeSupported),
        PciConfigDataHfsts1=column_ifexists('PciConfigDataHfsts1_s', customFields.PciConfigDataHfsts1),
        CpuDataCommonMsrFeatureControl=column_ifexists('CpuDataCommonMsrFeatureControl_s', customFields.CpuDataCommonMsrFeatureControl),
        PciConfigDataRemaplimit=column_ifexists('PciConfigDataRemaplimit_s', customFields.PciConfigDataRemaplimit),
        CpuDataCommonSiliconDebugFeatureControl=column_ifexists('CpuDataCommonSiliconDebugFeatureControl_s', customFields.CpuDataCommonSiliconDebugFeatureControl),
        CpuDataCommonSmrrPhysicalBase=column_ifexists('CpuDataCommonSmrrPhysicalBase_s', customFields.CpuDataCommonSmrrPhysicalBase),
        SouthBridgeDeviceId=column_ifexists('SouthBridgeDeviceId_s', customFields.SouthBridgeDeviceId),
        CpuDataCommonPrmrrPhysicalMask=column_ifexists('CpuDataCommonPrmrrPhysicalMask_s', customFields.CpuDataCommonPrmrrPhysicalMask),
        EfiVariableDbSha256Hash=column_ifexists('EfiVariableDbSha256Hash_s', customFields.EfiVariableDbSha256Hash),
        SpibarDataHsfs=column_ifexists('SpibarDataHsfs_s', customFields.SpibarDataHsfs),
        PciConfigDataRemapbase=column_ifexists('PciConfigDataRemapbase_s', customFields.PciConfigDataRemapbase),
        EfiVariableCustomMode=column_ifexists('EfiVariableCustomMode_s', customFields.EfiVariableCustomMode),
        PciConfigDataGgc=column_ifexists('PciConfigDataGgc_s', customFields.PciConfigDataGgc),
        PciConfigDataTouud=column_ifexists('PciConfigDataTouud_s', customFields.PciConfigDataTouud),
        SpibarDataPr4=column_ifexists('SpibarDataPr4_s', customFields.SpibarDataPr4),
        SpibarDataPr3=column_ifexists('SpibarDataPr3_s', customFields.SpibarDataPr3),
        CpuDataCommonPrmrrSupported=column_ifexists('CpuDataCommonPrmrrSupported_s', customFields.CpuDataCommonPrmrrSupported),
        PciConfigDataSmramc=column_ifexists('PciConfigDataSmramc_s', customFields.PciConfigDataSmramc),
        EfiVariableSignatureSupportAttributes=column_ifexists('EfiVariableSignatureSupportAttributes_s', customFields.EfiVariableSignatureSupportAttributes),
        PciConfigDataBdsm=column_ifexists('PciConfigDataBdsm_s', customFields.PciConfigDataBdsm),
        EfiVariableSetupModeAttributes=column_ifexists('EfiVariableSetupModeAttributes_s', customFields.EfiVariableSetupModeAttributes),
        EfiVariableSetupMode=column_ifexists('EfiVariableSetupMode_s', customFields.EfiVariableSetupMode),
        PciConfigDataBiosCntl=column_ifexists('PciConfigDataBiosCntl_s', customFields.PciConfigDataBiosCntl),
        PciConfigDataMesegBase=column_ifexists('PciConfigDataMesegBase_s', customFields.PciConfigDataMesegBase),
        SourceFileName=column_ifexists('SourceFileName_s', customFields.SourceFileName),
        NewFileIdentifier=column_ifexists('NewFileIdentifier_s', customFields.NewFileIdentifier),
        FeatureVector=column_ifexists('FeatureVector_s', customFields.FeatureVector),
        ModelPrediction=column_ifexists('ModelPrediction_s', customFields.ModelPrediction),
        Malicious=column_ifexists('Malicious_s', customFields.Malicious),
        FeatureExtractionVersion=column_ifexists('FeatureExtractionVersion_s', customFields.FeatureExtractionVersion),
        FXFileSize=column_ifexists('FXFileSize_s', customFields.FXFileSize),
        MLModelVersion=column_ifexists('MLModelVersion_s', customFields.MLModelVersion),
        FontBufferLength=column_ifexists('FontBufferLength_s', customFields.FontBufferLength),
        FontFileCount=column_ifexists('FontFileCount_s', customFields.FontFileCount),
        FontLoadOperation=column_ifexists('FontLoadOperation_s', customFields.FontLoadOperation),
        FontBuffer=column_ifexists('FontBuffer_s', customFields.FontBuffer),
        FontFileName=column_ifexists('FontFileName_s', customFields.FontFileName),
        TemplateInstanceId=column_ifexists('TemplateInstanceId_s', customFields.TemplateInstanceId),
        PatternDisposition=column_ifexists('PatternDisposition_s', customFields.PatternDisposition),
        ServicePackMajor=column_ifexists('ServicePackMajor_s', customFields.ServicePackMajor),
        ProductSku=column_ifexists('ProductSku_s', customFields.ProductSku),
        PointerSize=column_ifexists('PointerSize_s', customFields.PointerSize),
        ProductName=column_ifexists('ProductName_s', customFields.ProductName),
        AgentVersion=column_ifexists('AgentVersion_s', customFields.AgentVersion),
        ServicePackMinor=column_ifexists('ServicePackMinor_s', customFields.ServicePackMinor),
        SuiteMask=column_ifexists('SuiteMask_s', customFields.SuiteMask),
        SubBuildNumber=column_ifexists('SubBuildNumber_s', customFields.SubBuildNumber),
        PlatformId=column_ifexists('PlatformId_s', customFields.PlatformId),
        BuildType=column_ifexists('BuildType_s', customFields.BuildType),
        MajorVersion=column_ifexists('MajorVersion_s', customFields.MajorVersion),
        ProductType=column_ifexists('ProductType_s', customFields.ProductType),
        MinorVersion=column_ifexists('MinorVersion_s', customFields.MinorVersion),
        CheckedBuild=column_ifexists('CheckedBuild_s', customFields.CheckedBuild),
        BuildNumber=column_ifexists('BuildNumber_s', customFields.BuildNumber),
        RFMState=column_ifexists('RFMState_s', customFields.RFMState),
        FirmwareAnalysisEclControlInterfaceVersion=column_ifexists('FirmwareAnalysisEclControlInterfaceVersion_s', customFields.FirmwareAnalysisEclControlInterfaceVersion),
        FirmwareAnalysisEclConsumerInterfaceVersion=column_ifexists('FirmwareAnalysisEclConsumerInterfaceVersion_s', customFields.FirmwareAnalysisEclConsumerInterfaceVersion),
        BootTimeFunctionalityLevel=column_ifexists('BootTimeFunctionalityLevel_s', customFields.BootTimeFunctionalityLevel),
        ReasonOfFunctionalityLevel=column_ifexists('ReasonOfFunctionalityLevel_s', customFields.ReasonOfFunctionalityLevel),
        CurrentFunctionalityLevel=column_ifexists('CurrentFunctionalityLevel_s', customFields.CurrentFunctionalityLevel),
        PciAttachmentState=column_ifexists('PciAttachmentState_s', customFields.PciAttachmentState),
        LocalAddressIP6=column_ifexists('LocalAddressIP6_s', customFields.LocalAddressIP6),
        RemoteAddressIP6=column_ifexists('RemoteAddressIP6_s', customFields.RemoteAddressIP6),
        RegBinaryValue=column_ifexists('RegBinaryValue_s', customFields.RegBinaryValue),
        ServiceDescription=column_ifexists('ServiceDescription_s', customFields.ServiceDescription),
        ServiceSecurity=column_ifexists('ServiceSecurity_s', customFields.ServiceSecurity),
        ServiceImagePath=column_ifexists('ServiceImagePath_s', customFields.ServiceImagePath),
        ServiceStart=column_ifexists('ServiceStart_s', customFields.ServiceStart),
        ServiceType=column_ifexists('ServiceType_s', customFields.ServiceType),
        ServiceFailureActions=column_ifexists('ServiceFailureActions_s', customFields.ServiceFailureActions),
        ServiceErrorControl=column_ifexists('ServiceErrorControl_s', customFields.ServiceErrorControl),
        SymbolicLinkName=column_ifexists('SymbolicLinkName_s', customFields.SymbolicLinkName),
        SymbolicLinkTarget=column_ifexists('SymbolicLinkTarget_s', customFields.SymbolicLinkTarget),
        DevicePropertyClassName=column_ifexists('DevicePropertyClassName_s', customFields.DevicePropertyClassName),
        DeviceActiveConfigurationNumber=column_ifexists('DeviceActiveConfigurationNumber_s', customFields.DeviceActiveConfigurationNumber),
        DevicePropertyClassGuid=column_ifexists('DevicePropertyClassGuid_g', customFields.DevicePropertyClassGuid),
        DeviceUsbSubclass=column_ifexists('DeviceUsbSubclass_s', customFields.DeviceUsbSubclass),
        ParentHubInstanceId=column_ifexists('ParentHubInstanceId_s', customFields.ParentHubInstanceId),
        DeviceConnectionStatus=column_ifexists('DeviceConnectionStatus_s', customFields.DeviceConnectionStatus),
        DeviceUsbClass=column_ifexists('DeviceUsbClass_s', customFields.DeviceUsbClass),
        ParentHubPort=column_ifexists('ParentHubPort_s', customFields.ParentHubPort),
        DevicePropertyManufacturer=column_ifexists('DevicePropertyManufacturer_s', customFields.DevicePropertyManufacturer),
        DevicePropertyLocationInformation=column_ifexists('DevicePropertyLocationInformation_s', customFields.DevicePropertyLocationInformation),
        DeviceProtocol=column_ifexists('DeviceProtocol_s', customFields.DeviceProtocol),
        DevicePropertyDeviceDescription=column_ifexists('DevicePropertyDeviceDescription_s', customFields.DevicePropertyDeviceDescription),
        DeviceUsbVersion=column_ifexists('DeviceUsbVersion_s', customFields.DeviceUsbVersion),
        ModuleBaseAddress=column_ifexists('ModuleBaseAddress_s', customFields.ModuleBaseAddress),
        ModuleSize=column_ifexists('ModuleSize_s', customFields.ModuleSize),
        IsOnClearCaseMvfs=column_ifexists('IsOnClearCaseMvfs_s', customFields.IsOnClearCaseMvfs),
        DllCharacteristics=column_ifexists('DllCharacteristics_s', customFields.DllCharacteristics),
        ActiveCpuCount=column_ifexists('ActiveCpuCount_s', customFields.ActiveCpuCount),
        MemoryTotal=column_ifexists('MemoryTotal_s', customFields.MemoryTotal),
        BillingType=column_ifexists('BillingType_s', customFields.BillingType),
        ConnectionCipher=column_ifexists('ConnectionCipher_s', customFields.ConnectionCipher),
        ConnectType=column_ifexists('ConnectType_s', customFields.ConnectType),
        ConnectionProtocol=column_ifexists('ConnectionProtocol_s', customFields.ConnectionProtocol),
        ConnectionHash=column_ifexists('ConnectionHash_s', customFields.ConnectionHash),
        ConnectTime=column_ifexists('ConnectTime_s', customFields.ConnectTime),
        ConnectionHashStrength=column_ifexists('ConnectionHashStrength_s', customFields.ConnectionHashStrength),
        FailedConnectCount=column_ifexists('FailedConnectCount_s', customFields.FailedConnectCount),
        ConnectionCipherStrength=column_ifexists('ConnectionCipherStrength_s', customFields.ConnectionCipherStrength),
        ConnectionExchangeStrength=column_ifexists('ConnectionExchangeStrength_s', customFields.ConnectionExchangeStrength),
        ConnectionExchange=column_ifexists('ConnectionExchange_s', customFields.ConnectionExchange),
        PreviousConnectTime=column_ifexists('PreviousConnectTime_s', customFields.PreviousConnectTime),
        FalconServiceServletErrors=column_ifexists('FalconServiceServletErrors_s', customFields.FalconServiceServletErrors),
        FalconServiceComponent=column_ifexists('FalconServiceComponent_s', customFields.FalconServiceComponent),
        FalconServiceServletStarts=column_ifexists('FalconServiceServletStarts_s', customFields.FalconServiceServletStarts),
        FalconServiceState=column_ifexists('FalconServiceState_s', customFields.FalconServiceState),
        ScriptContent=column_ifexists('ScriptContent_s', customFields.ScriptContent),
        OriginalContentLength=column_ifexists('OriginalContentLength_s', customFields.OriginalContentLength),
        ScriptingLanguageId=column_ifexists('ScriptingLanguageId_s', customFields.ScriptingLanguageId),
        ParentImageFileName=column_ifexists('ParentImageFileName_s', customFields.ParentImageFileName),
        GrandparentImageFileName=column_ifexists('GrandparentImageFileName_s', customFields.GrandparentImageFileName),
        ScriptContentName=column_ifexists('ScriptContentName_s', customFields.ScriptContentName),
        HostProcessType=column_ifexists('HostProcessType_s', customFields.HostProcessType),
        ProcessParentCommandLine=column_ifexists('ParentCommandLine_s', customFields.ProcessParentCommandLine),
        ContentSHA256HashData=column_ifexists('ContentSHA256HashData_s', customFields.ContentSHA256HashData),
        ProcessGrandparentCommandLine=column_ifexists('GrandparentCommandLine_s', customFields.ProcessGrandparentCommandLine)
    | project
        TimeGenerated, 
        EventVendor,
        EventProduct,
        FileMode,
        DeviceSerialNumber,
        IcmpCode,
        IcmpType,
        LastUpdateInstalledTime,
        RebootRequired,
        PendingUpdateIds,
        InstalledUpdateIds,
        InstalledUpdateExtendedStatus,
        SupersededUpdateIds,
        ConfigurationDescriptorValue,
        ConfigurationDescriptorAttributes,
        DeviceDescriptorUniqueIdentifier,
        ConfigurationDescriptorName,
        ConfigurationDescriptorNumInterfaces,
        ConfigurationDescriptorMaxPowerDraw,
        ScreenshotsTakenCount,
        ExitCode,
        ParentProcessId,
        DstUserIdentity,
        NetworkListenCount,
        SuspiciousRawDiskReadCount,
        NetworkBindCount,
        NetworkRecvAcceptCount,
        ContextData,
        Id,
        NewExecutableWrittenCount,
        ExeAndServiceCount,
        NetworkCloseCount,
        SuspectStackCount,
        CLICreationCount,
        UnsignedModuleLoadCount,
        UserTime,
        EventMessage,
        RawProcessId,
        ContextTimeStamp,
        AllocateVirtualMemoryCount,
        ContextProcessId,
        ServiceEventCount,
        SnapshotFileOpenCount,
        RemovableDiskFileWrittenCount,
        InjectedDllCount,
        ModuleLoadCount,
        UserMemoryProtectExecutableCount,
        NetworkCapableAsepWriteCount,
        TargetProcessId,
        DnsRequestCount,
        ArchiveFileWrittenCount,
        Entitlements,
        Name,
        ProcessStartTime,
        SetThreadContextCount,
        SuspiciousCredentialModuleLoadCount,
        DvcInterfaceGuid,
        Cid,
        FileDeletedCount,
        UserMemoryAllocateExecutableCount,
        DirectoryCreatedCount,
        NetworkConnectCountUdp,
        QueueApcCount,
        ContextThreadId,
        Aip,
        SuspiciousFontLoadCount,
        ConHostId,
        NetworkConnectCount,
        BinaryExecutableWrittenCount,
        CycleTime,
        DvcOs,
        ConHostProcessId,
        PrivilegedProcessHandleCount,
        MaxThreadCount,
        ImageSubsystem,
        GenericFileWrittenCount,
        EffectiveTransmissionClass,
        ScriptEngineInvocationCount,
        RunDllInvocationCount,
        timestamp,
        CreateProcessCount,
        KernelTime,
        DirectoryEnumeratedCount,
        ConfigStateHash,
        AsepWrittenCount,
        SuspiciousDnsRequestCount,
        DocumentFileWrittenCount,
        ProtectVirtualMemoryCount,
        ProcessHashSha256,
        UserMemoryProtectExecutableRemoteCount,
        ConfigBuild,
        UserMemoryAllocateExecutableRemoteCount,
        ExecutableDeletedCount,
        RegKeySecurityDecreasedCount,
        InjectedThreadCount,
        NetworkModuleLoadCount,
        WindowTitle,
        ProcessCreateFlags,
        IntegrityLevel,
        SourceProcessId,
        ProcessHashSha1,
        TokenType,
        ProcessEndTime,
        AuthenticodeHashData,
        ParentBaseFileName,
        SessionId,
        Tags,
        ProcessHashMd5,
        ProcessSxsFlags,
        AuthenticationId,
        WindowFlags,
        ProcessCommandLine,
        ParentAuthenticationId,
        FileName,
        SourceThreadId,
        ProcessParameterFlags,
        SignInfoFlags,
        ChannelVersion,
        ChannelVersionRequired,
        ChannelId,
        DnsResponseType,
        IP4Records,
        CNAMERecords,
        QueryStatus,
        InterfaceIndex,
        DualRequest,
        FirstIP4Record,
        UrlDomain,
        RespondingDnsServer,
        RequestType,
        FirewallRuleId,
        Options,
        MinorFunction,
        FileIdentifier,
        Information,
        ShareAccess,
        FileObject,
        FilePermission,
        Status,
        IrpFlags,
        MajorFunction,
        DesiredAccess,
        OperationFlags,
        TargetFileName,
        CallStackModuleNamesVersion,
        CsaProcessDataCollectionInstanceId,
        CallStackModuleNames,
        CreateProcessType,
        EtwRawProcessId,
        EventMax,
        EtwRawThreadId,
        Flags,
        EventMin,
        RawThreadId,
        SrcIpAddr,
        ConnectionFlags,
        DstIpPort,
        SrcIpPort,
        Protocol,
        DstIpAddr,
        ConnectionDirection,
        InContext,
        NetworkContainmentState,
        ConfigIDBase,
        SensorStateBitMap,
        ConfigurationVersion,
        ConfigIDPlatform,
        ConfigIDBuild,
        ProvisionState,
        Size,
        IsOnNetwork,
        DiskParentDeviceInstanceId,
        TemporaryFileName,
        FileEcpBitmask,
        IsOnRemovableDisk,
        ModuleCharacteristics,
        OriginalEventTimeStamp,
        MappedFromUserMode,
        TreeId,
        PrimaryModule,
        UserIsAdmin,
        LogoffTime,
        LogonTime,
        LogonDomain,
        RemoteAccount,
        UserFlags,
        LogonServer,
        DstUserName,
        LogonType,
        AuthenticationPackage,
        UserPrincipal,
        PasswordLastSet,
        UserLogoffType,
        UserLogonFlags,
        Parameter2,
        Parameter1,
        Parameter3,
        Line,
        ErrorStatus,
        Facility,
        File,
        PublicKeys,
        HandleCreated,
        ExtendedKeyUsages,
        FileSigningTime,
        Object1Name,
        Object1Type,
        Certificate,
        RpcClientProcessId,
        SyntheticPR2Flags,
        MachOSubType,
        SessionProcessId,
        SVUID,
        ProcessGroupId,
        GID,
        SVGID,
        UID,
        RGID,
        RUID,
        NeighborList,
        DownloadServer,
        DownloadPath,
        DownloadPort,
        CompletionEventId,
        IsTransactedFile,
        WindowStation,
        BoundingLimitCount,
        ProcessBehaviorBitfield,
        Desktop,
        PatternId,
        ExclusionType,
        ExclusionSource,
        DriverLoadFlags,
        CompanyName,
        OriginalFilename,
        FileVersion,
        GrandParentBaseFileName,
        ShowWindowFlags,
        ThreadStartAddress,
        InjectedThreadFlag,
        UserThread,
        TargetThreadModule,
        TargetThreadId,
        ThreadStartContext,
        SourceThreadStartAddress,
        InterfaceGuid,
        InterfaceVersion,
        RpcClientThreadId,
        TaskXml,
        TaskAuthor,
        TaskName,
        RpcOpNum,
        TaskExecArguments,
        TaskExecCommand,
        RpcNestingLevel,
        ErrorLocation,
        ErrorReason,
        Parameter64_1,
        ErrorSource,
        ParameterSizedBuffer_1,
        ErrorCode,
        DeviceProductId,
        DeviceVersion,
        DeviceTimeStamp,
        DeviceInstanceId,
        DeviceDescriptorSetHash,
        DeviceVendorId,
        DeviceManufacturer,
        DeviceProduct,
        GroupRid,
        UserRid,
        DomainSid,
        LightningLatencyState,
        UnixMode,
        VnodeType,
        TargetDirectoryName,
        ApiReturnValue,
        ServiceDisplayName,
        LinkName,
        VersionInfo,
        LanguageId,
        AsepFlags,
        RegObjectName,
        Data1,
        RegOperationType,
        ProcessArgs,
        RegStringValue,
        RegType,
        AsepClass,
        AsepIndex,
        RegValueName,
        AsepValueType,
        LocalSession,
        DstDvcHostname,
        PrivilegesBitmask,
        EnabledPrivilegesBitmask,
        UserGroupsBitmask,
        Timeout,
        ProcessCount,
        SuppressType,
        BoundedCount,
        IP6Records,
        FirstIP6Record,
        WmiQuery,
        WmiNamespaceName,
        RegClassificationIndex,
        RegClassificationFlags,
        RegClassification,
        SystemTableIndex,
        ScreenshotType,
        SubStatus,
        UmppaInjectAbortCount,
        UmppaInjectFailedCount,
        UmppaInjectionType,
        UmppaInjectLoadFailCount,
        UmppaInjectCfgCheckCount,
        UmppaInjectExtensionErrorCount,
        UmppaInjectInvalidThreadCount,
        UmppaInjectFileSectionCount,
        TotalCount,
        UmppaInjectLoadErrorCount,
        UmppaInjectBadAlertCount,
        UmppaInjectApcInsertionCount,
        UmppaInjectCopyFailCount,
        FirewallRule,
        RegNumericValue,
        VolumeDriveLetter,
        VolumeSnapshotName,
        VolumeName,
        UserCanonical,
        LogonId,
        ConfigStateData,
        FirewallProfile,
        FirewallOption,
        FirewallOptionNumericValue,
        SmbShareName,
        TargetSHA256HashData,
        IsCpuDataCommonOnAllCores,
        SpibarDataFrap,
        EfiVariableDbxSha256Hash,
        PciConfigDataBgsm,
        PciConfigDataDpr,
        CpuDataCommonSmrrSupported,
        SpibarDataHsfc,
        EfiVariableSecureBoot,
        PciConfigDataMesegMask,
        PciConfigDataTolud,
        EfiVariableDbxAttributes,
        PciConfigDataPavpc,
        EfiVariableCustomModeAttributes,
        SpibarDataFreg3,
        SpibarDataFreg4,
        SpibarDataFreg1,
        SpibarDataFreg2,
        SpibarDataFreg0,
        EfiSupported,
        EfiVariablePkAttributes,
        CpuDataCommonPrmrrUncorePhysicalMask,
        PciConfigDataGenPmconA,
        PciConfigDataTsegmb,
        SpibarDataVscc0,
        EfiVariablePkSha256Hash,
        SpibarDataVscc1,
        CpuDataCommonSmrrPhysicalMask,
        NorthBridgeDeviceId,
        IsNorthBridgeSupported,
        PciConfigDataTom,
        EfiVariableKekSha256Hash,
        SouthBridgeVendorId,
        EfiVariableSignatureSupport,
        MmioDataTco1Cnt,
        EfiVariableKekAttributes,
        FirmwareAnalysisCpuSupported,
        MmioDataSmiEn,
        CpuDataCommonPrmrrUncoreSupported,
        NorthBridgeVendorId,
        CpuDataCommonMsrApicBase,
        EfiVariableDbAttributes,
        SpibarDataPr2,
        SpibarDataBfpr,
        SpibarDataPr1,
        EfiVariableSecureBootAttributes,
        SpibarDataPr0,
        IsSouthBridgeSupported,
        PciConfigDataHfsts1,
        CpuDataCommonMsrFeatureControl,
        PciConfigDataRemaplimit,
        CpuDataCommonSiliconDebugFeatureControl,
        CpuDataCommonSmrrPhysicalBase,
        SouthBridgeDeviceId,
        CpuDataCommonPrmrrPhysicalMask,
        EfiVariableDbSha256Hash,
        SpibarDataHsfs,
        PciConfigDataRemapbase,
        EfiVariableCustomMode,
        PciConfigDataGgc,
        PciConfigDataTouud,
        SpibarDataPr4,
        SpibarDataPr3,
        CpuDataCommonPrmrrSupported,
        PciConfigDataSmramc,
        EfiVariableSignatureSupportAttributes,
        PciConfigDataBdsm,
        EfiVariableSetupModeAttributes,
        EfiVariableSetupMode,
        PciConfigDataBiosCntl,
        PciConfigDataMesegBase,
        SourceFileName,
        NewFileIdentifier,
        FeatureVector,
        ModelPrediction,
        Malicious,
        FeatureExtractionVersion,
        FXFileSize,
        MLModelVersion,
        FontBufferLength,
        FontFileCount,
        FontLoadOperation,
        FontBuffer,
        FontFileName,
        TemplateInstanceId,
        PatternDisposition,
        ServicePackMajor,
        ProductSku,
        PointerSize,
        ProductName,
        AgentVersion,
        ServicePackMinor,
        SuiteMask,
        SubBuildNumber,
        PlatformId,
        BuildType,
        MajorVersion,
        ProductType,
        MinorVersion,
        CheckedBuild,
        BuildNumber,
        RFMState,
        FirmwareAnalysisEclControlInterfaceVersion,
        FirmwareAnalysisEclConsumerInterfaceVersion,
        BootTimeFunctionalityLevel,
        ReasonOfFunctionalityLevel,
        CurrentFunctionalityLevel,
        PciAttachmentState,
        LocalAddressIP6,
        RemoteAddressIP6,
        RegBinaryValue,
        ServiceDescription,
        ServiceSecurity,
        ServiceImagePath,
        ServiceStart,
        ServiceType,
        ServiceFailureActions,
        ServiceErrorControl,
        SymbolicLinkName,
        SymbolicLinkTarget,
        DevicePropertyClassName,
        DeviceActiveConfigurationNumber,
        DevicePropertyClassGuid,
        DeviceUsbSubclass,
        ParentHubInstanceId,
        DeviceConnectionStatus,
        DeviceUsbClass,
        ParentHubPort,
        DevicePropertyManufacturer,
        DevicePropertyLocationInformation,
        DeviceProtocol,
        DevicePropertyDeviceDescription,
        DeviceUsbVersion,
        ModuleBaseAddress,
        ModuleSize,
        IsOnClearCaseMvfs,
        DllCharacteristics,
        ActiveCpuCount,
        MemoryTotal,
        BillingType,
        ConnectionCipher,
        ConnectType,
        ConnectionProtocol,
        ConnectionHash,
        ConnectTime,
        ConnectionHashStrength,
        FailedConnectCount,
        ConnectionCipherStrength,
        ConnectionExchangeStrength,
        ConnectionExchange,
        PreviousConnectTime,
        FalconServiceServletErrors,
        FalconServiceComponent,
        FalconServiceServletStarts,
        FalconServiceState,
        ScriptContent,
        OriginalContentLength,
        ScriptingLanguageId,
        ParentImageFileName,
        GrandparentImageFileName,
        ScriptContentName,
        HostProcessType,
        ProcessParentCommandLine,
        ContentSHA256HashData,
        ProcessGrandparentCommandLine
};
CrowdstrikeReplicatorLogs_view
