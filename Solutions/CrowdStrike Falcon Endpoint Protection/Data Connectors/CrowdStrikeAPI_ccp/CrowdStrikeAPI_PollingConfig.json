[
  {
    "name": "CrowdStrikeVulnerabilities",
    "apiVersion": "2023-04-01-preview",
    "type": "Microsoft.SecurityInsights/dataConnectors",
    "location": "[parameters('workspace-location')]",
    "kind": "RestApiPoller",
    "properties": {
      "connectorDefinitionName": "CrowdStrikeAPICCPDefinition",
      "dataType": "CrowdStrikeVulnerabilities",
      "auth": {
        "type": "OAuth2",
        "ClientId": "[[parameters('clientId')]",
        "ClientSecret": "[[parameters('clientSecret')]",
        "GrantType": "client_credentials",
        "TokenEndpoint": "[[concat(parameters('apiUrl'),'/oauth2/token')]",
        "tokenEndpointHeaders": {
          "Accept": "application/json",
          "Content-Type": "application/x-www-form-urlencoded"
        }
      },
      "request": {
        "httpMethod": "Get",
        "apiEndpoint": "[[concat(parameters('apiUrl'),'/spotlight/queries/vulnerabilities/v1')]",
        "queryParameters": {
          "sort": "created_timestamp.asc",
          "filter": "status:!'closed'"
        },
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json",
          "User-Agent": "Scuba"
        }
      },
      "response": {
        "eventsJsonPaths": [
          ""
        ]
      },
      "stepInfo": {
        "stepType": "Nested",
        "nextSteps": [
          {
            "stepId": "vuln_details",
            "stepPlaceholdersParsingKql": "source | project res = parse_json(data) | project resources = res['resources'] | mvexpand resources | project Url_PlaceHolder = resources"
          }
        ]
      },
      "stepCollectorConfigs": {
        "vuln_details": {
          "shouldJoinNestedData": false,
          "request": {
            "httpMethod": "Get",
            "apiEndpoint": "https://api.us-2.crowdstrike.com/spotlight/entities/vulnerabilities/v2?ids=$Url_PlaceHolder$",
            "logResponseContent": true,
            "headers": {
              "Content-Type": "application/json",
              "Accept": "application/json",
              "User-Agent": "scuba"
            }
          },
          "response": {
            "eventsJsonPaths": [
              "$.resources"
            ]
          }
        }
      },
      "dcrConfig": {
        "streamName": "CROWDSTRIKE_VULNERABILITIES",
        "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
        "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
      },
      "Paging": {
        "pagingType": "Offset",
        "offsetParaName": "offset",
        "PageSizeParameterName": "limit",
        "PageSize": 400
      }
    }
  },
  {
    "name": "CrowdStrikeAlerts",
    "apiVersion": "2023-04-01-preview",
    "type": "Microsoft.SecurityInsights/dataConnectors",
    "kind": "RestApiPoller",
    "location": "[parameters('workspace-location')]",
    "properties": {
      "connectorDefinitionName": "CrowdStrikeAPICCPDefinition",
      "dataType": "CrowdStrikeAlerts",
      "auth": {
        "type": "OAuth2",
        "ClientId": "[[parameters('clientId')]",
        "ClientSecret": "[[parameters('clientSecret')]",
        "GrantType": "client_credentials",
        "TokenEndpoint": "[[concat(parameters('apiUrl'),'/oauth2/token')]",
        "tokenEndpointHeaders": {
          "Accept": "application/json",
          "Content-Type": "application/x-www-form-urlencoded"
        }
      },
      "request": {
        "httpMethod": "Get",
        "apiEndpoint": "[[concat(parameters('apiUrl'),'/alerts/queries/alerts/v2')]",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json",
          "User-Agent": "Scuba"
        }
      },
      "response": {
        "eventsJsonPaths": [
          ""
        ]
      },
      "stepInfo": {
        "stepType": "Nested",
        "nextSteps": [
          {
            "stepId": "alerts_details",
            "stepPlaceholdersParsingKql": "source | project res = parse_json(data) | project composite_ids = res['resources'] | mvexpand composite_ids | project Url_PlaceHolder = composite_ids"
          }
        ]
      },
      "stepCollectorConfigs": {
        "alerts_details": {
          "shouldJoinNestedData": false,
          "request": {
            "httpMethod": "Post",
            "apiEndpoint": "https://api.us-2.crowdstrike.com/alerts/entities/alerts/v2",
            "queryParametersTemplate": "{'composite_ids': ['$Url_PlaceHolder$']}",
            "logResponseContent": true,
            "headers": {
              "Content-Type": "application/json",
              "Accept": "application/json",
              "User-Agent": "scuba"
            }
          },
          "response": {
            "eventsJsonPaths": [
              "$.resources"
            ]
          }
        }
      },
      "dcrConfig": {
        "streamName": "CROWDSTRIKE_ALERTS",
        "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
        "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
      },
      "Paging": {
        "pagingType": "Offset",
        "offsetParaName": "offset",
        "PageSizeParameterName": "limit",
        "PageSize": 400
      }
    }
  },
  {
    "name": "CrowdStrikeIncidents",
    "apiVersion": "2023-04-01-preview",
    "type": "Microsoft.SecurityInsights/dataConnectors",
    "location": "[parameters('workspace-location')]",
    "kind": "RestApiPoller",
    "properties": {
      "connectorDefinitionName": "CrowdStrikeAPICCPDefinition",
      "dataType": "CrowdStrikeIncidents",
      "auth": {
        "type": "OAuth2",
        "ClientId": "[[parameters('clientId')]",
        "ClientSecret": "[[parameters('clientSecret')]",
        "GrantType": "client_credentials",
        "TokenEndpoint": "[[concat(parameters('apiUrl'),'/oauth2/token')]",
        "tokenEndpointHeaders": {
          "Accept": "application/json",
          "Content-Type": "application/x-www-form-urlencoded"
        }
      },
      "request": {
        "httpMethod": "Get",
        "apiEndpoint": "[[concat(parameters('apiUrl'),'/incidents/queries/incidents/v1')]",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json",
          "User-Agent": "Scuba"
        }
      },
      "response": {
        "eventsJsonPaths": [
          ""
        ]
      },
      "stepInfo": {
        "stepType": "Nested",
        "nextSteps": [
          {
            "stepId": "incidents_details",
            "stepPlaceholdersParsingKql": "source | project res = parse_json(data) | project resources = res['resources'] | mvexpand resources | project Url_PlaceHolder = resources"
          }
        ]
      },
      "stepCollectorConfigs": {
        "incidents_details": {
          "shouldJoinNestedData": false,
          "request": {
            "httpMethod": "Post",
            "apiEndpoint": "https://api.us-2.crowdstrike.com/incidents/entities/incidents/GET/v1",
            "queryParametersTemplate": "{'ids': ['$Url_PlaceHolder$']}",
            "logResponseContent": true,
            "headers": {
              "Content-Type": "application/json",
              "Accept": "application/json",
              "User-Agent": "scuba"
            }
          },
          "response": {
            "eventsJsonPaths": [
              "$.resources"
            ]
          }
        }
      },
      "dcrConfig": {
        "streamName": "CROWDSTRIKE_INCIDENTS",
        "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
        "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
      },
      "Paging": {
        "pagingType": "Offset",
        "offsetParaName": "offset",
        "PageSizeParameterName": "limit",
        "PageSize": 400
      }
    }
  },
  {
    "name": "CrowdStrikeDetections",
    "apiVersion": "2023-04-01-preview",
    "type": "Microsoft.SecurityInsights/dataConnectors",
    "location": "[parameters('workspace-location')]",
    "kind": "RestApiPoller",
    "properties": {
      "connectorDefinitionName": "CrowdStrikeAPICCPDefinition",
      "dataType": "CrowdStrikeDetections",
      "auth": {
        "type": "OAuth2",
        "ClientId": "[[parameters('clientId')]",
        "ClientSecret": "[[parameters('clientSecret')]",
        "GrantType": "client_credentials",
        "TokenEndpoint": "[[concat(parameters('apiUrl'),'/oauth2/token')]",
        "tokenEndpointHeaders": {
          "Accept": "application/json",
          "Content-Type": "application/x-www-form-urlencoded"
        }
      },
      "request": {
        "httpMethod": "Get",
        "apiEndpoint": "[[concat(parameters('apiUrl'),'/detects/queries/detects/v1')]",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json",
          "User-Agent": "Scuba"
        }
      },
      "response": {
        "eventsJsonPaths": [
          ""
        ]
      },
      "stepInfo": {
        "stepType": "Nested",
        "nextSteps": [
          {
            "stepId": "detections_details",
            "stepPlaceholdersParsingKql": "source | project res = parse_json(data) | project resources = res['resources'] | mvexpand resources | project Url_PlaceHolder = resources"
          }
        ]
      },
      "stepCollectorConfigs": {
        "detections_details": {
          "shouldJoinNestedData": false,
          "request": {
            "httpMethod": "Post",
            "apiEndpoint": "https://api.us-2.crowdstrike.com/detects/entities/summaries/GET/v1",
            "queryParametersTemplate": "{'ids': ['$Url_PlaceHolder$']}",
            "logResponseContent": true,
            "headers": {
              "Content-Type": "application/json",
              "Accept": "application/json",
              "User-Agent": "scuba"
            }
          },
          "response": {
            "eventsJsonPaths": [
              "$.resources"
            ]
          }
        }
      },
      "dcrConfig": {
        "streamName": "CROWDSTRIKE_DETECTIONS",
        "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
        "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
      },
      "Paging": {
        "pagingType": "Offset",
        "offsetParaName": "offset",
        "PageSizeParameterName": "limit",
        "PageSize": 400
      }
    }
  },
  {
    "name": "CrowdStrikeHosts",
    "apiVersion": "2023-04-01-preview",
    "type": "Microsoft.SecurityInsights/dataConnectors",
    "location": "[parameters('workspace-location')]",
    "kind": "RestApiPoller",
    "properties": {
      "connectorDefinitionName": "CrowdStrikeAPICCPDefinition",
      "dataType": "CrowdStrikeHosts",
      "auth": {
        "type": "OAuth2",
        "ClientId": "[[parameters('clientId')]",
        "ClientSecret": "[[parameters('clientSecret')]",
        "GrantType": "client_credentials",
        "TokenEndpoint": "[[concat(parameters('apiUrl'),'/oauth2/token')]",
        "tokenEndpointHeaders": {
          "Accept": "application/json",
          "Content-Type": "application/x-www-form-urlencoded"
        }
      },
      "request": {
        "httpMethod": "Get",
        "apiEndpoint": "[[concat(parameters('apiUrl'),'/devices/queries/devices/v1')]",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json",
          "User-Agent": "Scuba"
        }
      },
      "response": {
        "eventsJsonPaths": [
          ""
        ]
      },
      "stepInfo": {
        "stepType": "Nested",
        "nextSteps": [
          {
            "stepId": "hosts_details",
            "stepPlaceholdersParsingKql": "source | project res = parse_json(data) | project resources = res['resources'] | mvexpand resources | project Url_PlaceHolder = resources"
          }
        ]
      },
      "stepCollectorConfigs": {
        "hosts_details": {
          "shouldJoinNestedData": false,
          "request": {
            "httpMethod": "Post",
            "apiEndpoint": "https://api.us-2.crowdstrike.com/devices/entities/devices/v2",
            "queryParametersTemplate": "{'ids': ['$Url_PlaceHolder$']}",
            "logResponseContent": true,
            "headers": {
              "Content-Type": "application/json",
              "Accept": "application/json",
              "User-Agent": "scuba"
            }
          },
          "response": {
            "eventsJsonPaths": [
              "$.resources"
            ]
          }
        }
      },
      "dcrConfig": {
        "streamName": "CROWDSTRIKE_HOSTS",
        "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
        "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
      },
      "Paging": {
        "pagingType": "Offset",
        "offsetParaName": "offset",
        "PageSizeParameterName": "limit",
        "PageSize": 400
      }
    }
  }
]