{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dataCollectionRules_CrowdStrikeDCR_name": {
      "defaultValue": "CrowdStrikeDCR",
      "type": "String"
    },
    "dataCollectionEndpoints_externalid": {
      "defaultValue": "",
      "type": "String"
    },
    "workspaces_externalid": {
      "defaultValue": "",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Insights/dataCollectionRules",
      "apiVersion": "2022-06-01",
      "name": "[parameters('dataCollectionRules_CrowdStrikeDCR_name')]",
      "location": "westus",
      "properties": {
        "dataCollectionEndpointId": "[parameters('dataCollectionEndpoints_externalid')]",
        "streamDeclarations": {
          "Custom-CrowdstrikeAdditional": {
            "columns": [
              {
                "name": "event_simpleName",
                "type": "string"
              },
              {
                "name": "timestamp",
                "type": "string"
              },
              {
                "name": "aip",
                "type": "string"
              },
              {
                "name": "aid",
                "type": "string"
              },
              {
                "name": "event_platform",
                "type": "string"
              },
              {
                "name": "ConfigStateHash",
                "type": "string"
              },
              {
                "name": "ContextProcessId",
                "type": "string"
              },
              {
                "name": "BoundingLimitCount",
                "type": "string"
              },
              {
                "name": "ConfigBuild",
                "type": "string"
              },
              {
                "name": "Entitlements",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "EffectiveTransmissionClass",
                "type": "string"
              },
              {
                "name": "cid",
                "type": "string"
              },
              {
                "name": "SystemUptimeSeconds",
                "type": "string"
              },
              {
                "name": "ContextTimeStamp",
                "type": "string"
              },
              {
                "name": "TamperFilterFlags",
                "type": "string"
              },
              {
                "name": "LogonType",
                "type": "string"
              },
              {
                "name": "UserPrincipal",
                "type": "string"
              },
              {
                "name": "UserIsAdmin",
                "type": "string"
              },
              {
                "name": "LogonTime",
                "type": "string"
              },
              {
                "name": "LogonDomain",
                "type": "string"
              },
              {
                "name": "RemoteAccount",
                "type": "string"
              },
              {
                "name": "UserName",
                "type": "string"
              },
              {
                "name": "UserCanonical",
                "type": "string"
              },
              {
                "name": "ContextThreadId",
                "type": "string"
              },
              {
                "name": "UserSid",
                "type": "string"
              },
              {
                "name": "UserFlags",
                "type": "string"
              },
              {
                "name": "LogonServer",
                "type": "string"
              },
              {
                "name": "LogonId",
                "type": "string"
              },
              {
                "name": "SessionId",
                "type": "string"
              },
              {
                "name": "AuthenticationPackage",
                "type": "string"
              },
              {
                "name": "AuthenticationId",
                "type": "string"
              },
              {
                "name": "PasswordLastSet",
                "type": "string"
              },
              {
                "name": "UserLogonFlags",
                "type": "string"
              },
              {
                "name": "LoginSessionId",
                "type": "string"
              },
              {
                "name": "AuthenticationUuidAsString",
                "type": "string"
              },
              {
                "name": "UID",
                "type": "string"
              },
              {
                "name": "AuthenticationUuid",
                "type": "string"
              },
              {
                "name": "AuthenticationIdMac",
                "type": "string"
              },
              {
                "name": "CommandLine",
                "type": "string"
              },
              {
                "name": "ClientComputerName",
                "type": "string"
              },
              {
                "name": "WmiConsumerType",
                "type": "string"
              },
              {
                "name": "WmiFilterType",
                "type": "string"
              },
              {
                "name": "EtwRawProcessId",
                "type": "string"
              },
              {
                "name": "ImageFileName",
                "type": "string"
              },
              {
                "name": "OriginalParentAuthenticationId",
                "type": "string"
              },
              {
                "name": "ParentAuthenticationId",
                "type": "string"
              },
              {
                "name": "OriginalUserSid",
                "type": "string"
              },
              {
                "name": "SHA256HashData",
                "type": "string"
              },
              {
                "name": "TargetFileName",
                "type": "string"
              },
              {
                "name": "Status",
                "type": "string"
              },
              {
                "name": "ErrorText",
                "type": "string"
              },
              {
                "name": "CloudErrorCode",
                "type": "string"
              },
              {
                "name": "EtwEventCount",
                "type": "string"
              },
              {
                "name": "WmiProviderType",
                "type": "string"
              },
              {
                "name": "RawProcessId",
                "type": "string"
              },
              {
                "name": "UmppaInjectionType",
                "type": "string"
              },
              {
                "name": "ErrorStatus",
                "type": "string"
              },
              {
                "name": "TotalCount",
                "type": "string"
              },
              {
                "name": "BoundingLimitDuration",
                "type": "string"
              },
              {
                "name": "EventOrigin",
                "type": "string"
              },
              {
                "name": "SourceFileName",
                "type": "string"
              },
              {
                "name": "WmiQuery",
                "type": "string"
              },
              {
                "name": "WmiNamespaceName",
                "type": "string"
              },
              {
                "name": "AntiTamperStateFlag",
                "type": "string"
              },
              {
                "name": "ServiceDisplayName",
                "type": "string"
              },
              {
                "name": "ErrorCode",
                "type": "string"
              },
              {
                "name": "TargetProcessId",
                "type": "string"
              },
              {
                "name": "TokenType",
                "type": "string"
              },
              {
                "name": "InterfaceGuid",
                "type": "string"
              },
              {
                "name": "RpcClientProcessId",
                "type": "string"
              },
              {
                "name": "InterfaceVersion",
                "type": "string"
              },
              {
                "name": "RpcClientThreadId",
                "type": "string"
              },
              {
                "name": "RpcOpNum",
                "type": "string"
              },
              {
                "name": "RpcNestingLevel",
                "type": "string"
              },
              {
                "name": "EventMax",
                "type": "string"
              },
              {
                "name": "SourceProcessId",
                "type": "string"
              },
              {
                "name": "EtwRawThreadId",
                "type": "string"
              },
              {
                "name": "SourceThreadId",
                "type": "string"
              },
              {
                "name": "RawThreadId",
                "type": "string"
              },
              {
                "name": "OriginalContentLength",
                "type": "string"
              },
              {
                "name": "ContentSHA256HashData",
                "type": "string"
              },
              {
                "name": "ScriptContentName",
                "type": "string"
              },
              {
                "name": "OciContainerId",
                "type": "string"
              },
              {
                "name": "HostProcessType",
                "type": "string"
              },
              {
                "name": "ParentCommandLine",
                "type": "string"
              },
              {
                "name": "ParentImageFileName",
                "type": "string"
              },
              {
                "name": "GrandparentImageFileName",
                "type": "string"
              },
              {
                "name": "GrandparentCommandLine",
                "type": "string"
              },
              {
                "name": "SuspectStackFlag",
                "type": "string"
              },
              {
                "name": "ScriptContentBytes",
                "type": "string"
              },
              {
                "name": "ExecutableBytes",
                "type": "string"
              },
              {
                "name": "CallStackModuleNames",
                "type": "string"
              },
              {
                "name": "KernelTime",
                "type": "string"
              },
              {
                "name": "ScriptControlErrorCode",
                "type": "string"
              },
              {
                "name": "ScriptContentSource",
                "type": "string"
              },
              {
                "name": "OriginalFilename",
                "type": "string"
              },
              {
                "name": "ScreenshotType",
                "type": "string"
              },
              {
                "name": "TaskName",
                "type": "string"
              },
              {
                "name": "TaskExecCommand",
                "type": "string"
              },
              {
                "name": "TaskXml",
                "type": "string"
              },
              {
                "name": "TaskAuthor",
                "type": "string"
              },
              {
                "name": "TaskExecArguments",
                "type": "string"
              },
              {
                "name": "KeyObject",
                "type": "string"
              },
              {
                "name": "PublicKeys",
                "type": "string"
              },
              {
                "name": "RegPostObjectName",
                "type": "string"
              },
              {
                "name": "RegKeyName",
                "type": "string"
              },
              {
                "name": "RegRootObjectName",
                "type": "string"
              },
              {
                "name": "ExtendedKeyUsages",
                "type": "string"
              },
              {
                "name": "RegCreateDisposition",
                "type": "string"
              },
              {
                "name": "FileSigningTime",
                "type": "string"
              },
              {
                "name": "DesiredAccess",
                "type": "string"
              },
              {
                "name": "RegCreateOptions",
                "type": "string"
              },
              {
                "name": "SignInfoFlags",
                "type": "string"
              },
              {
                "name": "Certificate",
                "type": "string"
              },
              {
                "name": "OdsActionType",
                "type": "string"
              },
              {
                "name": "PatternHandlingErrorType",
                "type": "string"
              },
              {
                "name": "FileSubType",
                "type": "string"
              },
              {
                "name": "Object1Type",
                "type": "string"
              },
              {
                "name": "TargetAddress",
                "type": "string"
              },
              {
                "name": "Size",
                "type": "string"
              },
              {
                "name": "OciContainersStoppedCount",
                "type": "string"
              },
              {
                "name": "OciContainersStartedCount",
                "type": "string"
              },
              {
                "name": "VersionInfo",
                "type": "string"
              },
              {
                "name": "CompanyName",
                "type": "string"
              },
              {
                "name": "FixedFileVersion",
                "type": "string"
              },
              {
                "name": "FileVersion",
                "type": "string"
              },
              {
                "name": "ProductSku",
                "type": "string"
              },
              {
                "name": "PointerSize",
                "type": "string"
              },
              {
                "name": "ProductName",
                "type": "string"
              },
              {
                "name": "SubBuildNumber",
                "type": "string"
              },
              {
                "name": "PlatformId",
                "type": "string"
              },
              {
                "name": "BuildType",
                "type": "string"
              },
              {
                "name": "MajorVersion",
                "type": "string"
              },
              {
                "name": "ProductType",
                "type": "string"
              },
              {
                "name": "MinorVersion",
                "type": "string"
              },
              {
                "name": "CheckedBuild",
                "type": "string"
              },
              {
                "name": "BuildNumber",
                "type": "string"
              },
              {
                "name": "OSVersionFileData",
                "type": "string"
              },
              {
                "name": "OSVersionString",
                "type": "string"
              },
              {
                "name": "OSVersionFileName",
                "type": "string"
              },
              {
                "name": "IntegrityLevel",
                "type": "string"
              },
              {
                "name": "RemotePort",
                "type": "string"
              },
              {
                "name": "Protocol",
                "type": "string"
              },
              {
                "name": "VolumeDeviceType",
                "type": "string"
              },
              {
                "name": "VolumeName",
                "type": "string"
              },
              {
                "name": "VolumeDeviceObjectFlags",
                "type": "string"
              },
              {
                "name": "ByteOffset",
                "type": "string"
              },
              {
                "name": "VolumeDeviceCharacteristics",
                "type": "string"
              },
              {
                "name": "VolumeSectorSize",
                "type": "string"
              },
              {
                "name": "PatternDisposition",
                "type": "string"
              },
              {
                "name": "VolumeFileSystemType",
                "type": "string"
              },
              {
                "name": "Length",
                "type": "string"
              },
              {
                "name": "TreeId",
                "type": "string"
              },
              {
                "name": "ServiceObjectName",
                "type": "string"
              },
              {
                "name": "ServiceDescription",
                "type": "string"
              },
              {
                "name": "ServiceSecurity",
                "type": "string"
              },
              {
                "name": "ServiceImagePath",
                "type": "string"
              },
              {
                "name": "ServiceStart",
                "type": "string"
              },
              {
                "name": "ServiceType",
                "type": "string"
              },
              {
                "name": "ServiceFailureActions",
                "type": "string"
              },
              {
                "name": "ServiceErrorControl",
                "type": "string"
              },
              {
                "name": "ServiceGroup",
                "type": "string"
              },
              {
                "name": "ProcessIntegrityLevel",
                "type": "string"
              },
              {
                "name": "MD5HashData",
                "type": "string"
              },
              {
                "name": "NamedPipeOperationType",
                "type": "string"
              },
              {
                "name": "PhysicalCoreCount",
                "type": "string"
              },
              {
                "name": "LfoUploadFlags",
                "type": "string"
              },
              {
                "name": "AttemptNumber",
                "type": "string"
              },
              {
                "name": "CloudRequestId",
                "type": "string"
              },
              {
                "name": "VolumeSessionUUID",
                "type": "string"
              },
              {
                "name": "VolumeFileSystemDevice",
                "type": "string"
              },
              {
                "name": "VolumeSnapshotName",
                "type": "string"
              },
              {
                "name": "VolumeIsEncrypted",
                "type": "string"
              },
              {
                "name": "VolumeFileSystemDriver",
                "type": "string"
              },
              {
                "name": "VolumeSnapshotTimeStamp",
                "type": "string"
              },
              {
                "name": "VolumeRealDeviceName",
                "type": "string"
              },
              {
                "name": "VolumeEncryptionStatus",
                "type": "string"
              },
              {
                "name": "RemoteAddressIP4",
                "type": "string"
              },
              {
                "name": "IsOnRemovableDisk",
                "type": "string"
              },
              {
                "name": "QuarantinedFileExtendedState",
                "type": "string"
              },
              {
                "name": "PrimaryModule",
                "type": "string"
              },
              {
                "name": "DeviceId",
                "type": "string"
              },
              {
                "name": "LocalAddressIP4",
                "type": "string"
              },
              {
                "name": "ValidLifetime",
                "type": "string"
              },
              {
                "name": "MaxReassemblySize",
                "type": "string"
              },
              {
                "name": "NetworkGuid",
                "type": "string"
              },
              {
                "name": "InterfaceAlias",
                "type": "string"
              },
              {
                "name": "InterfaceIndex",
                "type": "string"
              },
              {
                "name": "InterfaceFlags",
                "type": "string"
              },
              {
                "name": "PermanentPhysicalAddress",
                "type": "string"
              },
              {
                "name": "InterfaceType",
                "type": "string"
              },
              {
                "name": "MediaType",
                "type": "string"
              },
              {
                "name": "AccessType",
                "type": "string"
              },
              {
                "name": "IpEntryFlags",
                "type": "string"
              },
              {
                "name": "PreferredLifetime",
                "type": "string"
              },
              {
                "name": "ConnectionType",
                "type": "string"
              },
              {
                "name": "PhysicalAddress",
                "type": "string"
              },
              {
                "name": "DirectionType",
                "type": "string"
              },
              {
                "name": "IfType",
                "type": "string"
              },
              {
                "name": "RetransmitTime",
                "type": "string"
              },
              {
                "name": "CreationTimeStamp",
                "type": "string"
              },
              {
                "name": "BaseReachableTime",
                "type": "string"
              },
              {
                "name": "PhysicalAddressLength",
                "type": "string"
              },
              {
                "name": "TunnelType",
                "type": "string"
              },
              {
                "name": "NetworkInterfaceGuid",
                "type": "string"
              },
              {
                "name": "PhysicalMediumType",
                "type": "string"
              },
              {
                "name": "TotalDiskSpace",
                "type": "string"
              },
              {
                "name": "LocalAddressIP6",
                "type": "string"
              },
              {
                "name": "DefaultGatewayIP6",
                "type": "string"
              },
              {
                "name": "ModuleNativePath",
                "type": "string"
              },
              {
                "name": "DotnetModuleFlags",
                "type": "string"
              },
              {
                "name": "AssemblyFlags",
                "type": "string"
              },
              {
                "name": "FirmwareSize",
                "type": "string"
              },
              {
                "name": "ImageAnalysisRequestTimestamp",
                "type": "string"
              },
              {
                "name": "FirmwareType",
                "type": "string"
              },
              {
                "name": "MeasurementType",
                "type": "string"
              },
              {
                "name": "Timeout",
                "type": "string"
              },
              {
                "name": "SuppressType",
                "type": "string"
              },
              {
                "name": "ProcessCount",
                "type": "string"
              },
              {
                "name": "EtwTargetRawProcessId",
                "type": "string"
              },
              {
                "name": "MinorFunction",
                "type": "string"
              },
              {
                "name": "FileObject",
                "type": "string"
              },
              {
                "name": "IrpFlags",
                "type": "string"
              },
              {
                "name": "MajorFunction",
                "type": "string"
              },
              {
                "name": "OperationFlags",
                "type": "string"
              },
              {
                "name": "SignatureErrorState",
                "type": "string"
              },
              {
                "name": "SHA1HashData",
                "type": "string"
              },
              {
                "name": "SignatureState",
                "type": "string"
              },
              {
                "name": "AuthenticodeHashData",
                "type": "string"
              },
              {
                "name": "ToBeSignedAlgorithm",
                "type": "string"
              },
              {
                "name": "ToBeSignedHash",
                "type": "string"
              },
              {
                "name": "SignInfoRequestFlags",
                "type": "string"
              },
              {
                "name": "SignerInfoCount",
                "type": "string"
              },
              {
                "name": "HashAlgorithm",
                "type": "string"
              },
              {
                "name": "RegObjectName",
                "type": "string"
              },
              {
                "name": "RegValueName",
                "type": "string"
              },
              {
                "name": "RegType",
                "type": "string"
              },
              {
                "name": "RegClassificationIndex",
                "type": "string"
              },
              {
                "name": "RegClassificationFlags",
                "type": "string"
              },
              {
                "name": "RegOperationType",
                "type": "string"
              },
              {
                "name": "RegClassification",
                "type": "string"
              },
              {
                "name": "RegStringValue",
                "type": "string"
              },
              {
                "name": "Facility",
                "type": "string"
              },
              {
                "name": "File",
                "type": "string"
              },
              {
                "name": "BatchTimestamp",
                "type": "string"
              },
              {
                "name": "SpotlightBatchType",
                "type": "string"
              },
              {
                "name": "LastUpdateInstalledTime",
                "type": "string"
              },
              {
                "name": "PendingUpdateIds",
                "type": "string"
              },
              {
                "name": "LastPendingUpdateInstalledTime",
                "type": "string"
              },
              {
                "name": "InstalledUpdateIds",
                "type": "string"
              },
              {
                "name": "InstalledUpdateExtendedStatus",
                "type": "string"
              },
              {
                "name": "UninstallPendingUpdateIds",
                "type": "string"
              },
              {
                "name": "RawTargetProcessId",
                "type": "string"
              },
              {
                "name": "TargetThreadId",
                "type": "string"
              },
              {
                "name": "ApcContextFileName",
                "type": "string"
              },
              {
                "name": "RawTargetThreadId",
                "type": "string"
              },
              {
                "name": "FirmwareAnalysisErrorLocation",
                "type": "string"
              },
              {
                "name": "FirmwareAnalysisErrorSource",
                "type": "string"
              },
              {
                "name": "FirmwareAnalysisErrorReason",
                "type": "string"
              },
              {
                "name": "InjectedThreadFlag",
                "type": "string"
              },
              {
                "name": "ApcFlags",
                "type": "string"
              },
              {
                "name": "DownloadServer",
                "type": "string"
              },
              {
                "name": "DownloadPath",
                "type": "string"
              },
              {
                "name": "DownloadPort",
                "type": "string"
              },
              {
                "name": "RemediationTriggerTimeStamp",
                "type": "string"
              },
              {
                "name": "VolumeMountPoint",
                "type": "string"
              },
              {
                "name": "VolumeDriveLetter",
                "type": "string"
              },
              {
                "name": "DiskParentDeviceInstanceId",
                "type": "string"
              },
              {
                "name": "PtStatusFlags",
                "type": "string"
              },
              {
                "name": "PtCompatibilityFlags",
                "type": "string"
              },
              {
                "name": "TargetDirectoryName",
                "type": "string"
              },
              {
                "name": "ThreadStartBytes",
                "type": "string"
              },
              {
                "name": "MaxUsedRam",
                "type": "string"
              },
              {
                "name": "UsedDiskSpace",
                "type": "string"
              },
              {
                "name": "AverageUsedRam",
                "type": "string"
              },
              {
                "name": "AverageCpuUsage",
                "type": "string"
              },
              {
                "name": "AvailableDiskSpace",
                "type": "string"
              },
              {
                "name": "MaxCpuUsage",
                "type": "string"
              },
              {
                "name": "ReflectivePeTimestamp",
                "type": "string"
              },
              {
                "name": "ProcessExecuteFlags",
                "type": "string"
              },
              {
                "name": "DriverPreventionStatusFlags",
                "type": "string"
              },
              {
                "name": "TargetIntegrityLevel",
                "type": "string"
              },
              {
                "name": "TargetAuthenticationId",
                "type": "string"
              },
              {
                "name": "ImageBaseName",
                "type": "string"
              },
              {
                "name": "ConnectionDirection",
                "type": "string"
              },
              {
                "name": "ConnectionFlags",
                "type": "string"
              },
              {
                "name": "LocalPort",
                "type": "string"
              },
              {
                "name": "MemoryDescriptionFlags",
                "type": "string"
              },
              {
                "name": "AppName",
                "type": "string"
              },
              {
                "name": "AppVersion",
                "type": "string"
              },
              {
                "name": "UpdateFlag",
                "type": "string"
              },
              {
                "name": "AppPathFlag",
                "type": "string"
              },
              {
                "name": "AppUpdateIds",
                "type": "string"
              },
              {
                "name": "AppProductId",
                "type": "string"
              },
              {
                "name": "AppPath",
                "type": "string"
              },
              {
                "name": "InstallDate",
                "type": "string"
              },
              {
                "name": "AppType",
                "type": "string"
              },
              {
                "name": "AppSource",
                "type": "string"
              },
              {
                "name": "AppProvider",
                "type": "string"
              },
              {
                "name": "AppIdentificationData",
                "type": "string"
              },
              {
                "name": "AppArchitecture",
                "type": "string"
              },
              {
                "name": "CommandCloudTimeStamp",
                "type": "string"
              },
              {
                "name": "CommandSequenceTotal",
                "type": "string"
              },
              {
                "name": "CommandCode",
                "type": "string"
              },
              {
                "name": "CommandEndTimeStamp",
                "type": "string"
              },
              {
                "name": "CommandStartTimeStamp",
                "type": "string"
              },
              {
                "name": "CommandSequenceNumber",
                "type": "string"
              },
              {
                "name": "CommandName",
                "type": "string"
              },
              {
                "name": "CommandStdOut",
                "type": "string"
              },
              {
                "name": "CommandStdErr",
                "type": "string"
              },
              {
                "name": "QuarantinedFileState",
                "type": "string"
              },
              {
                "name": "QuarantinedFileName",
                "type": "string"
              },
              {
                "name": "FileSystemOperationType",
                "type": "string"
              },
              {
                "name": "FsOperationClassificationFlags",
                "type": "string"
              },
              {
                "name": "TargetSHA256HashData",
                "type": "string"
              },
              {
                "name": "TargetCommandLineParameters",
                "type": "string"
              },
              {
                "name": "RegConfigValueType",
                "type": "string"
              },
              {
                "name": "RegConfigFlags",
                "type": "string"
              },
              {
                "name": "RegConfigClass",
                "type": "string"
              },
              {
                "name": "RegConfigIndex",
                "type": "string"
              },
              {
                "name": "RegKeyChangeType",
                "type": "string"
              },
              {
                "name": "Options",
                "type": "string"
              },
              {
                "name": "Information",
                "type": "string"
              },
              {
                "name": "FileIdentifier",
                "type": "string"
              },
              {
                "name": "ShareAccess",
                "type": "string"
              },
              {
                "name": "FileAttributes",
                "type": "string"
              },
              {
                "name": "HandleCreateAuthenticationId",
                "type": "string"
              },
              {
                "name": "FileEcpBitmask",
                "type": "string"
              },
              {
                "name": "ProvisioningDuration",
                "type": "string"
              },
              {
                "name": "AgentLoadFlags",
                "type": "string"
              },
              {
                "name": "EtwProvidersError",
                "type": "string"
              },
              {
                "name": "EtwProvidersEnabled",
                "type": "string"
              },
              {
                "name": "EtwProviders",
                "type": "string"
              },
              {
                "name": "DriverLoadFlags",
                "type": "string"
              },
              {
                "name": "ImageTimeStamp",
                "type": "string"
              },
              {
                "name": "ExclusionType",
                "type": "string"
              },
              {
                "name": "CommandHistory",
                "type": "string"
              },
              {
                "name": "FirstCommand",
                "type": "string"
              },
              {
                "name": "CommandCountMax",
                "type": "string"
              },
              {
                "name": "CommandCount",
                "type": "string"
              },
              {
                "name": "DeviceProductId",
                "type": "string"
              },
              {
                "name": "BluetoothDeviceType",
                "type": "string"
              },
              {
                "name": "BluetoothDeviceAddressType",
                "type": "string"
              },
              {
                "name": "BluetoothDeviceAddress",
                "type": "string"
              },
              {
                "name": "BluetoothDeviceName",
                "type": "string"
              },
              {
                "name": "DeviceVendorId",
                "type": "string"
              },
              {
                "name": "AmsiStatusCode",
                "type": "string"
              },
              {
                "name": "AmsiRegistrationState",
                "type": "string"
              },
              {
                "name": "SourceEndpointNetworkType",
                "type": "string"
              },
              {
                "name": "TargetAccountObjectGuid",
                "type": "string"
              },
              {
                "name": "SourceAccountUserPrincipal",
                "type": "string"
              },
              {
                "name": "SourceEndpointAccountObjectSid",
                "type": "string"
              },
              {
                "name": "ActiveDirectoryAuthenticationMethod",
                "type": "string"
              },
              {
                "name": "SourceAccountType",
                "type": "string"
              },
              {
                "name": "AggregationEarliestTimestamp",
                "type": "string"
              },
              {
                "name": "TargetAccountObjectSid",
                "type": "string"
              },
              {
                "name": "SourceAccountObjectSid",
                "type": "string"
              },
              {
                "name": "AggregationWindowTimestamp",
                "type": "string"
              },
              {
                "name": "SourceAccountDomain",
                "type": "string"
              },
              {
                "name": "TargetAccountType",
                "type": "string"
              },
              {
                "name": "NtlmAvFlags",
                "type": "string"
              },
              {
                "name": "SourceAccountObjectGuid",
                "type": "string"
              },
              {
                "name": "AggregationLatestTimestamp",
                "type": "string"
              },
              {
                "name": "DeviceTimeStamp",
                "type": "string"
              },
              {
                "name": "ParentHubInstanceId",
                "type": "string"
              },
              {
                "name": "DeviceProduct",
                "type": "string"
              },
              {
                "name": "ParentHubPort",
                "type": "string"
              },
              {
                "name": "DeviceProtocol",
                "type": "string"
              },
              {
                "name": "DcPolicyFlags",
                "type": "string"
              },
              {
                "name": "DeviceVersion",
                "type": "string"
              },
              {
                "name": "DeviceInstanceId",
                "type": "string"
              },
              {
                "name": "DeviceUserSid",
                "type": "string"
              },
              {
                "name": "DeviceUserAuthenticationId",
                "type": "string"
              },
              {
                "name": "SocketType",
                "type": "string"
              },
              {
                "name": "SourceAccountSamAccountName",
                "type": "string"
              },
              {
                "name": "KerberosRequestTicketValidityPeriod",
                "type": "string"
              },
              {
                "name": "DelegatorAccountObjectSid",
                "type": "string"
              },
              {
                "name": "DelegatorAccountObjectGuid",
                "type": "string"
              },
              {
                "name": "DelegatorAccountSamAccountName",
                "type": "string"
              },
              {
                "name": "DesiredKerberosEncryptionTypes",
                "type": "string"
              },
              {
                "name": "DcPropertyIdInterfaceType",
                "type": "string"
              },
              {
                "name": "DcSensorInterfaceType",
                "type": "string"
              },
              {
                "name": "DomainName",
                "type": "string"
              },
              {
                "name": "AmsScanTypeId",
                "type": "string"
              },
              {
                "name": "AmsStatus",
                "type": "string"
              },
              {
                "name": "AmsScanSubtypeId",
                "type": "string"
              },
              {
                "name": "VnodeModificationType",
                "type": "string"
              },
              {
                "name": "LdapSecurityType",
                "type": "string"
              },
              {
                "name": "StackLimit",
                "type": "string"
              },
              {
                "name": "ObjectTypeEtw",
                "type": "string"
              },
              {
                "name": "SessionProcessId",
                "type": "string"
              },
              {
                "name": "ModuleCharacteristics",
                "type": "string"
              },
              {
                "name": "HostUrl",
                "type": "string"
              },
              {
                "name": "FileFormatString",
                "type": "string"
              },
              {
                "name": "MemoryScanFlags",
                "type": "string"
              },
              {
                "name": "AmsDeviceType",
                "type": "string"
              },
              {
                "name": "AsepFlags",
                "type": "string"
              },
              {
                "name": "AsepValueType",
                "type": "string"
              },
              {
                "name": "AuthenticationFailureMsErrorCode",
                "type": "string"
              },
              {
                "name": "SourceAccountBadPasswordCount",
                "type": "string"
              },
              {
                "name": "SourceAccountBadPasswordTime",
                "type": "string"
              },
              {
                "name": "EndpointDescriptorInterval",
                "type": "string"
              },
              {
                "name": "EndpointDescriptorMaxPacketSize",
                "type": "string"
              },
              {
                "name": "EndpointDescriptorAddress",
                "type": "string"
              },
              {
                "name": "EndpointDescriptorAttributes",
                "type": "string"
              },
              {
                "name": "ConfigurationDescriptorValue",
                "type": "string"
              },
              {
                "name": "ConfigurationDescriptorAttributes",
                "type": "string"
              },
              {
                "name": "ConfigurationDescriptorName",
                "type": "string"
              },
              {
                "name": "ConfigurationDescriptorNumInterfaces",
                "type": "string"
              },
              {
                "name": "ConfigurationDescriptorMaxPowerDraw",
                "type": "string"
              },
              {
                "name": "InterfaceDescriptorNumber",
                "type": "string"
              },
              {
                "name": "InterfaceDescriptorAlternateSetting",
                "type": "string"
              },
              {
                "name": "InterfaceDescriptorNumEndpoints",
                "type": "string"
              },
              {
                "name": "InterfaceDescriptorName",
                "type": "string"
              },
              {
                "name": "DcTypeOrLocation",
                "type": "string"
              },
              {
                "name": "SideChannelMitigationFlags",
                "type": "string"
              },
              {
                "name": "AgentLocalTime",
                "type": "string"
              },
              {
                "name": "ComputerName",
                "type": "string"
              },
              {
                "name": "ChassisType",
                "type": "string"
              },
              {
                "name": "TpmFirmwareVersion",
                "type": "string"
              },
              {
                "name": "BaseTime",
                "type": "string"
              },
              {
                "name": "TpmType",
                "type": "string"
              },
              {
                "name": "SignInfoFlagUnknownError",
                "type": "string"
              },
              {
                "name": "UTCTimestamp",
                "type": "string"
              },
              {
                "name": "SubjectDN",
                "type": "string"
              },
              {
                "name": "SignatureDigestEncryptAlg",
                "type": "string"
              },
              {
                "name": "SignInfoFlagSignHashMismatch",
                "type": "string"
              },
              {
                "name": "SubjectSerialNumber",
                "type": "string"
              },
              {
                "name": "IssuerDN",
                "type": "string"
              },
              {
                "name": "SubjectCN",
                "type": "string"
              },
              {
                "name": "ExternalApiType",
                "type": "string"
              },
              {
                "name": "SignInfoFlagSelfSigned",
                "type": "string"
              },
              {
                "name": "product_type_desc",
                "type": "string"
              },
              {
                "name": "event_type",
                "type": "string"
              },
              {
                "name": "StartTimestamp",
                "type": "string"
              },
              {
                "name": "HostnameField",
                "type": "string"
              },
              {
                "name": "OriginSourceIpAddress",
                "type": "string"
              },
              {
                "name": "SHA1String",
                "type": "string"
              },
              {
                "name": "ProcessStartTime",
                "type": "string"
              },
              {
                "name": "ProcessEndTime",
                "type": "string"
              },
              {
                "name": "DnsRequests",
                "type": "string"
              },
              {
                "name": "PatternDispositionFlags",
                "type": "string"
              },
              {
                "name": "FileName",
                "type": "string"
              },
              {
                "name": "LocalIP",
                "type": "string"
              },
              {
                "name": "FilePath",
                "type": "string"
              },
              {
                "name": "EventUUID",
                "type": "string"
              },
              {
                "name": "MD5String",
                "type": "string"
              },
              {
                "name": "SeverityName",
                "type": "string"
              },
              {
                "name": "Severity",
                "type": "string"
              },
              {
                "name": "SHA256String",
                "type": "string"
              },
              {
                "name": "NetworkAccesses",
                "type": "string"
              },
              {
                "name": "MACAddress",
                "type": "string"
              },
              {
                "name": "ProcessId",
                "type": "string"
              },
              {
                "name": "BillingType",
                "type": "string"
              },
              {
                "name": "RegNumericValue",
                "type": "string"
              },
              {
                "name": "RegBinaryValue",
                "type": "string"
              },
              {
                "name": "RpcOpClassification",
                "type": "string"
              },
              {
                "name": "AdditionalFields",
                "type": "string"
              }
            ]
          },
          "Custom-CrowdstrikeDns": {
            "columns": [
              {
                "name": "event_simpleName",
                "type": "string"
              },
              {
                "name": "timestamp",
                "type": "string"
              },
              {
                "name": "aip",
                "type": "string"
              },
              {
                "name": "aid",
                "type": "string"
              },
              {
                "name": "event_platform",
                "type": "string"
              },
              {
                "name": "ContextTimeStamp",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "ConfigBuild",
                "type": "string"
              },
              {
                "name": "ContextProcessId",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "DomainName",
                "type": "string"
              },
              {
                "name": "RequestType",
                "type": "string"
              },
              {
                "name": "IP4Records",
                "type": "string"
              },
              {
                "name": "QueryStatus",
                "type": "string"
              },
              {
                "name": "FirstIP4Record",
                "type": "string"
              },
              {
                "name": "DnsRequestCount",
                "type": "string"
              },
              {
                "name": "IP6Records",
                "type": "string"
              },
              {
                "name": "RespondingDnsServer",
                "type": "string"
              },
              {
                "name": "AdditionalFields",
                "type": "string"
              }
            ]
          },
          "Custom-CrowdstrikeAuth": {
            "columns": [
              {
                "name": "event_simpleName",
                "type": "string"
              },
              {
                "name": "timestamp",
                "type": "string"
              },
              {
                "name": "aip",
                "type": "string"
              },
              {
                "name": "aid",
                "type": "string"
              },
              {
                "name": "event_platform",
                "type": "string"
              },
              {
                "name": "ContextTimeStamp",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "ConfigBuild",
                "type": "string"
              },
              {
                "name": "ContextProcessId",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "UserName",
                "type": "string"
              },
              {
                "name": "LogonType",
                "type": "string"
              },
              {
                "name": "LogonTime",
                "type": "string"
              },
              {
                "name": "UserIsAdmin",
                "type": "string"
              },
              {
                "name": "LogonDomain",
                "type": "string"
              },
              {
                "name": "ClientComputerName",
                "type": "string"
              },
              {
                "name": "UserPrincipal",
                "type": "string"
              },
              {
                "name": "UserSid",
                "type": "string"
              },
              {
                "name": "LogonServer",
                "type": "string"
              },
              {
                "name": "AuthenticationPackage",
                "type": "string"
              },
              {
                "name": "UserLogonFlags",
                "type": "string"
              },
              {
                "name": "RemoteAddressIP4",
                "type": "string"
              },
              {
                "name": "RemoteAddressIP6",
                "type": "string"
              },
              {
                "name": "LogoffTime",
                "type": "string"
              },
              {
                "name": "SessionId",
                "type": "string"
              },
              {
                "name": "TargetProcessId",
                "type": "string"
              },
              {
                "name": "Status",
                "type": "string"
              },
              {
                "name": "AdditionalFields",
                "type": "string"
              }
            ]
          },
          "Custom-CrowdstrikeFile": {
            "columns": [
              {
                "name": "event_simpleName",
                "type": "string"
              },
              {
                "name": "timestamp",
                "type": "string"
              },
              {
                "name": "aip",
                "type": "string"
              },
              {
                "name": "aid",
                "type": "string"
              },
              {
                "name": "event_platform",
                "type": "string"
              },
              {
                "name": "ContextTimeStamp",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "ConfigBuild",
                "type": "string"
              },
              {
                "name": "ContextProcessId",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "UserName",
                "type": "string"
              },
              {
                "name": "TargetFileName",
                "type": "string"
              },
              {
                "name": "FileOperatorSid",
                "type": "string"
              },
              {
                "name": "Size",
                "type": "string"
              },
              {
                "name": "FileWrittenFlags",
                "type": "string"
              },
              {
                "name": "OperationFlags",
                "type": "string"
              },
              {
                "name": "SHA256HashData",
                "type": "string"
              },
              {
                "name": "SourceFileName",
                "type": "string"
              },
              {
                "name": "CommandLine",
                "type": "string"
              },
              {
                "name": "OriginalFilename",
                "type": "string"
              },
              {
                "name": "ClientId",
                "type": "string"
              },
              {
                "name": "TargetDirectoryName",
                "type": "string"
              },
              {
                "name": "UID",
                "type": "string"
              },
              {
                "name": "Status",
                "type": "string"
              },
              {
                "name": "ImageFileName",
                "type": "string"
              },
              {
                "name": "FileEventType",
                "type": "string"
              },
              {
                "name": "FileSystemOperationType",
                "type": "string"
              },
              {
                "name": "AdditionalFields",
                "type": "string"
              }
            ]
          },
          "Custom-CrowdstrikeNetwork": {
            "columns": [
              {
                "name": "event_simpleName",
                "type": "string"
              },
              {
                "name": "timestamp",
                "type": "string"
              },
              {
                "name": "aip",
                "type": "string"
              },
              {
                "name": "aid",
                "type": "string"
              },
              {
                "name": "event_platform",
                "type": "string"
              },
              {
                "name": "ContextTimeStamp",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "ConfigBuild",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "ConnectionDirection",
                "type": "string"
              },
              {
                "name": "RemotePort",
                "type": "string"
              },
              {
                "name": "LocalAddressIP6",
                "type": "string"
              },
              {
                "name": "RemoteAddressIP6",
                "type": "string"
              },
              {
                "name": "LocalPort",
                "type": "string"
              },
              {
                "name": "Protocol",
                "type": "string"
              },
              {
                "name": "RemoteAddressString",
                "type": "string"
              },
              {
                "name": "FirewallAction",
                "type": "string"
              },
              {
                "name": "NegateLocalAddress",
                "type": "string"
              },
              {
                "name": "RemoteAddressMaskIP6",
                "type": "string"
              },
              {
                "name": "LocalAddressMaskIP6",
                "type": "string"
              },
              {
                "name": "NegateRemoteAddress",
                "type": "string"
              },
              {
                "name": "IcmpCode",
                "type": "string"
              },
              {
                "name": "IcmpType",
                "type": "string"
              },
              {
                "name": "LocalAddressIP4",
                "type": "string"
              },
              {
                "name": "RemoteAddressIP4",
                "type": "string"
              },
              {
                "name": "RemoteAddressMaskIP4",
                "type": "string"
              },
              {
                "name": "LocalAddressMaskIP4",
                "type": "string"
              },
              {
                "name": "PhysicalAddress",
                "type": "string"
              },
              {
                "name": "InterfaceAlias",
                "type": "string"
              },
              {
                "name": "PolicyIdentifier",
                "type": "string"
              },
              {
                "name": "RuleAction",
                "type": "string"
              },
              {
                "name": "AdditionalFields",
                "type": "string"
              }
            ]
          },
          "Custom-CrowdstrikeProcess": {
            "columns": [
              {
                "name": "event_simpleName",
                "type": "string"
              },
              {
                "name": "timestamp",
                "type": "string"
              },
              {
                "name": "aip",
                "type": "string"
              },
              {
                "name": "aid",
                "type": "string"
              },
              {
                "name": "event_platform",
                "type": "string"
              },
              {
                "name": "ContextTimeStamp",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "ConfigBuild",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "UserName",
                "type": "string"
              },
              {
                "name": "AdditionalFields",
                "type": "string"
              },
              {
                "name": "UserSid",
                "type": "string"
              },
              {
                "name": "ParentBaseFileName",
                "type": "string"
              },
              {
                "name": "SHA256HashData",
                "type": "string"
              },
              {
                "name": "MD5HashData",
                "type": "string"
              },
              {
                "name": "SHA1HashData",
                "type": "string"
              },
              {
                "name": "CommandLine",
                "type": "string"
              },
              {
                "name": "InjecteeImageFileName",
                "type": "string"
              },
              {
                "name": "InjectorImageFileName",
                "type": "string"
              },
              {
                "name": "IntegrityLevel",
                "type": "string"
              },
              {
                "name": "ParentProcessId",
                "type": "string"
              },
              {
                "name": "TargetProcessId",
                "type": "string"
              },
              {
                "name": "ConHostProcessId",
                "type": "string"
              },
              {
                "name": "WritingProcessId",
                "type": "string"
              },
              {
                "name": "SourceProcessId",
                "type": "string"
              },
              {
                "name": "TargetFileName",
                "type": "string"
              },
              {
                "name": "ImageFileName",
                "type": "string"
              },
              {
                "name": "WritingProcessImageFileName",
                "type": "string"
              },
              {
                "name": "WritingProcessCommandLine",
                "type": "string"
              },
              {
                "name": "OriginalFilename",
                "type": "string"
              },
              {
                "name": "ProcessStartTime",
                "type": "string"
              },
              {
                "name": "ProcessEndTime",
                "type": "string"
              },
              {
                "name": "CreateProcessType",
                "type": "string"
              }
            ]
          },
          "Custom-CrowdstrikeRegistry": {
            "columns": [
              {
                "name": "event_simpleName",
                "type": "string"
              },
              {
                "name": "timestamp",
                "type": "string"
              },
              {
                "name": "aip",
                "type": "string"
              },
              {
                "name": "aid",
                "type": "string"
              },
              {
                "name": "event_platform",
                "type": "string"
              },
              {
                "name": "ContextTimeStamp",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "ConfigBuild",
                "type": "string"
              },
              {
                "name": "ContextProcessId",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "UserName",
                "type": "string"
              },
              {
                "name": "AdditionalFields",
                "type": "string"
              },
              {
                "name": "RegObjectName",
                "type": "string"
              },
              {
                "name": "RegValueName",
                "type": "string"
              },
              {
                "name": "RegOperationType",
                "type": "string"
              },
              {
                "name": "RegStringValue",
                "type": "string"
              },
              {
                "name": "RegType",
                "type": "string"
              },
              {
                "name": "RegNumericValue",
                "type": "string"
              },
              {
                "name": "RegBinaryValue",
                "type": "string"
              }
            ]
          },
          "Custom-CrowdstrikeAudit": {
            "columns": [
              {
                "name": "event_simpleName",
                "type": "string"
              },
              {
                "name": "timestamp",
                "type": "string"
              },
              {
                "name": "aip",
                "type": "string"
              },
              {
                "name": "aid",
                "type": "string"
              },
              {
                "name": "event_platform",
                "type": "string"
              },
              {
                "name": "ContextTimeStamp",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "ConfigBuild",
                "type": "string"
              },
              {
                "name": "ContextProcessId",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "UserName",
                "type": "string"
              },
              {
                "name": "AdditionalFields",
                "type": "string"
              },
              {
                "name": "VolumeSnapshotName",
                "type": "string"
              },
              {
                "name": "SmbShareName",
                "type": "string"
              },
              {
                "name": "ShareName",
                "type": "string"
              },
              {
                "name": "UploadId",
                "type": "string"
              },
              {
                "name": "SessionId",
                "type": "string"
              },
              {
                "name": "ComputerName",
                "type": "string"
              },
              {
                "name": "FirewallRule",
                "type": "string"
              },
              {
                "name": "FirewallRuleId",
                "type": "string"
              },
              {
                "name": "FirewallOption",
                "type": "string"
              },
              {
                "name": "SourceFileName",
                "type": "string"
              },
              {
                "name": "TargetFileName",
                "type": "string"
              },
              {
                "name": "DeviceVendorId",
                "type": "string"
              },
              {
                "name": "DeviceProductId",
                "type": "string"
              },
              {
                "name": "DeviceSerialNumber",
                "type": "string"
              },
              {
                "name": "BluetoothDeviceAddress",
                "type": "string"
              },
              {
                "name": "EnvironmentVariableName",
                "type": "string"
              },
              {
                "name": "SamAccountName",
                "type": "string"
              },
              {
                "name": "FirewallOptionNumericValue",
                "type": "string"
              },
              {
                "name": "FirewallOptionStringValue",
                "type": "string"
              },
              {
                "name": "FileVaultIsEnabled",
                "type": "string"
              },
              {
                "name": "EnvironmentVariableValue",
                "type": "string"
              },
              {
                "name": "ConfigStateData",
                "type": "string"
              },
              {
                "name": "ActiveDirectoryOuDn",
                "type": "string"
              },
              {
                "name": "ActiveDirectoryDepartment",
                "type": "string"
              },
              {
                "name": "IOServiceName",
                "type": "string"
              }
            ]
          },
          "Custom-CrowdstrikeUser": {
            "columns": [
              {
                "name": "event_simpleName",
                "type": "string"
              },
              {
                "name": "timestamp",
                "type": "string"
              },
              {
                "name": "aip",
                "type": "string"
              },
              {
                "name": "aid",
                "type": "string"
              },
              {
                "name": "event_platform",
                "type": "string"
              },
              {
                "name": "ContextTimeStamp",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "ConfigBuild",
                "type": "string"
              },
              {
                "name": "ContextProcessId",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "UserName",
                "type": "string"
              },
              {
                "name": "AdditionalFields",
                "type": "string"
              },
              {
                "name": "InterfaceVersion",
                "type": "string"
              },
              {
                "name": "RpcClientThreadId",
                "type": "string"
              },
              {
                "name": "UserRid",
                "type": "string"
              },
              {
                "name": "RpcOpNum",
                "type": "string"
              },
              {
                "name": "InterfaceGuid",
                "type": "string"
              },
              {
                "name": "RpcClientProcessId",
                "type": "string"
              },
              {
                "name": "RpcNestingLevel",
                "type": "string"
              },
              {
                "name": "GroupRid",
                "type": "string"
              },
              {
                "name": "DomainSid",
                "type": "string"
              }
            ]
          },
          "Custom-CrowdStrikeSecondary": {
            "columns": [
              {
                "name": "FolderName",
                "type": "string"
              },
              {
                "name": "AdditionalFields",
                "type": "string"
              }
            ]
          }
        },
        "destinations": {
          "logAnalytics": [
            {
              "workspaceResourceId": "[parameters('workspaces_externalid')]",
              "name": "myworkspace"
            }
          ]
        },
        "dataFlows": [
          {
            "streams": [
              "Custom-CrowdstrikeAdditional"
            ],
            "destinations": [
              "myworkspace"
            ],
            "transformKql": "source\r\n| extend eventDatetime = datetime_add('Millisecond', tolong(timestamp), todatetime('1970-01-01'))\r\n| extend TimeGenerated = iff(isnotempty(eventDatetime), eventDatetime, now())\r\n| project-rename \r\n        CrowdStrikeId = ['id']\r\n| extend \r\n        timestamp = tolong(timestamp),\r\n        ContextTimeStamp = todouble(ContextTimeStamp), \r\n        BaseTime = todouble(BaseTime),\r\n        CommandCloudTimeStamp = todouble(CommandCloudTimeStamp),       \r\n        BoundingLimitCount = tolong(BoundingLimitCount),       \r\n        SystemUptimeSeconds = tolong(SystemUptimeSeconds),\r\n        EtwEventCount = tolong(EtwEventCount),       \r\n        TotalCount = tolong(TotalCount),  \r\n        OciContainersStartedCount = tolong(OciContainersStartedCount), \r\n        OciContainersStoppedCount = tolong(OciContainersStoppedCount), \r\n        PhysicalCoreCount = tolong(PhysicalCoreCount), \r\n        ProcessCount = tolong(ProcessCount), \r\n        CommandCountMax = tolong(CommandCountMax), \r\n        CommandCount = tolong(CommandCount), \r\n        SignerInfoCount = tolong(SignerInfoCount),\r\n        SourceAccountBadPasswordCount = tolong(SourceAccountBadPasswordCount),\r\n        LogonTime = todouble(LogonTime),\r\n        KernelTime = todouble(KernelTime),\r\n        FileSigningTime = todouble(FileSigningTime),\r\n        VolumeSnapshotTimeStamp = todouble(VolumeSnapshotTimeStamp),\r\n        RetransmitTime = tolong(RetransmitTime),\r\n        CreationTimeStamp = todouble(CreationTimeStamp),\r\n        BaseReachableTime = tolong(BaseReachableTime),\r\n        BatchTimestamp = todouble(BatchTimestamp),\r\n        RemediationTriggerTimeStamp = todouble(RemediationTriggerTimeStamp),\r\n        ReflectivePeTimestamp = todouble(ReflectivePeTimestamp),\r\n        CommandEndTimeStamp = todouble(CommandEndTimeStamp),\r\n        CommandStartTimeStamp = todouble(CommandStartTimeStamp),\r\n        AggregationWindowTimestamp = todouble(AggregationWindowTimestamp),\r\n        AggregationEarliestTimestamp = todouble(AggregationEarliestTimestamp),\r\n        AggregationLatestTimestamp = todouble(AggregationLatestTimestamp),\r\n        ImageAnalysisRequestTimestamp = todouble(ImageAnalysisRequestTimestamp),\r\n        ImageTimeStamp = todouble(ImageTimeStamp),\r\n        UTCTimestamp = todouble(UTCTimestamp),\r\n        DeviceTimeStamp = todouble(DeviceTimeStamp),\r\n        AgentLocalTime = todouble(AgentLocalTime),\r\n        StartTimestamp = todouble(StartTimestamp),\r\n        TotalDiskSpace = toint(TotalDiskSpace),\r\n        CommandSequenceTotal = toint(CommandSequenceTotal),\r\n        ProcessStartTime = todouble(ProcessStartTime),        \r\n        ProcessEndTime = todouble(ProcessEndTime),\r\n        AdditionalFields = todynamic(AdditionalFields)",
            "outputStream": "Custom-CrowdStrike_Additional_Events_CL"
          },
          {
            "streams": [
              "Custom-CrowdstrikeNetwork"
            ],
            "destinations": [
              "myworkspace"
            ],
            "transformKql": "let NetworkDirectionLookup = parse_json('{0: \"Outbound\",1: \"Inbound\", 2: \"Local\", 3: \"Outbound\"}');\r\n    let NetworkProtocolLookup = parse_json('{0:\"HOPOPT\", 1:\"ICMP\", 2:\"IGMP\", 3:\"GGP\", 4:\"IPv4\", 5:\"ST\", 6:\"TCP\", 7:\"CBT\", 8:\"EGP\", 9:\"IGP\", 10:\"BBN-RCC-MON\", 11:\"NVP-II\", 12:\"PUP\", 13:\"ARGUS (deprecated)\", 14:\"EMCON\", 15:\"XNET\", 16:\"CHAOS\", 17:\"UDP\", 18:\"MUX\", 19:\"DCN-MEAS\", 20:\"HMP\", 21:\"PRM\", 22:\"XNS-IDP\", 23:\"TRUNK-1\", 24:\"TRUNK-2\", 25:\"LEAF-1\", 26:\"LEAF-2\", 27:\"RDP\", 28:\"IRTP\", 29:\"ISO-TP4\", 30:\"NETBLT\", 31:\"MFE-NSP\", 32:\"MERIT-INP\", 33:\"DCCP\", 34:\"3PC\", 35:\"IDPR\", 36:\"XTP\", 37:\"DDP\", 38:\"IDPR-CMTP\", 39:\"TP++\", 40:\"IL\", 41:\"IPv6\", 42:\"SDRP\", 43:\"IPv6-Route\", 44:\"IPv6-Frag\", 45:\"IDRP\", 46:\"RSVP\", 47:\"GRE\", 48:\"DSR\", 49:\"BNA\", 50:\"ESP\", 51:\"AH\", 52:\"I-NLSP\", 53:\"SWIPE (deprecated)\", 54:\"NARP\", 55:\"MOBILE\", 56:\"TLSP\", 57:\"SKIP\", 58:\"IPv6-ICMP\", 59:\"IPv6-NoNxt\", 60:\"IPv6-Opts\", 61:\"\", 62:\"CFTP\", 63:\"\", 64:\"SAT-EXPAK\", 65:\"KRYPTOLAN\", 66:\"RVD\", 67:\"IPPC\", 68:\"\", 69:\"SAT-MON\", 70:\"VISA\", 71:\"IPCV\", 72:\"CPNX\", 73:\"CPHB\", 74:\"WSN\", 75:\"PVP\", 76:\"BR-SAT-MON\", 77:\"SUN-ND\", 78:\"WB-MON\", 79:\"WB-EXPAK\", 80:\"ISO-IP\", 81:\"VMTP\", 82:\"SECURE-VMTP\", 83:\"VINES\", 84:\"TTP\", 84:\"IPTM\", 85:\"NSFNET-IGP\", 86:\"DGP\", 87:\"TCF\", 88:\"EIGRP\", 89:\"OSPFIGP\", 90:\"Sprite-RPC\", 91:\"LARP\", 92:\"MTP\", 93:\"AX.25\", 94:\"IPIP\", 95:\"MICP (deprecated)\", 96:\"SCC-SP\", 97:\"ETHERIP\", 98:\"ENCAP\", 99:\"\", 100:\"GMTP\", 101:\"IFMP\", 102:\"PNNI\", 103:\"PIM\", 104:\"ARIS\", 105:\"SCPS\", 106:\"QNX\", 107:\"A/N\", 108:\"IPComp\", 109:\"SNP\", 110:\"Compaq-Peer\", 111:\"IPX-in-IP\", 112:\"VRRP\", 113:\"PGM\", 114:\"\", 115:\"L2TP\", 116:\"DDX\", 117:\"IATP\", 118:\"STP\", 119:\"SRP\", 120:\"UTI\", 121:\"SMP\", 122:\"SM (deprecated)\", 123:\"PTP\", 124:\"ISIS over IPv4\", 125:\"FIRE\", 126:\"CRTP\", 127:\"CRUDP\", 128:\"SSCOPMCE\", 129:\"IPLT\", 130:\"SPS\", 131:\"PIPE\", 132:\"SCTP\", 133:\"FC\", 134:\"RSVP-E2E-IGNORE\", 135:\"Mobility Header\", 136:\"UDPLite\", 137:\"MPLS-in-IP\", 138:\"manet\", 139:\"HIP\", 140:\"Shim6\", 141:\"WESP\", 142:\"ROHC\", 143:\"Ethernet\", 253:\"\", 254:\"\", 255:\"Reserved\"}');\r\n    let DvcActionLookup = parse_json('{0: \"\", 1: \"Allow\", 2: \"Deny\"}');\r\n    let EventResultLookup = parse_json('{\"Allow\": \"Success\", \"Deny\": \"Failure\"}');\r\n    let EventSeverityLookup = parse_json('{\"Allow\": \"Informational\", \"Deny\": \"Low\"}');\r\n    let EventSubTypeLookup = parse_json('{\"NetworkConnectIP4\": \"Start\", \"NetworkConnectIP6\": \"Start\",\"NetworkReceiveAcceptIP4\": \"Start\", \"NetworkReceiveAcceptIP6\": \"Start\",\"NetworkCloseIP6\": \"End\", \"NetworkCloseIP4\": \"End\"}');\r\n    source\r\n    | extend eventDatetime = datetime_add('Millisecond', tolong(timestamp), todatetime('1970-01-01')),\r\n             contextDatetime = datetime_add('MilliSecond', tolong(todouble(ContextTimeStamp) * 1000), todatetime('1970-01-01'))\r\n    | extend TimeGenerated = iff(isnotempty(eventDatetime), eventDatetime, now())\r\n    | project-rename\r\n        DvcIpAddr = aip,\r\n        DvcId = aid,\r\n        EventOriginalType = name,\r\n        EventProductVersion = ConfigBuild,\r\n        EventOriginalUid = id,\r\n        NetworkIcmpType = IcmpType,\r\n        NetworkRuleName = PolicyIdentifier\r\n    | extend \r\n        EventStartTime = iff(isnotempty(contextDatetime),contextDatetime,TimeGenerated),\r\n        NetworkDirection = tostring(NetworkDirectionLookup[ConnectionDirection]),\r\n        NetworkProtocol = tostring(NetworkProtocolLookup[Protocol]),\r\n        FirewallDvcAction = tostring(DvcActionLookup[FirewallAction]),\r\n        RuleDvcAction = tostring(DvcActionLookup[RuleAction]),\r\n        RemotePortNumber = case(\r\n                          isnotempty(RemotePort),\r\n                          toint(RemotePort),\r\n                          toint(split(RemoteAddressString, \":\", 1)[0])\r\n                      ),\r\n        DvcOs = case(\r\n                event_platform == \"Win\",\r\n                \"Windows\", \r\n                event_platform == \"Mac\",\r\n                \"Macintosh\",\r\n                event_platform == \"Lin\",\r\n                \"Linux\", \r\n                \"\"\r\n            ),\r\n        LocalPortNumber = toint(LocalPort),\r\n        LocalIpAddr = case(\r\n                      isnotempty(LocalAddressIP6),\r\n                      LocalAddressIP6,\r\n                      isnotempty(LocalAddressIP4),\r\n                      LocalAddressIP4,\r\n                      NegateLocalAddress\r\n                  ),\r\n        RemoteIpAddr = case(\r\n                      isnotempty(RemoteAddressIP6),\r\n                      RemoteAddressIP6,\r\n                      isnotempty(RemoteAddressIP4),\r\n                      RemoteAddressIP4,\r\n                      isnotempty(RemoteAddressString),\r\n                      tostring(split(RemoteAddressString, \":\", 0)[0]),\r\n                      NegateRemoteAddress\r\n                  ),\r\n        LocalNatIpAddr = case(\r\n                        isnotempty(LocalAddressMaskIP6),\r\n                        LocalAddressMaskIP6,\r\n                        LocalAddressMaskIP4\r\n                    ),\r\n        RemoteNatIpAddr = case(\r\n                          isnotempty(RemoteAddressMaskIP6),\r\n                          RemoteAddressMaskIP6,\r\n                          RemoteAddressMaskIP4\r\n                      )\r\n    | extend\r\n        SrcPortNumber = iff(NetworkDirection == \"Inbound\" or NetworkDirection == \"Local\", RemotePortNumber, LocalPortNumber),    \r\n        DstPortNumber = iff(NetworkDirection == \"Inbound\" or NetworkDirection == \"Local\", LocalPortNumber, RemotePortNumber),\r\n        SrcIpAddr = iff(NetworkDirection == \"Inbound\" or NetworkDirection == \"Local\", RemoteIpAddr, LocalIpAddr),    \r\n        DstIpAddr = iff(NetworkDirection == \"Inbound\" or NetworkDirection == \"Local\", LocalIpAddr, RemoteIpAddr),\r\n        SrcNatIpAddr = iff(NetworkDirection == \"Inbound\" or NetworkDirection == \"Local\", RemoteNatIpAddr, LocalNatIpAddr),    \r\n        DstNatIpAddr = iff(NetworkDirection == \"Inbound\" or NetworkDirection == \"Local\", LocalNatIpAddr, RemoteNatIpAddr),    \r\n        DstInterfaceName = iff(NetworkDirection == \"Inbound\" or NetworkDirection == \"Local\", InterfaceAlias, \"\"),    \r\n        SrcInterfaceName = iff(NetworkDirection == \"Inbound\" or NetworkDirection == \"Local\", \"\", InterfaceAlias),\r\n        DstMacAddr = iff(event_simpleName in (\"LocalIpAddressIP4\", \"LocalIpAddressIP6\"), PhysicalAddress, \"\"),\r\n        NetworkIcmpCode = toint(IcmpCode),\r\n        EventSubType = tostring(EventSubTypeLookup[event_simpleName]),\r\n        AdditionalFields = todynamic(AdditionalFields),\r\n        EventEndTime = EventStartTime,\r\n        DvcAction = iff(isnotempty(FirewallDvcAction), FirewallDvcAction, RuleDvcAction),\r\n        DvcOriginalAction = iff(isnotempty(FirewallAction), FirewallAction, RuleAction),\r\n        EventType = \"NetworkSession\",\r\n        NetworkProtocolVersion = iff(event_simpleName contains \"IP4\", \"IPv4\", \"IPv6\"),\r\n        EventCount = toint(1),\r\n        EventSchemaVersion = \"0.2.6\",\r\n        EventVendor = \"CrowdStrike\",\r\n        EventProduct = \"Falcon Data Replicator\"\r\n    | extend\r\n        EventResult = iff(isnotempty(EventResultLookup[DvcAction]), tostring(EventResultLookup[DvcAction]), \"Success\"),\r\n        EventSeverity = iff(isnotempty(EventSeverityLookup[DvcAction]), tostring(EventSeverityLookup[DvcAction]), \"Informational\")",
            "outputStream": "Microsoft-ASimNetworkSessionLogs"
          },
          {
            "streams": [
              "Custom-CrowdstrikeDns"
            ],
            "destinations": [
              "myworkspace"
            ],
            "transformKql": "let DnsQueryTypeLookup = parse_json('{0: \"Reserved\",1: \"A\",2: \"NS\",3: \"MD\",4: \"MF\",5: \"CNAME\",6: \"SOA\",7: \"MB\",8: \"MG\",9: \"MR\",10: \"NULL\",11: \"WKS\",12: \"PTR\",13: \"HINFO\",14: \"MINFO\",15: \"MX\",16: \"TXT\",17: \"RP\",18: \"AFSDB\",19: \"X25\",20: \"ISDN\",21: \"RT\",22: \"NSAP\",23: \"NSAP-PTR\",24: \"SIG\",25: \"KEY\",26: \"PX\",27: \"GPOS\",28: \"AAAA\",29: \"LOC\",30: \"NXT\",31: \"EID\",32: \"NIMLOC\",33: \"SRV\",34: \"ATMA\",35: \"NAPTR\",36: \"KX\",37: \"CERT\",38: \"A6\",39: \"DNAME\",40: \"SINK\",41: \"OPT\",42: \"APL\",43: \"DS\",44: \"SSHFP\",45: \"IPSECKEY\",46: \"RRSIG\",47: \"NSEC\",48: \"DNSKEY\",49: \"DHCID\",50: \"NSEC3\",51: \"NSEC3PARAM\",52: \"TLSA\",53: \"SMIMEA\",55: \"HIP\",56: \"NINFO\",57: \"RKEY\",58: \"TALINK\",59: \"CDS\",60: \"CDNSKEY\",61: \"OPENPGPKEY\",62: \"CSYNC\",63: \"ZONEMD\",64: \"SVCB\",65: \"HTTPS\",99: \"SPF\",100: \"UINFO\",101: \"UID\",102: \"GID\",103: \"UNSPEC\",104: \"NID\",105: \"L32\",106: \"L64\",107: \"LP\",108: \"EUI48\",109: \"EUI64\",249: \"TKEY\",250: \"TSIG\",251: \"IXFR\",252: \"AXFR\",253: \"MAILB\",254: \"MAILA\",255: \"*\",256: \"URI\",257: \"CAA\",258: \"AVC\",259: \"DOA\",260: \"AMTRELAY\",32768: \"TA\",32769: \"DLV\",65535: \"Reserved\"}');\r\n    let EventResultDetailsLookup = parse_json('{0: \"No Error\",1: \"Format Error\",2: \"Server Failure\",3: \"Non-Existent Domain\",4: \"Not Implemented\",5: \"Query Refused\",6: \"Name Exists when it should not\",7: \"RR Set Exists when it should not\",8: \"RR Set that should exist does not\",9: \"Not Authorized\",10: \"Name not contained in zone\",11: \"DSO-TYPE Not Implemented\",16: \"Bad OPT Version \/ TSIG Signature Failure\",17: \"Key not recognized\",18: \"Signature out of time window\",19: \"Bad TKEY Mode\",20: \"Duplicate key name\",21: \"Algorithm not supported\",22: \"Bad Truncation\",23: \"Bad\/missing Server Cookie\",65535: \"Reserved, Can be allocated by Standards Action\"}');\r\n    source\r\n    | extend\r\n        eventDatetime = datetime_add('Millisecond', tolong(timestamp), todatetime('1970-01-01')),\r\n        contextDatetime = datetime_add('MilliSecond', tolong(todouble(ContextTimeStamp) * 1000), todatetime('1970-01-01'))\r\n    | extend TimeGenerated = iff(isnotempty(eventDatetime), eventDatetime, now())\r\n    | project-rename\r\n        DvcIpAddr = aip,\r\n        DvcId = aid,\r\n        EventOriginalType = name,\r\n        EventProductVersion = ConfigBuild,\r\n        EventOriginalUid = id,\r\n        SrcProcessId = ContextProcessId,\r\n        DnsQuery = DomainName,\r\n        DstIpAddr = RespondingDnsServer\r\n    | extend\r\n        DvcOs = case(\r\n                event_platform == \"Win\",\r\n                \"Windows\", \r\n                event_platform == \"Mac\",\r\n                \"Macintosh\",\r\n                event_platform == \"Lin\",\r\n                \"Linux\", \r\n                \"\"\r\n            ),\r\n        EventCount = iff(isnotempty(DnsRequestCount), toint(DnsRequestCount), toint(1)),\r\n        DnsResponseCode = toint(QueryStatus),\r\n        DnsQueryType = toint(RequestType)\r\n    | extend \r\n        EventStartTime = iff(isnotempty(contextDatetime), contextDatetime, TimeGenerated),\r\n        EventResultDetails = tostring(EventResultDetailsLookup[QueryStatus]),\r\n        DnsQueryTypeName = tostring(DnsQueryTypeLookup[RequestType]),\r\n        DnsResponseName = iff(isnotempty(IP4Records), IP4Records, \"\")\r\n    | extend\r\n        EventEndTime = EventStartTime,\r\n        EventSchemaVersion = \"0.1.7\",\r\n        EventVendor = \"CrowdStrike\",\r\n        EventProduct = \"Falcon Data Replicator\",\r\n        EventType = \"Query\",\r\n        EventSubType = case(\r\n                       event_simpleName == \"SuspiciousDnsRequest\",\r\n                       \"request\",\r\n                       \"response\"\r\n                   ),\r\n        EventResult = case(\r\n                      event_simpleName == \"SuspiciousDnsRequest\",\r\n                      \"Failure\",\r\n                      QueryStatus == \"0\",\r\n                      \"Success\", \r\n                      \"Failure\"\r\n                  ),\r\n        EventSeverity = case(\r\n                        event_simpleName == \"SuspiciousDnsRequest\",\r\n                        \"Medium\",\r\n                        QueryStatus == \"0\",\r\n                        \"Informational\", \r\n                        \"Low\"\r\n                    ) ",
            "outputStream": "Microsoft-ASimDnsActivityLogs"
          },
          {
            "streams": [
              "Custom-CrowdstrikeFile"
            ],
            "destinations": [
              "myworkspace"
            ],
            "transformKql": "let EventTypeSimpleNameLookup = parse_json('{\"ZipFileWritten\": \"FileModified\",  \"XarFileWritten\": \"FileModified\",  \"VmdkFileWritten\": \"FileModified\",  \"VdiFileWritten\": \"FileModified\",  \"TiffFileWritten\": \"FileModified\",  \"TarFileWritten\": \"FileModified\",  \"SuspiciousPeFileWritten\": \"FileModified\",  \"SuspiciousEseFileWritten\": \"FileModified\",  \"SldFileWritten\": \"FileModified\",  \"SevenZipFileWritten\": \"FileModified\",  \"RtfFileWritten\": \"FileModified\",  \"RpmFileWritten\": \"FileModified\",  \"RarFileWritten\": \"FileModified\",  \"RansomwareRenameFile\": \"FileRenamed\",  \"RansomwareOpenFile\": \"FileAccessed\",  \"RansomwareFileAccessPattern\": \"FileAccessed\",  \"RansomwareCreateFile\": \"FileCreated\",  \"PngFileWritten\": \"FileModified\", \"PeFileWritten\": \"FileCreated\",  \"PdfFileWritten\": \"FileModified\",  \"OoxmlFileWritten\": \"FileModified\",  \"OleFileWritten\": \"FileModified\",  \"NewScriptWritten\": \"FileCreated\",  \"NewExecutableWritten\": \"FileCreated\",  \"NewExecutableRenamed\": \"FileRenamed\",  \"MSXlsxFileWritten\": \"FileModified\",  \"MSVsdxFileWritten\": \"FileModified\",  \"MSPptxFileWritten\": \"FileModified\",  \"MsiFileWritten\": \"FileModified\",  \"MSDocxFileWritten\": \"FileModified\",  \"MachOFileWritten\": \"FileModified\",  \"LnkFileWritten\": \"FileModified\",  \"JpegFileWritten\": \"FileModified\",  \"JavaClassFileWritten\": \"FileModified\",  \"JarFileWritten\": \"FileModified\",  \"IdwFileWritten\": \"FileModified\",  \"GzipFileWritten\": \"FileModified\",  \"GifFileWritten\": \"FileModified\",  \"GenericFileWritten\": \"FileModified\", \"EseFileWritten\": \"FileModified\",  \"EmailFileWritten\": \"FileModified\",  \"EmailArchiveFileWritten\": \"FileModified\",  \"ELFFileWritten\": \"FileModified\",  \"DxfFileWritten\": \"FileModified\",  \"DwgFileWritten\": \"FileModified\",  \"DmpFileWritten\": \"FileModified\",  \"DmgFileWritten\": \"FileModified\",  \"DirectoryCreate\": \"FolderCreated\",  \"CriticalFileModified\": \"FileModified\",  \"CriticalFileAccessed\": \"FileAccessed\",  \"CabFileWritten\": \"FileModified\",  \"BZip2FileWritten\": \"FileModified\",  \"BmpFileWritten\": \"FileModified\",  \"BlfFileWritten\": \"FileModified\",  \"AsepFileChange\": \"FileModified\",  \"ArjFileWritten\": \"FileModified\",  \"ArcFileWritten\": \"FileModified\"}');\r\n    let EventSeverityLookup = parse_json('{\"SuspiciousPeFileWritten\": \"Medium\",\"SuspiciousEseFileWritten\": \"Medium\",\"RansomwareRenameFile\": \"High\",\"RansomwareOpenFile\": \"High\",\"RansomwareFileAccessPattern\": \"High\",\"RansomwareCreateFile\": \"High\",\"CriticalFileModified\": \"Medium\",\"CriticalFileAccessed\": \"Medium\"}');\r\n    let EventResultStatusLookup = parse_json('{0: {\"EventResultDetails\": \"\",\"EventResult\": \"Success\"},538181633: {\"EventResultDetails\": \"Component Enabled\",\"EventResult\": \"Success\"},1611530273: {\"EventResultDetails\": \"Mask Adjusted\",\"EventResult\": \"Success\"},1611726866: {\"EventResultDetails\": \"DEP disabled appcompat\",\"EventResult\": \"Success\"},1611792386: {\"EventResultDetails\": \"No existing credentials\",\"EventResult\": \"Failure\"},1611923478: {\"EventResultDetails\": \"Component Stopped\",\"EventResult\": \"Success\"},1612251168: {\"EventResultDetails\": \"HTTP Visibility enabled\",\"EventResult\": \"Success\"},3221225506: {\"EventResultDetails\": \"Access Denied\",\"EventResult\": \"Failure\"},3221225533: {\"EventResultDetails\": \"Data late error\",\"EventResult\": \"Failure\"},3221225541: {\"EventResultDetails\": \"Invalid page protection\",\"EventResult\": \"Failure\"},3221226347: {\"EventResultDetails\": \"Driver blocked critical\",\"EventResult\": \"Failure\"},3759013928: {\"EventResultDetails\": \"Process Critical\",\"EventResult\": \"Failure\"},3759013929: {\"EventResultDetails\": \"Process Whitelisted\",\"EventResult\": \"Success\"},3759013930: {\"EventResultDetails\": \"Process Microsoft signed\",\"EventResult\": \"Success\"},3759013931: {\"EventResultDetails\": \"Process Apple signed\",\"EventResult\": \"Success\"},3759407166: {\"EventResultDetails\": \"Component Disabled\",\"EventResult\": \"Failure\"}}');\r\n    let EventResultFileWrittenLookup = parse_json('{0: {\"EventResultDetails\": \"\",\"EventResult\": \"Success\"},1: {\"EventResultDetails\": \"Hash failed\",\"EventResult\": \"Failure\"},2: {\"EventResultDetails\": \"Hash aborted too large\",\"EventResult\": \"Failure\"}}');\r\n    let EventTypeFileLookup = parse_json('{0: \"FileRenamed\",1: \"FileModified\",2: \"FileDeleted\"}');\r\n    let EventTypeSystemOperationLookup = parse_json('{1: \"FileRenamed\",2: \"FileDeleted\"}');source\r\n    | extend eventDatetime = datetime_add('Millisecond', tolong(timestamp), todatetime('1970-01-01')),\r\n             contextDatetime = datetime_add('MilliSecond', tolong(todouble(ContextTimeStamp) * 1000), todatetime('1970-01-01'))\r\n    | extend TimeGenerated = iff(isnotempty(eventDatetime), eventDatetime, now())\r\n    | project-rename\r\n        DvcIpAddr = aip,\r\n        DvcId = aid,\r\n        ActorUsername = UserName,\r\n        EventOriginalType = name,\r\n        EventOriginalUid = id,\r\n        EventProductVersion = ConfigBuild,\r\n        ActingProcessId = ContextProcessId,\r\n        TargetFilePath = TargetFileName,\r\n        SrcFileName = SourceFileName,\r\n        TargetFileDirectory = TargetDirectoryName,\r\n        ActingProcessCommandLine = CommandLine\r\n    | extend \r\n        DvcOs = case(event_platform == \"Win\", \"Windows\", \r\n                    event_platform == \"Mac\", \"Macintosh\",\r\n                    event_platform == \"Lin\", \"Linux\", \r\n                    \"\"),    \r\n        ActorUserId = iff(isnotempty(FileOperatorSid), FileOperatorSid, UID),\r\n        EventStartTime = iff(isnotempty(contextDatetime),contextDatetime,TimeGenerated),\r\n        TargetFileSize = tolong(Size),\r\n        TargetFilePathSplit = iff(event_platform == \"Win\" and ImageFileName == \"\", \r\n                                    split(TargetFilePath,'\\\\'),\r\n                                    split(ImageFileName,'\\\\')\r\n                                ),\r\n        TargetFileSHA256 = SHA256HashData\r\n    | extend EventEndTime = EventStartTime,\r\n            TargetFileName = tostring(TargetFilePathSplit[array_length(TargetFilePathSplit)-1]),\r\n            EventSeverity = tostring(EventSeverityLookup[event_simpleName]),\r\n            EventResultStatus = tostring(EventResultStatusLookup[Status].EventResult),\r\n            EventResultDetailsStatus = tostring(EventResultStatusLookup[Status].EventResultDetails),\r\n            EventResultFileWritten = tostring(EventResultFileWrittenLookup[FileWrittenFlags].EventResult),\r\n            EventResultDetailsFileWritten = tostring(EventResultFileWrittenLookup[FileWrittenFlags].EventResultDetails),\r\n            EventTypeSimple = tostring(EventTypeSimpleNameLookup[event_simpleName]),\r\n            EventTypeFile = tostring(EventTypeFileLookup[FileEventType]),\r\n            EventTypeSystemOperation = tostring(EventTypeSystemOperationLookup[FileSystemOperationType]),\r\n            ActorUsername = case(isnotempty(ActorUsername), ActorUsername,\r\n                                ActorUserId == \"S-1-5-18\", \"Local System\",\r\n                                ActorUserId == \"S-1-0-0\", \"Nobody\",\r\n                                \"\")\r\n    | extend \r\n            AdditionalFields = todynamic(AdditionalFields),\r\n            TargetFileExtension = tostring(split(TargetFileName,\".\",1)[0]),\r\n            TargetFilePathType = iff(DvcOs == \"Windows\", \"Windows Share\",\"\"),\r\n            ActorUsernameType = iff(ActorUsername == \"\",\"\",\"Simple\"),\r\n            ActorUserIdType = case(FileOperatorSid != \"\",\"SID\",\r\n                                   UID != \"\",\"RID\",\r\n                                   \"\"),\r\n            HashType = iff(TargetFileSHA256 == \"\", \"\", \"SHA256\"),\r\n            EventType = case(isnotempty(EventTypeSystemOperation), EventTypeSystemOperation,\r\n                            isnotempty(EventTypeFile), EventTypeFile,\r\n                            EventTypeSimple),\r\n            TargetFileCreationTime = iff(event_simpleName in~ (\"RansomwareCreateFile\", \"PeFileWritten\", \"NewScriptWritten\", \"NewExecutableWritten\"), EventStartTime, todatetime(\"\")),\r\n            EventCount = toint(1),\r\n            EventSchemaVersion = \"0.2.1\",\r\n            EventVendor = \"CrowdStrike\",\r\n            EventProduct = \"Falcon Data Replicator\",\r\n            EventResult = case(isnotempty(EventResultStatus), EventResultStatus,\r\n                               isnotempty(EventResultFileWritten), EventResultFileWritten,\r\n                               \"Success\"),\r\n            EventResultDetails = case(isnotempty(EventResultDetailsStatus), EventResultDetailsStatus,\r\n                                    isnotempty(EventResultDetailsFileWritten), EventResultDetailsFileWritten,\r\n                                    \"\"),\r\n            EventSeverity = iff(EventSeverity == \"\", \"Informational\", EventSeverity)",
            "outputStream": "Custom-ASimFileEventLogs_CL"
          },
          {
            "streams": [
              "Custom-CrowdstrikeAuth"
            ],
            "destinations": [
              "myworkspace"
            ],
            "transformKql": "let EventSubTypeLookup = parse_json('{\"2\": \"Interactive\",  \"4\": \"Service\",  \"5\": \"Service\",  \"10\": \"RemoteInteractive\",  \"11\": \"Interactive\",  \"12\": \"RemoteInteractive\"}');\r\n      let EventFieldsLookup = parse_json('{\"UserLogonFailed2\": { \"EventResult\": \"Failure\", \"EventSeverity\": \"Low\", \"EventType\": \"Logon\" },\"UserLogonFailed\": { \"EventResult\": \"Failure\", \"EventSeverity\": \"Low\", \"EventType\": \"Logon\"  },\"UserLogon\": { \"EventResult\": \"Success\", \"EventSeverity\": \"Informational\", \"EventType\": \"Logon\"  },\"UserLogoff\": { \"EventResult\": \"Success\", \"EventSeverity\": \"Informational\", \"EventType\": \"Logoff\"  },\"IoSessionLoggedOn\": { \"EventResult\": \"Success\", \"EventSeverity\": \"Informational\", \"EventType\": \"Logon\"  }}');\r\n      source\r\n      | extend eventDatetime = datetime_add('Millisecond', tolong(timestamp), todatetime('1970-01-01'))\r\n      | extend TimeGenerated = iff(isnotempty(eventDatetime), eventDatetime, now()),\r\n               LogonTimeDt = datetime_add('Second', tolong(todouble(LogonTime)), todatetime('1970-01-01')),\r\n               LogoffTimeDt = datetime_add('Second', tolong(todouble(LogoffTime)), todatetime('1970-01-01'))\r\n      | project-rename\r\n          DvcIpAddr = aip,\r\n          DvcId = aid,\r\n          EventOriginalType = name,\r\n          EventOriginalUid = id,\r\n          EventProductVersion = ConfigBuild,\r\n          DvcHostname = ClientComputerName,\r\n          TargetUserId = UserSid,\r\n          TargetDomain = LogonDomain,\r\n          TargetHostname = LogonServer,\r\n          LogonProtocol = AuthenticationPackage,\r\n          EventOriginalSubType = LogonType,\r\n          ActingAppId = TargetProcessId,\r\n          TargetSessionId = SessionId\r\n      | extend           \r\n          TargetUsername = case(isnotempty(UserPrincipal),UserPrincipal,\r\n                                isnotempty(UserName),UserName,\r\n                                \"\"),\r\n          DvcOs = case(event_platform == \"Win\", \"Windows\", \r\n                      event_platform == \"Mac\", \"Macintosh\",\r\n                      event_platform == \"Lin\", \"Linux\", \r\n                      \"\"),    \r\n          EventStartTime = case(isnotempty(LogonTimeDt), LogonTimeDt,\r\n                                isnotempty(LogoffTimeDt), LogoffTimeDt,\r\n                                TimeGenerated),\r\n          EventEndTime = case(isnotempty(LogoffTimeDt), LogoffTimeDt,\r\n                                isnotempty(LogonTimeDt), LogonTimeDt,\r\n                                TimeGenerated),\r\n          TargetIpAddr = case(isnotempty(RemoteAddressIP4), RemoteAddressIP4,\r\n                              isnotempty(RemoteAddressIP6),RemoteAddressIP6,\r\n                                \"\"),\r\n          TargetUserType = case(UserIsAdmin == \"1\" or UserLogonFlags == \"2\", \"Admin\",\r\n                                UserLogonFlags == \"1\", \"Other\", //LOGON is synthetic\r\n                                UserLogonFlags == \"4\", \"Regular\", //Local\r\n                                UserLogonFlags == \"8\", \"Other\", //Built-in\r\n                                UserLogonFlags == \"16\", \"Anonymous\", //Identity is missing\r\n                                \"\"),\r\n          TargetUsernameType = case(isnotempty(UserPrincipal),\"UPN\",\r\n                                isnotempty(UserName),\"Simple\",\r\n                                \"\"),\r\n          TargetUserIdType = iff(TargetUserId != \"\", \"SID\", \"\"),\r\n          AdditionalFields = todynamic(AdditionalFields),\r\n          EventSubType = tostring(EventSubTypeLookup[EventOriginalSubType]),\r\n          EventResult = tostring(EventFieldsLookup[event_simpleName].EventResult),\r\n          EventSeverity = tostring(EventFieldsLookup[event_simpleName].EventSeverity),\r\n          EventType = tostring(EventFieldsLookup[event_simpleName].EventType),\r\n          EventCount = toint(1),\r\n          EventSchemaVersion = \"0.1.3\",\r\n          EventVendor = \"CrowdStrike\",\r\n          EventProduct = \"Falcon Data Replicator\"",
            "outputStream": "Custom-ASimAuthenticationEventLogs_CL"
          },
          {
            "streams": [
              "Custom-CrowdstrikeProcess"
            ],
            "destinations": [
              "myworkspace"
            ],
            "transformKql": "let EventTypeLookup = parse_json('{\"WmiCreateProcess\": \"ProcessCreated\",\"UnsignedModuleLoad\": \"ProcessCreated\",\"TerminateProcess\": \"ProcessTerminated\",\"SyntheticProcessRollup2\": \"ProcessCreated\",\"ProcessSelfDeleted\": \"ProcessTerminated\",\"ProcessRollup2\": \"ProcessCreated\",\"ProcessInjection\": \"ProcessCreated\",\"ProcessBlocked\": \"ProcessTerminated\",\"ModuleLoadV3DetectInfo\": \"ProcessCreated\",\"FileWrittenAndExecutedInContainer\": \"ProcessCreated\",\"ExecutableDeleted\": \"ProcessTerminated\",\"EndOfProcess\": \"ProcessTerminated\"}');\r\n      let EventSubTypeLookup = parse_json('{\"0\": \"Others\",  \"1\": \"Others\",  \"2\": \"NT Create Process\",  \"3\": \"Create Process\",  \"4\": \"Sheel Execute\",  \"5\": \"CRT System\"}');\r\n      let IntegrityLevelLookup = parse_json('{\"0\": \"Untrusted\",  \"4096\": \"Low\",  \"8192\": \"Medium\",  \"8448\": \"Medium\",  \"12288\": \"High\",  \"16384\": \"System\",  \"20480\": \"Protected\"}');\r\n      source\r\n      | extend eventDatetime = datetime_add('Millisecond', tolong(timestamp), todatetime('1970-01-01'))\r\n      | extend TimeGenerated = iff(isnotempty(eventDatetime), eventDatetime, now())\r\n      | project-rename\r\n          DvcIpAddr = aip,\r\n          DvcId = aid,\r\n          EventOriginalType = name,\r\n          EventOriginalUid = id,\r\n          EventProductVersion = ConfigBuild,\r\n          TargetUserId = UserSid,\r\n          ActorUsername = UserName,\r\n          ParentProcessName = ParentBaseFileName,\r\n          TargetProcessMD5 = MD5HashData,\r\n          TargetProcessSHA256 = SHA256HashData,\r\n          TargetProcessSHA1 = SHA1HashData,\r\n          TargetProcessCommandLine = CommandLine\r\n      | extend\r\n          DvcOs = case(event_platform == \"Win\", \"Windows\", \r\n                      event_platform == \"Mac\", \"Macintosh\",\r\n                      event_platform == \"Lin\", \"Linux\", \r\n                      \"\"),\r\n          TargetProcessName = case (event_simpleName == \"ProcessInjection\", InjecteeImageFileName,\r\n                                \"\"),\r\n          ActingProcessName = case (event_simpleName == \"ProcessInjection\", InjectorImageFileName,\r\n                                \"\"),\r\n          TargetProcessIntegrityLevel = tostring(IntegrityLevelLookup[IntegrityLevel]),\r\n          ParentProcessId = ParentProcessId,\r\n          TargetProcessId = TargetProcessId,\r\n          ActingProcessId = case(event_simpleName == \"EndOfProcess\", ConHostProcessId, \r\n                                  event_simpleName == \"FileWrittenAndExecutedInContainer\", WritingProcessId, \r\n                                  SourceProcessId),          \r\n          TargetProcessFileInternalName = case(isnotempty(TargetFileName), TargetFileName,\r\n                                                  isnotempty(ImageFileName), ImageFileName,\r\n                                                  \"\"),\r\n          AdditionalFields = todynamic(AdditionalFields),\r\n          ActingProcessFileOriginalName = iff(event_simpleName == \"FileWrittenAndExecutedInContainer\", WritingProcessImageFileName, \"\"),\r\n          ActingProcessCommandLine = iff(event_simpleName == \"FileWrittenAndExecutedInContainer\", WritingProcessCommandLine, \"\"),\r\n          TargetProcessFileOriginalName = iff(event_simpleName == \"ProcessBlocked\", OriginalFilename, \"\"),\r\n          TargetUserIdType = iff(isnotempty(TargetUserId),\"SID\",\"\"),\r\n          TargetUsername = case(TargetUserId == \"S-1-5-18\", \"Local System\",\r\n                                TargetUserId == \"S-1-0-0\", \"Nobody\",\r\n                                \"\"),\r\n          EventStartTime = case(isnotempty(ProcessStartTime), datetime_add('MilliSecond', tolong(todouble(ProcessStartTime) * 1000), todatetime('1970-01-01')),\r\n                                isnotempty(ContextTimeStamp), datetime_add('MilliSecond', tolong(todouble(ContextTimeStamp) * 1000), todatetime('1970-01-01')),\r\n                                isnotempty(ProcessEndTime), datetime_add('MilliSecond', tolong(todouble(ProcessEndTime) * 1000), todatetime('1970-01-01')),\r\n                                eventDatetime),\r\n          EventEndTime = case(isnotempty(ProcessEndTime), datetime_add('MilliSecond', tolong(todouble(ProcessEndTime) * 1000), todatetime('1970-01-01')),\r\n                                isnotempty(ContextTimeStamp), datetime_add('MilliSecond', tolong(todouble(ContextTimeStamp) * 1000), todatetime('1970-01-01')),\r\n                                isnotempty(ProcessStartTime), datetime_add('MilliSecond', tolong(todouble(ProcessStartTime) * 1000), todatetime('1970-01-01')),\r\n                                eventDatetime),\r\n          EventSubType = tostring(EventSubTypeLookup[CreateProcessType]),\r\n          EventType = tostring(EventTypeLookup[event_simpleName]),\r\n          EventSeverity = \"Informational\",\r\n          EventResult = \"Success\",\r\n          EventCount = toint(1),\r\n          EventSchemaVersion = \"0.1.4\",\r\n          EventVendor = \"CrowdStrike\",\r\n          EventProduct = \"Falcon Data Replicator\"\r\n      | extend \r\n                TargetUsernameType = iff(TargetUsername == \"\",\"\",\"Simple\"),\r\n                ActorUsernameType = iff(ActorUsername == \"\",\"\",\"Simple\")",
            "outputStream": "Custom-ASimProcessEventLogs_CL"
          },
          {
            "streams": [
              "Custom-CrowdstrikeRegistry"
            ],
            "destinations": [
              "myworkspace"
            ],
            "transformKql": "let EventTypeLookup = parse_json('{\"1\": \"RegistryValueSet\",\"2\": \"RegistryValueDeleted\",\"3\": \"RegistryKeyCreated\",\"4\": \"RegistryKeyDeleted\",\"5\": \"RegistryValueSet\",\"6\": \"RegistryKeyCreated\",\"7\": \"RegistryKeyRenamed\",\"8\": \"Others\",\"9\": \"Others\",\"101\": \"RegistryValueSet\",\"102\": \"RegistryValueDeleted\"}');\r\n      let RegistryValueTypeLookup = parse_json('{\"0\": \"Reg_None\",\"1\": \"Reg_Sz\",\"2\": \"Reg_Expand_Sz\",\"3\": \"Reg_Expand\",\"4\": \"Reg_Dword\",\"5\": \"Reg_Dword_Big_Endian\",\"6\": \"Reg_Link\",\"7\": \"Reg_Multi_Sz\",\"8\": \"Reg_Resource_List\",\"9\": \"Reg_Full_Resource_Descriptor\",\"10\": \"Reg_Resource_Requirements_List\",\"11\": \"Reg_Qword\"}');\r\n      source\r\n      | extend eventDatetime = datetime_add('Millisecond', tolong(timestamp), todatetime('1970-01-01')),\r\n               contextDatetime = datetime_add('MilliSecond', tolong(todouble(ContextTimeStamp) * 1000), todatetime('1970-01-01'))\r\n      | extend TimeGenerated = iff(isnotempty(eventDatetime), eventDatetime, now())\r\n      | project-rename\r\n          DvcIpAddr = aip,\r\n          DvcId = aid,\r\n          EventOriginalType = name,\r\n          EventOriginalUid = id,\r\n          EventProductVersion = ConfigBuild,\r\n          ActingProcessId = ContextProcessId,\r\n          RegistryKey = RegObjectName,\r\n          RegistryValue = RegValueName\r\n      | extend\r\n          AdditionalFields = todynamic(AdditionalFields),\r\n          DvcOs = case(event_platform == \"Win\", \"Windows\", \r\n                      event_platform == \"Mac\", \"Macintosh\",\r\n                      event_platform == \"Lin\", \"Linux\", \r\n                      \"\"),\r\n          RegistryValueData = case(isnotempty(RegStringValue),RegStringValue,\r\n                                    isnotempty(RegNumericValue),RegNumericValue,\r\n                                    isnotempty(RegBinaryValue),RegBinaryValue,\r\n                                    \"\"),\r\n          RegistryValueType = tostring(RegistryValueTypeLookup[RegType]),\r\n          EventStartTime = iff(isnotempty(contextDatetime),contextDatetime,TimeGenerated)\r\n      | extend EventEndTime = EventStartTime,\r\n               EventType = tostring(EventTypeLookup[RegOperationType]),\r\n               EventCount = toint(1),\r\n               EventSchemaVersion = \"0.2.1\",\r\n               EventVendor = \"CrowdStrike\",\r\n               EventProduct = \"Falcon Data Replicator\",\r\n               EventResult = \"Success\",\r\n               EventSeverity = \"Informational\"",
            "outputStream": "Custom-ASimRegistryEventLogs_CL"
          },
          {
            "streams": [
              "Custom-CrowdstrikeAudit"
            ],
            "destinations": [
              "myworkspace"
            ],
            "transformKql": "let EventResultLookup = parse_json('{\"VolumeSnapshotDeleted\": {\"EventType\": \"Delete\",\"Operation\": \"Volume Snapshot Deleted\",\"ObjectType\": \"Others\"},\"VolumeSnapshotCreated\": {\"EventType\": \"Create\",\"Operation\": \"Volume Snapshot Created\",\"ObjectType\": \"File\"},\"SmbServerShareOpenedEtw\": {\"EventType\": \"Set\",\"Operation\": \"SMB Server Share Opened Etw\",\"ObjectType\": \"Others\"},\"SmbClientShareOpenedEtw\": {\"EventType\": \"Set\",\"Operation\": \"SMB Client Share Opened Etw\",\"ObjectType\": \"Others\"},\"SmbClientShareClosedEtw\": {\"EventType\": \"Set\",\"Operation\": \"SMB Client Share Closed Etw\",\"ObjectType\": \"Others\"},\"ProvisioningStarted\": {\"EventType\": \"Start\",\"Operation\": \"Provisioning Started\",\"ObjectType\": \"Others\"},\"ProvisioningEnded\": {\"EventType\": \"Stop\",\"Operation\": \"Provisioning Ended\",\"ObjectType\": \"Others\"},\"OsfmDownloadComplete\": {\"EventType\": \"Others\",\"Operation\": \"Osfm Download Complete\",\"ObjectType\": \"File\"},\"NetShareSecurityModify\": {\"EventType\": \"Set\",\"Operation\": \"NetShare Security Modify\",\"ObjectType\": \"Others\"},\"NetShareDelete\": {\"EventType\": \"Delete\",\"Operation\": \"NetShare Delete\",\"ObjectType\": \"Others\"},\"NetShareAdd\": {\"EventType\": \"Create\",\"Operation\": \"NetShare Add\",\"ObjectType\": \"Others\"},\"MemoryScanEnabled\": {\"EventType\": \"Enable\",\"Operation\": \"Memory Scan Enabled\",\"ObjectType\": \"Others\"},\"ManifestDownloadComplete\": {\"EventType\": \"Others\",\"Operation\": \"Manifest Download Complete\",\"ObjectType\": \"File\"},\"LfoUploadStart\": {\"EventType\": \"Start\",\"Operation\": \"LFO Upload Start\",\"ObjectType\": \"Others\"},\"IoSessionConnected\": {\"EventType\": \"Others\",\"Operation\": \"IO Session Connected\",\"ObjectType\": \"Others\"},\"InstallServiceDownloadComplete\": {\"EventType\": \"Install\",\"Operation\": \"Install Service Download Complete\",\"ObjectType\": \"File\"},\"InstallBundleDownloadComplete\": {\"EventType\": \"Install\",\"Operation\": \"Install Bundle Download Complete\",\"ObjectType\": \"File\"},\"HostnameChanged\": {\"EventType\": \"Set\",\"Operation\": \"Hostname Changed\",\"ObjectType\": \"Host\"},\"FirewallSetRule\": {\"EventType\": \"Set\",\"Operation\": \"Firewall Set Rule\",\"ObjectType\": \"Policy Rule\"},\"FirewallEnabled\": {\"EventType\": \"Enable\",\"Operation\": \"Firewall Enabled\",\"ObjectType\": \"Others\"},\"FirewallDisabled\": {\"EventType\": \"Disable\",\"Operation\": \"Firewall Disabled\",\"ObjectType\": \"Others\"},\"FirewallDeleteRule\": {\"EventType\": \"Delete\",\"Operation\": \"Firewall Delete Rule\",\"ObjectType\": \"Policy Rule\"},\"FirewallChangeOption\": {\"EventType\": \"Set\",\"Operation\": \"Firewall Change Option\",\"ObjectType\": \"Others\"},\"FileVaultStatus\": {\"EventType\": \"Set\",\"Operation\": \"File Vault Status\",\"ObjectType\": \"Others\"},\"FileRenameInfo\": {\"EventType\": \"Set\",\"Operation\": \"File Rename\",\"ObjectType\": \"File\"},\"FileOpenInfo\": {\"EventType\": \"Others\",\"Operation\": \"File Open\",\"ObjectType\": \"File\"},\"FileDeleteInfo\": {\"EventType\": \"Delete\",\"Operation\": \"File Delete\",\"ObjectType\": \"File\"},\"FileCreateInfo\": {\"EventType\": \"Create\",\"Operation\": \"File Create\",\"ObjectType\": \"File\"},\"EventLogCleared\": {\"EventType\": \"Others\",\"Operation\": \"Event Logs Cleared\",\"ObjectType\": \"File\"},\"DcUsbDeviceWhitelisted\": {\"EventType\": \"Others\",\"Operation\": \"DC USB Device Whitelisted\",\"ObjectType\": \"Others\"},\"DcUsbDeviceDisconnected\": {\"EventType\": \"Others\",\"Operation\": \"DC USB Device Disconnected\",\"ObjectType\": \"Others\"},\"DcBluetoothDeviceDisconnected\": {\"EventType\": \"Others\",\"Operation\": \"DC Bluetooth Device Disconnected\",\"ObjectType\": \"Others\"},\"DcBluetoothDeviceConnected\": {\"EventType\": \"Others\",\"Operation\": \"DC Bluetooth Device Connected\",\"ObjectType\": \"Others\"},\"CriticalEnvironmentVariableChanged\": {\"EventType\": \"Set\",\"Operation\": \"Critical Environment Variable Changed\",\"ObjectType\": \"Others\"},\"ConfigStateUpdate\": {\"EventType\": \"Set\",\"Operation\": \"Config State Update\",\"ObjectType\": \"Configuration\"},\"ActiveDirectoryAccountUnlocked\": {\"EventType\": \"Others\",\"Operation\": \"Active Directory Account Unlocked\",\"ObjectType\": \"Account\"},\"ActiveDirectoryAccountPasswordUpdate\": {\"EventType\": \"Set\",\"Operation\": \"Active Directory Account Password Update\",\"ObjectType\": \"Account\"},\"ActiveDirectoryAccountOuUpdate\": {\"EventType\": \"Set\",\"Operation\": \"Active Directory Account Ou Update\",\"ObjectType\": \"Account\"},\"ActiveDirectoryAccountNameUpdate\": {\"EventType\": \"Set\",\"Operation\": \"Active Directory Account Name Update\",\"ObjectType\": \"Account\"},\"ActiveDirectoryAccountLocked\": {\"EventType\": \"Others\",\"Operation\": \"Active Directory Account Locked\",\"ObjectType\": \"Account\"},\"ActiveDirectoryAccountEnabled\": {\"EventType\": \"Enable\",\"Operation\": \"Active Directory Account Enabled\",\"ObjectType\": \"Account\"},\"ActiveDirectoryAccountDisabled\": {\"EventType\": \"Disable\",\"Operation\": \"Active Directory Account Disabled\",\"ObjectType\": \"Account\"},\"ActiveDirectoryAccountDepartmentUpdate\": {\"EventType\": \"Set\",\"Operation\": \"Active Directory Account Department Update\",\"ObjectType\": \"Account\"},\"ActiveDirectoryAccountCreated\": {\"EventType\": \"Create\",\"Operation\": \"Active Directory Account Created\",\"ObjectType\": \"Account\"},\"IOServiceRegister\": {\"EventType\": \"Others\",\"Operation\": \"IO Service Register\",\"ObjectType\": \"Others\"}}');\r\n    source\r\n        | extend eventDatetime = datetime_add('Millisecond', tolong(timestamp), todatetime('1970-01-01')),\r\n                 contextDatetime = datetime_add('MilliSecond', tolong(todouble(ContextTimeStamp) * 1000), todatetime('1970-01-01'))\r\n        | extend TimeGenerated = iff(isnotempty(eventDatetime), eventDatetime, now())\r\n        | project-rename\r\n            DvcIpAddr = aip,\r\n            DvcId = aid,\r\n            ActorUsername = UserName,\r\n            EventOriginalType = name,\r\n            EventOriginalUid = id,\r\n            EventProductVersion = ConfigBuild\r\n        | extend \r\n            DvcOs = case(event_platform == \"Win\", \"Windows\", \r\n                        event_platform == \"Mac\", \"Macintosh\",\r\n                        event_platform == \"Lin\", \"Linux\", \r\n                        \"\"),\r\n            ActorUsernameType = iff(isnotempty(ActorUsername),\"Simple\",\"\"),\r\n            EventStartTime = iff(isnotempty(contextDatetime),contextDatetime,TimeGenerated)\r\n        | extend \r\n                Operation = tostring(EventResultLookup[event_simpleName].Operation),\r\n                Object = case(\r\n                              event_simpleName =~ \"VolumeSnapshotDeleted\", VolumeSnapshotName,\r\n                              event_simpleName =~ \"VolumeSnapshotCreated\", TargetFileName,\r\n                              event_simpleName startswith \"Smb\", SmbShareName,\r\n                              event_simpleName startswith \"Provisioning\", \"Agent\",\r\n                              event_simpleName =~ \"OsfmDownloadComplete\", TargetFileName,\r\n                              event_simpleName startswith \"NetShare\", ShareName,\r\n                              event_simpleName =~ \"MemoryScanEnabled\", \"Memory Scan\",\r\n                              event_simpleName =~ \"ManifestDownloadComplete\", TargetFileName,\r\n                              event_simpleName =~ \"LfoUploadStart\", UploadId,\r\n                              event_simpleName =~ \"IoSessionConnected\", SessionId,\r\n                              event_simpleName =~ \"IOServiceRegister\", IOServiceName,\r\n                              event_simpleName startswith \"Install\", TargetFileName,\r\n                              event_simpleName =~ \"HostnameChanged\", ComputerName,\r\n                              event_simpleName =~ \"FirewallSetRule\", iff(isnotempty(FirewallRule),strcat(FirewallRule,'\\\\',FirewallRuleId),FirewallRuleId),\r\n                              event_simpleName in~ (\"FirewallEnabled\",\"FirewallDisabled\"), \"Firewall\",\r\n                              event_simpleName =~ \"FirewallDeleteRule\", FirewallRuleId,\r\n                              event_simpleName =~ \"FirewallChangeOption\", FirewallOption,\r\n                              event_simpleName =~ \"FileVaultStatus\", \"File Vault\",\r\n                              event_simpleName =~ \"FileRenameInfo\", SourceFileName,\r\n                              event_simpleName startswith \"File\", TargetFileName,\r\n                              event_simpleName =~ \"EventLogCleared\", TargetFileName,\r\n                              event_simpleName =~ \"DcUsbDeviceWhitelisted\", iff(isnotempty(DeviceVendorId),strcat(DeviceVendorId,'\\\\',DeviceProductId),DeviceProductId),\r\n                              event_simpleName =~ \"DcUsbDeviceDisconnected\", DeviceSerialNumber,\r\n                              event_simpleName startswith \"DcBluetoothDevice\", BluetoothDeviceAddress,\r\n                              event_simpleName =~ \"CriticalEnvironmentVariableChanged\", EnvironmentVariableName,\r\n                              event_simpleName =~ \"ConfigStateUpdate\", \"Config State\",\r\n                              event_simpleName startswith \"ActiveDirectoryAccount\", SamAccountName,  \r\n                              \"\"),\r\n                ObjectType = tostring(EventResultLookup[event_simpleName].ObjectType),\r\n                OldValue = case(\r\n                              event_simpleName == \"FileRenameInfo\", SourceFileName, \r\n                              \"\"),\r\n                NewValue = case(\r\n                              event_simpleName == \"FirewallChangeOption\", iff(isnotempty(FirewallOptionNumericValue),FirewallOptionNumericValue,FirewallOptionStringValue), \r\n                              event_simpleName == \"FileVaultStatus\", FileVaultIsEnabled,\r\n                              event_simpleName == \"FileRenameInfo\", TargetFileName,\r\n                              event_simpleName == \"CriticalEnvironmentVariableChanged\", EnvironmentVariableName,\r\n                              event_simpleName == \"ConfigStateUpdate\", ConfigStateData,\r\n                              event_simpleName == \"ActiveDirectoryAccountOuUpdate\", ActiveDirectoryOuDn,\r\n                              event_simpleName == \"ActiveDirectoryAccountDepartmentUpdate\", ActiveDirectoryDepartment,\r\n                              \"\"),\r\n                EventEndTime = EventStartTime,\r\n                EventType = tostring(EventResultLookup[event_simpleName].EventResult),\r\n                EventCount = toint(1),\r\n                EventSchemaVersion = \"0.1.0\",\r\n                EventVendor = \"CrowdStrike\",\r\n                EventProduct = \"Falcon Data Replicator\",\r\n                EventResult = \"Success\",\r\n                EventSeverity = \"Informational\"",
            "outputStream": "Microsoft-ASimAuditEventLogs"
          },
          {
            "streams": [
              "Custom-CrowdstrikeUser"
            ],
            "destinations": [
              "myworkspace"
            ],
            "transformKql": "let EventTypeLookup = parse_json('{\"UserAccountDeleted\": \"UserCreated\",\"UserAccountCreated\": \"UserDeleted\",\"UserAccountAddedToGroup\": \"UserAddedToGroup\"}');\r\n      source\r\n      | extend eventDatetime = datetime_add('Millisecond', tolong(timestamp), todatetime('1970-01-01')),\r\n               contextDatetime = datetime_add('MilliSecond', tolong(todouble(ContextTimeStamp) * 1000), todatetime('1970-01-01'))\r\n      | extend TimeGenerated = iff(isnotempty(eventDatetime), eventDatetime, now())\r\n      | project-rename\r\n          DvcIpAddr = aip,\r\n          DvcId = aid,\r\n          ActorUsername = UserName,\r\n          EventOriginalType = name,\r\n          EventOriginalUid = id,\r\n          DvcInterfaceGuid = InterfaceGuid,\r\n          EventProductVersion = ConfigBuild,\r\n          TargetUserId = UserRid,\r\n          GroupId = GroupRid\r\n      | extend \r\n          AdditionalFields = todynamic(AdditionalFields),\r\n          DvcOs = case(event_platform == \"Win\", \"Windows\", \r\n                      event_platform == \"Mac\", \"Macintosh\",\r\n                      event_platform == \"Lin\", \"Linux\", \r\n                      \"\"),    \r\n          EventStartTime = iff(isnotempty(contextDatetime),contextDatetime,TimeGenerated),\r\n          TargetUserIdType = \"RID\",\r\n          GroupIdType = \"RID\"\r\n      | extend EventEndTime = EventStartTime,\r\n              EventType = tostring(EventTypeLookup[event_simpleName]),\r\n              EventCount = toint(1),\r\n              EventSchemaVersion = \"0.1.1\",\r\n              EventVendor = \"CrowdStrike\",\r\n              EventProduct = \"Falcon Data Replicator\",\r\n              EventResult = \"Success\",\r\n              EventSeverity = \"Informational\"",
            "outputStream": "Custom-ASimUserManagementLogs_CL"
          },
          {
            "streams": [
              "Custom-CrowdStrikeSecondary"
            ],
            "destinations": [
              "myworkspace"
            ],
            "transformKql": "source\r\n| extend TimeGenerated = now(),\r\n        AdditionalFields = todynamic(AdditionalFields)",
            "outputStream": "Custom-CrowdStrike_Secondary_Data_CL"
          }
        ]
      }
    }
  ]
}