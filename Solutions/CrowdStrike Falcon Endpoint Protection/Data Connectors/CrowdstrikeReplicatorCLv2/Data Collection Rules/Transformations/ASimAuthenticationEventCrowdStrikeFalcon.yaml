  Parser:
    Title: Authentication Event ASIM parser for CrowdStrike Falcon Data Replicator
    Version: '0.1'
    LastUpdated: Jun 6, 2023
  Product:
    Name: Falcon Data Replicator
  Normalization:
    Schema: AuthenticationEvent
    Version: '0.1.3'
  References:
    - Title: ASIM Authentication Event Schema
      Link: https://aka.ms/ASimAuthenticationEventDoc
    - Title: ASIM
      Link: https://aka.ms/AboutASIM
  Description: |
    This ASIM parser supports normalizing CrowdStrike Falcon Data Replicator logs produced by the Microsoft Sentinel AWS S3 connector to the ASIM Authentication Event normalized schema.
  ParserName: ASimAuthenticationEventCrowdStrikeFalcon
  ParserParams:
    - Name: disabled
      Type: bool
      Default: false
  ParserQuery: |
      let EventSubTypeLookup = parse_json('{"2": "Interactive",  "4": "Service",  "5": "Service",  "10": "RemoteInteractive",  "11": "Interactive",  "12": "RemoteInteractive"}');
      let EventFieldsLookup = parse_json('{"UserLogonFailed2": { "EventResult": "Failure", "EventSeverity": "Low", "EventType": "Logon" },"UserLogonFailed": { "EventResult": "Failure", "EventSeverity": "Low", "EventType": "Logon"  },"UserLogon": { "EventResult": "Success", "EventSeverity": "Informational", "EventType": "Logon"  },"UserLogoff": { "EventResult": "Success", "EventSeverity": "Informational", "EventType": "Logoff"  },"IoSessionLoggedOn": { "EventResult": "Success", "EventSeverity": "Informational", "EventType": "Logon"  }}');
      source
      | extend eventDatetime = datetime_add('Millisecond', tolong(timestamp), todatetime('1970-01-01'))
      | extend TimeGenerated = iff(isnotempty(eventDatetime), eventDatetime, now()),
               LogonTimeDt = datetime_add('Second', tolong(todouble(LogonTime)), todatetime('1970-01-01')),
               LogoffTimeDt = datetime_add('Second', tolong(todouble(LogoffTime)), todatetime('1970-01-01'))
      | project-rename
          DvcIpAddr = aip,
          DvcId = aid,
          EventOriginalType = name,
          EventOriginalUid = id,
          EventProductVersion = ConfigBuild,
          DvcHostname = ClientComputerName,
          TargetUserId = UserSid,
          TargetDomain = LogonDomain,
          TargetHostname = LogonServer,
          LogonProtocol = AuthenticationPackage,
          EventOriginalSubType = LogonType,
          ActingAppId = TargetProcessId,
          TargetSessionId = SessionId
      | extend           
          TargetUsername = case(isnotempty(UserPrincipal),UserPrincipal,
                                isnotempty(UserName),UserName,
                                ""),
          DvcOs = case(event_platform == "Win", "Windows", 
                      event_platform == "Mac", "Macintosh",
                      event_platform == "Lin", "Linux", 
                      ""),    
          EventStartTime = case(isnotempty(LogonTimeDt), LogonTimeDt,
                                isnotempty(LogoffTimeDt), LogoffTimeDt,
                                TimeGenerated),
          EventEndTime = case(isnotempty(LogoffTimeDt), LogoffTimeDt,
                                isnotempty(LogonTimeDt), LogonTimeDt,
                                TimeGenerated),
          TargetIpAddr = case(isnotempty(RemoteAddressIP4), RemoteAddressIP4,
                              isnotempty(RemoteAddressIP6),RemoteAddressIP6,
                                ""),
          TargetUserType = case(UserIsAdmin == "1" or UserLogonFlags == "2", "Admin",
                                UserLogonFlags == "1", "Other", //LOGON is synthetic
                                UserLogonFlags == "4", "Regular", //Local
                                UserLogonFlags == "8", "Other", //Built-in
                                UserLogonFlags == "16", "Anonymous", //Identity is missing
                                ""),
          TargetUsernameType = case(isnotempty(UserPrincipal),"UPN",
                                isnotempty(UserName),"Simple",
                                ""),
          TargetUserIdType = iff(TargetUserId != "", "SID", ""),
          AdditionalFields = todynamic(AdditionalFields),
          EventSubType = tostring(EventSubTypeLookup[EventOriginalSubType]),
          EventResult = tostring(EventFieldsLookup[event_simpleName].EventResult),
          EventSeverity = tostring(EventFieldsLookup[event_simpleName].EventSeverity),
          EventType = tostring(EventFieldsLookup[event_simpleName].EventType),
          EventCount = toint(1),
          EventSchemaVersion = "0.1.3",
          EventVendor = "CrowdStrike",
          EventProduct = "Falcon Data Replicator"