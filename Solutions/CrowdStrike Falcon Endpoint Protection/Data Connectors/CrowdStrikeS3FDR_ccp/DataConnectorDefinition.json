{
	"name": "CrowdStrikeFalconS3CCPDefinition",
	"apiVersion": "2022-09-01-preview",
	"type": "Microsoft.SecurityInsights/dataConnectorDefinitions",
	"location": "{{location}}",
	"kind": "Customizable",
	"properties": {
		"connectorUiConfig": {
			"id": "CrowdStrikeFalconS3CCPDefinition",
			"title": "CrowdStrike Falcon Data Replicator (S3 Polling via Codeless Connector Platform)",
			"publisher": "Microsoft",
			"descriptionMarkdown": "The Crowdstrike Falcon Data Replicator (S3) connector provides the capability to ingest raw event data from the Falcon Platform events into Microsoft Sentinel by polling CrowdStrike APIs. The connector provides ability to get events from Falcon Agents which helps to examine potential security risks, analyze your team's use of collaboration, diagnose configuration problems and more.",
			"graphQueriesTableName": "CrowdStrike_Additional_Events_CL",
			"graphQueries": [
				{
					"metricName": "Total events received",
					"legend": "CrowdStrike Falcon S3 User Logs",
					"baseQuery": "CrowdStrike_User_Events_CL"
				},
				{
					"metricName": "Total events received",
					"legend": "CrowdStrike Falcon S3 Secondary Logs",
					"baseQuery": "CrowdStrike_Secondary_Data_CL"
				},
				{
					"metricName": "Total events received",
					"legend": "CrowdStrike Falcon S3 Additional Logs",
					"baseQuery": "CrowdStrike_Additional_Events_CL"
				},
				{
					"metricName": "Total events received",
					"legend": "CrowdStrike Falcon S3 Auth Logs",
					"baseQuery": "CrowdStrike_Auth_Events_CL"
				},
				{
					"metricName": "Total events received",
					"legend": "CrowdStrike Falcon S3 Registry Logs ",
					"baseQuery": "CrowdStrike_Registry_Events_CL"
				},
				{
					"metricName": "Total events received",
					"legend": "CrowdStrike Falcon S3 Process Logs",
					"baseQuery": "CrowdStrike_Process_Events_CL"
				},
				{
					"metricName": "Total events received",
					"legend": "CrowdStrike Falcon S3 Network Logs",
					"baseQuery": "CrowdStrike_Network_Events_CL"
				},
				{
					"metricName": "Total events received",
					"legend": "CrowdStrike Falcon S3 File Logs",
					"baseQuery": "CrowdStrike_File_Events_CL"
				},
				{
					"metricName": "Total events received",
					"legend": "CrowdStrike Falcon S3 Audit Logs",
					"baseQuery": "CrowdStrike_Audit_Events_CL"
				},
				{
					"metricName": "Total events received",
					"legend": "CrowdStrike Falcon S3 Logs Test",
					"baseQuery": "CrowdStrike_DNS_Events_CL"
				}
			],
			"sampleQueries": [
				{
					"description": "Get Sample of CrowdStrike Falcon S3 Logs",
					"query": "CrowdStrike_User_Events_CL\n | take 10"
				},
				{
					"description": "Get Sample of CrowdStrike Falcon S3 Logs",
					"query": "CrowdStrike_Additional_Events_CL\n | take 10"
				},
				{
					"description": "Get Sample of CrowdStrike Falcon S3 Logs",
					"query": "CrowdStrike_Registry_Events_CL\n | take 10"
				},
				{
					"description": "Get Sample of CrowdStrike Falcon S3 Logs",
					"query": "CrowdStrike_Process_Events_CL\n | take 10"
				},
				{
					"description": "Get Sample of CrowdStrike Falcon S3 Logs",
					"query": "CrowdStrike_Network_Events_CL\n | take 10"
				},
				{
					"description": "Get Sample of CrowdStrike Falcon S3 Logs",
					"query": "CrowdStrike_Audit_Events_CL\n | take 10"
				},
				{
					"description": "Get Sample of CrowdStrike Falcon S3 Logs",
					"query": "CrowdStrike_Auth_Events_CL\n | take 10"
				},
				{
					"description": "Get Sample of CrowdStrike Falcon S3 Logs",
					"query": "CrowdStrike_File_Events_CL\n | take 10"
				},
				{
					"description": "Get Sample of CrowdStrike Falcon S3 Logs",
					"query": "CrowdStrike_Secondary_Data_CL\n | take 10"
				},
				{
					"description": "Get Sample of CrowdStrike Falcon S3 Logs",
					"query": "CrowdStrike_DNS_Events_CL\n | take 10"
				}
			],
			"dataTypes": [
				{
					"name": "CrowdStrike_User_Events_CL",
					"lastDataReceivedQuery": "CrowdStrike_User_Events_CL\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				},
				{
					"name": "CrowdStrike_Additional_Events_CL",
					"lastDataReceivedQuery": "CrowdStrike_Additional_Events_CL\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				},
				{
					"name": "CrowdStrike_Registry_Events_CL",
					"lastDataReceivedQuery": "CrowdStrike_Registry_Events_CL\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				},
				{
					"name": "CrowdStrike_Process_Events_CL",
					"lastDataReceivedQuery": "CrowdStrike_Process_Events_CL\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				},
				{
					"name": "CrowdStrike_Network_Events_CL",
					"lastDataReceivedQuery": "CrowdStrike_Network_Events_CL\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				},
				{
					"name": "CrowdStrike_File_Events_CL",
					"lastDataReceivedQuery": "CrowdStrike_File_Events_CL\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				},
				{
					"name": "CrowdStrike_DNS_Events_CL",
					"lastDataReceivedQuery": "CrowdStrike_DNS_Events_CL\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				},
				{
					"name": "CrowdStrike_Auth_Events_CL",
					"lastDataReceivedQuery": "CrowdStrike_Auth_Events_CL\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				},
				{
					"name": "CrowdStrike_Secondary_Data_CL",
					"lastDataReceivedQuery": "CrowdStrike_Secondary_Data_CL\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				},
				{
					"name": "CrowdStrike_Audit_Events_CL",
					"lastDataReceivedQuery": "CrowdStrike_Audit_Events_CL\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
				}
			],
			"availability": {
				"status": 1,
				"isPreview": false
			},
			"connectivityCriteria": [
				{
					"type": "HasDataConnectors"
				}
			],
			"permissions": {
				"resourceProvider": [
					{
						"provider": "Microsoft.OperationalInsights/workspaces",
						"permissionsDisplayText": "Read and Write permissions are required.",
						"providerDisplayName": "Workspace",
						"scope": "Workspace",
						"requiredPermissions": {
							"read": true,
							"write": true,
							"delete": true,
							"action": false
						}
					}
				]
			},
			"instructionSteps": [
				{
					"instructions": [
						{
							"type": "Markdown",
							"parameters": {
								"content": "#### Requirements: \n In order to use the Falcon Data Replicator feature the following are required: \n 1. **Subscription:** \n 1.1.  Falcon Data Replicator. \n 1.2. Falcon Insight XDR. \n 2. **Roles:** \n 2.1. Falcon Administrator."
							}
						},
						{
							"type": "Markdown",
							"parameters": {
								"content": "#### 1. Setup your CrowdStrike & AWS environments \n To configure access on AWS, use the following two templates provided to set up the AWS environment. This will enable sending logs from an S3 bucket to your Log Analytics Workspace.\n #### For each template, create Stack in AWS: \n 1. Go to [AWS CloudFormation Stacks](https://aka.ms/awsCloudFormationLink#/stacks/create). \n 2. Choose the ‘Specify template’ option, then ‘Upload a template file’ by clicking on ‘Choose file’ and selecting the appropriate CloudFormation template file provided below. click ‘Choose file’ and select the downloaded template. \n 3. Click 'Next' and 'Create stack'."
							}
						},
						{
							"type": "Markdown",
							"parameters": {
								"content": "Make sure that your bucket will be created in the same AWS region as your Falcon CID where the FDR feed is provisioned. \n | CrowdStrike region | AWS region | \n |-----------------|-----------|\n | US-1 | us-west-1    |\n | US-2 | us-west-2 | \n | EU-1 | eu-central-1 "
							}
						},
						{
							"type": "CopyableLabel",
							"parameters": {
								"label": "Template 1: OpenID connect authentication deployment",
								"isMultiLine": true,
								"fillWith": [
									"Oidc"
								]
							}
						},
						{
							"type": "CopyableLabel",
							"parameters": {
								"label": "Template 2: AWS CrowdStrike resources deployment",
								"isMultiLine": true,
								"fillWith": [
									"CrowdStrike"
								]
							}
						},
						{
							"type": "Markdown",
							"parameters": {
								"content": "#### Using your own S3 Bucket \n In order to use your own S3 bucket you can refernace the following guide [Use your own S3 bucket](https://falcon.us-2.crowdstrike.com/documentation/page/fa572b1c/falcon-data-replicator#g4f79236) or follow this steps: \n 1. Create support case with the following Name: **Using Self S3 bucket for FDR** \n 2. Add the following information: \n 2.1. The Falcon CID where your FDR feed is provisioned \n 2.2. Indicate which types of events you wish to have provided in this new FDR feed. \n 2.3. Indicate which types of events you wish to have provided in this new FDR feed. \n 2.4. Do not use any partitions. "
							}
						},
						{
							"type": "Markdown",
							"parameters": {
								"content": " | Event type      | S3 prefix | \n |-----------------|-----------|\n | Primary Events | data/    |\n | Secondary Events | fdrv2/ "
							}
						},
						{
							"type": "Markdown",
							"parameters": {
								"content": "#### 2. Connect new collectors \n To enable AWS S3 for Microsoft Sentinel, click the Add new collector button, fill the required information in the context pane and click on Connect."
							}
						},
						{
							"type": "DataConnectorsGrid",
							"parameters": {
								"mapping": [
									{
										"columnValue": "properties.roleArn",
										"columnName": "Role ARN"
									},
									{
										"columnValue": "properties.sqsUrls[0]",
										"columnName": "Queue URL"
									},
									{
										"columnValue": "properties.dcrConfig.streamName",
										"columnName": "Stream name"
									}
								],
								"menuItems": [
									"DeleteConnector"
								]
							}
						},
						{
							"type": "ContextPane",
							"parameters": {
								"contextPaneType": "DataConnectorsContextPane",
								"title": "Add new controller",
								"subtitle": "AWS S3 connector",
								"label": "Add new collector",
								"instructionSteps": [
									{
										"title": "Account details",
										"instructions": [
											{
												"type": "Textbox",
												"parameters": {
													"label": "Role ARN",
													"type": "text",
													"name": "roleArn",
													"validations": {
														"required": true
													}
												}
											},
											{
												"type": "Textbox",
												"parameters": {
													"label": "Queue URL",
													"type": "text",
													"name": "queueUrl",
													"validations": {
														"required": true
													}
												}
											},
											{
												"type": "Dropdown",
												"parameters": {
													"label": "Data type",
													"type": "text",
													"name": "streamName",
													"required": true,
													"placeholder": "Select a data type",
													"options": [
														{
															"key": "Custom-CrowdstrikeStream",
															"text": "Primary Events"
														},
														{
															"key": "Custom-CrowdStrikeSecondary",
															"text": "Secondary Events"
														}
													]
												}
											}
										]
									}
								]
							}
						}
					]
				}
			],
			"isConnectivityCriteriasMatchSome": false
		}
	}
}