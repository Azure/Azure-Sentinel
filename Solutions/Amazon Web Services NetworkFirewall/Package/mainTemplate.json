{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft",
    "comments": "Solution template for Amazon Web Services NetworkFirewall"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "resource group name where Microsoft Sentinel is setup"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "[last(split(subscription().id, '/'))]",
      "metadata": {
        "description": "subscription id where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "_solutionName": "Amazon Web Services NetworkFirewall",
    "_solutionVersion": "3.0.0",
    "solutionId": "azuresentinel.azure-sentinel-solution-aws-networkfirewall",
    "_solutionId": "[variables('solutionId')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "dataConnectorCCPVersion": "1.0.0",
    "_dataConnectorContentIdConnectorDefinition1": "AwsNetworkFirewallCcpDefinition",
    "dataConnectorTemplateNameConnectorDefinition1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition1')))]",
    "_dataConnectorContentIdConnections1": "AwsNetworkFirewallCcpDefinitionConnections",
    "dataConnectorTemplateNameConnections1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections1')))]",
    "dataCollectionEndpointId1": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
    "blanks": "[replace('b', 'b', '')]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "displayName": "Amazon Web Services NetworkFirewall (via Codeless Connector Platform) (Preview)",
        "contentKind": "DataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "AwsNetworkFirewallCcpDefinition",
                  "title": "Amazon Web Services NetworkFirewall (via Codeless Connector Platform) (Preview)",
                  "logo": "amazon_web_services_Logo.svg",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "This data connector allows you to ingest AWS Network Firewall logs into Microsoft Sentinel for advanced threat detection and security monitoring. By leveraging Amazon S3 and Amazon SQS, the connector forwards network traffic logs, intrusion detection alerts, and firewall events to Microsoft Sentinel, enabling real-time analysis and correlation with other security data",
                  "graphQueriesTableName": "AWSNetworkFirewall_FlowLog_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total Flow events received",
                      "legend": "Amazon Web Services NetworkFirewall FlowLog",
                      "baseQuery": "{{graphQueriesTableName}}"
                    },
                    {
                      "metricName": "Total Alerts received",
                      "legend": "Amazon Web Services NetworkFirewall AlertLog",
                      "baseQuery": "AWSNetworkFirewall_AlertLog_CL"
                    },
                    {
                      "metricName": "Total Alerts received",
                      "legend": "Amazon Web Services NetworkFirewall TLSLog",
                      "baseQuery": "AWSNetworkFirewall_TlsLog_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Get Sample of Flow logs",
                      "query": "{{graphQueriesTableName}}\n | take 10"
                    },
                    {
                      "description": "Get Sample of Alert logs",
                      "query": "AWSNetworkFirewall_AlertLog_CL\n | take 10"
                    },
                    {
                      "description": "Get Sample of Tls logs",
                      "query": "AWSNetworkFirewall_TlsLog_CL\n | take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "AWSNetworkFirewall_AlertLog_CL",
                      "lastDataReceivedQuery": "AWSNetworkFirewall_AlertLog_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "AWSNetworkFirewall_TlsLog_CL",
                      "lastDataReceivedQuery": "AWSNetworkFirewall_TlsLog_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors",
                      "value": null
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true,
                          "action": false
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "instructions": [
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 1. AWS CloudFormation Deployment \n To configure access on AWS, two templates need to be executed in AWS  \n You can find the OIDC Web Identity Provider, AWS Network Firewall Configuration Templates [Here](https://github.com/v-sreddyt/AWS_Networkfirewall/tree/main/CloudFormationTemplates) \n You can find the detailed steps for deploying the templates [Here](https://github.com/v-sreddyt/AWS_Networkfirewall/blob/main/readme.md)"
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 2. Connect new collectors \n To enable AWS S3 for Microsoft Sentinel, click the Add new collector button, fill the required information in the context pane and click on Connect."
                          }
                        },
                        {
                          "type": "DataConnectorsGrid",
                          "parameters": {
                            "mapping": [
                              {
                                "columnValue": "properties.roleArn",
                                "columnName": "Role ARN"
                              },
                              {
                                "columnValue": "properties.sqsUrls[0]",
                                "columnName": "Queue URL"
                              },
                              {
                                "columnValue": "properties.dcrConfig.streamName",
                                "columnName": "Stream name"
                              }
                            ],
                            "menuItems": [
                              "DeleteConnector"
                            ]
                          }
                        },
                        {
                          "type": "ContextPane",
                          "parameters": {
                            "contextPaneType": "DataConnectorsContextPane",
                            "title": "Add new controller",
                            "subtitle": "AWS S3 connector",
                            "label": "Add new collector",
                            "instructionSteps": [
                              {
                                "title": "Account details",
                                "instructions": [
                                  {
                                    "type": "Textbox",
                                    "parameters": {
                                      "label": "Role ARN",
                                      "type": "text",
                                      "name": "roleArn",
                                      "validations": {
                                        "required": true
                                      }
                                    }
                                  },
                                  {
                                    "type": "Textbox",
                                    "parameters": {
                                      "label": "Queue URL",
                                      "type": "text",
                                      "name": "queueUrl",
                                      "validations": {
                                        "required": true
                                      }
                                    }
                                  },
                                  {
                                    "type": "Dropdown",
                                    "parameters": {
                                      "label": "Data type",
                                      "type": "text",
                                      "name": "streamName",
                                      "required": true,
                                      "placeholder": "Select a data type",
                                      "options": [
                                        {
                                          "key": "Custom-AWSNetworkFirewall-AlertLog",
                                          "text": "Alert Log"
                                        },
                                        {
                                          "key": "Custom-AWSNetworkFirewall-FlowLog",
                                          "text": "Flow Log"
                                        },
                                        {
                                          "key": "Custom-AWSNetworkFirewall-TlsLog",
                                          "text": "Tls Log"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "isConnectivityCriteriasMatchSome": false
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "version": "[variables('dataConnectorCCPVersion')]",
                      "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                      "kind": "ResourcesDataConnector"
                    }
                  ]
                }
              }
            },
            {
              "name": "AWSNetworkFirewall_DCR",
              "apiVersion": "2022-06-01",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "kind": "[variables('blanks')]",
              "properties": {
                "dataCollectionEndpointId": "[variables('dataCollectionEndpointId1')]",
                "streamDeclarations": {
                  "Custom-AWSNetworkFirewall-FlowLog": {
                    "columns": [
                      {
                        "name": "firewall_name",
                        "type": "string"
                      },
                      {
                        "name": "availability_zone",
                        "type": "string"
                      },
                      {
                        "name": "event_timestamp",
                        "type": "string"
                      },
                      {
                        "name": "event",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-AWSNetworkFirewall-AlertLog": {
                    "columns": [
                      {
                        "name": "firewall_name",
                        "type": "string"
                      },
                      {
                        "name": "availability_zone",
                        "type": "string"
                      },
                      {
                        "name": "event_timestamp",
                        "type": "string"
                      },
                      {
                        "name": "event",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-AWSNetworkFirewall-TlsLog": {
                    "columns": [
                      {
                        "name": "firewall_name",
                        "type": "string"
                      },
                      {
                        "name": "availability_zone",
                        "type": "string"
                      },
                      {
                        "name": "event_timestamp",
                        "type": "string"
                      },
                      {
                        "name": "event",
                        "type": "dynamic"
                      }
                    ]
                  }
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws1"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Custom-AWSNetworkFirewall-FlowLog"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend TimeGenerated = now()  | extend FirewallName = firewall_name, EventTimestamp = event_timestamp, AvailabilityZone = availability_zone, TCPFlags = tostring(event.tcp.tcp_flags), Syn = tobool(event.tcp.syn), Fin = tobool(event.tcp.fin), Psh = tobool(event.tcp.psh), Ack = tobool(event.tcp.ack), Ecn= tobool(event.tcp.ecn), Rst = tobool(event.tcp.rst),AppProto = tostring(event.app_proto), SrcIp = tostring(event.src_ip), SrcPort = tostring(event.src_port), NetFlowPkts = tostring(event.netflow.pkts), NetFlowBytes = tostring(event.netflow.bytes), NetFlowStart = todatetime(event.netflow.start), NetFlowEnd = todatetime(event.netflow.end), NetFlowAge = tostring(event.netflow.age), NetFlowMinttl = tostring(event.netflow.min_ttl), NetFlowMaxttl = tostring(event.netflow.max_ttl), EventType = tostring(event.event_type) | where EventType == \"netflow\" |extend FlowId = tostring(event.flow_id), DestIp = tostring(event.dest_ip), DestPort = tostring(event.dest_port), Proto = tostring(event.proto)  | project-away event, availability_zone, firewall_name",
                    "outputStream": "Custom-AWSNetworkFirewall_FlowLog_CL"
                  },
                  {
                    "streams": [
                      "Custom-AWSNetworkFirewall-AlertLog"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend TimeGenerated = now(), FirewallName = firewall_name, AvailabilityZone = availability_zone, EventTimestamp = event_timestamp, TxId = tostring(event.tx_id), AppProto = tostring(event.app_proto), SrcIp = tostring(event.src_ip), SrcPort = tostring(event.src_port), EventType = tostring(event.event_type) | where EventType == \"alert\" | extend Severity = tostring(event.alert.severity), SignatureId = tostring(event.alert.signature_id), Rev = tostring(event.alert.rev), Signature = tostring(event.alert.signature), AlertAction = tostring(event.alert.action), Category = tostring(event.alert.category), FlowId = tostring(event.flow_id), DestIp = tostring(event.dest_ip), DestPort = tostring(event.dest_port), Proto = tostring(event.proto), VerdictAction = tostring(event.verdict.action), Sni = tostring(event.tls.sni), Version = tostring(event.tls.version), PktSrc = tostring(event.pkt_src), Direction = tostring(event.direction) | project-away event",
                    "outputStream": "Custom-AWSNetworkFirewall_AlertLog_CL"
                  },
                  {
                    "streams": [
                      "Custom-AWSNetworkFirewall-TlsLog"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend TimeGenerated = now(), FirewallName = firewall_name, AvailabilityZone = availability_zone, EventTimestamp = event_timestamp, SrcIp = tostring(event.src_ip), SrcPort = tostring(event.src_port), DestIp = tostring(event.dest_ip), DestPort = tostring(event.dest_port), Sni = tostring(event.sni), LeafCertificateFingerprint = tostring(event.leaf_cert_fpr), Status = tostring(event.status), Action = tostring(event.action), ErrorMessage = tostring(event.tls_error.error_message) | project-away event",
                    "outputStream": "Custom-AWSNetworkFirewall_TlsLog_CL"
                  }
                ]
              }
            },
            {
              "name": "AWSNetworkFirewall_AlertLog_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "AWSNetworkFirewall_AlertLog_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime",
                      "description": "The timestamp when the log entry was created in AWS Network Firewall."
                    },
                    {
                      "name": "FirewallName",
                      "type": "string",
                      "description": "The name of the AWS Network Firewall instance generating the log."
                    },
                    {
                      "name": "AvailabilityZone",
                      "type": "string",
                      "description": "The AWS Availability Zone where the firewall instance is located."
                    },
                    {
                      "name": "TxId",
                      "type": "string",
                      "description": "The transaction ID associated with the specific network flow."
                    },
                    {
                      "name": "EventTimestamp",
                      "type": "string",
                      "description": "The epoch timestamp of when the event occurred."
                    },
                    {
                      "name": "AppProto",
                      "type": "string",
                      "description": "The application layer protocol detected."
                    },
                    {
                      "name": "SrcIp",
                      "type": "string",
                      "description": "The source port from which the packet originated."
                    },
                    {
                      "name": "SrcPort",
                      "type": "string",
                      "description": "The source port from which the packet originated."
                    },
                    {
                      "name": "EventType",
                      "type": "string",
                      "description": "The type of event recorded (e.g., alert, flow, drop, pass)."
                    },
                    {
                      "name": "Severity",
                      "type": "string",
                      "description": "The severity level of the event, typically based on Suricata rule classifications."
                    },
                    {
                      "name": "SignatureId",
                      "type": "string",
                      "description": "The unique identifier of the Suricata rule that matched the event."
                    },
                    {
                      "name": "Rev",
                      "type": "string",
                      "description": "The revision number of the matched Suricata rule."
                    },
                    {
                      "name": "Signature",
                      "type": "string",
                      "description": "The name or description of the Suricata rule that triggered the alert."
                    },
                    {
                      "name": "AlertAction",
                      "type": "string",
                      "description": "The action taken when an alert was triggered (e.g., allowed, dropped, rejected)."
                    },
                    {
                      "name": "Category",
                      "type": "string",
                      "description": "The category of the detected threat or network activity."
                    },
                    {
                      "name": "FlowId",
                      "type": "string",
                      "description": "A unique identifier for the network flow related to this event."
                    },
                    {
                      "name": "DestIp",
                      "type": "string",
                      "description": "The destination IP address of the packet."
                    },
                    {
                      "name": "Proto",
                      "type": "string",
                      "description": "The protocol used (e.g., TCP, UDP, ICMP)."
                    },
                    {
                      "name": "VerdictAction",
                      "type": "string",
                      "description": "The final decision made by the firewall (e.g., pass, drop, alert)."
                    },
                    {
                      "name": "Sni",
                      "type": "string",
                      "description": "The Server Name Indication (SNI) from TLS traffic."
                    },
                    {
                      "name": "Version",
                      "type": "string",
                      "description": "The version of the log schema or Suricata rule format used."
                    },
                    {
                      "name": "DestPort",
                      "type": "string",
                      "description": "The destination port to which the packet was sent."
                    },
                    {
                      "name": "PktSrc",
                      "type": "string",
                      "description": "The source of the packet (e.g., internal, external, firewall rule)."
                    },
                    {
                      "name": "Direction",
                      "type": "string",
                      "description": "The direction of the traffic (e.g., inbound, outbound)."
                    },
                    {
                      "name": "Timestamp",
                      "type": "datetime",
                      "description": "The exact timestamp when the event was captured."
                    }
                  ]
                }
              }
            },
            {
              "name": "AWSNetworkFirewall_FlowLog_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "AWSNetworkFirewall_FlowLog_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime",
                      "description": "The timestamp when the log entry was created in AWS Network Firewall."
                    },
                    {
                      "name": "FirewallName",
                      "type": "string",
                      "description": "The name of the AWS Network Firewall instance generating the log."
                    },
                    {
                      "name": "AvailabilityZone",
                      "type": "string",
                      "description": "The AWS Availability Zone where the firewall instance is located."
                    },
                    {
                      "name": "EventTimestamp",
                      "type": "string",
                      "description": "The epoch timestamp of when the event occurred."
                    },
                    {
                      "name": "TCPFlags",
                      "type": "string",
                      "description": "The TCP flags observed in the packet "
                    },
                    {
                      "name": "Syn",
                      "type": "bool",
                      "description": "Indicates whether the SYN flag is set in the TCP packet (true/false)."
                    },
                    {
                      "name": "Fin",
                      "type": "bool",
                      "description": "Indicates whether the FIN flag is set in the TCP packet, signaling the sender wants to gracefully close the connection (true/false)."
                    },
                    {
                      "name": "Psh",
                      "type": "bool",
                      "description": "Indicates whether the PSH flag is set in the TCP packet, requesting that the data be pushed to the receiving application immediately (true/false)."
                    },
                    {
                      "name": "Ack",
                      "type": "bool",
                      "description": "Indicates whether the ACK flag is set in the TCP packet, acknowledging receipt of data or connection requests (true/false)."
                    },
                    {
                      "name": "Rst",
                      "type": "bool",
                      "description": "Indicates whether the RST flag is set in the TCP packet, which resets the connection and abruptly terminates it (true/false)."
                    },
                    {
                      "name": "Ecn",
                      "type": "bool",
                      "description": "Indicates whether Explicit Congestion Notification (ECN) is set in the IP header, used to signal network congestion without dropping packets (true/false)."
                    },
                    {
                      "name": "AppProto",
                      "type": "string",
                      "description": "The application layer protocol detected (e.g., HTTP, HTTPS, DNS)."
                    },
                    {
                      "name": "SrcIp",
                      "type": "string",
                      "description": "The source IP address of the packet that triggered the event."
                    },
                    {
                      "name": "SrcPort",
                      "type": "string",
                      "description": "The source port from which the packet originated."
                    },
                    {
                      "name": "NetFlowPkts",
                      "type": "string",
                      "description": "The number of packets in the network flow."
                    },
                    {
                      "name": "NetFlowBytes",
                      "type": "string",
                      "description": "The total number of bytes transferred in the network flow."
                    },
                    {
                      "name": "NetFlowStart",
                      "type": "datetime",
                      "description": "The timestamp when the network flow started."
                    },
                    {
                      "name": "NetFlowEnd",
                      "type": "datetime",
                      "description": "The timestamp when the network flow ended."
                    },
                    {
                      "name": "NetFlowAge",
                      "type": "string",
                      "description": "The duration of the network flow in seconds."
                    },
                    {
                      "name": "NetFlowMinttl",
                      "type": "string",
                      "description": "The minimum Time-to-Live (TTL) observed in the network flow."
                    },
                    {
                      "name": "NetFlowMaxttl",
                      "type": "string",
                      "description": "The maximum Time-to-Live (TTL) observed in the network flow."
                    },
                    {
                      "name": "EventType",
                      "type": "string",
                      "description": "The type of event recorded (e.g., flow, alert, drop, pass)."
                    },
                    {
                      "name": "FlowId",
                      "type": "string",
                      "description": "A unique identifier for the network flow related to this event."
                    },
                    {
                      "name": "DestIp",
                      "type": "string",
                      "description": "The destination IP address of the packet."
                    },
                    {
                      "name": "Proto",
                      "type": "string",
                      "description": "The protocol used (e.g., TCP, UDP, ICMP)."
                    },
                    {
                      "name": "DestPort",
                      "type": "string",
                      "description": "The destination port to which the packet was sent."
                    },
                    {
                      "name": "Timestamp",
                      "type": "datetime",
                      "description": "The exact timestamp when the event was captured."
                    }
                  ]
                }
              }
            },
            {
              "name": "AWSNetworkFirewall_TlsLog_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "AWSNetworkFirewall_TlsLog_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime",
                      "description": "The timestamp when the log entry was created in AWS Network Firewall."
                    },
                    {
                      "name": "FirewallName",
                      "type": "string",
                      "description": "The name of the AWS Network Firewall instance generating the log."
                    },
                    {
                      "name": "AvailabilityZone",
                      "type": "string",
                      "description": "The AWS Availability Zone where the firewall instance is located."
                    },
                    {
                      "name": "EventTimestamp",
                      "type": "string",
                      "description": "The epoch timestamp of when the event occurred."
                    },
                    {
                      "name": "SrcIp",
                      "type": "string",
                      "description": "The source IP address of the packet that triggered the event."
                    },
                    {
                      "name": "SrcPort",
                      "type": "string",
                      "description": "The source port from which the packet originated."
                    },
                    {
                      "name": "DestIp",
                      "type": "string",
                      "description": "The destination IP address of the packet."
                    },
                    {
                      "name": "DestPort",
                      "type": "string",
                      "description": "The destination port to which the packet was sent."
                    },
                    {
                      "name": "Sni",
                      "type": "string",
                      "description": "The Server Name Indication (SNI) from TLS traffic."
                    },
                    {
                      "name": "LeafCertificateFingerprint",
                      "type": "string",
                      "description": "The SHA-256 fingerprint of the leaf certificate observed in the TLS handshake."
                    },
                    {
                      "name": "Status",
                      "type": "string",
                      "description": "The status of the TLS inspection event (e.g., success, failure)."
                    },
                    {
                      "name": "Action",
                      "type": "string",
                      "description": "The action taken by the firewall (e.g., allowed, dropped, inspected)."
                    },
                    {
                      "name": "ErrorMessage",
                      "type": "string",
                      "description": "Any error message associated with the event, if applicable."
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "AwsNetworkFirewallCcpDefinition",
          "title": "Amazon Web Services NetworkFirewall (via Codeless Connector Platform) (Preview)",
          "logo": "amazon_web_services_Logo.svg",
          "publisher": "Microsoft",
          "descriptionMarkdown": "This data connector allows you to ingest AWS Network Firewall logs into Microsoft Sentinel for advanced threat detection and security monitoring. By leveraging Amazon S3 and Amazon SQS, the connector forwards network traffic logs, intrusion detection alerts, and firewall events to Microsoft Sentinel, enabling real-time analysis and correlation with other security data",
          "graphQueriesTableName": "AWSNetworkFirewall_FlowLog_CL",
          "graphQueries": [
            {
              "metricName": "Total Flow events received",
              "legend": "Amazon Web Services NetworkFirewall FlowLog",
              "baseQuery": "{{graphQueriesTableName}}"
            },
            {
              "metricName": "Total Alerts received",
              "legend": "Amazon Web Services NetworkFirewall AlertLog",
              "baseQuery": "AWSNetworkFirewall_AlertLog_CL"
            },
            {
              "metricName": "Total Alerts received",
              "legend": "Amazon Web Services NetworkFirewall TLSLog",
              "baseQuery": "AWSNetworkFirewall_TlsLog_CL"
            }
          ],
          "sampleQueries": [
            {
              "description": "Get Sample of Flow logs",
              "query": "{{graphQueriesTableName}}\n | take 10"
            },
            {
              "description": "Get Sample of Alert logs",
              "query": "AWSNetworkFirewall_AlertLog_CL\n | take 10"
            },
            {
              "description": "Get Sample of Tls logs",
              "query": "AWSNetworkFirewall_TlsLog_CL\n | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "AWSNetworkFirewall_AlertLog_CL",
              "lastDataReceivedQuery": "AWSNetworkFirewall_AlertLog_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "AWSNetworkFirewall_TlsLog_CL",
              "lastDataReceivedQuery": "AWSNetworkFirewall_TlsLog_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors",
              "value": null
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true,
                  "action": false
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "instructions": [
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 1. AWS CloudFormation Deployment \n To configure access on AWS, two templates need to be executed in AWS  \n You can find the OIDC Web Identity Provider, AWS Network Firewall Configuration Templates [Here](https://github.com/v-sreddyt/AWS_Networkfirewall/tree/main/CloudFormationTemplates) \n You can find the detailed steps for deploying the templates [Here](https://github.com/v-sreddyt/AWS_Networkfirewall/blob/main/readme.md)"
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 2. Connect new collectors \n To enable AWS S3 for Microsoft Sentinel, click the Add new collector button, fill the required information in the context pane and click on Connect."
                  }
                },
                {
                  "type": "DataConnectorsGrid",
                  "parameters": {
                    "mapping": [
                      {
                        "columnValue": "properties.roleArn",
                        "columnName": "Role ARN"
                      },
                      {
                        "columnValue": "properties.sqsUrls[0]",
                        "columnName": "Queue URL"
                      },
                      {
                        "columnValue": "properties.dcrConfig.streamName",
                        "columnName": "Stream name"
                      }
                    ],
                    "menuItems": [
                      "DeleteConnector"
                    ]
                  }
                },
                {
                  "type": "ContextPane",
                  "parameters": {
                    "contextPaneType": "DataConnectorsContextPane",
                    "title": "Add new controller",
                    "subtitle": "AWS S3 connector",
                    "label": "Add new collector",
                    "instructionSteps": [
                      {
                        "title": "Account details",
                        "instructions": [
                          {
                            "type": "Textbox",
                            "parameters": {
                              "label": "Role ARN",
                              "type": "text",
                              "name": "roleArn",
                              "validations": {
                                "required": true
                              }
                            }
                          },
                          {
                            "type": "Textbox",
                            "parameters": {
                              "label": "Queue URL",
                              "type": "text",
                              "name": "queueUrl",
                              "validations": {
                                "required": true
                              }
                            }
                          },
                          {
                            "type": "Dropdown",
                            "parameters": {
                              "label": "Data type",
                              "type": "text",
                              "name": "streamName",
                              "required": true,
                              "placeholder": "Select a data type",
                              "options": [
                                {
                                  "key": "Custom-AWSNetworkFirewall-AlertLog",
                                  "text": "Alert Log"
                                },
                                {
                                  "key": "Custom-AWSNetworkFirewall-FlowLog",
                                  "text": "Flow Log"
                                },
                                {
                                  "key": "Custom-AWSNetworkFirewall-TlsLog",
                                  "text": "Tls Log"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "isConnectivityCriteriasMatchSome": false
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorCCPVersion')]",
        "source": {
          "sourceId": "[variables('_solutionId')]",
          "name": "[variables('_solutionName')]",
          "kind": "Solution"
        },
        "author": {
          "name": "Microsoft"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "version": "[variables('dataConnectorCCPVersion')]",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "kind": "ResourcesDataConnector"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnections1')]",
        "displayName": "Amazon Web Services NetworkFirewall (via Codeless Connector Platform) (Preview)",
        "contentKind": "ResourcesDataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {
            "guidValue": {
              "defaultValue": "[[newGuid()]",
              "type": "securestring"
            },
            "innerWorkspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "connectorDefinitionName": {
              "defaultValue": "Amazon Web Services NetworkFirewall (via Codeless Connector Platform) (Preview)",
              "type": "securestring",
              "minLength": 1
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "dcrConfig": {
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              },
              "type": "object"
            },
            "roleArn": {
              "defaultValue": "roleArn",
              "type": "string",
              "minLength": 1
            },
            "queueUrl": {
              "defaultValue": "queueUrl",
              "type": "string",
              "minLength": 1
            },
            "streamName": {
              "defaultValue": "streamName",
              "type": "array",
              "minLength": 1
            }
          },
          "variables": {
            "_dataConnectorContentIdConnections1": "[variables('_dataConnectorContentIdConnections1')]"
          },
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'AwsNetworkFirewall Alert Logs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "AmazonWebServicesS3",
              "properties": {
                "connectorDefinitionName": "AwsNetworkFirewallCcpDefinition",
                "destinationTable": "AWSNetworkFirewall_AlertLog_CL",
                "dataTypes": {
                  "logs": {
                    "state": "enabled"
                  }
                },
                "dcrConfig": {
                  "streamName": "Custom-AWSNetworkFirewall-AlertLog",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "dataFormat": {
                  "Format": "Json",
                  "IsCompressed": true,
                  "compressType": "Gzip"
                },
                "roleArn": "[[parameters('roleArn')]",
                "sqsUrls": [
                  "[[parameters('queueUrl')]"
                ]
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'AwsNetworkFirewall Flow Logs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "AmazonWebServicesS3",
              "properties": {
                "connectorDefinitionName": "AwsNetworkFirewallCcpDefinition",
                "destinationTable": "AWSNetworkFirewall_FlowLog_CL",
                "dataTypes": {
                  "logs": {
                    "state": "enabled"
                  }
                },
                "dcrConfig": {
                  "streamName": "Custom-AWSNetworkFirewall-FlowLog",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "dataFormat": {
                  "Format": "Json",
                  "IsCompressed": true,
                  "compressType": "Gzip"
                },
                "roleArn": "[[parameters('roleArn')]",
                "sqsUrls": [
                  "[[parameters('queueUrl')]"
                ]
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'AwsNetworkFirewall Tls Logs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "AmazonWebServicesS3",
              "properties": {
                "connectorDefinitionName": "AwsNetworkFirewallCcpDefinition",
                "destinationTable": "AWSNetworkFirewall_TlsLog_CL",
                "dataTypes": {
                  "logs": {
                    "state": "enabled"
                  }
                },
                "dcrConfig": {
                  "streamName": "Custom-AWSNetworkFirewall-TlsLog",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "dataFormat": {
                  "Format": "Json",
                  "IsCompressed": true,
                  "compressType": "Gzip"
                },
                "roleArn": "[[parameters('roleArn')]",
                "sqsUrls": [
                  "[[parameters('queueUrl')]"
                ]
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Amazon Web Services NetworkFirewall",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Amazon%20Web%20Services%20NetworkFirewall/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The Amazon Web Services Network Firewall for Microsoft Sentinel allows you to enable Security monitoring of AWS services by allowing ingestion of logs from the AWS S3Bucket, SQS Queue. <p><span style='color:red; font-weight:bold;'>NOTE:</span> Microsoft recommends installation of Amazon Web Services NetworkFirewall (via Codeless Connector Platform). This connector is build on the Codeless Connector Platform (CCP), which uses the Log Ingestion API, which replaces ingestion via the <a href='https://learn.microsoft.com/en-us/azure/azure-monitor/logs/custom-logs-migrate' style='color:#1890F1;'>deprecated HTTP Data Collector API</a>. CCP-based data connectors also support <a href='https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/data-collection-rule-overview' style='color:#1890F1;'>Data Collection Rules</a> (DCRs) offering transformations and enrichment.</p></p>\n<p><strong>Data Connectors:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Aws.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Amazon Web Services NetworkFirewall",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "version": "[variables('dataConnectorCCPVersion')]"
            }
          ]
        },
        "firstPublishDate": "2025-03-20",
        "providers": [
          "Amazon Web Services"
        ],
        "categories": {
          "domains": [
            "Security - Cloud Security"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
