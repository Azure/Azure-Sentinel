{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "SpectraAnalyze-EnrichFileHash",
        "description": "This playbook will enrich a Microsoft Sentinel incident with file hash information from a Spectra Analyze appliance. A comment will be added to the incident with details about the file.",
        "prerequisites": [
            "ReversingLabs Spectra Analyze URL",
            "ReversingLabs Spectra Analyze API Token"
        ],
        "lastUpdateTime": "2024-07-17T10:00:00.000Z",
        "postDeploymentSteps": ["None"], 
        "version": "1.0.0",
        "entities": [ "FileHash" ],
        "tags": [ "Enrichment" ],
        "support": {
            "name": "ReversingLabs",
            "tier": "Partner",
            "email": "support@reversinglabs.com",
            "link": "https://support.reversinglabs.com/hc/en-us"
        },
        "author": {
            "name": "Aaron Hoffmann"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "SpectraAnalyze-EnrichFileHash",
            "type": "string",
            "metadata": {
                "description": "Name of the playbook (Logic Apps resources) which will be created"
            }
        },
        "a1000BaseUrl": {
            "defaultValue": "https://a1000.reversinglabs.com",
            "type": "string"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "ReversingLabsA1000ConnectionName": "[concat('reversinglabs1000-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('ReversingLabsA1000ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('ReversingLabsA1000ConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/reversinglabsa1000')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2019-05-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('ReversingLabsA1000ConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Entities_-_Get_FileHashes": {
                            "runAfter": {
                                "Spectra_Analyze_URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/filehash"
                            }
                        },
                        "For_each_file_hash_entity": {
                            "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {
                                        "Condition_-_hash_not_found": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>@{outputs('Compose_RL_logo')}</p><p><b><strong>Ð¯EVERSINGLABS</strong></b><b><strong> - Spectra Analyze File Hash Enrichment</strong></b>@{variables('classification result')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Clear_classification_result": {
                                    "runAfter": {
                                        "Retrieve_the_static_analysis_report": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "classification result",
                                        "value": " "
                                    }
                                },
                                "Condition_-_hash_not_found": {
                                    "actions": {
                                        "Set_classification_result": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "classification result",
                                                "value": "<table><tr><td style=\"font-weight: bold;\">Hash (@{items('For_each_file_hash_entity')?['algorithm']})</td><td>@{items('For_each_file_hash_entity')?['hashValue']}</td></tr><tr><td style=\"font-weight: bold;\">Status</td><td style=\"background-color: grey; font-weight: bold; color: white\">LOCAL COPY NOT AVAILABLE</td></tr><tr><td style=\"font-weight: bold;\">Status Description</td><td>The sample does not exist on the local Spectra Analyze appliance.</td></tr><tr><td  style=\"font-weight: bold;\">Report Link</td><td>N/A</td></tr></table>"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Clear_classification_result": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Switch_on_classification": {
                                                "runAfter": {},
                                                "cases": {
                                                    "Case_goodware": {
                                                        "case": "goodware",
                                                        "actions": {
                                                            "Set_classification_result_4": {
                                                                "runAfter": {},
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "classification result",
                                                                    "value": "<table><tr><td style=\"font-weight: bold;\">Hash (@{items('For_each_file_hash_entity')?['algorithm']})</td><td>@{items('For_each_file_hash_entity')?['hashValue']}</td></tr><tr><td style=\"font-weight: bold;\">Classification</td><td style=\"background-color: green; font-weight: bold; color: white\">GOODWARE</td></tr><tr><td style=\"font-weight: bold;\">Threat Name</td><td>@{body('Parse_JSON_response')?['classification_result']}</td></tr><tr><td style=\"font-weight: bold;\">Last Seen</td><td>@{body('Parse_JSON_response')?['last_seen']}</td></tr><tr><td  style=\"font-weight: bold;\">Report Link</td><td  style=\"word-break: break-all\">@{variables('Spectra Analyze Base URL')}/@{items('For_each_file_hash_entity')?['hashValue']}</td></tr><tr><td style=\"font-weight: bold;\">Story</td><td style=\"word-break: break-all\">@{body('Retrieve_the_static_analysis_report')?['story']}</td></tr></table>"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "Case_malicious": {
                                                        "case": "malicious",
                                                        "actions": {
                                                            "Set_classification_result_2": {
                                                                "runAfter": {},
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "classification result",
                                                                    "value": "<table><tr><td style=\"font-weight: bold;\">Hash (@{items('For_each_file_hash_entity')?['algorithm']})</td><td>@{items('For_each_file_hash_entity')?['hashValue']}</td></tr><tr><td style=\"font-weight: bold;\">Classification</td><td style=\"background-color: red; font-weight: bold; color: white\">MALICIOUS</td></tr><tr><td style=\"font-weight: bold;\">Threat Name</td><td>@{body('Parse_JSON_response')?['classification_result']}</td></tr><tr><td style=\"font-weight: bold;\">Last Seen</td><td>@{body('Parse_JSON_response')?['last_seen']}</td></tr><tr><td  style=\"font-weight: bold;\">Report Link</td><td style=\"word-break: break-all\">@{variables('Spectra Analyze Base URL')}/@{items('For_each_file_hash_entity')?['hashValue']}</td></tr><tr><td style=\"font-weight: bold;\">Story</td><td style=\"word-break: break-all\">@{body('Retrieve_the_static_analysis_report')?['story']}</td></tr></table>"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "Case_suspicious": {
                                                        "case": "suspicious",
                                                        "actions": {
                                                            "Set_classification_result_3": {
                                                                "runAfter": {},
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "classification result",
                                                                    "value": "<table><tr><td style=\"font-weight: bold;\">Hash (@{items('For_each_file_hash_entity')?['algorithm']})</td><td>@{items('For_each_file_hash_entity')?['hashValue']}</td></tr><tr><td style=\"font-weight: bold;\">Classification</td><td style=\"background-color: orange; font-weight: bold; color: black\">SUSPICIOUS</td></tr><tr><td style=\"font-weight: bold;\">Threat Name</td><td>@{body('Parse_JSON_response')?['classification_result']}</td></tr><tr><td style=\"font-weight: bold;\">Last Seen</td><td>@{body('Parse_JSON_response')?['last_seen']}</td></tr><tr><td  style=\"font-weight: bold;\">Report Link</td><td style=\"word-break: break-all\">@{variables('Spectra Analyze Base URL')}/@{items('For_each_file_hash_entity')?['hashValue']}</td></tr><tr><td style=\"font-weight: bold;\">Story</td><td style=\"word-break: break-all\">@{body('Retrieve_the_static_analysis_report')?['story']}</td></tr></table>"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "default": {
                                                    "actions": {}
                                                },
                                                "expression": "@body('Parse_JSON_response')?['classification']",
                                                "type": "Switch"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@body('Parse_JSON_response')",
                                                    "Hash not found"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_JSON_response": {
                                    "runAfter": {
                                        "Retrieve_classification_for_a_sample": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Retrieve_classification_for_a_sample')",
                                        "schema": {
                                            "properties": {
                                                "classification": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "classification_origin": {},
                                                "classification_reason": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "classification_result": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "cloud_last_lookup": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "data_source": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "first_seen": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last_seen": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "md5": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "message": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "riskscore": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "sha1": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "sha256": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Retrieve_classification_for_a_sample": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "headers": {
                                            "User-Agent": "ReversingLabs Azure Connector A1000 v1.1.0"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['reversinglabsa1000']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/api/samples/v3/@{encodeURIComponent(items('For_each_file_hash_entity')?['hashValue'])}/classification/"
                                    }
                                },
                                "Retrieve_the_static_analysis_report": {
                                    "runAfter": {
                                        "Parse_JSON_response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "headers": {
                                            "User-Agent": "ReversingLabs Azure Connector A1000 v1.1.0"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['reversinglabsa1000']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/api/v2/samples/@{encodeURIComponent(items('For_each_file_hash_entity')?['hashValue'])}/ticore/"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_classification_result": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_classification_reason": {
                            "runAfter": {
                                "Initialize_results_body": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "classification_reason",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_classification_result": {
                            "runAfter": {
                                "Initialize_variable_filenames": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "classification result",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_results_body": {
                            "runAfter": {
                                "Initialize_results_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "results_body",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_results_table": {
                            "runAfter": {
                                "Entities_-_Get_FileHashes": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "results_comment",
                                        "type": "string",
                                        "value": "<table>\n  <tr>"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_filenames": {
                            "runAfter": {
                                "Initialize_classification_reason": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "filenames",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Spectra_Analyze_URL": {
                            "runAfter": {
                                "Compose_RL_logo": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Spectra Analyze Base URL",
                                        "type": "string",
                                        "value": "[parameters('a1000BaseUrl')]"
                                    }
                                ]
                            }
                        },
                        "Compose_RL_logo": {
                            "inputs": "<img src=\"https://www.reversinglabs.com/hubfs/RL%20Logo/rl-logo-long.svg\"></img>",
                            "runAfter": {},
                            "type": "Compose"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "azuresentinel",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "reversinglabsa1000": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ReversingLabsA1000ConnectionName'))]",
                                "connectionName": "reversinglabsa1000",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/reversinglabsa1000')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}