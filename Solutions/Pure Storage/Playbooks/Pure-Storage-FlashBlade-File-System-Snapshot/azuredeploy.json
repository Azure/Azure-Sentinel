{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "title": "Pure Storage FlashBlade File System Snapshot",
    "description": "This playbook gets triggered when a Microsoft Sentinel Incident created for suspicious activity and it takes files system snapshot of specific file systems listed in key vault",
    "prerequisites": [
      "1. Azure Key vault is required for storing the Pure Storage FlashBlade API token , create key vault if not exists",
      "2. Store API token as a secret in vault, with your storage array IP in dash notation as key name. Eg: 8-8-8-8",
      "3. Store file systems list as a secret in vault, with key name as follows. Eg: 8-8-8-8-filesystem",
      "4. Store name of the file system to be snapshotted as comma separated values for the key created in previous step"
    ],
    "postDeployment": [
      "**a. Authorize playbook**",
      "Once deployment is complete, we need to add the playbook in the access policy of the Keyvault [learn how](https://docs.microsoft.com/azure/key-vault/general/assign-access-policy-portal)"
    ],
    "prerequisitesDeployTemplateFile": "",
    "lastUpdateTime": "2024-10-09T00:00:00.000Z",
    "entities": [
      "IP",
      "Host",
      "Account"
    ],
    "tags": [
      "Remediation"
    ],
    "support": {
      "tier": "community",
      "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
    },
    "author": {
      "name": "Pure Storage - security-solutions-support@purestorage.com"
    }
  },
  "parameters": {
    "PlaybookName": {
      "defaultValue": "Pure-Storage-File-System-Snapshot-WF",
      "type": "string"
    }
  },
  "variables": {
    "AzuresentinelConnectionName": "[concat('Azuresentinel-', parameters('PlaybookName'))]",
    "KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "properties": {
        "provisioningState": "Succeeded",
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Entities_-_Get_Accounts": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "path": "/entities/account"
              }
            },
            "Entities_-_Get_IPs": {
              "runAfter": {
                "Entities_-_Get_Accounts": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "path": "/entities/ip"
              }
            },
            "IP_Loop": {
              "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
              "actions": {
                "Get_secret": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/secrets/@{encodeURIComponent(replace(items('IP_Loop')?['Address'], '.', '-'))}/value"
                  }
                },
                "Fetching_API_version": {
                  "runAfter": {
                    "Get_secret": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "uri": "https://@{item()?['Address']}/api/api_version",
                    "method": "GET"
                  },
                  "runtimeConfiguration": {
                    "contentTransfer": {
                      "transferMode": "Chunked"
                    }
                  }
                },
                "Retrieving_auth_token": {
                  "runAfter": {
                    "Fetching_API_version": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "uri": "https://@{item()?['Address']}/api/login",
                    "method": "POST",
                    "headers": {
                      "api-token": "@{body('Get_secret')?['value']}"
                    }
                  },
                  "runtimeConfiguration": {
                    "contentTransfer": {
                      "transferMode": "Chunked"
                    }
                  }
                },
                "Get_FileSystem_list": {
                  "runAfter": {
                    "Retrieving_auth_token": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/secrets/@{encodeURIComponent(concat(replace(items('IP_Loop')?['Address'], '.', '-'),'-filesystem'))}/value"
                  }
                },
                "FileSystem_snapshot": {
                  "runAfter": {
                    "Get_FileSystem_list": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "uri": "https://@{item()?['Address']}/api/@{last(body('Fetching_API_version')?['versions'])}/file-system-snapshots",
                    "method": "POST",
                    "headers": {
                      "X-Auth-Token": "@{outputs('Retrieving_auth_token')?['headers']['x-auth-token']}"
                    },
                    "queries": {
                      "source_names": "@{body('Get_FileSystem_list')?['value']}"
                    }
                  },
                  "runtimeConfiguration": {
                    "contentTransfer": {
                      "transferMode": "Chunked"
                    }
                  }
                },
                "Logout_of_the_FlashBlade": {
                  "runAfter": {
                    "FileSystem_snapshot": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "uri": "https://@{item()?['Address']}/api/logout",
                    "method": "POST",
                    "headers": {
                      "X-Auth-Token": "@{outputs('Retrieving_auth_token')?['headers']['x-auth-token']}"
                    }
                  },
                  "runtimeConfiguration": {
                    "contentTransfer": {
                      "transferMode": "Chunked"
                    }
                  }
                }
              },
              "runAfter": {
                "Entities_-_Get_IPs": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzuresentinelConnectionName'))]",
                "connectionName": "[variables('AzuresentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
              },
              "keyvault": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                "connectionName": "[variables('KeyvaultConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        },
        "accessControl": {
          "triggers": {
            "allowedCallerIpAddresses": [
              {
                "addressRange": "10.21.241.30-10.21.241.37"
              }
            ]
          },
          "contents": {
            "allowedCallerIpAddresses": [
              {
                "addressRange": "10.21.241.30-10.21.241.37"
              }
            ]
          },
          "actions": {
            "allowedCallerIpAddresses": [
              {
                "addressRange": "10.21.241.30-10.21.241.37"
              }
            ]
          }
        }
      },
      "name": "[parameters('PlaybookName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "tags": {
        "hidden-SentinelTemplateName": "Pure-Storage-File-System-Snapshot",
        "hidden-SentinelTemplateVersion": "1.0"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "apiVersion": "2019-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('AzuresentinelConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('AzuresentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('AzuresentinelConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('KeyvaultConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('KeyvaultConnectionName')]",
        "customParameterValues": {},
        "parameterValueType": "Alternative",
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
        }
      }
    }
  ]
}