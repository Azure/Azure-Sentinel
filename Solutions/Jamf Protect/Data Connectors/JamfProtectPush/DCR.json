{
  "name": "JamfProtectCustomDCR",
  "apiVersion": "2021-09-01-preview",
  "type": "Microsoft.Insights/dataCollectionRules",
  "location": "[parameters('workspace-location')]",
  "properties": {
      "streamDeclarations": {
          "Custom-jamfprotecttelemetryv2": {
              "columns": [
                  {
                      "name": "action",
                      "type": "dynamic"
                  },
                  {
                      "name": "action_type",
                      "type": "int"
                  },
                  {
                      "name": "deadline",
                      "type": "int"
                  },
                  {
                      "name": "event",
                      "type": "dynamic"
                  },
                  {
                      "name": "event_type",
                      "type": "int"
                  },
                  {
                      "name": "glob_seq_num",
                      "type": "int"
                  },
                  {
                      "name": "host",
                      "type": "dynamic"
                  },
                  {
                      "name": "mach_time",
                      "type": "long"
                  },
                  {
                      "name": "metadata",
                      "type": "dynamic"
                  },
                  {
                      "name": "process",
                      "type": "dynamic"
                  },
                  {
                      "name": "seq_num",
                      "type": "int"
                  },
                  {
                      "name": "thread",
                      "type": "dynamic"
                  },
                  {
                      "name": "time",
                      "type": "datetime"
                  },
                  {
                      "name": "uuid",
                      "type": "string"
                  },
                  {
                      "name": "version",
                      "type": "int"
                  }
              ]
          },
          "Custom-jamfprotectunifiedlogs": {
              "columns": [
                  {
                      "name": "TimeGenerated",
                      "type": "datetime"
                  },
                  {
                      "name": "caid",
                      "type": "string"
                  },
                  {
                      "name": "certid",
                      "type": "string"
                  },
                  {
                      "name": "input",
                      "type": "dynamic"
                  }
              ]
          },
          "Custom-jamfprotecttelemetryv1": {
              "columns": [
                  {
                      "name": "TimeGenerated",
                      "type": "datetime"
                  },
                  {
                      "name": "arguments",
                      "type": "dynamic"
                  },
                  {
                      "name": "exec_chain",
                      "type": "dynamic"
                  },
                  {
                      "name": "header",
                      "type": "dynamic"
                  },
                  {
                      "name": "host_info",
                      "type": "dynamic"
                  },
                  {
                      "name": "key",
                      "type": "string"
                  },
                  {
                      "name": "return",
                      "type": "dynamic"
                  },
                  {
                      "name": "subject",
                      "type": "dynamic"
                  },
                  {
                      "name": "identity",
                      "type": "dynamic"
                  },
                  {
                      "name": "texts",
                      "type": "string"
                  },
                  {
                      "name": "metrics",
                      "type": "dynamic"
                  },
                  {
                      "name": "page_info",
                      "type": "dynamic"
                  },
                  {
                      "name": "attributes",
                      "type": "dynamic"
                  },
                  {
                      "name": "exec_chain_child",
                      "type": "dynamic"
                  },
                  {
                      "name": "path",
                      "type": "dynamic"
                  },
                  {
                      "name": "_event_score",
                      "type": "int"
                  },
                  {
                      "name": "contents",
                      "type": "string"
                  },
                  {
                      "name": "file",
                      "type": "dynamic"
                  },
                  {
                      "name": "socket_inet",
                      "type": "dynamic"
                  },
                  {
                      "name": "exit",
                      "type": "dynamic"
                  },
                  {
                      "name": "exec_args",
                      "type": "dynamic"
                  },
                  {
                      "name": "exec_env",
                      "type": "dynamic"
                  },
                  {
                      "name": "exec_chain_parent",
                      "type": "dynamic"
                  },
                  {
                      "name": "architecture",
                      "type": "string"
                  },
                  {
                      "name": "bios_firmware_versions",
                      "type": "dynamic"
                  },
                  {
                      "name": "process",
                      "type": "dynamic"
                  },
                  {
                      "name": "rateLimitingSeconds",
                      "type": "int"
                  }
              ]
          },
          "Custom-jamfprotectalerts": {
              "columns": [
                  {
                      "name": "TimeGenerated",
                      "type": "datetime"
                  },
                  {
                      "name": "caid",
                      "type": "string"
                  },
                  {
                      "name": "certid",
                      "type": "string"
                  },
                  {
                      "name": "input",
                      "type": "dynamic"
                  }
              ]
          }
      },
      "destinations": {
          "logAnalytics": [
              {
                  "workspaceResourceId": "[variables('workspaceResourceId')]",
                  "name": "clv2ws1"
              }
          ]
      },
      "dataFlows": [
          {
              "streams": [
                  "Custom-jamfprotecttelemetryv2"
              ],
              "destinations": [
                  "clv2ws1"
              ],
              "transformKql": "source\n//ASIM - Generic Fields\n| extend\n    EventVendor = metadata.vendor,\n    EventProduct = metadata.product,\n    EventSchemaVersion = metadata.schemaVersion,\n    EventProductVersion = host.protectVersion,\n    EventSeverity = \"Informational\",\n    //\n    // Jamf Protect - Device Hostnames\n    TargetHostname = host.hostname,\n    DvcHostname = host.hostname,\n    DvcSerial = host.serial,\n    DvcIpAddr = host.ips,\n    DvcId = host.provisioningUDID,\n    DvcOs = \"macOS\",\n    DvcOsVersion = host.os,\n    SrcDeviceType = \"Computer\"\n| project-rename\n    TimeGenerated = ['time'],\n    EventOriginalUid = uuid,\n    EventOriginalType = event_type,\n    EventCount = glob_seq_num\n| project-away\n    metadata,\n    host,\n    seq_num,\n    version,\n    deadline,\n    mach_time,\n    action_type\n\n",
              "outputStream": "Custom-jamfprotecttelemetryv2_CL"
          },
          {
              "streams": [
                  "Custom-jamfprotectunifiedlogs"
              ],
              "destinations": [
                  "clv2ws1"
              ],
              "transformKql": "source\n//ASIM - Generic Fields\n| extend\n    EventVendor = \"Jamf\",\n    EventProduct = \"Unified Log Stream\",\n    // EventSchemaVersion = metadata.schemaVersion,\n    EventProductVersion = input.host.protectVersion,\n    EventSeverity = case(input.match.severity == 0, \"Informational\", input.match.severity == 1, \"Low\", input.match.severity == 2, \"Medium\", input.match.severity == 3, \"High\", \"Informational\"),\n    EventOriginalType = input.eventType,\n    EventOriginalUid = input.match.uuid,\n    EventType = \"UnifiedLog\",\n    EventResult = case(input.match.actions has \"Prevented\", \"Prevented\", \"Allowed\"),\n    EventMessage = input.match.event.name,\n    EventResultMessage = input.match.event.composedMessage,\n    // EventReportUrl = strcat(\"https://\", context_identity_claims_hd_s, \".jamfcloud.com/Alerts/\", input.match.uuid),\n    //     //\n    //     // Jamf Protect - Device Hostnames\n    TargetHostname = input.host.hostname,\n    DvcHostname = input.host.hostname,\n    DvcSerial = input.host.serial,\n    DvcIpAddr = input.host.ips,\n    DvcId = input.host.provisioningUDID,\n    DvcOs = \"macOS\",\n    DvcOsVersion = input.host.os,\n    SrcDeviceType = \"Computer\",\n    // Jamf Protect - Event Details\n    //\n    // Jamf Protect Alerts - Process\n    //\n    ProcessEventType = \"Create\",\n    ProcessEventSubType = \"Exec\",\n    TargetProcessName = tostring(input.match.event.process),\n    TargetProcessId = toreal(input.match.event.processIdentifier),\n    TargetProcessGuid = tostring(input.match.event.uuid),\n    TargetProcessCommandLine = input.match.event.process.args,\n    TargetProcessCurrentDirectory = input.match.event.processImagePath\n| project-away\n    caid,\n    certid\n\n",
              "outputStream": "Custom-jamfprotectunifiedlogs_CL"
          },
          {
              "streams": [
                  "Custom-jamfprotecttelemetryv1"
              ],
              "destinations": [
                  "clv2ws1"
              ],
              "transformKql": "source\n// ASIM - Common Fields\n| extend EventVendor = 'Jamf'\n| extend EventProduct = 'Device Telemetry Stream'\n// Data Field Normalization\n| extend\n    EventSeverity = \"Informational\",\n    //\n    // Jamf Protect Telemetry - Endpoint Information\n    //\n    TargetModel = metrics.hw_model,\n    DvcOsVersion = host_info.osversion,\n    TargetHostname = host_info.host_name,\n    DvcHostname = host_info.host_name,\n    DvcId = host_info.host_uuid,\n    // Jamf Protect - Event Types\n    EventType = case(\n                header.event_name == \"AUE_add_to_group\",\n                \"UserAddedToGroup\",\n                header.event_name == \"AUE_AUDITCTL\",\n                \"AuditEvent\",\n                header.event_name == \"AUE_AUDITON_SPOLICY\",\n                \"AuditEvent\",\n                header.event_name == \"AUE_auth_user\",\n                \"Elevate\",\n                header.event_name == \"AUE_BIND\",\n                \"EndpointNetworkSession\",\n                header.event_name == \"AUE_BIOS_FIRMWARE_VERSIONS\",\n                \"SystemInformation\",\n                header.event_name == \"AUE_CHDIR\",\n                \"FolderMoved\",\n                header.event_name == \"AUE_CHROOT\",\n                \"FolderModified\",\n                header.event_name == \"AUE_CONNECT\",\n                \"EndpointNetworkSession\",\n                header.event_name == \"AUE_create_group\",\n                \"GroupCreated\",\n                header.event_name == \"AUE_create_user\",\n                \"UserCreated\",\n                header.event_name == \"AUE_delete_group\",\n                \"GroupDeleted\",\n                header.event_name == \"AUE_delete_user\",\n                \"UserDeleted\",\n                header.event_name == \"AUE_EXECVE\",\n                \"ProcessCreated\",\n                header.event_name == \"AUE_EXIT\",\n                \"ProcessTerminated\",\n                header.event_name == \"AUE_FORK\",\n                \"ProcessCreated\",\n                header.event_name == \"AUE_GETAUID\",\n                \"\",\n                header.event_name == \"AUE_KILL\",\n                \"ProcessTerminated\",\n                header.event_name == \"AUE_LISTEN\",\n                \"EndpointNetworkSession\",\n                header.event_name == \"AUE_logout\",\n                \"Logoff\",\n                header.event_name == \"AUE_lw_login\",\n                \"Logon\",\n                header.event_name == \"AUE_MAC_SET_PROC\",\n                \"AuditEvent\",\n                header.event_name == \"AUE_modify_group\",\n                \"GroupModified\",\n                header.event_name == \"AUE_modify_password\",\n                \"PasswordChanged\",\n                header.event_name == \"AUE_modify_user\",\n                \"UserModified\",\n                header.event_name == \"AUE_MOUNT\",\n                \"VolumeMount\",\n                header.event_name == \"AUE_openssh\",\n                \"SshInitiated\",\n                header.event_name == \"AUE_PIDFORTASK\",\n                \"ProcessCreated\",\n                header.event_name == \"AUE_POSIX_SPAWN\",\n                \"ProcessCreated\",\n                header.event_name == \"AUE_remove_from_group\",\n                \"UserRemovedFromGroup\",\n                header.event_name == \"AUE_SESSION_CLOSE\",\n                \"Logoff\",\n                header.event_name == \"AUE_SESSION_END\",\n                \"Logoff\",\n                header.event_name == \"AUE_SESSION_START\",\n                \"Logon\",\n                header.event_name == \"AUE_SESSION_UPDATE\",\n                \"\",\n                header.event_name == \"AUE_SETPRIORITY\",\n                \"\",\n                header.event_name == \"AUE_SETSOCKOPT\",\n                \"\",\n                header.event_name == \"AUE_SETTIMEOFDAY\",\n                \"SystemChange\",\n                header.event_name == \"AUE_shutdown\",\n                \"ShutdownInitiated\",\n                header.event_name == \"AUE_SOCKETPAIR\",\n                \"\",\n                header.event_name == \"AUE_ssauthint\",\n                \"Elevate\",\n                header.event_name == \"AUE_ssauthmech\",\n                \"Elevate\",\n                header.event_name == \"AUE_ssauthorize\",\n                \"Elevate\",\n                header.event_name == \"AUE_TASKFORPID\",\n                \"\",\n                header.event_name == \"AUE_TASKNAMEFORPID\",\n                \"\",\n                header.event_name == \"AUE_UNMOUNT\",\n                \"VolumeUnmount\",\n                header.event_name == \"AUE_WAIT4\",\n                \"ProcessTerminated\",\n                header.event_name == \"PLAINTEXT_LOG_COLLECTION_EVENT\",\n                \"LogFileCollected\",\n                header.event_name == \"SYSTEM_PERFORMANCE_METRICS\",\n                \"SystemPerformanceMetrics\",\n                \"Unknown\"\n            ),\n    //\n    // Jamf Protect Telemetry - Process\n    //\n    ActingProcessId = toreal(subject.responsible_process_id),\n    ActingProcessName = tostring(subject.responsible_process_name),\n    ParentProcessName = tostring(subject.parent_path),\n    ParentProcessId = toreal(subject.parent_pid),\n    ParentProcessGuid = tostring(subject.parent_uuid),\n    TargetProcessName = tostring(subject.process_name),\n    TargetProcessId = toreal(subject.process_id),\n    TargetProcessGuid = tostring(exec_chain.uuid),\n    TargetProcessSHA256 = tostring(subject.process_hash),\n    TargetUserId = toreal(subject.user_id),\n    TargetUsername = tostring(subject.user_name),\n    TargetProcessCommandLine = exec_args.args_compiled,\n    ActorUsername = tostring(subject.effective_user_name),\n    ActorUserId = toreal(subject.audit_user_name),\n    //\n    // Jamf Protect Telemetry - Audit/Group\n    //\n    GroupName = tostring(subject.group_name),\n    GroupID = toreal(subject.group_id),\n    EffectiveGroupName = tostring(subject.effective_group_name),\n    EffectiveGroupID = toreal(subject.effective_group_id),\n    //\n    // Jamf Protect Telemetry - Network\n    //\n    DstIpAddr = socket_inet.ip_address,\n    DstPortNumber = socket_inet.port,\n    NetworkProtocolVersion = case(socket_inet.id == 128, \"IPV4\", socket_inet.id == 129, \"IPV6\", \"\"),\n    SrcIpAddr = subject.terminal.id.ip.address,\n    //\n    // Jamf Protect Telemetry - Binaries\n    //\n    TargetBinarySHA256 = tostring(identity.cd_hash),\n    TargetbinarySignerType = case(identity.signer_type == 0, \"Developer\", identity.signer_type == 1, \"Apple\", \"\"),\n    TargetBinarySigningTeamID = tostring(identity.team_id),\n    TargetBinarySigningAppID = tostring(identity.signer_id),\n    //\n    // Jamf Protect Telemetry - Log File Collection\n    //\n    TargetFilePath = path\n| project-away _event_score\n\n",
              "outputStream": "Custom-jamfprotecttelemetryv1_CL"
          },
          {
              "streams": [
                  "Custom-jamfprotectalerts"
              ],
              "destinations": [
                  "clv2ws1"
              ],
              "transformKql": "source\n//ASIM - Generic Fields\n| extend\n    EventVendor = \"Jamf\",\n    EventProduct = \"Alerts Stream\",\n    //     EventSchemaVersion = metadata.schemaVersion,\n    EventProductVersion = input.host.protectVersion,\n    EventSeverity = case(input.match.severity == 0, \"Informational\", input.match.severity == 1, \"Low\", input.match.severity == 2, \"Medium\", input.match.severity == 3, \"High\", \"Informational\"),\n    EventOriginalType = input.eventType,\n    EventOriginalUid = input.match.uuid,\n    EventType = case(\n                input.eventType == \"GPClickEvent\",\n                \"Click\",\n                input.eventType == \"GPDownloadEvent\",\n                \"Download\",\n                input.eventType == \"GPFSEvent\",\n                \"FileSystem\",\n                input.eventType == \"GPProcessEvent\",\n                \"Process\",\n                input.eventType == \"GPKeylogRegisterEvent\",\n                \"Keylog\",\n                input.eventType == \"GPGatekeeperEvent\",\n                \"Gatekeeper\",\n                input.eventType == \"GPMRTEvent\",\n                \"MRT\",\n                input.eventType == \"GPPreventedExecutionEvent\",\n                \"ProcessDenied\",\n                input.eventType == \"GPThreatMatchExecEvent\",\n                \"ProcessPrevented\",\n                input.eventType == \"GPUnifiedLogEvent\",\n                \"UnifiedLog\",\n                input.eventType == \"GPUSBEvent\",\n                \"USB\",\n                input.eventType == \"auth-mount\",\n                \"UsbBlock\",\n                \"Unknown\"\n            ),\n    EventResult = case(input.match.actions has \"Prevented\", \"Prevented\", \"Allowed\"),\n    EventMessage = input.match.facts[0].name,\n    EventResultMessage = input.match.facts[0].human,\n    //\n    // Jamf Protect - Device Hostnames\n    //\n    TargetHostname = input.host.hostname,\n    DvcHostname = input.host.hostname,\n    DvcSerial = input.host.serial,\n    DvcIpAddr = input.host.ips,\n    DvcId = input.host.provisioningUDID,\n    DvcOs = \"macOS\",\n    DvcOsVersion = input.host.os,\n    SrcDeviceType = \"Computer\",\n    //\n    // Jamf Protect Alerts - Process\n    //\n    ProcessEventType = case(input.match.event.type == 0, \"None\", input.match.event.type == 1, \"Create\", input.match.event.type == 2, \"Exit\", \"\"),\n    ProcessEventSubType = case(input.match.event.subType == 7, \"Exec\", input.match.event.subType == 1, \"Fork\", input.match.event.subType == 23, \"Execve\", input.match.event.subType == 43190, \"Posix Spawn\", \"\"),\n    ActingProcessName = tostring(input.related.processes[array_length(input.related.processes) - 1].path),\n    ActingProcessId = toreal(input.related.processes[0].responsiblePID),\n    ActingProcessGuid = tostring(input.related.processes[array_length(input.related.processes) - 1].uuid),\n    ParentProcessName = todynamic(iff(array_length(input.related.processes) > 1, tostring(input.related.processes[1].path), \"\")),\n    ParentProcessId = iff(array_length(input.related.processes) > 1, toreal(input.related.processes[1].pid), double(null)),\n    ParentProcessGuid = tostring(iff(array_length(input.related.processes) > 1, tostring(input.related.processes[1].uuid), \"\")),\n    TargetProcessName = todynamic(input.related.processes[0].name),\n    TargetProcessId = input.related.processes[0].pid,\n    TargetProcessGuid = input.related.processes[0].uuid,\n    TargetProcessSHA1 = tostring(input.related.binaries[0].sha1hex),\n    TargetProcessSHA256 = tostring(input.related.binaries[0].sha256hex),\n    TargetProcessCommandLine = input.related.processes[0].args,\n    TargetProcessCurrentDirectory = tostring(input.related.processes[0].path),\n    TargetProcessStatusCode = toreal(input.related.processes[0].exitCode),\n    //\n    // Jamf Protect Alerts - Files\n    //\n    TargetFilePath = input.related.files[0].path,\n    TargetFileSHA1 = input.related.files[0].sha1hex,\n    TargetFileSHA256 = input.related.files[0].sha256hex,\n    TargetFileSize = input.related.files[0].size,\n    TargetFileSigningInfoMessage = input.related.files[0].signingInfo.statusMessage,\n    TargetFileSignerType = case(input.related.files[0].signingInfo.signerType == 0, \"Apple\", input.related.files[0].signingInfo.signerType == 1, \"App Store\", input.related.files[0].signingInfo.signerType == 2, \"Developer\", input.related.files[0].signingInfo.signerType == 3, \"Ad Hoc\", input.related.files[0].signingInfo.signerType == 4, \"Unsigned\", \"\"),\n    TargetFileSigningTeamID = input.related.files[0].signingInfo.teamid,\n    TargetFileIsDownload = tobool(input.related.files[0].isDownload),\n    TargetFileIsAppBundle = tobool(input.related.files[0].isAppBundle),\n    TargetFileIsDirectory = tobool(input.related.files[0].isDirectory),\n    TargetFileIsScreenshot = tobool(input.related.files[0].isScreenShot),\n    TargetFileExtendedAttributes = input.related.files[0].xattrs,\n    // Jamf Protect Alerts - Binaries\n    TargetBinaryFilePath = input.related.binaries[0].path,\n    TargetBinarySHA1 = input.related.binaries[0].sha1hex,\n    TargetBinarySHA256 = input.related.binaries[0].sha256hex,\n    TargetBinarySigningInfoMessage = input.related.binaries[0].signingInfo.statusMessage,\n    TargetbinarySignerType = case(input.related.binaries[0].signingInfo.signerType == 0, \"Apple\", input.related.binaries[0].signingInfo.signerType == 1, \"App Store\", input.related.binaries[0].signingInfo.signerType == 2, \"Developer\", input.related.binaries[0].signingInfo.signerType == 3, \"Ad Hoc\", input.related.binaries[0].signingInfo.signerType == 4, \"Unsigned\", \"\"),\n    TargetBinarySigningTeamID = input.related.binaries[0].signingInfo.teamid,\n    TargetBinarySigningAppID = input.related.binaries[0].signingInfo.appid\n| project-away\n    caid,\n    certid\n",
              "outputStream": "Custom-jamfprotectalerts_CL"
          }
      ],
      "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]"
  }
}