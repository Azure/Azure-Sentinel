[{
	"name": "CiscoMerakiMultiRules",
	"apiVersion": "2021-09-01-preview",
	"type": "Microsoft.Insights/dataCollectionRules",
	"location": "{{location}}",
	"properties": {
		"dataCollectionEndpointId": "{{dataCollectionEndpointId}}",
		"streamDeclarations": {
			"Custom-CiscoMeraki_API": {
				"columns": [
					{
						"name": "ts",
						"type": "datetime",
						"description": "The time at which the data was generated"
					},
					{
						"name": "adminId",
						"type": "string",
						"description": "Admin Id of the user"
					},
					{
						"name": "host",
						"type": "string",
						"description": "Host name of the URL"
					},
					{
						"name": "method",
						"type": "string",
						"description": "Method name of the URL"
					},
					{
						"name": "path",
						"type": "string",
						"description": "Path of the URL"
					},
					{
						"name": "queryString",
						"type": "string",
						"description": "Query parameters"
					},
					{
						"name": "userAgent",
						"type": "string",
						"description": "User Agent of URL"
					},
					{
						"name": "responseCode",
						"type": "int",
						"description": "Request code"
					},
					{
						"name": "sourceIp",
						"type": "string",
						"description": "Source IP used"
					},
					{
						"name": "version",
						"type": "int",
						"description": "Product version"
					},
					{
						"name": "operationId",
						"type": "string",
						"description": "Operation Id"
					}
				]
			},
			"Custom-CiscoMeraki_Configuration": {
				"columns": [
					{
						"name": "ts",
						"type": "datetime",
						"description": "Time of configuration change"
					},
					{
						"name": "adminName",
						"type": "string",
						"description": "Name of the admin"
					},
					{
						"name": "adminEmail",
						"type": "string",
						"description": "Email of the admin"
					},
					{
						"name": "adminId",
						"type": "string",
						"description": "Id of the admin"
					},
					{
						"name": "networkName",
						"type": "string",
						"description": "Name of the network"
					},
					{
						"name": "networkId",
						"type": "string",
						"description": "Id of the network"
					},
					{
						"name": "ssidName",
						"type": "string",
						"description": "Name of the SSID"
					},
					{
						"name": "ssidNumber",
						"type": "string",
						"description": "Number of the SSID"
					},
					{
						"name": "page",
						"type": "string",
						"description": "Page from which configuration was changed"
					},
					{
						"name": "label",
						"type": "string",
						"description": "Label of the entity changed"
					},
					{
						"name": "oldValue",
						"type": "string",
						"description": "Old value of the configuration"
					},
					{
						"name": "newValue",
						"type": "string",
						"description": "New value of the configuration"
					}
				]
			},
			"Custom-CiscoMeraki_IDS": {
				"columns": [
					{
						"name": "ts",
						"type": "datetime",
						"description": "The time at which the data was generated"
					},
					{
						"name": "eventType",
						"type": "string",
						"description": "Event Type of the security event."
					},
					{
						"name": "deviceMac",
						"type": "string",
						"description": "MAC address of Device"
					},
					{
						"name": "clientMac",
						"type": "string",
						"description": "MAC address of Client"
					},
					{
						"name": "srcIp",
						"type": "string",
						"description": "Source IP Address"
					},
					{
						"name": "destIp",
						"type": "string",
						"description": "Destination IP Address"
					},
					{
						"name": "protocol",
						"type": "string",
						"description": "Protocol used"
					},
					{
						"name": "priority",
						"type": "string",
						"description": "Priority of the Security Event"
					},
					{
						"name": "classification",
						"type": "string",
						"description": "Classification of the Security Event"
					},
					{
						"name": "blocked",
						"type": "boolean",
						"description": "If the action was blocked or not"
					},
					{
						"name": "message",
						"type": "string",
						"description": "Security Event message"
					},
					{
						"name": "signature",
						"type": "string",
						"description": "Signature used in the action"
					},
					{
						"name": "sigSource",
						"type": "string",
						"description": "Source of the signature"
					},
					{
						"name": "ruleId",
						"type": "string",
						"description": "RuleId in use"
					},
					{
						"name": "clientName",
						"type": "string",
						"description": "Client Machine name"
					},
					{
						"name": "clientIp",
						"type": "string",
						"description": "Client IP Address"
					},
					{
						"name": "uri",
						"type": "string",
						"description": "URI of the compromised entity"
					},
					{
						"name": "canonicalName",
						"type": "string",
						"description": "Canonical Name of the Client Machine"
					},
					{
						"name": "destinationPort",
						"type": "int",
						"description": "Destination Port"
					},
					{
						"name": "fileHash",
						"type": "string",
						"description": "File Hash of the Scanned File"
					},
					{
						"name": "fileType",
						"type": "string",
						"description": "File Type of the Scanned File"
					},
					{
						"name": "fileSizeBytes",
						"type": "int",
						"description": "File Size of the Scanned File"
					},
					{
						"name": "disposition",
						"type": "string",
						"description": "Disposition of the Scanned File"
					},
					{
						"name": "action",
						"type": "string",
						"description": "Action performed"
					}
				]
			}
		},
		"destinations": {
			"logAnalytics": [
				{
					"workspaceResourceId": "{{workspaceResourceId}}",
					"name": "clv2ws1"
				}
			]
		},
		"dataFlows": [
			{
				"streams": [
					"Custom-CiscoMeraki_API"
				],
				"destinations": [
					"clv2ws1"
				],
				"transformKql": "source\r\n| extend \r\n            TimeGenerated = ts,\r\n            EventStartTime = ts,\r\n            EventEndTime = ts,\r\n            EventCount = toint(1),\r\n            EventResult = case(responseCode >= 200 and responseCode <= 299, \"Success\",\r\n                                \"Failure\"),\r\n            EventResultDetails = tostring(responseCode),\r\n            EventOriginalResultDetails = operationId,\r\n            EventProduct = \"Meraki\", \r\n            EventVendor = \"Cisco\",\r\n            Dvc = \"Meraki\",\r\n            EventType = \"HTTPsession\",\r\n            EventSchemaVersion = \"0.2.5\",  \r\n            EventOriginalType = \"API Request\",         \r\n            Url = strcat(host,path,'?',queryString),   \r\n            HttpVersion = \"2.0\",\r\n            HttpRequestMethod = method, \r\n            HttpStatusCode = tostring(responseCode),\r\n            HttpReferrer = host,\r\n            HttpUserAgent = userAgent,\r\n            SrcUserId = adminId,\r\n            SrcUserIdType = \"UID\",\r\n            SrcIpAddr = sourceIp,\r\n            EventProductVersion = case(isempty(version),tostring(1),\r\n                                        tostring(version)),\r\n            GeoLocation = geo_location(sourceIp)\r\n| extend UrlOriginal = Url,\r\n            UserAgent = HttpUserAgent,\r\n            EventSeverity = case(EventResult == \"Success\", \"Informational\",\r\n                              \"Low\"),\r\n            SrcGeoCountry = tostring(GeoLocation.Country),\r\n            SrcGeoLatitude = toreal(GeoLocation.Latitude),\r\n            SrcGeoLongitude = toreal(GeoLocation.Longitude)\r\n| project-away GeoLocation",
				"outputStream": "Microsoft-ASimWebSessionLogs"
			},
			{
				"streams": [
					"Custom-CiscoMeraki_Configuration"
				],
				"destinations": [
					"clv2ws1"
				],
				"transformKql": "source\r\n    | project-rename TimeGenerated = ts,\r\n                 OldValue = oldValue,\r\n                 NewValue = newValue,\r\n                 ActorUsername = adminEmail,\r\n                 ActorUserId = adminId\r\n    | extend EventSchemaVersion = \"0.1\",\r\n          EventCount = toint(1),\r\n          EventResult = \"Success\",\r\n          EventProduct = \"Meraki\",\r\n          EventVendor = \"Cisco\",\r\n          EventSeverity = \"Informational\",\r\n          ActorUsernameType = \"UPN\",\r\n          ActorUserType = \"Admin\",\r\n          ActorUserIdType = \"Other\",\r\n          AdditionalFields = pack(\"adminName\",adminName),\r\n          Operation = strcat(page,'/',label),\r\n          Object = iff(isnotempty(ssidName), strcat(networkName,'/',ssidName), networkName),\r\n          ObjectId = iff(isnotempty(ssidNumber), strcat(networkId,'/',ssidNumber), networkId),\r\n          ObjectType = \"Other\",\r\n          EventType = case(isempty(OldValue),\"Create\",\r\n                           isempty(NewValue),\"Delete\",\r\n                           \"Set\"),\r\n          EventStartTime = TimeGenerated,\r\n          EventEndTime = TimeGenerated,\r\n          ValueType = \"Other\"\r\n    | project-away page, label, networkId, networkName, ssidNumber, ssidName, adminName\r\n",
				"outputStream": "Microsoft-ASimAuditEventLogs"
			},
			{
				"streams": [
					"Custom-CiscoMeraki_IDS"
				],
				"destinations": [
					"clv2ws1"
				],
				"transformKql": "source \r\n        | where eventType == \"IDS Alert\" \r\n        | extend srcIpSplit = split(srcIp,':'), dstIpSplit = split(destIp,':')\r\n        | project-rename TimeGenerated = ts, \r\n                EventOriginalType = eventType, \r\n                DvcMacAddr = deviceMac, \r\n                SrcMacAddr = clientMac, \r\n                EventOriginalSeverity = priority, \r\n                EventMessage = message,\r\n                NetworkRuleName = ruleId\r\n        | extend                 \r\n                EventCount = toint(1), \r\n                EventResult = iif(blocked,\"Failure\",\"Success\"),  \r\n                EventProduct = \"Meraki\", \r\n                EventVendor = \"Cisco\", \r\n                Dvc = DvcMacAddr,\r\n                EventType = \"Notable\",\r\n                SrcIpAddr = tostring(srcIpSplit[0]), \r\n                SrcPortNumber = iif(array_length(srcIpSplit) == 2, toint(srcIpSplit[1]), int(null)), \r\n                DstIpAddr = tostring(dstIpSplit[0]), \r\n                DstPortNumber = iff(array_length(dstIpSplit) == 2,toint(dstIpSplit[1]),int(null)), \r\n                NetworkProtocol = case(protocol == \"tcp/ip\", \"TCP\", \r\n                                       protocol == \"udp/ip\", \"UDP\",\r\n                                       \"\"), \r\n                EventSeverity = case(EventOriginalSeverity == \"0\", \"High\",\r\n                                EventOriginalSeverity == \"1\", \"Medium\",\r\n                                EventOriginalSeverity == \"2\", \"Low\",\r\n                                EventOriginalSeverity == \"3\", \"Informational\",\r\n                                \"Low\"), \r\n                DvcAction = case(\r\n                                blocked, \"Deny\",\r\n                                \"Allow\"\r\n                                ),\r\n                AdditionalFields = pack(\r\n                                        \"classification\",classification,\r\n                                        \"sigSource\",sigSource,\r\n                                        \"signature\",signature\r\n                                        ),\r\n                EventStartTime = TimeGenerated, \r\n                EventEndTime = TimeGenerated\r\n        | extend \r\n                GeoLocationSrc = geo_location(SrcIpAddr),\r\n                GeoLocationDst = geo_location(DstIpAddr)\r\n        | extend SrcGeoCountry = tostring(GeoLocationSrc.Country),\r\n                SrcGeoLatitude = toreal(GeoLocationSrc.Latitude),\r\n                SrcGeoLongitude = toreal(GeoLocationSrc.Longitude),\r\n                DstGeoCountry = tostring(GeoLocationDst.Country),\r\n                DstGeoLatitude = toreal(GeoLocationDst.Latitude),\r\n                DstGeoLongitude = toreal(GeoLocationDst.Longitude)\r\n| project-away GeoLocationSrc, GeoLocationDst, srcIpSplit, dstIpSplit, blocked, classification, destIp, protocol, sigSource, srcIp",
				"outputStream": "Microsoft-ASimNetworkSessionLogs"
			}
		]
	}
}]