{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Dataverse: Send notification to manager",
        "description": "This playbook can be triggered when a Microsoft Sentinel incident is raised and will automatically send an email notificiation to the manager of the affected user entitites. The Playbook can be configured to send either to the Dynamics 365 manager, or using the manager in Office 365.",
        "prerequisites": [
            "1. Ensure user accounts have a manager assigned in either Dynamics 365 or Office 365."
        ],
        "postDeployment": [
            "1. Set the ManagerTypeIsD365 Playbook parameter to false if using Office 365 manager.",
            "2. Configure an email address for the FallbackMailbox Playbook parameter. This inbox will be used for any user entity without a manager assigned."
        ],
        "entities": [
            "Account"
        ],
        "tags": [
            "Notification"
        ],
        "lastUpdateTime": "2022-11-01T00:00:00.000Z",
        "support": {
            "tier": "Microsoft"
        },
        "author": {
            "name": "Microsoft"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Dataverse-Send-Manager-Notification",
            "type": "string"
        },
        "FallbackMailbox": {
            "type": "string",
            "metadata": {
                "description": "Enter email address for fallback mailbox"
            }
        },
        "ManagerTypeIsD365": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
                "description": "Leave as true to use Dynamics 365 manager or set to false for Office 365 manager"
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "Office365ConnectionName": "[concat('Office365-', parameters('PlaybookName'))]",
        "Office365usersConnectionName": "[concat('Office365users-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "FallbackMailbox": {
                            "defaultValue": "[parameters('FallbackMailbox')]",
                            "type": "string"
                        },
                        "ManagerTypeIsD365": {
                            "defaultValue": "[parameters('ManagerTypeIsD365')]",
                            "type": "string"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('Parse_JSON')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Set_variable": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "InstanceUrl",
                                                "value": "@items('For_each')?['properties']?['instanceName']"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_each')['kind']",
                                                    "CloudApplication"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "InstanceUrl",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            }
                        },
                        "InstanceUrl_Exists": {
                            "actions": {
                                "ManagerTypeIsD365": {
                                    "actions": {
                                        "Entities_-_Get_D365_Accounts": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/account"
                                            }
                                        },
                                        "For_each_D365_account": {
                                            "foreach": "@body('Entities_-_Get_D365_Accounts')?['Accounts']",
                                            "actions": {
                                                "Get_D365_User": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "@variables('InstanceUrl')",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "headers": {
                                                            "OData-MaxVersion": "4.0",
                                                            "OData-Version": "4.0",
                                                            "accept": "application/json"
                                                        },
                                                        "method": "GET",
                                                        "uri": "@{variables('InstanceUrl')}api/data/v9.2/systemusers?$select=_parentsystemuserid_value,windowsliveid&$filter=windowsliveid eq '@{concat(items('For_each_D365_account')?['accountName'],'@',items('For_each_D365_account')?['upnSuffix'])}'"
                                                    }
                                                },
                                                "User_Has_Manager_D365": {
                                                    "actions": {
                                                        "Get_Manager": {
                                                            "runAfter": {},
                                                            "type": "Http",
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "@variables('InstanceUrl')",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "headers": {
                                                                    "OData-MaxVersion": "4.0",
                                                                    "OData-Version": "4.0",
                                                                    "accept": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "uri": "@{variables('InstanceUrl')}api/data/v9.2/systemusers?$filter=_parentsystemuserid_value eq @{body('Get_D365_User')['value'][0]?['_parentsystemuserid_value']}&$select=firstname,lastname,internalemailaddress"
                                                            }
                                                        },
                                                        "Send_email_to_D365_manager": {
                                                            "runAfter": {
                                                                "Get_Manager": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "Body": "<p>Microsoft Sentinel incident was triggered for a user reporting to you. Information is listed below:<br>\n<br>\nDescription: @{triggerBody()?['object']?['properties']?['description']}<br>\nUser: @{items('For_each_D365_account')?['Name']}</p>",
                                                                    "Importance": "High",
                                                                    "Subject": "@triggerBody()?['object']?['properties']?['title']",
                                                                    "To": "@{body('Get_Manager')['value'][0]?['internalemailaddress']}"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['office365_1']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/v2/Mail"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Get_D365_User": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Send_email_to_fallback_mailbox_(D365)": {
                                                                "runAfter": {},
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "Body": "<p>Title: @{triggerBody()?['object']?['properties']?['title']}<br>\nDescription: @{triggerBody()?['object']?['properties']?['description']}<br>\nUser: @{items('For_each_D365_account')?['Name']}<br>\n<br>\nAlert generated for user . &nbsp;However, this user has no manager assignment in Dynamics 365.</p>",
                                                                        "Importance": "High",
                                                                        "Subject": "Manager notification rule was triggered but no manager assigned in Dynamics 365",
                                                                        "To": "@parameters('FallbackMailbox')"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['office365_1']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/v2/Mail"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@body('Get_D365_User')['value'][0]?['_parentsystemuserid_value']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_D365_Accounts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "Entities_-_Get_O365_Accounts": {
                                                "runAfter": {},
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/entities/account"
                                                }
                                            },
                                            "For_each_O365_account": {
                                                "foreach": "@body('Entities_-_Get_O365_Accounts')?['Accounts']",
                                                "actions": {
                                                    "Get_manager_(V2)": {
                                                        "runAfter": {},
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['office365users']['connectionId']"
                                                                }
                                                            },
                                                            "method": "get",
                                                            "path": "/codeless/v1.0/users/@{encodeURIComponent(concat(items('For_each_O365_account')?['accountName'],'@',items('For_each_O365_account')?['upnSuffix']))}/manager"
                                                        }
                                                    },
                                                    "User_Has_Manager_O365": {
                                                        "actions": {
                                                            "Send_email_to_O365_manager": {
                                                                "runAfter": {},
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "Body": "<p>Microsoft Sentinel incident was triggered for a user reporting to you. Information is listed below:<br>\n<br>\nDescription: @{triggerBody()?['object']?['properties']?['description']}<br>\nUser: @{items('For_each_O365_account')?['Name']}</p>",
                                                                        "Importance": "High",
                                                                        "Subject": "@triggerBody()?['object']?['properties']?['title']",
                                                                        "To": "@body('Get_manager_(V2)')?['mail']"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['office365_1']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/v2/Mail"
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Get_manager_(V2)": [
                                                                "Succeeded",
                                                                "Failed"
                                                            ]
                                                        },
                                                        "else": {
                                                            "actions": {
                                                                "Send_email_to_fallback_mailbox_(O365)": {
                                                                    "runAfter": {},
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "Body": "<p>Title: @{triggerBody()?['object']?['properties']?['title']}<br>\nDescription: @{triggerBody()?['object']?['properties']?['description']}<br>\nUser: @{items('For_each_O365_account')?['Name']}<br>\n<br>\nAlert generated for user . &nbsp;However, this user has no manager assignment in Office 365.</p>",
                                                                            "Importance": "High",
                                                                            "Subject": "Manager notification rule was triggered but no manager assigned in Office 365",
                                                                            "To": "@parameters('FallbackMailbox')"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['office365_1']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/v2/Mail"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "not": {
                                                                        "equals": [
                                                                            "@body('Get_manager_(V2)')?['mail']",
                                                                            "@null"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                },
                                                "runAfter": {
                                                    "Entities_-_Get_O365_Accounts": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Foreach"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@parameters('ManagerTypeIsD365')",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Entities_-_Get_Missing_Instance_Accounts": {
                                        "runAfter": {},
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/entities/account"
                                        }
                                    },
                                    "For_each_account_(Missing_Instance)": {
                                        "foreach": "@body('Entities_-_Get_Missing_Instance_Accounts')?['Accounts']",
                                        "actions": {
                                            "Send_email_to_fallback_mailbox_(Missing_Instance)": {
                                                "runAfter": {},
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "body": {
                                                        "Body": "<p>Title: @{triggerBody()?['object']?['properties']?['title']}<br>\nDescription: @{triggerBody()?['object']?['properties']?['description']}<br>\nUser: @{items('For_each_account_(Missing_Instance)')?['Name']}<br>\n<br>\nPlease ensure incidents triggering this playbook contain Cloud App type entity mappings with the InstanceUrl set in the InstanceName property of the entity mapping.</p>",
                                                        "Importance": "High",
                                                        "Subject": "Manager notification Playbook was triggered but Dynamics 365 instance URL was not found",
                                                        "To": "@parameters('FallbackMailbox')"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['office365_1']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/v2/Mail"
                                                }
                                            }
                                        },
                                        "runAfter": {
                                            "Entities_-_Get_Missing_Instance_Accounts": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Foreach"
                                    }
                                }
                            },
                            "expression": {
                                "or": [
                                    {
                                        "equals": [
                                            "@parameters('ManagerTypeIsD365')",
                                            "@false"
                                        ]
                                    },
                                    {
                                        "startsWith": [
                                            "@tolower(variables('InstanceUrl'))",
                                            "https://"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "kind": {
                                                "type": "string"
                                            },
                                            "properties": {
                                                "properties": {
                                                    "appId": {
                                                        "type": "integer"
                                                    },
                                                    "appName": {
                                                        "type": "string"
                                                    },
                                                    "friendlyName": {
                                                        "type": "string"
                                                    },
                                                    "instanceName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "type",
                                            "kind",
                                            "properties"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "office365_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "connectionName": "[variables('Office365ConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                            },
                            "office365users": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365usersConnectionName'))]",
                                "connectionName": "[variables('Office365usersConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365users')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "hidden-SentinelTemplateName": "D365-Send-Manager-Notification",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('Office365usersConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('Office365ConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Office365usersConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('Office365usersConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365users')]"
                }
            }
        }
    ]
}
