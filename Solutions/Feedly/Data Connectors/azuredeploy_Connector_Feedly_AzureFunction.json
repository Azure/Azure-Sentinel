{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "AzureClientId": {
            "type": "String",
            "metadata": {
                "description": "Azure AD Application (client) ID - this is different from the Service Principal object ID"
            }
        },
        "AzureClientSecret": {
            "type": "SecureString",
            "metadata": {
                "description": "Azure AD Application client secret"
            }
        },
        "AzureObjectId": {
            "type": "String",
            "metadata": {
                "description": "Azure AD Service Principal object ID (not Application object ID)"
            }
        },
        "LogAnalyticsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Log Analytics Workspace to use for Application Insights and data ingestion"
            }
        },
        "FunctionName": {
            "defaultValue": "Feedly",
            "minLength": 1,
            "maxLength": 11,
            "type": "String"
        },
        "FeedlyApiKey": {
            "type": "SecureString",
            "metadata": {
                "description": "Feedly API token for accessing threat intelligence feeds"
            }
        },
        "FeedlyStreamIds": {
            "defaultValue": "streamId1,streamId2,streamId3",
            "type": "String",
            "metadata": {
                "description": "A comma separated list of Feedly stream IDs to be ingested"
            }
        },
        "DaysToBackfill": {
            "defaultValue": 7,
            "type": "Int",
            "metadata": {
                "description": "The number of days to backfill when ingesting from a new stream id"
            }
        },
        "TableName": {
            "defaultValue": "feedly_indicators_CL",
            "type": "String",
            "metadata": {
                "description": "Name of the custom table to create for Feedly IoCs (must end with _CL)"
            }
        },
        "DceName": {
            "defaultValue": "feedly-indicators-CL-DCE",
            "type": "String",
            "metadata": {
                "description": "Name of the Data Collection Endpoint to create"
            }
        },
        "DcrName": {
            "defaultValue": "DCR_feedly_indicators_CL",
            "type": "String",
            "metadata": {
                "description": "Name of the Data Collection Rule to create for Feedly IoCs"
            }
        }
    },
    "variables": {
        "FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",
        "StorageSuffix": "[environment().suffixes.storage]",
        "StreamName": "[concat('Custom-', parameters('TableName'))]",
        "LogAnalyticsWorkspaceResourceID": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('FunctionName')]",
                "WorkspaceResourceId": "[variables('LogAnalyticsWorkspaceResourceID')]"
            }
        },
        {
            "type": "Microsoft.Insights/dataCollectionEndpoints",
            "apiVersion": "2021-04-01",
            "name": "[parameters('DceName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "networkAcls": {
                    "publicNetworkAccess": "Enabled"
                }
            }
        },
        {
            "type": "Microsoft.Insights/dataCollectionRules",
            "name": "[parameters('DcrName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2021-09-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('DceName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/tables', parameters('LogAnalyticsWorkspaceName'), parameters('TableName'))]"
            ],
            "properties": {
                "dataCollectionEndpointId": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('DceName'))]",
                "streamDeclarations": {
                    "[variables('StreamName')]": {
                        "columns": [
                            {
                                "name": "TimeGenerated",
                                "type": "datetime"
                            },
                            {
                                "name": "indicatorType",
                                "type": "string"
                            },
                            {
                                "name": "value",
                                "type": "string"
                            },
                            {
                                "name": "articleTitle",
                                "type": "string"
                            },
                            {
                                "name": "articleUrl",
                                "type": "string"
                            },
                            {
                                "name": "source",
                                "type": "string"
                            }
                        ]
                    }
                },
                "destinations": {
                    "logAnalytics": [
                        {
                            "workspaceResourceId": "[variables('LogAnalyticsWorkspaceResourceID')]",
                            "name": "clv2ws1"
                        }
                    ]
                },
                "dataFlows": [
                    {
                        "streams": [
                            "[variables('StreamName')]"
                        ],
                        "destinations": [
                            "clv2ws1"
                        ],
                        "transformKql": "source | project TimeGenerated, indicatorType, value, articleTitle, articleUrl, source",
                        "outputStream": "[variables('StreamName')]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/tables",
            "apiVersion": "2023-01-01-preview",
            "name": "[concat(parameters('LogAnalyticsWorkspaceName'), '/', parameters('TableName'))]",
            "properties": {
                "totalRetentionInDays": 365,
                "plan": "Auxiliary",
                "schema": {
                    "name": "[parameters('TableName')]",
                    "columns": [
                        {
                            "name": "TimeGenerated",
                            "type": "DateTime"
                        },
                        {
                            "name": "indicatorType",
                            "type": "String"
                        },
                        {
                            "name": "value",
                            "type": "String"
                        },
                        {
                            "name": "articleTitle",
                            "type": "String"
                        },
                        {
                            "name": "articleUrl",
                            "type": "String"
                        },
                        {
                            "name": "source",
                            "type": "String"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[tolower(variables('FunctionName'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "kind": "functionapp,linux",
            "properties": {
                "reserved": true,
                "name": "[variables('FunctionName')]",
                "workerSize": "0",
                "workerSizeId": "0",
                "numberOfWorkers": "1"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('FunctionName'))]",
                "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('FunctionName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('FunctionName'))]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "alwaysOn": true,
                "reserved": true,
                "siteConfig": {
                    "linuxFxVersion": "python|3.10"
                }
            },
            "resources": [
                {
                    "type": "config",
                    "apiVersion": "2018-11-01",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('FunctionName'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "FUNCTIONS_WORKER_RUNTIME": "python",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('FunctionName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('FunctionName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('FunctionName')),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('FunctionName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "WEBSITE_CONTENTSHARE": "[toLower(variables('FunctionName'))]",
                        "DataCollectionEndpoint": "[reference(resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('DceName')), '2021-04-01').logsIngestion.endpoint]",
                        "DcrImmutableId": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', parameters('DcrName')), '2021-09-01-preview').immutableId]",
                        "DcrStreamName": "[variables('StreamName')]",
                        "AzureTenantId": "[tenant().tenantId]",
                        "AzureClientId": "[parameters('AzureClientId')]",
                        "AzureClientSecret": "[parameters('AzureClientSecret')]",
                        "FeedlyApiKey": "[parameters('FeedlyApiKey')]",
                        "FeedlyStreamIds": "[parameters('FeedlyStreamIds')]",
                        "DaysToBackfill": "[parameters('DaysToBackfill')]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/sentinel-Feedly-functionapp"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/', tolower(variables('FunctionName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(resourceGroup().id, 'functionAppDcrRoleAssignment', parameters('DcrName'), parameters('AzureObjectId'))]",
            "scope": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('DcrName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('DcrName'))]"
            ],
            "properties": {
                "principalId": "[parameters('AzureObjectId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                "principalType": "ServicePrincipal"
            }
        }
    ],
    "outputs": {
        "functionAppName": {
            "type": "string",
            "value": "[variables('FunctionName')]"
        },
        "dataCollectionEndpointId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('DceName'))]"
        },
        "dataCollectionEndpointUrl": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('DceName')), '2021-04-01').logsIngestion.endpoint]"
        },
        "dataCollectionRuleId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('DcrName'))]"
        },
        "dataCollectionRuleImmutableId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', parameters('DcrName')), '2021-09-01-preview').immutableId]"
        },
        "customTableName": {
            "type": "string",
            "value": "[parameters('TableName')]"
        }
    }
}