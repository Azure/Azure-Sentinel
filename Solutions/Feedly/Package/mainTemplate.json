{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Feedly ml@feedly.com",
    "comments": "Solution template for Feedly"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "_solutionName": "Feedly",
    "_solutionVersion": "3.0.3",
    "solutionId": "feedlyinc1693853810319.azure-sentinel-solution-feedly",
    "_solutionId": "[variables('solutionId')]",
    "uiConfigId1": "Feedly",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "Feedly",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Feedly data connector with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Feedly",
                  "publisher": "Feedly",
                  "descriptionMarkdown": "This connector allows you to ingest IoCs from Feedly.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "feedly_indicators_CL",
                      "baseQuery": "feedly_indicators_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All IoCs collected",
                      "query": "feedly_indicators_CL\n | sort by TimeGenerated desc"
                    },
                    {
                      "description": "Ip addresses",
                      "query": "feedly_indicators_CL\n | where type_s == \"ip\"\n | sort by TimeGenerated desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "feedly_indicators_CL",
                      "lastDataReceivedQuery": "feedly_indicators_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "feedly_indicators_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions on the workspace are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Microsoft.Web/sites permissions",
                        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                      },
                      {
                        "name": "Custom prerequisites if necessary, otherwise delete this customs tag",
                        "description": "Description for any custom pre-requisites"
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This connector uses Azure Functions to connect to Feedly to pull IoCs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                    },
                    {
                      "description": "Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App.",
                      "title": "(Optional Step) Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault."
                    },
                    {
                      "description": "Go to https://feedly.com/i/team/api and generate a new API token for the connector.",
                      "title": "Step 1 - Get your Feedly API token"
                    },
                    {
                      "description": "Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Feedly connector, have the Workspace ID and Workspace Primary Key (can be copied from the following), as well as the Feedly API Token, readily available.",
                      "innerSteps": [
                        {
                          "title": "Option 1 - Azure Resource Manager (ARM) Template",
                          "description": "Use this method for automated deployment of the Feedly connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-Feedly-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the SentinelWorkspaceId, SentinelWorkspaceKey, FeedlyApiKey, FeedlyStreamIds, DaysToBackfill. \n>Note: If using Azure Key Vault secrets for any of the values above, use the`@Microsoft.KeyVault(SecretUri={Security Identifier})`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy."
                        },
                        {
                          "title": "Option 2 - Manual Deployment of Azure Functions",
                          "description": "Use the following step-by-step instructions to deploy the Feedly connector manually with Azure Functions (Deployment via Visual Studio Code).",
                          "innerSteps": [
                            {
                              "title": "1. Deploy a Function App",
                              "description": "**NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-Feedly-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. FeedlyXXXX).\n\n\te. **Select a runtime:** Choose Python 3.10.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
                            },
                            {
                              "title": "2. Configure the Function App",
                              "description": "1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **New application setting**.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tSentinelWorkspaceId\n\t\tSentinelWorkspaceKey\n\t\tFeedlyApiKey\n\t\tFeedlyStreamIds\n\t\tDaysToBackfill\n\t\tSentinelLogAnalyticsUri (optional)\n> - Use SentinelLogAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<WorkspaceID>.ods.opinsights.azure.us`.\n3. Once all application settings have been entered, click **Save**."
                            }
                          ]
                        }
                      ],
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace Id"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Primary Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ],
                      "title": "Step 2 - Deploy the connector"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Feedly",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Feedly ml@feedly.com"
                },
                "support": {
                  "name": "Feedly Inc",
                  "email": "ml@feedly.com",
                  "tier": "Partner",
                  "link": "https://feedly.com/i/support/contactUs"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Feedly",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Feedly",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Feedly ml@feedly.com"
        },
        "support": {
          "name": "Feedly Inc",
          "email": "ml@feedly.com",
          "tier": "Partner",
          "link": "https://feedly.com/i/support/contactUs"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Feedly",
          "publisher": "Feedly",
          "descriptionMarkdown": "This connector allows you to ingest IoCs from Feedly.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "feedly_indicators_CL",
              "baseQuery": "feedly_indicators_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "feedly_indicators_CL",
              "lastDataReceivedQuery": "feedly_indicators_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "feedly_indicators_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "All IoCs collected",
              "query": "feedly_indicators_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Ip addresses",
              "query": "feedly_indicators_CL\n | where type_s == \"ip\"\n | sort by TimeGenerated desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "Custom prerequisites if necessary, otherwise delete this customs tag",
                "description": "Description for any custom pre-requisites"
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to Feedly to pull IoCs into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
            },
            {
              "description": "Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App.",
              "title": "(Optional Step) Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault."
            },
            {
              "description": "Go to https://feedly.com/i/team/api and generate a new API token for the connector.",
              "title": "Step 1 - Get your Feedly API token"
            },
            {
              "description": "Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Feedly connector, have the Workspace ID and Workspace Primary Key (can be copied from the following), as well as the Feedly API Token, readily available.",
              "innerSteps": [
                {
                  "title": "Option 1 - Azure Resource Manager (ARM) Template",
                  "description": "Use this method for automated deployment of the Feedly connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-Feedly-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the SentinelWorkspaceId, SentinelWorkspaceKey, FeedlyApiKey, FeedlyStreamIds, DaysToBackfill. \n>Note: If using Azure Key Vault secrets for any of the values above, use the`@Microsoft.KeyVault(SecretUri={Security Identifier})`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy."
                },
                {
                  "title": "Option 2 - Manual Deployment of Azure Functions",
                  "description": "Use the following step-by-step instructions to deploy the Feedly connector manually with Azure Functions (Deployment via Visual Studio Code).",
                  "innerSteps": [
                    {
                      "title": "1. Deploy a Function App",
                      "description": "**NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-Feedly-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. FeedlyXXXX).\n\n\te. **Select a runtime:** Choose Python 3.10.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
                    },
                    {
                      "title": "2. Configure the Function App",
                      "description": "1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **New application setting**.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tSentinelWorkspaceId\n\t\tSentinelWorkspaceKey\n\t\tFeedlyApiKey\n\t\tFeedlyStreamIds\n\t\tDaysToBackfill\n\t\tSentinelLogAnalyticsUri (optional)\n> - Use SentinelLogAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<WorkspaceID>.ods.opinsights.azure.us`.\n3. Once all application settings have been entered, click **Save**."
                    }
                  ]
                }
              ],
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace Id"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "Step 2 - Deploy the connector"
            }
          ],
          "id": "[variables('_uiConfigId1')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.3",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Feedly",
        "publisherDisplayName": "Feedly Inc",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Feedly/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://feedly.com/i/landing/threatIntelligence\">Feedly</a> Solution for Microsoft Sentinel provides a simple way to ingest Indicators of Compromise from your Feedly streams into Microsoft Sentinel.</p>\n<p><strong>Data Connectors:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Feedly.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Feedly",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Feedly ml@feedly.com"
        },
        "support": {
          "name": "Feedly Inc",
          "email": "ml@feedly.com",
          "tier": "Partner",
          "link": "https://feedly.com/i/support/contactUs"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2023-08-01",
        "providers": [
          "Feedly"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
