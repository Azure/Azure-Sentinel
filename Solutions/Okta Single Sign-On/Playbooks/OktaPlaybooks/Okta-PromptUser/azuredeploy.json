{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "title": "Prompt Okta user", 
    "description": "This playbook uses the OKTA connector to prompt the risky user on Teams. User is asked action was taken by them. Based on the user confirmation the SOC admin is notified to investige on the user account. Also, comment is added to the incident with user information and summary of actions taken.",
    "prerequisites": ["1. Okta Custom Connector needs to be deployed prior to the deployment of this playbook under the same resource group.",
      "2. Generate an API key. [Learn how](https://developer.okta.com/docs/guides/create-an-api-token/overview/)"],
    "prerequisitesDeployTemplateFile": "../../OktaCustomConnector/azuredeploy.json",
    "lastUpdateTime": "2021-07-28T00:00:00.000Z", 
    "entities": ["Account"], 
    "tags": ["Enrichment"], 
    "support": {
        "tier": "community" 
    },
    "author": {
        "name": "Accenture"
    }
},
  "parameters": {
    "PlaybookName": {
      "defaultValue": "Okta-PromptUser",
      "type": "string",
      "metadata": {
        "description": "Name of the Logic App/Playbook"
      }

    },
    "Teams GroupId": {
      "defaultValue": "TeamgroupId",
      "type": "string",
	  "metadata": {
        "description": "GroupId of the Team channel"
      }
    },
    "Teams ChannelId": {
      "defaultValue": "TeamChannelId",
      "type": "string",
      "metadata": {
        "description": "Team ChannelId"
      }
    },
    "CustomConnectorName":{
      "defaultValue": "OktaCustomConnector",
      "type": "string",
      "metadata": {
        "description": "Name of the custom connector which interacts with Okta"
      }
    }
  },
  "variables": {
    "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
    "OKTAConnectionName": "[concat('oktaconnector-', parameters('PlaybookName'))]",
    "TeamsConnectionName": "[concat('teamsconnector-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('OKTAConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('AzureSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
          "displayName": "[variables('AzureSentinelConnectionName')]",
          "customParameterValues": {},
          "parameterValueType": "Alternative",
          "api": {
              "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
          }
      }
  },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('TeamsConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('PlaybookName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "hidden-SentinelTemplateName": "PromptUser-Okta",
        "hidden-SentinelTemplateVersion": "1.0",
        "LogicAppsCategory": "security"
      },
      "identity": {
        "type": "SystemAssigned"
    },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('OKTAConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_Azure_Sentinel_incident_creation_rule_was_triggered_(Private_Preview_only)": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Entities_-_Get_Accounts": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/account"
              }
            },
            "For_each-risky_account_received_from_the_incident": {
              "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
              "actions": {
                "Condition_based_on_the_user_confirmation": {
                  "actions": {
                    "Add_a_comment_to_the_incident_with_the_information_collected_and_conclusion": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p><strong>OKTA Playbook performed the following actions:<br>\n<br>\nGot User information from OKTA :<br>\n<br>\nUser id: &nbsp;</strong><strong>@{body('Get_User')?['id']}</strong><strong><br>\nUser name: &nbsp; </strong><strong>@{body('Get_User')?['credentials']?['provider']?['name']}</strong><strong><br>\nUser login: </strong><strong>@{body('Get_User')?['profile']?['login']}</strong><strong><br>\nUser email: </strong><strong>@{body('Get_User')?['profile']?['email']}</strong><strong><br>\nUser status: </strong><strong>@{body('Get_User')?['status']}</strong><strong><br>\nUser created: </strong><strong>@{body('Get_User')?['created']}</strong><strong><br>\nUser activated: </strong><strong>@{body('Get_User')?['activated']}</strong><strong><br>\nUser statusChanged: </strong><strong>@{body('Get_User')?['statusChanged']}</strong><strong><br>\nUser lastLogin: </strong><strong>@{body('Get_User')?['lastLogin']}</strong><strong><br>\nUser lastUpdated: </strong><strong>@{body('Get_User')?['lastUpdated']}</strong><strong><br>\nUser passwordChanged: </strong><strong>@{body('Get_User')?['passwordChanged']}</strong><strong><br>\n<br>\nActions taken on Sentinel:<br>\n<br>\n</strong>Incident will be closed as the user confirmed that it was him.</p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Update_incident_to_close_it": {
                      "runAfter": {
                        "Add_a_comment_to_the_incident_with_the_information_collected_and_conclusion": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "classification": {
                            "ClassificationAndReason": "Benign Positive - Suspicious But Expected"
                          },
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "status": "Closed"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "put",
                        "path": "/Incidents"
                      }
                    }
                  },
                  "runAfter": {
                    "Post_an_Adaptive_Card_to_a_Teams_user_and_wait_for_a_response": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Add_a_comment_to_the_incident_with_the_information_collected": {
                        "runAfter": {
                          "Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response": [
                            "Succeeded"
                          ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                          "body": {
                            "incidentArmId": "@triggerBody()?['object']?['id']",
                            "message": "<p><strong>OKTA Playbook ran and performed the following actions:</strong><br>\n<strong><br>\nGot User information from OKTA :</strong><br>\n<br>\n<strong>User id:</strong> &nbsp;@{body('Get_User')?['id']}<br>\n<strong>User name: </strong>&nbsp; @{body('Get_User')?['credentials']?['provider']?['name']}<br>\n<strong>User login:</strong> @{body('Get_User')?['profile']?['login']}<br>\n<strong>User email: </strong>@{body('Get_User')?['profile']?['email']}<br>\n<strong>User status:</strong> @{body('Get_User')?['status']}<br>\n<strong>User created: </strong>@{body('Get_User')?['created']}<br>\n<strong>User activated: </strong>@{body('Get_User')?['activated']}<br>\n<strong>User statusChanged:</strong> @{body('Get_User')?['statusChanged']}<br>\n<strong>User lastLogin: </strong>@{body('Get_User')?['lastLogin']}<br>\n<strong>User lastUpdated: </strong>@{body('Get_User')?['lastUpdated']}<br>\n<strong>User passwordChanged: </strong>@{body('Get_User')?['passwordChanged']}<br>\n<br>\n<strong>Actions taken on Okta:<br>\n</strong><br>\n<span style=\"font-size: 12px\">Cleared the user sessions and reset the password of the user.<br>\n<br>\n</span><span style=\"font-size: 12px\"><strong>Actions taken on Sentinel:</strong></span><span style=\"font-size: 12px\"><br>\n<br>\nInformed the SOC admin about the risky user and asked him to investigate further</span></p>"
                          },
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                            }
                          },
                          "method": "post",
                          "path": "/Incidents/Comment"
                        }
                      },
                      "Clear_User_Sessions": {
                        "runAfter": {},
                        "type": "ApiConnection",
                        "inputs": {
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['OktaCustomConnector']['connectionId']"
                            }
                          },
                          "method": "delete",
                          "path": "/api/v1/users/@{encodeURIComponent(body('Get_User')?['id'])}/sessions"
                        },
                        "description": "This clears the user sessions in Okta"
                      },
                      "Post_an_Adaptive_Card_to_a_Teams_channel_and_wait_for_a_response": {
                        "runAfter": {
                          "Reset_Password": [
                            "Succeeded"
                          ]
                        },
                        "type": "ApiConnectionWebhook",
                        "inputs": {
                          "body": {
                            "body": {
                              "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"large\",\n            \"weight\": \"bolder\",\n            \"text\": \"Microsoft Sentinel playbook has taken an action on a risky user\",\n            \"wrap\": true\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"Image\",\n                            \"style\": \"Person\",\n                            \"url\": \"https://connectoricons-prod.azureedge.net/releases/v1.0.1391/1.0.1391.2130/azuresentinel/icon.png\",\n                            \"size\": \"Small\"\n                        }\n                    ],\n                    \"width\": \"auto\"\n                }              \n            ]\n        },\n                 {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Possible compromised user detected by the @{triggerBody()?['object']?['properties']?['severity']} Incident @{triggerBody()?['object']?['properties']?['title']}\",\n                            \"wrap\": true,\n                            \"weight\":\"bolder\"\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Incident number: @{triggerBody()?['object']?['properties']?['incidentNumber']}\",\n                            \"wrap\": true,\n                            \"weight\":\"bolder\"\n                        },\n         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Incident description\",\n                            \"wrap\": true,\n                            \"weight\":\"bolder\"\n                        },\n                         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \" @{triggerBody()?['object']?['properties']?['description']}\",\n                            \"wrap\": true                       \n                        },\n                         \n                       {\n            \"type\": \"TextBlock\",\n            \"text\": \"[Click here to view Incident]()\",\n            \"wrap\":\"true\"\n        },                   \n                    \n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                \n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                       \n                         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"The Okta user in risk:\",\n                            \"wrap\": true,\n                            \"weight\":\"bolder\"\n                        },\n                         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"User ID: @{body('Get_User')?['id']}\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"First and Last name: @{body('Get_User')?['profile']?['firstName']} @{body('Get_User')?['profile']?['lastName']}\",\n                            \"wrap\": true\n                        },\n                         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"User display name: @{items('For_each-risky_account_received_from_the_incident')?['Name']}\",\n                            \"wrap\": true\n                        },\n                         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Action taken:\",\n                            \n                            \"weight\": \"bolder\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"User password was reset\",\n                         \n                            \"wrap\": true\n                        },\n                         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"User sessions were cleared\",\n\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Please investigate further in Okta.\",\n                            \"weight\":\"bolder\",\n                            \"wrap\": true\n                        }\n                    ],\n                    \"width\": \"auto\"\n                    \n                }\n            ]\n        }\n       \n    ], \n      \"actions\": [\n                    {\n                        \"type\": \"Action.Submit\",\n                        \"title\": \"OK\"\n                    }\n                ],\n    \n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.2\"\n}",
                              "recipient": {
                                "channelId": "[parameters('Teams ChannelId')]"
                              },
                              "shouldUpdateCard": true
                            },
                            "notificationUrl": "@{listCallbackUrl()}"
                          },
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['teams']['connectionId']"
                            }
                          },
                          "path": "/flowbot/actions/flowcontinuation/recipienttypes/channel/$subscriptions",
                          "queries": {
                            "groupId": "[parameters('Teams GroupId')]"
                          }
                        }
                      },
                      "Reset_Password": {
                        "runAfter": {
                          "Clear_User_Sessions": [
                            "Succeeded"
                          ]
                        },
                        "type": "ApiConnection",
                        "inputs": {
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['OktaCustomConnector']['connectionId']"
                            }
                          },
                          "method": "post",
                          "path": "/api/v1/users/@{encodeURIComponent(body('Get_User')?['id'])}/lifecycle/reset_password"
                        },
                        "description": "Reset password link for Okta will be sent to user"
                      }
                    }
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@body('Post_an_Adaptive_Card_to_a_Teams_user_and_wait_for_a_response')?['submitActionId']",
                          "This was me"
                        ]
                      }
                    ]
                  },
                  "type": "If",
                  "description": "user confirmation will be captured here if he has done the malicious activity on the user account"
                },
                "Get_User": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['OktaCustomConnector']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/api/v1/users/@{encodeURIComponent(items('For_each-risky_account_received_from_the_incident')?['Name'])}"
                  },
                  "description": "Gets the user details from Okta"
                },
                "Post_an_Adaptive_Card_to_a_Teams_user_and_wait_for_a_response": {
                  "runAfter": {
                    "Get_User": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnectionWebhook",
                  "inputs": {
                    "body": {
                      "body": {
                        "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"large\",\n            \"weight\": \"bolder\",\n            \"text\": \"New Incident from MicrosoftSentinel. Please respond ASAP\",\n            \"wrap\": true\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"Image\",\n                            \"style\": \"Person\",\n                            \"url\": \"https://connectoricons-prod.azureedge.net/releases/v1.0.1391/1.0.1391.2130/azuresentinel/icon.png\",\n                            \"size\": \"Small\"\n                        }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"Medium\",\n            \"text\": \"Incident Description \",\n            \"wrap\": true,\n            \"weight\": \"Bolder\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"Medium\",\n            \"text\":\" @{triggerBody()?['object']?['properties']?['description']}\",\n            \"wrap\": true\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"size\": \"Medium\",\n            \"text\": \"Please confirm it was you\",\n            \"wrap\": true,\n            \"weight\": \"Bolder\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"type\": \"Action.Submit\",\n            \"title\": \"This was me\"\n        },\n        {\n            \"type\": \"Action.Submit\",\n            \"title\": \"This was not me\"\n        }\n    ],\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.2\"\n}",
                        "recipient": {
                          "to": "@body('Get_User')?['profile']?['email']"
                        },
                        "shouldUpdateCard": true
                      },
                      "notificationUrl": "@{listCallbackUrl()}"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['teams']['connectionId']"
                      }
                    },
                    "path": "/flowbot/actions/flowcontinuation/recipienttypes/user/$subscriptions"
                  }
                }
              },
              "runAfter": {
                "Entities_-_Get_Accounts": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "OktaCustomConnector": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('OKTAConnectionName'))]",
                "connectionName": "[variables('OKTAConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', parameters('CustomConnectorName'))]"
              },
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "connectionName": "[variables('AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                      "type": "ManagedServiceIdentity"
                  }
              }
              },

              "teams": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                "connectionName": "[variables('TeamsConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"

              }
            }
          }
        }
      }
    }
  ]

}