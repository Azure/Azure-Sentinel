id: 275bacf7-edef-4436-9e5c-beee419aeb1a
Function:
  Title: Parser for Mimecast TTP URL
  Version: "1.0.1"
  LastUpdated: "2025-10-17"
Category: Microsoft Sentinel Parser
FunctionName: MimecastTTPUrl
FunctionAlias: MimecastTTPUrl
FunctionQuery: |
    let dummy_table = datatable(
    TimeGenerated: datetime,
    userEmailAddress: string,
    fromUserEmailAddress: string,
    messageId: string,
    sendingIp: string,
    url: string
    ) [];
    let MimecastTTPUrl = view() {
        union isfuzzy=true
            dummy_table,
            Ttp_Url_CL
        | summarize arg_max(TimeGenerated, *) by userEmailAddress, fromUserEmailAddress, sendingIp, messageId, url
        | extend 
            ["Category"] = column_ifexists('category', ''),
            ["Time Generated"] = column_ifexists('TimeGenerated', ''),
            ["Type"] = column_ifexists('Type', ''),
            ["Tag Map Dangerous File Ext Content Check Dangerous Mimetypes Url File Download"] = column_ifexists('tagMap_DangerousFileExt_ContentCheck_DangerousMimetypesUrlFileDownload', ''),
            ["Tag Map Dangerous File Ext Content Check Dangerous Exts Url File Download"] = column_ifexists('tagMap_DangerousFileExt_ContentCheck_DangerousExtsUrlFileDownload', ''),
            ["Tag Map Advanced Phishing Credential Theft Evidence"] = column_ifexists('tagMap_AdvancedPhishing_CredentialTheftEvidence', ''),
            ["Tag Map Advanced Phishing Credential Theft Tags"] = column_ifexists('tagMap_AdvancedPhishing_CredentialTheftTags', ''),
            ["Mimecast Event ID"] = 'ttp_url',
            ["Mimecast Event Category"] = 'ttp_url',
            ["Advanced Phishing Result Credential Theft Brands"] = column_ifexists('advancedPhishingResult_CredentialTheftBrands', ''),
            ["Advanced Phishing Result Credential Theft Evidence"] = column_ifexists('advancedPhishingResult_CredentialTheftEvidence', ''),
            ["Advanced Phishing Result Credential Theft Tags"] = column_ifexists('advancedPhishingResult_CredentialTheftTags', ''),
            ["Tag Map Url Reputation Scan Type"] = column_ifexists('tagMap_UrlReputationScan_Type', ''),
            ["Tag Map Url Reputation Scan Url"] = column_ifexists('tagMap_UrlReputationScan_Url', ''),
            ["Tag Map Dangerous File Ext Inspect File Exts"] = column_ifexists('tagMap_DangerousFileExt_Inspect_FileExts', ''),
            ["Tag Map Dangerous File Ext Inspect Mime Types"] = column_ifexists('tagMap_DangerousFileExt_Inspect_MimeTypes', ''),
            ["Tag Map Dangerous File Ext Content Check Content Scanners Blocked"] = column_ifexists('tagMap_DangerousFileExt_ContentCheck_ContentScannersBlocked', ''),
            ["User Email Address"] = column_ifexists('userEmailAddress', ''),
            ["From User Email Address"] = column_ifexists('fromUserEmailAddress', ''),
            ["Url"] = column_ifexists('url', ''),
            ["Ttp Definition"] = column_ifexists('ttpDefinition', ''),
            ["Subject"] = column_ifexists('subject', ''),
            ["Action"] = column_ifexists('action', ''),
            ["Admin Override"] = column_ifexists('adminOverride', ''),
            ["User Override"] = column_ifexists('userOverride', ''),
            ["Scan Result"] = column_ifexists('scanResult', ''),
            ["Sending IP"] = column_ifexists('sendingIp', ''),
            ["User Awareness Action"] = column_ifexists('userAwarenessAction', ''),
            ['Event Time'] = column_ifexists('Date', ''),
            ["Actions"] = column_ifexists('actions', ''),
            ["Route"] = column_ifexists('route', ''),
            ["Creation Method"] = column_ifexists('creationMethod', ''),
            ["Email Parts Description"] = column_ifexists('emailPartsDescription', ''),
            ["Message ID"] = column_ifexists('messageId', ''),
            ["Tag Map Url Reputation Scan Url Block"] = column_ifexists('tagMap_UrlReputationScan_UrlBlock', ''),
            ["Tag Map Customer Managed Urls Managed Url Entry"] = column_ifexists('tagMap_CustomerManagedUrls_ManagedUrlEntry', ''),
            ["Tag Map Customer Managed Urls Blocklisted"] = column_ifexists('tagMap_CustomerManagedUrls_Blocklisted', ''),
            ["Tag Map Av Scanning Content Check Av Signature Name"] = column_ifexists('tagMap_AvScanning_ContentCheck_AvSignatureName', ''),
            ["Tag Map Av Scanning Scanner Info Category Trigger"] = column_ifexists('tagMap_AvScanning_ScannerInfo_CategoryTrigger', ''),
            ["Tag Map Av Scanning Content Check Av Signature File Exts"] = column_ifexists('tagMap_AvScanning_ContentCheck_AvSignatureFileExts', ''),
            ["Tag Map Av Scanning Content Check Url File Download Filename"] = column_ifexists('tagMap_AvScanning_ContentCheck_UrlFileDownloadFilename', ''),
            ["Tag Map Dangerous File Ext Status"] = column_ifexists('tagMap_DangerousFileExt_Status', ''),
            ["Tag Map Url Reputation Scan Status"] = column_ifexists('tagMap_UrlReputationScan_Status', ''),
            ["Tag Map ContentCheck Dangerous Mimetypes Url File Download"] = column_ifexists('tagMap_ContentCheck_DangerousMimetypesUrlFileDownload', ''),
            ["Tag Map ContentCheck Dangerous Exts Url File Download"] = column_ifexists('tagMap_ContentCheck_DangerousExtsUrlFileDownload', ''),
            ["Mimecast Event Id"] = column_ifexists('mimecastEventId', ''),
            ["Mimecast Event Category_"] = column_ifexists('mimecastEventCategory', ''),
            ["Tag Map Customer Managed Urls Status"] = column_ifexists('tagMap_CustomerManagedUrls_Status', '')
        | extend ['Event Time'] = iff(isempty(['Event Time']), now(), todatetime((["Event Time"])))
        | project
            ["Category"],
            ["Time Generated"],
            ["Mimecast Event ID"],
            ["Mimecast Event Category"],
            ["User Email Address"],
            ["From User Email Address"],
            ["Url"],
            ["Ttp Definition"],
            ["Subject"],
            ["Action"],
            ["Admin Override"],
            ["User Override"],
            ["Scan Result"],
            ["Sending IP"],
            ["User Awareness Action"],
            ['Event Time'],
            ["Actions"],
            ["Route"],
            ["Creation Method"],
            ["Email Parts Description"],
            ["Message ID"],
            ["Tag Map Dangerous File Ext Content Check Dangerous Mimetypes Url File Download"],
            ["Tag Map Dangerous File Ext Content Check Dangerous Exts Url File Download"],
            ["Tag Map Advanced Phishing Credential Theft Evidence"],
            ["Tag Map Advanced Phishing Credential Theft Tags"],
            ["Advanced Phishing Result Credential Theft Brands"],
            ["Advanced Phishing Result Credential Theft Evidence"],
            ["Advanced Phishing Result Credential Theft Tags"],
            ["Tag Map Url Reputation Scan Type"],
            ["Tag Map Url Reputation Scan Url"],
            ["Tag Map Dangerous File Ext Inspect File Exts"],
            ["Tag Map Dangerous File Ext Inspect Mime Types"],
            ["Tag Map Dangerous File Ext Content Check Content Scanners Blocked"],
            ["Tag Map Url Reputation Scan Url Block"],
            ["Tag Map Customer Managed Urls Managed Url Entry"],
            ["Tag Map Customer Managed Urls Blocklisted"],
            ["Tag Map Av Scanning Content Check Av Signature Name"],
            ["Tag Map Av Scanning Scanner Info Category Trigger"],
            ["Tag Map Av Scanning Content Check Av Signature File Exts"],
            ["Tag Map Av Scanning Content Check Url File Download Filename"],
            ["Type"],
            ["Tag Map Dangerous File Ext Status"],
            ["Tag Map Url Reputation Scan Status"],
            ["Tag Map ContentCheck Dangerous Mimetypes Url File Download"],
            ["Tag Map ContentCheck Dangerous Exts Url File Download"],
            ["Mimecast Event Id"],
            ["Mimecast Event Category_"],
            ["Tag Map Customer Managed Urls Status"]
    };
    MimecastTTPUrl