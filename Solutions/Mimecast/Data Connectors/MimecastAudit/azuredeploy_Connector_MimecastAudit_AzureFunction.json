{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "FunctionName": {
            "defaultValue": "MimecastADT",
            "minLength": 1,
            "maxLength": 11,
            "type": "string"
        },
        "Location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "The location in which the data collection rules and data collection endpoints should be deployed."
            }
        },
        "WorkspaceName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Microsoft Sentinel Workspace Name of Log Analytics workspace"
            }
        },
        "AzureClientID": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Azure Client ID that you have created during app registration"
            }
        },
        "AzureClientSecret": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "Enter Azure Client Secret that you have created during creating the client secret"
            }
        },
        "AzureTenantID": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Azure Tenant ID of your Azure Active Directory"
            }
        },
        "AzureEntraObjectID": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Object id of your Microsoft Entra App"
            }
        },
        "MimecastBaseURL": {
            "defaultValue": "https://api.services.mimecast.com",
            "type": "string",
            "metadata": {
                "description": "Enter Base URL of Mimecast API 2.0 starting with \"https://\" followed by hostname (Example: https://api.services.mimecast.com)"
            }
        },
        "MimecastClientId": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Enter Mimecast Client ID for Authentication"
            }
        },
        "MimecastClientSecret": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "Enter Mimecast Client Secret for Authentication"
            }
        },
        "MimecastAuditTableName": {
            "type": "string",
            "defaultValue": "Audit",
            "metadata": {
                "description": "Enter name of the table used to store Audit data. Default is 'Audit'"
            }
        },
        "StartDate": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Enter the start date in the 'yyyy-mm-dd' format. If you do not provide a date, data from the last 60 days will be fetched automatically. Ensure that the date is in the past and properly formatted"
            }
        },
        "Schedule": {
            "type": "string",
            "minLength": 11,
            "metadata": {
                "description": "Enter a valid Quartz cron-expression (Example: 0 0 0 * * *)\n\nDo not keep the value empty, minimum value is 10 minutes"
            },
            "defaultValue": "0 0 */1 * * *"
        },
        "LogLevel": {
            "type": "string",
            "metadata": {
                "description": "Add log level or log severity value. Default is 'INFO'"
            },
            "allowedValues": [
                "Debug",
                "Info",
                "Error",
                "Warning"
            ],
            "defaultValue": "Info"
        },
        "AppInsightsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Migrate Classic Application Insights to Log Analytic Workspace which is retiring by 29 Febraury 2024. Use 'Log Analytic Workspace-->Properties' blade having 'Resource ID' property value. This is a fully qualified resourceId which is in format '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}'"
            }
        }
    },
    "variables": {
        "FunctionName": "[concat(toLower(trim(parameters('FunctionName'))), uniqueString(resourceGroup().id))]",
        "StorageSuffix": "[environment().suffixes.storage]",
        "suffix": "[concat('A', uniqueString(resourceGroup().id))]",
        "endpointName": "[concat(toLower(parameters('FunctionName')),'LogsEndpoint', variables('suffix'))]",
        "mainRuleName": "[concat(toLower(parameters('FunctionName')),'MainCollectionRule', variables('suffix'))]",
        "logWsResId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('WorkspaceName'))]",
        "dcrRoleName": "[concat(toLower(parameters('FunctionName')),'EntraRole', variables('suffix'))]",
        "dcrRoleId": "[guid(subscription().id, string(variables('dcrRoleName')))]",
        "scope": "[concat(replace(environment().portal, 'portal', 'monitor'), '/.default')]"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/dataCollectionEndpoints",
            "apiVersion": "2022-06-01",
            "name": "[variables('endpointName')]",
            "location": "[parameters('Location')]",
            "kind": "Linux",
            "properties": {
                "description": "Data collection endpoint for ingestion api",
                "networkAcls": {
                    "publicNetworkAccess": "Enabled"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/tables",
            "apiVersion": "2022-10-01",
            "name": "[concat(parameters('WorkspaceName'), '/', parameters('MimecastAuditTableName'), '_CL')]",
            "properties": {
                "plan": "Analytics",
                "schema": {
                    "name": "[concat(parameters('MimecastAuditTableName'), '_CL')]",
                    "columns": [
                        {
                            "Name": "id",
                            "Type": "string"
                        },
                        {
                            "Name": "auditType",
                            "Type": "string"
                        },
                        {
                            "Name": "user",
                            "Type": "string"
                        },
                        {
                            "Name": "eventTime",
                            "Type": "datetime"
                        },
                        {
                            "Name": "eventInfo",
                            "Type": "string"
                        },
                        {
                            "Name": "category",
                            "Type": "string"
                        },
                        {
                            "Name": "TimeGenerated",
                            "Type": "datetime"
                        }

                    ]
                }
            }
        },         
        {
            "type": "Microsoft.Insights/dataCollectionRules",
            "apiVersion": "2022-06-01",
            "name": "[variables('mainRuleName')]",
            "location": "[parameters('Location')]",
            "dependsOn": [
                "[concat(variables('logWsResId'), '/tables/', parameters('MimecastAuditTableName'), '_CL')]"
            ],
            "properties": {
                "dataCollectionEndpointId": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', variables('endpointName'))]",
                "streamDeclarations": {
                    "[concat('Custom-', parameters('MimecastAuditTableName'))]": {
                        "columns": [
                            {
                                "Name": "id",
                                "Type": "string"
                            },
                            {
                                "Name": "auditType",
                                "Type": "string"
                            },
                            {
                                "Name": "user",
                                "Type": "string"
                            },
                            {
                                "Name": "eventTime",
                                "Type": "datetime"
                            },
                            {
                                "Name": "eventInfo",
                                "Type": "string"
                            },
                            {
                                "Name": "category",
                                "Type": "string"
                            },
                            {
                                "Name": "TimeGenerated",
                                "Type": "datetime"
                            }
                        ]
                    }
                },
                "destinations": {
                    "logAnalytics": [
                        {
                            "workspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]",
                            "name": "[concat('RuleDest', variables('suffix'))]"
                        }
                    ]
                },
                "dataFlows": [
                    {
                        "streams": [
                            "[concat('Custom-', parameters('MimecastAuditTableName'))]"
                        ],
                        "destinations": [
                            "[concat('RuleDest', variables('suffix'))]"
                        ],
                        "transformKql": "source\n| extend TimeGenerated = todatetime(now())",
                        "outputStream": "[concat('Custom-', parameters('MimecastAuditTableName'), '_CL')]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('FunctionName')]",
                "WorkspaceResourceId": "[trim(parameters('AppInsightsWorkspaceResourceID'))]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[tolower(variables('FunctionName'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "minimumTlsVersion": "TLS1_2"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('FunctionName')))]",
                "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
            ],
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('FunctionName')]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "alwaysOn": true,
                "reserved": true,
                "siteConfig": {
                    "linuxFxVersion": "python|3.12"
                }
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('FunctionName'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "FUNCTIONS_WORKER_RUNTIME": "python",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('FunctionName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('FunctionName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "Function_App_Name": "[variables('FunctionName')]",
                        "AZURE_CLIENT_ID": "[parameters('AzureClientID')]",
                        "AZURE_CLIENT_SECRET": "[parameters('AzureClientSecret')]",
                        "AZURE_TENANT_ID": "[parameters('AzureTenantID')]",
                        "Azure_Workspace_Name": "[parameters('WorkspaceName')]",
                        "BaseURL": "[trim(parameters('MimecastBaseURL'))]",
                        "StartDate": "[trim(parameters('StartDate'))]",
                        "MimecastClientID": "[trim(parameters('MimecastClientId'))]",
                        "MimecastClientSecret": "[trim(parameters('MimecastClientSecret'))]",
                        "MimecastAuditTableName": "[parameters('MimecastAuditTableName')]",
                        "File_Share_Name": "mimecast-checkpoints",
                        "Schedule": "[trim(parameters('Schedule'))]",
                        "LogLevel": "[trim(parameters('LogLevel'))]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/sentinel-Mimecast_Audit_Updated-functionapp",
                        "SCOPE": "[variables('scope')]",
                        "AZURE_DATA_COLLECTION_ENDPOINT": "[reference(resourceId('Microsoft.Insights/dataCollectionEndpoints', variables('endpointName'))).logsIngestion.endpoint]",
                        "AZURE_DATA_COLLECTION_RULE_ID_MAIN_TABLES": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', variables('mainRuleName'))).immutableId]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('FunctionName'), '/default/', tolower(variables('FunctionName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('FunctionName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('FunctionName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        },
        {
            "type": "Microsoft.Authorization/roleDefinitions",
            "apiVersion": "2022-04-01",
            "name": "[variables('dcrRoleId')]",
            "properties": {
                "assignableScopes": [
                    "[resourceGroup().id]",
                    "[resourceId('Microsoft.Insights/dataCollectionRules', variables('mainRuleName'))]"
                ],
                "description": "Entra ID application access role",
                "permissions": [
                    {
                        "actions": [
                            "Microsoft.Insights/Register/Action",
                            "Microsoft.Support/*",
                            "Microsoft.Resources/subscriptions/resourceGroups/read"
                        ],
                        "dataActions": [
                            "Microsoft.Insights/Metrics/Write",
                            "Microsoft.Insights/Telemetry/Write"
                        ]
                    }
                ],
                "roleName": "[variables('dcrRoleName')]",
                "type": "customRole"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(resourceGroup().id, concat('Main DCR Role assignment', variables('FunctionName')))]",
            "dependsOn": [
                "[variables('dcrRoleId')]",
                "[variables('mainRuleName')]"
            ],
            "scope": "[resourceId('Microsoft.Insights/dataCollectionRules', variables('mainRuleName'))]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('dcrRoleId'))]",
                "principalId": "[parameters('AzureEntraObjectID')]"
            }
        }
    ]
}