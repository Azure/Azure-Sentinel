{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Cyble Inc",
    "comments": "Solution template for Cyble Vision"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "_solutionName": "Cyble Vision",
    "_solutionVersion": "3.0.0",
    "solutionId": "cybleinc1737472004964.cybleinc1737472004964-azure-sentinel-offerid",
    "_solutionId": "[variables('solutionId')]",
    "IoC-Enrichment": "IoC-Enrichment",
    "_IoC-Enrichment": "[variables('IoC-Enrichment')]",
    "TemplateEmptyArray": "[json('[]')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "IoC-Enrichment",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "TI-Ingest": "TI-Ingest",
    "_TI-Ingest": "[variables('TI-Ingest')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "TI-Ingest",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Cyble-IOC-Enrichment-Playbook Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Cyble-IOC-Enrichment-Playbook",
              "type": "String"
            },
            "ScheduleFrequencyInMinutes": {
              "defaultValue": "60",
              "type": "String"
            },
            "CybleApiBearerToken": {
              "defaultValue": "",
              "type": "securestring"
            },
            "WorkspaceID": {
              "defaultValue": "",
              "type": "String"
            }
          },
          "variables": {
            "apiConnectionResourceName": "[[concat(parameters('PlaybookName'), '-ti-conn-', uniqueString(resourceGroup().id, parameters('PlaybookName')))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/',  variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('apiConnectionResourceName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('apiConnectionResourceName')]",
                "api": {
                  "id": "[[variables('_connection-1')]",
                  "type": "Microsoft.Web/locations/managedApis"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('apiConnectionResourceName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "parameters": {
                  "ScheduleFrequencyInMinutes": {
                    "type": "String",
                    "value": "[[parameters('ScheduleFrequencyInMinutes')]"
                  },
                  "CybleApiBearerToken": {
                    "type": "SecureString",
                    "value": "[[parameters('CybleApiBearerToken')]"
                  },
                  "WorkspaceID": {
                    "type": "String",
                    "value": "[[parameters('WorkspaceID')]"
                  },
                  "$connections": {
                    "type": "Object",
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('apiConnectionResourceName'))]",
                        "connectionName": "[[variables('apiConnectionResourceName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/',  variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "alternativeParameterValues": {
                          "authenticationType": "ManagedServiceIdentity"
                        }
                      }
                    }
                  }
                },
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "ScheduleFrequencyInMinutes": {
                      "type": "String"
                    },
                    "CybleApiBearerToken": {
                      "type": "SecureString"
                    },
                    "$connections": {
                      "type": "Object"
                    },
                    "WorkspaceID": {
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Parse_FullIncident": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerOutputs()?['body/object']",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "Properties": {
                              "type": "object",
                              "properties": {
                                "relatedEntities": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Parse_Entities": {
                      "runAfter": {
                        "Parse_FullIncident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Parse_FullIncident')?['Properties']?['relatedEntities']",
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "Initialize_Enrichment_Array": {
                      "runAfter": {
                        "Parse_Entities": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "FormattedComments",
                            "type": "Array",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        ]
                      }
                    },
                    "For_each_Entity": {
                      "foreach": "@body('Parse_Entities')",
                      "actions": {
                        "HTTP_Get_IOC_Data": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@concat('https://api.cyble.ai/engine/api/v2/y/iocs?ioc=', coalesce(if(equals(toLower(item()?['kind']),'filehash'), item()?['properties']?['hashValue'], null), if(equals(toLower(item()?['kind']),'ip'), item()?['properties']?['address'], null), if(equals(toLower(item()?['kind']),'url'), item()?['properties']?['url'], null), if(equals(toLower(item()?['kind']),'host'), item()?['properties']?['hostName'], null), if(equals(toLower(item()?['kind']),'mailbox'), item()?['properties']?['mailboxPrimaryAddress'], null), ''))",
                            "method": "GET",
                            "headers": {
                              "Authorization": "@concat('Bearer ', parameters('CybleApiBearerToken'))",
                              "Content-Type": "application/json"
                            }
                          }
                        },
                        "Parse_IOC_Response": {
                          "runAfter": {
                            "HTTP_Get_IOC_Data": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('HTTP_Get_IOC_Data')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "success": {
                                  "type": "boolean"
                                },
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "iocs": {
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ioc": {
                                            "type": "string"
                                          },
                                          "ioc_type": {
                                            "type": "string"
                                          },
                                          "first_seen": {
                                            "type": "number"
                                          },
                                          "last_seen": {
                                            "type": "number"
                                          },
                                          "risk_score": {
                                            "type": "integer"
                                          },
                                          "sources": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "behaviour_tags": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "confidence_rating": {
                                            "type": "string"
                                          },
                                          "target_countries": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "target_regions": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "target_industries": {
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "related_malware": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "related_threat_actors": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "is_whitelisted": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    },
                                    "pagination": {
                                      "type": "object",
                                      "properties": {
                                        "total_count": {
                                          "type": "integer"
                                        },
                                        "page": {
                                          "type": "integer"
                                        },
                                        "limit": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Compose_Formatted_Comment": {
                          "runAfter": {
                            "Parse_IOC_Response": [
                              "Succeeded"
                            ]
                          },
                          "type": "Compose",
                          "inputs": "@concat(\n  '---\\n**Entity:** ', coalesce(item()?['properties']?['address'], item()?['properties']?['hostName'], item()?['properties']?['url'], item()?['properties']?['mailboxPrimaryAddress'], item()?['properties']?['hashValue'], 'Unknown'), '\\n',\n  if(\n    equals(body('Parse_IOC_Response')?['success'], true),\n    concat(\n      '**IOC:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'No IOCs found.',\n          first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['ioc']\n        ), '\\n',\n      '**Type:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'N/A',\n          first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['ioc_type']\n        ), '\\n',\n      '**Risk Score:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'N/A',\n          string(first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['risk_score'])\n        ), '\\n',\n      '**Confidence Rating:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'N/A',\n          first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['confidence_rating']\n        ), '\\n',\n      '**Sources:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'N/A',\n          join(first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['sources'], ', ')\n        ), '\\n',\n      '**Malware:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'N/A',\n          string(first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['related_malware'])\n        ), '\\n',\n      '**Threat Actors:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'N/A',\n          string(first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['related_threat_actors'])\n        ), '\\n',\n      '**Behavior Tags:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'N/A',\n          if(\n            or(\n              equals(first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['behaviour_tags'], null),\n              equals(first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['behaviour_tags'], 'null')\n            ),\n            'None',\n            join(first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['behaviour_tags'], ', ')\n          )\n        ), '\\n',\n      '**First Seen:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'N/A',\n          string(first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['first_seen'])\n        ), '\\n',\n      '**Last Seen:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'N/A',\n          string(first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['last_seen'])\n        ), '\\n',\n      '**Is Whitelisted:** ',\n        if(\n          equals(\n            length(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))),\n            0\n          ),\n          'N/A',\n          string(first(coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]')))?['is_whitelisted'])\n        ), '\\n'\n    ),\n    'API returned an error or no data available.\\n'\n  )\n)"
                        },
                        "Append_Comment_to_Array": {
                          "runAfter": {
                            "Compose_Formatted_Comment": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "FormattedComments",
                            "value": "@outputs('Compose_Formatted_Comment')"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_Enrichment_Array": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Check_If_Comments_Not_Empty": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@body('Parse_FullIncident')?['id']",
                              "message": "<p class=\"editor-paragraph\">@{concat('**IOC Enrichment Results**\\\\n\\\\n', join(variables('FormattedComments'), '\\\\n'))}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "runAfter": {
                        "For_each_Entity": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "No_Comments_Skip": {
                            "type": "Compose",
                            "inputs": "No enriched IOCs found; skipping comment."
                          }
                        }
                      },
                      "expression": "@greater(length(variables('FormattedComments')), 0)",
                      "type": "If"
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Cyble Vision",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Cyble Inc"
                },
                "support": {
                  "name": "Cyble Support",
                  "email": "csm@cyble.com",
                  "tier": "Partner",
                  "link": "https://cyble.com/talk-to-sales/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Cyble-IOC_Enrichment-Playbook",
            "description": "This playbook leverages the Cyble API to enrich IP, Domain, Url & Hash indicators, found in Microsoft Sentinel incidents, with the following context: Risk Score, Confidence, etc. The enrichment content will be posted as a comment in the Microsoft Sentinel incident",
            "prerequisites": [
              "To use the Cyble Endpoints for Azure connector, you will need a valid API token from Cyble Vision platform."
            ],
            "postDeployment": [
              ""
            ],
            "lastUpdateTime": "2025-05-06T00:00:00Z",
            "entities": [
              "ip",
              "url",
              "filehash"
            ],
            "tags": [
              "Enrichment"
            ],
            "releaseNotes": [
              {
                "version": "1.0",
                "title": "Cyble-IOC_Enrichment",
                "notes": [
                  "Initial version"
                ]
              }
            ],
            "basics": {
              "displayName": "Cyble IOC Enrichment",
              "description": "Enrich IOCs using the Cyble Threat Intelligence API.",
              "category": "Threat Intelligence"
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "Cyble-IOC-Enrichment-Playbook",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Cyble-TI-Ingest-Playbook Playbook with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Cyble-TI-Ingest-Playbook",
              "type": "String"
            },
            "ScheduleFrequencyInMinutes": {
              "defaultValue": "60",
              "type": "String"
            },
            "CybleApiBearerToken": {
              "defaultValue": "",
              "type": "SecureString"
            },
            "WorkspaceID": {
              "defaultValue": "",
              "type": "String"
            }
          },
          "variables": {
            "apiConnectionResourceName": "[[concat(parameters('PlaybookName'), '-ti-conn-', uniqueString(resourceGroup().id, parameters('PlaybookName')))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('apiConnectionResourceName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('apiConnectionResourceName')]",
                "api": {
                  "id": "[[variables('_connection-1')]",
                  "type": "Microsoft.Web/locations/managedApis"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('apiConnectionResourceName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "parameters": {
                  "ScheduleFrequencyInMinutes": {
                    "type": "String",
                    "value": "[[parameters('ScheduleFrequencyInMinutes')]"
                  },
                  "CybleApiBearerToken": {
                    "type": "securestring",
                    "value": "[[parameters('CybleApiBearerToken')]"
                  },
                  "WorkspaceID": {
                    "type": "String",
                    "value": "[[parameters('WorkspaceID')]"
                  },
                  "$connections": {
                    "type": "Object",
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('apiConnectionResourceName'))]",
                        "connectionName": "[[variables('apiConnectionResourceName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "alternativeParameterValues": {
                          "authenticationType": "ManagedServiceIdentity"
                        }
                      }
                    }
                  }
                },
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "ScheduleFrequencyInMinutes": {
                      "type": "String"
                    },
                    "CybleApiBearerToken": {
                      "type": "securestring"
                    },
                    "$connections": {
                      "type": "Object"
                    },
                    "WorkspaceID": {
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Recurrence_Trigger": {
                      "type": "Recurrence",
                      "recurrence": {
                        "frequency": "Minute",
                        "interval": "@int(parameters('ScheduleFrequencyInMinutes'))"
                      }
                    }
                  },
                  "actions": {
                    "Initialize_StartDateTimeFull": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "StartDateTimeFull",
                            "type": "String",
                            "value": "@{formatDateTime(addMinutes(utcNow(), mul(-1, int(parameters('ScheduleFrequencyInMinutes')))), 'yyyy-MM-ddTHH:mm:ssZ')}"
                          }
                        ]
                      }
                    },
                    "Initialize_EndDateTimeFull": {
                      "type": "InitializeVariable",
                      "runAfter": {
                        "Initialize_StartDateTimeFull": [
                          "Succeeded"
                        ]
                      },
                      "inputs": {
                        "variables": [
                          {
                            "name": "EndDateTimeFull",
                            "type": "String",
                            "value": "@{formatDateTime(utcNow(), 'yyyy-MM-ddTHH:mm:ssZ')}"
                          }
                        ]
                      }
                    },
                    "HTTP_Get_IOC_Data": {
                      "type": "Http",
                      "runAfter": {
                        "Initialize_EndDateTimeFull": [
                          "Succeeded"
                        ]
                      },
                      "inputs": {
                        "method": "GET",
                        "uri": "@concat('https://api.cyble.ai/engine/api/v2/y/iocs?sortBy=last_seen&order=desc&limit=100&startDate=', variables('StartDateTimeFull'), '&endDate=', variables('EndDateTimeFull'))",
                        "headers": {
                          "Authorization": "@concat('Bearer ', parameters('CybleApiBearerToken'))",
                          "Content-Type": "application/json"
                        }
                      }
                    },
                    "Parse_IOC_Response": {
                      "type": "ParseJson",
                      "runAfter": {
                        "HTTP_Get_IOC_Data": [
                          "Succeeded"
                        ]
                      },
                      "inputs": {
                        "content": "@body('HTTP_Get_IOC_Data')",
                        "schema": {
                          "type": "object"
                        }
                      }
                    },
                    "For_Each_IOC": {
                      "type": "Foreach",
                      "runAfter": {
                        "Parse_IOC_Response": [
                          "Succeeded"
                        ]
                      },
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      },
                      "foreach": "@coalesce(body('Parse_IOC_Response')?['data']?['iocs'], json('[]'))",
                      "actions": {
                        "Check_If_in_lastNmins": {
                          "type": "If",
                          "expression": "@and(\n  greaterOrEquals(\n    item()?['last_seen'],\n    div(\n      sub(\n        ticks(variables('StartDateTimeFull')),\n        ticks('1970-01-01T00:00:00Z')\n      ),\n      10000000\n    )\n  ),\n  lessOrEquals(\n    item()?['last_seen'],\n    div(\n      sub(\n        ticks(variables('EndDateTimeFull')),\n        ticks('1970-01-01T00:00:00Z')\n      ),\n      10000000\n    )\n  )\n)",
                          "actions": {
                            "Upload_Indicators_v2": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/V2/ThreatIntelligence/@{encodeURIComponent(parameters('WorkspaceID'))}/UploadIndicators/",
                                "body": {
                                  "sourcesystem": "CybleVision",
                                  "indicators": [
                                    {
                                      "DisplayName": "@item()?['ioc']",
                                      "Name": "@item()?['ioc']",
                                      "IndicatorValue": "@item()?['ioc']",
                                      "IndicatorType": "@if(equals(item()?['ioc_type'],'FileHash-SHA256'),'filehash-sha256',if(equals(item()?['ioc_type'],'IPv4'),'ipv4address','url'))",
                                      "ThreatType": "malicious-activity",
                                      "Confidence": "@if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 80), 5, if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 60), 4, if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 40), 3, if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 20), 2, 1))))",
                                      "SeverityLevel": "@if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 80), 5, if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 60), 4, if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 40), 3, if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 20), 2, 1))))",
                                      "severity_level": "@if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 80), 5, if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 60), 4, if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 40), 3, if(greaterOrEquals(coalesce(item()?['risk_score'], 0), 20), 2, 1))))",
                                      "Tags": [
                                        "@coalesce(item()?['confidence_rating'],'Unknown')"
                                      ],
                                      "ExpirationDateTime": "@addDays(utcNow(),7)",
                                      "description": "IOC from Cyble",
                                      "labels": [
                                        "@join(coalesce(item()?['behaviour_tags'], json('[]')), ',')"
                                      ],
                                      "pattern": "@if(equals(item()?['ioc_type'],'FileHash-SHA256'), concat('[[file:hashes.''SHA-256'' = ''', item()?['ioc'], ''']]'), if(equals(item()?['ioc_type'],'IPv4'), concat('[[ipv4-addr:value = ''', item()?['ioc'], ''']]'), concat('[[url:value = ''', item()?['ioc'], ''']]')))",
                                      "valid_from": "@utcNow()",
                                      "type": "indicator",
                                      "id": "@concat('indicator--', guid())",
                                      "created": "@utcNow()",
                                      "modified": "@utcNow()",
                                      "pattern_type": "stix",
                                      "spec_version": "2.1"
                                    }
                                  ]
                                },
                                "retryPolicy": {
                                  "type": "Exponential",
                                  "count": 5,
                                  "interval": "PT15S"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "tags": {
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Cyble Vision",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Cyble Inc"
                },
                "support": {
                  "name": "Cyble Support",
                  "email": "csm@cyble.com",
                  "tier": "Partner",
                  "link": "https://cyble.com/talk-to-sales/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Cyble-ThreatIntelligence-Ingest-Playbook",
            "description": "This playbook imports IoC lists from Cyble and stores them as Threat Intelligence Indicators in Microsoft Sentinel, for detection purposes.\n\nThis playbook depends on Cyble-ThreatIntelligence-Ingest that need to be installed **manually** before installing this playbook.",
            "prerequisites": [
              "First install the Cyble-ThreatIntelligenceImport playbook.",
              "To use the Cyble for Azure connector, you will need a valid API token from Cyble"
            ],
            "lastUpdateTime": "2025-05-06T00:00:00Z",
            "tags": [
              "Threat Intelligence"
            ],
            "releaseNotes": [
              {
                "version": "1.0",
                "title": "Cyble-ThreatIntelligence-Ingest",
                "description": "This playbook imports IoC lists from Cyble and stores them as Threat Intelligence Indicators in Microsoft Sentinel, for detection purposes.\n\nThis playbook depends on Cyble-ThreatIntelligence-Ingest that need to be installed **manually** before installing this playbook.",
                "prerequisites": [
                  "First install the Cyble-ThreatIntelligenceImport playbook.",
                  "To use the Cyble for Azure connector, you will need a valid API token from Cyble"
                ],
                "prerequisitesDeployTemplateFile": "../azuredeploy.json",
                "lastUpdateTime": "2025-05-06T00:00:00Z",
                "entities": [],
                "tags": [
                  "Threat Intelligence"
                ],
                "support": {
                  "tier": "Partner",
                  "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
                },
                "author": {
                  "name": "Cyble Inc."
                },
                "releaseNotes": [
                  {
                    "version": "1.0",
                    "title": "Cyble-ThreatIntelligence-Ingest",
                    "notes": [
                      "Initial version"
                    ]
                  }
                ]
              }
            ],
            "basics": {
              "displayName": "Cyble Threat Intelligence Ingestion",
              "description": "Import IOCs using the Cyble Threat Intelligence API.",
              "category": "Threat Intelligence"
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "Cyble-TI-Ingest-Playbook",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Cyble Vision",
        "publisherDisplayName": "Cyble Support",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Cyble%20Vision/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>This solution provides playbooks for Cyble Vision Threat Intelligence ingestion and IOC enrichment, integrating Cyble APIs with Microsoft Sentinel.</p>\n<p><strong>Playbooks:</strong> 2</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/CybleLogo.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Cyble Vision",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Cyble Inc"
        },
        "support": {
          "name": "Cyble Support",
          "email": "csm@cyble.com",
          "tier": "Partner",
          "link": "https://cyble.com/talk-to-sales/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Playbook",
              "contentId": "[variables('_IoC-Enrichment')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_TI-Ingest')]",
              "version": "[variables('playbookVersion2')]"
            }
          ]
        },
        "firstPublishDate": "2025-05-05",
        "providers": [
          "Cyble"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
