{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Add Dynatrace Application Security Attack Source IP Address to Threat Intelligence",
        "description": "This playbook will add an attackers source ip to Threat Intelligence when a new incident is opened in Microsoft Sentinel.",
        "prerequisites": [
            "1. Dynatrace tenant (ex. xyz.dynatrace.com)",
            "2. Dynatrace Access Token, the token should have Read attacks (attacks.read) scope."
        ],
        "lastUpdateTime": "2022-10-19T00:00:00.000Z",
        "tags": [ "Attacks" ],
        "postDeployment": [
            "After deployment, open the playbook to configure all connections and press save."
        ],
        "support": {
            "tier": "community"
        },
        "author": {
            "name": "Dynatrace"
        },
        "releaseNotes": [
            {
                "version": "1.0.0",
                "title": "Add Dynatrace Application Security Attack Source IP Address to Threat Intelligence",
                "notes": [
                    "Initial version",
                    "Updated user-agent strings used when calling Dynatrace REST API's"
                ]
            }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AddDynatraceApplicationSecSrcIPAddressTI",
            "type": "string",
            "metadata": {
                "description": "Alert trigger"
            }
        },
        "DynatraceTenant": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Dynatrace tenant (ex. xyz.dynatrace.com)"
            }
        },
        "KeyvaultName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Enter the key vault name where Dynatrace Access Token is stored"
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('microsoftsentinel-', parameters('PlaybookName'))]",
        "MicrosoftGraphSecurityConnectionName": "[concat('microsoftgraphsecurity-', parameters('PlaybookName'))]",
        "KeyvaultConnectionName": "[concat('akv-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('MicrosoftGraphSecurityConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftGraphSecurityConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/microsoftgraphsecurity')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/Connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('KeyvaultConnectionName')]",
            "kind": "V1",
            "location": "[resourceGroup().location]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueSet": {
                    "name": "oauthMI",
                    "values": {
                        "vaultName": {
                            "value": "[parameters('KeyvaultName')]"
                        }
                    }
                },
                "displayName": "[variables('KeyvaultConnectionName')]"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2019-05-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "AddDynatraceApplicationSecurityAttackSourceIPAddressThreatIntelligence-Alert",
                "hidden-SentinelTemplateVersion": "1.0.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftGraphSecurityConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "type": "Object"
                        },
                        "KeyvaultName": {
                            "type": "String"
                        },
                        "Tenant": {
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_alert": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Get_Dynatrace_Access_Token": {
                            "runAfter": {
                                "Parse_Incident_Alert_Custom_Body_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('DynatraceAccessToken')}/value"
                            }
                        },
                        "Get_Dynatrace_Attack_Details": {
                            "runAfter": {
                                "Get_Dynatrace_Access_Token": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Authorization": "Api-Token @{body('Get_Dynatrace_Access_Token')?['value']}",
                                    "User-Agent" : "dynatrace-microsoft-sentinel/3.x/playbooks/adddynatraceapplicationsecurityattacksourceipaddressti"
                                },
                                "method": "GET",
                                "queries": {
                                    "fields": "+attacker"
                                },
                                "uri": "https://@{parameters('Tenant')}/api/v2/attacks/@{first(body('Parse_Incident_Alert_Custom_Body_JSON')?['attackIdentifier'])}"
                            }
                        },
                        "If_SourceIP_available_create_threat_indicator": {
                            "actions": {
                                "Does_tiIndicator_already_Exist": {
                                    "actions": {
                                        "Create_tiIndicator_for_attackers_source_ip": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "action": "alert",
                                                    "confidence": 0,
                                                    "description": "Dynatrace Application Security - @{body('Parse_Dynatrace_Attack_JSON')?['attackType']} Attack Detected",
                                                    "expirationDateTime": "@{addDays(utcNow(),7)}",
                                                    "externalId": "@body('Parse_Dynatrace_Attack_JSON')?['attackId']",
                                                    "networkSourceCidrBlock": "@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}/32",
                                                    "severity": 0,
                                                    "targetProduct": "Azure Sentinel",
                                                    "threatType": "WatchList",
                                                    "tlpLevel": "white"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/beta/security/tiIndicators"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Get_Existing_tiIndicator": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "For_each_tiIndicator": {
                                                "foreach": "@body('Get_Existing_tiIndicator')?['value']",
                                                "actions": {
                                                    "Update_tiIndicator_expiration": {
                                                        "runAfter": {},
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "expirationDateTime": "@{addDays(utcNow(),7)}",
                                                                "targetProduct": "Azure Sentinel"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                                                }
                                                            },
                                                            "method": "patch",
                                                            "path": "/beta/security/tiIndicators/@{encodeURIComponent(items('For_each_tiIndicator')?['id'])}"
                                                        }
                                                    }
                                                },
                                                "runAfter": {},
                                                "type": "Foreach",
                                                "runtimeConfiguration": {
                                                    "concurrency": {
                                                        "repetitions": 1
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "lessOrEquals": [
                                                    "@body('Get_Existing_tiIndicator')?['@odata.count']",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Get_Existing_tiIndicator": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/beta/security/tiIndicators",
                                        "queries": {
                                            "$count": "true",
                                            "$filter": "externalId eq '@{body('Parse_Dynatrace_Attack_JSON')?['attackId']}' and networkSourceCidrBlock eq '@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}/32'"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_Dynatrace_Attack_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Dynatrace_did_not_supply_a_source_ip_for_attack": {
                                        "runAfter": {},
                                        "type": "Terminate",
                                        "inputs": {
                                            "runStatus": "Succeeded"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']",
                                                ""
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Parse_Dynatrace_Attack_JSON": {
                            "runAfter": {
                                "Get_Dynatrace_Attack_Details": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_Dynatrace_Attack_Details')",
                                "schema": {
                                    "properties": {
                                        "affectedEntities": {
                                            "properties": {
                                                "processGroup": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "processGroupInstance": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "attackId": {
                                            "type": "string"
                                        },
                                        "attackType": {
                                            "type": "string"
                                        },
                                        "attacker": {
                                            "properties": {
                                                "sourceIp": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "displayId": {
                                            "type": "string"
                                        },
                                        "displayName": {
                                            "type": "string"
                                        },
                                        "state": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_Incident_Alert_Custom_Body_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['ExtendedProperties']?['Custom Details']",
                                "schema": {
                                    "properties": {
                                        "AttackIdentifier": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "AttackState": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "AttackType": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "DisplayIdentifier": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "microsoftsentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "microsoftgraphsecurity": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftGraphSecurityConnectionName'))]",
                                "connectionName": "[variables('MicrosoftGraphSecurityConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/microsoftgraphsecurity')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                                "connectionName": "[variables('KeyvaultConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    },
                    "KeyvaultName": {
                        "value": "[parameters('KeyvaultName')]"
                    },
                    "Tenant": {
                        "value": "[parameters('DynatraceTenant')]"
                    }
                }
            }
        }
    ]
}