{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Dynatrace - microsoftalliances@dynatrace.com",
    "comments": "Solution template for Dynatrace"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Dynatrace",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "email": "microsoftalliances@dynatrace.com",
    "_email": "[variables('email')]",
    "_solutionName": "Dynatrace",
    "_solutionVersion": "3.0.1",
    "solutionId": "dynatrace.dynatrace_azure_sentinel",
    "_solutionId": "[variables('solutionId')]",
    "workbookVersion1": "3.0.1",
    "workbookContentId1": "DynatraceWorkbooks",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.0.1",
      "_analyticRulecontentId1": "1b0b2065-8bac-5a00-83c4-1b58f69ac212",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1b0b2065-8bac-5a00-83c4-1b58f69ac212')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1b0b2065-8bac-5a00-83c4-1b58f69ac212')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1b0b2065-8bac-5a00-83c4-1b58f69ac212','-', '1.0.1')))]"
    },
    "analyticRuleObject2": {
      "analyticRuleVersion2": "1.0.2",
      "_analyticRulecontentId2": "305093b4-0fa2-57bc-bced-caea782a6e9c",
      "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '305093b4-0fa2-57bc-bced-caea782a6e9c')]",
      "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('305093b4-0fa2-57bc-bced-caea782a6e9c')))]",
      "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','305093b4-0fa2-57bc-bced-caea782a6e9c','-', '1.0.2')))]"
    },
    "analyticRuleObject3": {
      "analyticRuleVersion3": "1.0.1",
      "_analyticRulecontentId3": "af99b078-124b-543a-9a50-66ef87c09f6a",
      "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'af99b078-124b-543a-9a50-66ef87c09f6a')]",
      "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('af99b078-124b-543a-9a50-66ef87c09f6a')))]",
      "_analyticRulecontentProductId3": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','af99b078-124b-543a-9a50-66ef87c09f6a','-', '1.0.1')))]"
    },
    "analyticRuleObject4": {
      "analyticRuleVersion4": "1.0.1",
      "_analyticRulecontentId4": "ff0af873-a2f2-4233-8412-0ef4e00b0156",
      "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ff0af873-a2f2-4233-8412-0ef4e00b0156')]",
      "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ff0af873-a2f2-4233-8412-0ef4e00b0156')))]",
      "_analyticRulecontentProductId4": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ff0af873-a2f2-4233-8412-0ef4e00b0156','-', '1.0.1')))]"
    },
    "analyticRuleObject5": {
      "analyticRuleVersion5": "1.0.1",
      "_analyticRulecontentId5": "415978ff-074e-4203-824a-b06153d77bf7",
      "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '415978ff-074e-4203-824a-b06153d77bf7')]",
      "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('415978ff-074e-4203-824a-b06153d77bf7')))]",
      "_analyticRulecontentProductId5": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','415978ff-074e-4203-824a-b06153d77bf7','-', '1.0.1')))]"
    },
    "Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence": "Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence",
    "_Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence": "[variables('Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence')]",
    "playbookVersion1": "1.0.0",
    "playbookContentId1": "Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "Enrich_DynatraceApplicationSecurityAttackIncident": "Enrich_DynatraceApplicationSecurityAttackIncident",
    "_Enrich_DynatraceApplicationSecurityAttackIncident": "[variables('Enrich_DynatraceApplicationSecurityAttackIncident')]",
    "playbookVersion2": "3.0.1",
    "playbookContentId2": "Enrich_DynatraceApplicationSecurityAttackIncident",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "Enrich-DynatraceAppSecAttackMSDefenderXDR": "Enrich-DynatraceAppSecAttackMSDefenderXDR",
    "_Enrich-DynatraceAppSecAttackMSDefenderXDR": "[variables('Enrich-DynatraceAppSecAttackMSDefenderXDR')]",
    "playbookVersion3": "1.0.0",
    "playbookContentId3": "Enrich-DynatraceAppSecAttackMSDefenderXDR",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3'))))]",
    "_playbookcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId3'),'-', variables('playbookVersion3'))))]",
    "Enrich-DynatraceAppSecAttackWithSecurityAlerts": "Enrich-DynatraceAppSecAttackWithSecurityAlerts",
    "_Enrich-DynatraceAppSecAttackWithSecurityAlerts": "[variables('Enrich-DynatraceAppSecAttackWithSecurityAlerts')]",
    "playbookVersion4": "1.0.0",
    "playbookContentId4": "Enrich-DynatraceAppSecAttackWithSecurityAlerts",
    "_playbookContentId4": "[variables('playbookContentId4')]",
    "playbookId4": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId4'))]",
    "playbookTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId4'))))]",
    "_playbookcontentProductId4": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId4'),'-', variables('playbookVersion4'))))]",
    "Ingest-DynatraceMSDefenderXDR": "Ingest-DynatraceMSDefenderXDR",
    "_Ingest-DynatraceMSDefenderXDR": "[variables('Ingest-DynatraceMSDefenderXDR')]",
    "playbookVersion5": "1.0",
    "playbookContentId5": "Ingest-DynatraceMSDefenderXDR",
    "_playbookContentId5": "[variables('playbookContentId5')]",
    "playbookId5": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId5'))]",
    "playbookTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId5'))))]",
    "_playbookcontentProductId5": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId5'),'-', variables('playbookVersion5'))))]",
    "Ingest-DynatraceMSSentinelSecurityAlerts": "Ingest-DynatraceMSSentinelSecurityAlerts",
    "_Ingest-DynatraceMSSentinelSecurityAlerts": "[variables('Ingest-DynatraceMSSentinelSecurityAlerts')]",
    "playbookVersion6": "1.0",
    "playbookContentId6": "Ingest-DynatraceMSSentinelSecurityAlerts",
    "_playbookContentId6": "[variables('playbookContentId6')]",
    "playbookId6": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId6'))]",
    "playbookTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId6'))))]",
    "_playbookcontentProductId6": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId6'),'-', variables('playbookVersion6'))))]",
    "uiConfigId1": "DynatraceAttacks",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "DynatraceAttacks",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "uiConfigId2": "DynatraceRuntimeVulnerabilities",
    "_uiConfigId2": "[variables('uiConfigId2')]",
    "dataConnectorContentId2": "DynatraceRuntimeVulnerabilities",
    "_dataConnectorContentId2": "[variables('dataConnectorContentId2')]",
    "dataConnectorId2": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
    "_dataConnectorId2": "[variables('dataConnectorId2')]",
    "dataConnectorTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId2'))))]",
    "dataConnectorVersion2": "1.0.0",
    "_dataConnectorcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId2'),'-', variables('dataConnectorVersion2'))))]",
    "uiConfigId3": "DynatraceProblems",
    "_uiConfigId3": "[variables('uiConfigId3')]",
    "dataConnectorContentId3": "DynatraceProblems",
    "_dataConnectorContentId3": "[variables('dataConnectorContentId3')]",
    "dataConnectorId3": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
    "_dataConnectorId3": "[variables('dataConnectorId3')]",
    "dataConnectorTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId3'))))]",
    "dataConnectorVersion3": "1.0.0",
    "_dataConnectorcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId3'),'-', variables('dataConnectorVersion3'))))]",
    "uiConfigId4": "DynatraceAuditLogs",
    "_uiConfigId4": "[variables('uiConfigId4')]",
    "dataConnectorContentId4": "DynatraceAuditLogs",
    "_dataConnectorContentId4": "[variables('dataConnectorContentId4')]",
    "dataConnectorId4": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId4'))]",
    "_dataConnectorId4": "[variables('dataConnectorId4')]",
    "dataConnectorTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId4'))))]",
    "dataConnectorVersion4": "1.0.0",
    "_dataConnectorcontentProductId4": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId4'),'-', variables('dataConnectorVersion4'))))]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','DynatraceAttacks')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceAttacks')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('DynatraceAttacks-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "DynatraceAttacks-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','DynatraceAuditLogs')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceAuditLogs')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('DynatraceAuditLogs-Parser')))]",
      "parserVersion2": "1.0.0",
      "parserContentId2": "DynatraceAuditLogs-Parser"
    },
    "parserObject3": {
      "_parserName3": "[concat(parameters('workspace'),'/','DynatraceProblems')]",
      "_parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceProblems')]",
      "parserTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('DynatraceProblems-Parser')))]",
      "parserVersion3": "1.0.0",
      "parserContentId3": "DynatraceProblems-Parser"
    },
    "parserObject4": {
      "_parserName4": "[concat(parameters('workspace'),'/','DynatraceSecurityProblems')]",
      "_parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceSecurityProblems')]",
      "parserTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('DynatraceSecurityProblems-Parser')))]",
      "parserVersion4": "1.0.0",
      "parserContentId4": "DynatraceSecurityProblems-Parser"
    },
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Dynatrace Workbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "This workbook brings together queries and visualizations to assist you in identifying potential threats surfaced by Dynatrace."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Overview\\n---\\nGet best-in-class APM from the category leader. Automatic and intelligent observability at scale for cloud native workloads and enterprise apps helps you ensure end-to-end hybrid cloud distributed tracing, optimize service performance, innovate faster, collaborate efficiently, and deliver more value with less effort.\"},\"name\":\"text - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let tmp = datatable(id:string, TimeStamp:real, Type:string) [];\\n\\nlet attacks=DynatraceAttacks\\n    | project id=AttackId, TimeStamp, Type=\\\"attacks\\\";\\n\\nlet problems=DynatraceProblems\\n    | project id=ProblemId, TimeStamp=StartTime, Type=\\\"problems\\\";\\n\\nlet securityProblems=DynatraceSecurityProblems\\n    | project id=SecurityProblemId, TimeStamp=LastUpdatedTimeStamp, Type=\\\"vulnerabilities\\\";\\n\\ntmp\\n| union attacks, problems, securityProblems\\n| summarize  arg_max(TimeStamp, *) by id\\n| summarize  count() by Type\\n| render piechart;\",\"size\":0,\"title\":\"Dynatrace Events by Type\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"DynatraceEventsbyType\"},{\"type\":1,\"content\":{\"json\":\"## Application Events\\n---\\n\"},\"name\":\"ApplicationsAndMicroservices\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DynatraceProblems \\n| summarize  arg_max(StartTime, *) by ProblemId\\n| summarize count() by SeverityLevel\\n| render piechart\",\"size\":1,\"title\":\"Events By Problem Type\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"EventsByProblemType\"},{\"type\":1,\"content\":{\"json\":\"## Application Security Events\\n---\\nEmpower DevSecOps at scale with a unique approach to securing cloud-native applications at runtime combined with intelligent automation.\"},\"name\":\"ApplicationSecurity\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DynatraceSecurityProblems \\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\\n| summarize count() by Severity\\n| render piechart\",\"size\":0,\"title\":\"Vulnerabilities by Severity\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"SecurityProblemsBySeverity\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DynatraceAttacks\\n| summarize  arg_max(TimeStamp, *) by AttackId \\n| summarize count() by AttackType \\n| render piechart\",\"size\":1,\"title\":\"Attacks By Attack Type\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"AttacksByAttackType\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DynatraceSecurityProblems \\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\\n| summarize count() by Technology, ExternalVulnerabilityId\\n| render piechart;\",\"size\":0,\"title\":\"Vulnerability Count by Technology\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"VulnerabilityCountbyTechnology\"},{\"type\":1,\"content\":{\"json\":\"## Tenant Audit Events\\n---\\nAudit logs are crucial for tracking changes and security-relevant events. Dynatrace can log such events so that you can review important changes: when the change was made, by whom, and what was changed.\"},\"name\":\"TenantAuditing\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DynatraceAuditLogs \\n| summarize  arg_max(TimeStamp, *) by LogId \\n| where Category in (\\\"WEB_UI\\\",\\\"TOKEN\\\")\\n| summarize count() by Operation=strcat(EventType , \\\"-\\\" , Category)\\n| render piechart\",\"size\":0,\"title\":\"Audit Events By Type\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"AuditLogEventsByType\"}],\"fromTemplateId\":\"sentinel-DynatraceWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=DynatraceWorkbooks; logoFileName=dynatrace.svg; description=This workbook brings together queries and visualizations to assist you in identifying potential threats surfaced by Dynatrace.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=3.0.1; title=Dynatrace; templateRelativePath=Dynatrace.json; subtitle=; provider=Dynatrace}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "DynatraceAttacks",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "DynatraceAuditLogs",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "DynatraceProblems",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "DynatraceRuntimeVulnerabilities",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "DynatraceAttacks",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "DynatraceAuditLogs",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "DynatraceProblems",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "DynatraceRuntimeVulnerabilities",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DynatraceApplicationSecurity_AttackDetection_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Dynatrace has detected an ongoing attack in your environment.",
                "displayName": "Dynatrace Application Security - Attack detection",
                "enabled": false,
                "query": "DynatraceAttacks\n| where State != 'ALLOWLISTED'\n| summarize  arg_max(TimeStamp, *) by AttackId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DynatraceAttacks",
                    "dataTypes": [
                      "DynatraceAttacks"
                    ]
                  }
                ],
                "tactics": [
                  "Execution",
                  "Impact",
                  "InitialAccess",
                  "PrivilegeEscalation"
                ],
                "techniques": [
                  "T1059",
                  "T1565",
                  "T1190",
                  "T1068"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "HostName",
                        "columnName": "host"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "identifier": "Url",
                        "columnName": "url"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "sourceIp"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "AttackIdentifier": "AttackId",
                  "AttackState": "State",
                  "DisplayIdentifier": "DisplayId",
                  "AttackType": "AttackType"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dynatrace Attack {{State}} - {{DisplayId}} : {{DisplayName}}",
                  "alertDescriptionFormat": "Dynatrace has detected an ongoing attack in your environment which was {{State}}.\n"
                },
                "incidentConfiguration": {
                  "groupingConfiguration": {
                    "matchingMethod": "AllEntities",
                    "enabled": true,
                    "reopenClosedIncident": true,
                    "lookbackDuration": "P7D"
                  },
                  "createIncident": true
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Dynatrace Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Dynatrace Application Security - Attack detection",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DynatraceApplicationSecurity_CodeLevelVulnerabilityDetection_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detect Code-level runtime vulnerabilities in your environment",
                "displayName": "Dynatrace Application Security - Code-Level runtime vulnerability detection",
                "enabled": false,
                "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"CODE_LEVEL\" and DAVISRiskLevel == \"CRITICAL\" and Muted == false\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DynatraceRuntimeVulnerabilities",
                    "dataTypes": [
                      "DynatraceSecurityProblems"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion",
                  "Execution",
                  "Impact",
                  "InitialAccess",
                  "LateralMovement",
                  "Persistence",
                  "PrivilegeEscalation"
                ],
                "entityMappings": [
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "identifier": "Url",
                        "columnName": "Url"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "DAVISPublicExploit": "DAVISPublicExploit",
                  "DAVISRiskLevel": "DAVISRiskLevel",
                  "PackageName": "PackageName",
                  "Technology": "Technology",
                  "ExternVulnIdentifier": "ExternalVulnerabilityId",
                  "DAVISExposure": "DAVISExposure",
                  "DAVISRiskVector": "DAVISRiskVector",
                  "VulnerabilityType": "VulnerabilityType",
                  "DisplayIdentifier": "DisplayId",
                  "DAVISRiskScore": "DAVISRiskScore",
                  "DAVISDataAssets": "DAVISDataAssets",
                  "SecProbIdentifier": "SecurityProblemId",
                  "DAVISVulnFuncUsage": "DAVISVulnerableFunctionUsage",
                  "SecurityProblemUrl": "Url",
                  "CVEIds": "CVEIds"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dynatrace Code-Level runtime vulnerability detected - {{DisplayId}} : {{Title}}",
                  "alertDescriptionFormat": "Code-Level runtime vulnerability ({{ExternalVulnerabilityId}}) detected in package ({{PackageName}}), more details available from Dynatrace at {{Url}}.\n",
                  "alertSeverityColumnName": "Severity"
                },
                "incidentConfiguration": {
                  "groupingConfiguration": {
                    "matchingMethod": "AllEntities",
                    "enabled": false,
                    "reopenClosedIncident": false,
                    "lookbackDuration": "PT5H"
                  },
                  "createIncident": false
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
              "properties": {
                "description": "Dynatrace Analytics Rule 2",
                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
        "contentKind": "AnalyticsRule",
        "displayName": "Dynatrace Application Security - Code-Level runtime vulnerability detection",
        "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject3').analyticRuleTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DynatraceApplicationSecurity_ThirdPartyVulnerabilityDetection_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject3').analyticRuleVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detect Third-Party runtime vulnerabilities in your environment insights by snyk",
                "displayName": "Dynatrace Application Security - Third-Party runtime vulnerability detection",
                "enabled": false,
                "query": "DynatraceSecurityProblems\n| where VulnerabilityType != \"CODE_LEVEL\" and DAVISRiskLevel == \"CRITICAL\"  and Muted == false\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DynatraceRuntimeVulnerabilities",
                    "dataTypes": [
                      "DynatraceSecurityProblems"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion",
                  "Execution",
                  "Impact",
                  "InitialAccess",
                  "LateralMovement",
                  "Persistence",
                  "PrivilegeEscalation"
                ],
                "entityMappings": [
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "identifier": "Url",
                        "columnName": "Url"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "DAVISPublicExploit": "DAVISPublicExploit",
                  "DAVISRiskLevel": "DAVISRiskLevel",
                  "PackageName": "PackageName",
                  "Technology": "Technology",
                  "ExternVulnIdentifier": "ExternalVulnerabilityId",
                  "DAVISExposure": "DAVISExposure",
                  "DAVISRiskVector": "DAVISRiskVector",
                  "VulnerabilityType": "VulnerabilityType",
                  "DisplayIdentifier": "DisplayId",
                  "DAVISRiskScore": "DAVISRiskScore",
                  "DAVISDataAssets": "DAVISDataAssets",
                  "SecProbIdentifier": "SecurityProblemId",
                  "DAVISVulnFuncUsage": "DAVISVulnerableFunctionUsage",
                  "SecurityProblemUrl": "Url",
                  "CVEIds": "CVEIds"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dynatrace Third-party runtime vulnerability detected - {{DisplayId}} : {{Title}}",
                  "alertDescriptionFormat": "Third-party runtime vulnerability ({{ExternalVulnerabilityId}}) detected in package ({{PackageName}}), more details available from Dynatrace at {{Url}}.\n",
                  "alertSeverityColumnName": "Severity"
                },
                "incidentConfiguration": {
                  "groupingConfiguration": {
                    "matchingMethod": "AllEntities",
                    "enabled": false,
                    "reopenClosedIncident": false,
                    "lookbackDuration": "PT5H"
                  },
                  "createIncident": false
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject3').analyticRuleId3,'/'))))]",
              "properties": {
                "description": "Dynatrace Analytics Rule 3",
                "parentId": "[variables('analyticRuleObject3').analyticRuleId3]",
                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
        "contentKind": "AnalyticsRule",
        "displayName": "Dynatrace Application Security - Third-Party runtime vulnerability detection",
        "contentProductId": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "id": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject4').analyticRuleTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DynatraceApplicationSecurity_NonCriticalVulnerabilityDetection_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject4').analyticRuleVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detect runtime vulnerabilities in your environment insights by snyk",
                "displayName": "Dynatrace Application Security - Non-critical runtime vulnerability detection",
                "enabled": false,
                "query": "DynatraceSecurityProblems\n| where DAVISRiskLevel != \"CRITICAL\"  and Muted == false\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DynatraceRuntimeVulnerabilities",
                    "dataTypes": [
                      "DynatraceSecurityProblems"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion",
                  "Execution",
                  "Impact",
                  "InitialAccess",
                  "LateralMovement",
                  "Persistence",
                  "PrivilegeEscalation"
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "DAVISPublicExploit": "DAVISPublicExploit",
                  "DAVISRiskLevel": "DAVISRiskLevel",
                  "PackageName": "PackageName",
                  "Technology": "Technology",
                  "ExternVulnIdentifier": "ExternalVulnerabilityId",
                  "DAVISExposure": "DAVISExposure",
                  "DAVISRiskVector": "DAVISRiskVector",
                  "VulnerabilityType": "VulnerabilityType",
                  "DisplayIdentifier": "DisplayId",
                  "DAVISRiskScore": "DAVISRiskScore",
                  "DAVISDataAssets": "DAVISDataAssets",
                  "SecProbIdentifier": "SecurityProblemId",
                  "DAVISVulnFuncUsage": "DAVISVulnerableFunctionUsage",
                  "SecurityProblemUrl": "Url",
                  "CVEIds": "CVEIds"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dynatrace Non-critical runtime vulnerability detected - {{DisplayId}} : {{Title}}",
                  "alertDescriptionFormat": "Non-critical runtime vulnerability ({{ExternalVulnerabilityId}}) detected in package ({{PackageName}}), more details available from Dynatrace at {{Url}}.\n",
                  "alertSeverityColumnName": "Severity"
                },
                "incidentConfiguration": {
                  "groupingConfiguration": {
                    "matchingMethod": "AllEntities",
                    "enabled": false,
                    "reopenClosedIncident": false,
                    "lookbackDuration": "PT5H"
                  },
                  "createIncident": false
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject4').analyticRuleId4,'/'))))]",
              "properties": {
                "description": "Dynatrace Analytics Rule 4",
                "parentId": "[variables('analyticRuleObject4').analyticRuleId4]",
                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
        "contentKind": "AnalyticsRule",
        "displayName": "Dynatrace Application Security - Non-critical runtime vulnerability detection",
        "contentProductId": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "id": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject5').analyticRuleTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Dynatrace_ProblemDetection_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject5').analyticRuleVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detect application & infrastructure problems in your environment",
                "displayName": "Dynatrace - Problem detection",
                "enabled": false,
                "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DynatraceProblems",
                    "dataTypes": [
                      "DynatraceProblems"
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "ProblemIdentifier": "ProblemId",
                  "ImpactLevel": "ImpactLevel",
                  "SeverityLevel": "SeverityLevel",
                  "DisplayIdentifier": "DisplayId"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dynatrace problem detected - {{DisplayId}} : {{Title}}",
                  "alertDescriptionFormat": "A application and/or infrastructure problem has been detected in your environment\n",
                  "alertSeverityColumnName": "Severity"
                },
                "incidentConfiguration": {
                  "groupingConfiguration": {
                    "matchingMethod": "AllEntities",
                    "enabled": false,
                    "reopenClosedIncident": false,
                    "lookbackDuration": "PT5H"
                  },
                  "createIncident": false
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject5').analyticRuleId5,'/'))))]",
              "properties": {
                "description": "Dynatrace Analytics Rule 5",
                "parentId": "[variables('analyticRuleObject5').analyticRuleId5]",
                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
        "contentKind": "AnalyticsRule",
        "displayName": "Dynatrace - Problem detection",
        "contentProductId": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "id": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AddDynatraceApplicationSecSrcIPAddressTI Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "AddDynatraceApplicationSecSrcIPAddressTI",
              "type": "string",
              "metadata": {
                "description": "Alert trigger"
              }
            },
            "DynatraceTenant": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Dynatrace tenant (ex. xyz.dynatrace.com)"
              }
            },
            "KeyvaultName": {
              "defaultValue": "",
              "type": "String",
              "metadata": {
                "description": "Enter the key vault name where Dynatrace Access Token is stored"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "MicrosoftGraphSecurityConnectionName": "[[concat('microsoftgraphsecurity-', parameters('PlaybookName'))]",
            "KeyvaultConnectionName": "[[concat('akv-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/microsoftgraphsecurity')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('MicrosoftGraphSecurityConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftGraphSecurityConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('KeyvaultConnectionName')]",
              "kind": "V1",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-3')]",
                  "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueSet": {
                  "name": "oauthMI",
                  "values": {
                    "vaultName": {
                      "value": "[[parameters('KeyvaultName')]"
                    }
                  }
                },
                "displayName": "[[variables('KeyvaultConnectionName')]"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "AddDynatraceApplicationSecurityAttackSourceIPAddressThreatIntelligence-Alert",
                "hidden-SentinelTemplateVersion": "1.0.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftGraphSecurityConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "KeyvaultName": {
                      "type": "String"
                    },
                    "Tenant": {
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      }
                    }
                  },
                  "actions": {
                    "Get_Dynatrace_Access_Token": {
                      "runAfter": {
                        "Parse_Incident_Alert_Custom_Body_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('DynatraceAccessToken')}/value"
                      }
                    },
                    "Get_Dynatrace_Attack_Details": {
                      "runAfter": {
                        "Get_Dynatrace_Access_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "headers": {
                          "Authorization": "Api-Token @{body('Get_Dynatrace_Access_Token')?['value']}",
                          "User-Agent": "dynatrace-microsoft-sentinel/3.x/playbooks/adddynatraceapplicationsecurityattacksourceipaddressti"
                        },
                        "method": "GET",
                        "queries": {
                          "fields": "+attacker"
                        },
                        "uri": "https://@{parameters('Tenant')}/api/v2/attacks/@{first(body('Parse_Incident_Alert_Custom_Body_JSON')?['attackIdentifier'])}"
                      }
                    },
                    "If_SourceIP_available_create_threat_indicator": {
                      "actions": {
                        "Does_tiIndicator_already_Exist": {
                          "actions": {
                            "Create_tiIndicator_for_attackers_source_ip": {
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "action": "alert",
                                  "confidence": 0,
                                  "description": "Dynatrace Application Security - @{body('Parse_Dynatrace_Attack_JSON')?['attackType']} Attack Detected",
                                  "expirationDateTime": "@{addDays(utcNow(),7)}",
                                  "externalId": "@body('Parse_Dynatrace_Attack_JSON')?['attackId']",
                                  "networkSourceCidrBlock": "@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}/32",
                                  "severity": 0,
                                  "targetProduct": "Azure Sentinel",
                                  "threatType": "WatchList",
                                  "tlpLevel": "white"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/beta/security/tiIndicators"
                              }
                            }
                          },
                          "runAfter": {
                            "Get_Existing_tiIndicator": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "For_each_tiIndicator": {
                                "foreach": "@body('Get_Existing_tiIndicator')?['value']",
                                "actions": {
                                  "Update_tiIndicator_expiration": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                      "body": {
                                        "expirationDateTime": "@{addDays(utcNow(),7)}",
                                        "targetProduct": "Azure Sentinel"
                                      },
                                      "host": {
                                        "connection": {
                                          "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                                        }
                                      },
                                      "method": "patch",
                                      "path": "/beta/security/tiIndicators/@{encodeURIComponent(items('For_each_tiIndicator')?['id'])}"
                                    }
                                  }
                                },
                                "type": "Foreach",
                                "runtimeConfiguration": {
                                  "concurrency": {
                                    "repetitions": 1
                                  }
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "lessOrEquals": [
                                  "@body('Get_Existing_tiIndicator')?['@odata.count']",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Get_Existing_tiIndicator": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/beta/security/tiIndicators",
                            "queries": {
                              "$count": "true",
                              "$filter": "externalId eq '@{body('Parse_Dynatrace_Attack_JSON')?['attackId']}' and networkSourceCidrBlock eq '@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}/32'"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_Dynatrace_Attack_JSON": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Dynatrace_did_not_supply_a_source_ip_for_attack": {
                            "type": "Terminate",
                            "inputs": {
                              "runStatus": "Succeeded"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']",
                                ""
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Parse_Dynatrace_Attack_JSON": {
                      "runAfter": {
                        "Get_Dynatrace_Attack_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_Dynatrace_Attack_Details')",
                        "schema": {
                          "properties": {
                            "affectedEntities": {
                              "properties": {
                                "processGroup": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "processGroupInstance": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "attackId": {
                              "type": "string"
                            },
                            "attackType": {
                              "type": "string"
                            },
                            "attacker": {
                              "properties": {
                                "sourceIp": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayId": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_Incident_Alert_Custom_Body_JSON": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['ExtendedProperties']?['Custom Details']",
                        "schema": {
                          "properties": {
                            "AttackIdentifier": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "AttackState": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "AttackType": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "DisplayIdentifier": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "microsoftgraphsecurity": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftGraphSecurityConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftGraphSecurityConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/microsoftgraphsecurity')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  },
                  "KeyvaultName": {
                    "value": "[[parameters('KeyvaultName')]"
                  },
                  "Tenant": {
                    "value": "[[parameters('DynatraceTenant')]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Add Dynatrace Application Security Attack Source IP Address to Threat Intelligence",
            "description": "This playbook will add an attackers source ip to Threat Intelligence when a new incident is opened in Microsoft Sentinel.",
            "prerequisites": [
              "1. Dynatrace tenant (ex. xyz.dynatrace.com)",
              "2. Dynatrace Access Token, the token should have Read attacks (attacks.read) scope."
            ],
            "lastUpdateTime": "2022-10-19T00:00:00Z",
            "tags": [
              "Attacks"
            ],
            "postDeployment": [
              "After deployment, open the playbook to configure all connections and press save."
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Add Dynatrace Application Security Attack Source IP Address to Threat Intelligence",
                "notes": [
                  "Initial version",
                  "Updated user-agent strings used when calling Dynatrace REST API's"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "AddDynatraceApplicationSecSrcIPAddressTI",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "EnrichDynatraceApplicationSecAttackIncident Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "EnrichDynatraceApplicationSecAttackIncident",
              "type": "string",
              "metadata": {
                "description": "Incident trigger"
              }
            },
            "DynatraceTenant": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Dynatrace tenant (ex. xyz.dynatrace.com)"
              }
            },
            "KeyvaultName": {
              "defaultValue": "",
              "type": "String",
              "metadata": {
                "description": "Enter the key vault name where Dynatrace Access Token is stored"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "KeyvaultConnectionName": "[[concat('akv-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('KeyvaultConnectionName')]",
              "kind": "V1",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]",
                  "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueSet": {
                  "name": "oauthMI",
                  "values": {
                    "vaultName": {
                      "value": "[[parameters('KeyvaultName')]"
                    }
                  }
                },
                "displayName": "[[variables('KeyvaultConnectionName')]"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "EnrichDynatraceApplicationSecurityAttack-Incident",
                "hidden-SentinelTemplateVersion": "3.0.1",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "KeyvaultName": {
                      "type": "String"
                    },
                    "Tenant": {
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "For_each_management_zone": {
                      "foreach": "@body('Parse_Dynatrace_Attack_JSON')?['managementZones']",
                      "actions": {
                        "Append_management_zone_tag": {
                          "runAfter": {
                            "Compose_Tag_Item": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "tags",
                            "value": "@outputs('Compose_Tag_Item')"
                          }
                        },
                        "Compose_Tag_Item": {
                          "type": "Compose",
                          "inputs": {
                            "Tag": "ManagementZone : @{items('For_each_management_zone')['name']}"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_incident_tag_array": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Get_Dynatrace_Access_Token": {
                      "runAfter": {
                        "Parse_Incident_Alert_Custom_Body_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('DynatraceAccessToken')}/value"
                      }
                    },
                    "Get_Dynatrace_Attack_Details": {
                      "runAfter": {
                        "Get_Dynatrace_Access_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "headers": {
                          "Authorization": "Api-Token @{body('Get_Dynatrace_Access_Token')?['value']}",
                          "User-Agent": "dynatrace-microsoft-sentinel/3.x/playbooks/enrichdynatraceapplicationsecurityattackincident"
                        },
                        "method": "GET",
                        "queries": {
                          "fields": "+attacker, +entrypoint,+vulnerability,+managementZones,+request"
                        },
                        "uri": "https://@{parameters('Tenant')}/api/v2/attacks/@{first(body('Parse_Incident_Alert_Custom_Body_JSON')?['attackIdentifier'])}"
                      }
                    },
                    "Initialize_incident_tag_array": {
                      "runAfter": {
                        "Parse_Dynatrace_Attack_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "tags",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Parse_Dynatrace_Attack_JSON": {
                      "runAfter": {
                        "Get_Dynatrace_Attack_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_Dynatrace_Attack_Details')",
                        "schema": {
                          "properties": {
                            "affectedEntities": {
                              "properties": {
                                "processGroup": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "processGroupInstance": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "attackId": {
                              "type": "string"
                            },
                            "attackType": {
                              "type": "string"
                            },
                            "attacker": {
                              "properties": {
                                "sourceIp": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayId": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            },
                            "entrypoint": {
                              "properties": {
                                "entrypointFunction": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "payload": {
                                  "properties": {
                                    "truncationInfo": {
                                      "properties": {
                                        "truncated": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "values": {
                                      "items": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "managementZones": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "state": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "integer"
                            },
                            "vulnerability": {
                              "properties": {
                                "codeLocation": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "lineNumber": {
                                      "type": "integer"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                },
                                "displayName": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "vulnerabilityId": {
                                  "type": "string"
                                },
                                "vulnerableFunction": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "vulnerableFunctionInput": {
                                  "properties": {
                                    "inputSegments": {
                                      "items": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "value",
                                          "type"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_Incident_Alert_Custom_Body_JSON": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['object']?['properties']?['Alerts'][0]['properties']['additionalData']['Custom Details']",
                        "schema": {
                          "properties": {
                            "AttackIdentifier": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "AttackState": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "AttackType": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "DisplayIdentifier": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Update_incident_with_tags": {
                      "runAfter": {
                        "For_each_management_zone": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "description": "<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}\n.tg .tg-baqh{text-align:center;vertical-align:top}\n.tg .tg-0lax{text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\">\n<tbody>\n  <tr>\n    <td class=\"tg-1wig\">Process group instance</th>\n    <td class=\"tg-0lax\">@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['name']}</th>\n  </tr>\n  <tr>\n    <td class=\"tg-1wig\">Vulnerability</td>\n    <td class=\"tg-0lax\">@{body('Parse_Dynatrace_Attack_JSON')?['attackType']}</td>\n  </tr>\n  <tr>\n    <td class=\"tg-1wig\">Source IP</td>\n    <td class=\"tg-0lax\">@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}</td>\n  </tr>\n  <tr>\n    <td class=\"tg-baqh\" colspan=\"2\"><a href=\"https://@{parameters('Tenant')}/ui/security/attacks/@{body('Parse_Dynatrace_Attack_JSON')?['attackId']}\" target=\"_blank\" rel=\"noopener noreferrer\">Go to Dynatrace</a></td>\n  </tr>\n</tbody>\n</table>",
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "tagsToAdd": {
                            "TagsToAdd": "@variables('tags')"
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "method": "put",
                        "path": "/Incidents"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  },
                  "KeyvaultName": {
                    "value": "[[parameters('KeyvaultName')]"
                  },
                  "Tenant": {
                    "value": "[[parameters('DynatraceTenant')]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Enrich Dynatrace Application Security Attack Incident",
            "description": "This playbook will enriche Dynatrace Application Security Attack Incidents with additional information when new incident is opened.",
            "prerequisites": [
              "1. Dynatrace tenant (ex. xyz.dynatrace.com)",
              "2. Dynatrace Access Token, the token should have Read attacks (attacks.read) scope."
            ],
            "lastUpdateTime": "2022-10-19T00:00:00Z",
            "tags": [
              "Attacks"
            ],
            "postDeployment": [
              "After deployment, open the playbook to configure all connections and press save."
            ],
            "releaseNotes": [
              {
                "version": "1.0.1",
                "title": "Enrich Dynatrace Application Security Attack Incident",
                "notes": [
                  "Initial version",
                  "Updated user-agent strings used when calling Dynatrace REST API's"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "EnrichDynatraceApplicationSecAttackIncident",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "EnrichDynatraceAppSecAttackMSDefenderXDR Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "EnrichDynatraceAppSecAttackMSDefenderXDR",
              "type": "string",
              "metadata": {
                "description": "Incident trigger"
              }
            },
            "DynatraceTenant": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Dynatrace tenant (ex. xyz.dynatrace.com)"
              }
            },
            "KeyvaultName": {
              "defaultValue": "",
              "type": "String",
              "metadata": {
                "description": "Enter the key vault name where Dynatrace Access Token is stored"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "AzureMonitorLogsConnectionName": "[[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
            "KeyvaultConnectionName": "[[concat('akv-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('AzureMonitorLogsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[variables('AzureMonitorLogsConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('KeyvaultConnectionName')]",
              "kind": "V1",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-3')]",
                  "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                  "vaultName": "[[parameters('KeyvaultName')]"
                },
                "displayName": "[[variables('KeyvaultConnectionName')]",
                "nonSecretParameterValues": {
                  "vaultName": "[[parameters('KeyvaultName')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "EnrichDynatraceAppSecAttackMSDefender365-Incident",
                "hidden-SentinelTemplateVersion": "1.0.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "KeyvaultName": {
                      "type": "String"
                    },
                    "EndTimeOffsetInMinutes": {
                      "defaultValue": 15,
                      "type": "Int"
                    },
                    "Tenant": {
                      "type": "String"
                    },
                    "StartTimeOffsetInMinutes": {
                      "defaultValue": -1,
                      "type": "Int"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "For_Each_Security_Alert": {
                      "foreach": "@body('Get_MSDefender365_Security_Alerts')?['value']",
                      "actions": {
                        "Append_Payload_Item_to_LogEntries": {
                          "runAfter": {
                            "Compose_Ingest_Payload_Item": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "logentries",
                            "value": "@outputs('Compose_Ingest_Payload_Item')"
                          }
                        },
                        "Compose_Ingest_Payload_Item": {
                          "type": "Compose",
                          "inputs": {
                            "AlertName": "@{items('For_Each_Security_Alert')?['AlertName']}",
                            "AlertType": "@{items('For_Each_Security_Alert')?['AlertType']}",
                            "EndTime": "@{items('For_Each_Security_Alert')?['EndTime']}",
                            "OriginalSeverity": "@{items('For_Each_Security_Alert')?['AlertSeverity']}",
                            "ProductName": "@{items('For_Each_Security_Alert')?['ProductName']}",
                            "ProviderName": "@{items('For_Each_Security_Alert')?['ProviderName']}",
                            "StartTime": "@{items('For_Each_Security_Alert')?['StartTime']}",
                            "SystemAlertId": "@{items('For_Each_Security_Alert')?['SystemAlertId']}",
                            "Tactics": "@{items('For_Each_Security_Alert')?['Tactics']}",
                            "VendorName": "@{items('For_Each_Security_Alert')?['VendorName']}",
                            "dt.entity.process_group_instance": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                            "dt.source_entity": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                            "log.source": "@{items('For_Each_Security_Alert')?['ProductName']}",
                            "severity": "warn",
                            "timestamp": "@{variables('Timestamp')}"
                          }
                        },
                        "If_Entities_Exist": {
                          "actions": {
                            "For_each_Security_Alert_Entity": {
                              "foreach": "@json(items('For_Each_Security_Alert')?['Entities'])",
                              "actions": {
                                "Append_Entity_Item_to_LogEntries": {
                                  "runAfter": {
                                    "Compose_Entity_Item": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "logentries",
                                    "value": "@outputs('Compose_Entity_Item')"
                                  }
                                },
                                "Compose_Entity_Item": {
                                  "type": "Compose",
                                  "inputs": {
                                    "Content": "@{items('For_each_Security_Alert_Entity')}",
                                    "EntityType": "@{Coalesce(items('For_each_Security_Alert_Entity')?['Type'], 'None')}",
                                    "SystemAlertId": "@{items('For_Each_Security_Alert')?['SystemAlertId']}",
                                    "VendorName": "@{items('For_Each_Security_Alert')?['VendorName']}",
                                    "dt.entity.process_group_instance": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                                    "dt.source_entity": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                                    "log.source": "@{items('For_Each_Security_Alert')?['ProductName']}",
                                    "severity": "info",
                                    "timestamp": "@{variables('Timestamp')}"
                                  }
                                }
                              },
                              "type": "Foreach"
                            }
                          },
                          "runAfter": {
                            "Append_Payload_Item_to_LogEntries": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@empty(items('For_Each_Security_Alert')?['Entities'])",
                                    "@true"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "If_Extended_Properties_Exist": {
                          "actions": {
                            "Append_Extended_Properties_to_LogEntries": {
                              "runAfter": {
                                "Compose_Extended_Properties_Item": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "logentries",
                                "value": "@outputs('Compose_Extended_Properties_Item')"
                              }
                            },
                            "Compose_Extended_Properties_Item": {
                              "type": "Compose",
                              "inputs": {
                                "Content": "@{items('For_Each_Security_Alert')?['ExtendedProperties']}",
                                "SystemAlertId": "@{items('For_Each_Security_Alert')?['SystemAlertId']}",
                                "VendorName": "@{items('For_Each_Security_Alert')?['VendorName']}",
                                "dt.entity.process_group_instance": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                                "dt.source_entity": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                                "log.source": "@{items('For_Each_Security_Alert')?['ProductName']}",
                                "severity": "info",
                                "timestamp": "@{variables('Timestamp')}"
                              }
                            }
                          },
                          "runAfter": {
                            "If_Entities_Exist": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@empty(items('For_Each_Security_Alert')?['ExtendedProperties'])",
                                    "@true"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Get_MSDefender365_Security_Alerts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "For_each_payload_item": {
                      "foreach": "@body('Parse_Dynatrace_Attack_JSON')?['entrypoint']?['payload']?['values']",
                      "actions": {
                        "Append_value_to_SearchTerms": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "SearchTerms",
                            "value": "@concat('\"', items('For_each_payload_item')?['value'],'\"')"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_SearchTerms": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_Dynatrace_Access_Token": {
                      "runAfter": {
                        "Parse_Incident_Alert_Custom_Body_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('DynatraceAccessToken')}/value"
                      }
                    },
                    "Get_Dynatrace_Attack_Details": {
                      "runAfter": {
                        "Get_Dynatrace_Access_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "headers": {
                          "Authorization": "Api-Token @{body('Get_Dynatrace_Access_Token')?['value']}",
                          "User-Agent": "dynatrace-microsoft-sentinel/3.x/playbooks/enrichdynatraceappsecattackmsdefender365"
                        },
                        "method": "GET",
                        "queries": {
                          "fields": "+attacker, +entrypoint,+vulnerability,+managementZones,+request"
                        },
                        "uri": "https://@{parameters('Tenant')}/api/v2/attacks/@{first(body('Parse_Incident_Alert_Custom_Body_JSON')?['AttackIdentifier'])}"
                      }
                    },
                    "Get_MSDefender365_Security_Alerts": {
                      "runAfter": {
                        "If_Remaing_Minutes_In_Time_Window": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "let start_date=datetime_add(\"minute\", @{parameters('StartTimeOffsetInMinutes')}, todatetime(\"@{variables('Timestamp')}\"));\nlet end_date=datetime_add(\"minute\", @{parameters('EndTimeOffsetInMinutes')},  todatetime(\"@{variables('Timestamp')}\"));\nSecurityAlert\n| where ProductName in (\"Microsoft Defender Advanced Threat Protection\",\"Office 365 Advanced Threat Protection\",\"Azure Advanced Threat Protection\",\"Microsoft Cloud App Security\",\"Microsoft 365 Defender\", \"Azure Active Directory Identity Protection\", \"Azure Security Center\")\n| where ExtendedProperties has_any (@{join(variables('SearchTerms'),',')}) or Entities has_any (@{join(variables('SearchTerms'),',')})\n| where TimeGenerated between (start_date .. end_date);",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/queryData",
                        "queries": {
                          "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                          "resourcename": "@triggerBody()?['workspaceInfo']?['WorkspaceName']",
                          "resourcetype": "Log Analytics Workspace",
                          "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                          "timerange": "Last 7 days"
                        }
                      }
                    },
                    "If_Log_Entries_exist": {
                      "actions": {
                        "Ingest_Dynatrace_Log_Entries": {
                          "type": "Http",
                          "inputs": {
                            "body": "@variables('logentries')",
                            "headers": {
                              "Authorization": "Api-Token @{body('Get_Dynatrace_Access_Token')?['value']}",
                              "Content-Type": "application/json; charset=utf-8",
                              "User-Agent": "dynatrace-microsoft-sentinel/3.x/playbooks/enrichdynatraceappsecattackmsdefender365"
                            },
                            "method": "POST",
                            "uri": "https://@{parameters('Tenant')}/api/v2/logs/ingest"
                          }
                        }
                      },
                      "runAfter": {
                        "For_Each_Security_Alert": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "No_log_entries_to_ingest": {
                            "type": "Terminate",
                            "inputs": {
                              "runStatus": "Succeeded"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('logentries'))",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "If_Remaing_Minutes_In_Time_Window": {
                      "actions": {
                        "Delay_if_Time_Window_Not_Met_": {
                          "type": "Wait",
                          "inputs": {
                            "interval": {
                              "count": "@mul(variables('RemainingMinutesInTimeWindow'),-1)",
                              "unit": "Minute"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_RemainingMinutesInTimeWindow": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "less": [
                              "@variables('RemainingMinutesInTimeWindow')",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_LogEntries": {
                      "runAfter": {
                        "Parse_Dynatrace_Attack_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "logentries",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_RemainingMinutesInTimeWindow": {
                      "runAfter": {
                        "For_each_payload_item": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RemainingMinutesInTimeWindow",
                            "type": "integer",
                            "value": "@div(div(sub(ticks(utcNow()), add(ticks(variables('Timestamp')), mul(parameters('EndTimeOffsetInMinutes'), mul(10000000,60)))),10000000),60)"
                          }
                        ]
                      }
                    },
                    "Initialize_SearchTerms": {
                      "runAfter": {
                        "Initialize_Timestamp": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "SearchTerms",
                            "type": "array",
                            "value": [
                              "\"@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}\"",
                              "\"@{body('Parse_Dynatrace_Attack_JSON')?['request']?['url']}\"",
                              "\"@{body('Parse_Dynatrace_Attack_JSON')?['request']?['host']}\""
                            ]
                          }
                        ]
                      }
                    },
                    "Initialize_Timestamp": {
                      "runAfter": {
                        "Initialize_LogEntries": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Timestamp",
                            "type": "string",
                            "value": "@{addSeconds('1970-01-01T00:00:00Z', int(first(split(string(mul(body('Parse_Dynatrace_Attack_JSON')?['timestamp'], 0.001)),'.'))))}"
                          }
                        ]
                      }
                    },
                    "Parse_Dynatrace_Attack_JSON": {
                      "runAfter": {
                        "Get_Dynatrace_Attack_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_Dynatrace_Attack_Details')",
                        "schema": {
                          "properties": {
                            "affectedEntities": {
                              "properties": {
                                "processGroup": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "processGroupInstance": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "attackId": {
                              "type": "string"
                            },
                            "attackType": {
                              "type": "string"
                            },
                            "attacker": {
                              "properties": {
                                "location": {
                                  "type": "object"
                                },
                                "sourceIp": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayId": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            },
                            "entrypoint": {
                              "properties": {
                                "entrypointFunction": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "payload": {
                                  "properties": {
                                    "truncationInfo": {
                                      "properties": {
                                        "truncated": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "values": {
                                      "items": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "managementZones": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "request": {
                              "properties": {
                                "host": {
                                  "type": "string"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "protocolDetails": {
                                  "properties": {
                                    "http": {
                                      "properties": {
                                        "headers": {
                                          "properties": {
                                            "truncationInfo": {
                                              "properties": {
                                                "truncated": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "values": {
                                              "items": {
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "value"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "parameters": {
                                          "properties": {
                                            "truncationInfo": {
                                              "properties": {
                                                "truncated": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "values": {
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "requestMethod": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "url": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "state": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "integer"
                            },
                            "vulnerability": {
                              "properties": {
                                "codeLocation": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "lineNumber": {
                                      "type": "integer"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                },
                                "displayName": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "vulnerabilityId": {
                                  "type": "string"
                                },
                                "vulnerableFunction": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "vulnerableFunctionInput": {
                                  "properties": {
                                    "inputSegments": {
                                      "items": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "value",
                                          "type"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_Incident_Alert_Custom_Body_JSON": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['object']?['properties']?['Alerts'][0]['properties']['additionalData']['Custom Details']",
                        "schema": {
                          "properties": {
                            "AttackIdentifier": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "AttackState": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "AttackType": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "DisplayIdentifier": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                        "connectionName": "[[variables('AzureMonitorLogsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]"
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  },
                  "KeyvaultName": {
                    "value": "[[parameters('KeyvaultName')]"
                  },
                  "Tenant": {
                    "value": "[[parameters('DynatraceTenant')]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Enrich Dynatrace Application Security Attack with related Microsoft Defender XDR insights",
            "description": "This playbook will enrich Dynatrace Application Security Attack with related Microsoft Defender XDR insights.",
            "prerequisites": [
              "1. Dynatrace tenant (ex. xyz.dynatrace.com)",
              "2. Dynatrace Access Token, the token should have Read attacks (attacks.read) and Ingest logs (logs.ingest) scopes."
            ],
            "lastUpdateTime": "2022-10-19T00:00:00Z",
            "tags": [
              "Attacks"
            ],
            "postDeployment": [
              "After deployment, open the playbook to configure all connections and press save."
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Enrich Dynatrace Application Security Attack with related Microsoft Defender 365 insights",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId3')]",
        "contentKind": "Playbook",
        "displayName": "EnrichDynatraceAppSecAttackMSDefenderXDR",
        "contentProductId": "[variables('_playbookcontentProductId3')]",
        "id": "[variables('_playbookcontentProductId3')]",
        "version": "[variables('playbookVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "EnrichDynatraceAppSecAttackWithSecAlerts Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion4')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "EnrichDynatraceAppSecAttackWithSecAlerts",
              "type": "string",
              "metadata": {
                "description": "Incident trigger"
              }
            },
            "DynatraceTenant": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Dynatrace tenant (ex. xyz.dynatrace.com)"
              }
            },
            "KeyvaultName": {
              "defaultValue": "",
              "type": "String",
              "metadata": {
                "description": "Enter the key vault name where Dynatrace Access Token is stored"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "AzureMonitorLogsConnectionName": "[[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
            "KeyvaultConnectionName": "[[concat('akv-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('AzureMonitorLogsConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]"
                },
                "parameterValueSet": {
                  "name": "managedIdentityAuth"
                },
                "displayName": "[[variables('AzureMonitorLogsConnectionName')]"
              }
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('KeyvaultConnectionName')]",
              "kind": "V1",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-3')]",
                  "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueSet": {
                  "name": "oauthMI",
                  "values": {
                    "vaultName": {
                      "value": "[[parameters('KeyvaultName')]"
                    }
                  }
                },
                "displayName": "[[variables('KeyvaultConnectionName')]"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "EnrichDynatraceAppSecAttackMSDefender365-Incident",
                "hidden-SentinelTemplateVersion": "1.0.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "KeyvaultName": {
                      "type": "String"
                    },
                    "EndTimeOffsetInMinutes": {
                      "defaultValue": 15,
                      "type": "Int"
                    },
                    "Tenant": {
                      "type": "String"
                    },
                    "StartTimeOffsetInMinutes": {
                      "defaultValue": -1,
                      "type": "Int"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "For_Each_Security_Alert": {
                      "foreach": "@body('Get_Related_Security_Alerts')?['value']",
                      "actions": {
                        "Append_Payload_Item_to_LogEntries": {
                          "runAfter": {
                            "Compose_Ingest_Payload_Item": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "logentries",
                            "value": "@outputs('Compose_Ingest_Payload_Item')"
                          }
                        },
                        "Compose_Ingest_Payload_Item": {
                          "type": "Compose",
                          "inputs": {
                            "AlertName": "@{items('For_Each_Security_Alert')?['AlertName']}",
                            "AlertType": "@{items('For_Each_Security_Alert')?['AlertType']}",
                            "EndTime": "@{items('For_Each_Security_Alert')?['EndTime']}",
                            "OriginalSeverity": "@{items('For_Each_Security_Alert')?['AlertSeverity']}",
                            "ProductName": "@{items('For_Each_Security_Alert')?['ProductName']}",
                            "ProviderName": "@{items('For_Each_Security_Alert')?['ProviderName']}",
                            "StartTime": "@{items('For_Each_Security_Alert')?['StartTime']}",
                            "SystemAlertId": "@{items('For_Each_Security_Alert')?['SystemAlertId']}",
                            "Tactics": "@{items('For_Each_Security_Alert')?['Tactics']}",
                            "VendorName": "@{items('For_Each_Security_Alert')?['VendorName']}",
                            "dt.entity.process_group_instance": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                            "dt.source_entity": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                            "log.source": "@{items('For_Each_Security_Alert')?['ProductName']}",
                            "severity": "warn",
                            "timestamp": "@{variables('Timestamp')}"
                          }
                        },
                        "If_Entities_Exist": {
                          "actions": {
                            "For_each_Security_Alert_Entity": {
                              "foreach": "@json(items('For_Each_Security_Alert')?['Entities'])",
                              "actions": {
                                "Append_Entity_Item_to_LogEntries": {
                                  "runAfter": {
                                    "Compose_Entity_Item": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "AppendToArrayVariable",
                                  "inputs": {
                                    "name": "logentries",
                                    "value": "@outputs('Compose_Entity_Item')"
                                  }
                                },
                                "Compose_Entity_Item": {
                                  "type": "Compose",
                                  "inputs": {
                                    "Content": "@{items('For_each_Security_Alert_Entity')}",
                                    "EntityType": "@{Coalesce(items('For_each_Security_Alert_Entity')?['Type'], 'None')}",
                                    "SystemAlertId": "@{items('For_Each_Security_Alert')?['SystemAlertId']}",
                                    "VendorName": "@{items('For_Each_Security_Alert')?['VendorName']}",
                                    "dt.entity.process_group_instance": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                                    "dt.source_entity": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                                    "log.source": "@{items('For_Each_Security_Alert')?['ProductName']}",
                                    "severity": "info",
                                    "timestamp": "@{variables('Timestamp')}"
                                  }
                                }
                              },
                              "type": "Foreach"
                            }
                          },
                          "runAfter": {
                            "Append_Payload_Item_to_LogEntries": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@empty(items('For_Each_Security_Alert')?['Entities'])",
                                    "@true"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "If_Extended_Properties_Exist": {
                          "actions": {
                            "Append_Extended_Properties_to_LogEntries": {
                              "runAfter": {
                                "Compose_Extended_Properties_Item": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "logentries",
                                "value": "@outputs('Compose_Extended_Properties_Item')"
                              }
                            },
                            "Compose_Extended_Properties_Item": {
                              "type": "Compose",
                              "inputs": {
                                "Content": "@{items('For_Each_Security_Alert')?['ExtendedProperties']}",
                                "SystemAlertId": "@{items('For_Each_Security_Alert')?['SystemAlertId']}",
                                "VendorName": "@{items('For_Each_Security_Alert')?['VendorName']}",
                                "dt.entity.process_group_instance": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                                "dt.source_entity": "@{body('Parse_Dynatrace_Attack_JSON')?['affectedEntities']?['processGroupInstance']?['id']}",
                                "log.source": "@{items('For_Each_Security_Alert')?['ProductName']}",
                                "severity": "info",
                                "timestamp": "@{variables('Timestamp')}"
                              }
                            }
                          },
                          "runAfter": {
                            "If_Entities_Exist": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@empty(items('For_Each_Security_Alert')?['ExtendedProperties'])",
                                    "@true"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Get_Related_Security_Alerts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "For_each_payload_item": {
                      "foreach": "@body('Parse_Dynatrace_Attack_JSON')?['entrypoint']?['payload']?['values']",
                      "actions": {
                        "Append_value_to_SearchTerms": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "SearchTerms",
                            "value": "@concat('\"', items('For_each_payload_item')?['value'],'\"')"
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_SearchTerms": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Get_Dynatrace_Access_Token": {
                      "runAfter": {
                        "Parse_Incident_Alert_Custom_Body_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('DynatraceAccessToken')}/value"
                      }
                    },
                    "Get_Dynatrace_Attack_Details": {
                      "runAfter": {
                        "Get_Dynatrace_Access_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "headers": {
                          "Authorization": "Api-Token @{body('Get_Dynatrace_Access_Token')?['value']}",
                          "User-Agent": "dynatrace-microsoft-sentinel/3.x/playbooks/enrichdynatraceappsecattackwithsecurityalerts"
                        },
                        "method": "GET",
                        "queries": {
                          "fields": "+attacker, +entrypoint,+vulnerability,+managementZones,+request"
                        },
                        "uri": "https://@{parameters('Tenant')}/api/v2/attacks/@{first(body('Parse_Incident_Alert_Custom_Body_JSON')?['AttackIdentifier'])}"
                      }
                    },
                    "Get_Related_Security_Alerts": {
                      "runAfter": {
                        "If_Remaing_Minutes_In_Time_Window": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "let start_date=datetime_add(\"minute\", @{parameters('StartTimeOffsetInMinutes')}, todatetime(\"@{variables('Timestamp')}\"));\nlet end_date=datetime_add(\"minute\", @{parameters('EndTimeOffsetInMinutes')},  todatetime(\"@{variables('Timestamp')}\"));\nSecurityAlert\n| where not(VendorName == \"Dynatrace\")\n| where ExtendedProperties has_any (@{join(variables('SearchTerms'),',')}) or Entities has_any (@{join(variables('SearchTerms'),',')})\n| where TimeGenerated between (start_date .. end_date);",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/queryData",
                        "queries": {
                          "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
                          "resourcename": "@triggerBody()?['workspaceInfo']?['WorkspaceName']",
                          "resourcetype": "Log Analytics Workspace",
                          "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
                          "timerange": "Last 7 days"
                        }
                      }
                    },
                    "If_Log_Entries_exist": {
                      "actions": {
                        "Ingest_Dynatrace_Log_Entries": {
                          "type": "Http",
                          "inputs": {
                            "body": "@variables('logentries')",
                            "headers": {
                              "Authorization": "Api-Token @{body('Get_Dynatrace_Access_Token')?['value']}",
                              "Content-Type": "application/json; charset=utf-8",
                              "User-Agent": "dynatrace-microsoft-sentinel/3.x/playbooks/enrichdynatraceappsecattackwithsecurityalerts"
                            },
                            "method": "POST",
                            "uri": "https://@{parameters('Tenant')}/api/v2/logs/ingest"
                          }
                        }
                      },
                      "runAfter": {
                        "For_Each_Security_Alert": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "No_log_entries_to_ingest": {
                            "type": "Terminate",
                            "inputs": {
                              "runStatus": "Succeeded"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('logentries'))",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "If_Remaing_Minutes_In_Time_Window": {
                      "actions": {
                        "Delay_if_Time_Window_Not_Met_": {
                          "type": "Wait",
                          "inputs": {
                            "interval": {
                              "count": "@mul(variables('RemainingMinutesInTimeWindow'),-1)",
                              "unit": "Minute"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Initialize_RemainingMinutesInTimeWindow": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "less": [
                              "@variables('RemainingMinutesInTimeWindow')",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_LogEntries": {
                      "runAfter": {
                        "Parse_Dynatrace_Attack_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "logentries",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initialize_RemainingMinutesInTimeWindow": {
                      "runAfter": {
                        "For_each_payload_item": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "RemainingMinutesInTimeWindow",
                            "type": "integer",
                            "value": "@div(div(sub(ticks(utcNow()), add(ticks(variables('Timestamp')), mul(parameters('EndTimeOffsetInMinutes'), mul(10000000,60)))),10000000),60)"
                          }
                        ]
                      }
                    },
                    "Initialize_SearchTerms": {
                      "runAfter": {
                        "Initialize_Timestamp": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "SearchTerms",
                            "type": "array",
                            "value": [
                              "\"@{body('Parse_Dynatrace_Attack_JSON')?['attacker']?['sourceIp']}\"",
                              "\"@{body('Parse_Dynatrace_Attack_JSON')?['request']?['url']}\"",
                              "\"@{body('Parse_Dynatrace_Attack_JSON')?['request']?['host']}\""
                            ]
                          }
                        ]
                      }
                    },
                    "Initialize_Timestamp": {
                      "runAfter": {
                        "Initialize_LogEntries": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Timestamp",
                            "type": "string",
                            "value": "@{addSeconds('1970-01-01T00:00:00Z', int(first(split(string(mul(body('Parse_Dynatrace_Attack_JSON')?['timestamp'], 0.001)),'.'))))}"
                          }
                        ]
                      }
                    },
                    "Parse_Dynatrace_Attack_JSON": {
                      "runAfter": {
                        "Get_Dynatrace_Attack_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_Dynatrace_Attack_Details')",
                        "schema": {
                          "properties": {
                            "affectedEntities": {
                              "properties": {
                                "processGroup": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "processGroupInstance": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "attackId": {
                              "type": "string"
                            },
                            "attackType": {
                              "type": "string"
                            },
                            "attacker": {
                              "properties": {
                                "location": {
                                  "type": "object"
                                },
                                "sourceIp": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "displayId": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            },
                            "entrypoint": {
                              "properties": {
                                "entrypointFunction": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "payload": {
                                  "properties": {
                                    "truncationInfo": {
                                      "properties": {
                                        "truncated": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "values": {
                                      "items": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "managementZones": {
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "request": {
                              "properties": {
                                "host": {
                                  "type": "string"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "protocolDetails": {
                                  "properties": {
                                    "http": {
                                      "properties": {
                                        "headers": {
                                          "properties": {
                                            "truncationInfo": {
                                              "properties": {
                                                "truncated": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "values": {
                                              "items": {
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "value"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "parameters": {
                                          "properties": {
                                            "truncationInfo": {
                                              "properties": {
                                                "truncated": {
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "values": {
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "requestMethod": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "url": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "state": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "integer"
                            },
                            "vulnerability": {
                              "properties": {
                                "codeLocation": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "lineNumber": {
                                      "type": "integer"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                },
                                "displayName": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "vulnerabilityId": {
                                  "type": "string"
                                },
                                "vulnerableFunction": {
                                  "properties": {
                                    "className": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "string"
                                    },
                                    "functionName": {
                                      "type": "string"
                                    },
                                    "parameterTypes": {
                                      "properties": {
                                        "truncationInfo": {
                                          "properties": {
                                            "truncated": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "returnType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "vulnerableFunctionInput": {
                                  "properties": {
                                    "inputSegments": {
                                      "items": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "value",
                                          "type"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_Incident_Alert_Custom_Body_JSON": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@triggerBody()?['object']?['properties']?['Alerts'][0]['properties']['additionalData']['Custom Details']",
                        "schema": {
                          "properties": {
                            "AttackIdentifier": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "AttackState": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "AttackType": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "DisplayIdentifier": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "azuremonitorlogs": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                        "connectionName": "[[variables('AzureMonitorLogsConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuremonitorlogs')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  },
                  "KeyvaultName": {
                    "value": "[[parameters('KeyvaultName')]"
                  },
                  "Tenant": {
                    "value": "[[parameters('DynatraceTenant')]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId4'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId4')]",
                "contentId": "[variables('_playbookContentId4')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Enrich Dynatrace Application Security Attack with related Microsoft Sentinel Security Alerts",
            "description": "This playbook will enrich Dynatrace Application Security Attack with related Microsoft Sentinel Security Alerts.",
            "prerequisites": [
              "1. Dynatrace tenant (ex. xyz.dynatrace.com)",
              "2. Dynatrace Access Token, the token should have Read attacks (attacks.read) and Ingest logs (logs.ingest) scopes."
            ],
            "lastUpdateTime": "2022-10-19T00:00:00Z",
            "tags": [
              "Attacks"
            ],
            "postDeployment": [
              "After deployment, open the playbook to configure all connections and press save."
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Enrich Dynatrace Application Security Attack with related Microsoft Sentinel Security Alerts",
                "notes": [
                  "Initial version",
                  "Updated user-agent strings used when calling Dynatrace REST API's"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId4')]",
        "contentKind": "Playbook",
        "displayName": "EnrichDynatraceAppSecAttackWithSecAlerts",
        "contentProductId": "[variables('_playbookcontentProductId4')]",
        "id": "[variables('_playbookcontentProductId4')]",
        "version": "[variables('playbookVersion4')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "IngestDynatraceMSDefenderXDR Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion5')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "IngestDynatraceMSDefenderXDR",
              "type": "string",
              "metadata": {
                "description": "Alert trigger"
              }
            },
            "DynatraceTenant": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Dynatrace tenant (ex. xyz.dynatrace.com)"
              }
            },
            "KeyvaultName": {
              "defaultValue": "",
              "type": "String",
              "metadata": {
                "description": "Enter the key vault name where Dynatrace Access Token is stored"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "KeyvaultConnectionName": "[[concat('akv-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('KeyvaultConnectionName')]",
              "kind": "V1",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]",
                  "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                  "vaultName": "[[parameters('KeyvaultName')]"
                },
                "displayName": "[[variables('KeyvaultConnectionName')]",
                "nonSecretParameterValues": {
                  "vaultName": "[[parameters('KeyvaultName')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "IngestDynatraceMSDefender365-Alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "KeyvaultName": {
                      "type": "String"
                    },
                    "Tenant": {
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      },
                      "conditions": [
                        {
                          "expression": "@or(equals(triggerBody()?['ProductName'],'Microsoft Defender Advanced Threat Protection'), equals(triggerBody()?['ProductName'],'Office 365 Advanced Threat Protection'), equals(triggerBody()?['ProductName'],'Azure Advanced Threat Protection'), equals(triggerBody()?['ProductName'],'Microsoft Cloud App Security'), equals(triggerBody()?['ProductName'],'Microsoft 365 Defender'), equals(triggerBody()?['ProductName'],'Azure Active Directory Identity Protection'), equals(triggerBody()?['ProductName'],'Azure Security Center'))"
                        }
                      ]
                    }
                  },
                  "actions": {
                    "Append_Payload_Item_to_LogEntries": {
                      "runAfter": {
                        "Compose_Ingest_Payload_Item": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "logentries",
                        "value": "@outputs('Compose_Ingest_Payload_Item')"
                      }
                    },
                    "Compose_Ingest_Payload_Item": {
                      "runAfter": {
                        "Initialize_LogEntries": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": {
                        "AlertName": "@{triggerBody()?['AlertDisplayName']}",
                        "AlertType": "@{triggerBody()?['AlertType']}",
                        "EndTime": "@{triggerBody()?['EndTimeUtc']}",
                        "OriginalSeverity": "@{triggerBody()?['Severity']}",
                        "ProductName": "@{triggerBody()?['ProductName']}",
                        "ResourceGroup": "@{triggerBody()?['WorkspaceResourceGroup']}",
                        "StartTime": "@{triggerBody()?['StartTimeUtc']}",
                        "SubscriptionID": "@{triggerBody()?['WorkspaceSubscriptionId']}",
                        "SystemAlertId": "@{triggerBody()?['SystemAlertId']}",
                        "WorkspaceID": "@{triggerBody()?['WorkspaceId']}",
                        "log.source": "@{triggerBody()?['ProductName']}",
                        "severity": "warn",
                        "timestamp": "@{triggerBody()?['TimeGenerated']}"
                      }
                    },
                    "Get_Dynatrace_Access_Token": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('DynatraceAccessToken')}/value"
                      }
                    },
                    "If_Entities_Exist": {
                      "actions": {
                        "For_each_Security_Alert_Entity": {
                          "foreach": "@triggerBody()?['Entities']",
                          "actions": {
                            "Append_Entity_Item_to_LogEntries": {
                              "runAfter": {
                                "Compose_Entity_Item": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "logentries",
                                "value": "@outputs('Compose_Entity_Item')"
                              }
                            },
                            "Compose_Entity_Item": {
                              "type": "Compose",
                              "inputs": {
                                "Content": "@{items('For_each_Security_Alert_Entity')}",
                                "EntityType": "@{Coalesce(items('For_each_Security_Alert_Entity')?['Type'], 'None')}",
                                "SystemAlertId": "@{triggerBody()?['SystemAlertId']}",
                                "log.source": "@{triggerBody()?['ProductName']}",
                                "severity": "info",
                                "timestamp": "@{triggerBody()?['TimeGenerated']}"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Append_Payload_Item_to_LogEntries": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@empty(triggerBody()?['Entities'])",
                                true
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "If_Extended_Links_Exist": {
                      "actions": {
                        "For_each_Extended_Link": {
                          "foreach": "@triggerBody()?['ExtendedLinks']",
                          "actions": {
                            "Append_Extended_Link_Item_to_LogEntries": {
                              "runAfter": {
                                "Compose_Extended_Links_Item": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "logentries",
                                "value": "@outputs('Compose_Extended_Links_Item')"
                              }
                            },
                            "Compose_Extended_Links_Item": {
                              "type": "Compose",
                              "inputs": {
                                "Content": "@{items('For_each_Extended_Link')}",
                                "SystemAlertId": "@{triggerBody()?['SystemAlertId']}",
                                "log.source": "@{triggerBody()?['ProductName']}",
                                "severity": "info",
                                "timestamp": "@{triggerBody()?['TimeGenerated']}"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "If_Extended_Properties_Exist": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@empty(triggerBody()?['ExtendedLinks'])",
                                true
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "If_Extended_Properties_Exist": {
                      "actions": {
                        "Append_Extended_Properties_to_LogEntries": {
                          "runAfter": {
                            "Compose_Extended_Properties_Item": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "logentries",
                            "value": "@outputs('Compose_Extended_Properties_Item')"
                          }
                        },
                        "Compose_Extended_Properties_Item": {
                          "type": "Compose",
                          "inputs": {
                            "Content": "@{triggerBody()?['ExtendedProperties']}",
                            "SystemAlertId": "@{triggerBody()?['SystemAlertId']}",
                            "log.source": "@{triggerBody()?['ProductName']}",
                            "severity": "info",
                            "timestamp": "@{triggerBody()?['TimeGenerated']}"
                          }
                        }
                      },
                      "runAfter": {
                        "If_Entities_Exist": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@empty(triggerBody()?['ExtendedProperties'])",
                                true
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "If_Log_Entries_exist": {
                      "actions": {
                        "Ingest_Dynatrace_Log_Entries": {
                          "type": "Http",
                          "inputs": {
                            "body": "@variables('logentries')",
                            "headers": {
                              "Authorization": "Api-Token @{body('Get_Dynatrace_Access_Token')?['value']}",
                              "Content-Type": "application/json; charset=utf-8",
                              "User-Agent": "dynatrace-microsoft-sentinel/3.x/playbooks/ingestdynatracemsdefender365"
                            },
                            "method": "POST",
                            "uri": "https://@{parameters('Tenant')}/api/v2/logs/ingest"
                          }
                        }
                      },
                      "runAfter": {
                        "If_Extended_Links_Exist": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "No_log_entries_to_ingest": {
                            "type": "Terminate",
                            "inputs": {
                              "runStatus": "Succeeded"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('logentries'))",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_LogEntries": {
                      "runAfter": {
                        "Get_Dynatrace_Access_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "logentries",
                            "type": "array"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  },
                  "KeyvaultName": {
                    "value": "[[parameters('KeyvaultName')]"
                  },
                  "Tenant": {
                    "value": "[[parameters('DynatraceTenant')]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId5'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId5')]",
                "contentId": "[variables('_playbookContentId5')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Ingest Microsoft Defender XDR insights into Dynatrace",
            "description": "This playbook will ingest Microsoft Defender XDR insights into Dynatrace.",
            "prerequisites": [
              "1. Dynatrace tenant (ex. xyz.dynatrace.com)",
              "2. Dynatrace Access Token, the token should have Ingest logs (logs.ingest) scope."
            ],
            "lastUpdateTime": "2022-10-19T00:00:00Z",
            "tags": [
              "Ingest"
            ],
            "postDeployment": [
              "After deployment, open the playbook to configure all connections and press save."
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Ingest Microsoft Defender 365 insights into Dynatrace",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId5')]",
        "contentKind": "Playbook",
        "displayName": "IngestDynatraceMSDefenderXDR",
        "contentProductId": "[variables('_playbookcontentProductId5')]",
        "id": "[variables('_playbookcontentProductId5')]",
        "version": "[variables('playbookVersion5')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "IngestDynatraceMSSentinelSecurityAlerts Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion6')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "IngestDynatraceMSSentinelSecurityAlerts",
              "type": "string",
              "metadata": {
                "description": "Alert trigger"
              }
            },
            "DynatraceTenant": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Dynatrace tenant (ex. xyz.dynatrace.com)"
              }
            },
            "KeyvaultName": {
              "defaultValue": "",
              "type": "String",
              "metadata": {
                "description": "Enter the key vault name where Dynatrace Access Token is stored"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
            "KeyvaultConnectionName": "[[concat('akv-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/Connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[variables('KeyvaultConnectionName')]",
              "kind": "V1",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "api": {
                  "id": "[[variables('_connection-2')]",
                  "type": "Microsoft.Web/locations/managedApis"
                },
                "parameterValueSet": {
                  "name": "oauthMI",
                  "values": {
                    "vaultName": {
                      "value": "[[parameters('KeyvaultName')]"
                    }
                  }
                },
                "displayName": "[[variables('KeyvaultConnectionName')]"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "IngestDynatraceSentinelSecurityAlerts-Alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "KeyvaultName": {
                      "type": "String"
                    },
                    "Tenant": {
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      },
                      "conditions": [
                        {
                          "expression": "@not(equals(triggerBody()?['ProductName'],'Dynatrace'))"
                        }
                      ]
                    }
                  },
                  "actions": {
                    "Append_Payload_Item_to_LogEntries": {
                      "runAfter": {
                        "Compose_Ingest_Payload_Item": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "logentries",
                        "value": "@outputs('Compose_Ingest_Payload_Item')"
                      }
                    },
                    "Compose_Ingest_Payload_Item": {
                      "runAfter": {
                        "Initialize_LogEntries": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": {
                        "AlertName": "@{triggerBody()?['AlertDisplayName']}",
                        "AlertType": "@{triggerBody()?['AlertType']}",
                        "EndTime": "@{triggerBody()?['EndTimeUtc']}",
                        "OriginalSeverity": "@{triggerBody()?['Severity']}",
                        "ProductName": "@{triggerBody()?['ProductName']}",
                        "ResourceGroup": "@{triggerBody()?['WorkspaceResourceGroup']}",
                        "StartTime": "@{triggerBody()?['StartTimeUtc']}",
                        "SubscriptionID": "@{triggerBody()?['WorkspaceSubscriptionId']}",
                        "SystemAlertId": "@{triggerBody()?['SystemAlertId']}",
                        "WorkspaceID": "@{triggerBody()?['WorkspaceId']}",
                        "log.source": "@{triggerBody()?['ProductName']}",
                        "severity": "warn",
                        "timestamp": "@{triggerBody()?['TimeGenerated']}"
                      }
                    },
                    "Get_Dynatrace_Access_Token": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/secrets/@{encodeURIComponent('DynatraceAccessToken')}/value"
                      }
                    },
                    "If_Entities_Exist": {
                      "actions": {
                        "For_each_Security_Alert_Entity": {
                          "foreach": "@triggerBody()?['Entities']",
                          "actions": {
                            "Append_Entity_Item_to_LogEntries": {
                              "runAfter": {
                                "Compose_Entity_Item": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "logentries",
                                "value": "@outputs('Compose_Entity_Item')"
                              }
                            },
                            "Compose_Entity_Item": {
                              "type": "Compose",
                              "inputs": {
                                "Content": "@{items('For_each_Security_Alert_Entity')}",
                                "EntityType": "@{Coalesce(items('For_each_Security_Alert_Entity')?['Type'], 'None')}",
                                "SystemAlertId": "@{triggerBody()?['SystemAlertId']}",
                                "log.source": "@{triggerBody()?['ProductName']}",
                                "severity": "info",
                                "timestamp": "@{triggerBody()?['TimeGenerated']}"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Append_Payload_Item_to_LogEntries": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@empty(triggerBody()?['Entities'])",
                                true
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "If_Extended_Links_Exist": {
                      "actions": {
                        "For_each_Extended_Link": {
                          "foreach": "@triggerBody()?['ExtendedLinks']",
                          "actions": {
                            "Append_Extended_Link_Item_to_LogEntries": {
                              "runAfter": {
                                "Compose_Extended_Links_Item": [
                                  "Succeeded"
                                ]
                              },
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "logentries",
                                "value": "@outputs('Compose_Extended_Links_Item')"
                              }
                            },
                            "Compose_Extended_Links_Item": {
                              "type": "Compose",
                              "inputs": {
                                "Content": "@{items('For_each_Extended_Link')}",
                                "SystemAlertId": "@{triggerBody()?['SystemAlertId']}",
                                "log.source": "@{triggerBody()?['ProductName']}",
                                "severity": "info",
                                "timestamp": "@{triggerBody()?['TimeGenerated']}"
                              }
                            }
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "If_Extended_Properties_Exist": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@empty(triggerBody()?['ExtendedLinks'])",
                                true
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "If_Extended_Properties_Exist": {
                      "actions": {
                        "Append_Extended_Properties_to_LogEntries": {
                          "runAfter": {
                            "Compose_Extended_Properties_Item": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "logentries",
                            "value": "@outputs('Compose_Extended_Properties_Item')"
                          }
                        },
                        "Compose_Extended_Properties_Item": {
                          "type": "Compose",
                          "inputs": {
                            "Content": "@{triggerBody()?['ExtendedProperties']}",
                            "SystemAlertId": "@{triggerBody()?['SystemAlertId']}",
                            "log.source": "@{triggerBody()?['ProductName']}",
                            "severity": "info",
                            "timestamp": "@{triggerBody()?['TimeGenerated']}"
                          }
                        }
                      },
                      "runAfter": {
                        "If_Entities_Exist": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@empty(triggerBody()?['ExtendedProperties'])",
                                true
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "If_Log_Entries_exist": {
                      "actions": {
                        "Ingest_Dynatrace_Log_Entries": {
                          "type": "Http",
                          "inputs": {
                            "body": "@variables('logentries')",
                            "headers": {
                              "Authorization": "Api-Token @{body('Get_Dynatrace_Access_Token')?['value']}",
                              "Content-Type": "application/json; charset=utf-8",
                              "User-Agent": "dynatrace-microsoft-sentinel/3.x/playbooks/ingestdynatracesentinelsecurityalerts"
                            },
                            "method": "POST",
                            "uri": "https://@{parameters('Tenant')}/api/v2/logs/ingest"
                          }
                        }
                      },
                      "runAfter": {
                        "If_Extended_Links_Exist": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "No_log_entries_to_ingest": {
                            "type": "Terminate",
                            "inputs": {
                              "runStatus": "Succeeded"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('logentries'))",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_LogEntries": {
                      "runAfter": {
                        "Get_Dynatrace_Access_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "logentries",
                            "type": "array"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "keyvault": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                        "connectionName": "[[variables('KeyvaultConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/keyvault')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  },
                  "KeyvaultName": {
                    "value": "[[parameters('KeyvaultName')]"
                  },
                  "Tenant": {
                    "value": "[[parameters('DynatraceTenant')]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId6'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId6')]",
                "contentId": "[variables('_playbookContentId6')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Ingest Microsoft Sentinel Security Alerts into Dynatrace",
            "description": "This playbook will ingest Microsoft Sentinel Security Alerts into Dynatrace.",
            "prerequisites": [
              "1. Dynatrace tenant (ex. xyz.dynatrace.com)",
              "2. Dynatrace Access Token, the token should have Ingest logs (logs.ingest) scope."
            ],
            "lastUpdateTime": "2022-10-19T00:00:00Z",
            "tags": [
              "Ingest"
            ],
            "postDeployment": [
              "After deployment, open the playbook to configure all connections and press save."
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Ingest Microsoft Sentinel Security Alerts into Dynatrace",
                "notes": [
                  "Initial version",
                  "Updated user-agent strings used when calling Dynatrace REST API's"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId6')]",
        "contentKind": "Playbook",
        "displayName": "IngestDynatraceMSSentinelSecurityAlerts",
        "contentProductId": "[variables('_playbookcontentProductId6')]",
        "id": "[variables('_playbookcontentProductId6')]",
        "version": "[variables('playbookVersion6')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Dynatrace data connector with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "APIPolling",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Dynatrace Attacks",
                  "publisher": "Dynatrace",
                  "descriptionMarkdown": "This connector uses the Dynatrace Attacks REST API to ingest detected attacks into Microsoft Sentinel Log Analytics",
                  "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueriesTableName": "DynatraceAttacks_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Dynatrace Attack Events",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All Attack Events",
                      "query": "DynatraceAttacks\n| summarize  arg_max(TimeStamp, *) by AttackId\n|  take 10"
                    },
                    {
                      "description": "All Exploited Attack Events",
                      "query": "DynatraceAttacks\n| where State == \"EXPLOITED\"\n| summarize  arg_max(TimeStamp, *) by AttackId\n|  take 10"
                    },
                    {
                      "description": "Count Attacks by Type",
                      "query": "DynatraceAttacks\n| summarize  arg_max(TimeStamp, *) by AttackId\n| summarize count() by AttackType\n| take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "SentinelKindsV2",
                      "value": [
                        "APIPolling"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                        "description": "You need a valid Dynatrace tenant with [Application Security](https://www.dynatrace.com/platform/application-security/) enabled, learn more about the [Dynatrace platform](https://www.dynatrace.com/)."
                      },
                      {
                        "name": "Dynatrace Access Token",
                        "description": "You need a Dynatrace Access Token, the token should have ***Read attacks*** (attacks.read) scope."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Configure and Enable Dynatrace [Application Security](https://www.dynatrace.com/platform/application-security/). \n Follow [these instructions](https://docs.dynatrace.com/docs/shortlink/token#create-api-token) to generate an access token.",
                      "instructions": [
                        {
                          "parameters": {
                            "enable": "true",
                            "userRequestPlaceHoldersInput": [
                              {
                                "displayText": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                                "requestObjectKey": "apiEndpoint",
                                "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                              }
                            ]
                          },
                          "type": "APIKey"
                        }
                      ],
                      "title": "Dynatrace Attack Events to Microsoft Sentinel"
                    }
                  ],
                  "metadata": {
                    "version": "1.0.0",
                    "kind": "dataConnector"
                  }
                },
                "pollingConfig": {
                  "auth": {
                    "authType": "APIKey",
                    "APIKeyIdentifier": "Api-Token",
                    "APIKeyName": "Authorization"
                  },
                  "request": {
                    "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/attacks",
                    "httpMethod": "Get",
                    "rateLimitQPS": 2,
                    "retryCount": 3,
                    "timeoutInSeconds": 120,
                    "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                    "queryWindowInMin": 5,
                    "startTimeAttributeName": "from",
                    "endTimeAttributeName": "to",
                    "headers": {
                      "Accept": "application/json",
                      "User-Agent": "dynatrace-microsoft-sentinel/3.x/connectors/attacks"
                    },
                    "queryParameters": {
                      "fields": "+attacker,+request,+entrypoint,+vulnerability,+managementZones"
                    }
                  },
                  "paging": {
                    "pagingType": "NextPageToken",
                    "pagingQueryParamOnly": true,
                    "nextPageTokenJsonPath": "$.nextPageKey",
                    "nextPageParaName": "nextPageKey",
                    "pageSizeParaName": "pageSize",
                    "pageSize": 500
                  },
                  "response": {
                    "eventsJsonPaths": [
                      "$.attacks"
                    ],
                    "convertChildPropertiesToArray": true
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Dynatrace Attacks",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "id": "[variables('_uiConfigId1')]",
          "title": "Dynatrace Attacks",
          "publisher": "Dynatrace",
          "descriptionMarkdown": "This connector uses the Dynatrace Attacks REST API to ingest detected attacks into Microsoft Sentinel Log Analytics",
          "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
          "graphQueriesTableName": "DynatraceAttacks_CL",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Dynatrace Attack Events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "All Attack Events",
              "query": "DynatraceAttacks\n| summarize  arg_max(TimeStamp, *) by AttackId\n|  take 10"
            },
            {
              "description": "All Exploited Attack Events",
              "query": "DynatraceAttacks\n| where State == \"EXPLOITED\"\n| summarize  arg_max(TimeStamp, *) by AttackId\n|  take 10"
            },
            {
              "description": "Count Attacks by Type",
              "query": "DynatraceAttacks\n| summarize  arg_max(TimeStamp, *) by AttackId\n| summarize count() by AttackType\n| take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "SentinelKindsV2",
              "value": [
                "APIPolling"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                "description": "You need a valid Dynatrace tenant with [Application Security](https://www.dynatrace.com/platform/application-security/) enabled, learn more about the [Dynatrace platform](https://www.dynatrace.com/)."
              },
              {
                "name": "Dynatrace Access Token",
                "description": "You need a Dynatrace Access Token, the token should have ***Read attacks*** (attacks.read) scope."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Configure and Enable Dynatrace [Application Security](https://www.dynatrace.com/platform/application-security/). \n Follow [these instructions](https://docs.dynatrace.com/docs/shortlink/token#create-api-token) to generate an access token.",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true",
                    "userRequestPlaceHoldersInput": [
                      {
                        "displayText": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                        "requestObjectKey": "apiEndpoint",
                        "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                      }
                    ]
                  },
                  "type": "APIKey"
                }
              ],
              "title": "Dynatrace Attack Events to Microsoft Sentinel"
            }
          ],
          "metadata": {
            "version": "1.0.0",
            "kind": "dataConnector"
          }
        },
        "pollingConfig": {
          "auth": {
            "authType": "APIKey",
            "APIKeyIdentifier": "Api-Token",
            "APIKeyName": "Authorization"
          },
          "request": {
            "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/attacks",
            "httpMethod": "Get",
            "rateLimitQPS": 2,
            "retryCount": 3,
            "timeoutInSeconds": 120,
            "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
            "queryWindowInMin": 5,
            "startTimeAttributeName": "from",
            "endTimeAttributeName": "to",
            "headers": {
              "Accept": "application/json",
              "User-Agent": "dynatrace-microsoft-sentinel/3.x/connectors/attacks"
            },
            "queryParameters": {
              "fields": "+attacker,+request,+entrypoint,+vulnerability,+managementZones"
            }
          },
          "paging": {
            "pagingType": "NextPageToken",
            "pagingQueryParamOnly": true,
            "nextPageTokenJsonPath": "$.nextPageKey",
            "nextPageParaName": "nextPageKey",
            "pageSizeParaName": "pageSize",
            "pageSize": 500
          },
          "response": {
            "eventsJsonPaths": [
              "$.attacks"
            ],
            "convertChildPropertiesToArray": true
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Dynatrace data connector with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId2'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "APIPolling",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId2')]",
                  "title": "Dynatrace Runtime Vulnerabilities",
                  "publisher": "Dynatrace",
                  "descriptionMarkdown": "This connector uses the [Dynatrace Security Problem REST API](https://docs.dynatrace.com/docs/dynatrace-api/environment-api/application-security/vulnerabilities/get-vulnerabilities) to ingest detected runtime vulnerabilities into Microsoft Sentinel Log Analytics.",
                  "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueriesTableName": "DynatraceSecurityProblems_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Dynatrace Vulnerabilities Events",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
                    },
                    {
                      "description": "All Third-Party Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"THIRD_PARTY\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
                    },
                    {
                      "description": "All Code-level Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"CODE_LEVEL\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
                    },
                    {
                      "description": "All Runtime Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"RUNTIME\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
                    },
                    {
                      "description": "Critical Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| where DAVISRiskLevel == \"CRITICAL\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| take 10"
                    },
                    {
                      "description": "High Vulnerability Events",
                      "query": "DynatraceSecurityProblems\n| where DAVISRiskLevel == \"HIGH\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| take 10"
                    },
                    {
                      "description": "Count Vulnerability Events by Technology and Vulnerability",
                      "query": "DynatraceSecurityProblems\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| summarize count() by Technology, ExternalVulnerabilityId\n| take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "SentinelKindsV2",
                      "value": [
                        "APIPolling"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                        "description": "You need a valid Dynatrace tenant with [Application Security](https://www.dynatrace.com/platform/application-security/) enabled, learn more about the [Dynatrace platform](https://www.dynatrace.com/)."
                      },
                      {
                        "name": "Dynatrace Access Token",
                        "description": "You need a Dynatrace Access Token, the token should have ***Read security problems*** (securityProblems.read) scope."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Configure and Enable Dynatrace [Application Security](https://www.dynatrace.com/platform/application-security/). \n Follow [these instructions](https://docs.dynatrace.com/docs/shortlink/token#create-api-token) to generate an access token.",
                      "instructions": [
                        {
                          "parameters": {
                            "enable": "true",
                            "userRequestPlaceHoldersInput": [
                              {
                                "displayText": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                                "requestObjectKey": "apiEndpoint",
                                "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                              }
                            ]
                          },
                          "type": "APIKey"
                        }
                      ],
                      "title": "Dynatrace Vulnerabilities Events to Microsoft Sentinel"
                    }
                  ],
                  "metadata": {
                    "version": "1.0.0",
                    "kind": "dataConnector"
                  }
                },
                "pollingConfig": {
                  "auth": {
                    "authType": "APIKey",
                    "APIKeyIdentifier": "Api-Token",
                    "APIKeyName": "Authorization"
                  },
                  "request": {
                    "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/securityProblems",
                    "httpMethod": "Get",
                    "rateLimitQPS": 2,
                    "retryCount": 3,
                    "timeoutInSeconds": 120,
                    "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                    "queryWindowInMin": 5,
                    "startTimeAttributeName": "from",
                    "endTimeAttributeName": "to",
                    "headers": {
                      "Accept": "application/json",
                      "User-Agent": "dynatrace-microsoft-sentinel/3.x/connectors/securityproblems"
                    },
                    "queryParameters": {
                      "fields": "+riskAssessment,+managementZones,+codeLevelVulnerabilityDetails"
                    }
                  },
                  "paging": {
                    "pagingType": "NextPageToken",
                    "pagingQueryParamOnly": true,
                    "nextPageTokenJsonPath": "$.nextPageKey",
                    "nextPageParaName": "nextPageKey",
                    "pageSizeParaName": "pageSize",
                    "pageSize": 10
                  },
                  "response": {
                    "eventsJsonPaths": [
                      "$.securityProblems"
                    ],
                    "convertChildPropertiesToArray": true
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
                "contentId": "[variables('_dataConnectorContentId2')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId2')]",
        "contentKind": "DataConnector",
        "displayName": "Dynatrace Runtime Vulnerabilities",
        "contentProductId": "[variables('_dataConnectorcontentProductId2')]",
        "id": "[variables('_dataConnectorcontentProductId2')]",
        "version": "[variables('dataConnectorVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId2')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
        "contentId": "[variables('_dataConnectorContentId2')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion2')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId2'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "id": "[variables('_uiConfigId2')]",
          "title": "Dynatrace Runtime Vulnerabilities",
          "publisher": "Dynatrace",
          "descriptionMarkdown": "This connector uses the [Dynatrace Security Problem REST API](https://docs.dynatrace.com/docs/dynatrace-api/environment-api/application-security/vulnerabilities/get-vulnerabilities) to ingest detected runtime vulnerabilities into Microsoft Sentinel Log Analytics.",
          "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
          "graphQueriesTableName": "DynatraceSecurityProblems_CL",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Dynatrace Vulnerabilities Events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "All Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
            },
            {
              "description": "All Third-Party Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"THIRD_PARTY\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
            },
            {
              "description": "All Code-level Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"CODE_LEVEL\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
            },
            {
              "description": "All Runtime Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| where VulnerabilityType == \"RUNTIME\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n|  take 10"
            },
            {
              "description": "Critical Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| where DAVISRiskLevel == \"CRITICAL\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| take 10"
            },
            {
              "description": "High Vulnerability Events",
              "query": "DynatraceSecurityProblems\n| where DAVISRiskLevel == \"HIGH\"\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| take 10"
            },
            {
              "description": "Count Vulnerability Events by Technology and Vulnerability",
              "query": "DynatraceSecurityProblems\n| summarize  arg_max(LastUpdatedTimeStamp, *) by SecurityProblemId\n| summarize count() by Technology, ExternalVulnerabilityId\n| take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "SentinelKindsV2",
              "value": [
                "APIPolling"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                "description": "You need a valid Dynatrace tenant with [Application Security](https://www.dynatrace.com/platform/application-security/) enabled, learn more about the [Dynatrace platform](https://www.dynatrace.com/)."
              },
              {
                "name": "Dynatrace Access Token",
                "description": "You need a Dynatrace Access Token, the token should have ***Read security problems*** (securityProblems.read) scope."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Configure and Enable Dynatrace [Application Security](https://www.dynatrace.com/platform/application-security/). \n Follow [these instructions](https://docs.dynatrace.com/docs/shortlink/token#create-api-token) to generate an access token.",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true",
                    "userRequestPlaceHoldersInput": [
                      {
                        "displayText": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                        "requestObjectKey": "apiEndpoint",
                        "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                      }
                    ]
                  },
                  "type": "APIKey"
                }
              ],
              "title": "Dynatrace Vulnerabilities Events to Microsoft Sentinel"
            }
          ],
          "metadata": {
            "version": "1.0.0",
            "kind": "dataConnector"
          }
        },
        "pollingConfig": {
          "auth": {
            "authType": "APIKey",
            "APIKeyIdentifier": "Api-Token",
            "APIKeyName": "Authorization"
          },
          "request": {
            "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/securityProblems",
            "httpMethod": "Get",
            "rateLimitQPS": 2,
            "retryCount": 3,
            "timeoutInSeconds": 120,
            "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
            "queryWindowInMin": 5,
            "startTimeAttributeName": "from",
            "endTimeAttributeName": "to",
            "headers": {
              "Accept": "application/json",
              "User-Agent": "dynatrace-microsoft-sentinel/3.x/connectors/securityproblems"
            },
            "queryParameters": {
              "fields": "+riskAssessment,+managementZones,+codeLevelVulnerabilityDetails"
            }
          },
          "paging": {
            "pagingType": "NextPageToken",
            "pagingQueryParamOnly": true,
            "nextPageTokenJsonPath": "$.nextPageKey",
            "nextPageParaName": "nextPageKey",
            "pageSizeParaName": "pageSize",
            "pageSize": 10
          },
          "response": {
            "eventsJsonPaths": [
              "$.securityProblems"
            ],
            "convertChildPropertiesToArray": true
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Dynatrace data connector with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId3'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "APIPolling",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId3')]",
                  "title": "Dynatrace Problems",
                  "publisher": "Dynatrace",
                  "descriptionMarkdown": "This connector uses the [Dynatrace Problem REST API](https://docs.dynatrace.com/docs/dynatrace-api/environment-api/problems-v2) to ingest problem events into Microsoft Sentinel Log Analytics",
                  "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueriesTableName": "DynatraceProblems_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Dynatrace Problem Events",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All Problem Events",
                      "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
                    },
                    {
                      "description": "All Open Problem Events",
                      "query": "DynatraceProblems\n| summarize  arg_max(EndTime, *) by ProblemId\n| where isnull(EndTime) or Status == \"OPEN\"\n|  take 10"
                    },
                    {
                      "description": "Error Problem Events",
                      "query": "DynatraceProblems\n| where SeverityLevel == \"ERROR\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
                    },
                    {
                      "description": "Availability Problem Events",
                      "query": "DynatraceProblems\n| where SeverityLevel == \"AVAILABILITY\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
                    },
                    {
                      "description": "Performance Problem Events",
                      "query": "DynatraceProblems\n| where SeverityLevel == \"PERFORMANCE\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
                    },
                    {
                      "description": "Count Problem Events by impact level",
                      "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n| summarize count() by ImpactLevel\n| take 10"
                    },
                    {
                      "description": "Count Problem Events by severity level",
                      "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n| summarize count() by SeverityLevel\n| take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "SentinelKindsV2",
                      "value": [
                        "APIPolling"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                        "description": "You need a valid Dynatrace Tenant, to learn more about the Dynatrace platform [Start your free trial](https://www.dynatrace.com/trial)."
                      },
                      {
                        "name": "Dynatrace Access Token",
                        "description": "You need a Dynatrace Access Token, the token should have ***Read problems*** (problems.read) scope."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Follow [these instructions](https://docs.dynatrace.com/docs/shortlink/token#create-api-token) to generate an access token.",
                      "instructions": [
                        {
                          "parameters": {
                            "enable": "true",
                            "userRequestPlaceHoldersInput": [
                              {
                                "displayText": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                                "requestObjectKey": "apiEndpoint",
                                "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                              }
                            ]
                          },
                          "type": "APIKey"
                        }
                      ],
                      "title": "Dynatrace Problem Events to Microsoft Sentinel"
                    }
                  ],
                  "metadata": {
                    "version": "1.0.0",
                    "kind": "dataConnector"
                  }
                },
                "pollingConfig": {
                  "auth": {
                    "authType": "APIKey",
                    "APIKeyIdentifier": "Api-Token",
                    "APIKeyName": "Authorization"
                  },
                  "request": {
                    "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/problems",
                    "httpMethod": "Get",
                    "rateLimitQPS": 2,
                    "retryCount": 3,
                    "timeoutInSeconds": 120,
                    "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                    "queryWindowInMin": 5,
                    "startTimeAttributeName": "from",
                    "endTimeAttributeName": "to",
                    "headers": {
                      "Accept": "application/json",
                      "User-Agent": "dynatrace-microsoft-sentinel/3.x/connectors/problems"
                    },
                    "queryParameters": {
                      "fields": "+evidenceDetails,+impactAnalysis"
                    }
                  },
                  "paging": {
                    "pagingType": "NextPageToken",
                    "pagingQueryParamOnly": true,
                    "nextPageTokenJsonPath": "$.nextPageKey",
                    "nextPageParaName": "nextPageKey",
                    "pageSizeParaName": "pageSize",
                    "pageSize": 10
                  },
                  "response": {
                    "eventsJsonPaths": [
                      "$.problems"
                    ],
                    "convertChildPropertiesToArray": true
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId3'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
                "contentId": "[variables('_dataConnectorContentId3')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId3')]",
        "contentKind": "DataConnector",
        "displayName": "Dynatrace Problems",
        "contentProductId": "[variables('_dataConnectorcontentProductId3')]",
        "id": "[variables('_dataConnectorcontentProductId3')]",
        "version": "[variables('dataConnectorVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId3'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId3')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId3'))]",
        "contentId": "[variables('_dataConnectorContentId3')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion3')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId3'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "id": "[variables('_uiConfigId3')]",
          "title": "Dynatrace Problems",
          "publisher": "Dynatrace",
          "descriptionMarkdown": "This connector uses the [Dynatrace Problem REST API](https://docs.dynatrace.com/docs/dynatrace-api/environment-api/problems-v2) to ingest problem events into Microsoft Sentinel Log Analytics",
          "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
          "graphQueriesTableName": "DynatraceProblems_CL",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Dynatrace Problem Events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "All Problem Events",
              "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
            },
            {
              "description": "All Open Problem Events",
              "query": "DynatraceProblems\n| summarize  arg_max(EndTime, *) by ProblemId\n| where isnull(EndTime) or Status == \"OPEN\"\n|  take 10"
            },
            {
              "description": "Error Problem Events",
              "query": "DynatraceProblems\n| where SeverityLevel == \"ERROR\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
            },
            {
              "description": "Availability Problem Events",
              "query": "DynatraceProblems\n| where SeverityLevel == \"AVAILABILITY\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
            },
            {
              "description": "Performance Problem Events",
              "query": "DynatraceProblems\n| where SeverityLevel == \"PERFORMANCE\"\n| summarize  arg_max(StartTime, *) by ProblemId\n|  take 10"
            },
            {
              "description": "Count Problem Events by impact level",
              "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n| summarize count() by ImpactLevel\n| take 10"
            },
            {
              "description": "Count Problem Events by severity level",
              "query": "DynatraceProblems\n| summarize  arg_max(StartTime, *) by ProblemId\n| summarize count() by SeverityLevel\n| take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "SentinelKindsV2",
              "value": [
                "APIPolling"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                "description": "You need a valid Dynatrace Tenant, to learn more about the Dynatrace platform [Start your free trial](https://www.dynatrace.com/trial)."
              },
              {
                "name": "Dynatrace Access Token",
                "description": "You need a Dynatrace Access Token, the token should have ***Read problems*** (problems.read) scope."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Follow [these instructions](https://docs.dynatrace.com/docs/shortlink/token#create-api-token) to generate an access token.",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true",
                    "userRequestPlaceHoldersInput": [
                      {
                        "displayText": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                        "requestObjectKey": "apiEndpoint",
                        "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                      }
                    ]
                  },
                  "type": "APIKey"
                }
              ],
              "title": "Dynatrace Problem Events to Microsoft Sentinel"
            }
          ],
          "metadata": {
            "version": "1.0.0",
            "kind": "dataConnector"
          }
        },
        "pollingConfig": {
          "auth": {
            "authType": "APIKey",
            "APIKeyIdentifier": "Api-Token",
            "APIKeyName": "Authorization"
          },
          "request": {
            "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/problems",
            "httpMethod": "Get",
            "rateLimitQPS": 2,
            "retryCount": 3,
            "timeoutInSeconds": 120,
            "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
            "queryWindowInMin": 5,
            "startTimeAttributeName": "from",
            "endTimeAttributeName": "to",
            "headers": {
              "Accept": "application/json",
              "User-Agent": "dynatrace-microsoft-sentinel/3.x/connectors/problems"
            },
            "queryParameters": {
              "fields": "+evidenceDetails,+impactAnalysis"
            }
          },
          "paging": {
            "pagingType": "NextPageToken",
            "pagingQueryParamOnly": true,
            "nextPageTokenJsonPath": "$.nextPageKey",
            "nextPageParaName": "nextPageKey",
            "pageSizeParaName": "pageSize",
            "pageSize": 10
          },
          "response": {
            "eventsJsonPaths": [
              "$.problems"
            ],
            "convertChildPropertiesToArray": true
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Dynatrace data connector with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId4'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "APIPolling",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId4')]",
                  "title": "Dynatrace Audit Logs",
                  "publisher": "Dynatrace",
                  "descriptionMarkdown": "This connector uses the [Dynatrace Audit Logs REST API](https://docs.dynatrace.com/docs/dynatrace-api/environment-api/audit-logs) to ingest tenant audit logs into Microsoft Sentinel Log Analytics",
                  "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueriesTableName": "DynatraceAuditLogs_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Dynatrace Audit Log Events",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All Audit Log Events",
                      "query": "DynatraceAuditLogs\n| take 10"
                    },
                    {
                      "description": "User Login Events",
                      "query": "DynatraceAuditLogs\n| where EventType == \"LOGIN\"\n and Category == \"WEB_UI\"\n | take 10"
                    },
                    {
                      "description": "Access Token Creation Events",
                      "query": "DynatraceAuditLogs\n| where EventType == \"CREATE\"\n and Category == \"TOKEN\"\n | take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "SentinelKindsV2",
                      "value": [
                        "APIPolling"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                        "description": "You need a valid Dynatrace Tenant, to learn more about the Dynatrace platform [Start your free trial](https://www.dynatrace.com/trial)."
                      },
                      {
                        "name": "Dynatrace Access Token",
                        "description": "You need a Dynatrace Access Token, the token should have ***Read audit logs*** (auditLogs.read) scope."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Enable Dynatrace Audit [Logging](https://docs.dynatrace.com/docs/shortlink/audit-logs#enable-audit-logging). \n Follow [these instructions](https://docs.dynatrace.com/docs/shortlink/token#create-api-token) to generate an access token.",
                      "instructions": [
                        {
                          "parameters": {
                            "enable": "true",
                            "userRequestPlaceHoldersInput": [
                              {
                                "displayText": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                                "requestObjectKey": "apiEndpoint",
                                "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                              }
                            ]
                          },
                          "type": "APIKey"
                        }
                      ],
                      "title": "Dynatrace Audit Log Events to Microsoft Sentinel"
                    }
                  ],
                  "metadata": {
                    "version": "1.0.0",
                    "kind": "dataConnector"
                  }
                },
                "pollingConfig": {
                  "auth": {
                    "authType": "APIKey",
                    "APIKeyIdentifier": "Api-Token",
                    "APIKeyName": "Authorization"
                  },
                  "request": {
                    "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/auditlogs",
                    "httpMethod": "Get",
                    "rateLimitQPS": 2,
                    "retryCount": 3,
                    "timeoutInSeconds": 120,
                    "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                    "queryWindowInMin": 5,
                    "startTimeAttributeName": "from",
                    "endTimeAttributeName": "to",
                    "headers": {
                      "Accept": "application/json",
                      "User-Agent": "dynatrace-microsoft-sentinel/3.x/connectors/auditlogs"
                    }
                  },
                  "paging": {
                    "pagingType": "NextPageToken",
                    "pagingQueryParamOnly": true,
                    "nextPageTokenJsonPath": "$.nextPageKey",
                    "nextPageParaName": "nextPageKey",
                    "pageSizeParaName": "pageSize",
                    "pageSize": 1000
                  },
                  "response": {
                    "eventsJsonPaths": [
                      "$.auditLogs"
                    ],
                    "convertChildPropertiesToArray": true
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId4'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId4'))]",
                "contentId": "[variables('_dataConnectorContentId4')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Dynatrace",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId4')]",
        "contentKind": "DataConnector",
        "displayName": "Dynatrace Audit Logs",
        "contentProductId": "[variables('_dataConnectorcontentProductId4')]",
        "id": "[variables('_dataConnectorcontentProductId4')]",
        "version": "[variables('dataConnectorVersion4')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId4'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId4')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId4'))]",
        "contentId": "[variables('_dataConnectorContentId4')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion4')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId4'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "id": "[variables('_uiConfigId4')]",
          "title": "Dynatrace Audit Logs",
          "publisher": "Dynatrace",
          "descriptionMarkdown": "This connector uses the [Dynatrace Audit Logs REST API](https://docs.dynatrace.com/docs/dynatrace-api/environment-api/audit-logs) to ingest tenant audit logs into Microsoft Sentinel Log Analytics",
          "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected which is deployed with the Microsoft Sentinel Solution.",
          "graphQueriesTableName": "DynatraceAuditLogs_CL",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Dynatrace Audit Log Events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "All Audit Log Events",
              "query": "DynatraceAuditLogs\n| take 10"
            },
            {
              "description": "User Login Events",
              "query": "DynatraceAuditLogs\n| where EventType == \"LOGIN\"\n and Category == \"WEB_UI\"\n | take 10"
            },
            {
              "description": "Access Token Creation Events",
              "query": "DynatraceAuditLogs\n| where EventType == \"CREATE\"\n and Category == \"TOKEN\"\n | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "SentinelKindsV2",
              "value": [
                "APIPolling"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                "description": "You need a valid Dynatrace Tenant, to learn more about the Dynatrace platform [Start your free trial](https://www.dynatrace.com/trial)."
              },
              {
                "name": "Dynatrace Access Token",
                "description": "You need a Dynatrace Access Token, the token should have ***Read audit logs*** (auditLogs.read) scope."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Enable Dynatrace Audit [Logging](https://docs.dynatrace.com/docs/shortlink/audit-logs#enable-audit-logging). \n Follow [these instructions](https://docs.dynatrace.com/docs/shortlink/token#create-api-token) to generate an access token.",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true",
                    "userRequestPlaceHoldersInput": [
                      {
                        "displayText": "Dynatrace tenant (ex. xyz.dynatrace.com)",
                        "requestObjectKey": "apiEndpoint",
                        "placeHolderName": "{{dynatraceEnvironmentUrl}}"
                      }
                    ]
                  },
                  "type": "APIKey"
                }
              ],
              "title": "Dynatrace Audit Log Events to Microsoft Sentinel"
            }
          ],
          "metadata": {
            "version": "1.0.0",
            "kind": "dataConnector"
          }
        },
        "pollingConfig": {
          "auth": {
            "authType": "APIKey",
            "APIKeyIdentifier": "Api-Token",
            "APIKeyName": "Authorization"
          },
          "request": {
            "apiEndpoint": "https://{{dynatraceEnvironmentUrl}}/api/v2/auditlogs",
            "httpMethod": "Get",
            "rateLimitQPS": 2,
            "retryCount": 3,
            "timeoutInSeconds": 120,
            "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
            "queryWindowInMin": 5,
            "startTimeAttributeName": "from",
            "endTimeAttributeName": "to",
            "headers": {
              "Accept": "application/json",
              "User-Agent": "dynatrace-microsoft-sentinel/3.x/connectors/auditlogs"
            }
          },
          "paging": {
            "pagingType": "NextPageToken",
            "pagingQueryParamOnly": true,
            "nextPageTokenJsonPath": "$.nextPageKey",
            "nextPageParaName": "nextPageKey",
            "pageSizeParaName": "pageSize",
            "pageSize": 1000
          },
          "response": {
            "eventsJsonPaths": [
              "$.auditLogs"
            ],
            "convertChildPropertiesToArray": true
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DynatraceAttacks Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for DynatraceAttacks",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "DynatraceAttacks",
                "query": "DynatraceAttacks_CL\n| extend EventVendor = 'Dynatrace'\n| extend EventProduct = 'Application Security'\n| extend Severity = 'High'\n| extend request_host_s = column_ifexists('request_host_s','')\n| project-rename\n    AttackId = attackId_s,\n    AttackType = attackType_s,\n    DisplayId = displayId_s,\n    DisplayName = displayName_s,\n    State = state_s,\n    TimeStamp = timestamp_d,\n    url = request_url_s,\n    host = request_host_s,\n    sourceIp = attacker_sourceIp_s,\n    managementZones = managementZones_s\n| project-away request_path_s, request_protocolDetails_http_requestMethod_s, \n    request_protocolDetails_http_headers_values_s, request_protocolDetails_http_headers_truncationInfo_s,\n    request_protocolDetails_http_parameters_values_s, request_protocolDetails_http_parameters_truncationInfo_s,\n    entrypoint_entrypointFunction_displayName_s, entrypoint_entrypointFunction_className_s,\n    entrypoint_entrypointFunction_functionName_s, entrypoint_entrypointFunction_parameterTypes_values_s,\n    vulnerability_displayName_s, vulnerability_codeLocation_displayName_s,\n    vulnerability_codeLocation_className_s, vulnerability_codeLocation_functionName_s,\n    vulnerability_codeLocation_parameterTypes_values_s, vulnerability_codeLocation_parameterTypes_truncationInfo_truncated_b,\n    vulnerability_codeLocation_returnType_s, vulnerability_codeLocation_lineNumber_d,\n    entrypoint_entrypointFunction_parameterTypes_truncationInfo_truncated_b, entrypoint_entrypointFunction_returnType_s,\n    entrypoint_payload_values_s, entrypoint_payload_truncationInfo_truncated_b,\n    vulnerability_vulnerabilityId_s, vulnerability_vulnerableFunction_displayName_s,\n    vulnerability_vulnerableFunction_className_s, vulnerability_vulnerableFunction_functionName_s,\n    vulnerability_vulnerableFunction_parameterTypes_values_s, vulnerability_vulnerableFunction_parameterTypes_truncationInfo_truncated_b,\n    vulnerability_vulnerableFunction_returnType_s, vulnerability_vulnerableFunctionInput_type_s,\n    vulnerability_vulnerableFunctionInput_inputSegments_s\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceAttacks')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Dynatrace",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Parser for DynatraceAttacks",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for DynatraceAttacks",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "DynatraceAttacks",
        "query": "DynatraceAttacks_CL\n| extend EventVendor = 'Dynatrace'\n| extend EventProduct = 'Application Security'\n| extend Severity = 'High'\n| extend request_host_s = column_ifexists('request_host_s','')\n| project-rename\n    AttackId = attackId_s,\n    AttackType = attackType_s,\n    DisplayId = displayId_s,\n    DisplayName = displayName_s,\n    State = state_s,\n    TimeStamp = timestamp_d,\n    url = request_url_s,\n    host = request_host_s,\n    sourceIp = attacker_sourceIp_s,\n    managementZones = managementZones_s\n| project-away request_path_s, request_protocolDetails_http_requestMethod_s, \n    request_protocolDetails_http_headers_values_s, request_protocolDetails_http_headers_truncationInfo_s,\n    request_protocolDetails_http_parameters_values_s, request_protocolDetails_http_parameters_truncationInfo_s,\n    entrypoint_entrypointFunction_displayName_s, entrypoint_entrypointFunction_className_s,\n    entrypoint_entrypointFunction_functionName_s, entrypoint_entrypointFunction_parameterTypes_values_s,\n    vulnerability_displayName_s, vulnerability_codeLocation_displayName_s,\n    vulnerability_codeLocation_className_s, vulnerability_codeLocation_functionName_s,\n    vulnerability_codeLocation_parameterTypes_values_s, vulnerability_codeLocation_parameterTypes_truncationInfo_truncated_b,\n    vulnerability_codeLocation_returnType_s, vulnerability_codeLocation_lineNumber_d,\n    entrypoint_entrypointFunction_parameterTypes_truncationInfo_truncated_b, entrypoint_entrypointFunction_returnType_s,\n    entrypoint_payload_values_s, entrypoint_payload_truncationInfo_truncated_b,\n    vulnerability_vulnerabilityId_s, vulnerability_vulnerableFunction_displayName_s,\n    vulnerability_vulnerableFunction_className_s, vulnerability_vulnerableFunction_functionName_s,\n    vulnerability_vulnerableFunction_parameterTypes_values_s, vulnerability_vulnerableFunction_parameterTypes_truncationInfo_truncated_b,\n    vulnerability_vulnerableFunction_returnType_s, vulnerability_vulnerableFunctionInput_type_s,\n    vulnerability_vulnerableFunctionInput_inputSegments_s\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceAttacks')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DynatraceAuditLogs Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for DynatraceAuditLogs",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "DynatraceAuditLogs",
                "query": "DynatraceAuditLogs_CL\n| extend EventVendor = 'Dynatrace'\n| extend EventProduct = 'Audit'\n| extend Severity = 'Informational'\n| project-rename\n    LogId = logId_s,\n    EnvironmentId = environmentId_s,\n    EventType = eventType_s,\n    UserOrigin = userOrigin_s,\n    UserType = userType_s,\n    User = user_s,\n    Success = success_b,\n    TimeStamp = timestamp_d\n| project-away entityId_s, patch_s\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceAuditLogs')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "Dynatrace",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "Parser for DynatraceAuditLogs",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for DynatraceAuditLogs",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "DynatraceAuditLogs",
        "query": "DynatraceAuditLogs_CL\n| extend EventVendor = 'Dynatrace'\n| extend EventProduct = 'Audit'\n| extend Severity = 'Informational'\n| project-rename\n    LogId = logId_s,\n    EnvironmentId = environmentId_s,\n    EventType = eventType_s,\n    UserOrigin = userOrigin_s,\n    UserType = userType_s,\n    User = user_s,\n    Success = success_b,\n    TimeStamp = timestamp_d\n| project-away entityId_s, patch_s\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceAuditLogs')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject3').parserTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DynatraceProblems Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject3').parserVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject3')._parserName3]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for DynatraceProblems",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "DynatraceProblems",
                "query": "DynatraceProblems_CL\n| extend EventVendor = 'Dynatrace'\n| extend EventProduct = 'Application Monitoring'\n| extend Severity = case(severityLevel_s  == 'ERROR', 'High', \n                       severityLevel_s == 'INFO', 'Informational', \n                       'Medium')\n| project-rename\n    ProblemId = problemId_s,\n    AffectedEntities = affectedEntities_s ,\n    ImpactedEntities = impactedEntities_s ,\n    ManagementZones = managementZones_s ,\n    DisplayId = displayId_s,\n    EndTime = endTime_d ,\n    EntityTags = entityTags_s ,\n    ImpactLevel = impactLevel_s ,\n    StartTime = startTime_d ,\n    Status = status_s ,\n    Title = title_s, \n    SeverityLevel = severityLevel_s\n| project-away problemFilters_s,evidenceDetails_totalCount_d,\n    evidenceDetails_details_s, impactAnalysis_impacts_s\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
              "dependsOn": [
                "[variables('parserObject3')._parserId3]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceProblems')]",
                "contentId": "[variables('parserObject3').parserContentId3]",
                "kind": "Parser",
                "version": "[variables('parserObject3').parserVersion3]",
                "source": {
                  "name": "Dynatrace",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "contentKind": "Parser",
        "displayName": "Parser for DynatraceProblems",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "version": "[variables('parserObject3').parserVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject3')._parserName3]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for DynatraceProblems",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "DynatraceProblems",
        "query": "DynatraceProblems_CL\n| extend EventVendor = 'Dynatrace'\n| extend EventProduct = 'Application Monitoring'\n| extend Severity = case(severityLevel_s  == 'ERROR', 'High', \n                       severityLevel_s == 'INFO', 'Informational', \n                       'Medium')\n| project-rename\n    ProblemId = problemId_s,\n    AffectedEntities = affectedEntities_s ,\n    ImpactedEntities = impactedEntities_s ,\n    ManagementZones = managementZones_s ,\n    DisplayId = displayId_s,\n    EndTime = endTime_d ,\n    EntityTags = entityTags_s ,\n    ImpactLevel = impactLevel_s ,\n    StartTime = startTime_d ,\n    Status = status_s ,\n    Title = title_s, \n    SeverityLevel = severityLevel_s\n| project-away problemFilters_s,evidenceDetails_totalCount_d,\n    evidenceDetails_details_s, impactAnalysis_impacts_s\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
      "dependsOn": [
        "[variables('parserObject3')._parserId3]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceProblems')]",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "kind": "Parser",
        "version": "[variables('parserObject3').parserVersion3]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject4').parserTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DynatraceSecurityProblems Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject4').parserVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject4')._parserName4]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for DynatraceSecurityProblems",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "DynatraceSecurityProblems",
                "query": "DynatraceSecurityProblems_CL\n| extend EventVendor = 'Dynatrace'\n| extend EventProduct = 'Application Security'\n| extend Severity = case(riskAssessment_riskLevel_s == 'CRITICAL', 'High', \n                       riskAssessment_riskLevel_s == 'HIGH', 'Medium', \n                       riskAssessment_riskLevel_s == 'MEDIUM', 'Low',\n                       'Informational')\n| project-rename\n    SecurityProblemId = securityProblemId_s,\n    CVEIds = cveIds_s,\n    DisplayId = displayId_s,\n    ExternalVulnerabilityId = externalVulnerabilityId_s ,\n    FirstSeenTimeStamp = firstSeenTimestamp_d ,\n    LastUpdatedTimeStamp = lastUpdatedTimestamp_d,\n    Muted = muted_b,\n    PackageName = packageName_s,\n    DAVISRiskLevel = riskAssessment_riskLevel_s,\n    DAVISRiskScore = riskAssessment_riskScore_d,\n    DAVISRiskVector = riskAssessment_riskVector_s,\n    DAVISVulnerableFunctionUsage = riskAssessment_vulnerableFunctionUsage_s ,\n    DAVISExposure = riskAssessment_exposure_s,\n    DAVISDataAssets = riskAssessment_dataAssets_s,\n    DAVISPublicExploit = riskAssessment_publicExploit_s,\n    Status = status_s,\n    Technology = technology_s ,\n    Title = title_s ,\n    Url = url_s,\n    VulnerabilityType = vulnerabilityType_s,\n    ManagementZones = managementZones_s\n| project-away riskAssessment_baseRiskLevel_s, riskAssessment_baseRiskScore_d, \n    riskAssessment_baseRiskVector_s,riskAssessment_assessmentAccuracy_s\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
              "dependsOn": [
                "[variables('parserObject4')._parserId4]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceSecurityProblems')]",
                "contentId": "[variables('parserObject4').parserContentId4]",
                "kind": "Parser",
                "version": "[variables('parserObject4').parserVersion4]",
                "source": {
                  "name": "Dynatrace",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dynatrace",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dynatrace",
                  "email": "microsoftalliances@dynatrace.com",
                  "tier": "Partner",
                  "link": "https://www.dynatrace.com/services-support/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "contentKind": "Parser",
        "displayName": "Parser for DynatraceSecurityProblems",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "version": "[variables('parserObject4').parserVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject4')._parserName4]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for DynatraceSecurityProblems",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "DynatraceSecurityProblems",
        "query": "DynatraceSecurityProblems_CL\n| extend EventVendor = 'Dynatrace'\n| extend EventProduct = 'Application Security'\n| extend Severity = case(riskAssessment_riskLevel_s == 'CRITICAL', 'High', \n                       riskAssessment_riskLevel_s == 'HIGH', 'Medium', \n                       riskAssessment_riskLevel_s == 'MEDIUM', 'Low',\n                       'Informational')\n| project-rename\n    SecurityProblemId = securityProblemId_s,\n    CVEIds = cveIds_s,\n    DisplayId = displayId_s,\n    ExternalVulnerabilityId = externalVulnerabilityId_s ,\n    FirstSeenTimeStamp = firstSeenTimestamp_d ,\n    LastUpdatedTimeStamp = lastUpdatedTimestamp_d,\n    Muted = muted_b,\n    PackageName = packageName_s,\n    DAVISRiskLevel = riskAssessment_riskLevel_s,\n    DAVISRiskScore = riskAssessment_riskScore_d,\n    DAVISRiskVector = riskAssessment_riskVector_s,\n    DAVISVulnerableFunctionUsage = riskAssessment_vulnerableFunctionUsage_s ,\n    DAVISExposure = riskAssessment_exposure_s,\n    DAVISDataAssets = riskAssessment_dataAssets_s,\n    DAVISPublicExploit = riskAssessment_publicExploit_s,\n    Status = status_s,\n    Technology = technology_s ,\n    Title = title_s ,\n    Url = url_s,\n    VulnerabilityType = vulnerabilityType_s,\n    ManagementZones = managementZones_s\n| project-away riskAssessment_baseRiskLevel_s, riskAssessment_baseRiskScore_d, \n    riskAssessment_baseRiskVector_s,riskAssessment_assessmentAccuracy_s\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
      "dependsOn": [
        "[variables('parserObject4')._parserId4]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DynatraceSecurityProblems')]",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "kind": "Parser",
        "version": "[variables('parserObject4').parserVersion4]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Dynatrace",
        "publisherDisplayName": "Dynatrace",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Dynatrace/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<ul>\n<li>Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Dynatrace/ReleaseNotes.md\">Release Notes</a></li>\n</ul>\n<p>Dynatrace is a leading observability platform that provides automatic and intelligent observability at scale for cloud-native and enterprise workloads; with Dynatrace Application Security, your DevSecOps teams can resolve security issues faster, accelerating software delivery.\nIntegrating Dynatrace with Microsoft Sentinel enables DevSecOps teams to detect, prioritize, triage, and remediate attacks rapidly. DevSecOps teams benefit from the high-accuracy threat signals Dynatrace surfaces. It helps them avoid time-consuming investigation activities, freeing them up for more critical tasks.\nMicrosoft Sentinel data connectors poll Dynatrace for new <a href=\"https://www.dynatrace.com/platform/application-security/\">attacks, vulnerabilities, audit logs</a>, and <a href=\"https://docs.dynatrace.com/docs/shortlink/davis-ai-landing\">problem events</a>.</p>\n<p><strong>Included data connectors:</strong></p>\n<ul>\n<li><strong>Attacks</strong>, Common attacks on application layer vulnerabilities which can be detected and blocked using Dynatrace, like SQL injection, command injection, and JNDI attacks.</li>\n<li><strong>Runtime vulnerabilities</strong>, Software vulnerabilities detected throughout all layers of the application stack.</li>\n<li><strong>Audit logs</strong>, Security-relevant events for a Dynatrace tenant.</li>\n<li><strong>Problems</strong>, AI-powered observability problems raised across cloud and hybrid environments.</li>\n</ul>\n<p><a href=\"https://www.dynatrace.com/\">Learn More about Dynatrace</a> | <a href=\"https://docs.dynatrace.com/docs\">Dynatrace Docs</a></p>\n<p><strong>Data Connectors:</strong> 4, <strong>Parsers:</strong> 4, <strong>Workbooks:</strong> 1, <strong>Analytic Rules:</strong> 5, <strong>Playbooks:</strong> 6</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/dynatrace.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Dynatrace",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dynatrace",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dynatrace",
          "email": "microsoftalliances@dynatrace.com",
          "tier": "Partner",
          "link": "https://www.dynatrace.com/services-support/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Add_DynatraceApplicationSecurityAttackSourceIpThreatIntelligence')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Enrich_DynatraceApplicationSecurityAttackIncident')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Enrich-DynatraceAppSecAttackMSDefenderXDR')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Enrich-DynatraceAppSecAttackWithSecurityAlerts')]",
              "version": "[variables('playbookVersion4')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Ingest-DynatraceMSDefenderXDR')]",
              "version": "[variables('playbookVersion5')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Ingest-DynatraceMSSentinelSecurityAlerts')]",
              "version": "[variables('playbookVersion6')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId2')]",
              "version": "[variables('dataConnectorVersion2')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId3')]",
              "version": "[variables('dataConnectorVersion3')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId4')]",
              "version": "[variables('dataConnectorVersion4')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject3').parserContentId3]",
              "version": "[variables('parserObject3').parserVersion3]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject4').parserContentId4]",
              "version": "[variables('parserObject4').parserVersion4]"
            }
          ]
        },
        "firstPublishDate": "2022-10-18",
        "lastPublishDate": "2023-10-16",
        "providers": [
          "Dynatrace"
        ],
        "categories": {
          "domains": [
            "Security - Others",
            "IT Operations",
            "DevOps",
            "Migration",
            "Security - Threat Protection",
            "Security - Vulnerability Management"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
