{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Multi Cloud Attack Coverage Essentials - Resource Abuse"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
    "_solutionVersion": "3.0.3",
    "solutionId": "azuresentinel.azure-sentinel-solution-multicloudattackcoverage",
    "_solutionId": "[variables('solutionId')]",
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.0.1",
      "_analyticRulecontentId1": "1f40ed57-f54b-462f-906a-ac3a89cc90d4",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1f40ed57-f54b-462f-906a-ac3a89cc90d4')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1f40ed57-f54b-462f-906a-ac3a89cc90d4')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1f40ed57-f54b-462f-906a-ac3a89cc90d4','-', '1.0.1')))]"
    },
    "analyticRuleObject2": {
      "analyticRuleVersion2": "1.0.2",
      "_analyticRulecontentId2": "5c847e47-0a07-4c01-ab99-5817ad6cb11e",
      "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5c847e47-0a07-4c01-ab99-5817ad6cb11e')]",
      "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5c847e47-0a07-4c01-ab99-5817ad6cb11e')))]",
      "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','5c847e47-0a07-4c01-ab99-5817ad6cb11e','-', '1.0.2')))]"
    },
    "analyticRuleObject3": {
      "analyticRuleVersion3": "1.0.2",
      "_analyticRulecontentId3": "58e306fe-1c49-4b8f-9b0e-15f25e8f0cd7",
      "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '58e306fe-1c49-4b8f-9b0e-15f25e8f0cd7')]",
      "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('58e306fe-1c49-4b8f-9b0e-15f25e8f0cd7')))]",
      "_analyticRulecontentProductId3": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','58e306fe-1c49-4b8f-9b0e-15f25e8f0cd7','-', '1.0.2')))]"
    },
    "analyticRuleObject4": {
      "analyticRuleVersion4": "1.0.3",
      "_analyticRulecontentId4": "122fbc6a-57ab-4aa7-b9a9-51ac4970cac1",
      "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '122fbc6a-57ab-4aa7-b9a9-51ac4970cac1')]",
      "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('122fbc6a-57ab-4aa7-b9a9-51ac4970cac1')))]",
      "_analyticRulecontentProductId4": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','122fbc6a-57ab-4aa7-b9a9-51ac4970cac1','-', '1.0.3')))]"
    },
    "analyticRuleObject5": {
      "analyticRuleVersion5": "1.0.1",
      "_analyticRulecontentId5": "188db479-d50a-4a9c-a041-644bae347d1f",
      "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '188db479-d50a-4a9c-a041-644bae347d1f')]",
      "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('188db479-d50a-4a9c-a041-644bae347d1f')))]",
      "_analyticRulecontentProductId5": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','188db479-d50a-4a9c-a041-644bae347d1f','-', '1.0.1')))]"
    },
    "analyticRuleObject6": {
      "analyticRuleVersion6": "1.0.1",
      "_analyticRulecontentId6": "b51fe620-62ad-4ed2-9d40-5c97c0a8231f",
      "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b51fe620-62ad-4ed2-9d40-5c97c0a8231f')]",
      "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b51fe620-62ad-4ed2-9d40-5c97c0a8231f')))]",
      "_analyticRulecontentProductId6": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b51fe620-62ad-4ed2-9d40-5c97c0a8231f','-', '1.0.1')))]"
    },
    "analyticRuleObject7": {
      "analyticRuleVersion7": "1.0.4",
      "_analyticRulecontentId7": "60f31001-018a-42bf-8045-a92e1f361b7b",
      "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '60f31001-018a-42bf-8045-a92e1f361b7b')]",
      "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('60f31001-018a-42bf-8045-a92e1f361b7b')))]",
      "_analyticRulecontentProductId7": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','60f31001-018a-42bf-8045-a92e1f361b7b','-', '1.0.4')))]"
    },
    "analyticRuleObject8": {
      "analyticRuleVersion8": "1.0.0",
      "_analyticRulecontentId8": "11c3d541-5fa5-49df-8218-d1c98584473b",
      "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '11c3d541-5fa5-49df-8218-d1c98584473b')]",
      "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('11c3d541-5fa5-49df-8218-d1c98584473b')))]",
      "_analyticRulecontentProductId8": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','11c3d541-5fa5-49df-8218-d1c98584473b','-', '1.0.0')))]"
    },
    "analyticRuleObject9": {
      "analyticRuleVersion9": "1.0.1",
      "_analyticRulecontentId9": "f4a28082-2808-4783-9736-33c1ae117475",
      "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f4a28082-2808-4783-9736-33c1ae117475')]",
      "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('f4a28082-2808-4783-9736-33c1ae117475')))]",
      "_analyticRulecontentProductId9": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','f4a28082-2808-4783-9736-33c1ae117475','-', '1.0.1')))]"
    },
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]",
    "ProjectId": "ProjectId",
    "_ProjectId": "[variables('ProjectId')]",
    "SystemAlertId": "SystemAlertId",
    "_SystemAlertId": "[variables('SystemAlertId')]",
    "RDSInstanceId": "RDSInstanceId",
    "_RDSInstanceId": "[variables('RDSInstanceId')]",
    "GCPProjctId": "GCPProjctId",
    "_GCPProjctId": "[variables('GCPProjctId')]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "BrutforceAttemptOnAzurePortalAndAWSConsolAtSameTime_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This detection focuses on identifying potential cross-cloud brute force / Password Spray attempts involving Azure and AWS platforms. It monitors sign-in activities within the Azure Portal and AWS ConsoleLogins where brute force attempts are successful on both platforms in a synchronized manner.",
                "displayName": "Cross-Cloud Password Spray detection",
                "enabled": false,
                "query": "// Materialize a table named \"Azure_Bruforce\" containing Azure Portal sign-in logs within the last 1 day\nlet Azure_Bruforce =  materialize (\n    SigninLogs\n// Filter sign-in logs related to the Azure Portal\n      | where AppDisplayName == \"Azure Portal\"\n// Exclude entries with empty OriginalRequestId\n    | where isnotempty(OriginalRequestId)\n// Summarize various counts and sets based on brute force criteria\n    | summarize \n      AzureSuccessfulEvent = countif(ResultType == 0), \n      AzureFailedEvent = countif(ResultType != 0), \n      totalAzureLoginEventId = dcount(OriginalRequestId), \n      AzureFailedEventsCount = dcountif(OriginalRequestId, ResultType != 0), \n      AzureSuccessfuleventsCount = dcountif(OriginalRequestId, ResultType == 0),\n      AzureSetOfFailedevents = makeset(iff(ResultType != 0, OriginalRequestId, \"\"), 5), \n      AzureSetOfSuccessfulEvents = makeset(iff(ResultType == 0, OriginalRequestId, \"\"), 5) \n      by \n      IPAddress, \n      UserPrincipalName, \n      bin(TimeGenerated, 1min), \n      UserAgent,\n      ConditionalAccessStatus,\n      OperationName,\n      RiskDetail,\n      AuthenticationRequirement,\n      ClientAppUsed\n// Extracting the name and UPN suffix from UserPrincipalName\n    | extend\n        Name = tostring(split(UserPrincipalName, '@')[0]),\n        UPNSuffix = tostring(split(UserPrincipalName, '@')[1]));\n// Materialize a table named \"AWS_Bruforce\" containing AWS CloudTrail events related to ConsoleLogins within the last 1 day\nlet AWS_Bruforce = materialize (\n    AWSCloudTrail \n// Filter CloudTrail events related to ConsoleLogin\n    | where EventName == \"ConsoleLogin\" \n// Extract ActionType from ResponseElements JSON\n    | extend ActionType = tostring(parse_json(ResponseElements).ConsoleLogin)  \n// Summarize various counts and sets based on  brute force criteria \n    | summarize \n        AWSSuccessful=countif(ActionType == \"Success\"), \n        AWSFailed = countif(ActionType == \"Failure\"), \n        totalAwsEventId= dcount(AwsEventId), \n        AWSFailedEventsCount = dcountif(AwsEventId, ActionType == \"Failure\"), \n        AWSSuccessfuleventsCount = dcountif(AwsEventId, ActionType == \"Success\"), \n        AWSFailedevents = makeset(iff(ActionType == \"Failure\", AwsEventId, \"\"), 5), \n        AWSSuccessfulEvents = makeset(iff(ActionType == \"Success\", AwsEventId, \"\"), 5)  \n// Grouping by various attributes\n        by \n        SourceIpAddress, \n        UserIdentityUserName,\n        bin(TimeGenerated, 1min), \n        UserAgent );\n// Joining the Azure_Bruforce and AWS_Bruforce tables on matching IP addresses and UserAgents\nAzure_Bruforce\n| join kind=inner AWS_Bruforce on $left.IPAddress == $right.SourceIpAddress and $left.UserAgent == $right.UserAgent\n// Filtering based on conditions for failed and successful events\n| where (AWSFailedEventsCount >= 4 and AzureFailedEventsCount >= 5) and ((AzureSuccessfuleventsCount >= 1 and AzureFailedEvent > AzureSuccessfulEvent) or (AWSSuccessfuleventsCount >= 1 and AWSFailedEventsCount > AWSSuccessfuleventsCount))\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "AWSCloudTrail"
                    ],
                    "connectorId": "AWS"
                  },
                  {
                    "dataTypes": [
                      "SigninLogs"
                    ],
                    "connectorId": "AzureActiveDirectory"
                  },
                  {
                    "dataTypes": [
                      "IdentityInfo"
                    ],
                    "connectorId": "BehaviorAnalytics"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert"
                    ],
                    "connectorId": "MicrosoftThreatProtection"
                  }
                ],
                "tactics": [
                  "CredentialAccess"
                ],
                "techniques": [
                  "T1110"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "UserPrincipalName"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "Name"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SourceIpAddress"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "customDetails": {
                  "AzureClientAppUsed": "ClientAppUsed",
                  "UserAgent": "UserAgent",
                  "AzureUser": "UserPrincipalName",
                  "AwsUser": "UserIdentityUserName"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Multi Cloud Attack Coverage Essentials - Resource Abuse Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Cross-Cloud Password Spray detection",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Cross-CloudSuspiciousComputeResourcecreationinGCP_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This detection  identifies potential suspicious activity across multi-cloud environments by combining AWS GuardDuty findings with GCP Audit Logs. It focuses on AWS activities related to unauthorized access, credential abuse, and unusual behaviors, as well as GCP instances creation with non-Google service account users. The query aims to provide a comprehensive view of cross-cloud security incidents for proactive threat detection and response.",
                "displayName": "Cross-Cloud Suspicious Compute resource creation in GCP",
                "enabled": false,
                "query": "// Materialize AWS GuardDuty findings\nlet AwsAlert = materialize (\n    AWSGuardDuty\n    // Filter for specific activity types in AWS GuardDuty\n    | where ActivityType has_any (\n        \"Backdoor:EC2/DenialOfService.UnusualProtocol\",\n        \"CredentialAccess:Kubernetes/MaliciousIPCaller\",\n        \"CredentialAccess:Kubernetes/SuccessfulAnonymousAccess\",\n        \"CredentialAccess:Kubernetes/TorIPCaller\",\n        \"CredentialAccess:RDS/AnomalousBehavior.SuccessfulBruteForce\",\n        \"CredentialAccess:RDS/TorIPCaller.FailedLogin\",\n        \"CredentialAccess:RDS/TorIPCaller.SuccessfulLogin\",\n        \"Discovery:Kubernetes/MaliciousIPCaller\",\n        \"Recon:IAMUser/MaliciousIPCaller.Custom\",\n        \"UnauthorizedAccess:EC2/TorClient\",\n        \"UnauthorizedAccess:IAMUser/TorIPCaller\",\n        \"UnauthorizedAccess:IAMUser/MaliciousIPCaller.Custom\",\n        \"UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration.OutsideAWS\",\n        \"UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration.InsideAWS\",\n        \"UnauthorizedAccess:IAMUser/ConsoleLoginSuccess.B\"\n        )\n    // Extract and transform AWS GuardDuty attributes\n    | extend\n        AWSAlertId = Id, \n        AWSAlertTitle = Title,\n        AWSAlertDescription = Description,\n        AWSresourceType = tostring(parse_json(ResourceDetails).resourceType),\n        AWSNetworkEntity = tostring(parse_json(ServiceDetails).action.awsApiCallAction.remoteIpDetails.ipAddressV4),\n        AWSAlertUserNameEntity = tostring(parse_json(ResourceDetails).accessKeyDetails.userName),\n        InstanceType = tostring(parse_json(ResourceDetails).instanceDetails.instanceType),\n        AWSTargetingService = parse_json(ServiceDetails).additionalInfo.apiCalls,\n        AWSAlertTime = TimeCreated,\n        AWSAlertLink= tostring(strcat('https://us-east-1.console.aws.amazon.com/guardduty/home?region=us-east-1#/findings?macros=current&fId=', Id)),\n        Severity = \n        case (\n    Severity >= 7.0,\n    \"High\",\n    Severity between (4.0 .. 6.9),\n    \"Medium\",\n    Severity between (1.0 .. 3.9),\n    \"Low\",\n    \"Unknown\"\n)\n    // Extract API call details and count\n    | mv-apply AIPCall = AWSTargetingService on \n        ( \n        where AIPCall has \"name\"    \n        | extend APICallName = tostring(AIPCall.name), APICallCount = tostring(AIPCall[\"count\"])\n        ) \n    // Select distinct attributes for further analysis\n    | distinct\n        AWSAlertTime,\n        ActivityType,\n        Severity,\n        AWSAlertId,\n        AWSAlertTitle,\n        AWSAlertDescription,\n        AWSAlertLink,\n        Arn,\n        AWSresourceType,\n        AWSNetworkEntity,\n        AWSAlertUserNameEntity,\n        InstanceType,\n        APICallName,\n        APICallCount      \n    );\n// Materialize GCP Audit Logs related to VM instance creation\nlet GCPVMActivity= materialize(\n    GCPAuditLogs \n    // Filter for Compute Engine instances insertions\n    | where ServiceName == \"compute.googleapis.com\" and MethodName endswith \"instances.insert\"\n    // Extract and transform relevant GCP Audit Log attributes\n    | extend\n        GCPUserUPN= tostring(parse_json(AuthenticationInfo).principalEmail),\n        GCPUserIp = tostring(parse_json(RequestMetadata).callerIp),\n        GCPUserUA= tostring(parse_json(RequestMetadata).callerSuppliedUserAgent),\n        VMDetails= parse_json(AuthorizationInfo),\n        VMStatus =  tostring(parse_json(Response).status),\n        VMOperation=tostring(parse_json(Response).operationType),\n        VMName= tostring(parse_json(Request).name),\n        VMDescription= tostring(parse_json(Request).description),\n        VMType = tostring(split(parse_json(Request).machineType, \"/\")[-1]),\n        Tags= tostring(parse_json(Request).tags),\n        RequestJS = parse_json(Request)\n    // Filter out service account-related activities and private IP addresses\n    | where GCPUserUPN !has \"gserviceaccount.com\"\n    | extend Name = tostring(split(GCPUserUPN, \"@\")[0]), UPNSuffix = tostring(split(GCPUserUPN, \"@\")[1])\n    | where VMOperation == \"insert\" and isnotempty(GCPUserIp) and GCPUserIp != \"private\"\n    // Select relevant attributes for further analysis\n    | project\n        GCPOperationTime=TimeGenerated,\n        VMName,\n        VMStatus,\n        MethodName,\n        GCPUserUPN,\n        ProjectId,\n        GCPUserIp,\n        GCPUserUA,\n        VMOperation,\n        VMType,\n        Name,\n        UPNSuffix\n    );\n// Join AWS and GCP activities based on matching IP addresses\nAwsAlert\n| join kind= inner (GCPVMActivity)\n    on\n    $left.AWSNetworkEntity == $right.GCPUserIp\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "GCPAuditLogs"
                    ],
                    "connectorId": "GCPAuditLogsDefinition"
                  },
                  {
                    "dataTypes": [
                      "AWSGuardDuty"
                    ],
                    "connectorId": "AWSS3"
                  }
                ],
                "tactics": [
                  "InitialAccess",
                  "Execution",
                  "Persistence",
                  "PrivilegeEscalation",
                  "CredentialAccess",
                  "Discovery",
                  "LateralMovement"
                ],
                "techniques": [
                  "T1566",
                  "T1059",
                  "T1078",
                  "T1547",
                  "T1548",
                  "T1069",
                  "T1552"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "GCPUserIp"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "GCPUserUPN"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "Name"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "customDetails": {
                  "AWSresourceType": "AWSresourceType",
                  "AWSAPICallCount": "APICallCount",
                  "AWSAlertUserName": "AWSAlertUserNameEntity",
                  "AWSInstanceType": "InstanceType",
                  "GCPVMType": "VMType",
                  "GCPVMName": "VMName",
                  "AWSAPICallName": "APICallName",
                  "GCPUserAgent": "GCPUserUA",
                  "CorrelationWith": "GCPAuditLogs",
                  "AWSArn": "Arn",
                  "GCPProjectId": "[variables('_ProjectId')]"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "Severity",
                  "alertDescriptionFormat": " This detection compiles and correlates unauthorized user access alerts originating from AWS GuardDuty With Alert Description '{{AWSAlertDescription}}' assocated with GCP compute activities. It focuses on AWS GuardDuty alerts related to unauthorized user access, specifically targeting network IP associations tied to activities such as logins from malicious IP addresses or instance credential exfiltration attempts. The detection leverages these common network IP advisories to detect and pinpoint unauthorized users attempting to access both AWS and Azure resources.  \n\n AWS ALert Link : '{{AWSAlertLink}}' \n\n Find More Details :https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-active.html",
                  "alertDisplayNameFormat": "{{AWSNetworkEntity}} from {{AWSAlertTitle}} observed in GCP compute activity with {{GCPUserUPN}}",
                  "alertDynamicProperties": [
                    {
                      "value": "AWSAlertLink",
                      "alertProperty": "AlertLink"
                    },
                    {
                      "value": "AWS",
                      "alertProperty": "ProviderName"
                    },
                    {
                      "value": "AWSGuarduty",
                      "alertProperty": "ProductComponentName"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
              "properties": {
                "description": "Multi Cloud Attack Coverage Essentials - Resource Abuse Analytics Rule 2",
                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
        "contentKind": "AnalyticsRule",
        "displayName": "Cross-Cloud Suspicious Compute resource creation in GCP",
        "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject3').analyticRuleTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CrossCloudSuspiciousUserActivityObservedInGCPEnvourment_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject3').analyticRuleVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This detection query aims to correlate potentially suspicious user activities logged in Google Cloud Platform (GCP) Audit Logs with security alerts originating from Microsoft Security products. This correlation facilitates the identification of potential cross-cloud security incidents. By summarizing these findings, the query provides valuable insights into cross-cloud identity threats and their associated details, enabling organizations to respond promptly and mitigate potential risks effectively.",
                "displayName": "Cross-Cloud Suspicious user activity observed in GCP Envourment",
                "enabled": false,
                "query": "// Filter GCP Audit Logs to exclude service accounts\nGCPAuditLogs \n| where PrincipalEmail !endswith \"gserviceaccount.com\"\n// Exclude system-related authentication information\n| where AuthenticationInfo !has (\"system:\")\n// Extract GCP request name and relevant attributes\n| extend GCPRequestName= parse_json(Request).name\n| extend\n    GCPAccoutType= tostring(split(GCPRequestName, \"/\")[2]),\n    GCPUserIdentity = iff(isempty(tostring(split(GCPRequestName, \"/\")[3])), tostring(parse_json(AuthenticationInfo).principalEmail), \"na\"), \n    GCPUserIp = tostring(parse_json(RequestMetadata).callerIp),\n    GCPCallerUA = tostring(parse_json(RequestMetadata).callerSuppliedUserAgent)\n// Filter out empty or service account identities\n| where isnotempty(GCPUserIdentity) and GCPUserIdentity !endswith \"gserviceaccount.com\"\n// Select relevant attributes for further analysis\n| project\n    PrincipalEmail,\n    GCPUserIdentity,\n    GCPAccoutType,\n    GCPRequestName,\n    GCPCallerUA,\n    Request,\n    RequestMetadata,\n    GCPUserIp,\n    MethodName,\n    ServiceName,\n    GCPEventTime= TimeGenerated,\n    ProjectId\n// Join GCP Audit Logs with SecurityAlert data based on user identity and IP\n| join kind=inner (    \n    SecurityAlert \n    // Exclude alerts from Azure Sentinel\n    | where ProductName !in (\"Azure Sentinel\")\n    // Extract IP entities from alert data\n    | extend AlertIPEntity=  tostring(extract(@\"\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\", 0, Entities))\n    | extend\n        AlertUserUPN = tostring(extract(@'\\b[\\w\\.\\-]+@[\\w\\.\\-]+\\b', 0, Entities)),\n        AlertTime= TimeGenerated\n    // Filter out empty user identities and IP entities\n    | where isnotempty(AlertIPEntity) and isnotempty(AlertUserUPN)\n    )\n    on $left.GCPUserIdentity == $right.AlertUserUPN and $left.GCPUserIp == $right.AlertIPEntity\n// Summarize the data, calculating time differences and aggregating attributes\n| summarize\n    FirstAlert=min(AlertTime),\n    LastAlert=max(AlertTime),\n    TimeDiff=datetime_diff('minute', min(AlertTime), min(GCPEventTime)),\n    MethodName=make_set(MethodName),\n    ServiceName= make_set(ServiceName),\n    GCPProjctId=make_set(ProjectId),\n    Request=make_set(Request),\n    GCPCallerUA=make_set(GCPCallerUA)\n    by\n    AlertUserUPN,\n    AlertIPEntity,\n    GCPUserIp,\n    GCPUserIdentity,\n    AlertSeverity,\n    AlertName,\n    AlertLink,\n    Description,\n    Tactics,\n    ProductName,\n    SystemAlertId,\n    GCPAccoutType\n// Extend the data with additional attributes\n| extend\n    Name = tostring(split(GCPUserIdentity, \"@\")[0]),\n    UPNSuffix = tostring(split(GCPUserIdentity, \"@\")[1])\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "GCPAuditLogs"
                    ],
                    "connectorId": "GCPAuditLogsDefinition"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert (IPC)"
                    ],
                    "connectorId": "AzureActiveDirectoryIdentityProtection"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert"
                    ],
                    "connectorId": "MicrosoftThreatProtection"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert (MDATP)"
                    ],
                    "connectorId": "MicrosoftDefenderAdvancedThreatProtection"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert"
                    ],
                    "connectorId": "MicrosoftCloudAppSecurity"
                  }
                ],
                "tactics": [
                  "InitialAccess",
                  "Execution",
                  "Persistence",
                  "PrivilegeEscalation",
                  "CredentialAccess",
                  "Discovery"
                ],
                "techniques": [
                  "T1566",
                  "T1059",
                  "T1078",
                  "T1046",
                  "T1547",
                  "T1548",
                  "T1069",
                  "T1552"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "GCPUserIp"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "GCPUserIdentity"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "Name"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "customDetails": {
                  "LastAlert": "LastAlert",
                  "MethodName": "MethodName",
                  "FirstAlert": "FirstAlert",
                  "AlertUserUPN": "AlertUserUPN",
                  "ServiceName": "ServiceName",
                  "GCPProjctId": "[variables('_GCPProjctId')]",
                  "AlertName": "AlertName",
                  "CorrelationWith": "GCPAuditLogs",
                  "Request": "Request",
                  "SystemAlertId": "[variables('_SystemAlertId')]",
                  "TimeDiff": "TimeDiff",
                  "GCPCallerUA": "GCPCallerUA",
                  "Tactics": "Tactics"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "AlertSeverity",
                  "alertDescriptionFormat": " This detection compiles and correlates unauthorized user access alerts originating from {{ProductName}} With Alert Description '{{Description}}' observed activity in GCP environmeny. It focuses on Microsoft Security, specifically targeting user bhaviour and network IP associations tied to activities such as logins from malicious IP addresses or instance credential exfiltration attempts. The detection leverages these common network IP advisories to detect and pinpoint users suspicious activity to access both Azure and GCP resources.  \n\n Microsoft Security ALert Link : '{{AlertLink}}'",
                  "alertDisplayNameFormat": "A user {{GCPUserUPN}} has been linked to {{AlertName}}, and has potentially suspicious behavior within the GCP environment from, originating from the IP address {{GCPUserIp}}.",
                  "alertDynamicProperties": [
                    {
                      "value": "AlertLink",
                      "alertProperty": "AlertLink"
                    },
                    {
                      "value": "ProductName",
                      "alertProperty": "ProviderName"
                    },
                    {
                      "value": "Microsoft Security",
                      "alertProperty": "ProductComponentName"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject3').analyticRuleId3,'/'))))]",
              "properties": {
                "description": "Multi Cloud Attack Coverage Essentials - Resource Abuse Analytics Rule 3",
                "parentId": "[variables('analyticRuleObject3').analyticRuleId3]",
                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
        "contentKind": "AnalyticsRule",
        "displayName": "Cross-Cloud Suspicious user activity observed in GCP Envourment",
        "contentProductId": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "id": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject4').analyticRuleTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CrossCloudUnauthorizedCredentialsAccessDetection_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject4').analyticRuleVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This detection correlates AWS GuardDuty Credential Access alerts related to Amazon Relational Database Service (RDS) activity with Azure portal sign-in activities. It identifies successful and failed logins, anomalous behavior, and malicious IP access. By joining these datasets on network entities and IP addresses, it detects unauthorized credential access attempts across AWS and Azure resources, enhancing cross-cloud security monitoring.",
                "displayName": "Cross-Cloud Unauthorized Credential Access Detection From AWS RDS Login",
                "enabled": false,
                "query": "// Define variable 'AwsAlert' to collect AWS GuardDuty CredentialAccess alerts related to Amazon Relational Database Service (RDS) activity\nlet AwsAlert = materialize (\n    AWSGuardDuty\n    | where ActivityType has_any (\n        \"CredentialAccess:RDS/TorIPCaller.SuccessfulLogin\",\n        \"CredentialAccess:RDS/TorIPCaller.FailedLogin\",\n        \"CredentialAccess:RDS/AnomalousBehavior.SuccessfulBruteForce\",\n        \"CredentialAccess:RDS/AnomalousBehavior.SuccessfulLogin\",\n        \"CredentialAccess:RDS/MaliciousIPCaller.SuccessfulLogin\",\n        \"CredentialAccess:RDS/MaliciousIPCaller.FailedLogin\"\n        )\n    | extend\n        AWSAlertId = Id, \n        AWSAlertTitle = Title,\n        AWSAlertDescription = Description,\n        AWSresourceType = tostring(parse_json(ResourceDetails).resourceType),\n        AWSNetworkEntity = tostring(parse_json(ServiceDetails).action.rdsLoginAttemptAction.remoteIpDetails.ipAddressV4),\n        RDSInstanceId = tostring(parse_json(ResourceDetails).rdsDbInstanceDetails.dbInstanceIdentifier),\n        RDSUser = tostring(parse_json(ResourceDetails).rdsDbUserDetails.user),\n        RDSApplication = tostring(parse_json(ResourceDetails).rdsDbUserDetails.application),\n        RDSactionType = tostring(parse_json(ServiceDetails).action.actionType),\n        AWSAlertTime = TimeCreated,\n        AWSAlertLink= tostring(strcat('https://us-east-1.console.aws.amazon.com/guardduty/home?region=us-east-1#/findings?macros=current&fId=',Id)),\n        Severity = \n  case (\n    Severity >= 7.0, \"High\",\n    Severity between (4.0 .. 6.9), \"Medium\",\n    Severity between (1.0 .. 3.9), \"Low\",\n    \"Unknown\")\n    | distinct\n        AWSAlertTime,\n        ActivityType,\n        AWSAlertId,\n        AWSAlertLink,\n        AWSAlertTitle,\n        AWSAlertDescription,\n        AWSresourceType,\n        Arn,\n        Severity,\n        RDSactionType,\n        RDSApplication,\n        RDSInstanceId,\n        RDSUser,\n        AWSNetworkEntity\n    );\n  // Define variable 'Azure_sigin' to collect Azure portal sign-in activities\n  let Azure_sigin = materialize (\n      SigninLogs\n      | where AppDisplayName == \"Azure Portal\"\n      | where isnotempty(OriginalRequestId)\n      | summarize \n          AzureSuccessfulEvent = countif(ResultType == 0), \n          AzureFailedEvent = countif(ResultType != 0), \n          totalAzureLoginEventId = dcount(OriginalRequestId), \n          AzureFailedEventsCount = dcountif(OriginalRequestId, ResultType != 0), \n          AzureSuccessfuleventsCount = dcountif(OriginalRequestId, ResultType == 0),\n          AzureSetOfFailedevents = makeset(iff(ResultType != 0, OriginalRequestId, \"\"), 5), \n          AzureSetOfSuccessfulEvents = makeset(iff(ResultType == 0, OriginalRequestId, \"\"), 5) \n          by \n          IPAddress, \n          UserPrincipalName, \n          bin(TimeGenerated, 1min), \n          UserAgent,\n          ConditionalAccessStatus,\n          OperationName,\n          RiskDetail,\n          AuthenticationRequirement,\n          ClientAppUsed\n      // Extracting the name and UPN suffix from UserPrincipalName\n      | extend\n          Name = tostring(split(UserPrincipalName, '@')[0]),\n          UPNSuffix = tostring(split(UserPrincipalName, '@')[1])\n      );\n  // Join 'AwsAlert' and 'Azure_sigin' on the AWS Network Entity and Azure IP Address\n  AwsAlert\n  | join kind=inner Azure_sigin on $left.AWSNetworkEntity == $right.IPAddress\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "SigninLogs"
                    ],
                    "connectorId": "AzureActiveDirectory"
                  },
                  {
                    "dataTypes": [
                      "AWSGuardDuty"
                    ],
                    "connectorId": "AWSS3"
                  }
                ],
                "tactics": [
                  "CredentialAccess",
                  "InitialAccess"
                ],
                "subTechniques": [
                  "T1110.003",
                  "T1110.004"
                ],
                "techniques": [
                  "T1557",
                  "T1110",
                  "T1110",
                  "T1110",
                  "T1606",
                  "T1556",
                  "T1133"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "IPAddress"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "UserPrincipalName"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "Name"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "customDetails": {
                  "AWSArn": "Arn",
                  "AzureRiskDetail": "RiskDetail",
                  "AWSInstanceType": "RDSactionType",
                  "AzureClientAppUsed": "ClientAppUsed",
                  "AWSAplicationName": "RDSApplication",
                  "AzConditionalAccess": "ConditionalAccessStatus",
                  "AzAuthRequirement": "AuthenticationRequirement",
                  "alertSeverity": "Severity",
                  "AzureUserAgent": "UserAgent",
                  "AWSresourceType": "AWSresourceType",
                  "AWSAlertUserName": "RDSUser",
                  "AWSInstanceId":"[variables('_RDSInstanceId')]",
                  "AzureUser": "UserPrincipalName",
                  "AzureOperationName": "OperationName"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "Severity",
                  "alertDescriptionFormat": "This detection correlates AWS GuardDuty Credential Access alert described '{{AWSAlertDescription}}' related to Amazon Relational Database Service (RDS) activity with Azure portal sign-in activities. It identifies successful and failed logins, anomalous behavior, and malicious IP access. By joining these datasets on network entities and IP addresses, it detects unauthorized credential access attempts across AWS and Azure resources, enhancing cross-cloud security monitoring. \n\n AWS ALert Link : '{{AWSAlertLink}}' \n\n Find More Details :https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-active.html",
                  "alertDisplayNameFormat": "IP address {{IPAddress}} in {{AWSAlertTitle}} seen in Azure Signin Logs with {{UserPrincipalName}}",
                  "alertDynamicProperties": [
                    {
                      "value": "AWSAlertLink",
                      "alertProperty": "AlertLink"
                    },
                    {
                      "value": "AWS",
                      "alertProperty": "ProviderName"
                    },
                    {
                      "value": "AWSGuardDuty",
                      "alertProperty": "ProductName"
                    },
                    {
                      "value": "AWSGuardDuty",
                      "alertProperty": "ProductComponentName"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject4').analyticRuleId4,'/'))))]",
              "properties": {
                "description": "Multi Cloud Attack Coverage Essentials - Resource Abuse Analytics Rule 4",
                "parentId": "[variables('analyticRuleObject4').analyticRuleId4]",
                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
        "contentKind": "AnalyticsRule",
        "displayName": "Cross-Cloud Unauthorized Credential Access Detection From AWS RDS Login",
        "contentProductId": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "id": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject5').analyticRuleTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SuccessfulAWSConsoleLoginfromIPAddressObservedConductingPasswordSpray_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject5').analyticRuleVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query aims to detect instances of successful AWS console login events followed by multiple failed app logons alerts generated by Microsoft Cloud App Security or password spray alerts generated by Defender Products.\n Specifically, it focuses on scenarios where the successful login takes place within a 60-minute timeframe of the high-severity alert. \n The login is considered relevant if it originates from an IP address associated with potential attackers.",
                "displayName": "Successful AWS Console Login from IP Address Observed Conducting Password Spray",
                "enabled": false,
                "query": "SecurityAlert \n// Filtering alerts based on Microsoft product names and Relevent alert names\n  | where ProductName in ( \"Microsoft Cloud App Security\",\"Azure Active Directory Identity Protection\")\n  |where AlertName in (\"Multiple failed user log on attempts to an app\",\"Password Spray\")\n// Parsing and extending the 'Entities' column as JSON objects\n  | extend Entities = parse_json(Entities) \n// Exploring IP entities within the alert entities\n  | mv-apply Entity = Entities on \n      ( \n      where Entity.Type == 'ip' \n      | extend EntityIp = tostring(Entity.Address) \n      ) \n// Exploring account entities within the alert entities\n  | mv-apply Entity = Entities on \n      ( \n      where Entity.Type == 'account' \n      | extend AccountObjectId = tostring(Entity.AadUserId)\n      )\n// Filtering out alerts with missing IP or account information\n  | where isnotempty(EntityIp) and isnotempty(AccountObjectId)\n// Summarizing relevant fields for further analysis\n  | summarize \n      by \n      AlertName,\n      ProductName,\n      ProviderName,\n      AlertSeverity,\n      EntityIp,\n      Tactics,\n      Techniques,\n      AlertTime= bin(TimeGenerated, 1min),\n      AccountObjectId,\n      AlertTimeGenerated=TimeGenerated\n// Joining with IdentityInfo to obtain additional account details\n  | join kind=inner (\n      IdentityInfo\n      | where TimeGenerated >= ago(1d)\n      | distinct AccountObjectId, AccountUPN=tolower(AccountUPN)\n      )\n      on AccountObjectId \n      |extend Name = tostring(split(AccountUPN,'@')[0]), UPNSuffix =tostring(split(AccountUPN,'@')[1])\n// Joining with AWSCloudTrail data to correlate AWS console logins\n  | join kind=inner (\n      AWSCloudTrail\n      | where EventName == \"ConsoleLogin\"\n      | extend CTUPN= tolower(tostring(tolower(split(UserIdentityArn, \"/\", 2)[0])))\n      | extend ActionType= tostring(parse_json(ResponseElements).ConsoleLogin)  \n      | where ActionType == \"Success\"\n      | extend AWSTime= bin(TimeGenerated, 1min)\n      | project\n          EventName,\n          EventSource,\n          EventTypeName,\n          RecipientAccountId,\n          ResponseElements,\n          SessionMfaAuthenticated,\n          SourceIpAddress,\n          TimeGenerated,\n          UserAgent,\n          UserIdentityArn,\n          UserIdentityType,\n          CTUPN,\n          AWSTime,\n          UserIdentityUserName\n      )\n      on $left.EntityIp == $right.SourceIpAddress \n// Filtering login event after the Alert generation time\n  | where AlertTimeGenerated between ((AWSTime - 1h)..(AWSTime + 1h))\n// Calculating the time difference between alert generation and AWS login\n  | extend timediff = datetime_diff('minute', AlertTimeGenerated, TimeGenerated) \n// Filtering alerts with a time difference of up to 60 minutes\n  | where timediff <= 60\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "AWSCloudTrail"
                    ],
                    "connectorId": "AWS"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert"
                    ],
                    "connectorId": "MicrosoftDefenderAdvancedThreatProtection"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert (IPC)"
                    ],
                    "connectorId": "AzureActiveDirectoryIdentityProtection"
                  },
                  {
                    "dataTypes": [
                      "IdentityInfo"
                    ],
                    "connectorId": "BehaviorAnalytics"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert"
                    ],
                    "connectorId": "MicrosoftThreatProtection"
                  }
                ],
                "tactics": [
                  "InitialAccess",
                  "CredentialAccess"
                ],
                "techniques": [
                  "T1110",
                  "T1078"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "AccountUPN"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "Name"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SourceIpAddress"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "customDetails": {
                  "AWSUserUPN": "CTUPN",
                  "UserAgent": "UserAgent",
                  "AWSUser": "UserIdentityArn"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject5').analyticRuleId5,'/'))))]",
              "properties": {
                "description": "Multi Cloud Attack Coverage Essentials - Resource Abuse Analytics Rule 5",
                "parentId": "[variables('analyticRuleObject5').analyticRuleId5]",
                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
        "contentKind": "AnalyticsRule",
        "displayName": "Successful AWS Console Login from IP Address Observed Conducting Password Spray",
        "contentProductId": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "id": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject6').analyticRuleTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SuspiciousAWSConsolLoginByCredentialAceessAlerts_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject6').analyticRuleVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query aims to detect instances of successful AWS console logins that align with high-severity credential access or Initial Access alerts generated by Defender Products.\n Specifically, it focuses on scenarios where the successful login takes place within a 60-minute timeframe of the high-severity alert. The login is considered relevant if it originates from an IP address associated with potential attackers.",
                "displayName": "Suspicious AWS console logins by credential access alerts",
                "enabled": false,
                "query": "SecurityAlert \n// Filtering alerts based on Microsoft product names\n  | where ProductName in (\"Microsoft 365 Defender\", \"Azure Active Directory\", \"Microsoft Defender Advanced Threat Protection\", \"Microsoft Cloud App Security\",\"Azure Active Directory Identity Protection\", \"Microsoft Defender ATP\")\n// Narrowing down alerts to specific tactics\n  | where Tactics in(\"CredentialAccess\", \"InitialAccess\")\n// Focusing on high-severity alerts\n  | where AlertSeverity == \"High\"\n// Parsing and extending the 'Entities' column as JSON objects\n  | extend Entities = parse_json(Entities) \n// Exploring IP entities within the alert entities\n  | mv-apply Entity = Entities on \n      ( \n      where Entity.Type == 'ip' \n      | extend EntityIp = tostring(Entity.Address) \n      ) \n// Exploring account entities within the alert entities\n  | mv-apply Entity = Entities on \n      ( \n      where Entity.Type == 'account' \n      | extend AccountObjectId = tostring(Entity.AadUserId)\n      )\n// Filtering out alerts with missing IP or account information\n  | where isnotempty(EntityIp) and isnotempty(AccountObjectId)\n// Summarizing relevant fields for further analysis\n  | summarize \n      by \n      AlertName,\n      ProductName,\n      ProviderName,\n      AlertSeverity,\n      EntityIp,\n      Tactics,\n      Techniques,\n      AlertTime= bin(TimeGenerated, 1min),\n      AccountObjectId,\n      AlertTimeGenerated=TimeGenerated\n// Joining with IdentityInfo to obtain additional account details\n  | join kind=inner (\n      IdentityInfo\n      | where TimeGenerated >= ago(1d)\n      | distinct AccountObjectId, AccountUPN=tolower(AccountUPN)\n      )\n      on AccountObjectId \n      |extend Name = tostring(split(AccountUPN,'@')[0]), UPNSuffix =tostring(split(AccountUPN,'@')[1])\n// Joining with AWSCloudTrail data to correlate AWS console logins\n  | join kind=inner (\n      AWSCloudTrail\n      | where EventName == \"ConsoleLogin\"\n      | extend CTUPN= tolower(tostring(tolower(split(UserIdentityArn, \"/\", 2)[0])))\n      | extend ActionType= tostring(parse_json(ResponseElements).ConsoleLogin)  \n      | where ActionType == \"Success\"\n      | extend AWSTime= bin(TimeGenerated, 1min)\n      | project\n          EventName,\n          EventSource,\n          EventTypeName,\n          RecipientAccountId,\n          ResponseElements,\n          SessionMfaAuthenticated,\n          SourceIpAddress,\n          TimeGenerated,\n          UserAgent,\n          UserIdentityArn,\n          UserIdentityType,\n          CTUPN,\n          AWSTime,\n          UserIdentityUserName\n      )\n      on $left.EntityIp == $right.SourceIpAddress \n// Filtering login event after the Alert generation time\n  | where AlertTimeGenerated >= AWSTime\n// Calculating the time difference between alert generation and AWS login\n  | extend timediff = datetime_diff('minute', AlertTimeGenerated, TimeGenerated) \n// Filtering alerts with a time difference of up to 60 minutes\n  | where timediff between ((-60)..(60))\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "SecurityAlert"
                    ],
                    "connectorId": "OfficeATP"
                  },
                  {
                    "dataTypes": [
                      "AWSCloudTrail"
                    ],
                    "connectorId": "AWS"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert"
                    ],
                    "connectorId": "MicrosoftDefenderAdvancedThreatProtection"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert (IPC)"
                    ],
                    "connectorId": "AzureActiveDirectoryIdentityProtection"
                  },
                  {
                    "dataTypes": [
                      "IdentityInfo"
                    ],
                    "connectorId": "BehaviorAnalytics"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert"
                    ],
                    "connectorId": "MicrosoftThreatProtection"
                  }
                ],
                "tactics": [
                  "InitialAccess",
                  "CredentialAccess"
                ],
                "techniques": [
                  "T1078"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "AccountUPN"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "Name"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SourceIpAddress"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "customDetails": {
                  "UserAgent": "UserAgent",
                  "AWSUSerUPN": "CTUPN",
                  "ComonIp": "SourceIpAddress",
                  "AzureUserUPN": "AccountUPN"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject6').analyticRuleId6,'/'))))]",
              "properties": {
                "description": "Multi Cloud Attack Coverage Essentials - Resource Abuse Analytics Rule 6",
                "parentId": "[variables('analyticRuleObject6').analyticRuleId6]",
                "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject6').analyticRuleVersion6]",
                "source": {
                  "kind": "Solution",
                  "name": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
        "contentKind": "AnalyticsRule",
        "displayName": "Suspicious AWS console logins by credential access alerts",
        "contentProductId": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "id": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject7').analyticRuleTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Unauthorized_user_access_across_AWS_and_Azure_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject7').analyticRuleVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This detection compiles and correlates unauthorized user access alerts originating from AWS GuardDuty with Azure portal sign-in activities. It focuses on AWS GuardDuty alerts related to unauthorized user access, specifically targeting network IP associations tied to activities such as logins from malicious IP addresses or instance credential exfiltration attempts. The ditection leverages these common network IP advisories to detect and pinpoint unauthorized users attempting to access both AWS and Azure resources.",
                "displayName": "Unauthorized user access across AWS and Azure",
                "enabled": false,
                "query": "// Define a variable 'AwsAlert' to collect Unauthorized user access alerts from AWS GuardDuty table\nlet AwsAlert = materialize (\n    AWSGuardDuty\n    | where ActivityType has_any (\"UnauthorizedAccess:IAMUser/TorIPCaller\", \"UnauthorizedAccess:IAMUser/MaliciousIPCaller.Custom\", \n    \"UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration.OutsideAWS\", \"UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration.InsideAWS\",\n    \"UnauthorizedAccess:IAMUser/ConsoleLoginSuccess.B\",\"UnauthorizedAccess:IAMUser/MaliciousIPCaller\")\n    | extend\n        AWSAlertId = Id, \n        AWSAlertTitle = Title,\n        AWSAlertDescription = Description,\n        AWSresourceType = tostring(parse_json(ResourceDetails).resourceType),\n        AWSNetworkEntity = tostring(parse_json(ServiceDetails).action.awsApiCallAction.remoteIpDetails.ipAddressV4),\n        AWSAlertUserNameEntity = tostring(parse_json(ResourceDetails).accessKeyDetails.userName),\n        InstanceType = tostring(parse_json(ResourceDetails).instanceDetails.instanceType),\n        AWSTargetingService = parse_json(ServiceDetails).additionalInfo.apiCalls,\n        AWSAlertTime = TimeCreated,\n        AWSAlertLink= tostring(strcat('https://us-east-1.console.aws.amazon.com/guardduty/home?region=us-east-1#/findings?macros=current&fId=',Id)),\n        Severity = \n  case (\n    Severity >= 7.0, \"High\",\n    Severity between (4.0 .. 6.9), \"Medium\",\n    Severity between (1.0 .. 3.9), \"Low\",\n    \"Unknown\")\n    | mv-apply AIPCall = AWSTargetingService on \n        ( \n        where AIPCall has \"name\"    \n        | extend APICallName = tostring(AIPCall.name), APICallCount = tostring(AIPCall[\"count\"])\n        ) \n    | distinct\n        AWSAlertTime,\n        ActivityType,\n        Severity,\n        AWSAlertId,\n        AWSAlertTitle,\n        AWSAlertDescription,\n        AWSAlertLink,\n        Arn,\n        AWSresourceType,\n        AWSNetworkEntity,\n        AWSAlertUserNameEntity,\n        InstanceType,\n        APICallName,\n        APICallCount      \n    );\n    // Define a variable 'Azure_sigin' to collect Azure portal Signing activity from SigninLogs Table\n    let Azure_sigin = materialize (SigninLogs\n        | where AppDisplayName == \"Azure Portal\"\n        | where isnotempty(OriginalRequestId)\n        | summarize \n            totalAzureLoginEventId = dcount(OriginalRequestId), \n            AzureFailedEventsCount = dcountif(OriginalRequestId, ResultType != 0), \n            AzureSuccessfulEventsCount = dcountif(OriginalRequestId, ResultType == 0),\n            AzureSetOfFailedEvents = makeset(iff(ResultType != 0, OriginalRequestId, \"\"), 5), \n            AzureSetOfSuccessfulEvents = makeset(iff(ResultType == 0, OriginalRequestId, \"\"), 5) \n        by \n            IPAddress, \n            UserPrincipalName, \n            bin(TimeGenerated, 1min), \n            UserAgent,\n            ConditionalAccessStatus,\n            OperationName,\n            RiskDetail,\n            AuthenticationRequirement,\n            ClientAppUsed \n        // Extracting the name and UPN suffix from UserPrincipalName\n        | extend\n            Name = tostring(split(UserPrincipalName, \"@\")[0]),\n            UPNSuffix = tostring(split(UserPrincipalName, \"@\")[1])\n    );\n    // Join 'AwsAlert' and 'Azure_sigin' on the AWS Network Entity and Azure IP Address\n    AwsAlert\n    | join kind=inner Azure_sigin on $left.AWSNetworkEntity == $right.IPAddress\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "SigninLogs"
                    ],
                    "connectorId": "AzureActiveDirectory"
                  },
                  {
                    "dataTypes": [
                      "AWSGuardDuty"
                    ],
                    "connectorId": "AWSS3"
                  }
                ],
                "tactics": [
                  "CredentialAccess",
                  "Exfiltration",
                  "Discovery"
                ],
                "subTechniques": [
                  "T1110.003",
                  "T1110.004"
                ],
                "techniques": [
                  "T1557",
                  "T1110",
                  "T1110",
                  "T1110",
                  "T1212",
                  "T1048",
                  "T1087",
                  "T1580"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "IPAddress"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "UserPrincipalName"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "Name"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  }
                ],
                "customDetails": {
                  "AWSArn": "Arn",
                  "AzureRiskDetail": "RiskDetail",
                  "AWSInstanceType": "InstanceType",
                  "AzureClientAppUsed": "ClientAppUsed",
                  "AWSresourceType": "AWSresourceType",
                  "AzConditionalAccess": "ConditionalAccessStatus",
                  "AzAuthRequirement": "AuthenticationRequirement",
                  "alertSeverity": "Severity",
                  "AzureUserAgent": "UserAgent",
                  "AWSAPICallCount": "APICallCount",
                  "AWSAPICallName": "APICallName",
                  "AWSAlertUserName": "AWSAlertUserNameEntity",
                  "AzureUser": "UserPrincipalName",
                  "AzureOperationName": "OperationName"
                },
                "alertDetailsOverride": {
                  "alertSeverityColumnName": "Severity",
                  "alertDescriptionFormat": "  This detection compiles and correlates unauthorized user access alerts originating from AWS GuardDuty With Alert Description '{{AWSAlertDescription}}' with Azure portal sign-in activities. It focuses on AWS GuardDuty alerts related to unauthorized user access, specifically targeting network IP associations tied to activities such as logins from malicious IP addresses or instance credential exfiltration attempts. The detection leverages these common network IP advisories to detect and pinpoint unauthorized users attempting to access both AWS and Azure resources.  \n\n AWS ALert Link : '{{AWSAlertLink}}' \n\n Find More Details :https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-active.html",
                  "alertDisplayNameFormat": "{{AWSNetworkEntity}} from {{AWSAlertTitle}} observed in Azure Singins with {{UserPrincipalName}}",
                  "alertDynamicProperties": [
                    {
                      "value": "AWSAlertLink",
                      "alertProperty": "AlertLink"
                    },
                    {
                      "value": "AWS",
                      "alertProperty": "ProviderName"
                    },
                    {
                      "value": "AWSGuardDuty",
                      "alertProperty": "ProductName"
                    },
                    {
                      "value": "AWSGuardDuty",
                      "alertProperty": "ProductComponentName"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject7').analyticRuleId7,'/'))))]",
              "properties": {
                "description": "Multi Cloud Attack Coverage Essentials - Resource Abuse Analytics Rule 7",
                "parentId": "[variables('analyticRuleObject7').analyticRuleId7]",
                "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject7').analyticRuleVersion7]",
                "source": {
                  "kind": "Solution",
                  "name": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
        "contentKind": "AnalyticsRule",
        "displayName": "Unauthorized user access across AWS and Azure",
        "contentProductId": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "id": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject8').analyticRuleTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "UserImpersonateByAAID_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject8').analyticRuleVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This detection focuses on identifying user-related events involving IAM roles, groups, user access, and password changes. It examines instances where the user's IP address matches and alerts generated by Identity Protection share the same IP address. The analysis occurs within a time window of 1 hour, helping to flag potential cases of user impersonation.",
                "displayName": "User impersonation by Identity Protection alerts",
                "enabled": false,
                "query": "// Retrieve SecurityAlerts generated within the last day\n SecurityAlert \n // Filter alerts for Azure Active Directory Identity Protection and High severity\n | where ProductName has \"Azure Active Directory Identity Protection\"\n | where AlertSeverity == \"High\"\n // Extract IP address entities from the 'Entities' field\n | extend ipAddress = extract(@'\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b', 0, Entities)\n // Filter out alerts without IP address entities\n | where isnotempty(ipAddress)\n // Summarize entities per unique combination of attributes\n | summarize make_set(Entities)\n     by\n     AlertTime = TimeGenerated,\n     ipAddress,\n     AlertName,\n     ProductName,\n     AlertSeverity\n // Perform an inner join with AWS CloudTrail events\n | join kind=inner (\n     AWSCloudTrail\n     | where isempty(ErrorMessage)\n     | extend UserType = tostring(parse_json(RequestParameters).userType) \n     | where EventName in~ (\"CreateRole\", \"DeleteRole\", \"CreateUser\", \"CreateAccessKey\", \"DeleteAccessKey\", \"CreateGroup\", \"AddUserToGroup\", \"ChangePassword\", \"DeleteGroup\", \"DeleteUser\", \"RemoveUserFromGroup\", \"CreateVirtualMFADevice\", \"DeleteLoginProfile\") \n     | summarize\n         make_set(RequestParameters),\n         make_set(ResponseElements)\n         by\n         SourceIpAddress,\n         UserIdentityArn,\n         UserIdentityType,\n         EventName,\n         EventTime = TimeGenerated\n     )\n     on $left.ipAddress == $right.SourceIpAddress  \n // Filter results based on temporal correlation\n | where AlertTime between ((EventTime - 1h) .. (EventTime + 1h))\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "AWSCloudTrail"
                    ],
                    "connectorId": "AWS"
                  },
                  {
                    "dataTypes": [
                      "SecurityAlert (IPC)"
                    ],
                    "connectorId": "AzureActiveDirectoryIdentityProtection"
                  }
                ],
                "tactics": [
                  "PrivilegeEscalation"
                ],
                "techniques": [
                  "T1134"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SourceIpAddress"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "customDetails": {
                  "AlertName": "AlertName",
                  "AWSUser": "UserIdentityArn",
                  "AlertIp": "ipAddress"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject8').analyticRuleId8,'/'))))]",
              "properties": {
                "description": "Multi Cloud Attack Coverage Essentials - Resource Abuse Analytics Rule 8",
                "parentId": "[variables('analyticRuleObject8').analyticRuleId8]",
                "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject8').analyticRuleVersion8]",
                "source": {
                  "kind": "Solution",
                  "name": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
        "contentKind": "AnalyticsRule",
        "displayName": "User impersonation by Identity Protection alerts",
        "contentProductId": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "id": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject9').analyticRuleTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "UserImpersonateByRiskyUser_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject9').analyticRuleVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This detection focuses on identifying high-risk cross-cloud activities and sign-in anomalies that may indicate potential security threats. The query starts by analyzing Microsoft Entra ID Signin Logs to pinpoint instances where specific applications, risk levels, and result types align. It then correlates this information with relevant AWS CloudTrail events to identify activities across Azure and AWS environments.",
                "displayName": "High-Risk Cross-Cloud User Impersonation",
                "enabled": false,
                "query": "// Retrieve Azure AD SigninLogs within the last day\nSigninLogs \n// Filter for specific AppDisplayNames, ResultType, and Risk Levels\n| where AppDisplayName in (\"Azure Portal\", \"ADFS Trust\", \"Microsoft Azure PowerShell\")\n    and RiskLevelAggregated == \"high\"\n    and RiskLevelDuringSignIn == \"high\"\n// Summarize AppDisplayNames by relevant attributes\n| extend Result = iff(ResultType == 0, \"Successful Signin\", \"Failed Signin\")\n| summarize make_set(AppDisplayName)\n    by\n    IPAddress,\n    signInTime=TimeGenerated,\n    UserPrincipalName,\n    RiskEventTypes,\n    RiskEventTypes_V2\n// Inner join with AWS CloudTrail events\n| join kind=inner (\n    AWSCloudTrail\n    | where isempty(ErrorMessage)\n    | where EventSource in (\"iam.amazonaws.com\", \"identitystore.amazonaws.com\", \"workmail.amazonaws.com\", \"workdocs.amazonaws.com\")\n    // List of AWS event names\n    | where EventName in~ (\"CreateRole\", \"DeleteRole\", \"CreateUser\", \"CreateAccessKey\", \"DeleteAccessKey\", \"CreateGroup\", \"AddUserToGroup\", \"ChangePassword\", \"DeleteGroup\", \"DeleteUser\", \"RemoveUserFromGroup\", \"CreateVirtualMFADevice\", \"DeleteLoginProfile\", \"CreateOrganization\", \"SetDefaultMailDomain\", \"SetMailUserDetails\", \"CreateMailUser\", \"ResetPassword\", \"RegisterToWorkMail\", \"DisableMailUsers\", \"EnableMailUsers\", \"DeleteServiceSpecificCredential\", \"CreateServiceSpecificCredential\", \"UpdateAccountEmailAddress\", \"DeleteGroupPolicy\", \"UploadServerCertificate\")  \n    // Summarize relevant attributes\n    | summarize make_set(RequestParameters), make_set(ResponseElements)\n        by\n        SourceIpAddress,\n        UserIdentityArn,\n        UserIdentityType,\n        EventName,\n        EventTime=TimeGenerated,\n        EventSource\n    )\n    on $left.IPAddress == $right.SourceIpAddress  \n// Calculate time difference in hours between AWS event and Azure sign-in\n| extend timedef = datetime_diff(\"hour\", EventTime, signInTime)\n// Filter for time differences within a certain range\n| where timedef between (0 .. 8)\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "AWSCloudTrail"
                    ],
                    "connectorId": "AWS"
                  },
                  {
                    "dataTypes": [
                      "SigninLogs"
                    ],
                    "connectorId": "AzureActiveDirectory"
                  }
                ],
                "tactics": [
                  "PrivilegeEscalation"
                ],
                "subTechniques": [
                  "T1078.002",
                  "T1078.004"
                ],
                "techniques": [
                  "T1134",
                  "T1078",
                  "T1078"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SourceIpAddress"
                      }
                    ],
                    "entityType": "IP"
                  }
                ],
                "customDetails": {
                  "AzureUser": "UserPrincipalName",
                  "RiskEventTypes": "RiskEventTypes",
                  "AwsUser": "UserIdentityArn",
                  "AWSEventName": "EventName"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject9').analyticRuleId9,'/'))))]",
              "properties": {
                "description": "Multi Cloud Attack Coverage Essentials - Resource Abuse Analytics Rule 9",
                "parentId": "[variables('analyticRuleObject9').analyticRuleId9]",
                "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject9').analyticRuleVersion9]",
                "source": {
                  "kind": "Solution",
                  "name": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
        "contentKind": "AnalyticsRule",
        "displayName": "High-Risk Cross-Cloud User Impersonation",
        "contentProductId": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "id": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.3",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Multi%20Cloud%20Attack%20Coverage%20Essentials%20-%20Resource%20Abuse/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The rise of Multi Cloud Resource Abuse attacks poses a significant threat to the security and integrity of cloud infrastructures. These attacks target the vulnerabilities within AWS, GCP, and Azure cloud environments, aiming to exploit misconfigurations, weak access controls, or compromised credentials to gain unauthorized access, manipulate resources, and extract valuable data across diverse cloud platforms. The Multi Cloud Resource Abuse Attack Solution is designed to fortify the detection and prevention measures against such malicious activities. By integrating detection capabilities across AWS, GCP, and Azure cloud infrastructures, this solution offers a set of detection strategies across various cloud platforms, including AWS, GCP, and Azure, aiming to identify abnormal activities, unauthorized access attempts, resource misuse, and data exfiltration. The solution encompasses log monitoring, anomaly detection, and behaviour analysis to detect and respond to potential breaches or abuses. This solution extends its coverage to include a wide array of cloud-based services such as AWS IAM, Azure AD, GCP IAM, storage services, and more, ensuring a comprehensive approach to identifying, mitigating, and responding to potential threats.</p>\n<p><strong>Pre-requisites:</strong></p>\n<p>This is a <a href=\"https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Flearn.microsoft.com%2Fazure%2Fsentinel%2Fsentinel-solutions-catalog%23domain-solutions&amp;data=05%7C01%7Cv-sudkharat%40microsoft.com%7C8ec0502d0fb449debbc108dbe9849194%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638360527889561785%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=XyqFj%2FfDBffyAPs4haVuOLs0g3vFY6jt%2B8pe%2F9gk0%2B0%3D&amp;reserved=0\">domain solution</a> and does not include any data connectors. To achieve the most robust protection against Multi Cloud Resource Abuse, it is recommended to deploy this solution in conjunction with complementary tools and solutions across the cloud platforms. Install one or more of the listed solutions to unlock the value provided by this solution.</p>\n<ol>\n<li><p>Microsoft Defender XDR</p>\n</li>\n<li><p>Microsoft Entra ID</p>\n</li>\n<li><p>Amazon Web Services</p>\n</li>\n<li><p>Google Cloud Platform IAM</p>\n</li>\n<li><p>Google Cloud Platform Audit Logs</p>\n</li>\n</ol>\n<p>This content covers all stages of the attack chain from an initial resource access attack vector, establishing persistence to an environment, locating and executing malicious activity from data stores, and then perpetrating and hiding their activity. This range of content complements the coverage Microsoft 365 Defender provides across Microsoft Defender products: <a href=\"https://learn.microsoft.com/microsoft-365/security/defender/automatic-attack-disruption\">https://learn.microsoft.com/microsoft-365/security/defender/automatic-attack-disruption</a></p>\n<p><strong>Keywords:</strong> Multi-cloud, Cross-cloud, AWS, GCP, GuardDuty, AWS GuardDuty, GCP Security, Security Console, Cloud abuse, Resource Abuse</p>\n<p><strong>Analytic Rules:</strong> 9</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Multi Cloud Attack Coverage Essentials - Resource Abuse",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-microsoft365defender"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-amazonwebservices"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-gcpiam"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-gcpauditlogs-api"
            }
          ]
        },
        "firstPublishDate": "2023-11-22",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
