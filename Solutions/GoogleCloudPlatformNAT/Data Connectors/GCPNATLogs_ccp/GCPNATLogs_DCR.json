[
  {
    "name": "GCPNATDCR",
    "apiVersion": "2023-03-11",
    "type": "Microsoft.Insights/dataCollectionRules",
    "location": "{{location}}",
    "properties": {
      "dataCollectionEndpointId": "{{dataCollectionEndpointId}}",
      "streamDeclarations": {
        "Custom-GCPNAT": {
          "columns": [
            {
              "name": "insertId",
              "type": "string"
            },
            {
              "name": "logName",
              "type": "string"
            },
            {
              "name": "resource",
              "type": "dynamic"
            },
            {
              "name": "timestamp",
              "type": "datetime"
            },
            {
              "name": "labels",
              "type": "dynamic"
            },
            {
              "name": "jsonPayload",
              "type": "dynamic"
            },
            {
              "name": "receiveTimestamp",
              "type": "datetime"
            }
         ]
        },
        "Custom-GCPNATAudit": {
          "columns": [
           {
             "name": "insertId",
             "type": "string"
           },
           {
             "name": "logName",
             "type": "string"
           },
           {
             "name": "resource",
             "type": "dynamic"
           },
           {
             "name": "timestamp",
             "type": "datetime"
           },
           {
             "name": "jsonPayload",
             "type": "dynamic"
           },
           {
             "name": "labels",
             "type": "dynamic"
           },
           {
             "name": "receiveTimestamp",
             "type": "datetime"
           },
           {
             "name": "protoPayload",
             "type": "dynamic"
           },
           {
             "name": "operation",
             "type": "dynamic"
           },
           {
             "name": "severity",
             "type": "string"
           }
         ]
        }
      },
      "destinations": {
        "logAnalytics": [
          {
            "workspaceResourceId": "{{workspaceResourceId}}",
            "name": "clv2ws1"
          }
        ]
      },
      "dataFlows": [
        {
          "streams": [
            "Custom-GCPNAT"
          ],
          "destinations": [
            "clv2ws1"
          ],
          "transformKql": "source | extend Labels=parse_json(labels), JsonPayload=parse_json(jsonPayload), Resource=parse_json(resource) | extend InsertId=insertId, LogName=logName, ReceiveTimestamp=receiveTimestamp, TimeGenerated=timestamp, ResourceType=tostring(Resource['type']), ProjectId=tostring(Resource['labels']['project_id']), Region=tostring(Resource['labels']['region']), RouterId=tostring(Resource['labels']['router_id']), GatewayName=tostring(Resource['labels']['gateway_name']), AllocationStatus=tostring(JsonPayload['allocation_status']), SrcIp=tostring(JsonPayload['connection']['src_ip']), SrcPort=tostring(JsonPayload['connection']['src_port']), DestIp=tostring(JsonPayload['connection']['dest_ip']), DestPort=tostring(JsonPayload['connection']['dest_port']), NatIp=tostring(JsonPayload['connection']['nat_ip']), NatPort=tostring(JsonPayload['connection']['nat_port']), Protocol=tostring(JsonPayload['connection']['protocol']), VmName=tostring(JsonPayload['endpoint']['vm_name']), EndpointRegion=tostring(JsonPayload['endpoint']['region']), EndpointZone=tostring(JsonPayload['endpoint']['zone']), DestinationGeo=parse_json(JsonPayload['destination']['geo_location']), ASN=tostring(JsonPayload['destination']['geo_location']['asn']), Country=tostring(JsonPayload['destination']['geo_location']['country']), City=tostring(JsonPayload['destination']['geo_location']['city']), DestinationRegion=tostring(JsonPayload['destination']['geo_location']['region']), Continent=tostring(JsonPayload['destination']['geo_location']['continent']) | where LogName endswith 'nat_flows' | project InsertId, LogName, ReceiveTimestamp, TimeGenerated, ResourceType, ProjectId, Region, RouterId, GatewayName, AllocationStatus, SrcIp, SrcPort, DestIp, DestPort, NatIp, NatPort, Protocol, VmName, EndpointRegion, EndpointZone, ASN, Country, City, DestinationRegion, Continent",
          "outputStream": "Microsoft-GCPNAT"
        },
        {
          "streams": [
            "Custom-GCPNATAudit"
          ],
          "destinations": [
            "clv2ws1"
          ],
          "transformKql": "source | extend Labels=parse_json(labels), ProtoPayload=parse_json(protoPayload), Operation=parse_json(operation), Resource=parse_json(resource) | extend TimeGenerated=timestamp, InsertId=insertId, Severity=severity, LogName=logName, ReceiveTimestamp=receiveTimestamp, RootTriggerId=tostring(Labels['compute.googleapis.com/root_trigger_id']), ResourceType=tostring(Resource['type']), ResourceRegion=tostring(Resource['labels']['region']), RouterId=tostring(Resource['labels']['router_id']), ProjectId=tostring(Resource['labels']['project_id']), PayloadType=tostring(ProtoPayload['@type']), PrincipalEmail=tostring(ProtoPayload['authenticationInfo']['principalEmail']), PrincipalSubject=tostring(ProtoPayload['authenticationInfo']['principalSubject']), CallerIp=tostring(ProtoPayload['requestMetadata']['callerIp']), UserAgent=tostring(ProtoPayload['requestMetadata']['callerSuppliedUserAgent']), RequestAttributeTime=todatetime(ProtoPayload['requestMetadata']['requestAttributes']['time']), RequestAttributeAuth=tostring(ProtoPayload['requestMetadata']['requestAttributes']['auth']), RequestAttributeDestination=tostring(ProtoPayload['requestMetadata']['destinationAttributes']), PayloadRequestNats=tostring(ProtoPayload['request']['nats']), RequestType=tostring(ProtoPayload['request']['@type']), RequestName=tostring(ProtoPayload['request']['name']), RequestNetwork=tostring(ProtoPayload['request']['network']), EncryptedInterconnectRouter=tobool(ProtoPayload['request']['encryptedInterconnectRouter']), RequestRegion=tostring(ProtoPayload['request']['region']), RequestSelfLink=tostring(ProtoPayload['request']['selfLink']), RequestId=tostring(ProtoPayload['request']['id']), ServiceName=tostring(ProtoPayload['serviceName']), MethodName=tostring(ProtoPayload['methodName']), AuthorizationInfo=tostring(ProtoPayload['authorizationInfo']), ResourceName=tostring(ProtoPayload['resourceName']), ResponseType=tostring(ProtoPayload['response']['@type']), ResponseName=tostring(ProtoPayload['response']['name']), ResponseUser=tostring(ProtoPayload['response']['user']), ResponseTargetId=tostring(ProtoPayload['response']['targetId']), ResponseStatus=tostring(ProtoPayload['response']['status']), ResponseProgress=tostring(ProtoPayload['response']['progress']), ResponseStartTime=todatetime(ProtoPayload['response']['startTime']), ResponseRegion=tostring(ProtoPayload['response']['region']), ResponseSelfLinkWithId=tostring(ProtoPayload['response']['selfLinkWithId']), ResponseInsertTime=todatetime(ProtoPayload['response']['insertTime']), ResponseTargetLink=tostring(ProtoPayload['response']['targetLink']), ResponseSelfLink=tostring(ProtoPayload['response']['selfLink']), ResponseId=tostring(ProtoPayload['response']['id']), ResponseOperationType=tostring(ProtoPayload['response']['operationType']), ResponseErrors=tostring(ProtoPayload['response']['errors']), ResponseErrorCode=tostring(ProtoPayload['response']['error']['code']), ResponseErrorMessage=tostring(ProtoPayload['response']['error']['message']), ResourceLocation=tostring(ProtoPayload['resourceLocation']), OperationId=tostring(Operation['id']), OperationProducer=tostring(Operation['producer']), OperationFirst=tobool(Operation['first']), OperationLast=tobool(Operation['last']) | where ResourceType == 'gce_router' and ServiceName == 'compute.googleapis.com' and MethodName has 'v1.compute.routers.' | project TimeGenerated, InsertId, Severity, LogName, ReceiveTimestamp, RootTriggerId, ResourceType, ResourceRegion, RouterId, ProjectId, PayloadType, PrincipalEmail, PrincipalSubject, CallerIp, UserAgent, RequestAttributeTime, RequestAttributeAuth, RequestAttributeDestination, PayloadRequestNats, RequestType, RequestName, RequestNetwork, EncryptedInterconnectRouter, RequestRegion, RequestSelfLink, RequestId, ServiceName, MethodName, AuthorizationInfo, ResourceName, ResponseType, ResponseName, ResponseUser, ResponseTargetId, ResponseStatus, ResponseProgress, ResponseStartTime, ResponseRegion, ResponseSelfLinkWithId, ResponseInsertTime, ResponseTargetLink, ResponseSelfLink, ResponseId, ResponseOperationType, ResponseErrors, ResponseErrorCode, ResponseErrorMessage, ResourceLocation, OperationId, OperationProducer, OperationFirst, OperationLast",
          "outputStream": "Microsoft-GCPNATAudit"
        }
      ]
    }
  }
]