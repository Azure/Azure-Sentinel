{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "5536892284840173131"
    },
    "title": "baseVISION Threat Intel - Defender Integration",
    "description": "This playbook is triggered every 15 minutes and sends Filter based defined IOCs to Microsoft Defender XDR.",
    "mainSteps": [
      "1. Get IOCs not part of Microsoft Feeds",
      "2. Send data to Microsoft Defender XDR"
    ],
    "prerequisites": [
      "baseVISION TI Feed in TAXII connector configured."
    ],
    "postdeployment":[
      "After the deployment you need to grant the managed identity access to the Microsoft Defender XDR API. Copy the following script which can be executed in the Cloud Shell or in a local PowerShell session: <br><br> <code># Replace with your managed identity object ID<br>$miName = \"la-basevisionti-defenderxdr-uami\"<br># The app ID of the Defender API where the permissions are required<br>$appId = \"fc780465-2017-40d4-a0c5-307022471b92\"<br># Replace with the API permissions required by your app<br>$permissionsToAdd = @(\"Ti.ReadWrite.All\")<br>Connect-AzureAD<br>$miObjectID = (Get-AzADServicePrincipal -DisplayName $miName).Id<br>$app = Get-AzureADServicePrincipal -Filter \"AppId eq '$appId'\"<br>foreach ($permission in $permissionsToAdd)<br>{<br>   $role = $app.AppRoles | where Value -Like $permission | Select-Object -First 1<br>   New-AzureADServiceAppRoleAssignment -Id $role.Id -ObjectId $miObjectID -PrincipalId $miObjectID -ResourceId $app.ObjectId<br>}</code>"
    ],
    "lastUpdateTime": "2025-02-17T00:00:00.000Z",
    "entities": [],
    "tags": [],
    "support": {
      "tier": "Community",
      "name": "baseVISION AG",
      "email": "support@basevision.ch"
    },
    "author": {
      "name": "baseVISION AG"
    }
  },
  "parameters": {
    "PlaybookName": {
      "type": "string",
      "defaultValue": "la-basevisionti-defenderxdr",
      "metadata": {
        "description": "Name of the playbook (Logic Apps resource) which will be created"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": ""
    },
    "Action": {
      "type": "string",
      "defaultValue": "Audit",
      "minLength": 1,
      "metadata": {
        "description": "Action (Warn, Block, Audit or BlockAndRemediate) to take by the defender integration playbook (Logic Apps resource) which will be created"
      }
    },
    "TaxiiFeedName": {
      "type": "string",
      "defaultValue": "baseVISION-SOC-TI-Feed",
      "minLength": 1,
      "metadata": {
        "description": "Name of the Taxii Feed which was configured in the TAXII connector"
      }
    },
    "workspace": {
      "type": "string",
      "defaultValue": "<Enter Log Analytics Workspace>",
      "minLength": 1,
      "metadata": {
        "description": "Workspace name for Azure Log Analytics where Azure Sentinel is setup"
      }
    }
  },
  "variables": {
    "laName": "[parameters('PlaybookName')]",
    "azureSentinelConnectionName": "[format('{0}-azmon-connection', parameters('PlaybookName'))]",
    "uamiName": "[format('{0}-uami', parameters('PlaybookName'))]",
    "roleDefinitionSentinelReaderId": "8d289c81-5878-46d4-8554-54e1e3d8b5cb"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2024-11-30",
      "name": "[variables('uamiName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('azureSentinelConnectionName')]",
      "location": "[parameters('location')]",
      "tags": {},
      "properties": {
        "displayName": "[variables('azureSentinelConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azuremonitorlogs', subscription().subscriptionId, parameters('location'))]"
        },
        "parameterValueSet": {
          "name": "managedIdentityAuth",
          "values": {}
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('laName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')))]": {}
        }
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "TaxiiFeedName": {
              "defaultValue": "[parameters('TaxiiFeedName')]",
              "type": "String"
            },
            "SubscriptionId": {
              "defaultValue": "[subscription().subscriptionId]",
              "type": "String"
            },
            "ResourceGroupName": {
              "defaultValue": "[resourceGroup().name]",
              "type": "String"
            },
            "SentinelName": {
              "defaultValue": "[parameters('workspace')]",
              "type": "String"
            },
            "Action": {
              "defaultValue": "[parameters('Action')]",
              "type": "String"
            },
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Sliding_Window": {
              "recurrence": {
                "interval": 15,
                "frequency": "Minute"
              },
              "evaluatedRecurrence": {
                "interval": 15,
                "frequency": "Minute"
              },
              "type": "SlidingWindow",
              "conditions": []
            }
          },
          "actions": {
            "Get_IOCs_not_on_Microsoft_feed_with_confidence_of_100": {
              "runAfter": {
                "Initialize_variable_Batch": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "query": "let onlyMsTI = ThreatIntelligenceIndicator\n| where Active == true and SourceSystem == \"Microsoft Defender Threat Intelligence\" and FileHashType !contains \"MD5\" and FileHashType !contains \"SHA1\" and TimeGenerated > todatetime(\"@{triggerOutputs()['windowStartTime']}\")\n| project Ioc=strcat(NetworkSourceIP, NetworkIP, NetworkDestinationIP, Url, FileHashValue, DomainName,EmailSenderName), SourceSystem, ConfidenceScore,ExpirationDateTime\n| distinct Ioc;\nThreatIntelligenceIndicator\n| where ConfidenceScore > 99 and Active == true and SourceSystem == \"@{parameters('TaxiiFeedName')}\" and FileHashType !contains \"MD5\" and FileHashType !contains \"SHA1\" and TimeGenerated > ago(7d)\n| project Ioc=strcat(NetworkSourceIP, NetworkIP, NetworkDestinationIP, Url, FileHashValue, DomainName,EmailSenderName), Description, IocType = case(\n    isnotempty(NetworkSourceIP) or isnotempty(NetworkIP) or isnotempty(NetworkDestinationIP), \"IpAddress\",\n    isnotempty(Url), \"Url\",\n    isnotempty(FileHashValue), \"FileSha256\",  // Assuming FileHashValue represents FileSha256\n    isnotempty(DomainName), \"DomainName\",\n    \"\"\n), SourceSystem, ConfidenceScore,ExpirationDateTime,TrafficLightProtocolLevel\n| join kind=leftanti onlyMsTI on Ioc\n| summarize MinConfidenceScore=min(ConfidenceScore),MinExpirationDateTime=min(ExpirationDateTime), Descriptions=make_list(Description) by Ioc, IocType\n| project Ioc, IocType, Description=Descriptions[0], MinConfidenceScore,MinExpirationDateTime\n| limit 20",
                  "timerangetype": "3"
                },
                "path": "/queryDataV2",
                "queries": {
                  "subscriptions": "@parameters('SubscriptionId')",
                  "resourcegroups": "@parameters('ResourceGroupName')",
                  "resourcetype": "Log Analytics Workspace",
                  "resourcename": "@parameters('SentinelName')"
                }
              }
            },
            "For_each": {
              "foreach": "@body('Get_IOCs_not_on_Microsoft_feed_with_confidence_of_100')?['value']",
              "actions": {
                "Append_to_array_variable": {
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "Batch",
                    "value": {
                      "indicatorValue": "@{item()?['Ioc']}",
                      "indicatorType": "@{item()?['IocType']}",
                      "title": "@{item()?['Ioc']}",
                      "application": "@{parameters('TaxiiFeedName')}",
                      "expirationTime": "@{formatDateTime(item()?['MinExpirationDateTime'],'s')}Z",
                      "action": "@{parameters('Action')}",
                      "severity": "Low",
                      "description": "@{item()?['Description']}",
                      "recommendedActions": "nothing",
                      "rbacGroupNames": [],
                      "generateAlert": "True"
                    }
                  }
                },
                "Condition": {
                  "actions": {},
                  "runAfter": {
                    "Append_to_array_variable": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Reset_Batch": {
                        "runAfter": {
                          "Add_Indicator_to_Defender_XDR": [
                            "Succeeded"
                          ]
                        },
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Batch",
                          "value": "@null"
                        }
                      },
                      "Add_Indicator_to_Defender_XDR": {
                        "type": "Http",
                        "inputs": {
                          "uri": "https://api.securitycenter.microsoft.com/api/indicators/import",
                          "method": "POST",
                          "headers": {
                            "Content-Type": "application/json"
                          },
                          "body": {
                            "Indicators": "@variables('Batch')"
                          },
                          "authentication": {
                            "type": "ManagedServiceIdentity",
                            "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]",
                            "audience": "https://api.securitycenter.microsoft.com/"
                          },
                          "retryPolicy": {
                            "type": "none"
                          }
                        },
                        "runtimeConfiguration": {
                          "contentTransfer": {
                            "transferMode": "Chunked"
                          }
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "less": [
                          "@length(variables('Batch'))",
                          495
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "Get_IOCs_not_on_Microsoft_feed_with_confidence_of_100": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Initialize_variable_Batch": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Batch",
                    "type": "array"
                  }
                ]
              }
            },
            "Add_Indicator_to_Defender_XDR_Final": {
              "runAfter": {
                "For_each": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "uri": "https://api.securitycenter.microsoft.com/api/indicators/import",
                "method": "POST",
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "Indicators": "@variables('Batch')"
                },
                "authentication": {
                  "type": "ManagedServiceIdentity",
                  "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]",
                  "audience": "https://api.securitycenter.microsoft.com/"
                },
                "retryPolicy": {
                  "type": "none"
                }
              },
              "runtimeConfiguration": {
                "contentTransfer": {
                  "transferMode": "Chunked"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuremonitorlogs": {
                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azuremonitorlogs', subscription().subscriptionId, parameters('location'))]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureSentinelConnectionName'))]",
                "connectionName": "azuremonitorlogs",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity",
                    "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
                  }
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('azureSentinelConnectionName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.Logic/workflows', variables('laName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionSentinelReaderId')))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionSentinelReaderId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName')), '2024-11-30').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('laName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('uamiName'))]"
      ]
    }
  ]
}