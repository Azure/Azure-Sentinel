{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "config": {
      "isWizard": false,
      "basics": {
        "description": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/baseVISION%20Threat%20Intel/Workbooks/Images/baseVISION.svg\" width=\"75px\" height=\"75px\">\n\n**Note:** Please refer to the following before installing the solution: \n\n• Review the solution [Release Notes](https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/baseVISION%20Threat%20Intelligence/ReleaseNotes.md)\n\n • There may be [known issues](https://aka.ms/sentinelsolutionsknownissues) pertaining to this Solution, please refer to them before installing.\n\nThe baseVISION Threat Intel Feeds offering provides tactical threat intelligence to detect and protect against known threats within an organization's environment before they can cause harm. The service leverages multiple sources integrated into its platform, curated and maintained by specialists to ensure quality, including Indicators of Compromise (IOCs), confidence levels, and expiration. The sources include data gathered from customers during incident analysis and response, as well as paid feeds from highly rated threat intelligence providers.\n\n**Important:** _This Sentinel Solution provides additional components to our Threat Intel Feeds which can be bought via Microsoft Azure Marketplace._\r\n\n\n\n**Workbooks:** 1, **Playbooks:** 2\n\n[Learn more about Microsoft Sentinel](https://aka.ms/azuresentinel) | [Learn more about Solutions](https://aka.ms/azuresentinelsolutionsdoc)",
        "subscription": {
          "constraints": {
            "validations": [
            {
                "permission": "Microsoft.OperationsManagement/solutions/write",
                "message": "Must have write permission for Solutions."
            },
            {
                "permission": "Microsoft.ManagedIdentity/userAssignedIdentities/write",
                "message": "Must have write permission for Managed Identities."
            },
            {
                "permission": "Microsoft.Logic/workflows/write",
                "message": "Must have write permission for Logic Apps."
            },
            {
                "permission": "Microsoft.Insights/workbooks/write",
                "message": "Must have write permission for Workbooks."
            }
            ]
        },"resourceProviders": [
            "Microsoft.OperationsManagement/solutions",
            "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "Microsoft.Insights/workbooks",
            "Microsoft.Logic/workflows",
            "Microsoft.ManagedIdentity"
          ]
        },
        "location": {
          "metadata": {
            "hidden": "Hiding location, we get it from the log analytics workspace"
          },
          "visible": false
        },
        "resourceGroup": {
          "allowExisting": true
        }
      }
    },
    "basics": [
      {
        "name": "getLAWorkspace",
        "type": "Microsoft.Solutions.ArmApiControl",
        "toolTip": "This filters by workspaces that exist in the Resource Group selected",
        "condition": "[greater(length(resourceGroup().name),0)]",
        "request": {
          "method": "GET",
          "path": "[concat(subscription().id,'/providers/Microsoft.OperationalInsights/workspaces?api-version=2020-08-01')]"
        }
      },
      {
        "name": "workspace",
        "type": "Microsoft.Common.DropDown",
        "label": "Workspace",
        "placeholder": "Select a workspace",
        "toolTip": "This dropdown will list only workspace that exists in the Resource Group selected",
        "constraints": {
          "allowedValues": "[map(filter(basics('getLAWorkspace').value, (filter) => contains(toLower(filter.id), toLower(resourceGroup().name))), (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
          "required": true
        },
        "visible": true
      },
      {
        "name": "taxii-name",
        "type": "Microsoft.Common.TextBox",
        "label": "Name of the configured TAXII Feed",
        "defaultValue": "baseVISION-SOC-TI-Feed",
        "toolTip": "Name of the Taxii Feed which was configured in the TAXII connector",
        "constraints": {
          "required": true
        }
      }
    ],
    "steps": [
      {
        "name": "workbooks",
        "label": "Workbooks",
        "subLabel": {
          "preValidation": "Configure the workbooks",
          "postValidation": "Done"
        },
        "bladeTitle": "Workbooks",
        "elements": [
          {
            "name": "workbooks-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "This solution installs workbooks(s).  Workbooks provide a flexible canvas for data analysis and the creation of rich visual reports within the Azure portal. They allow you to tap into multiple data sources from across Azure Sentinel, and combine them into unified interactive experiences.",
              "link": {
                "label": "Learn more",
                "uri": "https://docs.microsoft.com/azure/sentinel/tutorial-monitor-your-data"
              }
            }
          },
          {
            "name": "workbook1",
            "type": "Microsoft.Common.Section",
            "label": "baseVISION TI Feed Dashboard",
            "elements": [
              {
                "name": "workbook1-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This workbook provides insights into Threat Intel feeds integrated into the selected Microsoft Sentinel Workspace regarding quality, speed and efficienty."
                }
              },
              {
                "name": "workbook1-name",
                "type": "Microsoft.Common.TextBox",
                "label": "Display Name",
                "defaultValue": "baseVISION TI Feed Dashboard",
                "toolTip": "Display name for the workbook.",
                "constraints": {
                  "required": true,
                  "regex": "[a-z0-9A-Z]{1,256}$",
                  "validationMessage": "Please enter a workbook name"
                }
              }
            ]
          }
        ]
      },
      {
        "name": "playbooks",
        "label": "Playbooks",
        "subLabel": {
          "preValidation": "Configure the playbooks",
          "postValidation": "Done"
        },
        "bladeTitle": "Playbooks",
        "elements": [
          {
            "name": "playbooks-text",
            "type": "Microsoft.Common.TextBlock",
            "options": {
              "text": "This solution installs playbook resources. A security playbook is a collection of procedures that can be run from Azure Sentinel in response to an alert. A security playbook can help automate and orchestrate your response, and can be run manually or set to run automatically when specific alerts are triggered. Security playbooks in Azure Sentinel are based on Azure Logic Apps, which means that you get all the power, customizability, and built-in templates of Logic Apps. Each playbook is created for the specific subscription you choose, but when you look at the Playbooks page, you will see all the playbooks across any selected subscriptions.",
              "link": {
                "label": "Learn more",
                "uri": "https://docs.microsoft.com/azure/sentinel/tutorial-respond-threats-playbook?WT.mc_id=Portal-Microsoft_Azure_CreateUIDef"
              }
            }
          },
          {
            "name": "playbook1",
            "type": "Microsoft.Common.Section",
            "label": "Telemetry for TI Improvement Playbook",
            "elements": [
              {
                "name": "plabybook1-text",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This playbook is triggered every four hours and sends basic telemetry to baseVISION to improve the feeds. The telemetry data only contains IOC's provided by baseVISION together with the analysts classification of incidents associated with it."
                }
              },
              {
                "name": "playbook1-name",
                "type": "Microsoft.Common.TextBox",
                "label": "Playbook Name",
                "defaultValue": "la-basevisionti-telemetry",
                "toolTip": "Resource name for the logic app playbook. No spaces are allowed",
                "constraints": {
                  "required": true,
                  "regex": "[a-z0-9A-Z]{1,256}$",
                  "validationMessage": "Please enter a playbook resource name"
                }
              }
            ]
          },
          {
            "name": "playbook2",
            "type": "Microsoft.Common.Section",
            "label": "Microsoft Defender XDR integration Playbook",
            "elements": [
              {
                "name": "plabybook2-text1",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "This playbook is triggered every 15 minutes and sends IOCs to Microsoft Defender XDR. The IOCs are filtered based on the confidence level and are not part of the Microsoft Feeds to stay withtin the 15000 limit of Microsoft Defender XDR."
                }
              },
              {
                "name": "playbook2-name",
                "type": "Microsoft.Common.TextBox",
                "label": "Playbook Name",
                "defaultValue": "la-basevisionti-defenderxdr",
                "toolTip": "Resource name for the logic app playbook. No spaces are allowed",
                "constraints": {
                  "required": true,
                  "regex": "[a-z0-9A-Z]{1,256}$",
                  "validationMessage": "Please enter a playbook resource name"
                }
              },
              {
                "name": "playbook2-action",
                "type": "Microsoft.Common.DropDown",
                "label": "Action",
                "defaultValue": "Audit",
                "multiselect": false,
                "toolTip": "Select the action to be taken by the playbook.",
                "constraints": {
                  "required": true,
                  "allowedValues": [
                    {
                      "label": "Warn",
                      "value": "Warn"
                    },
                    {
                      "label": "Block",
                      "value": "Block"
                    },
                    {
                      "label": "Audit",
                      "value": "Audit"
                    },
                    {
                      "label": "Block and Remediate",
                      "value": "BlockAndRemediate"
                    }
                    ]
                }
              },
              {
                "name": "plabybook2-text2",
                "type": "Microsoft.Common.TextBlock",
                "options": {
                  "text": "After the deployment you need to grant the managed identity access to the Microsoft Defender XDR API. Copy the following script which can be executed in the Cloud Shell or in a local PowerShell session: <br><br> <code># Replace with your managed identity object ID<br>$miName = \"la-basevisionti-defenderxdr-uami\"<br># The app ID of the Defender API where the permissions are required<br>$appId = \"fc780465-2017-40d4-a0c5-307022471b92\"<br># Replace with the API permissions required by your app<br>$permissionsToAdd = @(\"Ti.ReadWrite.All\")<br>Connect-AzureAD<br>$miObjectID = (Get-AzADServicePrincipal -DisplayName $miName).Id<br>$app = Get-AzureADServicePrincipal -Filter \"AppId eq '$appId'\"<br>foreach ($permission in $permissionsToAdd)<br>{<br>   $role = $app.AppRoles | where Value -Like $permission | Select-Object -First 1<br>   New-AzureADServiceAppRoleAssignment -Id $role.Id -ObjectId $miObjectID -PrincipalId $miObjectID -ResourceId $app.ObjectId<br>}</code>"
                }
              }
            ]
          }
        ]
      }
    ],
    "outputs": {
      "workspace-location": "[first(map(filter(basics('getLAWorkspace').value, (filter) => and(contains(toLower(filter.id), toLower(resourceGroup().name)),equals(filter.name,basics('workspace')))), (item) => item.location))]",
      "location": "[location()]",
      "workspace": "[basics('workspace')]",
      "TaxiiFeedName": "[basics('taxii-name')]",
      "workbookTiDashboard_name": "[steps('workbooks').workbook1.workbook1-name]",
      "la_basevisionti_telemetry_name": "[steps('playbooks').playbook1.playbook1-name]",
      "la_basevisionti_defenderxdr_name": "[steps('playbooks').playbook2.playbook2-name]",
      "la_basevisionti_defenderxdr_action": "[steps('playbooks').playbook2.playbook2-action]"

    }
  }
}
