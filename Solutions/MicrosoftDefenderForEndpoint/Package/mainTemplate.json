{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for MicrosoftDefenderForEndpoint"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "MicrosoftDefenderForEndpoint",
    "_solutionVersion": "3.0.3",
    "solutionId": "azuresentinel.azure-sentinel-solution-microsoftdefenderendpoint",
    "_solutionId": "[variables('solutionId')]",
    "uiConfigId1": "MicrosoftDefenderAdvancedThreatProtection",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "MicrosoftDefenderAdvancedThreatProtection",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.0.2",
      "_analyticRulecontentId1": "18dbdc22-b69f-4109-9e39-723d9465f45f",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '18dbdc22-b69f-4109-9e39-723d9465f45f')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('18dbdc22-b69f-4109-9e39-723d9465f45f')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','18dbdc22-b69f-4109-9e39-723d9465f45f','-', '1.0.2')))]"
    },
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','AssignedIPAddress')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'AssignedIPAddress')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('AssignedIPAddress-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "AssignedIPAddress-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','Devicefromip')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Devicefromip')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Devicefromip-Parser')))]",
      "parserVersion2": "1.0.0",
      "parserContentId2": "Devicefromip-Parser"
    },
    "huntingQueryObject1": {
      "huntingQueryVersion1": "1.0.2",
      "_huntingQuerycontentId1": "c63ae777-d5e0-4113-8c9a-c2c9d3d09fcd",
      "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('c63ae777-d5e0-4113-8c9a-c2c9d3d09fcd')))]"
    },
    "huntingQueryObject2": {
      "huntingQueryVersion2": "1.0.2",
      "_huntingQuerycontentId2": "4a3073ac-7383-48a9-90a8-eb6716183a54",
      "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('4a3073ac-7383-48a9-90a8-eb6716183a54')))]"
    },
    "Isolate-MDEMachine-alert-trigger": "Isolate-MDEMachine-alert-trigger",
    "_Isolate-MDEMachine-alert-trigger": "[variables('Isolate-MDEMachine-alert-trigger')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "Isolate-MDEMachine-alert-trigger",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "Isolate-MDEMachine-incident-trigger": "Isolate-MDEMachine-incident-trigger",
    "_Isolate-MDEMachine-incident-trigger": "[variables('Isolate-MDEMachine-incident-trigger')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "Isolate-MDEMachine-incident-trigger",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "Restrict-MDEAppExecution-alert-trigger": "Restrict-MDEAppExecution-alert-trigger",
    "_Restrict-MDEAppExecution-alert-trigger": "[variables('Restrict-MDEAppExecution-alert-trigger')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "Restrict-MDEAppExecution-alert-trigger",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3'))))]",
    "_playbookcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId3'),'-', variables('playbookVersion3'))))]",
    "Restrict-MDEAppExecution-incident-trigger": "Restrict-MDEAppExecution-incident-trigger",
    "_Restrict-MDEAppExecution-incident-trigger": "[variables('Restrict-MDEAppExecution-incident-trigger')]",
    "playbookVersion4": "1.0",
    "playbookContentId4": "Restrict-MDEAppExecution-incident-trigger",
    "_playbookContentId4": "[variables('playbookContentId4')]",
    "playbookId4": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId4'))]",
    "playbookTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId4'))))]",
    "_playbookcontentProductId4": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId4'),'-', variables('playbookVersion4'))))]",
    "Restrict-MDEDomain-alert-trigger": "Restrict-MDEDomain-alert-trigger",
    "_Restrict-MDEDomain-alert-trigger": "[variables('Restrict-MDEDomain-alert-trigger')]",
    "playbookVersion5": "1.0",
    "playbookContentId5": "Restrict-MDEDomain-alert-trigger",
    "_playbookContentId5": "[variables('playbookContentId5')]",
    "playbookId5": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId5'))]",
    "playbookTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId5'))))]",
    "_playbookcontentProductId5": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId5'),'-', variables('playbookVersion5'))))]",
    "Restrict-MDEDomain-incident-trigger": "Restrict-MDEDomain-incident-trigger",
    "_Restrict-MDEDomain-incident-trigger": "[variables('Restrict-MDEDomain-incident-trigger')]",
    "playbookVersion6": "1.0",
    "playbookContentId6": "Restrict-MDEDomain-incident-trigger",
    "_playbookContentId6": "[variables('playbookContentId6')]",
    "playbookId6": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId6'))]",
    "playbookTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId6'))))]",
    "_playbookcontentProductId6": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId6'),'-', variables('playbookVersion6'))))]",
    "Restrict-MDEFileHash-alert-trigger": "Restrict-MDEFileHash-alert-trigger",
    "_Restrict-MDEFileHash-alert-trigger": "[variables('Restrict-MDEFileHash-alert-trigger')]",
    "playbookVersion7": "1.0",
    "playbookContentId7": "Restrict-MDEFileHash-alert-trigger",
    "_playbookContentId7": "[variables('playbookContentId7')]",
    "playbookId7": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId7'))]",
    "playbookTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId7'))))]",
    "_playbookcontentProductId7": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId7'),'-', variables('playbookVersion7'))))]",
    "Restrict-MDEFileHash-incident-trigger": "Restrict-MDEFileHash-incident-trigger",
    "_Restrict-MDEFileHash-incident-trigger": "[variables('Restrict-MDEFileHash-incident-trigger')]",
    "playbookVersion8": "1.0",
    "playbookContentId8": "Restrict-MDEFileHash-incident-trigger",
    "_playbookContentId8": "[variables('playbookContentId8')]",
    "playbookId8": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId8'))]",
    "playbookTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId8'))))]",
    "_playbookcontentProductId8": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId8'),'-', variables('playbookVersion8'))))]",
    "Restrict-MDEIPAddress-alert-trigger": "Restrict-MDEIPAddress-alert-trigger",
    "_Restrict-MDEIPAddress-alert-trigger": "[variables('Restrict-MDEIPAddress-alert-trigger')]",
    "playbookVersion9": "1.0",
    "playbookContentId9": "Restrict-MDEIPAddress-alert-trigger",
    "_playbookContentId9": "[variables('playbookContentId9')]",
    "playbookId9": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId9'))]",
    "playbookTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId9'))))]",
    "_playbookcontentProductId9": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId9'),'-', variables('playbookVersion9'))))]",
    "Restrict-MDEIPAddress-incident-trigger": "Restrict-MDEIPAddress-incident-trigger",
    "_Restrict-MDEIPAddress-incident-trigger": "[variables('Restrict-MDEIPAddress-incident-trigger')]",
    "playbookVersion10": "1.0",
    "playbookContentId10": "Restrict-MDEIPAddress-incident-trigger",
    "_playbookContentId10": "[variables('playbookContentId10')]",
    "playbookId10": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId10'))]",
    "playbookTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId10'))))]",
    "_playbookcontentProductId10": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId10'),'-', variables('playbookVersion10'))))]",
    "Restrict-MDEUrl-alert-trigger": "Restrict-MDEUrl-alert-trigger",
    "_Restrict-MDEUrl-alert-trigger": "[variables('Restrict-MDEUrl-alert-trigger')]",
    "playbookVersion11": "1.0",
    "playbookContentId11": "Restrict-MDEUrl-alert-trigger",
    "_playbookContentId11": "[variables('playbookContentId11')]",
    "playbookId11": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId11'))]",
    "playbookTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId11'))))]",
    "_playbookcontentProductId11": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId11'),'-', variables('playbookVersion11'))))]",
    "Restrict-MDEUrl-incident-trigger": "Restrict-MDEUrl-incident-trigger",
    "_Restrict-MDEUrl-incident-trigger": "[variables('Restrict-MDEUrl-incident-trigger')]",
    "playbookVersion12": "1.0",
    "playbookContentId12": "Restrict-MDEUrl-incident-trigger",
    "_playbookContentId12": "[variables('playbookContentId12')]",
    "playbookId12": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId12'))]",
    "playbookTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId12'))))]",
    "_playbookcontentProductId12": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId12'),'-', variables('playbookVersion12'))))]",
    "Run-MDEAntivirus-alert-trigger": "Run-MDEAntivirus-alert-trigger",
    "_Run-MDEAntivirus-alert-trigger": "[variables('Run-MDEAntivirus-alert-trigger')]",
    "playbookVersion13": "1.0",
    "playbookContentId13": "Run-MDEAntivirus-alert-trigger",
    "_playbookContentId13": "[variables('playbookContentId13')]",
    "playbookId13": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId13'))]",
    "playbookTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId13'))))]",
    "_playbookcontentProductId13": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId13'),'-', variables('playbookVersion13'))))]",
    "Run-MDEAntivirus-incident-trigger": "Run-MDEAntivirus-incident-trigger",
    "_Run-MDEAntivirus-incident-trigger": "[variables('Run-MDEAntivirus-incident-trigger')]",
    "playbookVersion14": "1.1",
    "playbookContentId14": "Run-MDEAntivirus-incident-trigger",
    "_playbookContentId14": "[variables('playbookContentId14')]",
    "playbookId14": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId14'))]",
    "playbookTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId14'))))]",
    "_playbookcontentProductId14": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId14'),'-', variables('playbookVersion14'))))]",
    "Unisolate-MDEMachine-alert-trigger": "Unisolate-MDEMachine-alert-trigger",
    "_Unisolate-MDEMachine-alert-trigger": "[variables('Unisolate-MDEMachine-alert-trigger')]",
    "playbookVersion15": "1.0",
    "playbookContentId15": "Unisolate-MDEMachine-alert-trigger",
    "_playbookContentId15": "[variables('playbookContentId15')]",
    "playbookId15": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId15'))]",
    "playbookTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId15'))))]",
    "_playbookcontentProductId15": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId15'),'-', variables('playbookVersion15'))))]",
    "Unisolate-MDEMachine-incident-trigger": "Unisolate-MDEMachine-incident-trigger",
    "_Unisolate-MDEMachine-incident-trigger": "[variables('Unisolate-MDEMachine-incident-trigger')]",
    "playbookVersion16": "1.1",
    "playbookContentId16": "Unisolate-MDEMachine-incident-trigger",
    "_playbookContentId16": "[variables('playbookContentId16')]",
    "playbookId16": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId16'))]",
    "playbookTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId16'))))]",
    "_playbookcontentProductId16": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId16'),'-', variables('playbookVersion16'))))]",
    "Restrict-MDEDomain-entity-trigger": "Restrict-MDEDomain-entity-trigger",
    "_Restrict-MDEDomain-entity-trigger": "[variables('Restrict-MDEDomain-entity-trigger')]",
    "playbookVersion17": "1.0",
    "playbookContentId17": "Restrict-MDEDomain-entity-trigger",
    "_playbookContentId17": "[variables('playbookContentId17')]",
    "playbookId17": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId17'))]",
    "playbookTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId17'))))]",
    "_playbookcontentProductId17": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId17'),'-', variables('playbookVersion17'))))]",
    "blanks": "[replace('b', 'b', '')]",
    "Restrict-MDEFileHash-entity-trigger": "Restrict-MDEFileHash-entity-trigger",
    "_Restrict-MDEFileHash-entity-trigger": "[variables('Restrict-MDEFileHash-entity-trigger')]",
    "playbookVersion18": "1.0",
    "playbookContentId18": "Restrict-MDEFileHash-entity-trigger",
    "_playbookContentId18": "[variables('playbookContentId18')]",
    "playbookId18": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId18'))]",
    "playbookTemplateSpecName18": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId18'))))]",
    "_playbookcontentProductId18": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId18'),'-', variables('playbookVersion18'))))]",
    "Restrict-MDEIPAddress-entity-trigger": "Restrict-MDEIPAddress-entity-trigger",
    "_Restrict-MDEIPAddress-entity-trigger": "[variables('Restrict-MDEIPAddress-entity-trigger')]",
    "playbookVersion19": "1.0",
    "playbookContentId19": "Restrict-MDEIPAddress-entity-trigger",
    "_playbookContentId19": "[variables('playbookContentId19')]",
    "playbookId19": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId19'))]",
    "playbookTemplateSpecName19": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId19'))))]",
    "_playbookcontentProductId19": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId19'),'-', variables('playbookVersion19'))))]",
    "Restrict-MDEUrl-entity-trigger": "Restrict-MDEUrl-entity-trigger",
    "_Restrict-MDEUrl-entity-trigger": "[variables('Restrict-MDEUrl-entity-trigger')]",
    "playbookVersion20": "1.0",
    "playbookContentId20": "Restrict-MDEUrl-entity-trigger",
    "_playbookContentId20": "[variables('playbookContentId20')]",
    "playbookId20": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId20'))]",
    "playbookTemplateSpecName20": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId20'))))]",
    "_playbookcontentProductId20": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId20'),'-', variables('playbookVersion20'))))]",
    "Isolate-MDE-Machine-entity-trigger": "Isolate-MDE-Machine-entity-trigger",
    "_Isolate-MDE-Machine-entity-trigger": "[variables('Isolate-MDE-Machine-entity-trigger')]",
    "playbookVersion21": "1.0",
    "playbookContentId21": "Isolate-MDE-Machine-entity-trigger",
    "_playbookContentId21": "[variables('playbookContentId21')]",
    "playbookId21": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId21'))]",
    "playbookTemplateSpecName21": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId21'))))]",
    "_playbookcontentProductId21": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId21'),'-', variables('playbookVersion21'))))]",
    "Unisolate-MDE-Machine-entity-trigger": "Unisolate-MDE-Machine-entity-trigger",
    "_Unisolate-MDE-Machine-entity-trigger": "[variables('Unisolate-MDE-Machine-entity-trigger')]",
    "playbookVersion22": "1.0",
    "playbookContentId22": "Unisolate-MDE-Machine-entity-trigger",
    "_playbookContentId22": "[variables('playbookContentId22')]",
    "playbookId22": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId22'))]",
    "playbookTemplateSpecName22": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId22'))))]",
    "_playbookcontentProductId22": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId22'),'-', variables('playbookVersion22'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MicrosoftDefenderForEndpoint data connector with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "StaticUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Microsoft Defender for Endpoint",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "Microsoft Defender for Endpoint is a security platform designed to prevent, detect, investigate, and respond to advanced threats. The platform creates alerts when suspicious security events are seen in an organization. Fetch alerts generated in Microsoft Defender for Endpoint to Microsoft Sentinel so that you can effectively analyze security events. You can create rules, build dashboards and author playbooks for immediate response. For more information, see the [Microsoft Sentinel documentation >](https://go.microsoft.com/fwlink/p/?linkid=2220128&wt.mc_id=sentinel_dataconnectordocs_content_cnl_csasci).",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "SecurityAlert (MDATP)",
                      "baseQuery": "SecurityAlert | where ProviderName == \"MDATP\""
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "SentinelKinds",
                      "value": [
                        "MicrosoftDefenderAdvancedThreatProtection"
                      ]
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "SecurityAlert (MDATP)",
                      "lastDataReceivedQuery": "SecurityAlert | where ProviderName == \"MDATP\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Microsoft Defender for Endpoint",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "MicrosoftDefenderForEndpoint",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "StaticUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Microsoft Defender for Endpoint",
          "publisher": "Microsoft",
          "descriptionMarkdown": "Microsoft Defender for Endpoint is a security platform designed to prevent, detect, investigate, and respond to advanced threats. The platform creates alerts when suspicious security events are seen in an organization. Fetch alerts generated in Microsoft Defender for Endpoint to Microsoft Sentinel so that you can effectively analyze security events. You can create rules, build dashboards and author playbooks for immediate response. For more information, see the [Microsoft Sentinel documentation >](https://go.microsoft.com/fwlink/p/?linkid=2220128&wt.mc_id=sentinel_dataconnectordocs_content_cnl_csasci).",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "SecurityAlert (MDATP)",
              "baseQuery": "SecurityAlert | where ProviderName == \"MDATP\""
            }
          ],
          "dataTypes": [
            {
              "name": "SecurityAlert (MDATP)",
              "lastDataReceivedQuery": "SecurityAlert | where ProviderName == \"MDATP\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "SentinelKinds",
              "value": [
                "MicrosoftDefenderAdvancedThreatProtection"
              ]
            }
          ],
          "id": "[variables('_uiConfigId1')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AquaBlizzardAVHits_AnalyticalRules Analytics Rule with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies a match in the Security Alert table for MDATP hits related to the Aqua Blizzard actor",
                "displayName": "Aqua Blizzard AV hits - Feb 2022",
                "enabled": false,
                "query": "let iocs = externaldata(DateAdded:string,IoC:string,Type:string) [@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/ActiniumIOC.csv\"] with (format=\"csv\", ignoreFirstRecord=True);\nlet AVHits = (iocs | where Type =~ \"AVDetection\"| project IoC);\nSecurityAlert\n| where ProviderName == 'MDATP'\n| extend ThreatName_ = tostring(parse_json(ExtendedProperties).ThreatName)\n| where ThreatName_ has_any (AVHits)\n| extend Directory = tostring(parse_json(Entities)[0].Directory), SHA256 = tostring(parse_json(tostring(parse_json(Entities)[0].FileHashes))[2].Value), FileName = tostring(parse_json(Entities)[0].Name), Hostname = tostring(parse_json(Entities)[6].FQDN)| extend AccountName = tostring(parse_json(tostring(parse_json(Entities)[6].LoggedOnUsers))[0].AccountName)\n| project TimeGenerated, AlertName, ThreatName_, ProviderName, AlertSeverity, Description, RemediationSteps, ExtendedProperties, Entities, FileName,SHA256, Directory, Hostname, AccountName\n| extend FileHash = SHA256, FileHashType = \"SHA256\"\n| extend Name = tostring(split(AccountName, \"@\")[0]), AccountUPNSuffix = tostring(split(AccountName, \"@\")[1])\n| extend Host = tostring(split(Hostname, \".\")[0]), DomainIndex = toint(indexof(Hostname, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Hostname, DomainIndex + 1), Hostname)\n",
                "queryFrequency": "PT6H",
                "queryPeriod": "PT6H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftDefenderAdvancedThreatProtection",
                    "dataTypes": [
                      "SecurityAlert (MDATP)"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "techniques": [
                  "T1137"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "AccountName",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "Name",
                        "identifier": "Name"
                      },
                      {
                        "columnName": "AccountUPNSuffix",
                        "identifier": "UPNSuffix"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "Hostname",
                        "identifier": "FullName"
                      },
                      {
                        "columnName": "Name",
                        "identifier": "HostName"
                      },
                      {
                        "columnName": "HostNameDomain",
                        "identifier": "NTDomain"
                      }
                    ],
                    "entityType": "Host"
                  },
                  {
                    "fieldMappings": [
                      {
                        "columnName": "FileHashType",
                        "identifier": "Algorithm"
                      },
                      {
                        "columnName": "FileHash",
                        "identifier": "Value"
                      }
                    ],
                    "entityType": "FileHash"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "MicrosoftDefenderForEndpoint Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Aqua Blizzard AV hits - Feb 2022",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AssignedIPAddress Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for AssignedIPAddress",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "AssignedIPAddress",
                "query": "let AssignedIPAddresses = (Device:string, Timestamp:datetime = datetime(null))\n{\nlet t = coalesce(Timestamp, now());\nlet adapters = materialize(\n    DeviceNetworkInfo \n    | where Timestamp between(max_of(t - 1d, ago(30d)) .. t)\n    | where DeviceId == Device or DeviceName == Device\n    | top 500 by Timestamp);\nlet lastReportId = tolong(toscalar(adapters | summarize arg_max(Timestamp, ReportId) | project ReportId));\nadapters | where ReportId == lastReportId\n| project Timestamp, NetworkAdapterType, IpAddresses = todynamic(tostring(IPAddresses)), ConnectedNetworks\n| mv-expand IpAddresses\n| project Timestamp, IPAddress = tostring(IpAddresses.IPAddress), IPType = tostring(IpAddresses.AddressType), NetworkAdapterType, ConnectedNetworks\n};\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'AssignedIPAddress')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "MicrosoftDefenderForEndpoint",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Parser for AssignedIPAddress",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for AssignedIPAddress",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "AssignedIPAddress",
        "query": "let AssignedIPAddresses = (Device:string, Timestamp:datetime = datetime(null))\n{\nlet t = coalesce(Timestamp, now());\nlet adapters = materialize(\n    DeviceNetworkInfo \n    | where Timestamp between(max_of(t - 1d, ago(30d)) .. t)\n    | where DeviceId == Device or DeviceName == Device\n    | top 500 by Timestamp);\nlet lastReportId = tolong(toscalar(adapters | summarize arg_max(Timestamp, ReportId) | project ReportId));\nadapters | where ReportId == lastReportId\n| project Timestamp, NetworkAdapterType, IpAddresses = todynamic(tostring(IPAddresses)), ConnectedNetworks\n| mv-expand IpAddresses\n| project Timestamp, IPAddress = tostring(IpAddresses.IPAddress), IPType = tostring(IpAddresses.AddressType), NetworkAdapterType, ConnectedNetworks\n};\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'AssignedIPAddress')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "MicrosoftDefenderForEndpoint",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Devicefromip Data Parser with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Devicefromip",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Devicefromip",
                "query": "let DeviceFromIP2 = (T:(IP:string), Timestamp:datetime = datetime(null))\n{\nlet t = coalesce(Timestamp, now());\nlet lastReportIds = DeviceNetworkInfo \n    | where Timestamp between(max_of(t - 1d, ago(30d)) .. t)\n    | summarize arg_max(Timestamp, ReportId) by DeviceId;\nlet adapters = DeviceNetworkInfo\n    | where Timestamp between(max_of(t - 1d, ago(30d)) .. t)\n    | lookup kind = inner lastReportIds on ReportId, DeviceId\n    | mv-expand todynamic(IPAddresses)\n    | project DeviceId, IP = tostring(IPAddresses.IPAddress);\nT | join adapters on IP | project-away IP1\n};\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Devicefromip')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "MicrosoftDefenderForEndpoint",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "Parser for Devicefromip",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Devicefromip",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Devicefromip",
        "query": "let DeviceFromIP2 = (T:(IP:string), Timestamp:datetime = datetime(null))\n{\nlet t = coalesce(Timestamp, now());\nlet lastReportIds = DeviceNetworkInfo \n    | where Timestamp between(max_of(t - 1d, ago(30d)) .. t)\n    | summarize arg_max(Timestamp, ReportId) by DeviceId;\nlet adapters = DeviceNetworkInfo\n    | where Timestamp between(max_of(t - 1d, ago(30d)) .. t)\n    | lookup kind = inner lastReportIds on ReportId, DeviceId\n    | mv-expand todynamic(IPAddresses)\n    | project DeviceId, IP = tostring(IPAddresses.IPAddress);\nT | join adapters on IP | project-away IP1\n};\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Devicefromip')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "MicrosoftDefenderForEndpoint",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject1').huntingQueryTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDE_Usage_HuntingQueries Hunting Query with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject1').huntingQueryVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "MicrosoftDefenderForEndpoint_Hunting_Query_1",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Probable AdFind Recon Tool Usage",
                "category": "Hunting Queries",
                "query": "let args = dynamic([\"objectcategory\",\"domainlist\",\"dcmodes\",\"adinfo\",\"trustdmp\",\"computers_pwdnotreqd\",\"Domain Admins\", \"objectcategory=person\", \"objectcategory=computer\", \"objectcategory=*\",\"dclist\"]);\nlet parentProcesses = dynamic([\"pwsh.exe\",\"powershell.exe\",\"cmd.exe\"]);\nDeviceProcessEvents\n//looks for execution from a shell\n| where InitiatingProcessFileName in (parentProcesses)\n// main filter\n| where FileName =~ \"AdFind.exe\" or SHA256 == \"c92c158d7c37fea795114fa6491fe5f145ad2f8c08776b18ae79db811e8e36a3\"\n   // AdFind common Flags to check for from various threat actor TTPs\n    or ProcessCommandLine has_any (args)\n| extend ProcessCustomEntity = InitiatingProcessFileName, CommandLineCustomEntity = ProcessCommandLine, AlgorithmCustomEntity = \"SHA256\", FileHashCustomEntity = SHA256,Name = tostring(split(AccountName, '@', 0)[0]), UPNSuffix = tostring(split(AccountName, '@', 1)[0]),HostName = tostring(split(DeviceName, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(DeviceName, '.'), 1, -1), '.'))\n | extend Account_0_Name = Name\n | extend Account_0_UPNSuffix = UPNSuffix\n | extend Host_0_HostName = HostName\n | extend Host_0_DnsDomain = DnsDomain\n | extend Process_0_ProcessId = ProcessCustomEntity\n | extend Process_0_CommandLine = CommandLineCustomEntity\n | extend FileHash_0_Algorithm = AlgorithmCustomEntity\n | extend FileHash_0_Value = FileHashCustomEntity\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Identifies the host and account that executed AdFind by hash and filename in addition to common and unique flags that are used by many threat actors in discovery."
                  },
                  {
                    "name": "tactics",
                    "value": "Discovery"
                  },
                  {
                    "name": "techniques",
                    "value": "T1018"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1),'/'))))]",
              "properties": {
                "description": "MicrosoftDefenderForEndpoint Hunting Query 1",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1)]",
                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
        "contentKind": "HuntingQuery",
        "displayName": "Probable AdFind Recon Tool Usage",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.0.2')))]",
        "version": "1.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject2').huntingQueryTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDE_Process-IOCs_HuntingQueries Hunting Query with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject2').huntingQueryVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "MicrosoftDefenderForEndpoint_Hunting_Query_2",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "SUNBURST suspicious SolarWinds child processes",
                "category": "Hunting Queries",
                "query": "let excludeProcs = dynamic([@\"\\SolarWinds\\Orion\\APM\\APMServiceControl.exe\", @\"\\SolarWinds\\Orion\\ExportToPDFCmd.Exe\", @\"\\SolarWinds.Credentials\\SolarWinds.Credentials.Orion.WebApi.exe\", @\"\\SolarWinds\\Orion\\Topology\\SolarWinds.Orion.Topology.Calculator.exe\", @\"\\SolarWinds\\Orion\\Database-Maint.exe\", @\"\\SolarWinds.Orion.ApiPoller.Service\\SolarWinds.Orion.ApiPoller.Service.exe\", @\"\\Windows\\SysWOW64\\WerFault.exe\"]);\nDeviceProcessEvents\n| where InitiatingProcessFileName =~ \"solarwinds.businesslayerhost.exe\"\n| where not(FolderPath has_any (excludeProcs))\n| extend\n    timestamp = TimeGenerated,\n    AccountCustomEntity = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName),\n    HostName = tostring(split(DeviceName, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(DeviceName, '.'), 1, -1), '.')),\n    AlgorithmCustomEntity = \"MD5\",FileHashCustomEntity = MD5\n|extend Name = tostring(split(AccountCustomEntity, '@', 0)[0]), UPNSuffix = tostring(split(AccountCustomEntity, '@', 1)[0])    \n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend Host_0_HostName = HostName\n| extend Host_0_DnsDomain = DnsDomain \n| extend FileHash_0_Algorithm = AlgorithmCustomEntity\n| extend FileHash_0_Value = FileHashCustomEntity \n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Identifies suspicious child processes of SolarWinds.Orion.Core.BusinessLayer.dll that may be evidence of the SUNBURST backdoor"
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,Persistence"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2),'/'))))]",
              "properties": {
                "description": "MicrosoftDefenderForEndpoint Hunting Query 2",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2)]",
                "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject2').huntingQueryVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
        "contentKind": "HuntingQuery",
        "displayName": "SUNBURST suspicious SolarWinds child processes",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.0.2')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.0.2')))]",
        "version": "1.0.2"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Isolate-MDEMachine Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Isolate-MDEMachine",
              "type": "string"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "MDATPConnectionName": "[[concat('wdatp-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MDATPConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Isolate-MDEMachine_alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Alert_-_Get_incident": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      },
                      "type": "ApiConnection"
                    },
                    "Entities_-_Get_Hosts": {
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      },
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Actions_-_Isolate_machine": {
                              "inputs": {
                                "body": {
                                  "Comment": "Isolated from playbook for Microsoft Sentinel Incident:  @{body('Alert_-_Get_incident')?['properties']?['incidentNumber']} - @{body('Alert_-_Get_incident')?['properties']?['title']}",
                                  "IsolationType": "Full"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/machines/@{encodeURIComponent(items('For_each')?['MdatpDeviceId'])}/isolate"
                              },
                              "type": "ApiConnection"
                            },
                            "Add_comment_to_incident_(V3)": {
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                  "message": "<p>@{items('For_each')?['HostName']} was isolated in MDE and the status was @{body('Actions_-_Isolate_machine')?['status']}</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              },
                              "runAfter": {
                                "Actions_-_Isolate_machine": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                    "message": "<p>@{items('For_each')?['HostName']} does not have MDEDeviceID in the Entities list. &nbsp;It was not isolated.&nbsp;</p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                },
                                "type": "ApiConnection"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@items('For_each')?['MdatpDeviceId']",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "wdatp": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]",
                        "connectionName": "[[variables('MDATPConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Isolate MDE Machine - Alert Triggered",
            "description": "This playbook will isolate (full) the machine in Microsoft Defender for Endpoint.",
            "prerequisites": [
              "- You will need to grant Machine.Isolate permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Machine.Isolate' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Isolate MDE Machine",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "Isolate-MDEMachine",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Isolate-MDEMachine Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Isolate-MDEMachine",
              "type": "string"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "MDATPConnectionName": "[[concat('wdatp-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MDATPConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Isolate-MDEMachine",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Actions_-_Isolate_machine": {
                              "inputs": {
                                "body": {
                                  "Comment": "Isolated from playbook for Microsoft Sentinel Incident:  @{triggerBody()?['object']?['properties']?['incidentNumber']} - @{triggerBody()?['object']?['properties']?['title']}",
                                  "IsolationType": "Full"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/machines/@{encodeURIComponent(items('For_each')?['additionalData']?['MdatpDeviceId'])}/isolate"
                              },
                              "type": "ApiConnection"
                            },
                            "Add_comment_to_incident_(V3)": {
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p>@{items('For_each')?['HostName']} was isolated in MDE and the status was @{body('Actions_-_Isolate_machine')?['status']}</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              },
                              "runAfter": {
                                "Actions_-_Isolate_machine": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p>@{items('For_each')?['HostName']} does not have MDEDeviceID in the Entities list. &nbsp;It was not isolated.&nbsp;</p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                },
                                "type": "ApiConnection"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@items('For_each')?['additionalData']?['MdatpDeviceId']",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "wdatp": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]",
                        "connectionName": "[[variables('MDATPConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Isolate endpoint - MDE - Incident Triggered",
            "description": "This playbook will isolate (full) the machine in Microsoft Defender for Endpoint.",
            "prerequisites": [
              "- You will need to grant Machine.Isolate permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Machine.Isolate' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Isolate MDE Machine",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "Isolate-MDEMachine",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEAppExecution Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEAppExecution",
              "type": "string"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "MDATPConnectionName": "[[concat('wdatp-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MDATPConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Restrict-MDEAppExecution_alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Alert_-_Get_incident": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      },
                      "type": "ApiConnection"
                    },
                    "Entities_-_Get_Hosts": {
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      },
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Actions_-_Restrict_app_execution": {
                              "inputs": {
                                "body": {
                                  "Comment": "Isolated from playbook for Microsoft Sentinel Incident: @{body('Alert_-_Get_incident')?['properties']?['incidentNumber']} - @{body('Alert_-_Get_incident')?['properties']?['title']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/machines/@{encodeURIComponent(items('For_each')?['MdatpDeviceId'])}/restrictCodeExecution"
                              },
                              "type": "ApiConnection"
                            },
                            "Add_comment_to_incident_(V3)": {
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                  "message": "<p>@{items('For_each')?['HostName']} was triggered for restrict app execution, the status is @{body('Actions_-_Restrict_app_execution')?['status']}</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              },
                              "runAfter": {
                                "Actions_-_Restrict_app_execution": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                    "message": "<p>@{items('For_each')?['HostName']} was triggered for restrict app execution, but the host does not have a MDEDeviceID.</p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                },
                                "type": "ApiConnection"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@items('For_each')?['MdatpDeviceId']",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "wdatp": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]",
                        "connectionName": "[[variables('MDATPConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE App Execution - Alert Triggered",
            "description": "This playbook will restrict app execution on the machine in Microsoft Defender for Endpoint.",
            "prerequisites": [
              "- You will need to grant Machine.RestrictExecution permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Machine.RestrictExecution' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Restrict MDE App Execution",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId3')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEAppExecution",
        "contentProductId": "[variables('_playbookcontentProductId3')]",
        "id": "[variables('_playbookcontentProductId3')]",
        "version": "[variables('playbookVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEAppExecution Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion4')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEAppExecution",
              "type": "string"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "MDATPConnectionName": "[[concat('wdatp-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MDATPConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Restrict-MDEAppExecution",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Actions_-_Restrict_app_execution": {
                              "inputs": {
                                "body": {
                                  "Comment": "Isolated from playbook for Microsoft Sentinel Incident: @{triggerBody()?['object']?['properties']?['incidentNumber']} - @{triggerBody()?['object']?['properties']?['title']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/machines/@{encodeURIComponent(items('For_each')?['MdatpDeviceId'])}/restrictCodeExecution"
                              },
                              "type": "ApiConnection"
                            },
                            "Add_comment_to_incident_(V3)": {
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p>@{items('For_each')?['HostName']} was triggered for restrict app execution, the status is @{body('Actions_-_Restrict_app_execution')?['status']}</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              },
                              "runAfter": {
                                "Actions_-_Restrict_app_execution": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p>@{items('For_each')?['HostName']} was triggered for restrict app execution, but the host does not have a MDEDeviceID.</p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                },
                                "type": "ApiConnection"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@items('For_each')?['MdatpDeviceId']",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "wdatp": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]",
                        "connectionName": "[[variables('MDATPConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId4'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId4')]",
                "contentId": "[variables('_playbookContentId4')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE App Execution - Incident Triggered",
            "description": "This playbook will restrict app execution on the machine in Microsoft Defender for Endpoint.",
            "prerequisites": [
              "- You will need to grant Machine.RestrictExecution permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Machine.RestrictExecution' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Restrict MDE App Execution",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId4')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEAppExecution",
        "contentProductId": "[variables('_playbookcontentProductId4')]",
        "id": "[variables('_playbookcontentProductId4')]",
        "version": "[variables('playbookVersion4')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEDomain Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion5')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEDomain",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Restrict-MDEDomain_alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Alert_-_Get_incident": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Add_comment_to_incident_(V3)": {
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                  "message": "<p>@{items('For_each')?['DomainName']} was added to MDE Indicators with action: AlertandBlock via playbook.</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              },
                              "runAfter": {
                                "HTTP": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            },
                            "HTTP": {
                              "inputs": {
                                "authentication": {
                                  "audience": "https://api.securitycenter.windows.com/",
                                  "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                  "action": "AlertAndBlock",
                                  "application": "Microsoft Sentinel",
                                  "description": "@{body('Alert_-_Get_incident')?['properties']?['incidentNumber']}-@{body('Alert_-_Get_incident')?['properties']?['title']}",
                                  "expirationTime": "@{addDays(triggerBody()?['TimeGenerated'], 90)}",
                                  "indicatorType": "DomainName",
                                  "indicatorValue": "@{items('For_each')?['DomainName']}",
                                  "severity": "@{body('Alert_-_Get_incident')?['properties']?['severity']}",
                                  "title": "@{guid()}"
                                },
                                "method": "POST",
                                "uri": "https://api.securitycenter.windows.com/api/indicators"
                              },
                              "type": "Http"
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@items('For_each')['Type']",
                                  "dns"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "foreach": "@body('Parse_JSON')",
                      "runAfter": {
                        "Parse_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Parse_JSON": {
                      "inputs": {
                        "content": "@triggerBody()?['Entities']",
                        "schema": {
                          "items": {
                            "properties": {
                              "$id": {
                                "type": "string"
                              },
                              "AadUserId": {
                                "type": "string"
                              },
                              "Account": {
                                "properties": {
                                  "$ref": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "Address": {
                                "type": "string"
                              },
                              "Algorithm": {
                                "type": "string"
                              },
                              "CommandLine": {
                                "type": "string"
                              },
                              "CreatedTimeUtc": {
                                "type": "string"
                              },
                              "CreationTimeUtc": {
                                "type": "string"
                              },
                              "Directory": {
                                "type": "string"
                              },
                              "DnsDomain": {
                                "type": "string"
                              },
                              "DomainName": {
                                "type": "string"
                              },
                              "ElevationToken": {
                                "type": "string"
                              },
                              "FileHashes": {
                                "items": {
                                  "properties": {
                                    "$ref": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "$ref"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "Host": {
                                "properties": {
                                  "$ref": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "HostName": {
                                "type": "string"
                              },
                              "ImageFile": {
                                "properties": {
                                  "$ref": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "IsDomainJoined": {
                                "type": "boolean"
                              },
                              "IsDownloaded": {
                                "type": "boolean"
                              },
                              "IsPe": {
                                "type": "boolean"
                              },
                              "IsValid": {
                                "type": "boolean"
                              },
                              "LastAccessTimeUtc": {
                                "type": "string"
                              },
                              "LastWriteTimeUtc": {
                                "type": "string"
                              },
                              "MachineId": {
                                "type": "string"
                              },
                              "MachineIdType": {
                                "type": "integer"
                              },
                              "NTDomain": {
                                "type": "string"
                              },
                              "Name": {
                                "type": "string"
                              },
                              "ParentProcess": {
                                "properties": {
                                  "$ref": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "ProcessId": {
                                "type": "string"
                              },
                              "Sid": {
                                "type": "string"
                              },
                              "SizeInBytes": {
                                "type": "integer"
                              },
                              "Type": {
                                "type": "string"
                              },
                              "UPNSuffix": {
                                "type": "string"
                              },
                              "Url": {
                                "type": "string"
                              },
                              "Value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "$id",
                              "Type"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId5'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId5')]",
                "contentId": "[variables('_playbookContentId5')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE Domain - Alert Triggered",
            "description": "This play book will take DNS entities and generate alert and block threat indicators for each domain in Microsoft Defender for Endpoint for 90 days.",
            "prerequisites": [
              "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to assign Microsoft Sentinel Responder role to the managed identity \n\n - You will need to grant Ti.ReadWrite permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "dnsresolution"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Restrict MDE Domain",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId5')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEDomain",
        "contentProductId": "[variables('_playbookcontentProductId5')]",
        "id": "[variables('_playbookcontentProductId5')]",
        "version": "[variables('playbookVersion5')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEDomain Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion6')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEDomain",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_DNS": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/dnsresolution"
                      }
                    },
                    "For_each": {
                      "foreach": "@body('Entities_-_Get_DNS')?['Dnsresolutions']",
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "HTTP": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>@{items('For_each')?['DomainName']} was added to MDE Indicators with action: AlertandBlock via playbook.</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        },
                        "HTTP": {
                          "type": "Http",
                          "inputs": {
                            "authentication": {
                              "audience": "https://api.securitycenter.windows.com/",
                              "type": "ManagedServiceIdentity"
                            },
                            "body": {
                              "action": "AlertAndBlock",
                              "application": "Microsoft Sentinel",
                              "description": "@{triggerBody()?['object']?['properties']?['incidentNumber']}-@{triggerBody()?['object']?['properties']?['title']}",
                              "expirationTime": "@{addDays(utcNow(), 90)}",
                              "indicatorType": "DomainName",
                              "indicatorValue": "@{items('For_each')?['DomainName']}",
                              "severity": "@{triggerBody()?['object']?['properties']?['severity']}",
                              "title": "@{guid()}"
                            },
                            "method": "POST",
                            "uri": "https://api.securitycenter.windows.com/api/indicators"
                          }
                        }
                      },
                      "runAfter": {
                        "Entities_-_Get_DNS": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Restrict-MDEDomain",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId6'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId6')]",
                "contentId": "[variables('_playbookContentId6')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE Domain - Incident Triggered",
            "description": "This play book will take DNS entities and generate alert and block threat indicators for each domain in Microsoft Defender for Endpoint for 90 days.",
            "prerequisites": [
              "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to assign Microsoft Sentinel Responder role to the managed identity \n\n - You will need to grant Ti.ReadWrite permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "dnsresolution"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Restrict MDE Domain",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId6')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEDomain",
        "contentProductId": "[variables('_playbookcontentProductId6')]",
        "id": "[variables('_playbookcontentProductId6')]",
        "version": "[variables('playbookVersion6')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEFileHash Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion7')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEFileHash",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Restrict-MDEFileHash_alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Alert_-_Get_incident": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      },
                      "type": "ApiConnection"
                    },
                    "Entities_-_Get_FileHashes": {
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/filehash"
                      },
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                              "message": "<p>@{items('For_each')?['Value']} was added to MDE Indicators with action: AlertandBlock via playbook.</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          },
                          "runAfter": {
                            "Switch": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "Switch": {
                          "cases": {
                            "Case": {
                              "actions": {
                                "HTTP": {
                                  "inputs": {
                                    "authentication": {
                                      "audience": "https://api.securitycenter.windows.com/",
                                      "type": "ManagedServiceIdentity"
                                    },
                                    "body": {
                                      "action": "AlertAndBlock",
                                      "application": "Microsoft Sentinel",
                                      "description": "@{body('Alert_-_Get_incident')?['properties']?['incidentNumber']}-@{body('Alert_-_Get_incident')?['properties']?['title']}",
                                      "expirationTime": "@{addDays(triggerBody()?['TimeGenerated'], 90)}",
                                      "indicatorType": "FileSha1",
                                      "indicatorValue": "@{items('For_each')?['Value']}",
                                      "severity": "@{body('Alert_-_Get_incident')?['properties']?['severity']}",
                                      "title": "@{guid()}"
                                    },
                                    "method": "POST",
                                    "uri": "https://api.securitycenter.windows.com/api/indicators"
                                  },
                                  "type": "Http"
                                }
                              },
                              "case": "SHA1"
                            },
                            "Case_2": {
                              "actions": {
                                "HTTP_2": {
                                  "inputs": {
                                    "authentication": {
                                      "audience": "https://api.securitycenter.windows.com/",
                                      "type": "ManagedServiceIdentity"
                                    },
                                    "body": {
                                      "action": "AlertAndBlock",
                                      "application": "Microsoft Sentinel",
                                      "description": "@{body('Alert_-_Get_incident')?['properties']?['incidentNumber']}-@{body('Alert_-_Get_incident')?['properties']?['title']}",
                                      "expirationTime": "@{addDays(triggerBody()?['TimeGenerated'], 90)}",
                                      "indicatorType": "FileSha256",
                                      "indicatorValue": "@{items('For_each')?['Value']}",
                                      "severity": "@{body('Alert_-_Get_incident')?['properties']?['severity']}",
                                      "title": "@{guid()}"
                                    },
                                    "method": "POST",
                                    "uri": "https://api.securitycenter.windows.com/api/indicators"
                                  },
                                  "type": "Http"
                                }
                              },
                              "case": "SHA256"
                            }
                          },
                          "expression": "@items('For_each')?['Algorithm']",
                          "type": "Switch"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
                      "runAfter": {
                        "Entities_-_Get_FileHashes": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId7'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId7')]",
                "contentId": "[variables('_playbookContentId7')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE FileHash - Alert Triggered",
            "description": "This playbook will take FileHash entities and generate alert and block threat indicators for each file hash in MDE for 90 days.",
            "prerequisites": [
              "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to grant Ti.ReadWrite permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "FileHash"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Restrict MDE FileHash",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId7')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEFileHash",
        "contentProductId": "[variables('_playbookcontentProductId7')]",
        "id": "[variables('_playbookcontentProductId7')]",
        "version": "[variables('playbookVersion7')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEFileHash Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion8')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEFileHash",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Restrict-MDEFileHash",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Entities_-_Get_FileHashes": {
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/filehash"
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>@{items('For_each')?['Value']} was added to MDE Indicators with action: AlertandBlock via playbook.</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          },
                          "runAfter": {
                            "Switch": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "Switch": {
                          "cases": {
                            "Case": {
                              "actions": {
                                "HTTP": {
                                  "inputs": {
                                    "authentication": {
                                      "audience": "https://api.securitycenter.windows.com/",
                                      "type": "ManagedServiceIdentity"
                                    },
                                    "body": {
                                      "action": "AlertAndBlock",
                                      "application": "Microsoft Sentinel",
                                      "description": "@{triggerBody()?['object']?['properties']?['incidentNumber']}-@{triggerBody()?['object']?['properties']?['title']}",
                                      "expirationTime": "@{addDays(triggerBody()?['object']?['properties']?['createdTimeUtc'], 90)}",
                                      "indicatorType": "FileSha1",
                                      "indicatorValue": "@{items('For_each')?['Value']}",
                                      "severity": "@{triggerBody()?['object']?['properties']?['severity']}",
                                      "title": "@{guid()}"
                                    },
                                    "method": "POST",
                                    "uri": "https://api.securitycenter.windows.com/api/indicators"
                                  },
                                  "type": "Http"
                                }
                              },
                              "case": "SHA1"
                            },
                            "Case_2": {
                              "actions": {
                                "HTTP_2": {
                                  "inputs": {
                                    "authentication": {
                                      "audience": "https://api.securitycenter.windows.com/",
                                      "type": "ManagedServiceIdentity"
                                    },
                                    "body": {
                                      "action": "AlertAndBlock",
                                      "application": "Microsoft Sentinel",
                                      "description": "@{triggerBody()?['object']?['properties']?['incidentNumber']}-@{triggerBody()?['object']?['properties']?['title']}",
                                      "expirationTime": "@{addDays(triggerBody()?['object']?['properties']?['createdTimeUtc'], 90)}",
                                      "indicatorType": "FileSha256",
                                      "indicatorValue": "@{items('For_each')?['Value']}",
                                      "severity": "@{triggerBody()?['object']?['properties']?['severity']}",
                                      "title": "@{guid()}"
                                    },
                                    "method": "POST",
                                    "uri": "https://api.securitycenter.windows.com/api/indicators"
                                  },
                                  "type": "Http"
                                }
                              },
                              "case": "SHA256"
                            }
                          },
                          "expression": "@items('For_each')?['Algorithm']",
                          "type": "Switch"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_FileHashes')?['Filehashes']",
                      "runAfter": {
                        "Entities_-_Get_FileHashes": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId8'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId8')]",
                "contentId": "[variables('_playbookContentId8')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE FileHash - Incident Triggered",
            "description": "This playbook will take FileHash entities and generate alert and block threat indicators for each file hash in MDE for 90 days.",
            "prerequisites": [
              "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to grant Ti.ReadWrite permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "FileHash"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Restrict MDE FileHash",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId8')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEFileHash",
        "contentProductId": "[variables('_playbookcontentProductId8')]",
        "id": "[variables('_playbookcontentProductId8')]",
        "version": "[variables('playbookVersion8')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEIpAddress Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion9')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEIpAddress",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Restrict-MDEIPAddress_alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Alert_-_Get_incident": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      },
                      "type": "ApiConnection"
                    },
                    "Entities_-_Get_IPs": {
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      },
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                              "message": "<p>@{items('For_each')?['Address']} was added to MDE Indicators with action: AlertandBlock via playbook.</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          },
                          "runAfter": {
                            "HTTP": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "HTTP": {
                          "inputs": {
                            "authentication": {
                              "audience": "https://api.securitycenter.windows.com",
                              "type": "ManagedServiceIdentity"
                            },
                            "body": {
                              "action": "AlertAndBlock",
                              "application": "Microsoft Sentinel",
                              "description": "@{body('Alert_-_Get_incident')?['properties']?['incidentNumber']}-@{body('Alert_-_Get_incident')?['properties']?['title']}",
                              "expirationTime": "@{addDays(string(triggerbody()['TimeGenerated']), 90)}",
                              "indicatorType": "IpAddress",
                              "indicatorValue": "@{items('For_each')?['Address']}",
                              "severity": "@{body('Alert_-_Get_incident')?['properties']?['severity']}",
                              "title": "@{guid()}"
                            },
                            "headers": {
                              "Content-type": "application/json"
                            },
                            "method": "POST",
                            "uri": "https://api.securitycenter.windows.com/api/indicators"
                          },
                          "type": "Http"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId9'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId9')]",
                "contentId": "[variables('_playbookContentId9')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE Ip Address - Alert Triggered",
            "description": "This playbook will take IP entities and generate alert and block threat indicators for each IP in MDE for 90 days.",
            "prerequisites": [
              "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to grant Ti.ReadWrite permissions and assign Microsoft Sentinel Reader to the resource group for the managed identity. Run the following code replacing the managed identity object id, subscriptionId and resource group. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $SubscriptionId = '<Enter your subsciption id here>' \n\n $ResourceGroup = '<Enter your resource group here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $RoleName = 'Microsoft Sentinel Responder' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n New-AzRoleAssignment -ObjectId $MIGuid -RoleDefinitionName $RoleName -Scope /subscriptions/$SubscriptionId/resourcegroups/$ResourceGroup \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Ip"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Restrict MDE Ip Address",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId9')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEIpAddress",
        "contentProductId": "[variables('_playbookcontentProductId9')]",
        "id": "[variables('_playbookcontentProductId9')]",
        "version": "[variables('playbookVersion9')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEIpAddress Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion10')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEIpAddress",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Restrict-MDEIPAddress",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Entities_-_Get_IPs": {
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/ip"
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>@{items('For_each')?['Address']} was added to MDE Indicators with action: AlertandBlock via playbook.</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          },
                          "runAfter": {
                            "HTTP": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "HTTP": {
                          "inputs": {
                            "authentication": {
                              "audience": "https://api.securitycenter.windows.com",
                              "type": "ManagedServiceIdentity"
                            },
                            "body": {
                              "action": "AlertAndBlock",
                              "application": "Microsoft Sentinel",
                              "description": "@{triggerBody()?['object']?['properties']?['incidentNumber']}-@{triggerBody()?['object']?['properties']?['title']}",
                              "expirationTime": "@{addDays(string(triggerbody()['object']?['properties']?['createdTimeUtc']), 90)}",
                              "indicatorType": "IpAddress",
                              "indicatorValue": "@{items('For_each')?['Address']}",
                              "severity": "@{triggerBody()?['object']?['properties']?['severity']}",
                              "title": "@{guid()}"
                            },
                            "headers": {
                              "Content-type": "application/json"
                            },
                            "method": "POST",
                            "uri": "https://api.securitycenter.windows.com/api/indicators"
                          },
                          "type": "Http"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId10'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId10')]",
                "contentId": "[variables('_playbookContentId10')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE Ip Address - Incident Triggered",
            "description": "This playbook will take IP entities and generate alert and block threat indicators for each IP in MDE for 90 days.",
            "prerequisites": [
              "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to grant Ti.ReadWrite permissions and assign Microsoft Sentinel Reader to the resource group for the managed identity. Run the following code replacing the managed identity object id, subscriptionId and resource group. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $SubscriptionId = '<Enter your subsciption id here>' \n\n $ResourceGroup = '<Enter your resource group here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $RoleName = 'Microsoft Sentinel Responder' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n New-AzRoleAssignment -ObjectId $MIGuid -RoleDefinitionName $RoleName -Scope /subscriptions/$SubscriptionId/resourcegroups/$ResourceGroup \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Ip"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Restrict MDE Ip Address",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId10')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEIpAddress",
        "contentProductId": "[variables('_playbookcontentProductId10')]",
        "id": "[variables('_playbookcontentProductId10')]",
        "version": "[variables('playbookVersion10')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName11')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEUrl Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion11')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEUrl",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Restrict-MDEUrl_alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Alert_-_Get_incident": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      },
                      "type": "ApiConnection"
                    },
                    "Entities_-_Get_URLs": {
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/url"
                      },
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                              "message": "<p>@{items('For_each')?['Url']} was added to MDE Indicators with action: AlertandBlock via playbook.</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          },
                          "runAfter": {
                            "HTTP": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "HTTP": {
                          "inputs": {
                            "authentication": {
                              "audience": "https://api.securitycenter.windows.com",
                              "type": "ManagedServiceIdentity"
                            },
                            "body": {
                              "action": "AlertAndBlock",
                              "application": "Microsoft Sentinel",
                              "description": "@{body('Alert_-_Get_incident')?['properties']?['incidentNumber']}-@{body('Alert_-_Get_incident')?['properties']?['title']}",
                              "expirationTime": "@{formatDateTime(addDays(string(triggerbody()['TimeGenerated']), 90), 'yyyy-MM-ddTHH:mm:ssZ')}",
                              "indicatorType": "Url",
                              "indicatorValue": "@{items('For_each')?['Url']}",
                              "severity": "@{body('Alert_-_Get_incident')?['properties']?['severity']}",
                              "title": "@{guid()}"
                            },
                            "headers": {
                              "Content-type": "application/json"
                            },
                            "method": "POST",
                            "uri": "https://api.securitycenter.windows.com/api/indicators"
                          },
                          "type": "Http"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
                      "runAfter": {
                        "Entities_-_Get_URLs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId11'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId11')]",
                "contentId": "[variables('_playbookContentId11')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion11')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE Url - Alert Triggered",
            "description": "This playbook will take Url entities and generate alert and block threat indicators for each IP in MDE for 90 days.",
            "prerequisites": [
              "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to grant Ti.ReadWrite permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Url"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Restrict MDE Url",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId11')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEUrl",
        "contentProductId": "[variables('_playbookcontentProductId11')]",
        "id": "[variables('_playbookcontentProductId11')]",
        "version": "[variables('playbookVersion11')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName12')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEUrl Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion12')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEUrl",
              "type": "String"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Restrict-MDEUrl",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Entities_-_Get_URLs": {
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/url"
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>@{items('For_each')?['Url']} was added to MDE Indicators with action: AlertandBlock via playbook.</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          },
                          "runAfter": {
                            "HTTP": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "HTTP": {
                          "inputs": {
                            "authentication": {
                              "audience": "https://api.securitycenter.windows.com",
                              "type": "ManagedServiceIdentity"
                            },
                            "body": {
                              "action": "AlertAndBlock",
                              "application": "Microsoft Sentinel",
                              "description": "@{triggerBody()?['object']?['properties']?['incidentNumber']}-@{triggerBody()?['object']?['properties']?['title']}",
                              "expirationTime": "@{formatDateTime(addDays(triggerBody()?['object']?['properties']?['createdTimeUtc'], 90), 'yyyy-MM-ddTHH:mm:ssZ')}",
                              "indicatorType": "Url",
                              "indicatorValue": "@{items('For_each')?['Url']}",
                              "severity": "@{triggerBody()?['object']?['properties']?['severity']}",
                              "title": "@{guid()}"
                            },
                            "headers": {
                              "Content-type": "application/json"
                            },
                            "method": "POST",
                            "uri": "https://api.securitycenter.windows.com/api/indicators"
                          },
                          "type": "Http"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
                      "runAfter": {
                        "Entities_-_Get_URLs": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId12'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId12')]",
                "contentId": "[variables('_playbookContentId12')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion12')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE Url - Incident Triggered",
            "description": "This playbook will take Url entities and generate alert and block threat indicators for each IP in MDE for 90 days.",
            "prerequisites": [
              "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to grant Ti.ReadWrite permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Url"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Restrict MDE Url",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId12')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEUrl",
        "contentProductId": "[variables('_playbookcontentProductId12')]",
        "id": "[variables('_playbookcontentProductId12')]",
        "version": "[variables('playbookVersion12')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName13')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Run-MDEAntivirus Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion13')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Run-MDEAntivirus",
              "type": "string"
            },
            "SentinelResourceGroupName": {
              "defaultValue": "",
              "type": "string"
            },
            "SentinelSubscriptionId": {
              "defaultValue": "",
              "type": "string"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "MDATPConnectionName": "[[concat('wdatp-', parameters('PlaybookName'))]",
            "roleAssignmentName": "[[guid(subscription().subscriptionId, resourceGroup().id)]",
            "ASSubscriptionId": "[[if(empty(parameters('SentinelSubscriptionId')), subscription().subscriptionId, parameters('SentinelSubscriptionId'))]",
            "roleDefinitionId": "[[concat('/subscriptions/', variables('ASSubscriptionId'),'/providers/Microsoft.Authorization/roleDefinitions/ab8e14d6-4a74-4a29-9ba8-549422addade')]",
            "_roleDefinitionId": "[[variables('roleDefinitionId')]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MDATPConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Run-MDEAntivirus_alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Alert_-_Get_incident": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      },
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "Entities_-_Get_Hosts": {
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      },
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Machines_-_Get_single_machine": {
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/api/machines/@{encodeURIComponent(items('For_each')?['HostName'])}"
                              },
                              "type": "ApiConnection"
                            },
                            "Set_variable": {
                              "inputs": {
                                "name": "MDEDeviceId",
                                "value": "@body('Machines_-_Get_single_machine')?['id']"
                              },
                              "runAfter": {
                                "Machines_-_Get_single_machine": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable"
                            }
                          },
                          "else": {
                            "actions": {
                              "Machines_-_Get_single_machine_2": {
                                "inputs": {
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['wdatp']['connectionId']"
                                    }
                                  },
                                  "method": "get",
                                  "path": "/api/machines/@{encodeURIComponent(items('For_each')?['MdatpDeviceId'])}"
                                },
                                "type": "ApiConnection"
                              },
                              "Set_variable_2": {
                                "inputs": {
                                  "name": "MDEDeviceId",
                                  "value": "@body('Machines_-_Get_single_machine_2')?['id']"
                                },
                                "runAfter": {
                                  "Machines_-_Get_single_machine_2": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "SetVariable"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@items('For_each')?['MdatpDeviceId']",
                                  "@null"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Condition_2": {
                          "actions": {
                            "Actions_-_Run_antivirus_scan": {
                              "inputs": {
                                "body": {
                                  "Comment": "AV Scan run from playbook for Microsoft Sentinel Incident: @{body('Alert_-_Get_incident')?['properties']?['incidentNumber']} -  @{body('Alert_-_Get_incident')?['properties']?['title']}",
                                  "ScanType": "Full"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/machines/@{encodeURIComponent(variables('MDEDeviceId'))}/runAntiVirusScan"
                              },
                              "type": "ApiConnection"
                            },
                            "Add_comment_to_incident_(V3)": {
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                  "message": "<p>@{items('For_each')?['HostName']} (MDE Device ID: @{body('Machines_-_Get_single_machine')?['id']}) had a full AV scan triggered and the status was @{body('Actions_-_Run_antivirus_scan')?['status']}</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              },
                              "runAfter": {
                                "Actions_-_Run_antivirus_scan": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                    "message": "<p>@{items('For_each')?['HostName']} could not be found in MDE, so no AV scan was run.</p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                },
                                "type": "ApiConnection"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@variables('MDEDeviceId')",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "runAfter": {
                            "Condition": [
                              "Succeeded"
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Initialize_variable": {
                      "inputs": {
                        "variables": [
                          {
                            "name": "MDEDeviceId",
                            "type": "string"
                          }
                        ]
                      },
                      "type": "InitializeVariable"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "wdatp": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]",
                        "connectionName": "[[variables('MDATPConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[[variables('roleAssignmentName')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
              ],
              "properties": {
                "roleDefinitionId": "[[variables('_roleDefinitionId')]",
                "principalId": "[[reference(resourceId('Microsoft.Logic/workflows', parameters('PlaybookName')), '2019-05-01', 'full').identity.principalId]"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId13'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId13')]",
                "contentId": "[variables('_playbookContentId13')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion13')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Run MDE Antivirus - Alert Triggered",
            "description": "This playbook will run a antivirus (full) scan on the machine in Microsoft Defender for Endpoint.",
            "prerequisites": [
              "- You will need to grant Machine.Scan, Machine.Read.All, and Machine.ReadWrite.All permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Machine.Scan' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id $PermissionName = 'Machine.Read.All' \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id $PermissionName = 'Machine.ReadWrite.All' \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-02-14T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Run MDE Antivirus",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId13')]",
        "contentKind": "Playbook",
        "displayName": "Run-MDEAntivirus",
        "contentProductId": "[variables('_playbookcontentProductId13')]",
        "id": "[variables('_playbookcontentProductId13')]",
        "version": "[variables('playbookVersion13')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName14')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Run-MDEAntivirus Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion14')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Run-MDEAntivirus",
              "type": "string"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "MDATPConnectionName": "[[concat('wdatp-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MDATPConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Run-MDEAntivirus",
                "hidden-SentinelTemplateVersion": "1.1",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      },
                      "runAfter": {
                        "Initialize_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Machines_-_Get_single_machine": {
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/api/machines/@{encodeURIComponent(items('For_each')?['HostName'])}"
                              },
                              "type": "ApiConnection"
                            },
                            "Set_variable": {
                              "inputs": {
                                "name": "MDEDeviceId",
                                "value": "@body('Machines_-_Get_single_machine')?['id']"
                              },
                              "runAfter": {
                                "Machines_-_Get_single_machine": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable"
                            }
                          },
                          "else": {
                            "actions": {
                              "Machines_-_Get_single_machine_2": {
                                "inputs": {
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['wdatp']['connectionId']"
                                    }
                                  },
                                  "method": "get",
                                  "path": "/api/machines/@{encodeURIComponent(items('For_each')?['MdatpDeviceId'])}"
                                },
                                "type": "ApiConnection"
                              },
                              "Set_variable_2": {
                                "inputs": {
                                  "name": "MDEDeviceId",
                                  "value": "@body('Machines_-_Get_single_machine_2')?['id']"
                                },
                                "runAfter": {
                                  "Machines_-_Get_single_machine_2": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "SetVariable"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@items('For_each')?['MdatpDeviceId']",
                                  "@null"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Condition_2": {
                          "actions": {
                            "Actions_-_Run_antivirus_scan": {
                              "inputs": {
                                "body": {
                                  "Comment": "AV Scan run from playbook for Microsoft Sentinel Incident:  @{triggerBody()?['object']?['properties']?['incidentNumber']}- @{triggerBody()?['object']?['properties']?['title']}",
                                  "ScanType": "Full"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/machines/@{encodeURIComponent(variables('MDEDeviceId'))}/runAntiVirusScan"
                              },
                              "type": "ApiConnection"
                            },
                            "Add_comment_to_incident_(V3)": {
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p>@{items('For_each')?['HostName']} (MDE Device ID: @{body('Machines_-_Get_single_machine')?['id']}) had a full AV scan triggered and the status was @{body('Actions_-_Run_antivirus_scan')?['status']}</p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              },
                              "runAfter": {
                                "Actions_-_Run_antivirus_scan": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p>@{items('For_each')?['HostName']} could not be found in MDE, so no AV scan was run.</p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                },
                                "type": "ApiConnection"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@variables('MDEDeviceId')",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "runAfter": {
                            "Condition": [
                              "Succeeded"
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Initialize_variable": {
                      "inputs": {
                        "variables": [
                          {
                            "name": "MDEDeviceId",
                            "type": "string"
                          }
                        ]
                      },
                      "type": "InitializeVariable"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "wdatp": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]",
                        "connectionName": "[[variables('MDATPConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId14'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId14')]",
                "contentId": "[variables('_playbookContentId14')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion14')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Run MDE Antivirus - Incident Triggered",
            "description": "This playbook will run a antivirus (full) scan on the machine in Microsoft Defender for Endpoint.",
            "prerequisites": [
              "- You will need to grant Machine.Scan, Machine.Read.All, and Machine.ReadWrite.All permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Machine.Scan' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id $PermissionName = 'Machine.Read.All' \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id $PermissionName = 'Machine.ReadWrite.All' \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Run MDE Antivirus",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId14')]",
        "contentKind": "Playbook",
        "displayName": "Run-MDEAntivirus",
        "contentProductId": "[variables('_playbookcontentProductId14')]",
        "id": "[variables('_playbookcontentProductId14')]",
        "version": "[variables('playbookVersion14')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName15')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Unisolate-MDEMachine Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion15')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Unisolate-MDEMachine",
              "type": "string"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "MDATPConnectionName": "[[concat('wdatp-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MDATPConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Unisolate-MDEMachine_alert",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Alert_-_Get_incident": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      },
                      "type": "ApiConnection"
                    },
                    "Entities_-_Get_Hosts": {
                      "inputs": {
                        "body": "@triggerBody()?['Entities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      },
                      "runAfter": {
                        "Alert_-_Get_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Actions_-_Unisolate_machine": {
                              "inputs": {
                                "body": {
                                  "Comment": "Relased from isolation from playbook for Microsoft Sentinel Incident:  @{body('Alert_-_Get_incident')?['properties']?['incidentNumber']} - @{body('Alert_-_Get_incident')?['properties']?['title']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/machines/@{encodeURIComponent(items('For_each')?['MdatpDeviceId'])}/unisolate"
                              },
                              "type": "ApiConnection"
                            },
                            "Add_comment_to_incident_(V3)": {
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                  "message": "<p>@{items('For_each')?['HostName']} was released from isolation in MDE and the status was </p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              },
                              "runAfter": {
                                "Actions_-_Unisolate_machine": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                    "message": "<p>@{items('For_each')?['HostName']} does not have MDEDeviceID in the Entities list. &nbsp;It was not released from isolation.&nbsp;</p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                },
                                "type": "ApiConnection"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@items('For_each')?['MdatpDeviceId']",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_alert": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/subscribe"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "wdatp": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]",
                        "connectionName": "[[variables('MDATPConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId15'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId15')]",
                "contentId": "[variables('_playbookContentId15')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion15')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Unisolate MDE Machine - Alert Triggered",
            "description": "This playbook will release a machine from isolation in Microsoft Defender for Endpoint.",
            "prerequisites": [
              "- You will need to grant Machine.Isolate permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Machine.Isolate' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Unisolate MDE Machine",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId15')]",
        "contentKind": "Playbook",
        "displayName": "Unisolate-MDEMachine",
        "contentProductId": "[variables('_playbookcontentProductId15')]",
        "id": "[variables('_playbookcontentProductId15')]",
        "version": "[variables('playbookVersion15')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName16')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Unisolate-MDEMachine Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion16')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Unisolate-MDEMachine",
              "type": "string"
            }
          },
          "variables": {
            "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
            "MDATPConnectionName": "[[concat('wdatp-', parameters('PlaybookName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-1')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MDATPConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[parameters('PlaybookName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "hidden-SentinelTemplateName": "Unisolate-MDEMachine",
                "hidden-SentinelTemplateVersion": "1.1",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "inputs": {
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/entities/host"
                      },
                      "type": "ApiConnection"
                    },
                    "For_each": {
                      "actions": {
                        "Condition": {
                          "actions": {
                            "Actions_-_Unisolate_machine": {
                              "inputs": {
                                "body": {
                                  "Comment": "Relased from isolation from playbook for Microsoft Sentinel Incident:  @{triggerBody()?['object']?['properties']?['incidentNumber']} - @{triggerBody()?['object']?['properties']?['title']}"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['wdatp']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/api/machines/@{encodeURIComponent(items('For_each')?['additionalData']?['MdatpDeviceId'])}/unisolate"
                              },
                              "type": "ApiConnection"
                            },
                            "Add_comment_to_incident_(V3)": {
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "message": "<p>@{items('For_each')?['HostName']} was released from isolation in MDE and the status was </p>"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                              },
                              "runAfter": {
                                "Actions_-_Unisolate_machine": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection"
                            }
                          },
                          "else": {
                            "actions": {
                              "Add_comment_to_incident_(V3)_2": {
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p>@{items('For_each')?['HostName']} does not have MDEDeviceID in the Entities list. &nbsp;It was not released from isolation.&nbsp;</p>"
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/Incidents/Comment"
                                },
                                "type": "ApiConnection"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@items('For_each')?['additionalData']?['MdatpDeviceId']",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  },
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "path": "/incident-creation"
                      },
                      "type": "ApiConnectionWebhook"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                        "connectionName": "[[variables('AzureSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "wdatp": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MDATPConnectionName'))]",
                        "connectionName": "[[variables('MDATPConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/wdatp')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId16'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId16')]",
                "contentId": "[variables('_playbookContentId16')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion16')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Unisolate MDE Machine - Incident Triggered",
            "description": "This playbook will release a machine from isolation in Microsoft Defender for Endpoint.",
            "prerequisites": [
              "- You will need to grant Machine.Isolate permissions to the managed identity. Run the following code replacing the managed identity object id. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Machine.Isolate' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n ```"
            ],
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-07-14T00:00:00Z",
            "entities": [
              "Host"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": [
              {
                "version": "1.0.0",
                "title": "Unisolate MDE Machine",
                "notes": [
                  "Initial version"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId16')]",
        "contentKind": "Playbook",
        "displayName": "Unisolate-MDEMachine",
        "contentProductId": "[variables('_playbookcontentProductId16')]",
        "id": "[variables('_playbookcontentProductId16')]",
        "version": "[variables('playbookVersion16')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName17')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEDomain-entityTrigger Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion17')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEDomain-entityTrigger",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_entity_(DNS)": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                          }
                        },
                        "path": "/entity/@{encodeURIComponent('DNS')}"
                      }
                    }
                  },
                  "actions": {
                    "Condition": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['IncidentArmID']",
                              "message": "<p><br>\nAn AlertAndBlock request has been sent to the security centre API for the domain: @{triggerBody()?['Entity']?['properties']?['DomainName']}. Note that the expiration time on this request is 90 days.<br>\nThe response from the API was: @{outputs('HTTP_-_AlertAndBlock')['statusCode']}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "runAfter": {
                        "HTTP_-_AlertAndBlock": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@triggerBody()?['IncidentArmID']",
                                "@null"
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "HTTP_-_AlertAndBlock": {
                      "type": "Http",
                      "inputs": {
                        "authentication": {
                          "audience": "https://api.securitycenter.windows.com/",
                          "type": "ManagedServiceIdentity"
                        },
                        "body": {
                          "action": "AlertAndBlock",
                          "application": "Microsoft Sentinel",
                          "description": "This block command has been made through the Restrict-MDEDomain-entityTrigger. Ran on URL Entity from Microsoft Sentinel Incident with ARM ID: @{triggerBody()?['IncidentArmID']}. Entity properties: @{triggerBody()?['Entity']?['properties']}",
                          "expirationTime": "@{addDays(utcNow(), 90)}",
                          "indicatorType": "DomainName",
                          "indicatorValue": "@{triggerBody()?['Entity']?['properties']?['DomainName']}",
                          "title": "@{guid()}"
                        },
                        "method": "POST",
                        "uri": "https://api.securitycenter.windows.com/api/indicators"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel_1": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Restrict-MDEDomain-entityTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId17'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId17')]",
                "contentId": "[variables('_playbookContentId17')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion17')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE Domain - Entity Triggered",
            "description": "This playbook will take the triggering entity and generate an alert and block threat indicator for the domain in MDE for 90 days.",
            "prerequisites": "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to grant Ti.ReadWrite permissions and assign Microsoft Sentinel Reader to the resource group for the managed identity. Run the following code replacing the managed identity object id, subscriptionId and resource group. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $SubscriptionId = '<Enter your subsciption id here>' \n\n $ResourceGroup = '<Enter your resource group here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $RoleName = 'Microsoft Sentinel Responder' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n New-AzRoleAssignment -ObjectId $MIGuid -RoleDefinitionName $RoleName -Scope /subscriptions/$SubscriptionId/resourcegroups/$ResourceGroup \n\n ```",
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2023-02-26T00:00:00Z",
            "entities": [
              "Url"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId17')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEDomain-entityTrigger",
        "contentProductId": "[variables('_playbookcontentProductId17')]",
        "id": "[variables('_playbookcontentProductId17')]",
        "version": "[variables('playbookVersion17')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName18')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEFileHash-entityTrigger Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion18')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEFileHash-entityTrigger",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_entity_(FileHash)": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel_2']['connectionId']"
                          }
                        },
                        "path": "/entity/@{encodeURIComponent('FileHash')}"
                      }
                    }
                  },
                  "actions": {
                    "Condition": {
                      "actions": {
                        "Add_comment_to_incident_(V3)_2": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['IncidentArmID']",
                              "message": "<p>An AlertAndBlock request has been sent to the security centre API for file with hash: @{triggerBody()?['Entity']?['properties']?['Value']}. Note that the expiration time on this is 90 days.<br>\nThe response from the API was: @{outputs('HTTP_Alert_and_Block_Sha1')['statusCode']}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel_2']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "runAfter": {
                        "Switch": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@triggerBody()?['IncidentArmID']",
                                "@null"
                              ]
                            }
                          },
                          {
                            "or": [
                              {
                                "equals": [
                                  "@triggerBody()?['Entity']?['properties']?['Algorithm']",
                                  "SHA1"
                                ]
                              },
                              {
                                "equals": [
                                  "@triggerBody()?['Entity']?['properties']?['Algorithm']",
                                  "SHA256"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Switch": {
                      "cases": {
                        "If_Encoding_==_SHA1": {
                          "case": "SHA1",
                          "actions": {
                            "HTTP_Alert_and_Block_Sha1": {
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "audience": "https://api.securitycenter.windows.com/",
                                  "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                  "action": "AlertAndBlock",
                                  "application": "Microsoft Sentinel",
                                  "description": "Placeholder description from Automated Restrict-MDEFileHash-entityTrigger App. Incident ARM ID: @{triggerBody()?['IncidentArmID']} File Entity Properties: @{triggerBody()?['Entity']?['properties']}",
                                  "expirationTime": "@{addDays(utcNow(), 90)}",
                                  "indicatorType": "FileSha1",
                                  "indicatorValue": "@{triggerBody()?['Entity']?['properties']?['Value']}",
                                  "title": "@{guid()}"
                                },
                                "headers": {
                                  "Content-type": "application/json"
                                },
                                "method": "POST",
                                "uri": "https://api.securitycenter.windows.com/api/indicators"
                              }
                            }
                          }
                        },
                        "If_Encoding_==_SHA256": {
                          "case": "SHA256",
                          "actions": {
                            "HTTP_Alert_and_Block_Sha256": {
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "audience": "https://api.securitycenter.windows.com/",
                                  "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                  "action": "AlertAndBlock",
                                  "application": "Microsoft Sentinel",
                                  "description": "Placeholder description from Automated Restrict-MDEFileHash-entityTrigger App. Incident ARM ID: @{triggerBody()?['IncidentArmID']} File Entity Properties: @{triggerBody()?['Entity']?['properties']}",
                                  "expirationTime": "@{addDays(utcNow(), 90)}",
                                  "indicatorType": "FileSha256",
                                  "indicatorValue": "@{triggerBody()?['Entity']?['properties']?['Value']}",
                                  "title": "@{guid()}"
                                },
                                "headers": {
                                  "Content-type": "application/json"
                                },
                                "method": "POST",
                                "uri": "https://api.securitycenter.windows.com/api/indicators"
                              }
                            }
                          }
                        }
                      },
                      "expression": "@triggerBody()?['Entity']?['properties']?['Algorithm']",
                      "type": "Switch"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel_2": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Restrict-MDEFileHash-entityTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId18'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId18')]",
                "contentId": "[variables('_playbookContentId18')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion18')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE FileHash - Entity Triggered",
            "description": "This playbook will take the triggering FileHash entity and generate an alert and block threat indicator for the file hash in MDE for 90 days.",
            "prerequisites": "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to grant Ti.ReadWrite permissions and assign Microsoft Sentinel Reader to the resource group for the managed identity. Run the following code replacing the managed identity object id, subscriptionId and resource group. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $SubscriptionId = '<Enter your subsciption id here>' \n\n $ResourceGroup = '<Enter your resource group here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $RoleName = 'Microsoft Sentinel Responder' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n New-AzRoleAssignment -ObjectId $MIGuid -RoleDefinitionName $RoleName -Scope /subscriptions/$SubscriptionId/resourcegroups/$ResourceGroup \n\n ```",
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2023-02-26T00:00:00Z",
            "entities": [
              "FileHash"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId18')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEFileHash-entityTrigger",
        "contentProductId": "[variables('_playbookcontentProductId18')]",
        "id": "[variables('_playbookcontentProductId18')]",
        "version": "[variables('playbookVersion18')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName19')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEIP-entityTrigger Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion19')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEIP-entityTrigger",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_entity_(IP)": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                          }
                        },
                        "path": "/entity/@{encodeURIComponent('IP')}"
                      }
                    }
                  },
                  "actions": {
                    "Condition": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['IncidentArmID']",
                              "message": "<p>An AlertAndBlock request has been sent to the security centre API for the IP address@{triggerBody()?['Entity']?['properties']?['Address']} . Note that the expiration time for this request is 90 days.<br>\nHTTP Response of AlertAndBlock request: @{outputs('HTTP_-_Alert_And_Block_IP')['statusCode']}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "runAfter": {
                        "HTTP_-_Alert_And_Block_IP": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@triggerBody()?['IncidentArmID']",
                                "@null"
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "HTTP_-_Alert_And_Block_IP": {
                      "type": "Http",
                      "inputs": {
                        "authentication": {
                          "audience": "https://api.securitycenter.windows.com",
                          "type": "ManagedServiceIdentity"
                        },
                        "body": {
                          "action": "AlertAndBlock",
                          "application": "Microsoft Sentinel",
                          "description": "IP blocked by Restrict-MDEIP-entityTrigger Logic app from an entity in Microsoft Sentinel Incident (ARM ID): @{triggerBody()?['IncidentArmID']}. Properties: @{triggerBody()?['Entity']?['properties']}",
                          "expirationTime": "@{addDays(utcNow(), 90)}",
                          "indicatorType": "IpAddress",
                          "indicatorValue": "@{triggerBody()?['Entity']?['properties']?['Address']}",
                          "title": "@{guid()}"
                        },
                        "headers": {
                          "Content-type": "application/json"
                        },
                        "method": "POST",
                        "uri": "https://api.securitycenter.windows.com/api/indicators"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel_1": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Restrict-MDEIP-entityTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId19'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId19')]",
                "contentId": "[variables('_playbookContentId19')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion19')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE Ip Address - Entity Triggered",
            "description": "This playbook will and generate alert and block threat indicators for the IP entity in MDE for 90 days.",
            "prerequisites": "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to grant Ti.ReadWrite permissions and assign Microsoft Sentinel Reader to the resource group for the managed identity. Run the following code replacing the managed identity object id, subscriptionId and resource group. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $SubscriptionId = '<Enter your subsciption id here>' \n\n $ResourceGroup = '<Enter your resource group here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $RoleName = 'Microsoft Sentinel Responder' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n New-AzRoleAssignment -ObjectId $MIGuid -RoleDefinitionName $RoleName -Scope /subscriptions/$SubscriptionId/resourcegroups/$ResourceGroup \n\n ```",
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2023-02-26T00:00:00Z",
            "entities": [
              "Ip"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId19')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEIP-entityTrigger",
        "contentProductId": "[variables('_playbookcontentProductId19')]",
        "id": "[variables('_playbookcontentProductId19')]",
        "version": "[variables('playbookVersion19')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName20')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restrict-MDEUrl-entityTrigger Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion20')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Restrict-MDEUrl-entityTrigger",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_entity_(URL)": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                          }
                        },
                        "path": "/entity/@{encodeURIComponent('UrlEntity')}"
                      }
                    }
                  },
                  "actions": {
                    "Condition": {
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['IncidentArmID']",
                              "message": "<p>An AlertAndBlock request has been sent to the security centre API to block the URL: @{triggerBody()?['Entity']?['properties']?['Url']}. Note that the expiration time on this is 90 days.<br>\nThe response from the API was: @{outputs('HTTP_-_Alert_And_Block_URL')['statusCode']}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "runAfter": {
                        "HTTP_-_Alert_And_Block_URL": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@triggerBody()?['IncidentArmID']",
                                "@null"
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "HTTP_-_Alert_And_Block_URL": {
                      "type": "Http",
                      "inputs": {
                        "authentication": {
                          "audience": "https://api.securitycenter.windows.com/",
                          "type": "ManagedServiceIdentity"
                        },
                        "body": {
                          "action": "AlertAndBlock",
                          "application": "Microsoft Sentinel",
                          "description": "This block command has been made through the Restrict-MDEUrl-entityTrigger. Ran on URL Entity from Microsoft Sentinel Incident with ARM ID: @{triggerBody()?['IncidentArmID']}. Entity properties: @{triggerBody()?['Entity']?['properties']}",
                          "expirationTime": "@{addDays(utcNow(), 90)}",
                          "indicatorType": "Url",
                          "indicatorValue": "@{triggerBody()?['Entity']?['properties']?['Url']}",
                          "title": "@{guid()}"
                        },
                        "method": "POST",
                        "uri": "https://api.securitycenter.windows.com/api/indicators"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel_1": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Restrict-MDEUrl-entityTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId20'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId20')]",
                "contentId": "[variables('_playbookContentId20')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion20')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Restrict MDE URL - Entity Triggered",
            "description": "This playbook will take the triggering entity and generate an alert and block threat indicator for the URL in MDE for 90 days.",
            "prerequisites": "- **For Gov Only** \n\n You will need to update the HTTP action URL to the correct URL documented [here](https://docs.microsoft.com/microsoft-365/security/defender-endpoint/gov?view=o365-worldwide#api) \n\n - You will need to grant Ti.ReadWrite permissions and assign Microsoft Sentinel Reader to the resource group for the managed identity. Run the following code replacing the managed identity object id, subscriptionId and resource group. You find the managed identity object id on the Identity blade under Settings for the Logic App. \n\n ```powershell \n\n $MIGuid = '<Enter your managed identity guid here>' \n\n $SubscriptionId = '<Enter your subsciption id here>' \n\n $ResourceGroup = '<Enter your resource group here>' \n\n $MI = Get-AzureADServicePrincipal -ObjectId $MIGuid \n\n $MDEAppId = 'fc780465-2017-40d4-a0c5-307022471b92' \n\n $PermissionName = 'Ti.ReadWrite' \n\n $RoleName = 'Microsoft Sentinel Responder' \n\n $MDEServicePrincipal = Get-AzureADServicePrincipal -Filter \"appId eq '$MDEAppId'\" \n\n $AppRole = $MDEServicePrincipal.AppRoles | Where-Object {$_.Value -eq $PermissionName -and $_.AllowedMemberTypes -contains 'Application'} \n\n New-AzureAdServiceAppRoleAssignment -ObjectId $MI.ObjectId -PrincipalId $MI.ObjectId ` -ResourceId $MDEServicePrincipal.ObjectId -Id $AppRole.Id \n\n New-AzRoleAssignment -ObjectId $MIGuid -RoleDefinitionName $RoleName -Scope /subscriptions/$SubscriptionId/resourcegroups/$ResourceGroup \n\n ```",
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2023-02-26T00:00:00Z",
            "entities": [
              "dnsresolution"
            ],
            "tags": [
              "Remediation"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId20')]",
        "contentKind": "Playbook",
        "displayName": "Restrict-MDEUrl-entityTrigger",
        "contentProductId": "[variables('_playbookcontentProductId20')]",
        "id": "[variables('_playbookcontentProductId20')]",
        "version": "[variables('playbookVersion20')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName21')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Isolate-MDE-Machine-entityTrigger Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion21')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Isolate-MDE-Machine-entityTrigger",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "WdatpConnectionName": "[[concat('Wdatp-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Wdatp')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_entity": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/entity/@{encodeURIComponent('Host')}"
                      }
                    }
                  },
                  "actions": {
                    "Actions_-_Isolate_machine": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Comment": "Host is isolated from Microsoft Sentinel using playbook Isolate-MDE-machine-entityTrigger.",
                          "IsolationType": "Full"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['wdatp']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/api/machines/@{encodeURIComponent(triggerBody()?['entity']?['properties']?['additionalData']?['MdatpDeviceId'])}/isolate"
                      }
                    },
                    "Condition": {
                      "actions": {
                        "Add_comment_to_incident_(V3)_-_device_isolated": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['IncidentArmID']",
                              "message": "<p>Host - @{triggerBody()?['Entity']?['properties']?['HostName']} - is succesfully isolated!</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "runAfter": {
                        "Actions_-_Isolate_machine": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@triggerBody()?['IncidentArmID']",
                                "@null"
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "wdatp": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('WdatpConnectionName'))]",
                        "connectionName": "[[variables('WdatpConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Wdatp')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Isolate-MDE-Machine-entityTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('WdatpConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('WdatpConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('WdatpConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId21'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId21')]",
                "contentId": "[variables('_playbookContentId21')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion21')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Isolate MDE Machine using entity trigger",
            "description": "This playbook will isolate Microsoft Defender for Endpoint (MDE) device using entity trigger.",
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-12-22T00:00:00Z",
            "tags": [
              "Host"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId21')]",
        "contentKind": "Playbook",
        "displayName": "Isolate-MDE-Machine-entityTrigger",
        "contentProductId": "[variables('_playbookcontentProductId21')]",
        "id": "[variables('_playbookcontentProductId21')]",
        "version": "[variables('playbookVersion21')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName22')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Unisolate-MDE-Machine-entityTrigger Playbook with template version 3.0.3",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion22')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Unisolate-MDE-Machine-entityTrigger",
              "type": "string"
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "WdatpConnectionName": "[[concat('Wdatp-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Wdatp')]",
            "_connection-3": "[[variables('connection-3')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_entity": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                          }
                        },
                        "path": "/entity/@{encodeURIComponent('Host')}"
                      }
                    }
                  },
                  "actions": {
                    "Actions_-_Unisolate_machine": {
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Comment": "Host is unisolated from Microsoft Sentinel using playbook Unisolate-MDE-machine-entityTrigger."
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['wdatp']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/api/machines/@{encodeURIComponent(triggerBody()?['entity']?['properties']?['additionalData']?['MdatpDeviceId'])}/unisolate"
                      }
                    },
                    "Condition": {
                      "actions": {
                        "Add_comment_to_incident_(V3)_-_device_unisolated": {
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['IncidentArmID']",
                              "message": "<p>Host - @{triggerBody()?['Entity']?['properties']?['HostName']} - is succesfully unisolated!</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "runAfter": {
                        "Actions_-_Unisolate_machine": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@triggerBody()?['IncidentArmID']",
                                "@null"
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "microsoftsentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "wdatp": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('WdatpConnectionName'))]",
                        "connectionName": "[[variables('WdatpConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Wdatp')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "hidden-SentinelTemplateName": "Unisolate-MDE-Machine-entityTrigger",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[[resourceId('Microsoft.Web/connections', variables('WdatpConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('WdatpConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('WdatpConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-3')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId22'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId22')]",
                "contentId": "[variables('_playbookContentId22')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion22')]",
                "source": {
                  "kind": "Solution",
                  "name": "MicrosoftDefenderForEndpoint",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "title": "Unisolate MDE Machine using entity trigger",
            "description": "This playbook will unisolate Microsoft Defender for Endpoint (MDE) device using entity trigger.",
            "postDeployment": [
              "Assign Playbook Microsoft Sentinel Responder Role",
              "1. Select the Playbook (Logic App) resource",
              "2. Click on Identity Blade",
              "3. Choose System assigned tab",
              "4. Click on Azure role assignments",
              "5. Click on Add role assignments",
              "6. Select Scope - Resource group",
              "7. Select Subscription - where Playbook has been created",
              "8. Select Resource group - where Playbook has been created",
              "9. Select Role - Microsoft Sentinel Responder",
              "10. Click Save (It takes 3-5 minutes to show the added role.)"
            ],
            "lastUpdateTime": "2022-12-22T00:00:00Z",
            "entities": [
              "Host"
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId22')]",
        "contentKind": "Playbook",
        "displayName": "Unisolate-MDE-Machine-entityTrigger",
        "contentProductId": "[variables('_playbookcontentProductId22')]",
        "id": "[variables('_playbookcontentProductId22')]",
        "version": "[variables('playbookVersion22')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.3",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "MicrosoftDefenderForEndpoint",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/MicrosoftDefenderForEndpoint/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://docs.microsoft.com/microsoft-365/security/defender-endpoint/microsoft-defender-endpoint?view=o365-worldwide\">Microsoft Defender for Endpoint</a> solution for Microsoft Sentinel enables you to ingest security alerts from the Defender for Endpoint platform, integrating them into your Microsoft Sentinel Incidents queue.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><a href=\"https://docs.microsoft.com/azure/sentinel/create-codeless-connector?tabs=deploy-via-arm-template%2Cconnect-via-the-azure-portal\">Codeless Connector Platform/Native Microsoft Sentinel Polling</a></li>\n</ol>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 2, <strong>Analytic Rules:</strong> 1, <strong>Hunting Queries:</strong> 2, <strong>Playbooks:</strong> 22</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "MicrosoftDefenderForEndpoint",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
              "version": "[variables('huntingQueryObject1').huntingQueryVersion1]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
              "version": "[variables('huntingQueryObject2').huntingQueryVersion2]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Isolate-MDEMachine-alert-trigger')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Isolate-MDEMachine-incident-trigger')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEAppExecution-alert-trigger')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEAppExecution-incident-trigger')]",
              "version": "[variables('playbookVersion4')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEDomain-alert-trigger')]",
              "version": "[variables('playbookVersion5')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEDomain-incident-trigger')]",
              "version": "[variables('playbookVersion6')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEFileHash-alert-trigger')]",
              "version": "[variables('playbookVersion7')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEFileHash-incident-trigger')]",
              "version": "[variables('playbookVersion8')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEIPAddress-alert-trigger')]",
              "version": "[variables('playbookVersion9')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEIPAddress-incident-trigger')]",
              "version": "[variables('playbookVersion10')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEUrl-alert-trigger')]",
              "version": "[variables('playbookVersion11')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEUrl-incident-trigger')]",
              "version": "[variables('playbookVersion12')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Run-MDEAntivirus-alert-trigger')]",
              "version": "[variables('playbookVersion13')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Run-MDEAntivirus-incident-trigger')]",
              "version": "[variables('playbookVersion14')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Unisolate-MDEMachine-alert-trigger')]",
              "version": "[variables('playbookVersion15')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Unisolate-MDEMachine-incident-trigger')]",
              "version": "[variables('playbookVersion16')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEDomain-entity-trigger')]",
              "version": "[variables('playbookVersion17')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEFileHash-entity-trigger')]",
              "version": "[variables('playbookVersion18')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEIPAddress-entity-trigger')]",
              "version": "[variables('playbookVersion19')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Restrict-MDEUrl-entity-trigger')]",
              "version": "[variables('playbookVersion20')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Isolate-MDE-Machine-entity-trigger')]",
              "version": "[variables('playbookVersion21')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Unisolate-MDE-Machine-entity-trigger')]",
              "version": "[variables('playbookVersion22')]"
            }
          ]
        },
        "firstPublishDate": "2022-01-31",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
