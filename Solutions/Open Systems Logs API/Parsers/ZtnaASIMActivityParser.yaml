id: 5d0f2c1a-9e8b-4f7c-8a3d-1b9e0a2c7f6d # Unique ID, generate a new one
Function:
  Title: ASIM Parser for OpenSystems ZTNA Activity logs
  Version: '0.1.0'
  LastUpdated: May 15th 2025 # Current date
Category: OpenSystemsParser # Or a more specific category if available
FunctionName: ZtnaASIMActivityParser
FunctionAlias: ZtnaASIMActivityParser
FunctionQuery: |
  let parser = () {
    OpenSystemsZtnaLogs_CL
    | where message_type == "activity"
    | project-rename
        DvcHostname = ztna_upstream, // Device reporting the event
        EventOriginalUid = uuid,
        EventProduct = "ZTNA",
        EventVendor = "Open Systems",
        EventSchemaVersion = "0.1.0",
        EventStartTime = TimeGenerated,
        // Actor / Source User
        SrcUsername = subject_name,
        // Target Application / System
        TargetAppName = object_name,
        // Network
        SrcIpAddr = remote_address,
        // Event Details
        EventMessage = message,
        // Additional OpenSystems specific fields
        OpenSystemsTenant = ztna_tenant,
        OpenSystemsRuleName = authority_name, // "Condition profile 4" -> RuleName
        OpenSystemsObjectNamePortal = object_name_portal,
        OpenSystemsStatus = status,
        OpenSystemsMessageType = message_type
    | extend
        EventCount = 1,
        EventSchema = "Authentication",
        EventType = "Logon", // Standard ASIM EventType for logon
        EventEndTime = EventStartTime,
        EventResult = case(
            OpenSystemsStatus == "access_allowed", "Success",
            OpenSystemsStatus == "access_denied", "Failure", // Assuming this value
            // Add other status mappings to "Success", "Failure", "Partial"
            "Partial" // Default if status is not explicitly mapped
        ),
        EventResultDetails = OpenSystemsStatus,
        SrcUsernameType = iff(SrcUsername has "@" and SrcUsername matches regex @'''^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$''', "UPN", "Simple"),
        TargetAppNameType = "custom", // Or more specific if known
        EventOriginalType = message_type,
        TargetUsername = SrcUsername,
        TargetUsernameType = SrcUsernameType
    | project
        TimeGenerated, EventOriginalUid, EventProduct, EventVendor, EventSchemaVersion, EventType, EventStartTime, EventResult, EventCount, EventSchema, EventEndTime,
        SrcUsername, SrcUsernameType, SrcIpAddr,
        TargetAppName, TargetAppNameType, TargetUsername, TargetUsernameType,
        DvcHostname,
        EventMessage, EventResultDetails, EventOriginalType,
        OpenSystemsTenant, OpenSystemsRuleName, OpenSystemsObjectNamePortal, OpenSystemsStatus, OpenSystemsMessageType, OpenSystemsUpstream = ztna_upstream
  };
  parser
