id: 634600b4-d931-4a58-a21f-1de3dd35df23
Function:
  Title: Parser for ProofpointPOD
  Version: '1.0.1'
  LastUpdated: '2024-05-02'
Category: Microsoft Sentinel Parser
FunctionName: ProofpointPOD
FunctionAlias: ProofpointPOD
FunctionQuery: |
    let ProofpointPOD_maillog_view = view () { 
        union isfuzzy=true ProofpointPOD_maillog_CL, maillog_CL | where isnotempty( pps_cid_s) and event_type_s == "maillog"
        | extend 
                    SmMsgid=column_ifexists('sm_msgid_g', ''),
                    PpsCid=column_ifexists('pps_cid_s', ''),
                    PpsAgent=column_ifexists('pps_agent_s', ''),
                    Id=column_ifexists('id_s', ''),
                    SmNrcpts=column_ifexists('sm_nrcpts_s', ''),
                    SmAuth=column_ifexists('sm_auth_s', ''),
                    SmClass=column_ifexists('sm_class_s', ''),
                    SmQid=column_ifexists('sm_qid_s', ''),
                    MetadataOriginDataAgent=column_ifexists('metadata_origin_data_agent_s', ''),
                    MetadataOriginDataCid=column_ifexists('metadata_origin_data_cid_s', ''),
                    SmMailer=column_ifexists('sm_mailer_s', ''),
                    SmDsn=column_ifexists('sm_dsn_s', ''),
                    SmPri=column_ifexists('sm_pri_s', ''),
                    SmXdelay=column_ifexists('sm_xdelay_s', ''),
                    SmCtladdr=column_ifexists('sm_ctladdr_s', ''),
                    EventUid=column_ifexists('sm_msgid_s', ''),
                    NetworkBytes=toreal( column_ifexists('sm_sizeBytes_s', '')),
                    TlsEstablished=column_ifexists('sm_tls_verify_s', ''),
                    SrcNatIpAddr=column_ifexists('sm_relay_s', ''),
                    ProcessName=column_ifexists('sm_daemon_s', ''),
                    NetworkProtocol=column_ifexists('sm_proto_s', ''),
                    SrcUserUpn=column_ifexists('sm_from_s', ''),
                    EventOriginalTime=column_ifexists('ts_t', ''),
                    EventOriginalMessage=column_ifexists('data_s', ''),
                    EventType=column_ifexists('event_type_s', ''),
                    NetworkConnectionStateDetailed=column_ifexists('sm_stat_s', ''),
                    DstUserUpn=column_ifexists('sm_to_s', ''),
                    NetworkDuration=column_ifexists('sm_delay_s', ''),
                    EventVendor="Proofpoint",
                    EventProduct="Proofpoint On Demand Email Security"
        | project
                    TimeGenerated, 
                    EventVendor,
                    EventProduct,
                    SmMsgid,
                    PpsCid,
                    PpsAgent,
                    Id,
                    SmNrcpts,
                    SmAuth,
                    SmClass,
                    SmQid,
                    MetadataOriginDataAgent,
                    MetadataOriginDataCid,
                    SmMailer,
                    SmDsn,
                    SmPri,
                    SmXdelay,
                    SmCtladdr,
                    EventUid,
                    NetworkBytes,
                    TlsEstablished,
                    SrcNatIpAddr,
                    ProcessName,
                    NetworkProtocol,
                    SrcUserUpn,
                    EventOriginalTime,
                    EventOriginalMessage,
                    EventType,
                    NetworkConnectionStateDetailed,
                    DstUserUpn,
                    NetworkDuration
    };
    let ProofpointPOD_message_view = view () { 
        union isfuzzy=true ProofpointPOD_message_CL, message_CL | where event_type_s == "message"
        | extend 
                    FilterModulesUrldefenseCountsNoRewriteIsLargeMsgPartSize=column_ifexists('filter_modules_urldefense_counts_noRewriteIsLargeMsgPartSize_d', ''),
    		        PpsVersion=column_ifexists('pps_version_s', ''),
    		        PpsCid=column_ifexists('pps_cid_s', ''),
    		        MsgParts=column_ifexists('msgParts_s', ''),
    		        MetadataOriginDataAgent=column_ifexists('metadata_origin_data_agent_s', ''),
    		        MetadataOriginDataVersion=column_ifexists('metadata_origin_data_version_s', ''),
    		        MetadataOriginDataCid=column_ifexists('metadata_origin_data_cid_s', ''),
    		        ConnectionHelo=column_ifexists('connection_helo_s', ''),
    		        MsgLang=column_ifexists('msg_lang_s', ''),
    		        MsgNormalizedHeaderSubject=column_ifexists('msg_normalizedHeader_subject_s', ''),
    		        MsgNormalizedHeaderMessageId=column_ifexists('msg_normalizedHeader_message_id_s', ''),
    		        MsgNormalizedHeaderTo=column_ifexists('msg_normalizedHeader_to_s', ''),
    		        MsgNormalizedHeadertoHashed=column_ifexists('msg_normalizedHeader_toHashed_s', ''),
    		        MsgNormalizedHeaderFrom=column_ifexists('msg_normalizedHeader_from_s', ''),
    		        MsgNormalizedHeaderFromHashed=column_ifexists('msg_normalizedHeader_fromHashed_s', ''),
    		        MsgHeaderFrom=column_ifexists('msg_header_from_s', ''),
    		        MsgHeaderFromHashed=column_ifexists('msg_header_fromHashed_s', ''),
    		        MsgHeaderMessageId=column_ifexists('msg_header_message_id_s', ''),
    		        MsgHeaderSubject=column_ifexists('msg_header_subject_s', ''),
    		        MsgHeaderTo=column_ifexists('msg_header_to_s', ''),
    		        MsgHeaderToHashed=column_ifexists('msg_header_toHashed_s', ''),
    		        MsgParsedAddressesFromHashed=column_ifexists('msg_parsedAddresses_fromHashed_s', ''),
    		        MsgParsedAddressesFrom=column_ifexists('msg_parsedAddresses_from_s', ''),
    		        MsgParsedAddressesToHashed=column_ifexists('msg_parsedAddresses_toHashed_s', ''),
    		        MsgParsedAddressesTo=column_ifexists('msg_parsedAddresses_to_s', ''),
    		        FilterActions=column_ifexists('filter_actions_s', ''),
    		        FilterRoutes=column_ifexists('filter_routes_s', ''),
    		        FilterQid=column_ifexists('filter_qid_s', ''),
    		        FilterIsMsgEncrypted=column_ifexists('filter_isMsgEncrypted_b', ''),
    		        FilterIsMsgReinjected=column_ifexists('filter_isMsgReinjected_b', ''),
    		        FilterQuarantineRule=column_ifexists('filter_quarantine_rule_s', ''),
    		        FilterQuarantineFolder=column_ifexists('filter_quarantine_folder_s', ''),
    		        FilterModulesDmarcSrvid=column_ifexists('filter_modules_dmarc_srvid_s', ''),
    		        FilterModulesDmarcRecords=column_ifexists('filter_modules_dmarc_records_s', ''),
    		        FilterModulesDmarcFilterdResult=column_ifexists('filter_modules_dmarc_filterdResult_s', ''),
    		        FilterModulesDmarcAuthResults=column_ifexists('filter_modules_dmarc_authResults_s', ''),
    		        FilterModulesSpfDomain=column_ifexists('filter_modules_spf_domain_s', ''),
    		        FilterModulesSpfResult=column_ifexists('filter_modules_spf_result_s', ''),
    		        FilterModulesSpamTriggeredClassifier=column_ifexists('filter_modules_spam_triggeredClassifier_s', ''),
    		        FilterModulesSpamSafeBlockedListMatches=column_ifexists('filter_modules_spam_safeBlockedListMatches_s', ''),
    		        FilterModulesSpamVersionEngine=column_ifexists('filter_modules_spam_version_engine_s', ''),
    		        FilterModulesSpamVersionDefinitions=column_ifexists('filter_modules_spam_version_definitions_s', ''),
    		        FilterModulesSpamScoresOverall=column_ifexists('filter_modules_spam_scores_overall_d', ''),
    		        FilterModulesSpamScoresEngine=column_ifexists('filter_modules_spam_scores_engine_d', ''),
    		        FilterModulesSpamScoresClassifiers=column_ifexists('filter_modules_spam_scores_classifiers_s', ''),
    		        FilterModulesSpamLangs=column_ifexists('filter_modules_spam_langs_s', ''),
    		        FilterModulesUrldefenseVersionEngine=column_ifexists('filter_modules_urldefense_version_engine_s', ''),
    		        FilterModulesUrldefenseCountsUnique=column_ifexists('filter_modules_urldefense_counts_unique_d', ''),
    		        FilterModulesUrldefenseCountsRewritten=column_ifexists('filter_modules_urldefense_counts_rewritten_d', ''),
    		        FilterModulesUrldefenseCountsTotal=column_ifexists('filter_modules_urldefense_counts_total_d', ''),
    		        FilterModulesDkimv=column_ifexists('filter_modules_dkimv_s', ''),
    		        FilterModulesPdrV2Response=column_ifexists('filter_modules_pdr_v2_response_s', ''),
    		        FilterModulesZerohourScore=column_ifexists('filter_modules_zerohour_score_s', ''),
    		        FilterDisposition=column_ifexists('filter_disposition_s', ''),
    		        FilterSuborgsRcpts=column_ifexists('filter_suborgs_rcpts_s', ''),
    	        	FilterSuborgsSender=column_ifexists('filter_suborgs_sender_s', ''),
    	        	FilterMsgSizeBytes=column_ifexists('filter_msgSizeBytes_d', ''),
    		        FilterVerifiedRcptsHashed=column_ifexists('filter_verified_rcptsHashed_s', ''),
    		        FilterVerifiedRcpts=column_ifexists('filter_verified_rcpts_s', ''),
    	        	Guid=column_ifexists('guid_s', ''),
    	        	EnvelopeRcptsHashed=column_ifexists('envelope_rcptsHashed_s', ''),
    	        	EnvelopeFromHashed=column_ifexists('envelope_fromHashed_s', ''),
    	        	MsgNormalizedHeaderReturnPathHashed=column_ifexists('msg_normalizedHeader_return_pathHashed_s', ''),
    	        	MsgNormalizedHeaderXMailer=column_ifexists('msg_normalizedHeader_x_mailer_s', ''),
    		        MsgNormalizedHeaderReturnPath=column_ifexists('msg_normalizedHeader_return_path_s', ''),
    		        MsgHeaderXMailer=column_ifexists('msg_header_x_mailer_s', ''),
    		        MsgHeaderReturnPathHashed=column_ifexists('msg_header_return_pathHashed_s', ''),
    		        MsgHeaderReturnPath=column_ifexists('msg_header_return_path_s', ''),
    		        FilterModulesSpamCharsets=column_ifexists('filter_modules_spam_charsets_s', ''),
    		        FilterModulesDmarcAlignment=column_ifexists('filter_modules_dmarc_alignment_s', ''),
    		        MsgNormalizedHeaderXOriginatingIp=column_ifexists('msg_normalizedHeader_x_originating_ip_s', ''),
    		        MsgHeaderXOriginatingIp=column_ifexists('msg_header_x_originating_ip_s', ''),
    		        MsgNormalizedHeaderReplyTo=column_ifexists('msg_normalizedHeader_reply_to_s', ''),
    		        MsgNormalizedHeaderReplyToHashed=column_ifexists('msg_normalizedHeader_reply_toHashed_s', ''),
    		        MsgHeaderReplyToHashed=column_ifexists('msg_header_reply_toHashed_s', ''),
    		        MsgHeaderReplyTo=column_ifexists('msg_header_reply_to_s', ''),
    		        FilterModulesUrldefenseCountsNoRewriteIsEmail=column_ifexists('filter_modules_urldefense_counts_noRewriteIsEmail_d', ''),
    		        FilterModulesPdrV2Rscore=column_ifexists('filter_modules_pdr_v2_rscore_d', ''),
    		        FilterOrigGuid=column_ifexists('filter_origGuid_s', ''),
    		        MsgNormalizedHeaderCc=column_ifexists('msg_normalizedHeader_cc_s', ''),
    		        MsgNormalizedHeaderCcHashed=column_ifexists('msg_normalizedHeader_ccHashed_s', ''),
    		        MsgParsedAddressesCcHashed=column_ifexists('msg_parsedAddresses_ccHashed_s', ''),
    		        MsgParsedAddressesCc=column_ifexists('msg_parsedAddresses_cc_s', ''),
    		        MsgHeaderCcHashed=column_ifexists('msg_header_ccHashed_s', ''),
    		        MsgHeaderCc=column_ifexists('msg_header_cc_s', ''),
    		        FilterModulesAvVirusNames=column_ifexists('filter_modules_av_virusNames_s', ''),
    		        FilterThrottleIp=column_ifexists('filter_throttleIp_s', ''),
    		        FilterModulesUrldefenseCountsNoRewriteIsUnsupportedScheme=column_ifexists('filter_modules_urldefense_counts_noRewriteIsUnsupportedScheme_d', ''),
    		        FilterModulesUrldefenseCountsNoRewriteIsSchemeless=column_ifexists('filter_modules_urldefense_counts_noRewriteIsSchemeless_d', ''),
    		        FilterModulesUrldefenseCountsNoRewriteIsMaxLengthExceeded=column_ifexists('filter_modules_urldefense_counts_noRewriteIsMaxLengthExceeded_d', ''),
    		        FilterModulesUrldefenseCountsNoRewriteIsExcludedDomain=column_ifexists('filter_modules_urldefense_counts_noRewriteIsExcludedDomain_d', ''),
                    PpsAgent=column_ifexists('pps_agent_s', ''),
                    EventOriginalTime=column_ifexists('ts_t', ''),
                    TlsCipher=column_ifexists('connection_tls_inbound_cipher_s', ''),
                    TlsCipherBits=column_ifexists('connection_tls_inbound_cipherBits_d', ''),
                    TlsVersion=column_ifexists('connection_tls_inbound_version_s', ''),
                    SrcIpAddr=column_ifexists('connection_ip_s', ''),
                    NetworkSessionId=column_ifexists('connection_sid_s', ''),
                    SrcDvcHostname=column_ifexists('connection_host_s', ''),
                    SrcGeoCountry=column_ifexists('connection_country_s', ''),
                    NetworkProtocol=column_ifexists('connection_protocol_s', ''),
                    NetworkConnectionState=column_ifexists('connection_resolveStatus_s', ''),
                    NetworkBytes=toreal( column_ifexists('sm_sizeBytes_s', '')),
                    NetworkDuration=column_ifexists('filter_durationSecs_d', ''),
                    EventStartTime=column_ifexists('filter_startTime_t', ''),
                    NetworkDirection=column_ifexists('filter_routeDirection_s', ''),
                    DstUserUpn=column_ifexists('envelope_rcpts_s', ''),
                    SrcUserUpn=column_ifexists('envelope_from_s', ''),
                    EventType=column_ifexists('event_type_s', ''),
                    EventVendor="Proofpoint",
                    EventProduct="Proofpoint On Demand Email Security"
        | project
                    TimeGenerated, 
                    EventVendor,
                    EventProduct,
                    FilterModulesUrldefenseCountsNoRewriteIsLargeMsgPartSize,
                    PpsVersion,
                    PpsCid,
                    MsgParts,
                    MetadataOriginDataAgent,
                    MetadataOriginDataVersion,
                    MetadataOriginDataCid,
                    ConnectionHelo,
                    MsgLang,
                    MsgNormalizedHeaderSubject,
                    MsgNormalizedHeaderMessageId,
                    MsgNormalizedHeaderTo,
                    MsgNormalizedHeadertoHashed,
                    MsgNormalizedHeaderFrom,
                    MsgNormalizedHeaderFromHashed,
                    MsgHeaderFrom,
                    MsgHeaderFromHashed,
                    MsgHeaderMessageId,
                    MsgHeaderSubject,
                    MsgHeaderTo,
                    MsgHeaderToHashed,
                    MsgParsedAddressesFromHashed,
                    MsgParsedAddressesFrom,
                    MsgParsedAddressesToHashed,
                    MsgParsedAddressesTo,
                    FilterActions,
                    FilterRoutes,
                    FilterQid,
                    FilterIsMsgEncrypted,
                    FilterIsMsgReinjected,
                    FilterQuarantineRule,
                    FilterQuarantineFolder,
                    FilterModulesDmarcSrvid,
                    FilterModulesDmarcRecords,
                    FilterModulesDmarcFilterdResult,
                    FilterModulesDmarcAuthResults,
                    FilterModulesSpfDomain,
                    FilterModulesSpfResult,
                    FilterModulesSpamTriggeredClassifier,
                    FilterModulesSpamSafeBlockedListMatches,
                    FilterModulesSpamVersionEngine,
                    FilterModulesSpamVersionDefinitions,
                    FilterModulesSpamScoresOverall,
                    FilterModulesSpamScoresEngine,
                    FilterModulesSpamScoresClassifiers,
                    FilterModulesSpamLangs,
                    FilterModulesUrldefenseVersionEngine,
                    FilterModulesUrldefenseCountsUnique,
                    FilterModulesUrldefenseCountsRewritten,
                    FilterModulesUrldefenseCountsTotal,
                    FilterModulesDkimv,
                    FilterModulesPdrV2Response,
                    FilterModulesZerohourScore,
                    FilterDisposition,
                    FilterSuborgsRcpts,
                    FilterSuborgsSender,
                    FilterMsgSizeBytes,
                    FilterVerifiedRcptsHashed,
                    FilterVerifiedRcpts,
                    Guid,
                    EnvelopeRcptsHashed,
                    EnvelopeFromHashed,
                    MsgNormalizedHeaderReturnPathHashed,
                    MsgNormalizedHeaderXMailer,
                    MsgNormalizedHeaderReturnPath,
                    MsgHeaderXMailer,
                    MsgHeaderReturnPathHashed,
                    MsgHeaderReturnPath,
                    FilterModulesSpamCharsets,
                    FilterModulesDmarcAlignment,
                    MsgNormalizedHeaderXOriginatingIp,
                    MsgHeaderXOriginatingIp,
                    MsgNormalizedHeaderReplyTo,
                    MsgNormalizedHeaderReplyToHashed,
                    MsgHeaderReplyToHashed,
                    MsgHeaderReplyTo,
                    FilterModulesUrldefenseCountsNoRewriteIsEmail,
                    FilterModulesPdrV2Rscore,
                    FilterOrigGuid,
                    MsgNormalizedHeaderCc,
                    MsgNormalizedHeaderCcHashed,
                    MsgParsedAddressesCcHashed,
                    MsgParsedAddressesCc,
                    MsgHeaderCcHashed,
                    MsgHeaderCc,
                    FilterModulesAvVirusNames,
                    FilterThrottleIp,
                    FilterModulesUrldefenseCountsNoRewriteIsUnsupportedScheme,
                    FilterModulesUrldefenseCountsNoRewriteIsSchemeless,
                    FilterModulesUrldefenseCountsNoRewriteIsMaxLengthExceeded,
                    FilterModulesUrldefenseCountsNoRewriteIsExcludedDomain,
                    PpsAgent,
                    SrcDvcHostname,
                    EventOriginalTime,
                    TlsCipher,
                    TlsCipherBits,
                    TlsVersion,
                    SrcIpAddr,
                    NetworkSessionId,
                    SrcGeoCountry,
                    NetworkProtocol,
                    NetworkConnectionState,
                    NetworkBytes,
                    NetworkDuration,
                    EventStartTime,
                    NetworkDirection,
                    DstUserUpn,
                    SrcUserUpn,
                    EventType
    	| join kind=inner  (
    		ProofpointPOD_message_CL
            | extend Guid = column_ifexists('guid_s', ''), MsgParts=column_ifexists('msgParts_s', '')
    		| extend d = parse_json(MsgParts)
            | mv-expand d
            | extend URL_LIST = parse_json(d.urls)
            | mv-expand URL_LIST
            | extend URLLIST = tostring(URL_LIST.url)
    		| summarize make_set(URLLIST) by Guid
            )
            on Guid
        | project-away Guid1
        | project-rename Urls = set_URLLIST
    };
    union isfuzzy=true ProofpointPOD_message_view, ProofpointPOD_maillog_view