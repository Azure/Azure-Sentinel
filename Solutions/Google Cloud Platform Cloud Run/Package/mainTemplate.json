{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Google Cloud Platform Cloud Run"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "resource group name where Microsoft Sentinel is setup"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "[last(split(subscription().id, '/'))]",
      "metadata": {
        "description": "subscription id where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Google Cloud Platform Cloud Run",
    "_solutionVersion": "3.0.0",
    "solutionId": "azuresentinel.azure-sentinel-solution-gcpcloudrun",
    "_solutionId": "[variables('solutionId')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "dataConnectorCCPVersion": "1.0.0",
    "_dataConnectorContentIdConnectorDefinition1": "GCPCloudRunLogs_ConnectorDefinition",
    "dataConnectorTemplateNameConnectorDefinition1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition1')))]",
    "_dataConnectorContentIdConnections1": "GCPCloudRunLogs_ConnectorDefinitionConnections",
    "dataConnectorTemplateNameConnections1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections1')))]",
    "dataCollectionEndpointId1": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
    "blanks": "[replace('b', 'b', '')]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "displayName": "GCP Cloud Run",
        "contentKind": "DataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "GCPCloudRunLogs_ConnectorDefinition",
                  "title": "GCP Cloud Run",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "The GCP Cloud Run data connector provides the capability to ingest Cloud Run request logs into Microsoft Sentinel using Pub/Sub. Refer the [Cloud Run Overview](https://cloud.google.com/run/docs/logging) for more details.",
                  "graphQueriesTableName": "GCP_CloudRun_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total events received",
                      "legend": "GCP Cloud Run Request Logs",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Get sample of GCP Cloud Run request logs",
                      "query": "{{graphQueriesTableName}}\n | take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors"
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true,
                          "action": false
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "instructions": [
                        {
                          "type": "MarkdownControlEnvBased",
                          "parameters": {
                            "prodScript": "#### 1. Setup the GCP environment \n Ensure to have the following resources from the GCP Console:\n Project ID, Project Name, GCP Subscription name for the project, Workload Identity Pool ID, Workspace Identity Provider ID, and a Service Account to establish the connection.\n For more information, refer the [Connector tutorial](https://github.com/v-anjohari/Cloud-Run-logs/blob/main/README.md) for log setup and authentication setup tutorial.\n\n Find the Log set up script [**here**](https://github.com/v-anjohari/Cloud-Run-logs/tree/main/GCPCloudRunLogsSetup)\n & the Authentication set up script [**here**](https://github.com/Azure/Azure-Sentinel/tree/master/DataConnectors/GCP/Terraform/sentinel_resources_creation/GCPInitialAuthenticationSetup)",
                            "govScript": "#### 1. Setup the GCP environment \n Ensure to have the following resources from the GCP Console:\n Project ID, Project Name, GCP Subscription name for the project, Workload Identity Pool ID, Workspace Identity Provider ID, and a Service Account to establish the connection.\n For more information, refer the [Connector tutorial](https://github.com/v-anjohari/Cloud-Run-logs/blob/main/README.md) for log setup and authentication setup tutorial.\n\n Find the Log set up script [**here**](https://github.com/v-anjohari/Cloud-Run-logs/tree/main/GCPCloudRunLogsSetup)\n & the Authentication set up script [**here**](https://github.com/Azure/Azure-Sentinel/tree/master/DataConnectors/GCP/Terraform/sentinel_resources_creation_gov/GCPInitialAuthenticationSetupGov)"
                          }
                        },
                        {
                          "type": "CopyableLabel",
                          "parameters": {
                            "label": "Tenant ID: A unique identifier that is used as an input in the Terraform configuration within a GCP environment.",
                            "fillWith": [
                              "TenantId"
                            ],
                            "name": "TenantId",
                            "disabled": true
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 2. Enable Cloud Run logs \n In the Google Cloud Console, enable cloud logging if not enabled previously, and save the changes.Deploy or update your Cloud Run services with logging enabled.\n\n Reference Link: [Link to documentation](https://cloud.google.com/run/docs/setup)"
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 3. Connect new collectors \n To enable GCP Cloud Run Request Logs for Microsoft Sentinel, click on Add new collector button, provide the required information in the pop up and click on Connect."
                          }
                        },
                        {
                          "type": "GCPGrid",
                          "parameters": {}
                        },
                        {
                          "type": "GCPContextPane",
                          "parameters": {}
                        }
                      ],
                      "title": "Connect GCP Cloud Run to Microsoft Sentinel\n"
                    }
                  ]
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "version": "[variables('dataConnectorCCPVersion')]",
                      "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                      "kind": "ResourcesDataConnector"
                    }
                  ]
                }
              }
            },
            {
              "name": "GCPRunDCR",
              "apiVersion": "2022-06-01",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "kind": "[variables('blanks')]",
              "properties": {
                "dataCollectionEndpointId": "[variables('dataCollectionEndpointId1')]",
                "streamDeclarations": {
                  "Custom-GCPRun": {
                    "columns": [
                      {
                        "name": "insertId",
                        "type": "string"
                      },
                      {
                        "name": "labels",
                        "type": "dynamic"
                      },
                      {
                        "name": "logName",
                        "type": "string"
                      },
                      {
                        "name": "protoPayload",
                        "type": "dynamic"
                      },
                      {
                        "name": "receiveTimestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "resource",
                        "type": "dynamic"
                      },
                      {
                        "name": "timestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "severity",
                        "type": "string"
                      }
                    ]
                  }
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws1"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Custom-GCPRun"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend InsertId = tostring(insertId) | extend Labels = tostring(labels) | extend LogName = tostring(logName) | extend ReceiveTimestamp = todatetime(receiveTimestamp) | extend TimeGenerated = todatetime(timestamp) | extend Severity = tostring(severity) | extend ProtoPayload = parse_json(protoPayload) | extend Resource = parse_json(resource) | extend PayloadType = tostring(ProtoPayload['@type']) | extend PayloadAuthInfoPrincipalEmail = tostring(ProtoPayload['authenticationInfo']['principalEmail']) | extend PayloadAuthorizationInfo = todynamic(ProtoPayload.authorizationInfo) | extend PayloadMethodName = tostring(ProtoPayload.methodName) | extend PayloadRequestType = tostring(ProtoPayload['request']['@type']) | extend PayloadRequestName = tostring(ProtoPayload.request.name) | extend PayloadRequestRegion = tostring(ProtoPayload.request.region) | extend PayloadrequestMetadataCallerIp = tostring(ProtoPayload.requestMetadata.callerIp) | extend PayloadrequestMetadatacallerSuppliedUserAgent = tostring(ProtoPayload.requestMetadata.callerSuppliedUserAgent) | extend PayloadrequestMetadataDestinationAttributes = tostring(ProtoPayload.requestMetadata.destinationAttributes) | extend PayloadrequestMetadatarequestAttributesAuth = tostring(ProtoPayload.requestMetadata.requestAttributes.auth) | extend PayloadrequestMetadatarequestAttributesTime = todatetime(ProtoPayload['requestMetadata']['requestAttributes']['time']) | extend PayloadResourceLocationCurrentLocations = tostring(ProtoPayload.resourceLocation.currentLocations) | extend PayloadResourceName = tostring(ProtoPayload.resourceName) | extend PayloadServiceName = tostring(ProtoPayload.serviceName) | extend PayloadAuthenticationInfoPrincipalSubject = tostring(protoPayload.authenticationInfo.principalSubject) | extend PayloadRequestLabelSelector= tostring(protoPayload.request.labelSelector) | extend PayloadRequestParent = tostring(protoPayload.request.parent) | extend PayloadRequestServiceApiVersion= tostring(protoPayload.request.service.apiVersion) | extend PayloadRequestServiceKind= tostring(protoPayload['request']['service']['kind']) | extend PayloadRequestServiceSpec= tostring(protoPayload.request.service.spec) | extend PayloadAuthenticationInfoServiceAccountKeyName = tostring(protoPayload.authenticationInfo.serviceAccountKeyName) | extend PayloadResponseType = tostring(protoPayload.response['@type']) | extend PayloadResponseApiVersion= tostring(protoPayload.response.apiVersion) | extend PayloadResponseKind= tostring(protoPayload['response']['kind']) | extend PayloadResponseSpec= tostring(protoPayload.response.spec) | extend PayloadResponseMetadataName = tostring(protoPayload.response.metadata.name) | extend PayloadResponseNameSpace = tostring(protoPayload.response.metadata.namespace) | extend PayloadResponseMetadataAnnotations =tostring(protoPayload.response.metadata.annotations) | extend PayloadResponseStatus= tostring(protoPayload.response.status) | extend PayloadResponseMetadataSelfLink = tostring(protoPayload.response.metadata.selfLink) | extend PayloadResponseMetadataCreationTimestamp=tostring(protoPayload['response']['metadata']['creationTimestamp']) | extend PayloadResponseMetadataUID = tostring(protoPayload.response.metadata.uid) | extend PayloadResponseMetadataGeneration = tostring(protoPayload.response.metadata.generation) | extend PayloadResponseMetadataResourceVersion = tostring(protoPayload.response.metadata.resourceVersion) | extend PayloadResponseServiceMetadatalabels = tostring(protoPayload.response.metadata.labels) | extend PayloadRequestOptionsRequestedPolicyVersion= tostring(protoPayload.request.options.requestedPolicyVersion) | extend PayloadRequestResource= tostring(protoPayload.request.resource) | extend PayloadRequestJobApiVersion= tostring(protoPayload.request.job.apiVersion) | extend PayloadRequestJobKind= tostring(protoPayload['request']['job']['kind']) | extend PayloadRequestJobSpec= tostring(protoPayload.request.job.spec) | extend PayloadRequestJobMetadataName = tostring(protoPayload.request.job.metadata.name) | extend PayloadRequestJobMetadataNameSpace = tostring(protoPayload.request.job.metadata.namespace) | extend PayloadRequestJobMetadataAnnotations =tostring(protoPayload.request.job.metadata.annotations) | extend PayloadRequestDomainMappingApiVersion= tostring(protoPayload.request.domainMapping.apiVersion) | extend PayloadRequestDomainMappingKind= tostring(protoPayload.request['domainMapping']['kind']) | extend PayloadRequestDomainMappingSpec= tostring(protoPayload.request.domainMapping.spec) | extend PayloadRequestDomainMappingMetadataName = tostring(protoPayload.request.domainMapping.metadata.name) | extend PayloadRequestDomainMappingMetadataNameSpace = tostring(protoPayload.request.domainMapping.metadata.namespace) | extend PayloadRequestDomainMappingMetadataAnnotations =tostring(protoPayload.request.domainMapping.metadata.annotations) | extend PayloadRequestDomainMappingStatus= tostring(protoPayload.request.domainMapping.status) | extend PayloadRequestServiceMetadataName = tostring(protoPayload.request.service.metadata.name) | extend PayloadRequestServiceMetadataNameSpace = tostring(protoPayload.request.service.metadata.namespace) | extend PayloadRequestServiceMetadataResourceVersion = tostring(protoPayload.request.service.metadata.resourceVersion) | extend PayloadRequestServiceMetadataSelfLink = tostring(protoPayload.request.service.metadata.selfLink) | extend PayloadRequestServiceMetadataCreationTimestamp=tostring(protoPayload['request']['service']['metadata']['creationTimestamp']) | extend PayloadRequestServiceMetadataUID = tostring(protoPayload.request.service.metadata.uid) | extend PayloadRequestServiceMetadataGeneration = tostring(protoPayload.request.service.metadata.generation) | extend PayloadRequestServiceMetadatalabels = tostring(protoPayload.request.service.metadata.labels) | extend PayloadRequestServiceMetadataAnnotations =tostring(protoPayload.request.service.metadata.annotations) | extend PayloadRequestServiceStatusConditions = tostring(protoPayload.request.service.status.conditions) | extend PayloadRequestServiceObservedGeneration = tostring(protoPayload.request.service.status.observedGeneration) | extend PayloadRequestServiceTraffic = tostring(protoPayload.request.service.status.traffic) | extend PayloadRequestServiceLatestRevision = tostring(protoPayload.request.service.status.latestCreatedRevisionName) | extend PayloadRequestServiceReadyRevision = tostring(protoPayload.request.service.status.latestReadyRevisionName) | extend PayloadRequestServiceServiceURL = tostring(protoPayload.request.service.status.url) | extend PayloadRequestImageUri = tostring(protoPayload.request.imageUri) | extend PayloadRequestStorageSourceGeneration = tostring(protoPayload.request.storageSource.generation) | extend PayloadRequestBuildpackBuildBaseImage = tostring(protoPayload.request.buildpackBuild.baseImage) | extend PayloadRequestBuildpackBuildEnableAutomaticUpdates = tostring(protoPayload.request.buildpackBuild.enableAutomaticUpdates) | extend PayloadRequestMetadataRequestAttributesReason = tostring(protoPayload.requestMetadata.requestAttributes.reason) | extend ResourceLabelsJobName = tostring(Resource['labels']['job_name']) | extend ResourceLabelslocation = tostring(Resource['labels']['location']) | extend ResourceLabelsProjectId = tostring(Resource['labels']['project_id']) | extend ResourceType = tostring(Resource['type']) | extend ResourceLabelsConfigurationName = tostring(resource.labels.configuration_name) | extend ResourceLabelsRevisionName = tostring(resource.labels.revision_name) | extend ResourceLabelsServiceName = tostring(resource.labels.service_name) | project InsertId, Labels, LogName, ReceiveTimestamp, TimeGenerated, Severity, PayloadType, PayloadAuthInfoPrincipalEmail, PayloadAuthorizationInfo, PayloadMethodName, PayloadRequestType, PayloadRequestName, PayloadRequestRegion, PayloadrequestMetadataCallerIp, PayloadrequestMetadatacallerSuppliedUserAgent, PayloadrequestMetadataDestinationAttributes, PayloadrequestMetadatarequestAttributesAuth, PayloadrequestMetadatarequestAttributesTime, PayloadResourceLocationCurrentLocations, PayloadResourceName, PayloadServiceName, ResourceLabelsJobName, ResourceLabelslocation, PayloadAuthenticationInfoPrincipalSubject, PayloadRequestLabelSelector, PayloadRequestParent, PayloadRequestServiceApiVersion, PayloadRequestServiceKind, PayloadRequestServiceSpec, PayloadAuthenticationInfoServiceAccountKeyName, PayloadResponseType, PayloadResponseApiVersion, PayloadResponseKind, PayloadResponseSpec, PayloadResponseMetadataName, PayloadResponseNameSpace, PayloadResponseMetadataAnnotations, PayloadResponseStatus, PayloadResponseMetadataSelfLink, PayloadResponseMetadataCreationTimestamp, PayloadResponseMetadataUID, PayloadResponseMetadataGeneration, PayloadResponseMetadataResourceVersion, PayloadResponseServiceMetadatalabels, PayloadRequestOptionsRequestedPolicyVersion, PayloadRequestResource, PayloadRequestJobApiVersion, PayloadRequestJobKind, PayloadRequestJobSpec, PayloadRequestJobMetadataName, PayloadRequestJobMetadataNameSpace, PayloadRequestJobMetadataAnnotations, PayloadRequestDomainMappingApiVersion, PayloadRequestDomainMappingKind, PayloadRequestDomainMappingSpec, PayloadRequestDomainMappingMetadataName, PayloadRequestDomainMappingMetadataNameSpace, PayloadRequestDomainMappingMetadataAnnotations, PayloadRequestDomainMappingStatus, PayloadRequestServiceMetadataName, PayloadRequestServiceMetadataNameSpace, PayloadRequestServiceMetadataResourceVersion, PayloadRequestServiceMetadataSelfLink, PayloadRequestServiceMetadataCreationTimestamp, PayloadRequestServiceMetadataUID, PayloadRequestServiceMetadataGeneration, PayloadRequestServiceMetadatalabels, PayloadRequestServiceMetadataAnnotations, PayloadRequestServiceStatusConditions, PayloadRequestServiceObservedGeneration, PayloadRequestServiceTraffic, PayloadRequestServiceLatestRevision, PayloadRequestServiceReadyRevision, PayloadRequestServiceServiceURL, PayloadRequestImageUri, PayloadRequestStorageSourceGeneration, PayloadRequestBuildpackBuildBaseImage, PayloadRequestBuildpackBuildEnableAutomaticUpdates, PayloadRequestMetadataRequestAttributesReason, ResourceLabelsProjectId, ResourceType, ResourceLabelsConfigurationName, ResourceLabelsRevisionName, ResourceLabelsServiceName",
                    "outputStream": "Custom-GCP_CloudRun_CL"
                  }
                ]
              }
            },
            {
              "name": "GCP_CloudRun_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "GCP_CloudRun_CL",
                  "columns": [
                    {
                      "name": "InsertId",
                      "type": "string"
                    },
                    {
                      "name": "Labels",
                      "type": "string"
                    },
                    {
                      "name": "LogName",
                      "type": "string"
                    },
                    {
                      "name": "ReceiveTimestamp",
                      "type": "datetime"
                    },
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Severity",
                      "type": "string"
                    },
                    {
                      "name": "PayloadType",
                      "type": "string"
                    },
                    {
                      "name": "PayloadAuthInfoPrincipalEmail",
                      "type": "string"
                    },
                    {
                      "name": "PayloadAuthorizationInfo",
                      "type": "dynamic"
                    },
                    {
                      "name": "PayloadMethodName",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestType",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestName",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestRegion",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestMetadataCallerIp",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestMetadatacallerSuppliedUserAgent",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestMetadataDestinationAttributes",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestMetadataRequestAttributesAuth",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestMetadataRequestAttributesTime",
                      "type": "datetime"
                    },
                    {
                      "name": "PayloadResourceLocationCurrentLocations",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResourceName",
                      "type": "string"
                    },
                    {
                      "name": "PayloadServiceName",
                      "type": "string"
                    },
                    {
                      "name": "PayloadAuthenticationInfoPrincipalSubject",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestLabelSelector",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestParent",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceApiVersion",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceKind",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceSpec",
                      "type": "string"
                    },
                    {
                      "name": "PayloadAuthenticationInfoServiceAccountKeyName",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseType",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseApiVersion",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseKind",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseSpec",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseMetadataName",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseNameSpace",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseMetadataAnnotations",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseStatus",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseMetadataSelfLink",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseMetadataCreationTimestamp",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseMetadataUID",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseMetadataGeneration",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseMetadataResourceVersion",
                      "type": "string"
                    },
                    {
                      "name": "PayloadResponseServiceMetadatalabels",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestOptionsRequestedPolicyVersion",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestResource",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestJobApiVersion",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestJobKind",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestJobSpec",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestJobMetadataName",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestJobMetadataNameSpace",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestJobMetadataAnnotations",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestDomainMappingApiVersion",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestDomainMappingKind",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestDomainMappingSpec",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestDomainMappingMetadataName",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestDomainMappingMetadataNameSpace",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestDomainMappingMetadataAnnotations",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestDomainMappingStatus",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceMetadataName",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceMetadataNameSpace",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceMetadataResourceVersion",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceMetadataSelfLink",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceMetadataCreationTimestamp",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceMetadataUID",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceMetadataGeneration",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceMetadatalabels",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceMetadataAnnotations",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceStatusConditions",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceObservedGeneration",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceTraffic",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceLatestRevision",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceReadyRevision",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestServiceServiceURL",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestImageUri",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestStorageSourceGeneration",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestBuildpackBuildBaseImage",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestBuildpackBuildEnableAutomaticUpdates",
                      "type": "string"
                    },
                    {
                      "name": "PayloadRequestMetadataRequestAttributesReason",
                      "type": "string"
                    },
                    {
                      "name": "ResourceLabelsJobName",
                      "type": "string"
                    },
                    {
                      "name": "ResourceLabelslocation",
                      "type": "string"
                    },
                    {
                      "name": "ResourceLabelsProjectId",
                      "type": "string"
                    },
                    {
                      "name": "ResourceType",
                      "type": "string"
                    },
                    {
                      "name": "ResourceLabelsConfigurationName",
                      "type": "string"
                    },
                    {
                      "name": "ResourceLabelsRevisionName",
                      "type": "string"
                    },
                    {
                      "name": "ResourceLabelsServiceName",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "GCPCloudRunLogs_ConnectorDefinition",
          "title": "GCP Cloud Run",
          "publisher": "Microsoft",
          "descriptionMarkdown": "The GCP Cloud Run data connector provides the capability to ingest Cloud Run request logs into Microsoft Sentinel using Pub/Sub. Refer the [Cloud Run Overview](https://cloud.google.com/run/docs/logging) for more details.",
          "graphQueriesTableName": "GCP_CloudRun_CL",
          "graphQueries": [
            {
              "metricName": "Total events received",
              "legend": "GCP Cloud Run Request Logs",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "Get sample of GCP Cloud Run request logs",
              "query": "{{graphQueriesTableName}}\n | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true,
                  "action": false
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "instructions": [
                {
                  "type": "MarkdownControlEnvBased",
                  "parameters": {
                    "prodScript": "#### 1. Setup the GCP environment \n Ensure to have the following resources from the GCP Console:\n Project ID, Project Name, GCP Subscription name for the project, Workload Identity Pool ID, Workspace Identity Provider ID, and a Service Account to establish the connection.\n For more information, refer the [Connector tutorial](https://github.com/v-anjohari/Cloud-Run-logs/blob/main/README.md) for log setup and authentication setup tutorial.\n\n Find the Log set up script [**here**](https://github.com/v-anjohari/Cloud-Run-logs/tree/main/GCPCloudRunLogsSetup)\n & the Authentication set up script [**here**](https://github.com/Azure/Azure-Sentinel/tree/master/DataConnectors/GCP/Terraform/sentinel_resources_creation/GCPInitialAuthenticationSetup)",
                    "govScript": "#### 1. Setup the GCP environment \n Ensure to have the following resources from the GCP Console:\n Project ID, Project Name, GCP Subscription name for the project, Workload Identity Pool ID, Workspace Identity Provider ID, and a Service Account to establish the connection.\n For more information, refer the [Connector tutorial](https://github.com/v-anjohari/Cloud-Run-logs/blob/main/README.md) for log setup and authentication setup tutorial.\n\n Find the Log set up script [**here**](https://github.com/v-anjohari/Cloud-Run-logs/tree/main/GCPCloudRunLogsSetup)\n & the Authentication set up script [**here**](https://github.com/Azure/Azure-Sentinel/tree/master/DataConnectors/GCP/Terraform/sentinel_resources_creation_gov/GCPInitialAuthenticationSetupGov)"
                  }
                },
                {
                  "type": "CopyableLabel",
                  "parameters": {
                    "label": "Tenant ID: A unique identifier that is used as an input in the Terraform configuration within a GCP environment.",
                    "fillWith": [
                      "TenantId"
                    ],
                    "name": "TenantId",
                    "disabled": true
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 2. Enable Cloud Run logs \n In the Google Cloud Console, enable cloud logging if not enabled previously, and save the changes.Deploy or update your Cloud Run services with logging enabled.\n\n Reference Link: [Link to documentation](https://cloud.google.com/run/docs/setup)"
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 3. Connect new collectors \n To enable GCP Cloud Run Request Logs for Microsoft Sentinel, click on Add new collector button, provide the required information in the pop up and click on Connect."
                  }
                },
                {
                  "type": "GCPGrid",
                  "parameters": {}
                },
                {
                  "type": "GCPContextPane",
                  "parameters": {}
                }
              ],
              "title": "Connect GCP Cloud Run to Microsoft Sentinel\n"
            }
          ]
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorCCPVersion')]",
        "source": {
          "sourceId": "[variables('_solutionId')]",
          "name": "[variables('_solutionName')]",
          "kind": "Solution"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "version": "[variables('dataConnectorCCPVersion')]",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "kind": "ResourcesDataConnector"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnections1')]",
        "displayName": "GCP Cloud Run",
        "contentKind": "ResourcesDataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {
            "guidValue": {
              "defaultValue": "[[newGuid()]",
              "type": "securestring"
            },
            "innerWorkspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "GCPServiceAccountEmail": {
              "defaultValue": "Enter GCPServiceAccountEmail value",
              "type": "securestring",
              "minLength": 4
            },
            "GCPProjectNumber": {
              "defaultValue": "Enter GCPProjectNumber value",
              "type": "securestring",
              "minLength": 1
            },
            "GCPWorkloadIdentityProviderId": {
              "defaultValue": "Enter GCPWorkloadIdentityProviderId value",
              "type": "securestring",
              "minLength": 4
            },
            "GCPProjectId": {
              "defaultValue": "Enter GCPProjectId value",
              "type": "securestring",
              "minLength": 4
            },
            "GCPSubscriptionName": {
              "defaultValue": "Enter GCPSubscriptionName value",
              "type": "securestring",
              "minLength": 3
            },
            "connectorDefinitionName": {
              "defaultValue": "GCP Cloud Run",
              "type": "securestring",
              "minLength": 1
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "dcrConfig": {
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              },
              "type": "object"
            }
          },
          "variables": {
            "_dataConnectorContentIdConnections1": "[variables('_dataConnectorContentIdConnections1')]"
          },
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'GCPRunLogs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GCP",
              "properties": {
                "connectorDefinitionName": "GCPCloudRunLogs_ConnectorDefinition",
                "dataType": "GCP_CloudRun_CL",
                "dcrConfig": {
                  "streamName": "Custom-GCPRun",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "auth": {
                  "serviceAccountEmail": "[[parameters('GCPServiceAccountEmail')]",
                  "projectNumber": "[[parameters('GCPProjectNumber')]",
                  "workloadIdentityProviderId": "[[parameters('GCPWorkloadIdentityProviderId')]"
                },
                "request": {
                  "projectId": "[[parameters('GCPProjectId')]",
                  "subscriptionNames": [
                    "[[parameters('GCPSubscriptionName')]"
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Google Cloud Platform Cloud Run",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Google%20Cloud%20Platform%20Cloud%20Run/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The GCP Cloud Run solution provides the capability to ingest <a href=\"https://cloud.google.com/run/docs/audit-logging#google.cloud.run.v2.Executions\">GCP Run logs</a> into Microsoft Sentinel using the GCP Logging API. Refer to <a href=\"https://cloud.google.com/run/docs/audit-logging#google.cloud.run.v2.Executions\">GCP Cloud Run API documentation</a> for more information.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><a href=\"https://learn.microsoft.com/en-us/azure/sentinel/create-codeless-connector\">Codeless Connector Platform(CCP)</a></li>\n</ol>\n<p><strong>Data Connectors:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/google_logo.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Google Cloud Platform Cloud Run",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "version": "[variables('dataConnectorCCPVersion')]"
            }
          ]
        },
        "firstPublishDate": "2021-07-30",
        "providers": [
          "Google"
        ],
        "categories": {
          "domains": [
            "Cloud Provider",
            "Identity"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
