{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.1.0.0",
       "metadata": {
        "title": "RFI-search-workforce-user", 
        "description": "This playbook searches the Recorded Future Identity Intelligence Module for compromised workforce users.\n\nThis playbook depends on:\n- RFI-add-EntraID-security-group-user\n- RFI-confirm-EntraID-risky-user\n- RFI-lookup-and-save-user\n\n Those playbooks need to be installed **manually** before installing current playbook.",
        "lastUpdateTime": "2024-08-27T14:25:00.000Z",
        "entities": [], 
        "tags": ["Identity protection"], 
        "support": {
            "tier": "Partner" 
        },
        "author": {
            "name": "Recorded Future"
        },
        "releaseNotes": [
            {
                "version": "1.0",
                "title": "Initial version",
                "notes": [ "Initial version" ]
            },
            {
                "version": "1.1",
                "title": "Updates",
                "notes": [ "Added subscriptionId as a parameter and updated solution to match V3. Change PlaybookName prefix to RFI." ]
            },
            {
                "version": "1.2",
                "title": "Updates",
                "notes": [ "Added workspace_name as a parameter." ]
            }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "RFI-search-workforce-user",
            "type": "string"
        },
        "workspace_name": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description" : "Microsoft Log Analytic Workspace Name"
            }
        },
        "Playbook-Name-add-EntraID-security-group-user": {
            "defaultValue": "RFI-add-EntraID-security-group-user",
            "type": "string"
        },
        "Playbook-Name-lookup-and-save-user": {
            "defaultValue": "RFI-lookup-and-save-user",
            "type": "string"
        },
        "Playbook-Name-confirm-EntraID-risky-user": {
            "defaultValue": "RFI-confirm-EntraID-risky-user",
            "type": "string"
        }
    },
    "variables": {
        "LogAnalyticsDataCollectorConnectionName": "[concat('azureloganalyticsdatacollector-', parameters('PlaybookName'))]",
        "AzureMonitorLogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
        "RecordedFutureIdentityConnectionName": "[concat('recordedfutureidenti-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2019-05-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateVersion": "1.2"
            },
            "dependsOn": [
				"[resourceId('Microsoft.Web/connections', variables('LogAnalyticsDataCollectorConnectionName'))]",
				"[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
				"[resourceId('Microsoft.Web/connections', variables('RecordedFutureIdentityConnectionName'))]"
			],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "organization_domain": {
                            "defaultValue": "example.com",
                            "type": "String"
                        },
                        "search_lookback_days": {
                            "defaultValue": -14,
                            "type": "Int"
                        },
                        "credential_dumps_log_analytics_custom_log_name": {
                            "defaultValue": "RecordedFutureIdentity_LeakedCredentials_CredentialDumps_CL",
                            "type": "String"
                        },
                        "malware_logs_log_analytics_custom_log_name": {
                            "defaultValue": "RecordedFutureIdentity_LeakedCredentials_MalwareLogs_CL",
                            "type": "String"
                        },
                        "lookup_results_log_analytics_custom_log_name": {
                            "defaultValue": "RecordedFutureIdentity_UsersLookupResults_CL",
                            "type": "String"
                        },
                        "lookup_lookback_days": {
                            "defaultValue": -365,
                            "type": "Int"
                        },
                        "active_directory_domain": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "active_directory_security_group_id": {
                            "defaultValue": "",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Add_Log_Analytics_Credential_dump_exposures_to_the_corresponding_array": {
                            "runAfter": {
                                "Query_Log_Analytics_for_Credential_dump_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "known_credential_dump_creds",
                                "value": "@body('Query_Log_Analytics_for_Credential_dump_exposures')?['value']"
                            }
                        },
                        "Add_Log_Analytics_Malware_log_exposures_to_the_corresponding_array": {
                            "runAfter": {
                                "Query_Log_Analytics_for_Malware_log_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "known_malware_log_creds",
                                "value": "@body('Query_Log_Analytics_for_Malware_log_exposures')?['value']"
                            }
                        },
                        "Credential_Search_-_Search_credential_data_for_one_or_more_domains": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "domain_type": "My Organization (workforce use case)",
                                    "domains": [
                                        "@parameters('organization_domain')"
                                    ],
                                    "filter": {
                                        "latest_downloaded_gte": "@{formatDateTime(addDays(utcNow(), parameters('search_lookback_days')), 'yyyy-MM-dd')}"
                                    },
                                    "limit": 500
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['recordedfutureidenti']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/credentials/search"
                            }
                        },
                        "For_Each_-_Make_new_and_known_Credential_dumps_be_comparable": {
                            "foreach": "@body('Credential_Search_-_Search_credential_data_for_one_or_more_domains')?['credential_dumps']",
                            "actions": {
                                "Append_transformed_exposures_to_array": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "transformed_rf_api_credential_dump_creds",
                                        "value": {
                                            "email": "@items('For_Each_-_Make_new_and_known_Credential_dumps_be_comparable')"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_-_Array_of_transformed_new_Credential_dump_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_Each_-_extend_new_exposures_array_with_new_Credential_dump_exposures": {
                            "foreach": "@variables('unknown_credential_dump_creds')",
                            "actions": {
                                "Add_new_Credential_dump_exposure_email_to_the_array_of_all_new_exposures": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "newly_leaked_emails",
                                        "value": "@items('For_Each_-_extend_new_exposures_array_with_new_Credential_dump_exposures')?['email']"
                                    }
                                }
                            },
                            "runAfter": {
                                "For_Each_-_extend_new_exposures_array_with_new_Malware_log_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_Each_-_extend_new_exposures_array_with_new_Malware_log_exposures": {
                            "foreach": "@variables('unknown_malware_log_creds')",
                            "actions": {
                                "Add_new_Malware_log_exposure_email_to_the_array_of_all_new_exposures": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "newly_leaked_emails",
                                        "value": "@items('For_Each_-_extend_new_exposures_array_with_new_Malware_log_exposures')?['login']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_-_Array_of_all_new_exposures_(emails)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_Each_new_Credential_dump_exposures": {
                            "foreach": "@variables('transformed_rf_api_credential_dump_creds')",
                            "actions": {
                                "If_Credential_dump_exposure_is_new": {
                                    "actions": {
                                        "Add_new_exposure_to_the_new_Credential_dump_exposures_array": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "unknown_credential_dump_creds",
                                                "value": "@items('For_Each_new_Credential_dump_exposures')"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@variables('known_credential_dump_creds')",
                                                        "@items('For_Each_new_Credential_dump_exposures')"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If",
                                    "description": "\"New\" - means it have not been previously seen by the Logic App."
                                }
                            },
                            "runAfter": {
                                "Initialize_-_Array_of_new_Credential_dump_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_Each_new_Malware_log_exposures": {
                            "foreach": "@body('Credential_Search_-_Search_credential_data_for_one_or_more_domains')?['malware_logs']",
                            "actions": {
                                "If_Malware_log_exposure_is_new": {
                                    "actions": {
                                        "Add_new_exposure_to_the_new_Malware_log_exposures_array": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "unknown_malware_log_creds",
                                                "value": "@items('For_Each_new_Malware_log_exposures')"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@variables('known_malware_log_creds')",
                                                        "@items('For_Each_new_Malware_log_exposures')"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If",
                                    "description": "\"New\" - means it have not been previously seen by the Logic App."
                                }
                            },
                            "runAfter": {
                                "Initialize_-_Array_of_new_Malware_log_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_new_exposures_-_do_protective_actions": {
                            "foreach": "@variables('newly_leaked_emails')",
                            "actions": {
                                "Current_time": {
                                    "runAfter": {},
                                    "type": "Expression",
                                    "kind": "CurrentTime",
                                    "inputs": {},
                                    "description": "This block is needed only to create 3 branches in this For each loop."
                                },
                                "RFI-add-EntraID-security-group-user": {
                                    "runAfter": {
                                        "Current_time": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": {
                                            "active_directory_domain": "@parameters('active_directory_domain')",
                                            "active_directory_security_group_id": "@parameters('active_directory_security_group_id')",
                                            "risky_user_email": "@{items('For_each_new_exposures_-_do_protective_actions')}"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('Playbook-Name-add-EntraID-security-group-user'))]"
                                            }
                                        }
                                    }
                                },
                                "RFI-lookup-and-save-user": {
                                    "runAfter": {
                                        "Current_time": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": {
                                            "lookup_lookback_days": "@parameters('lookup_lookback_days')",
                                            "lookup_results_log_analytics_custom_log_name": "@parameters('lookup_results_log_analytics_custom_log_name')",
                                            "risky_user_email": "@{items('For_each_new_exposures_-_do_protective_actions')}"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('Playbook-Name-lookup-and-save-user'))]"
                                            }
                                        }
                                    }
                                },
                                "RFI-confirm-EntraID-risky-user": {
                                    "runAfter": {
                                        "Current_time": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": {
                                            "active_directory_domain": "@parameters('active_directory_domain')",
                                            "risky_user_email": "@{items('For_each_new_exposures_-_do_protective_actions')}"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('Playbook-Name-confirm-EntraID-risky-user'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_Each_-_extend_new_exposures_array_with_new_Credential_dump_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_-_Array_of_all_new_exposures_(emails)": {
                            "runAfter": {
                                "Send_Data_-_Save_new_Credential_dump_exposures_into_Log_Analytics_Custom_Log": [
                                    "Succeeded",
                                    "Skipped",
                                    "TimedOut",
                                    "Failed"
                                ],
                                "Send_Data_-_Save_new_Malware_log_exposures_into_Log_Analytics_Custom_Log": [
                                    "Succeeded",
                                    "Skipped",
                                    "TimedOut",
                                    "Failed"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "newly_leaked_emails",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_-_Array_of_known_Credential_dump_exposures": {
                            "runAfter": {
                                "Credential_Search_-_Search_credential_data_for_one_or_more_domains": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "known_credential_dump_creds",
                                        "type": "array"
                                    }
                                ]
                            },
                            "description": "Existing Credential dumps (collected during prior Logic App runs)"
                        },
                        "Initialize_-_Array_of_known_Malware_log_exposures": {
                            "runAfter": {
                                "Credential_Search_-_Search_credential_data_for_one_or_more_domains": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "known_malware_log_creds",
                                        "type": "array"
                                    }
                                ]
                            },
                            "description": "Existing Malware logs (collected during prior Logic App runs)"
                        },
                        "Initialize_-_Array_of_new_Credential_dump_exposures": {
                            "runAfter": {
                                "For_Each_-_Make_new_and_known_Credential_dumps_be_comparable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "unknown_credential_dump_creds",
                                        "type": "array"
                                    }
                                ]
                            },
                            "description": "\"New\" - means that this are new leaks, which weren't seen on previous runs of the logic app."
                        },
                        "Initialize_-_Array_of_new_Malware_log_exposures": {
                            "runAfter": {
                                "Add_Log_Analytics_Malware_log_exposures_to_the_corresponding_array": [
                                    "Succeeded",
                                    "Skipped"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "unknown_malware_log_creds",
                                        "type": "array"
                                    }
                                ]
                            },
                            "description": "Exposures that wasn't previously seen by the Logic App."
                        },
                        "Initialize_-_Array_of_transformed_new_Credential_dump_exposures": {
                            "runAfter": {
                                "Add_Log_Analytics_Credential_dump_exposures_to_the_corresponding_array": [
                                    "Succeeded",
                                    "Skipped"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "transformed_rf_api_credential_dump_creds",
                                        "type": "array"
                                    }
                                ]
                            },
                            "description": "New Credential dumps are formatted to enable storing and comparing them with existing Credential dumps in Log Analytics."
                        },
                        "Query_Log_Analytics_for_Credential_dump_exposures": {
                            "runAfter": {
                                "Initialize_-_Array_of_known_Credential_dump_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@{parameters('credential_dumps_log_analytics_custom_log_name')}\n| project email=email_s",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/queryData",
                                "queries": {
                                    "resourcegroups": "[resourceGroup().name]",
                                    "resourcename": "[parameters('workspace_name')]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "subscriptions": "[subscription().subscriptionId]",
                                    "timerange": "@{formatDateTime(addDays(utcNow(), parameters('search_lookback_days')), 'yyyy-MM-dd')}"
                                }
                            }
                        },
                        "Query_Log_Analytics_for_Malware_log_exposures": {
                            "runAfter": {
                                "Initialize_-_Array_of_known_Malware_log_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@{parameters('malware_logs_log_analytics_custom_log_name')}\n| project login=login_s, domain=domain_s",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/queryData",
                                "queries": {
                                    "resourcegroups": "[resourceGroup().name]",
                                    "resourcename": "[parameters('workspace_name')]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "subscriptions": "[subscription().subscriptionId]",
                                    "timerange": "@{formatDateTime(addDays(utcNow(), parameters('search_lookback_days')), 'yyyy-MM-dd')}"
                                }
                            }
                        },
                        "Send_Data_-_Save_new_Credential_dump_exposures_into_Log_Analytics_Custom_Log": {
                            "runAfter": {
                                "Transform_new_Credential_dump_exposures_array_into_a_JSON_object": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@{outputs('Transform_new_Credential_dump_exposures_array_into_a_JSON_object')}",
                                "headers": {
                                    "Log-Type": "@parameters('credential_dumps_log_analytics_custom_log_name')",
                                    "time-generated-field": "@{utcNow()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/logs"
                            }
                        },
                        "Send_Data_-_Save_new_Malware_log_exposures_into_Log_Analytics_Custom_Log": {
                            "runAfter": {
                                "Transform_new_Malware_log_exposures_array_into_a_JSON_object": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@{outputs('Transform_new_Malware_log_exposures_array_into_a_JSON_object')}",
                                "headers": {
                                    "Log-Type": "@parameters('malware_logs_log_analytics_custom_log_name')",
                                    "time-generated-field": "@{utcNow()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/logs"
                            }
                        },
                        "Transform_new_Credential_dump_exposures_array_into_a_JSON_object": {
                            "runAfter": {
                                "For_Each_new_Credential_dump_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@variables('unknown_credential_dump_creds')"
                        },
                        "Transform_new_Malware_log_exposures_array_into_a_JSON_object": {
                            "runAfter": {
                                "For_Each_new_Malware_log_exposures": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@variables('unknown_malware_log_creds')"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureloganalyticsdatacollector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('LogAnalyticsDataCollectorConnectionName'))]",
                                "connectionName": "[variables('LogAnalyticsDataCollectorConnectionName')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azureloganalyticsdatacollector')]"
                            },
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                                "connectionName": "[variables('AzureMonitorLogsConnectionName')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuremonitorlogs')]"
                            },
                            "recordedfutureidenti": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('RecordedFutureIdentityConnectionName'))]",
                                "connectionName": "[variables('RecordedFutureIdentityConnectionName')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/recordedfutureidenti')]"
                            }
                        }
                    }
                }
            }
        },
        {
			"type": "Microsoft.Web/connections",
			"apiVersion": "2018-07-01-preview",
			"name": "[variables('LogAnalyticsDataCollectorConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"api": {
					"id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azureloganalyticsdatacollector')]"
				},
                "displayName": "[variables('LogAnalyticsDataCollectorConnectionName')]"
			}
		},
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2018-07-01-preview",
			"name": "[variables('AzureMonitorLogsConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"api": {
					"id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuremonitorlogs')]"
				},
                "displayName": "[variables('AzureMonitorLogsConnectionName')]"
            }
		},
        {
			"type": "Microsoft.Web/connections",
			"apiVersion": "2018-07-01-preview",
			"name": "[variables('RecordedFutureIdentityConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"api": {
					"id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/recordedfutureidenti')]"
				},
                "displayName": "[variables('RecordedFutureIdentityConnectionName')]"
			}
		}
    ]
}