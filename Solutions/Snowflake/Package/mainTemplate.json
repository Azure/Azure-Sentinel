{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Snowflake"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "resource group name where Microsoft Sentinel is setup"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "[last(split(subscription().id, '/'))]",
      "metadata": {
        "description": "subscription id where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Snowflake",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Snowflake",
    "_solutionVersion": "3.0.1",
    "solutionId": "azuresentinel.azure-sentinel-solution-snowflake",
    "_solutionId": "[variables('solutionId')]",
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.0.1",
      "_analyticRulecontentId1": "09b8dfc7-87b0-4215-b34b-bab363d685cb",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '09b8dfc7-87b0-4215-b34b-bab363d685cb')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('09b8dfc7-87b0-4215-b34b-bab363d685cb')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','09b8dfc7-87b0-4215-b34b-bab363d685cb','-', '1.0.1')))]"
    },
    "analyticRuleObject2": {
      "analyticRuleVersion2": "1.0.0",
      "_analyticRulecontentId2": "1376f5e5-855a-4f88-8591-19eba4575a0f",
      "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1376f5e5-855a-4f88-8591-19eba4575a0f')]",
      "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1376f5e5-855a-4f88-8591-19eba4575a0f')))]",
      "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1376f5e5-855a-4f88-8591-19eba4575a0f','-', '1.0.0')))]"
    },
    "analyticRuleObject3": {
      "analyticRuleVersion3": "1.0.1",
      "_analyticRulecontentId3": "5f8a81d9-7d27-4ff5-a0ce-4285ee02c2c8",
      "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5f8a81d9-7d27-4ff5-a0ce-4285ee02c2c8')]",
      "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5f8a81d9-7d27-4ff5-a0ce-4285ee02c2c8')))]",
      "_analyticRulecontentProductId3": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','5f8a81d9-7d27-4ff5-a0ce-4285ee02c2c8','-', '1.0.1')))]"
    },
    "analyticRuleObject4": {
      "analyticRuleVersion4": "1.0.1",
      "_analyticRulecontentId4": "e05cc333-d499-430f-907c-7f28a9e4d1b5",
      "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e05cc333-d499-430f-907c-7f28a9e4d1b5')]",
      "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e05cc333-d499-430f-907c-7f28a9e4d1b5')))]",
      "_analyticRulecontentProductId4": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','e05cc333-d499-430f-907c-7f28a9e4d1b5','-', '1.0.1')))]"
    },
    "analyticRuleObject5": {
      "analyticRuleVersion5": "1.0.1",
      "_analyticRulecontentId5": "b7d22407-1391-4256-b09a-414a9719443c",
      "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b7d22407-1391-4256-b09a-414a9719443c')]",
      "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b7d22407-1391-4256-b09a-414a9719443c')))]",
      "_analyticRulecontentProductId5": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b7d22407-1391-4256-b09a-414a9719443c','-', '1.0.1')))]"
    },
    "analyticRuleObject6": {
      "analyticRuleVersion6": "1.0.0",
      "_analyticRulecontentId6": "c2f93727-e4b0-4cb9-8f80-f52ebbd96ece",
      "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c2f93727-e4b0-4cb9-8f80-f52ebbd96ece')]",
      "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('c2f93727-e4b0-4cb9-8f80-f52ebbd96ece')))]",
      "_analyticRulecontentProductId6": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','c2f93727-e4b0-4cb9-8f80-f52ebbd96ece','-', '1.0.0')))]"
    },
    "analyticRuleObject7": {
      "analyticRuleVersion7": "1.0.0",
      "_analyticRulecontentId7": "627a4ff1-036b-4375-a9f9-288d5e1d7d37",
      "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '627a4ff1-036b-4375-a9f9-288d5e1d7d37')]",
      "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('627a4ff1-036b-4375-a9f9-288d5e1d7d37')))]",
      "_analyticRulecontentProductId7": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','627a4ff1-036b-4375-a9f9-288d5e1d7d37','-', '1.0.0')))]"
    },
    "analyticRuleObject8": {
      "analyticRuleVersion8": "1.0.0",
      "_analyticRulecontentId8": "f258fa0c-e26c-4e2b-94fb-88b6cef0ca6e",
      "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f258fa0c-e26c-4e2b-94fb-88b6cef0ca6e')]",
      "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('f258fa0c-e26c-4e2b-94fb-88b6cef0ca6e')))]",
      "_analyticRulecontentProductId8": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','f258fa0c-e26c-4e2b-94fb-88b6cef0ca6e','-', '1.0.0')))]"
    },
    "analyticRuleObject9": {
      "analyticRuleVersion9": "1.0.0",
      "_analyticRulecontentId9": "1dd1d9e5-3ebf-43cb-be07-6082d5eabe79",
      "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1dd1d9e5-3ebf-43cb-be07-6082d5eabe79')]",
      "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1dd1d9e5-3ebf-43cb-be07-6082d5eabe79')))]",
      "_analyticRulecontentProductId9": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1dd1d9e5-3ebf-43cb-be07-6082d5eabe79','-', '1.0.0')))]"
    },
    "analyticRuleObject10": {
      "analyticRuleVersion10": "1.0.0",
      "_analyticRulecontentId10": "5ed33eee-0ab6-4bf5-9e9b-6100db83d39a",
      "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5ed33eee-0ab6-4bf5-9e9b-6100db83d39a')]",
      "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5ed33eee-0ab6-4bf5-9e9b-6100db83d39a')))]",
      "_analyticRulecontentProductId10": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','5ed33eee-0ab6-4bf5-9e9b-6100db83d39a','-', '1.0.0')))]"
    },
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "dataConnectorCCPVersion": "1.0.0",
    "_dataConnectorContentIdConnectorDefinition1": "SnowflakeLogsCCPDefinition",
    "dataConnectorTemplateNameConnectorDefinition1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition1')))]",
    "_dataConnectorContentIdConnections1": "SnowflakeLogsCCPDefinitionConnections",
    "dataConnectorTemplateNameConnections1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections1')))]",
    "dataCollectionEndpointId1": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
    "blanks": "[replace('b', 'b', '')]",
    "uiConfigId2": "SnowflakeDataConnector",
    "_uiConfigId2": "[variables('uiConfigId2')]",
    "dataConnectorContentId2": "SnowflakeDataConnector",
    "_dataConnectorContentId2": "[variables('dataConnectorContentId2')]",
    "dataConnectorId2": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
    "_dataConnectorId2": "[variables('dataConnectorId2')]",
    "dataConnectorTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId2'))))]",
    "dataConnectorVersion2": "1.0.0",
    "_dataConnectorcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId2'),'-', variables('dataConnectorVersion2'))))]",
    "huntingQueryObject1": {
      "huntingQueryVersion1": "1.0.0",
      "_huntingQuerycontentId1": "6aae5700-79da-4b41-98cc-f77bf7489f01",
      "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('6aae5700-79da-4b41-98cc-f77bf7489f01')))]"
    },
    "huntingQueryObject2": {
      "huntingQueryVersion2": "1.0.0",
      "_huntingQuerycontentId2": "09cc7b43-2ea1-464f-a72c-2ec187405505",
      "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('09cc7b43-2ea1-464f-a72c-2ec187405505')))]"
    },
    "huntingQueryObject3": {
      "huntingQueryVersion3": "1.0.0",
      "_huntingQuerycontentId3": "5736df91-ec99-4fb2-b162-a17607d20ee8",
      "huntingQueryTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('5736df91-ec99-4fb2-b162-a17607d20ee8')))]"
    },
    "huntingQueryObject4": {
      "huntingQueryVersion4": "1.0.0",
      "_huntingQuerycontentId4": "fcc5f12b-bfa7-45f1-8722-a72eb77a5a4a",
      "huntingQueryTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('fcc5f12b-bfa7-45f1-8722-a72eb77a5a4a')))]"
    },
    "huntingQueryObject5": {
      "huntingQueryVersion5": "1.0.0",
      "_huntingQuerycontentId5": "b4a062d1-c95b-4b55-b984-a7efbc2e3a0f",
      "huntingQueryTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('b4a062d1-c95b-4b55-b984-a7efbc2e3a0f')))]"
    },
    "huntingQueryObject6": {
      "huntingQueryVersion6": "1.0.0",
      "_huntingQuerycontentId6": "6e8315eb-86a0-4a15-925d-a36c29d13bbd",
      "huntingQueryTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('6e8315eb-86a0-4a15-925d-a36c29d13bbd')))]"
    },
    "huntingQueryObject7": {
      "huntingQueryVersion7": "1.0.0",
      "_huntingQuerycontentId7": "8f8a8ac1-82aa-4569-b3ec-46dbf2676bf0",
      "huntingQueryTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('8f8a8ac1-82aa-4569-b3ec-46dbf2676bf0')))]"
    },
    "huntingQueryObject8": {
      "huntingQueryVersion8": "1.0.0",
      "_huntingQuerycontentId8": "98f57314-b6d3-4f3a-8e10-c691d8c946d5",
      "huntingQueryTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('98f57314-b6d3-4f3a-8e10-c691d8c946d5')))]"
    },
    "huntingQueryObject9": {
      "huntingQueryVersion9": "1.0.0",
      "_huntingQuerycontentId9": "112311cc-6361-4c56-9520-1147371b01ac",
      "huntingQueryTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('112311cc-6361-4c56-9520-1147371b01ac')))]"
    },
    "huntingQueryObject10": {
      "huntingQueryVersion10": "1.0.0",
      "_huntingQuerycontentId10": "169b4c88-10f5-42c2-a45f-0959689ca22a",
      "huntingQueryTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('169b4c88-10f5-42c2-a45f-0959689ca22a')))]"
    },
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','Snowflake')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Snowflake')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Snowflake-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "Snowflake-Parser"
    },
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "SnowflakeWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeDiscoveryActivity_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects possible discovery activity.",
                "displayName": "Snowflake - Possible discovery activity",
                "enabled": false,
                "query": "let threshold = 20;\nSnowflake\n| where QUERY_TYPE_s =~ 'SHOW'\n| where EXECUTION_STATUS_s =~ 'SUCCESS'\n| summarize count() by TargetUsername, bin(TimeGenerated, 5m)\n| where count_ > threshold\n| extend AccountCustomEntity = TargetUsername\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Snowflake",
                    "dataTypes": [
                      "Snowflake"
                    ]
                  }
                ],
                "tactics": [
                  "Discovery"
                ],
                "techniques": [
                  "T1526"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Snowflake Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Snowflake - Possible discovery activity",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeLongQueryProcessTime_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects query with abnormal proccess time.",
                "displayName": "Snowflake - Abnormal query process time",
                "enabled": false,
                "query": "let threshold = 10000;\nSnowflake\n| where TOTAL_ELAPSED_TIME_d > threshold\n| extend AccountCustomEntity = TargetUsername\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Snowflake",
                    "dataTypes": [
                      "Snowflake"
                    ]
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "techniques": [
                  "T1499"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
              "properties": {
                "description": "Snowflake Analytics Rule 2",
                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
        "contentKind": "AnalyticsRule",
        "displayName": "Snowflake - Abnormal query process time",
        "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject3').analyticRuleTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeMultipleFailedQueries_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject3').analyticRuleVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects multiple failed queries in short timeframe.",
                "displayName": "Snowflake - Multiple failed queries",
                "enabled": false,
                "query": "let threshold = 50;\nSnowflake\n| where EXECUTION_STATUS_s !~ 'SUCCESS'\n| summarize count() by TargetUsername, bin(TimeGenerated, 5m)\n| where count_ > threshold\n| extend AccountCustomEntity = TargetUsername\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Snowflake",
                    "dataTypes": [
                      "Snowflake"
                    ]
                  }
                ],
                "tactics": [
                  "Discovery"
                ],
                "techniques": [
                  "T1518",
                  "T1082"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject3').analyticRuleId3,'/'))))]",
              "properties": {
                "description": "Snowflake Analytics Rule 3",
                "parentId": "[variables('analyticRuleObject3').analyticRuleId3]",
                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
        "contentKind": "AnalyticsRule",
        "displayName": "Snowflake - Multiple failed queries",
        "contentProductId": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "id": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject4').analyticRuleTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeMultipleLoginFailure_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject4').analyticRuleVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects multiple login failures by user.",
                "displayName": "Snowflake - Multiple login failures by user",
                "enabled": false,
                "query": "let threshold = 10;\nSnowflake\n| where EventType =~ 'LOGIN'\n| where IS_SUCCESS_s =~ 'No'\n| summarize count() by TargetUsername, bin(TimeGenerated, 5m)\n| where count_ > threshold\n| extend AccountCustomEntity = TargetUsername\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Snowflake",
                    "dataTypes": [
                      "Snowflake"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1078"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject4').analyticRuleId4,'/'))))]",
              "properties": {
                "description": "Snowflake Analytics Rule 4",
                "parentId": "[variables('analyticRuleObject4').analyticRuleId4]",
                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
        "contentKind": "AnalyticsRule",
        "displayName": "Snowflake - Multiple login failures by user",
        "contentProductId": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "id": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject5').analyticRuleTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeMultipleLoginFailureFromIP_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject5').analyticRuleVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Mmltiple login failures from single IP.",
                "displayName": "Snowflake - Multiple login failures from single IP",
                "enabled": false,
                "query": "let threshold = 10;\nSnowflake\n| where EventType =~ 'LOGIN'\n| where IS_SUCCESS_s =~ 'No'\n| summarize count() by SrcDvcIpAddr, bin(TimeGenerated, 5m)\n| where count_ > threshold\n| extend IPCustomEntity = SrcDvcIpAddr\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Snowflake",
                    "dataTypes": [
                      "Snowflake"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1078"
                ],
                "entityMappings": [
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject5').analyticRuleId5,'/'))))]",
              "properties": {
                "description": "Snowflake Analytics Rule 5",
                "parentId": "[variables('analyticRuleObject5').analyticRuleId5]",
                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
        "contentKind": "AnalyticsRule",
        "displayName": "Snowflake - Multiple login failures from single IP",
        "contentProductId": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "id": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject6').analyticRuleTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakePossibleDataDestruction_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject6').analyticRuleVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects possible data destruction.",
                "displayName": "Snowflake - Possible data destraction",
                "enabled": false,
                "query": "let threshold = 10;\nSnowflake\n| where QUERY_TYPE_s =~ 'DROP'\n| where EXECUTION_STATUS_s =~ 'SUCCESS'\n| summarize count() by TargetUsername, bin(TimeGenerated, 5m)\n| where count_ > threshold\n| extend AccountCustomEntity = TargetUsername\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Snowflake",
                    "dataTypes": [
                      "Snowflake"
                    ]
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "techniques": [
                  "T1485"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject6').analyticRuleId6,'/'))))]",
              "properties": {
                "description": "Snowflake Analytics Rule 6",
                "parentId": "[variables('analyticRuleObject6').analyticRuleId6]",
                "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject6').analyticRuleVersion6]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
        "contentKind": "AnalyticsRule",
        "displayName": "Snowflake - Possible data destraction",
        "contentProductId": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "id": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject7').analyticRuleTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakePrivilegesDiscovery_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject7').analyticRuleVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects possible privileges discovery activity.",
                "displayName": "Snowflake - Possible privileges discovery activity",
                "enabled": false,
                "query": "Snowflake\n| where QUERY_TYPE_s =~ 'SHOW'\n| where QUERY_TEXT_s has_all ('SHOW', 'ROLES')\n| extend AccountCustomEntity = TargetUsername\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Snowflake",
                    "dataTypes": [
                      "Snowflake"
                    ]
                  }
                ],
                "tactics": [
                  "Discovery"
                ],
                "techniques": [
                  "T1087"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject7').analyticRuleId7,'/'))))]",
              "properties": {
                "description": "Snowflake Analytics Rule 7",
                "parentId": "[variables('analyticRuleObject7').analyticRuleId7]",
                "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject7').analyticRuleVersion7]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
        "contentKind": "AnalyticsRule",
        "displayName": "Snowflake - Possible privileges discovery activity",
        "contentProductId": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "id": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject8').analyticRuleTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeQueryOnSensitiveTable_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject8').analyticRuleVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects query on sensitive or restricted table.",
                "displayName": "Snowflake - Query on sensitive or restricted table",
                "enabled": false,
                "query": "let r_tbl = dynamic(['table_name']);\nSnowflake\n| where QUERY_TYPE_s =~ 'SELECT'\n| where EXECUTION_STATUS_s =~ 'SUCCESS'\n| extend tbl = extract(@'(FROM|from)\\s(\\S+)\\s', 2, QUERY_TEXT_s)\n| where tbl in~ (r_tbl)\n| extend AccountCustomEntity = TargetUsername\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Snowflake",
                    "dataTypes": [
                      "Snowflake"
                    ]
                  }
                ],
                "tactics": [
                  "Collection"
                ],
                "techniques": [
                  "T1119"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject8').analyticRuleId8,'/'))))]",
              "properties": {
                "description": "Snowflake Analytics Rule 8",
                "parentId": "[variables('analyticRuleObject8').analyticRuleId8]",
                "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject8').analyticRuleVersion8]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
        "contentKind": "AnalyticsRule",
        "displayName": "Snowflake - Query on sensitive or restricted table",
        "contentProductId": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "id": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject9').analyticRuleTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeUnusualQuery_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject9').analyticRuleVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects unusual query.",
                "displayName": "Snowflake - Unusual query",
                "enabled": false,
                "query": "Snowflake\n| where QUERY_TYPE_s =~ 'SELECT'\n| where EXECUTION_STATUS_s =~ 'SUCCESS'\n| where QUERY_TEXT_s startswith @'SELECT *'\n| extend AccountCustomEntity = TargetUsername\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Snowflake",
                    "dataTypes": [
                      "Snowflake"
                    ]
                  }
                ],
                "tactics": [
                  "Collection"
                ],
                "techniques": [
                  "T1119"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject9').analyticRuleId9,'/'))))]",
              "properties": {
                "description": "Snowflake Analytics Rule 9",
                "parentId": "[variables('analyticRuleObject9').analyticRuleId9]",
                "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject9').analyticRuleVersion9]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
        "contentKind": "AnalyticsRule",
        "displayName": "Snowflake - Unusual query",
        "contentProductId": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "id": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject10').analyticRuleTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeUserAddAdminPrivileges_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject10').analyticRuleVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when user asigned admin privileges.",
                "displayName": "Snowflake - User granted admin privileges",
                "enabled": false,
                "query": "let adm_roles = dynamic(['SECURITYADMIN', 'SYSADMIN', 'ACCOUNTADMIN']);\nSnowflake\n| where QUERY_TYPE_s =~ 'GRANT'\n| where QUERY_TEXT_s startswith 'GRANT ROLE'\n| extend granted_role = extract(@'GRANT ROLE\\s(\\S+)\\sto\\suser', 1, QUERY_TEXT_s)\n| where granted_role in~ (adm_roles)\n| extend usr = extract(@'GRANT ROLE\\s(\\S+)\\sto\\suser(\\S+)', 2, QUERY_TEXT_s)\n| extend AccountCustomEntity = usr\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "Snowflake",
                    "dataTypes": [
                      "Snowflake"
                    ]
                  }
                ],
                "tactics": [
                  "PrivilegeEscalation"
                ],
                "techniques": [
                  "T1078"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "columnName": "AccountCustomEntity",
                        "identifier": "Name"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject10').analyticRuleId10,'/'))))]",
              "properties": {
                "description": "Snowflake Analytics Rule 10",
                "parentId": "[variables('analyticRuleObject10').analyticRuleId10]",
                "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject10').analyticRuleVersion10]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
        "contentKind": "AnalyticsRule",
        "displayName": "Snowflake - User granted admin privileges",
        "contentProductId": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
        "id": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
        "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "displayName": "Snowflake (via Codeless Connector Framework) (Preview)",
        "contentKind": "DataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "SnowflakeLogsCCPDefinition",
                  "title": "Snowflake (via Codeless Connector Framework) (Preview)",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "The Snowflake data connector provides the capability to ingest Snowflake [Login History Logs](https://docs.snowflake.com/en/sql-reference/account-usage/login_history), [Query History Logs](https://docs.snowflake.com/en/sql-reference/account-usage/query_history), [User-Grant Logs](https://docs.snowflake.com/en/sql-reference/account-usage/grants_to_users), [Role-Grant Logs](https://docs.snowflake.com/en/sql-reference/account-usage/grants_to_roles), [Load History Logs](https://docs.snowflake.com/en/sql-reference/account-usage/load_history), [Materialized View Refresh History Logs](https://docs.snowflake.com/en/sql-reference/account-usage/materialized_view_refresh_history), [Roles Logs](https://docs.snowflake.com/en/sql-reference/account-usage/roles), [Tables Logs](https://docs.snowflake.com/en/sql-reference/account-usage/tables), [Table Storage Metrics Logs](https://docs.snowflake.com/en/sql-reference/account-usage/table_storage_metrics), [Users Logs](https://docs.snowflake.com/en/sql-reference/account-usage/users) into Microsoft Sentinel using the Snowflake SQL API. Refer to [Snowflake SQL API documentation](https://docs.snowflake.com/en/developer-guide/sql-api/reference) for more information.",
                  "graphQueries": [
                    {
                      "metricName": "Total Login events received",
                      "legend": "Snowflake Login History Logs",
                      "baseQuery": "SnowflakeLogin_CL"
                    },
                    {
                      "metricName": "Total Query events received",
                      "legend": "Snowflake Query History Logs",
                      "baseQuery": "SnowflakeQuery_CL"
                    },
                    {
                      "metricName": "Total Grants to User events received",
                      "legend": "Snowflake User Grant Logs",
                      "baseQuery": "SnowflakeUserGrant_CL"
                    },
                    {
                      "metricName": "Total Grants to Role events received",
                      "legend": "Snowflake Role Grant Logs",
                      "baseQuery": "SnowflakeRoleGrant_CL"
                    },
                    {
                      "metricName": "Total Load History events received",
                      "legend": "Snowflake Load History Logs",
                      "baseQuery": "SnowflakeLoad_CL"
                    },
                    {
                      "metricName": "Total Materialized View Refresh History events received",
                      "legend": "Snowflake Materialized View Refresh History Logs",
                      "baseQuery": "SnowflakeMaterializedView_CL"
                    },
                    {
                      "metricName": "Total Role Events received",
                      "legend": "Snowflake Roles Logs",
                      "baseQuery": "SnowflakeRoles_CL"
                    },
                    {
                      "metricName": "Total Table Events received",
                      "legend": "Snowflake Tables Logs",
                      "baseQuery": "SnowflakeTables_CL"
                    },
                    {
                      "metricName": "Total Table Storage Metrics Events received",
                      "legend": "Snowflake Table Storage Metrics Logs",
                      "baseQuery": "SnowflakeTableStorageMetrics_CL"
                    },
                    {
                      "metricName": "Total Users Events received",
                      "legend": "Snowflake Users Logs",
                      "baseQuery": "SnowflakeUsers_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Get Sample Login Events of Snowflake",
                      "query": "SnowflakeLogin_CL\n | take 10"
                    },
                    {
                      "description": "Get Sample Query Events of Snowflake",
                      "query": "SnowflakeQuery_CL\n | take 10"
                    },
                    {
                      "description": "Get Sample User Grant Events of Snowflake",
                      "query": "SnowflakeUserGrant_CL\n | take 10"
                    },
                    {
                      "description": "Get Sample Role Grant Events of Snowflake",
                      "query": "SnowflakeRoleGrant_CL\n | take 10"
                    },
                    {
                      "description": "Get Sample Load History Events of Snowflake",
                      "query": "SnowflakeLoad_CL\n | take 10"
                    },
                    {
                      "description": "Get Sample Materialized View Refresh History Events of Snowflake",
                      "query": "SnowflakeMaterializedView_CL\n | take 10"
                    },
                    {
                      "description": "Get Sample Role Events of Snowflake",
                      "query": "SnowflakeRoles_CL\n | take 10"
                    },
                    {
                      "description": "Get Sample Table Events of Snowflake",
                      "query": "SnowflakeTables_CL\n | take 10"
                    },
                    {
                      "description": "Get Sample Table Storage Metrics Events of Snowflake",
                      "query": "SnowflakeTableStorageMetrics_CL\n | take 10"
                    },
                    {
                      "description": "Get Sample Users of Snowflake",
                      "query": "SnowflakeUsers_CL\n | take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "SnowflakeLogin_CL",
                      "lastDataReceivedQuery": "SnowflakeLogin_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "SnowflakeQuery_CL",
                      "lastDataReceivedQuery": "SnowflakeQuery_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "SnowflakeUserGrant_CL",
                      "lastDataReceivedQuery": "SnowflakeUserGrant_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "SnowflakeRoleGrant_CL",
                      "lastDataReceivedQuery": "SnowflakeRoleGrant_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "SnowflakeLoad_CL",
                      "lastDataReceivedQuery": "SnowflakeLoad_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "SnowflakeMaterializedView_CL",
                      "lastDataReceivedQuery": "SnowflakeMaterializedView_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "SnowflakeRoles_CL",
                      "lastDataReceivedQuery": "SnowflakeRoles_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "SnowflakeTables_CL",
                      "lastDataReceivedQuery": "SnowflakeTables_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "SnowflakeTableStorageMetrics_CL",
                      "lastDataReceivedQuery": "SnowflakeTableStorageMetrics_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "SnowflakeUsers_CL",
                      "lastDataReceivedQuery": "SnowflakeUsers_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors"
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true,
                          "action": false
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "title": "Connect Snowflake to Microsoft Sentinel",
                      "instructions": [
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": ">**NOTE:** To ensure data is presented in separate columns for each field, execute the parser using the **Snowflake()** function"
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "To gather data from Snowflake, you need to provide the following resources"
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 1. Account Identifier \n To gather data from Snowflake, you'll need Snowflake Account Identifier."
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 2. Programmatic Access Token \n To gather data from Snowflake, you'll need the Snowflake Programmatic Access Token"
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "For detailed instructions on retrieving the Account Identifier and Programmatic Access Token, please refer to the [Connector Tutorial](https://github.com/v-pmalreddy/Snowflake/blob/main/README.md)."
                          }
                        },
                        {
                          "type": "DataConnectorsGrid",
                          "parameters": {
                            "mapping": [
                              {
                                "columnName": "Account-Identifier",
                                "columnValue": "properties.addOnAttributes.AccountId"
                              },
                              {
                                "columnName": "Table Name",
                                "columnValue": "properties.dataType"
                              }
                            ],
                            "menuItems": [
                              "DeleteConnector"
                            ]
                          }
                        },
                        {
                          "type": "ContextPane",
                          "parameters": {
                            "isPrimary": true,
                            "label": "Add Account",
                            "title": "Add Account",
                            "subtitle": "Add Account",
                            "contextPaneType": "DataConnectorsContextPane",
                            "instructionSteps": [
                              {
                                "instructions": [
                                  {
                                    "type": "Textbox",
                                    "parameters": {
                                      "label": "Snowflake Account Identifier",
                                      "placeholder": "Enter Snowflake Account Identifier",
                                      "type": "text",
                                      "name": "accountId",
                                      "required": true
                                    }
                                  },
                                  {
                                    "type": "Textbox",
                                    "parameters": {
                                      "label": "Snowflake PAT",
                                      "placeholder": "Enter Snowflake PAT",
                                      "type": "password",
                                      "name": "apikey",
                                      "required": true
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "version": "[variables('dataConnectorCCPVersion')]",
                      "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                      "kind": "ResourcesDataConnector"
                    }
                  ]
                }
              }
            },
            {
              "name": "SnowflakeDCR",
              "apiVersion": "2022-06-01",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "kind": "[variables('blanks')]",
              "properties": {
                "dataCollectionEndpointId": "[variables('dataCollectionEndpointId1')]",
                "streamDeclarations": {
                  "Custom-SnowflakeLogin": {
                    "columns": [
                      {
                        "name": "data",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-SnowflakeQuery": {
                    "columns": [
                      {
                        "name": "data",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-SnowflakeUserGrant": {
                    "columns": [
                      {
                        "name": "data",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-SnowflakeRoleGrant": {
                    "columns": [
                      {
                        "name": "data",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-SnowflakeLoad": {
                    "columns": [
                      {
                        "name": "data",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-SnowflakeMaterializedView": {
                    "columns": [
                      {
                        "name": "data",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-SnowflakeRoles": {
                    "columns": [
                      {
                        "name": "data",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-SnowflakeTable": {
                    "columns": [
                      {
                        "name": "data",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-SnowflakeTableStorageMetrics": {
                    "columns": [
                      {
                        "name": "data",
                        "type": "dynamic"
                      }
                    ]
                  },
                  "Custom-SnowflakeUsers": {
                    "columns": [
                      {
                        "name": "data",
                        "type": "dynamic"
                      }
                    ]
                  }
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws1"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Custom-SnowflakeLogin"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend Data = tostring(data), TimeGenerated = now() | project TimeGenerated, Data",
                    "outputStream": "Custom-SnowflakeLogin_CL"
                  },
                  {
                    "streams": [
                      "Custom-SnowflakeQuery"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend Data = tostring(data), TimeGenerated = now() | project TimeGenerated, Data",
                    "outputStream": "Custom-SnowflakeQuery_CL"
                  },
                  {
                    "streams": [
                      "Custom-SnowflakeUserGrant"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend Data = tostring(data), TimeGenerated = now() | project TimeGenerated, Data",
                    "outputStream": "Custom-SnowflakeUserGrant_CL"
                  },
                  {
                    "streams": [
                      "Custom-SnowflakeRoleGrant"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend Data = tostring(data), TimeGenerated = now() | project TimeGenerated, Data",
                    "outputStream": "Custom-SnowflakeRoleGrant_CL"
                  },
                  {
                    "streams": [
                      "Custom-SnowflakeLoad"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend Data = tostring(data), TimeGenerated = now() | project TimeGenerated, Data",
                    "outputStream": "Custom-SnowflakeLoad_CL"
                  },
                  {
                    "streams": [
                      "Custom-SnowflakeMaterializedView"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend Data = tostring(data), TimeGenerated = now() | project TimeGenerated, Data",
                    "outputStream": "Custom-SnowflakeMaterializedView_CL"
                  },
                  {
                    "streams": [
                      "Custom-SnowflakeRoles"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend Data = tostring(data), TimeGenerated = now() | project TimeGenerated, Data",
                    "outputStream": "Custom-SnowflakeRoles_CL"
                  },
                  {
                    "streams": [
                      "Custom-SnowflakeTable"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend Data = tostring(data), TimeGenerated = now() | project TimeGenerated, Data",
                    "outputStream": "Custom-SnowflakeTables_CL"
                  },
                  {
                    "streams": [
                      "Custom-SnowflakeTableStorageMetrics"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend Data = tostring(data), TimeGenerated = now() | project TimeGenerated, Data",
                    "outputStream": "Custom-SnowflakeTableStorageMetrics_CL"
                  },
                  {
                    "streams": [
                      "Custom-SnowflakeUsers"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend Data = tostring(data), TimeGenerated = now() | project TimeGenerated, Data",
                    "outputStream": "Custom-SnowflakeUsers_CL"
                  }
                ]
              }
            },
            {
              "name": "SnowflakeLoad_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "SnowflakeLoad_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Data",
                      "type": "string"
                    }
                  ]
                }
              }
            },
            {
              "name": "SnowflakeLogin_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "SnowflakeLogin_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Data",
                      "type": "string"
                    }
                  ]
                }
              }
            },
            {
              "name": "SnowflakeMaterializedView_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "SnowflakeMaterializedView_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Data",
                      "type": "string"
                    }
                  ]
                }
              }
            },
            {
              "name": "SnowflakeQuery_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "SnowflakeQuery_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Data",
                      "type": "string"
                    }
                  ]
                }
              }
            },
            {
              "name": "SnowflakeRoleGrant_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "SnowflakeRoleGrant_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Data",
                      "type": "string"
                    }
                  ]
                }
              }
            },
            {
              "name": "SnowflakeRoles_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "SnowflakeRoles_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Data",
                      "type": "string"
                    }
                  ]
                }
              }
            },
            {
              "name": "SnowflakeTables_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "SnowflakeTables_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Data",
                      "type": "string"
                    }
                  ]
                }
              }
            },
            {
              "name": "SnowflakeTableStorageMetrics_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "SnowflakeTableStorageMetrics_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Data",
                      "type": "string"
                    }
                  ]
                }
              }
            },
            {
              "name": "SnowflakeUserGrant_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "SnowflakeUserGrant_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Data",
                      "type": "string"
                    }
                  ]
                }
              }
            },
            {
              "name": "SnowflakeUsers_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "SnowflakeUsers_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "Data",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "SnowflakeLogsCCPDefinition",
          "title": "Snowflake (via Codeless Connector Framework) (Preview)",
          "publisher": "Microsoft",
          "descriptionMarkdown": "The Snowflake data connector provides the capability to ingest Snowflake [Login History Logs](https://docs.snowflake.com/en/sql-reference/account-usage/login_history), [Query History Logs](https://docs.snowflake.com/en/sql-reference/account-usage/query_history), [User-Grant Logs](https://docs.snowflake.com/en/sql-reference/account-usage/grants_to_users), [Role-Grant Logs](https://docs.snowflake.com/en/sql-reference/account-usage/grants_to_roles), [Load History Logs](https://docs.snowflake.com/en/sql-reference/account-usage/load_history), [Materialized View Refresh History Logs](https://docs.snowflake.com/en/sql-reference/account-usage/materialized_view_refresh_history), [Roles Logs](https://docs.snowflake.com/en/sql-reference/account-usage/roles), [Tables Logs](https://docs.snowflake.com/en/sql-reference/account-usage/tables), [Table Storage Metrics Logs](https://docs.snowflake.com/en/sql-reference/account-usage/table_storage_metrics), [Users Logs](https://docs.snowflake.com/en/sql-reference/account-usage/users) into Microsoft Sentinel using the Snowflake SQL API. Refer to [Snowflake SQL API documentation](https://docs.snowflake.com/en/developer-guide/sql-api/reference) for more information.",
          "graphQueries": [
            {
              "metricName": "Total Login events received",
              "legend": "Snowflake Login History Logs",
              "baseQuery": "SnowflakeLogin_CL"
            },
            {
              "metricName": "Total Query events received",
              "legend": "Snowflake Query History Logs",
              "baseQuery": "SnowflakeQuery_CL"
            },
            {
              "metricName": "Total Grants to User events received",
              "legend": "Snowflake User Grant Logs",
              "baseQuery": "SnowflakeUserGrant_CL"
            },
            {
              "metricName": "Total Grants to Role events received",
              "legend": "Snowflake Role Grant Logs",
              "baseQuery": "SnowflakeRoleGrant_CL"
            },
            {
              "metricName": "Total Load History events received",
              "legend": "Snowflake Load History Logs",
              "baseQuery": "SnowflakeLoad_CL"
            },
            {
              "metricName": "Total Materialized View Refresh History events received",
              "legend": "Snowflake Materialized View Refresh History Logs",
              "baseQuery": "SnowflakeMaterializedView_CL"
            },
            {
              "metricName": "Total Role Events received",
              "legend": "Snowflake Roles Logs",
              "baseQuery": "SnowflakeRoles_CL"
            },
            {
              "metricName": "Total Table Events received",
              "legend": "Snowflake Tables Logs",
              "baseQuery": "SnowflakeTables_CL"
            },
            {
              "metricName": "Total Table Storage Metrics Events received",
              "legend": "Snowflake Table Storage Metrics Logs",
              "baseQuery": "SnowflakeTableStorageMetrics_CL"
            },
            {
              "metricName": "Total Users Events received",
              "legend": "Snowflake Users Logs",
              "baseQuery": "SnowflakeUsers_CL"
            }
          ],
          "sampleQueries": [
            {
              "description": "Get Sample Login Events of Snowflake",
              "query": "SnowflakeLogin_CL\n | take 10"
            },
            {
              "description": "Get Sample Query Events of Snowflake",
              "query": "SnowflakeQuery_CL\n | take 10"
            },
            {
              "description": "Get Sample User Grant Events of Snowflake",
              "query": "SnowflakeUserGrant_CL\n | take 10"
            },
            {
              "description": "Get Sample Role Grant Events of Snowflake",
              "query": "SnowflakeRoleGrant_CL\n | take 10"
            },
            {
              "description": "Get Sample Load History Events of Snowflake",
              "query": "SnowflakeLoad_CL\n | take 10"
            },
            {
              "description": "Get Sample Materialized View Refresh History Events of Snowflake",
              "query": "SnowflakeMaterializedView_CL\n | take 10"
            },
            {
              "description": "Get Sample Role Events of Snowflake",
              "query": "SnowflakeRoles_CL\n | take 10"
            },
            {
              "description": "Get Sample Table Events of Snowflake",
              "query": "SnowflakeTables_CL\n | take 10"
            },
            {
              "description": "Get Sample Table Storage Metrics Events of Snowflake",
              "query": "SnowflakeTableStorageMetrics_CL\n | take 10"
            },
            {
              "description": "Get Sample Users of Snowflake",
              "query": "SnowflakeUsers_CL\n | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "SnowflakeLogin_CL",
              "lastDataReceivedQuery": "SnowflakeLogin_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "SnowflakeQuery_CL",
              "lastDataReceivedQuery": "SnowflakeQuery_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "SnowflakeUserGrant_CL",
              "lastDataReceivedQuery": "SnowflakeUserGrant_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "SnowflakeRoleGrant_CL",
              "lastDataReceivedQuery": "SnowflakeRoleGrant_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "SnowflakeLoad_CL",
              "lastDataReceivedQuery": "SnowflakeLoad_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "SnowflakeMaterializedView_CL",
              "lastDataReceivedQuery": "SnowflakeMaterializedView_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "SnowflakeRoles_CL",
              "lastDataReceivedQuery": "SnowflakeRoles_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "SnowflakeTables_CL",
              "lastDataReceivedQuery": "SnowflakeTables_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "SnowflakeTableStorageMetrics_CL",
              "lastDataReceivedQuery": "SnowflakeTableStorageMetrics_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "SnowflakeUsers_CL",
              "lastDataReceivedQuery": "SnowflakeUsers_CL\n | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true,
                  "action": false
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "title": "Connect Snowflake to Microsoft Sentinel",
              "instructions": [
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": ">**NOTE:** To ensure data is presented in separate columns for each field, execute the parser using the **Snowflake()** function"
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "To gather data from Snowflake, you need to provide the following resources"
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 1. Account Identifier \n To gather data from Snowflake, you'll need Snowflake Account Identifier."
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 2. Programmatic Access Token \n To gather data from Snowflake, you'll need the Snowflake Programmatic Access Token"
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "For detailed instructions on retrieving the Account Identifier and Programmatic Access Token, please refer to the [Connector Tutorial](https://github.com/v-pmalreddy/Snowflake/blob/main/README.md)."
                  }
                },
                {
                  "type": "DataConnectorsGrid",
                  "parameters": {
                    "mapping": [
                      {
                        "columnName": "Account-Identifier",
                        "columnValue": "properties.addOnAttributes.AccountId"
                      },
                      {
                        "columnName": "Table Name",
                        "columnValue": "properties.dataType"
                      }
                    ],
                    "menuItems": [
                      "DeleteConnector"
                    ]
                  }
                },
                {
                  "type": "ContextPane",
                  "parameters": {
                    "isPrimary": true,
                    "label": "Add Account",
                    "title": "Add Account",
                    "subtitle": "Add Account",
                    "contextPaneType": "DataConnectorsContextPane",
                    "instructionSteps": [
                      {
                        "instructions": [
                          {
                            "type": "Textbox",
                            "parameters": {
                              "label": "Snowflake Account Identifier",
                              "placeholder": "Enter Snowflake Account Identifier",
                              "type": "text",
                              "name": "accountId",
                              "required": true
                            }
                          },
                          {
                            "type": "Textbox",
                            "parameters": {
                              "label": "Snowflake PAT",
                              "placeholder": "Enter Snowflake PAT",
                              "type": "password",
                              "name": "apikey",
                              "required": true
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorCCPVersion')]",
        "source": {
          "sourceId": "[variables('_solutionId')]",
          "name": "[variables('_solutionName')]",
          "kind": "Solution"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "version": "[variables('dataConnectorCCPVersion')]",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "kind": "ResourcesDataConnector"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnections1')]",
        "displayName": "Snowflake (via Codeless Connector Framework) (Preview)",
        "contentKind": "ResourcesDataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {
            "guidValue": {
              "defaultValue": "[[newGuid()]",
              "type": "securestring"
            },
            "innerWorkspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "accountId": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 1
            },
            "connectorDefinitionName": {
              "defaultValue": "Snowflake (via Codeless Connector Framework) (Preview)",
              "type": "securestring",
              "minLength": 1
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "dcrConfig": {
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              },
              "type": "object"
            },
            "apikey": {
              "defaultValue": "apikey",
              "type": "securestring",
              "minLength": 1
            }
          },
          "variables": {
            "_dataConnectorContentIdConnections1": "[variables('_dataConnectorContentIdConnections1')]"
          },
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'), '/', '/Microsoft.SecurityInsights', '/SnowflakeLoginLogsCCP', parameters('accountId'), parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "SnowflakeLogsCCPDefinition",
                "dataType": "SnowflakeLogin_CL",
                "addOnAttributes": {
                  "AccountId": "[[parameters('accountId')]"
                },
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apikey')]",
                  "ApiKeyName": "Authorization",
                  "ApiKeyIdentifier": "Bearer"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://',parameters('accountId'),'.snowflakecomputing.com/api/v2/statements')]",
                  "httpMethod": "POST",
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  },
                  "queryParameters": {
                    "nullable": false
                  },
                  "IsPostPayloadJson": true,
                  "queryParametersTemplate": "{\"statement\" : \"SELECT * from LOGIN_HISTORY WHERE EVENT_TIMESTAMP > '{_QueryWindowStartTime}' ORDER BY EVENT_TIMESTAMP ASC\", \"database\": \"SNOWFLAKE\", \"schema\": \"ACCOUNT_USAGE\"}"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-SnowflakeLogin",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "isActive": true
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'), '/', '/Microsoft.SecurityInsights', '/SnowflakeQueryLogsCCP', parameters('accountId'), parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "SnowflakeLogsCCPDefinition",
                "dataType": "SnowflakeQuery_CL",
                "addOnAttributes": {
                  "AccountId": "[[parameters('accountId')]"
                },
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apikey')]",
                  "ApiKeyName": "Authorization",
                  "ApiKeyIdentifier": "Bearer"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://',parameters('accountId'),'.snowflakecomputing.com/api/v2/statements')]",
                  "httpMethod": "POST",
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  },
                  "queryParameters": {
                    "nullable": false
                  },
                  "IsPostPayloadJson": true,
                  "queryParametersTemplate": "{\"statement\" : \"SELECT * from QUERY_HISTORY WHERE START_TIME > '{_QueryWindowStartTime}' ORDER BY START_TIME ASC\", \"database\": \"SNOWFLAKE\", \"schema\": \"ACCOUNT_USAGE\"}"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-SnowflakeQuery",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "isActive": true
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'), '/', '/Microsoft.SecurityInsights', '/SnowflakeUserGrantLogsCCP', parameters('accountId'), parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "SnowflakeLogsCCPDefinition",
                "dataType": "SnowflakeUserGrant_CL",
                "addOnAttributes": {
                  "AccountId": "[[parameters('accountId')]"
                },
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apikey')]",
                  "ApiKeyName": "Authorization",
                  "ApiKeyIdentifier": "Bearer"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://',parameters('accountId'),'.snowflakecomputing.com/api/v2/statements')]",
                  "httpMethod": "POST",
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  },
                  "queryParameters": {
                    "nullable": false
                  },
                  "IsPostPayloadJson": true,
                  "queryParametersTemplate": "{\"statement\" : \"SELECT * from GRANTS_TO_USERS WHERE CREATED_ON > '{_QueryWindowStartTime}' ORDER BY CREATED_ON ASC\", \"database\": \"SNOWFLAKE\", \"schema\": \"ACCOUNT_USAGE\"}"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-SnowflakeUserGrant",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "isActive": true
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'), '/', '/Microsoft.SecurityInsights', '/SnowflakeRoleGrantLogsCCP', parameters('accountId'), parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "SnowflakeLogsCCPDefinition",
                "dataType": "SnowflakeRoleGrant_CL",
                "addOnAttributes": {
                  "AccountId": "[[parameters('accountId')]"
                },
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apikey')]",
                  "ApiKeyName": "Authorization",
                  "ApiKeyIdentifier": "Bearer"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://',parameters('accountId'),'.snowflakecomputing.com/api/v2/statements')]",
                  "httpMethod": "POST",
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  },
                  "queryParameters": {
                    "nullable": false
                  },
                  "IsPostPayloadJson": true,
                  "queryParametersTemplate": "{\"statement\" : \"SELECT * from GRANTS_TO_ROLES WHERE CREATED_ON > '{_QueryWindowStartTime}' ORDER BY CREATED_ON ASC\", \"database\": \"SNOWFLAKE\", \"schema\": \"ACCOUNT_USAGE\"}"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-SnowflakeRoleGrant",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "isActive": true
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'), '/', '/Microsoft.SecurityInsights', '/SnowflakeLoadLogsCCP', parameters('accountId'), parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "SnowflakeLogsCCPDefinition",
                "dataType": "SnowflakeLoad_CL",
                "addOnAttributes": {
                  "AccountId": "[[parameters('accountId')]"
                },
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apikey')]",
                  "ApiKeyName": "Authorization",
                  "ApiKeyIdentifier": "Bearer"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://',parameters('accountId'),'.snowflakecomputing.com/api/v2/statements')]",
                  "httpMethod": "POST",
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  },
                  "queryParameters": {
                    "nullable": false
                  },
                  "IsPostPayloadJson": true,
                  "queryParametersTemplate": "{\"statement\" : \"SELECT * from LOAD_HISTORY WHERE LAST_LOAD_TIME > '{_QueryWindowStartTime}' ORDER BY LAST_LOAD_TIME ASC\", \"database\": \"SNOWFLAKE\", \"schema\": \"ACCOUNT_USAGE\"}"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-SnowflakeLoad",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "isActive": true
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'), '/', '/Microsoft.SecurityInsights', '/SnowflakeMaterializedViewLogsCCP', parameters('accountId'), parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "SnowflakeLogsCCPDefinition",
                "dataType": "SnowflakeMaterializedView_CL",
                "addOnAttributes": {
                  "AccountId": "[[parameters('accountId')]"
                },
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apikey')]",
                  "ApiKeyName": "Authorization",
                  "ApiKeyIdentifier": "Bearer"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://',parameters('accountId'),'.snowflakecomputing.com/api/v2/statements')]",
                  "httpMethod": "POST",
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  },
                  "queryParameters": {
                    "nullable": false
                  },
                  "IsPostPayloadJson": true,
                  "queryParametersTemplate": "{\"statement\" : \"SELECT * from MATERIALIZED_VIEW_REFRESH_HISTORY WHERE START_TIME > '{_QueryWindowStartTime}' ORDER BY START_TIME ASC\", \"database\": \"SNOWFLAKE\", \"schema\": \"ACCOUNT_USAGE\"}"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-SnowflakeMaterializedView",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "isActive": true
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'), '/', '/Microsoft.SecurityInsights', '/SnowflakeRolesLogsCCP', parameters('accountId'), parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "SnowflakeLogsCCPDefinition",
                "dataType": "SnowflakeRoles_CL",
                "addOnAttributes": {
                  "AccountId": "[[parameters('accountId')]"
                },
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apikey')]",
                  "ApiKeyName": "Authorization",
                  "ApiKeyIdentifier": "Bearer"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://',parameters('accountId'),'.snowflakecomputing.com/api/v2/statements')]",
                  "httpMethod": "POST",
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  },
                  "queryParameters": {
                    "nullable": false
                  },
                  "IsPostPayloadJson": true,
                  "queryParametersTemplate": "{\"statement\" : \"SELECT * from ROLES WHERE CREATED_ON > '{_QueryWindowStartTime}' ORDER BY CREATED_ON ASC\", \"database\": \"SNOWFLAKE\", \"schema\": \"ACCOUNT_USAGE\"}"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-SnowflakeRoles",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "isActive": true
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'), '/', '/Microsoft.SecurityInsights', '/SnowflakeTablesLogsCCP', parameters('accountId'), parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "SnowflakeLogsCCPDefinition",
                "dataType": "SnowflakeTables_CL",
                "addOnAttributes": {
                  "AccountId": "[[parameters('accountId')]"
                },
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apikey')]",
                  "ApiKeyName": "Authorization",
                  "ApiKeyIdentifier": "Bearer"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://',parameters('accountId'),'.snowflakecomputing.com/api/v2/statements')]",
                  "httpMethod": "POST",
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  },
                  "queryParameters": {
                    "nullable": false
                  },
                  "IsPostPayloadJson": true,
                  "queryParametersTemplate": "{\"statement\" : \"SELECT * from TABLES WHERE CREATED > '{_QueryWindowStartTime}' ORDER BY CREATED ASC\", \"database\": \"SNOWFLAKE\", \"schema\": \"ACCOUNT_USAGE\"}"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-SnowflakeTable",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "isActive": true
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'), '/', '/Microsoft.SecurityInsights', '/SnowflakeTableStorageMetricsLogsCCP', parameters('accountId'), parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "SnowflakeLogsCCPDefinition",
                "dataType": "SnowflakeTableStorageMetrics_CL",
                "addOnAttributes": {
                  "AccountId": "[[parameters('accountId')]"
                },
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apikey')]",
                  "ApiKeyName": "Authorization",
                  "ApiKeyIdentifier": "Bearer"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://',parameters('accountId'),'.snowflakecomputing.com/api/v2/statements')]",
                  "httpMethod": "POST",
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  },
                  "queryParameters": {
                    "nullable": false
                  },
                  "IsPostPayloadJson": true,
                  "queryParametersTemplate": "{\"statement\" : \"SELECT * from TABLE_STORAGE_METRICS WHERE TABLE_CREATED > '{_QueryWindowStartTime}' ORDER BY TABLE_CREATED ASC\", \"database\": \"SNOWFLAKE\", \"schema\": \"ACCOUNT_USAGE\"}"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-SnowflakeTableStorageMetrics",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "isActive": true
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'), '/', '/Microsoft.SecurityInsights', '/SnowflakeUsersLogsCCP', parameters('accountId'), parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "SnowflakeLogsCCPDefinition",
                "dataType": "SnowflakeUsers_CL",
                "addOnAttributes": {
                  "AccountId": "[[parameters('accountId')]"
                },
                "auth": {
                  "type": "APIKey",
                  "ApiKey": "[[parameters('apikey')]",
                  "ApiKeyName": "Authorization",
                  "ApiKeyIdentifier": "Bearer"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://',parameters('accountId'),'.snowflakecomputing.com/api/v2/statements')]",
                  "httpMethod": "POST",
                  "queryWindowInMin": 10,
                  "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                  "timeoutInSeconds": 60,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "Scuba"
                  },
                  "queryParameters": {
                    "nullable": false
                  },
                  "IsPostPayloadJson": true,
                  "queryParametersTemplate": "{\"statement\" : \"SELECT * from USERS WHERE CREATED_ON > '{_QueryWindowStartTime}' ORDER BY CREATED_ON ASC\", \"database\": \"SNOWFLAKE\", \"schema\": \"ACCOUNT_USAGE\"}"
                },
                "response": {
                  "eventsJsonPaths": [
                    "$"
                  ],
                  "format": "json"
                },
                "dcrConfig": {
                  "streamName": "Custom-SnowflakeUsers",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "paging": {
                  "pagingType": "LinkHeader"
                },
                "isActive": true
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Snowflake data connector with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId2'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId2')]",
                  "title": "[DEPRECATED] Snowflake (using Azure Functions)",
                  "publisher": "Snowflake",
                  "descriptionMarkdown": "The Snowflake data connector provides the capability to ingest Snowflake [login logs](https://docs.snowflake.com/en/sql-reference/account-usage/login_history.html) and [query logs](https://docs.snowflake.com/en/sql-reference/account-usage/query_history.html) into Microsoft Sentinel using the Snowflake Python Connector. Refer to [Snowflake  documentation](https://docs.snowflake.com/en/user-guide/python-connector.html) for more information.\n\n<p><span style='color:red; font-weight:bold;'>NOTE</span>: This data connector has been deprecated, consider moving to the CCF data connector available in the solution which replaces ingestion via the <a href='https://learn.microsoft.com/en-us/azure/azure-monitor/logs/custom-logs-migrate' style='color:#1890F1;'>deprecated HTTP Data Collector API</a>.</p>",
                  "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected [**Snowflake**](https://aka.ms/sentinel-SnowflakeDataConnector-parser) which is deployed with the Microsoft Sentinel Solution.",
                  "graphQueries": [
                    {
                      "metricName": "Snowflake Events",
                      "legend": "Snowflake_CL",
                      "baseQuery": "Snowflake_CL"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All Snowflake Events",
                      "query": "Snowflake_CL\n| sort by TimeGenerated desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "Snowflake_CL",
                      "lastDataReceivedQuery": "Snowflake_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Snowflake_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions on the workspace are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Microsoft.Web/sites permissions",
                        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                      },
                      {
                        "name": "Snowflake Credentials",
                        "description": "**Snowflake Account Identifier**, **Snowflake User** and **Snowflake Password** are required for connection. See the documentation to learn more about [Snowflake Account Identifier](https://docs.snowflake.com/en/user-guide/admin-account-identifier.html#). Instructions on how to create user for this connector you can find below."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This connector uses Azure Functions to connect to the Azure Blob Storage API to pull logs into Microsoft Sentinel. This might result in additional costs for data ingestion and for storing data in Azure Blob Storage costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) and [Azure Blob Storage pricing page](https://azure.microsoft.com/pricing/details/storage/blobs/) for details."
                    },
                    {
                      "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
                    },
                    {
                      "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected [**Snowflake**](https://aka.ms/sentinel-SnowflakeDataConnector-parser) which is deployed with the Microsoft Sentinel Solution."
                    },
                    {
                      "description": "**STEP 1 - Creating user in Snowflake**\n\nTo query data from Snowflake you need a user that is assigned to a role with sufficient privileges and a virtual warehouse cluster. The initial size of this cluster will be set to small but if it is insufficient, the cluster size can be increased as necessary.\n\n1. Enter the Snowflake console.\n2. Switch role to SECURITYADMIN and [create a new role](https://docs.snowflake.com/en/sql-reference/sql/create-role.html):\n```\nUSE ROLE SECURITYADMIN;\nCREATE OR REPLACE ROLE EXAMPLE_ROLE_NAME;```\n3. Switch role to SYSADMIN and [create warehouse](https://docs.snowflake.com/en/sql-reference/sql/create-warehouse.html) and [grand access](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege.html) to it:\n```\nUSE ROLE SYSADMIN;\nCREATE OR REPLACE WAREHOUSE EXAMPLE_WAREHOUSE_NAME\n  WAREHOUSE_SIZE = 'SMALL' \n  AUTO_SUSPEND = 5\n  AUTO_RESUME = true\n  INITIALLY_SUSPENDED = true;\nGRANT USAGE, OPERATE ON WAREHOUSE EXAMPLE_WAREHOUSE_NAME TO ROLE EXAMPLE_ROLE_NAME;```\n4. Switch role to SECURITYADMIN and [create a new user](https://docs.snowflake.com/en/sql-reference/sql/create-user.html):\n```\nUSE ROLE SECURITYADMIN;\nCREATE OR REPLACE USER EXAMPLE_USER_NAME\n   PASSWORD = 'example_password'\n   DEFAULT_ROLE = EXAMPLE_ROLE_NAME\n   DEFAULT_WAREHOUSE = EXAMPLE_WAREHOUSE_NAME\n;```\n5. Switch role to ACCOUNTADMIN and [grant access to snowflake database](https://docs.snowflake.com/en/sql-reference/account-usage.html#enabling-account-usage-for-other-roles) for role.\n```\nUSE ROLE ACCOUNTADMIN;\nGRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE EXAMPLE_ROLE_NAME;```\n6. Switch role to SECURITYADMIN and [assign role](https://docs.snowflake.com/en/sql-reference/sql/grant-role.html) to user:\n```\nUSE ROLE SECURITYADMIN;\nGRANT ROLE EXAMPLE_ROLE_NAME TO USER EXAMPLE_USER_NAME;```\n\n>**IMPORTANT:** Save user and API password created during this step as they will be used during deployment step."
                    },
                    {
                      "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following), as well as Snowflake credentials, readily available.",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceId"
                            ],
                            "label": "Workspace ID"
                          },
                          "type": "CopyableLabel"
                        },
                        {
                          "parameters": {
                            "fillWith": [
                              "PrimaryKey"
                            ],
                            "label": "Primary Key"
                          },
                          "type": "CopyableLabel"
                        }
                      ]
                    },
                    {
                      "instructions": [
                        {
                          "parameters": {
                            "instructionSteps": [
                              {
                                "title": "Option 1 - Azure Resource Manager (ARM) Template",
                                "description": "Use this method for automated deployment of the data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-SnowflakeDataConnector-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Snowflake Account Identifier**, **Snowflake User**, **Snowflake Password**, **Microsoft Sentinel Workspace Id**, **Microsoft Sentinel Shared Key**\n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**.\n5. Click **Purchase** to deploy."
                              },
                              {
                                "title": "Option 2 - Manual Deployment of Azure Functions",
                                "description": "Use the following step-by-step instructions to deploy the data connector manually with Azure Functions (Deployment via Visual Studio Code).",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "instructionSteps": [
                                        {
                                          "title": "Step 1 - Deploy a Function App",
                                          "description": "1. Download the [Azure Function App](https://aka.ms/sentinel-SnowflakeDataConnector-functionapp) file. Extract archive to your local development computer.\n2. Follow the [function app manual deployment instructions](https://github.com/Azure/Azure-Sentinel/blob/master/DataConnectors/AzureFunctionsManualDeployment.md#function-app-manual-deployment-instructions) to deploy the Azure Functions app using VSCode.\n3. After successful deployment of the function app, follow next steps for configuring it."
                                        },
                                        {
                                          "title": "Step 2 - Configure the Function App",
                                          "description": "1. Go to Azure Portal for the Function App configuration. \n2. In the Function App, select the Function App Name and select **Configuration**.\n3. In the **Application settings** tab, select **+ New application setting**.\n4. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tSNOWFLAKE_ACCOUNT\n\t\tSNOWFLAKE_USER\n\t\tSNOWFLAKE_PASSWORD\n\t\tWORKSPACE_ID\n\t\tSHARED_KEY\n\t\tlogAnalyticsUri (optional)\n - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://WORKSPACE_ID.ods.opinsights.azure.us`. \n4. Once all application settings have been entered, click **Save**."
                                        }
                                      ]
                                    },
                                    "type": "InstructionStepsGroup"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
                "contentId": "[variables('_dataConnectorContentId2')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId2')]",
        "contentKind": "DataConnector",
        "displayName": "[DEPRECATED] Snowflake (using Azure Functions)",
        "contentProductId": "[variables('_dataConnectorcontentProductId2')]",
        "id": "[variables('_dataConnectorcontentProductId2')]",
        "version": "[variables('dataConnectorVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId2'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId2')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId2'))]",
        "contentId": "[variables('_dataConnectorContentId2')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion2')]",
        "source": {
          "kind": "Solution",
          "name": "Snowflake",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId2'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "[DEPRECATED] Snowflake (using Azure Functions)",
          "publisher": "Snowflake",
          "descriptionMarkdown": "The Snowflake data connector provides the capability to ingest Snowflake [login logs](https://docs.snowflake.com/en/sql-reference/account-usage/login_history.html) and [query logs](https://docs.snowflake.com/en/sql-reference/account-usage/query_history.html) into Microsoft Sentinel using the Snowflake Python Connector. Refer to [Snowflake  documentation](https://docs.snowflake.com/en/user-guide/python-connector.html) for more information.\n\n<p><span style='color:red; font-weight:bold;'>NOTE</span>: This data connector has been deprecated, consider moving to the CCF data connector available in the solution which replaces ingestion via the <a href='https://learn.microsoft.com/en-us/azure/azure-monitor/logs/custom-logs-migrate' style='color:#1890F1;'>deprecated HTTP Data Collector API</a>.</p>",
          "graphQueries": [
            {
              "metricName": "Snowflake Events",
              "legend": "Snowflake_CL",
              "baseQuery": "Snowflake_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "Snowflake_CL",
              "lastDataReceivedQuery": "Snowflake_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "Snowflake_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "All Snowflake Events",
              "query": "Snowflake_CL\n| sort by TimeGenerated desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "Snowflake Credentials",
                "description": "**Snowflake Account Identifier**, **Snowflake User** and **Snowflake Password** are required for connection. See the documentation to learn more about [Snowflake Account Identifier](https://docs.snowflake.com/en/user-guide/admin-account-identifier.html#). Instructions on how to create user for this connector you can find below."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the Azure Blob Storage API to pull logs into Microsoft Sentinel. This might result in additional costs for data ingestion and for storing data in Azure Blob Storage costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) and [Azure Blob Storage pricing page](https://azure.microsoft.com/pricing/details/storage/blobs/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected [**Snowflake**](https://aka.ms/sentinel-SnowflakeDataConnector-parser) which is deployed with the Microsoft Sentinel Solution."
            },
            {
              "description": "**STEP 1 - Creating user in Snowflake**\n\nTo query data from Snowflake you need a user that is assigned to a role with sufficient privileges and a virtual warehouse cluster. The initial size of this cluster will be set to small but if it is insufficient, the cluster size can be increased as necessary.\n\n1. Enter the Snowflake console.\n2. Switch role to SECURITYADMIN and [create a new role](https://docs.snowflake.com/en/sql-reference/sql/create-role.html):\n```\nUSE ROLE SECURITYADMIN;\nCREATE OR REPLACE ROLE EXAMPLE_ROLE_NAME;```\n3. Switch role to SYSADMIN and [create warehouse](https://docs.snowflake.com/en/sql-reference/sql/create-warehouse.html) and [grand access](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege.html) to it:\n```\nUSE ROLE SYSADMIN;\nCREATE OR REPLACE WAREHOUSE EXAMPLE_WAREHOUSE_NAME\n  WAREHOUSE_SIZE = 'SMALL' \n  AUTO_SUSPEND = 5\n  AUTO_RESUME = true\n  INITIALLY_SUSPENDED = true;\nGRANT USAGE, OPERATE ON WAREHOUSE EXAMPLE_WAREHOUSE_NAME TO ROLE EXAMPLE_ROLE_NAME;```\n4. Switch role to SECURITYADMIN and [create a new user](https://docs.snowflake.com/en/sql-reference/sql/create-user.html):\n```\nUSE ROLE SECURITYADMIN;\nCREATE OR REPLACE USER EXAMPLE_USER_NAME\n   PASSWORD = 'example_password'\n   DEFAULT_ROLE = EXAMPLE_ROLE_NAME\n   DEFAULT_WAREHOUSE = EXAMPLE_WAREHOUSE_NAME\n;```\n5. Switch role to ACCOUNTADMIN and [grant access to snowflake database](https://docs.snowflake.com/en/sql-reference/account-usage.html#enabling-account-usage-for-other-roles) for role.\n```\nUSE ROLE ACCOUNTADMIN;\nGRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE EXAMPLE_ROLE_NAME;```\n6. Switch role to SECURITYADMIN and [assign role](https://docs.snowflake.com/en/sql-reference/sql/grant-role.html) to user:\n```\nUSE ROLE SECURITYADMIN;\nGRANT ROLE EXAMPLE_ROLE_NAME TO USER EXAMPLE_USER_NAME;```\n\n>**IMPORTANT:** Save user and API password created during this step as they will be used during deployment step."
            },
            {
              "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following), as well as Snowflake credentials, readily available.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "instructions": [
                {
                  "parameters": {
                    "instructionSteps": [
                      {
                        "title": "Option 1 - Azure Resource Manager (ARM) Template",
                        "description": "Use this method for automated deployment of the data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-SnowflakeDataConnector-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Snowflake Account Identifier**, **Snowflake User**, **Snowflake Password**, **Microsoft Sentinel Workspace Id**, **Microsoft Sentinel Shared Key**\n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**.\n5. Click **Purchase** to deploy."
                      },
                      {
                        "title": "Option 2 - Manual Deployment of Azure Functions",
                        "description": "Use the following step-by-step instructions to deploy the data connector manually with Azure Functions (Deployment via Visual Studio Code).",
                        "instructions": [
                          {
                            "parameters": {
                              "instructionSteps": [
                                {
                                  "title": "Step 1 - Deploy a Function App",
                                  "description": "1. Download the [Azure Function App](https://aka.ms/sentinel-SnowflakeDataConnector-functionapp) file. Extract archive to your local development computer.\n2. Follow the [function app manual deployment instructions](https://github.com/Azure/Azure-Sentinel/blob/master/DataConnectors/AzureFunctionsManualDeployment.md#function-app-manual-deployment-instructions) to deploy the Azure Functions app using VSCode.\n3. After successful deployment of the function app, follow next steps for configuring it."
                                },
                                {
                                  "title": "Step 2 - Configure the Function App",
                                  "description": "1. Go to Azure Portal for the Function App configuration. \n2. In the Function App, select the Function App Name and select **Configuration**.\n3. In the **Application settings** tab, select **+ New application setting**.\n4. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tSNOWFLAKE_ACCOUNT\n\t\tSNOWFLAKE_USER\n\t\tSNOWFLAKE_PASSWORD\n\t\tWORKSPACE_ID\n\t\tSHARED_KEY\n\t\tlogAnalyticsUri (optional)\n - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://WORKSPACE_ID.ods.opinsights.azure.us`. \n4. Once all application settings have been entered, click **Save**."
                                }
                              ]
                            },
                            "type": "InstructionStepsGroup"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ]
            }
          ],
          "id": "[variables('_uiConfigId2')]",
          "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected [**Snowflake**](https://aka.ms/sentinel-SnowflakeDataConnector-parser) which is deployed with the Microsoft Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject1').huntingQueryTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeAdminSources_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject1').huntingQueryVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Snowflake_Hunting_Query_1",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snowflake - Privileged users' source IP addresses",
                "category": "Hunting Queries",
                "query": "Snowflake\n| where TimeGenerated > ago(24h)\n| where QUERY_TYPE_s =~ 'SELECT'\n| summarize roles = makeset(ROLE_NAME_s) by TargetUsername\n| join(Snowflake\n      | where TimeGenerated > ago(24h)\n      | where EventType =~ 'LOGIN') on TargetUsername\n| project-away TargetUsername1\n| where roles has_any ('SECURITYADMIN', 'SYSADMIN', 'ACCOUNTADMIN')\n| summarize ip_lst = makeset(SrcDvcIpAddr) by TargetUsername\n| extend AccountCustomEntity = TargetUsername, IPCustomEntity = ip_lst\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for privileged users' source IP addresses."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1078"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1),'/'))))]",
              "properties": {
                "description": "Snowflake Hunting Query 1",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1)]",
                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
        "contentKind": "HuntingQuery",
        "displayName": "Snowflake - Privileged users' source IP addresses",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject2').huntingQueryTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeDeletedDatabases_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject2').huntingQueryVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Snowflake_Hunting_Query_2",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snowflake - Deleted databases",
                "category": "Hunting Queries",
                "query": "Snowflake\n| where TimeGenerated > ago(24h)\n| where QUERY_TYPE_s =~ 'DROP'\n| where QUERY_TEXT_s has 'database'\n| where EXECUTION_STATUS_s =~ 'SUCCESS'\n| extend AccountCustomEntity = TargetUsername\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for deleted databases."
                  },
                  {
                    "name": "tactics",
                    "value": "Impact"
                  },
                  {
                    "name": "techniques",
                    "value": "T1485"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2),'/'))))]",
              "properties": {
                "description": "Snowflake Hunting Query 2",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2)]",
                "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject2').huntingQueryVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
        "contentKind": "HuntingQuery",
        "displayName": "Snowflake - Deleted databases",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject3').huntingQueryTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeDeletedTables_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject3').huntingQueryVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Snowflake_Hunting_Query_3",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snowflake - Deleted tables",
                "category": "Hunting Queries",
                "query": "Snowflake\n| where TimeGenerated > ago(24h)\n| where QUERY_TYPE_s =~ 'DROP'\n| where QUERY_TEXT_s has 'table'\n| where EXECUTION_STATUS_s =~ 'SUCCESS'\n| extend AccountCustomEntity = TargetUsername\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for deleted tables."
                  },
                  {
                    "name": "tactics",
                    "value": "Impact"
                  },
                  {
                    "name": "techniques",
                    "value": "T1485"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3),'/'))))]",
              "properties": {
                "description": "Snowflake Hunting Query 3",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3)]",
                "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject3').huntingQueryVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
        "contentKind": "HuntingQuery",
        "displayName": "Snowflake - Deleted tables",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject4').huntingQueryTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeDormantUser_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject4').huntingQueryVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Snowflake_Hunting_Query_4",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snowflake - Rarely used account",
                "category": "Hunting Queries",
                "query": "Snowflake\n| where TimeGenerated > ago(30d)\n| where EventType =~ 'LOGIN'\n| where IS_SUCCESS_s =~ 'Yes'\n| summarize last_login_time = max(TimeGenerated) by TargetUsername\n| where last_login_time < ago(20d)\n| extend AccountCustomEntity = TargetUsername\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for rarely used accounts."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1078"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject4')._huntingQuerycontentId4),'/'))))]",
              "properties": {
                "description": "Snowflake Hunting Query 4",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject4')._huntingQuerycontentId4)]",
                "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject4').huntingQueryVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
        "contentKind": "HuntingQuery",
        "displayName": "Snowflake - Rarely used account",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject4')._huntingQuerycontentId4,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject4')._huntingQuerycontentId4,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject5').huntingQueryTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeFailedLogins_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject5').huntingQueryVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Snowflake_Hunting_Query_5",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snowflake - Failed logins",
                "category": "Hunting Queries",
                "query": "Snowflake\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'LOGIN'\n| where IS_SUCCESS_s =~ 'No'\n| summarize count() by TargetUsername\n| extend AccountCustomEntity = TargetUsername\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for failed logins."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1078"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject5')._huntingQuerycontentId5),'/'))))]",
              "properties": {
                "description": "Snowflake Hunting Query 5",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject5')._huntingQuerycontentId5)]",
                "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject5').huntingQueryVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
        "contentKind": "HuntingQuery",
        "displayName": "Snowflake - Failed logins",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject5')._huntingQuerycontentId5,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject5')._huntingQuerycontentId5,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject6').huntingQueryTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeHighCreditConsumingQueries_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject6').huntingQueryVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Snowflake_Hunting_Query_6",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snowflake - Credit consuming queries",
                "category": "Hunting Queries",
                "query": "let acceptable_credits = 0.00001;\nSnowflake\n| where TimeGenerated > ago(24h)\n| where CREDITS_USED_CLOUD_SERVICES_d > acceptable_credits\n| summarize by QUERY_TEXT_s, CREDITS_USED_CLOUD_SERVICES_d, TargetUsername\n| order by CREDITS_USED_CLOUD_SERVICES_d\n| extend AccountCustomEntity = TargetUsername\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for queries which consume abnormal amount of credits."
                  },
                  {
                    "name": "tactics",
                    "value": "Impact"
                  },
                  {
                    "name": "techniques",
                    "value": "T1499"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject6')._huntingQuerycontentId6),'/'))))]",
              "properties": {
                "description": "Snowflake Hunting Query 6",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject6')._huntingQuerycontentId6)]",
                "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject6').huntingQueryVersion6]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
        "contentKind": "HuntingQuery",
        "displayName": "Snowflake - Credit consuming queries",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject6')._huntingQuerycontentId6,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject6')._huntingQuerycontentId6,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject7').huntingQueryTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeTimeConsumingQueries_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject7').huntingQueryVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Snowflake_Hunting_Query_7",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snowflake - Time consuming queries",
                "category": "Hunting Queries",
                "query": "let acceptable_duration = 1000;\nSnowflake\n| where TimeGenerated > ago(24h)\n| where TOTAL_ELAPSED_TIME_d > acceptable_duration\n| summarize by QUERY_TEXT_s, TOTAL_ELAPSED_TIME_d, TargetUsername\n| order by TOTAL_ELAPSED_TIME_d\n| extend AccountCustomEntity = TargetUsername\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for time consuming queries."
                  },
                  {
                    "name": "tactics",
                    "value": "Impact"
                  },
                  {
                    "name": "techniques",
                    "value": "T1499"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject7')._huntingQuerycontentId7),'/'))))]",
              "properties": {
                "description": "Snowflake Hunting Query 7",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject7')._huntingQuerycontentId7)]",
                "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject7').huntingQueryVersion7]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
        "contentKind": "HuntingQuery",
        "displayName": "Snowflake - Time consuming queries",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject7')._huntingQuerycontentId7,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject7')._huntingQuerycontentId7,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject8').huntingQueryTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeUnknownQueryType_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject8').huntingQueryVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Snowflake_Hunting_Query_8",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snowflake - Unknown query type",
                "category": "Hunting Queries",
                "query": "Snowflake\n| where TimeGenerated > ago(24h)\n| where QUERY_TYPE_s =~ 'UNKNOWN'\n| summarize by QUERY_TEXT_s, TargetUsername\n| extend AccountCustomEntity = TargetUsername\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for queries of type UNKNOWN."
                  },
                  {
                    "name": "tactics",
                    "value": "Impact"
                  },
                  {
                    "name": "techniques",
                    "value": "T1499"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject8')._huntingQuerycontentId8),'/'))))]",
              "properties": {
                "description": "Snowflake Hunting Query 8",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject8')._huntingQuerycontentId8)]",
                "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject8').huntingQueryVersion8]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
        "contentKind": "HuntingQuery",
        "displayName": "Snowflake - Unknown query type",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject8')._huntingQuerycontentId8,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject8')._huntingQuerycontentId8,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject9').huntingQueryTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeUnusedAdmins_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject9').huntingQueryVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Snowflake_Hunting_Query_9",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snowflake - Rarely used privileged users",
                "category": "Hunting Queries",
                "query": "Snowflake\n| where TimeGenerated > ago(30d)\n| where QUERY_TYPE_s =~ 'SELECT'\n| summarize roles = makeset(ROLE_NAME_s) by TargetUsername\n| join(Snowflake\n      | where TimeGenerated > ago(30d)\n      | where EventType =~ 'LOGIN'\n      | summarize last_login_t = max(TimeGenerated) by TargetUsername) on TargetUsername\n| project-away TargetUsername1\n| where roles has_any ('SECURITYADMIN', 'SYSADMIN', 'ACCOUNTADMIN')\n| where last_login_t < ago(20d)\n| extend AccountCustomEntity = TargetUsername\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for rarely used privileged users."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1078"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject9')._huntingQuerycontentId9),'/'))))]",
              "properties": {
                "description": "Snowflake Hunting Query 9",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject9')._huntingQuerycontentId9)]",
                "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject9').huntingQueryVersion9]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
        "contentKind": "HuntingQuery",
        "displayName": "Snowflake - Rarely used privileged users",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject9')._huntingQuerycontentId9,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject9')._huntingQuerycontentId9,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject10').huntingQueryTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SnowflakeUserSources_HuntingQueries Hunting Query with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject10').huntingQueryVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Snowflake_Hunting_Query_10",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snowflake - Users' source IP addresses",
                "category": "Hunting Queries",
                "query": "Snowflake\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'LOGIN'\n| where IS_SUCCESS_s =~ 'Yes'\n| summarize ip_lst = makeset(SrcDvcIpAddr) by TargetUsername\n| extend AccountCustomEntity = TargetUsername, IPCustomEntity = ip_lst\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Query searches for users' source IP addresses."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1078"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject10')._huntingQuerycontentId10),'/'))))]",
              "properties": {
                "description": "Snowflake Hunting Query 10",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject10')._huntingQuerycontentId10)]",
                "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject10').huntingQueryVersion10]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
        "contentKind": "HuntingQuery",
        "displayName": "Snowflake - Users' source IP addresses",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject10')._huntingQuerycontentId10,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject10')._huntingQuerycontentId10,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Snowflake Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Snowflake",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Snowflake",
                "query": "let Snowflake_view = view () {\n  Snowflake_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | extend \n    EventStartTime = column_ifexists('START_TIME_t', ''),\n    EventType = column_ifexists('EVENT_TYPE_s', ''),\n    TargetUsername = column_ifexists('USER_NAME_s', ''),\n    SrcDvcIpAddr = column_ifexists('CLIENT_IP_s', '')\n  | extend \n    User=TargetUsername,\n    EventEndTime=iff(isnotempty(EVENT_TIMESTAMP_t), EVENT_TIMESTAMP_t, END_TIME_t)\n};\nlet SnowflakeLogin_view = view () {\n  SnowflakeLogin_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend Time = toreal(DataList[1])\n  | extend\n    LoginEventId = tostring(DataList[0]),\n    EventEndTime = unixtime_seconds_todatetime(Time),\n    EventType = tostring(DataList[2]),\n    TargetUsername = tostring(DataList[3]),\n    SrcDvcIpAddr = tostring(DataList[4]),\n    LoginReportedClientType = tostring(DataList[5]),\n    LoginReportedClientVersion = tostring(DataList[6]),\n    LoginFirstAuthenticationFactor = tostring(DataList[7]),\n    LoginSecondAuthenticationFactor = tostring(DataList[8]),\n    LoginIsSuccess = tostring(DataList[9]),\n    LoginErrorCode = tostring(DataList[10]),\n    LoginErrorMessage = tostring(DataList[11]),\n    LoginRelatedEventId = tostring(DataList[12]),\n    LoginConnection = tostring(DataList[13]),\n    LoginClientPrivateLinkId = tostring(DataList[14])\n  | extend User = TargetUsername\n};\nlet SnowflakeUserGrant_view = view ()  {\n  SnowflakeUserGrant_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend \n    CTime = toreal(DataList[0]),\n    DTime = toreal(DataList[1])\n  | extend\n    UserGrantCreatedOn = unixtime_seconds_todatetime(CTime),\n    UserGrantDeletedOn = unixtime_seconds_todatetime(DTime),\n    UserRole = tostring(DataList[2]),\n    UserGrantGrantedTo = tostring(DataList[3]),\n    UserGrantGranteeName = tostring(DataList[4]),\n    UserGrantGrantedBy = tostring(DataList[5])\n};\nlet SnowflakeMaterializedView_view = view () {\n  SnowflakeMaterializedView_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend \n    STime = toreal(DataList[0]),\n    ETime = toreal(DataList[1])\n  | extend\n    MaterializedViewStartTime = unixtime_seconds_todatetime(STime),\n    MaterializedViewEndTime = unixtime_seconds_todatetime(ETime),\n    MaterializedViewCreditsUsed = tostring(DataList[2]),\n    MaterializedViewTableId = tostring(DataList[3]),\n    MaterializedViewTableName = tostring(DataList[4]),\n    MaterializedViewSchemaId = tostring(DataList[5]),\n    MaterializedViewSchemaName = tostring(DataList[6]),\n    MaterializedViewDatabaseId = tostring(DataList[7]),\n    MaterializedViewDatabaseName = tostring(DataList[8])\n};\nlet SnowflakeRoles_view = view () {\n  SnowflakeRoles_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend \n    CTime = toreal(DataList[1]),\n    DTime = toreal(DataList[2])\n  | extend\n    RoleId = tostring(DataList[0]),\n    RoleCreatedOn = unixtime_seconds_todatetime(CTime),\n    RoleDeletedOn = unixtime_seconds_todatetime(DTime),\n    RoleName = tostring(DataList[3]),\n    RoleComment = tostring(DataList[4]),\n    RoleOwner = tostring(DataList[5]),\n    RoleType = tostring(DataList[6]),\n    RoleDatabaseName = tostring(DataList[7]),\n    RoleInstanceId = tostring(DataList[8]),\n    OwnerRoleType = tostring(DataList[9])\n};\nlet SnowflakeRoleGrant_view = view () {\n  SnowflakeRoleGrant_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend \n    CTime = toreal(DataList[0]),\n    MTime = toreal(DataList[1]),\n    DTime = toreal(DataList[11])\n  | extend \n    RoleGrantCreatedOn = unixtime_seconds_todatetime(CTime),\n    RoleGrantModifiedOn = unixtime_seconds_todatetime(MTime),\n    RoleGrantPrivilege = tostring(DataList[2]),\n    RoleGrantGrantedOn = tostring(DataList[3]),\n    RoleGrantName = tostring(DataList[4]),\n    RoleGrantTableCatalog = tostring(DataList[5]),\n    RoleGrantTableSchema = tostring(DataList[6]),\n    RoleGrantGrantedTo = tostring(DataList[7]),\n    RoleGrantGranteeName = tostring(DataList[8]),\n    RoleGrantGrantOption = tobool(DataList[9]),\n    RoleGrantGrantedBy = tostring(DataList[10]),\n    RoleGrantDeletedOn = unixtime_seconds_todatetime(DTime),\n    RoleGrantGrantedByRoleType = tostring(DataList[12]),\n    RoleGrantObjectInstance = tostring(DataList[13])\n};\nlet SnowflakeLoad_view = view () {\n  SnowflakeLoad_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend LTime = toreal(DataList[7])\n  | extend\n    LoadTableId = tostring(DataList[0]),\n    LoadTableName = tostring(DataList[1]),\n    LoadSchemaId = tostring(DataList[2]),\n    LoadSchemaName = tostring(DataList[3]),\n    LoadCatalogId = tostring(DataList[4]),\n    LoadCatalogName = tostring(DataList[5]),\n    LoadFileName = tostring(DataList[6]),\n    LastLoadTime = unixtime_seconds_todatetime(LTime),\n    LoadStatus = tostring(DataList[8]),\n    LoadRowCount = tostring(DataList[9]),\n    LoadRowParsed = tostring(DataList[10]),\n    LoadFirstErrorMessage = tostring(DataList[11]),\n    LoadFirstErrorLineNumber = tostring(DataList[12]),\n    LoadFirstErrorCharacterPosition = tostring(DataList[13]),\n    LoadFirstErrorColName = tostring(DataList[14]),\n    LoadErrorCount = tostring(DataList[15]),\n    LoadErrorLimit = tostring(DataList[16])\n};\nlet SnowflakeTableStorageMetrics_view = view () {\n  SnowflakeTableStorageMetrics_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend\n    TCTime = toreal(DataList[13]),\n    TDTime = toreal(DataList[14]),\n    TFTime = toreal(DataList[15]),\n    SCTime = toreal(DataList[16]),\n    SDTime = toreal(DataList[17]),\n    CCTime = toreal(DataList[18]),\n    CDTime = toreal(DataList[19])\n  | extend \n    TableStorageMetricsId = tostring(DataList[0]),\n    TableStorageMetricsTableName = tostring(DataList[1]),\n    TableStorageMetricsTableSchemaId = tostring(DataList[2]),\n    TableStorageMetricsTableSchema = tostring(DataList[3]),\n    TableStorageMetricsTableCatalogId = tostring(DataList[4]),\n    TableStorageMetricsTableCatalog = tostring(DataList[5]),\n    TableStorageMetricsCloneGroupId = tostring(DataList[6]),\n    TableStorageMetricsIsTransient = tostring(DataList[7]),\n    TableStorageMetricsActiveBytes = tostring(DataList[8]),\n    TableStorageMetricsTimeTravelBytes = tostring(DataList[9]),\n    TableStorageMetricsFailsafeBytes = tostring(DataList[10]),\n    TableStorageMetricsRetainedForCloneBytes = tostring(DataList[11]),\n    TableStorageMetricsDeleted = tobool(DataList[12]),\n    TableStorageMetricsTableCreated = unixtime_seconds_todatetime(TCTime),\n    TableStorageMetricsTableDropped = unixtime_seconds_todatetime(TDTime),\n    TableStorageMetricsTableEnteredFailsafe = unixtime_seconds_todatetime(TFTime),\n    TableStorageMetricsSchemaCreated = unixtime_seconds_todatetime(SCTime),\n    TableStorageMetricsSchemaDropped = unixtime_seconds_todatetime(SDTime),\n    TableStorageMetricsCatalogCreated = unixtime_seconds_todatetime(CCTime),\n    TableStorageMetricsCatalogDropped = unixtime_seconds_todatetime(CDTime),\n    TableStorageMetricsComment = tostring(DataList[20]),\n    TableStorageMetricsInstanceId = tostring(DataList[21])\n};\nlet SnowflakeTables_view = view () {\n  SnowflakeTables_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend\n    TCTime = toreal(DataList[24]),\n    LATime = toreal(DataList[25]),\n    LDTime = toreal(DataList[26]),\n    TDTime = toreal(DataList[28])\n  | extend \n    TableId = tostring(DataList[0]),\n    TableName = tostring(DataList[1]),\n    TableSchemaId = tostring(DataList[2]),\n    TableSchema = tostring(DataList[3]),\n    TableCatalogId = tostring(DataList[4]),\n    TableCatalog = tostring(DataList[5]),\n    TableOwner = tostring(DataList[6]),\n    TableType = tostring(DataList[7]),\n    TableIsTransient = tostring(DataList[8]),\n    TableIsIceberg = tostring(DataList[9]),\n    TableIsDynamic = tostring(DataList[10]),\n    TableIsHybrid = tostring(DataList[11]),\n    TableClusteringKey = tostring(DataList[12]),\n    TableRowCount = tostring(DataList[13]),\n    TableBytes = tostring(DataList[14]),\n    TableRetentionTime = tostring(DataList[15]),\n    TableSelfReferencingColumnName = tostring(DataList[16]),\n    TableReferenceGeneration = tostring(DataList[17]),\n    TableUserDefinedTypeCatalog = tostring(DataList[18]),\n    TableUserDefinedTypeSchema = tostring(DataList[19]),\n    TableUserDefinedTypeName = tostring(DataList[20]),\n    TableIsInsertableInto = tostring(DataList[21]),\n    TableIsTyped = tostring(DataList[22]),\n    TableCommitAction = tostring(DataList[23]),\n    TableCreated = unixtime_seconds_todatetime(TCTime),\n    TableLastAltered = unixtime_seconds_todatetime(LATime),\n    TableLastDDL = unixtime_seconds_todatetime(LDTime),\n    TableLastDDLBy = tostring(DataList[27]),\n    TableDeleted = unixtime_seconds_todatetime(TDTime),\n    TableAutoClusteringOn = tostring(DataList[29]),\n    TableComment = tostring(DataList[30]),\n    TableOwnerRoleType = tostring(DataList[31]),\n    TableInstanceId = tostring(DataList[32])\n};\nlet SnowflakeUsers_view = view () {\n  SnowflakeUsers_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend\n    CTime = toreal(DataList[2]),\n    DTime = toreal(DataList[3]),\n    BMTime = toreal(DataList[20]),\n    LSLTime = toreal(DataList[21]),\n    ETime = toreal(DataList[22]),\n    LUTime = toreal(DataList[23]),\n    PLSTime = toreal(DataList[25])\n  | extend\n    UserId = tostring(DataList[0]),\n    UserName = tostring(DataList[1]),\n    UserCreatedOn = unixtime_seconds_todatetime(CTime),\n    UserDeletedOn = unixtime_seconds_todatetime(DTime),\n    UserLoginName = tostring(DataList[4]),\n    UserDisplayName = tostring(DataList[5]),\n    UserFirstName = tostring(DataList[6]),\n    UserLastName = tostring(DataList[7]),\n    UserEmail = tostring(DataList[8]),\n    UserMustChangePassword = tobool(DataList[9]),\n    UserHasPassword = tobool(DataList[10]),\n    UserComment = tostring(DataList[11]),\n    UserDisabled = tostring(DataList[12]),\n    UserSnowflakeLock = tostring(DataList[13]),\n    UserDefaultWarehouse = tostring(DataList[14]),\n    UserDefaultNamespace = tostring(DataList[15]),\n    UserDefaultRole = tostring(DataList[16]),\n    UserExtAuthnDuo = tobool(DataList[17]),\n    UserExtAuthnUid = tostring(DataList[18]),\n    UserHasMFA = tobool(DataList[19]),\n    UserBypassMFAUntil = unixtime_seconds_todatetime(BMTime),\n    UserLastSuccessLogin = unixtime_seconds_todatetime(LSLTime),\n    UserExpiresAt = unixtime_seconds_todatetime(ETime),\n    UserLockedUntilTime = unixtime_seconds_todatetime(LUTime),\n    UserHasRSAPublicKey = tobool(DataList[24]),\n    UserPasswordLastSetTime = unixtime_seconds_todatetime(PLSTime),\n    UserOwner = tostring(DataList[26]),\n    UserDefaultSecondaryRole = tostring(DataList[27]),\n    UserType = tostring(DataList[28]),\n    UserDatabaseName = tostring(DataList[29]),\n    UserDatabaseId = tostring(DataList[30]),\n    UserSchemaName = tostring(DataList[31]),\n    UserSchemaId = tostring(DataList[32])\n};\nlet SnowflakeQuery_view = view () {\n  SnowflakeQuery_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend\n    STime = toreal(DataList[19]),\n    ETime = toreal(DataList[20])\n  | extend\n    QueryId = tostring(DataList[0]),\n    QueryText = tostring(DataList[1]),\n    QueryDatabaseId = tostring(DataList[2]),\n    QueryDatabaseName = tostring(DataList[3]),\n    QuerySchemaId = tostring(DataList[4]),\n    QuerySchemaName = tostring(DataList[5]),\n    QueryType = tostring(DataList[6]),\n    QuerySessionId = tostring(DataList[7]),\n    QueryUserName = tostring(DataList[8]),\n    QueryRoleName = tostring(DataList[9]),\n    QueryWarehouseId = tostring(DataList[10]),\n    QueryWarehouseName = tostring(DataList[11]),\n    QueryWarehouseSize = tostring(DataList[12]),\n    QueryWarehouseType = tostring(DataList[13]),\n    QueryClusterNumber = tostring(DataList[14]),\n    QueryTag = tostring(DataList[15]),\n    QueryExecutionStatus = tostring(DataList[16]),\n    QueryErrorCode = tostring(DataList[17]),\n    QueryErrorMessage = tostring(DataList[18]),\n    QueryStartTime = unixtime_seconds_todatetime(STime),\n    EventEndTime = unixtime_seconds_todatetime(ETime),\n    QueryTotalElapsedTime = tostring(DataList[21]),\n    QueryBytesScanned = tostring(DataList[22]),\n    QueryPercentageScannedFromCache = tostring(DataList[23]),\n    QueryBytesWritten = tostring(DataList[24]),\n    QueryBytesWrittenToResult = tostring(DataList[25]),\n    QueryBytesReadFromResult = tostring(DataList[26]),\n    QueryRowsProduced = tostring(DataList[27]),\n    QueryRowsInserted = tostring(DataList[28]),\n    QueryRowsUpdated = tostring(DataList[29]),\n    QueryRowsDeleted = tostring(DataList[30]),\n    QueryRowsUnloaded = tostring(DataList[31]),\n    QueryBytesDeleted = tostring(DataList[32]),\n    QueryPartitionsScanned = tostring(DataList[33]),\n    QueryPartitionsTotal = tostring(DataList[34]),\n    QueryBytesSpilledToLocalStorage = tostring(DataList[35]),\n    QueryBytesSpilledToRemoteStorage = tostring(DataList[36]),\n    QueryBytesSentOverTheNetwork = tostring(DataList[37]),\n    QueryCompilationTime = tostring(DataList[38]),\n    QueryExecutionTime = tostring(DataList[39]),\n    QueryQueuedProvisioningTime = tostring(DataList[40]),\n    QueryQueuedRepairTime = tostring(DataList[41]),\n    QueryQueuedOverloadTime = tostring(DataList[42]),\n    QueryTransactionBlockedTime = tostring(DataList[43]),\n    QueryOutboundDataTransferCloud = tostring(DataList[44]),\n    QueryOutboundDataTransferRegion = tostring(DataList[45]),\n    QueryOutboundDataTransferBytes = tostring(DataList[46]),\n    QueryInboundDataTransferCloud = tostring(DataList[47]),\n    QueryInboundDataTransferRegion = tostring(DataList[48]),\n    QueryInboundDataTransferBytes = tostring(DataList[49]),\n    QueryListExternalFilesTime = tostring(DataList[50]),\n    QueryCreditsUsedCloudServices = tostring(DataList[51]),\n    QueryReleaseVersion = tostring(DataList[52]),\n    QueryExternalFunctionTotalInvocations = tostring(DataList[53]),\n    QueryExternalFunctionTotalSentRows = tostring(DataList[54]),\n    QueryExternalFunctionTotalReceivedRows = tostring(DataList[55]),\n    QueryExternalFunctionTotalSentBytes = tostring(DataList[56]),\n    QueryExternalFunctionTotalReceivedBytes = tostring(DataList[57]),\n    QueryLoadPercent = tostring(DataList[58]),\n    QueryIsClientGeneratedStatement = tobool(DataList[59]),\n    QueryAccelerationBytesScanned = tostring(DataList[60]),\n    QueryAccelerationPartitionsScanned = tostring(DataList[61]),\n    QueryAccelerationUpperLimitScaleFactor = tostring(DataList[62]),\n    QueryTransactionId = tostring(DataList[63]),\n    ChildQueriesWaitTime = tostring(DataList[64]),\n    QueryRoleType = tostring(DataList[65]),\n    QueryHash = tostring(DataList[66]),\n    QueryHashVersion = tostring(DataList[67]),\n    QueryParameterizedHash = tostring(DataList[68]),\n    QueryParameterizedHashVersion = tostring(DataList[69]),\n    QuerySecondaryRoleStats = tostring(DataList[70]),\n    QueryRowsWrittenToResult = tostring(DataList[71]),\n    QueryRetryTime = tostring(DataList[72]),\n    QueryRetryCause = tostring(DataList[73]),\n    QueryFaultHandlingTime = tostring(DataList[74]),\n    QueryUserType = tostring(DataList[75]),\n    QueryUserDatabaseName = tostring(DataList[76]),\n    QueryUserDatabaseId = tostring(DataList[77]),\n    QueryUserSchemaName = tostring(DataList[78]),\n    QueryUserSchemaId = tostring(DataList[79])\n};\nunion isfuzzy=true\n(Snowflake_view),\n(SnowflakeLogin_view),\n(SnowflakeUserGrant_view),\n(SnowflakeMaterializedView_view),\n(SnowflakeRoles_view),\n(SnowflakeRoleGrant_view),\n(SnowflakeLoad_view),\n(SnowflakeTableStorageMetrics_view),\n(SnowflakeTables_view),\n(SnowflakeUsers_view),\n(SnowflakeQuery_view)\n| project\n  EventVendor, \n  EventProduct, \n  EventStartTime,\n  EventType,\n  TargetUsername,\n  SrcDvcIpAddr,\n  User,\n  EventEndTime,\n  LoginEventId,\n  LoginReportedClientType,\n  LoginReportedClientVersion,\n  LoginFirstAuthenticationFactor,\n  LoginSecondAuthenticationFactor,\n  LoginIsSuccess,\n  LoginErrorCode,\n  LoginErrorMessage,\n  LoginRelatedEventId,\n  LoginConnection,\n  LoginClientPrivateLinkId,\n  UserGrantCreatedOn,\n  UserGrantDeletedOn,\n  UserRole,\n  UserGrantGrantedTo,\n  UserGrantGranteeName,\n  UserGrantGrantedBy,\n  MaterializedViewStartTime,\n  MaterializedViewEndTime,\n  MaterializedViewCreditsUsed,\n  MaterializedViewTableId,\n  MaterializedViewTableName,\n  MaterializedViewSchemaId,\n  MaterializedViewSchemaName,\n  MaterializedViewDatabaseId,\n  MaterializedViewDatabaseName,\n  RoleId,\n  RoleCreatedOn,\n  RoleDeletedOn,\n  RoleName,\n  RoleComment,\n  RoleOwner,\n  RoleType,\n  RoleDatabaseName,\n  RoleInstanceId,\n  OwnerRoleType,\n  RoleGrantCreatedOn,\n  RoleGrantModifiedOn,\n  RoleGrantPrivilege,\n  RoleGrantGrantedOn,\n  RoleGrantName,\n  RoleGrantTableCatalog,\n  RoleGrantTableSchema,\n  RoleGrantGrantedTo,\n  RoleGrantGranteeName,\n  RoleGrantGrantOption,\n  RoleGrantGrantedBy,\n  RoleGrantDeletedOn,\n  RoleGrantGrantedByRoleType,\n  RoleGrantObjectInstance,\n  LoadTableId,\n  LoadTableName,\n  LoadSchemaId,\n  LoadSchemaName,\n  LoadCatalogId,\n  LoadCatalogName,\n  LoadFileName,\n  LastLoadTime,\n  LoadStatus,\n  LoadRowCount,\n  LoadRowParsed,\n  LoadFirstErrorMessage,\n  LoadFirstErrorLineNumber,\n  LoadFirstErrorCharacterPosition,\n  LoadFirstErrorColName,\n  LoadErrorCount,\n  LoadErrorLimit,\n  TableStorageMetricsId,\n  TableStorageMetricsTableName,\n  TableStorageMetricsTableSchemaId,\n  TableStorageMetricsTableSchema,\n  TableStorageMetricsTableCatalogId,\n  TableStorageMetricsTableCatalog,\n  TableStorageMetricsCloneGroupId,\n  TableStorageMetricsIsTransient,\n  TableStorageMetricsActiveBytes,\n  TableStorageMetricsTimeTravelBytes,\n  TableStorageMetricsFailsafeBytes,\n  TableStorageMetricsRetainedForCloneBytes,\n  TableStorageMetricsDeleted,\n  TableStorageMetricsTableCreated,\n  TableStorageMetricsTableDropped,\n  TableStorageMetricsTableEnteredFailsafe,\n  TableStorageMetricsSchemaCreated,\n  TableStorageMetricsSchemaDropped,\n  TableStorageMetricsCatalogCreated,\n  TableStorageMetricsCatalogDropped,\n  TableStorageMetricsComment,\n  TableStorageMetricsInstanceId,\n  TableId,\n  TableName,\n  TableSchemaId,\n  TableSchema,\n  TableCatalogId,\n  TableCatalog,\n  TableOwner,\n  TableType,\n  TableIsTransient,\n  TableIsIceberg,\n  TableIsDynamic,\n  TableIsHybrid,\n  TableClusteringKey,\n  TableRowCount,\n  TableBytes,\n  TableRetentionTime,\n  TableSelfReferencingColumnName,\n  TableReferenceGeneration,\n  TableUserDefinedTypeCatalog,\n  TableUserDefinedTypeSchema,\n  TableUserDefinedTypeName,\n  TableIsInsertableInto,\n  TableIsTyped,\n  TableCommitAction,\n  TableCreated,\n  TableLastAltered,\n  TableLastDDL,\n  TableLastDDLBy,\n  TableDeleted,\n  TableAutoClusteringOn,\n  TableComment,\n  TableOwnerRoleType,\n  TableInstanceId,\n  UserId,\n  UserName,\n  UserCreatedOn,\n  UserDeletedOn,\n  UserLoginName,\n  UserDisplayName,\n  UserFirstName,\n  UserLastName,\n  UserEmail,\n  UserMustChangePassword,\n  UserHasPassword,\n  UserComment,\n  UserDisabled,\n  UserSnowflakeLock,\n  UserDefaultWarehouse,\n  UserDefaultNamespace,\n  UserDefaultRole,\n  UserExtAuthnDuo,\n  UserExtAuthnUid,\n  UserHasMFA,\n  UserBypassMFAUntil,\n  UserLastSuccessLogin,\n  UserExpiresAt,\n  UserLockedUntilTime,\n  UserHasRSAPublicKey,\n  UserPasswordLastSetTime,\n  UserOwner,\n  UserDefaultSecondaryRole,\n  UserType,\n  UserDatabaseName,\n  UserDatabaseId,\n  UserSchemaName,\n  UserSchemaId,\n  QueryId,\n  QueryText,\n  QueryDatabaseId,\n  QueryDatabaseName,\n  QuerySchemaId,\n  QuerySchemaName,\n  QueryType,\n  QuerySessionId,\n  QueryUserName,\n  QueryRoleName,\n  QueryWarehouseId,\n  QueryWarehouseName,\n  QueryWarehouseSize,\n  QueryWarehouseType,\n  QueryClusterNumber,\n  QueryTag,\n  QueryExecutionStatus,\n  QueryErrorCode,\n  QueryErrorMessage,\n  QueryStartTime,\n  QueryTotalElapsedTime,\n  QueryBytesScanned,\n  QueryPercentageScannedFromCache,\n  QueryBytesWritten,\n  QueryBytesWrittenToResult,\n  QueryBytesReadFromResult,\n  QueryRowsProduced,\n  QueryRowsInserted,\n  QueryRowsUpdated,\n  QueryRowsDeleted,\n  QueryRowsUnloaded,\n  QueryBytesDeleted,\n  QueryPartitionsScanned,\n  QueryPartitionsTotal,\n  QueryBytesSpilledToLocalStorage,\n  QueryBytesSpilledToRemoteStorage,\n  QueryBytesSentOverTheNetwork,\n  QueryCompilationTime,\n  QueryExecutionTime,\n  QueryQueuedProvisioningTime,\n  QueryQueuedRepairTime,\n  QueryQueuedOverloadTime,\n  QueryTransactionBlockedTime,\n  QueryOutboundDataTransferCloud,\n  QueryOutboundDataTransferRegion,\n  QueryOutboundDataTransferBytes,\n  QueryInboundDataTransferCloud,\n  QueryInboundDataTransferRegion,\n  QueryInboundDataTransferBytes,\n  QueryListExternalFilesTime,\n  QueryCreditsUsedCloudServices,\n  QueryReleaseVersion,\n  QueryExternalFunctionTotalInvocations,\n  QueryExternalFunctionTotalSentRows,\n  QueryExternalFunctionTotalReceivedRows,\n  QueryExternalFunctionTotalSentBytes,\n  QueryExternalFunctionTotalReceivedBytes,\n  QueryLoadPercent,\n  QueryIsClientGeneratedStatement,\n  QueryAccelerationBytesScanned,\n  QueryAccelerationPartitionsScanned,\n  QueryAccelerationUpperLimitScaleFactor,\n  QueryTransactionId,\n  ChildQueriesWaitTime,\n  QueryRoleType,\n  QueryHash,\n  QueryHashVersion,\n  QueryParameterizedHash,\n  QueryParameterizedHashVersion,\n  QuerySecondaryRoleStats,\n  QueryRowsWrittenToResult,\n  QueryRetryTime,\n  QueryRetryCause,\n  QueryFaultHandlingTime,\n  QueryUserType,\n  QueryUserDatabaseName,\n  QueryUserDatabaseId,\n  QueryUserSchemaName,\n  QueryUserSchemaId\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Snowflake')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Snowflake",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Parser for Snowflake",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Snowflake",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Snowflake",
        "query": "let Snowflake_view = view () {\n  Snowflake_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | extend \n    EventStartTime = column_ifexists('START_TIME_t', ''),\n    EventType = column_ifexists('EVENT_TYPE_s', ''),\n    TargetUsername = column_ifexists('USER_NAME_s', ''),\n    SrcDvcIpAddr = column_ifexists('CLIENT_IP_s', '')\n  | extend \n    User=TargetUsername,\n    EventEndTime=iff(isnotempty(EVENT_TIMESTAMP_t), EVENT_TIMESTAMP_t, END_TIME_t)\n};\nlet SnowflakeLogin_view = view () {\n  SnowflakeLogin_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend Time = toreal(DataList[1])\n  | extend\n    LoginEventId = tostring(DataList[0]),\n    EventEndTime = unixtime_seconds_todatetime(Time),\n    EventType = tostring(DataList[2]),\n    TargetUsername = tostring(DataList[3]),\n    SrcDvcIpAddr = tostring(DataList[4]),\n    LoginReportedClientType = tostring(DataList[5]),\n    LoginReportedClientVersion = tostring(DataList[6]),\n    LoginFirstAuthenticationFactor = tostring(DataList[7]),\n    LoginSecondAuthenticationFactor = tostring(DataList[8]),\n    LoginIsSuccess = tostring(DataList[9]),\n    LoginErrorCode = tostring(DataList[10]),\n    LoginErrorMessage = tostring(DataList[11]),\n    LoginRelatedEventId = tostring(DataList[12]),\n    LoginConnection = tostring(DataList[13]),\n    LoginClientPrivateLinkId = tostring(DataList[14])\n  | extend User = TargetUsername\n};\nlet SnowflakeUserGrant_view = view ()  {\n  SnowflakeUserGrant_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend \n    CTime = toreal(DataList[0]),\n    DTime = toreal(DataList[1])\n  | extend\n    UserGrantCreatedOn = unixtime_seconds_todatetime(CTime),\n    UserGrantDeletedOn = unixtime_seconds_todatetime(DTime),\n    UserRole = tostring(DataList[2]),\n    UserGrantGrantedTo = tostring(DataList[3]),\n    UserGrantGranteeName = tostring(DataList[4]),\n    UserGrantGrantedBy = tostring(DataList[5])\n};\nlet SnowflakeMaterializedView_view = view () {\n  SnowflakeMaterializedView_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend \n    STime = toreal(DataList[0]),\n    ETime = toreal(DataList[1])\n  | extend\n    MaterializedViewStartTime = unixtime_seconds_todatetime(STime),\n    MaterializedViewEndTime = unixtime_seconds_todatetime(ETime),\n    MaterializedViewCreditsUsed = tostring(DataList[2]),\n    MaterializedViewTableId = tostring(DataList[3]),\n    MaterializedViewTableName = tostring(DataList[4]),\n    MaterializedViewSchemaId = tostring(DataList[5]),\n    MaterializedViewSchemaName = tostring(DataList[6]),\n    MaterializedViewDatabaseId = tostring(DataList[7]),\n    MaterializedViewDatabaseName = tostring(DataList[8])\n};\nlet SnowflakeRoles_view = view () {\n  SnowflakeRoles_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend \n    CTime = toreal(DataList[1]),\n    DTime = toreal(DataList[2])\n  | extend\n    RoleId = tostring(DataList[0]),\n    RoleCreatedOn = unixtime_seconds_todatetime(CTime),\n    RoleDeletedOn = unixtime_seconds_todatetime(DTime),\n    RoleName = tostring(DataList[3]),\n    RoleComment = tostring(DataList[4]),\n    RoleOwner = tostring(DataList[5]),\n    RoleType = tostring(DataList[6]),\n    RoleDatabaseName = tostring(DataList[7]),\n    RoleInstanceId = tostring(DataList[8]),\n    OwnerRoleType = tostring(DataList[9])\n};\nlet SnowflakeRoleGrant_view = view () {\n  SnowflakeRoleGrant_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend \n    CTime = toreal(DataList[0]),\n    MTime = toreal(DataList[1]),\n    DTime = toreal(DataList[11])\n  | extend \n    RoleGrantCreatedOn = unixtime_seconds_todatetime(CTime),\n    RoleGrantModifiedOn = unixtime_seconds_todatetime(MTime),\n    RoleGrantPrivilege = tostring(DataList[2]),\n    RoleGrantGrantedOn = tostring(DataList[3]),\n    RoleGrantName = tostring(DataList[4]),\n    RoleGrantTableCatalog = tostring(DataList[5]),\n    RoleGrantTableSchema = tostring(DataList[6]),\n    RoleGrantGrantedTo = tostring(DataList[7]),\n    RoleGrantGranteeName = tostring(DataList[8]),\n    RoleGrantGrantOption = tobool(DataList[9]),\n    RoleGrantGrantedBy = tostring(DataList[10]),\n    RoleGrantDeletedOn = unixtime_seconds_todatetime(DTime),\n    RoleGrantGrantedByRoleType = tostring(DataList[12]),\n    RoleGrantObjectInstance = tostring(DataList[13])\n};\nlet SnowflakeLoad_view = view () {\n  SnowflakeLoad_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend LTime = toreal(DataList[7])\n  | extend\n    LoadTableId = tostring(DataList[0]),\n    LoadTableName = tostring(DataList[1]),\n    LoadSchemaId = tostring(DataList[2]),\n    LoadSchemaName = tostring(DataList[3]),\n    LoadCatalogId = tostring(DataList[4]),\n    LoadCatalogName = tostring(DataList[5]),\n    LoadFileName = tostring(DataList[6]),\n    LastLoadTime = unixtime_seconds_todatetime(LTime),\n    LoadStatus = tostring(DataList[8]),\n    LoadRowCount = tostring(DataList[9]),\n    LoadRowParsed = tostring(DataList[10]),\n    LoadFirstErrorMessage = tostring(DataList[11]),\n    LoadFirstErrorLineNumber = tostring(DataList[12]),\n    LoadFirstErrorCharacterPosition = tostring(DataList[13]),\n    LoadFirstErrorColName = tostring(DataList[14]),\n    LoadErrorCount = tostring(DataList[15]),\n    LoadErrorLimit = tostring(DataList[16])\n};\nlet SnowflakeTableStorageMetrics_view = view () {\n  SnowflakeTableStorageMetrics_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend\n    TCTime = toreal(DataList[13]),\n    TDTime = toreal(DataList[14]),\n    TFTime = toreal(DataList[15]),\n    SCTime = toreal(DataList[16]),\n    SDTime = toreal(DataList[17]),\n    CCTime = toreal(DataList[18]),\n    CDTime = toreal(DataList[19])\n  | extend \n    TableStorageMetricsId = tostring(DataList[0]),\n    TableStorageMetricsTableName = tostring(DataList[1]),\n    TableStorageMetricsTableSchemaId = tostring(DataList[2]),\n    TableStorageMetricsTableSchema = tostring(DataList[3]),\n    TableStorageMetricsTableCatalogId = tostring(DataList[4]),\n    TableStorageMetricsTableCatalog = tostring(DataList[5]),\n    TableStorageMetricsCloneGroupId = tostring(DataList[6]),\n    TableStorageMetricsIsTransient = tostring(DataList[7]),\n    TableStorageMetricsActiveBytes = tostring(DataList[8]),\n    TableStorageMetricsTimeTravelBytes = tostring(DataList[9]),\n    TableStorageMetricsFailsafeBytes = tostring(DataList[10]),\n    TableStorageMetricsRetainedForCloneBytes = tostring(DataList[11]),\n    TableStorageMetricsDeleted = tobool(DataList[12]),\n    TableStorageMetricsTableCreated = unixtime_seconds_todatetime(TCTime),\n    TableStorageMetricsTableDropped = unixtime_seconds_todatetime(TDTime),\n    TableStorageMetricsTableEnteredFailsafe = unixtime_seconds_todatetime(TFTime),\n    TableStorageMetricsSchemaCreated = unixtime_seconds_todatetime(SCTime),\n    TableStorageMetricsSchemaDropped = unixtime_seconds_todatetime(SDTime),\n    TableStorageMetricsCatalogCreated = unixtime_seconds_todatetime(CCTime),\n    TableStorageMetricsCatalogDropped = unixtime_seconds_todatetime(CDTime),\n    TableStorageMetricsComment = tostring(DataList[20]),\n    TableStorageMetricsInstanceId = tostring(DataList[21])\n};\nlet SnowflakeTables_view = view () {\n  SnowflakeTables_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend\n    TCTime = toreal(DataList[24]),\n    LATime = toreal(DataList[25]),\n    LDTime = toreal(DataList[26]),\n    TDTime = toreal(DataList[28])\n  | extend \n    TableId = tostring(DataList[0]),\n    TableName = tostring(DataList[1]),\n    TableSchemaId = tostring(DataList[2]),\n    TableSchema = tostring(DataList[3]),\n    TableCatalogId = tostring(DataList[4]),\n    TableCatalog = tostring(DataList[5]),\n    TableOwner = tostring(DataList[6]),\n    TableType = tostring(DataList[7]),\n    TableIsTransient = tostring(DataList[8]),\n    TableIsIceberg = tostring(DataList[9]),\n    TableIsDynamic = tostring(DataList[10]),\n    TableIsHybrid = tostring(DataList[11]),\n    TableClusteringKey = tostring(DataList[12]),\n    TableRowCount = tostring(DataList[13]),\n    TableBytes = tostring(DataList[14]),\n    TableRetentionTime = tostring(DataList[15]),\n    TableSelfReferencingColumnName = tostring(DataList[16]),\n    TableReferenceGeneration = tostring(DataList[17]),\n    TableUserDefinedTypeCatalog = tostring(DataList[18]),\n    TableUserDefinedTypeSchema = tostring(DataList[19]),\n    TableUserDefinedTypeName = tostring(DataList[20]),\n    TableIsInsertableInto = tostring(DataList[21]),\n    TableIsTyped = tostring(DataList[22]),\n    TableCommitAction = tostring(DataList[23]),\n    TableCreated = unixtime_seconds_todatetime(TCTime),\n    TableLastAltered = unixtime_seconds_todatetime(LATime),\n    TableLastDDL = unixtime_seconds_todatetime(LDTime),\n    TableLastDDLBy = tostring(DataList[27]),\n    TableDeleted = unixtime_seconds_todatetime(TDTime),\n    TableAutoClusteringOn = tostring(DataList[29]),\n    TableComment = tostring(DataList[30]),\n    TableOwnerRoleType = tostring(DataList[31]),\n    TableInstanceId = tostring(DataList[32])\n};\nlet SnowflakeUsers_view = view () {\n  SnowflakeUsers_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend\n    CTime = toreal(DataList[2]),\n    DTime = toreal(DataList[3]),\n    BMTime = toreal(DataList[20]),\n    LSLTime = toreal(DataList[21]),\n    ETime = toreal(DataList[22]),\n    LUTime = toreal(DataList[23]),\n    PLSTime = toreal(DataList[25])\n  | extend\n    UserId = tostring(DataList[0]),\n    UserName = tostring(DataList[1]),\n    UserCreatedOn = unixtime_seconds_todatetime(CTime),\n    UserDeletedOn = unixtime_seconds_todatetime(DTime),\n    UserLoginName = tostring(DataList[4]),\n    UserDisplayName = tostring(DataList[5]),\n    UserFirstName = tostring(DataList[6]),\n    UserLastName = tostring(DataList[7]),\n    UserEmail = tostring(DataList[8]),\n    UserMustChangePassword = tobool(DataList[9]),\n    UserHasPassword = tobool(DataList[10]),\n    UserComment = tostring(DataList[11]),\n    UserDisabled = tostring(DataList[12]),\n    UserSnowflakeLock = tostring(DataList[13]),\n    UserDefaultWarehouse = tostring(DataList[14]),\n    UserDefaultNamespace = tostring(DataList[15]),\n    UserDefaultRole = tostring(DataList[16]),\n    UserExtAuthnDuo = tobool(DataList[17]),\n    UserExtAuthnUid = tostring(DataList[18]),\n    UserHasMFA = tobool(DataList[19]),\n    UserBypassMFAUntil = unixtime_seconds_todatetime(BMTime),\n    UserLastSuccessLogin = unixtime_seconds_todatetime(LSLTime),\n    UserExpiresAt = unixtime_seconds_todatetime(ETime),\n    UserLockedUntilTime = unixtime_seconds_todatetime(LUTime),\n    UserHasRSAPublicKey = tobool(DataList[24]),\n    UserPasswordLastSetTime = unixtime_seconds_todatetime(PLSTime),\n    UserOwner = tostring(DataList[26]),\n    UserDefaultSecondaryRole = tostring(DataList[27]),\n    UserType = tostring(DataList[28]),\n    UserDatabaseName = tostring(DataList[29]),\n    UserDatabaseId = tostring(DataList[30]),\n    UserSchemaName = tostring(DataList[31]),\n    UserSchemaId = tostring(DataList[32])\n};\nlet SnowflakeQuery_view = view () {\n  SnowflakeQuery_CL\n  | extend EventVendor = 'Snowflake'\n  | extend EventProduct = 'Snowflake'\n  | mv-expand DataList = todynamic(Data)\n  | extend\n    STime = toreal(DataList[19]),\n    ETime = toreal(DataList[20])\n  | extend\n    QueryId = tostring(DataList[0]),\n    QueryText = tostring(DataList[1]),\n    QueryDatabaseId = tostring(DataList[2]),\n    QueryDatabaseName = tostring(DataList[3]),\n    QuerySchemaId = tostring(DataList[4]),\n    QuerySchemaName = tostring(DataList[5]),\n    QueryType = tostring(DataList[6]),\n    QuerySessionId = tostring(DataList[7]),\n    QueryUserName = tostring(DataList[8]),\n    QueryRoleName = tostring(DataList[9]),\n    QueryWarehouseId = tostring(DataList[10]),\n    QueryWarehouseName = tostring(DataList[11]),\n    QueryWarehouseSize = tostring(DataList[12]),\n    QueryWarehouseType = tostring(DataList[13]),\n    QueryClusterNumber = tostring(DataList[14]),\n    QueryTag = tostring(DataList[15]),\n    QueryExecutionStatus = tostring(DataList[16]),\n    QueryErrorCode = tostring(DataList[17]),\n    QueryErrorMessage = tostring(DataList[18]),\n    QueryStartTime = unixtime_seconds_todatetime(STime),\n    EventEndTime = unixtime_seconds_todatetime(ETime),\n    QueryTotalElapsedTime = tostring(DataList[21]),\n    QueryBytesScanned = tostring(DataList[22]),\n    QueryPercentageScannedFromCache = tostring(DataList[23]),\n    QueryBytesWritten = tostring(DataList[24]),\n    QueryBytesWrittenToResult = tostring(DataList[25]),\n    QueryBytesReadFromResult = tostring(DataList[26]),\n    QueryRowsProduced = tostring(DataList[27]),\n    QueryRowsInserted = tostring(DataList[28]),\n    QueryRowsUpdated = tostring(DataList[29]),\n    QueryRowsDeleted = tostring(DataList[30]),\n    QueryRowsUnloaded = tostring(DataList[31]),\n    QueryBytesDeleted = tostring(DataList[32]),\n    QueryPartitionsScanned = tostring(DataList[33]),\n    QueryPartitionsTotal = tostring(DataList[34]),\n    QueryBytesSpilledToLocalStorage = tostring(DataList[35]),\n    QueryBytesSpilledToRemoteStorage = tostring(DataList[36]),\n    QueryBytesSentOverTheNetwork = tostring(DataList[37]),\n    QueryCompilationTime = tostring(DataList[38]),\n    QueryExecutionTime = tostring(DataList[39]),\n    QueryQueuedProvisioningTime = tostring(DataList[40]),\n    QueryQueuedRepairTime = tostring(DataList[41]),\n    QueryQueuedOverloadTime = tostring(DataList[42]),\n    QueryTransactionBlockedTime = tostring(DataList[43]),\n    QueryOutboundDataTransferCloud = tostring(DataList[44]),\n    QueryOutboundDataTransferRegion = tostring(DataList[45]),\n    QueryOutboundDataTransferBytes = tostring(DataList[46]),\n    QueryInboundDataTransferCloud = tostring(DataList[47]),\n    QueryInboundDataTransferRegion = tostring(DataList[48]),\n    QueryInboundDataTransferBytes = tostring(DataList[49]),\n    QueryListExternalFilesTime = tostring(DataList[50]),\n    QueryCreditsUsedCloudServices = tostring(DataList[51]),\n    QueryReleaseVersion = tostring(DataList[52]),\n    QueryExternalFunctionTotalInvocations = tostring(DataList[53]),\n    QueryExternalFunctionTotalSentRows = tostring(DataList[54]),\n    QueryExternalFunctionTotalReceivedRows = tostring(DataList[55]),\n    QueryExternalFunctionTotalSentBytes = tostring(DataList[56]),\n    QueryExternalFunctionTotalReceivedBytes = tostring(DataList[57]),\n    QueryLoadPercent = tostring(DataList[58]),\n    QueryIsClientGeneratedStatement = tobool(DataList[59]),\n    QueryAccelerationBytesScanned = tostring(DataList[60]),\n    QueryAccelerationPartitionsScanned = tostring(DataList[61]),\n    QueryAccelerationUpperLimitScaleFactor = tostring(DataList[62]),\n    QueryTransactionId = tostring(DataList[63]),\n    ChildQueriesWaitTime = tostring(DataList[64]),\n    QueryRoleType = tostring(DataList[65]),\n    QueryHash = tostring(DataList[66]),\n    QueryHashVersion = tostring(DataList[67]),\n    QueryParameterizedHash = tostring(DataList[68]),\n    QueryParameterizedHashVersion = tostring(DataList[69]),\n    QuerySecondaryRoleStats = tostring(DataList[70]),\n    QueryRowsWrittenToResult = tostring(DataList[71]),\n    QueryRetryTime = tostring(DataList[72]),\n    QueryRetryCause = tostring(DataList[73]),\n    QueryFaultHandlingTime = tostring(DataList[74]),\n    QueryUserType = tostring(DataList[75]),\n    QueryUserDatabaseName = tostring(DataList[76]),\n    QueryUserDatabaseId = tostring(DataList[77]),\n    QueryUserSchemaName = tostring(DataList[78]),\n    QueryUserSchemaId = tostring(DataList[79])\n};\nunion isfuzzy=true\n(Snowflake_view),\n(SnowflakeLogin_view),\n(SnowflakeUserGrant_view),\n(SnowflakeMaterializedView_view),\n(SnowflakeRoles_view),\n(SnowflakeRoleGrant_view),\n(SnowflakeLoad_view),\n(SnowflakeTableStorageMetrics_view),\n(SnowflakeTables_view),\n(SnowflakeUsers_view),\n(SnowflakeQuery_view)\n| project\n  EventVendor, \n  EventProduct, \n  EventStartTime,\n  EventType,\n  TargetUsername,\n  SrcDvcIpAddr,\n  User,\n  EventEndTime,\n  LoginEventId,\n  LoginReportedClientType,\n  LoginReportedClientVersion,\n  LoginFirstAuthenticationFactor,\n  LoginSecondAuthenticationFactor,\n  LoginIsSuccess,\n  LoginErrorCode,\n  LoginErrorMessage,\n  LoginRelatedEventId,\n  LoginConnection,\n  LoginClientPrivateLinkId,\n  UserGrantCreatedOn,\n  UserGrantDeletedOn,\n  UserRole,\n  UserGrantGrantedTo,\n  UserGrantGranteeName,\n  UserGrantGrantedBy,\n  MaterializedViewStartTime,\n  MaterializedViewEndTime,\n  MaterializedViewCreditsUsed,\n  MaterializedViewTableId,\n  MaterializedViewTableName,\n  MaterializedViewSchemaId,\n  MaterializedViewSchemaName,\n  MaterializedViewDatabaseId,\n  MaterializedViewDatabaseName,\n  RoleId,\n  RoleCreatedOn,\n  RoleDeletedOn,\n  RoleName,\n  RoleComment,\n  RoleOwner,\n  RoleType,\n  RoleDatabaseName,\n  RoleInstanceId,\n  OwnerRoleType,\n  RoleGrantCreatedOn,\n  RoleGrantModifiedOn,\n  RoleGrantPrivilege,\n  RoleGrantGrantedOn,\n  RoleGrantName,\n  RoleGrantTableCatalog,\n  RoleGrantTableSchema,\n  RoleGrantGrantedTo,\n  RoleGrantGranteeName,\n  RoleGrantGrantOption,\n  RoleGrantGrantedBy,\n  RoleGrantDeletedOn,\n  RoleGrantGrantedByRoleType,\n  RoleGrantObjectInstance,\n  LoadTableId,\n  LoadTableName,\n  LoadSchemaId,\n  LoadSchemaName,\n  LoadCatalogId,\n  LoadCatalogName,\n  LoadFileName,\n  LastLoadTime,\n  LoadStatus,\n  LoadRowCount,\n  LoadRowParsed,\n  LoadFirstErrorMessage,\n  LoadFirstErrorLineNumber,\n  LoadFirstErrorCharacterPosition,\n  LoadFirstErrorColName,\n  LoadErrorCount,\n  LoadErrorLimit,\n  TableStorageMetricsId,\n  TableStorageMetricsTableName,\n  TableStorageMetricsTableSchemaId,\n  TableStorageMetricsTableSchema,\n  TableStorageMetricsTableCatalogId,\n  TableStorageMetricsTableCatalog,\n  TableStorageMetricsCloneGroupId,\n  TableStorageMetricsIsTransient,\n  TableStorageMetricsActiveBytes,\n  TableStorageMetricsTimeTravelBytes,\n  TableStorageMetricsFailsafeBytes,\n  TableStorageMetricsRetainedForCloneBytes,\n  TableStorageMetricsDeleted,\n  TableStorageMetricsTableCreated,\n  TableStorageMetricsTableDropped,\n  TableStorageMetricsTableEnteredFailsafe,\n  TableStorageMetricsSchemaCreated,\n  TableStorageMetricsSchemaDropped,\n  TableStorageMetricsCatalogCreated,\n  TableStorageMetricsCatalogDropped,\n  TableStorageMetricsComment,\n  TableStorageMetricsInstanceId,\n  TableId,\n  TableName,\n  TableSchemaId,\n  TableSchema,\n  TableCatalogId,\n  TableCatalog,\n  TableOwner,\n  TableType,\n  TableIsTransient,\n  TableIsIceberg,\n  TableIsDynamic,\n  TableIsHybrid,\n  TableClusteringKey,\n  TableRowCount,\n  TableBytes,\n  TableRetentionTime,\n  TableSelfReferencingColumnName,\n  TableReferenceGeneration,\n  TableUserDefinedTypeCatalog,\n  TableUserDefinedTypeSchema,\n  TableUserDefinedTypeName,\n  TableIsInsertableInto,\n  TableIsTyped,\n  TableCommitAction,\n  TableCreated,\n  TableLastAltered,\n  TableLastDDL,\n  TableLastDDLBy,\n  TableDeleted,\n  TableAutoClusteringOn,\n  TableComment,\n  TableOwnerRoleType,\n  TableInstanceId,\n  UserId,\n  UserName,\n  UserCreatedOn,\n  UserDeletedOn,\n  UserLoginName,\n  UserDisplayName,\n  UserFirstName,\n  UserLastName,\n  UserEmail,\n  UserMustChangePassword,\n  UserHasPassword,\n  UserComment,\n  UserDisabled,\n  UserSnowflakeLock,\n  UserDefaultWarehouse,\n  UserDefaultNamespace,\n  UserDefaultRole,\n  UserExtAuthnDuo,\n  UserExtAuthnUid,\n  UserHasMFA,\n  UserBypassMFAUntil,\n  UserLastSuccessLogin,\n  UserExpiresAt,\n  UserLockedUntilTime,\n  UserHasRSAPublicKey,\n  UserPasswordLastSetTime,\n  UserOwner,\n  UserDefaultSecondaryRole,\n  UserType,\n  UserDatabaseName,\n  UserDatabaseId,\n  UserSchemaName,\n  UserSchemaId,\n  QueryId,\n  QueryText,\n  QueryDatabaseId,\n  QueryDatabaseName,\n  QuerySchemaId,\n  QuerySchemaName,\n  QueryType,\n  QuerySessionId,\n  QueryUserName,\n  QueryRoleName,\n  QueryWarehouseId,\n  QueryWarehouseName,\n  QueryWarehouseSize,\n  QueryWarehouseType,\n  QueryClusterNumber,\n  QueryTag,\n  QueryExecutionStatus,\n  QueryErrorCode,\n  QueryErrorMessage,\n  QueryStartTime,\n  QueryTotalElapsedTime,\n  QueryBytesScanned,\n  QueryPercentageScannedFromCache,\n  QueryBytesWritten,\n  QueryBytesWrittenToResult,\n  QueryBytesReadFromResult,\n  QueryRowsProduced,\n  QueryRowsInserted,\n  QueryRowsUpdated,\n  QueryRowsDeleted,\n  QueryRowsUnloaded,\n  QueryBytesDeleted,\n  QueryPartitionsScanned,\n  QueryPartitionsTotal,\n  QueryBytesSpilledToLocalStorage,\n  QueryBytesSpilledToRemoteStorage,\n  QueryBytesSentOverTheNetwork,\n  QueryCompilationTime,\n  QueryExecutionTime,\n  QueryQueuedProvisioningTime,\n  QueryQueuedRepairTime,\n  QueryQueuedOverloadTime,\n  QueryTransactionBlockedTime,\n  QueryOutboundDataTransferCloud,\n  QueryOutboundDataTransferRegion,\n  QueryOutboundDataTransferBytes,\n  QueryInboundDataTransferCloud,\n  QueryInboundDataTransferRegion,\n  QueryInboundDataTransferBytes,\n  QueryListExternalFilesTime,\n  QueryCreditsUsedCloudServices,\n  QueryReleaseVersion,\n  QueryExternalFunctionTotalInvocations,\n  QueryExternalFunctionTotalSentRows,\n  QueryExternalFunctionTotalReceivedRows,\n  QueryExternalFunctionTotalSentBytes,\n  QueryExternalFunctionTotalReceivedBytes,\n  QueryLoadPercent,\n  QueryIsClientGeneratedStatement,\n  QueryAccelerationBytesScanned,\n  QueryAccelerationPartitionsScanned,\n  QueryAccelerationUpperLimitScaleFactor,\n  QueryTransactionId,\n  ChildQueriesWaitTime,\n  QueryRoleType,\n  QueryHash,\n  QueryHashVersion,\n  QueryParameterizedHash,\n  QueryParameterizedHashVersion,\n  QuerySecondaryRoleStats,\n  QueryRowsWrittenToResult,\n  QueryRetryTime,\n  QueryRetryCause,\n  QueryFaultHandlingTime,\n  QueryUserType,\n  QueryUserDatabaseName,\n  QueryUserDatabaseId,\n  QueryUserSchemaName,\n  QueryUserSchemaId\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Snowflake')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Snowflake",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Snowflake Workbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Sets the time name for analysis"
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"**NOTE**: This data connector depends on a parser based on Kusto Function **Snowflake** to work as expected. [Follow steps to get this Kusto Function](https://aka.ms/sentinel-SnowflakeDataConnector-parser)\"},\"name\":\"text - 8\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"cd8447d9-b096-4673-92d8-2a1e8291a125\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"description\":\"Sets the time name for analysis\",\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":86400000},{\"durationMs\":604800000},{\"durationMs\":2592000000},{\"durationMs\":7776000000}]},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\r\\n| make-series TotalEvents = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain};\",\"size\":0,\"title\":\"Events Over Time\",\"color\":\"green\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"graphSettings\":{\"type\":0}},\"customWidth\":\"60\",\"name\":\"query - 12\",\"styleSettings\":{\"maxWidth\":\"55\"}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n| where isnotempty(DATABASE_NAME_s)\\n| summarize dcount(DATABASE_NAME_s)\",\"size\":3,\"title\":\"Total Databases\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n| where isnotempty(source_table_s)\\n| summarize dcount(source_table_s)\",\"size\":3,\"title\":\"Total Tables\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n| summarize s=sum(EXECUTION_TIME_d)\\n| project s_time = strcat(s/1000, ' sec')\",\"size\":3,\"title\":\"Total Query Time\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"30\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n| where isnotempty(QUERY_TYPE_s)\\n| summarize count()\",\"size\":3,\"title\":\"Total Queries Run\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"30\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n| summarize cs = sum(CREDITS_USED_CLOUD_SERVICES_d)\\n| project round(cs, 8)\",\"size\":3,\"title\":\"Credits Spent\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"40\",\"name\":\"query - 4\"}]},\"customWidth\":\"40\",\"name\":\"group - 0\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n| where isnotempty(source_table_s)\\n| summarize count() by source_table_s\",\"size\":3,\"title\":\"Table Events Summary\",\"color\":\"orange\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"source_table_s\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"showBorder\":false}},\"customWidth\":\"50\",\"name\":\"query - 0\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n| where isnotempty(DATABASE_NAME_s)\\n| summarize count() by DATABASE_NAME_s\",\"size\":3,\"title\":\"Database Events Summary\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"DATABASE_NAME_s\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":false}},\"customWidth\":\"50\",\"name\":\"query - 1\",\"styleSettings\":{\"showBorder\":true}}]},\"customWidth\":\"30\",\"name\":\"group - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n| where isnotempty(SrcDvcIpAddr)\\n| summarize count() by SrcDvcIpAddr\",\"size\":3,\"title\":\"Source Addresses\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n| where EXECUTION_TIME_d > 0\\n| top 10 by EXECUTION_TIME_d desc\\n| project Query=QUERY_TEXT_s, User=TargetUsername, ExecutionTime=EXECUTION_TIME_d\\n\",\"size\":0,\"title\":\"Query Execution Time\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ExecutionTime\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\"}}]}},\"customWidth\":\"35\",\"name\":\"query - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n| where CREDITS_USED_CLOUD_SERVICES_d > 0\\n| summarize by QUERY_TEXT_s, CREDITS_USED_CLOUD_SERVICES_d\\n| top 10 by CREDITS_USED_CLOUD_SERVICES_d desc\\n| project Query=QUERY_TEXT_s, CreditsSpent=CREDITS_USED_CLOUD_SERVICES_d\",\"size\":0,\"title\":\"Credits Spent by Queriws\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"CreditsSpent\",\"formatter\":8,\"formatOptions\":{\"palette\":\"coldHot\",\"compositeBarSettings\":{\"labelText\":\"\"}},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":10}}}]}},\"customWidth\":\"35\",\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\r\\n| where QUERY_TYPE_s == 'CREATE_USER'\\r\\n| extend n_usr = extract(@'USER\\\\s(\\\\S+)', 1, QUERY_TEXT_s)\\r\\n| project Username=n_usr\",\"size\":0,\"title\":\"New Users\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"URL Category\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"purple\"}},\"showBorder\":false},\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"20\",\"name\":\"query - 0\",\"styleSettings\":{\"maxWidth\":\"30\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Snowflake\\n\\n| where QUERY_TYPE_s =~ 'SELECT'\\n| summarize roles = makeset(ROLE_NAME_s) by TargetUsername\\n| join(Snowflake\\n        | where EventType =~ 'LOGIN') on TargetUsername\\n| project EventTime=TimeGenerated, TargetUsername, SourceAddress=SrcDvcIpAddr, Status=strcat(iif(IS_SUCCESS_s =~ 'No', '❌ - Login Failure' , '✅ - Logged in'))\",\"size\":0,\"title\":\"Privileged Sessions\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"User\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"TotalMailsReceived\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"magenta\"}},\"showBorder\":false}},\"customWidth\":\"45\",\"name\":\"query - 10\"}],\"fromTemplateId\":\"sentinel-SnowflakeWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=SnowflakeWorkbook; logoFileName=Azure_Sentinel.svg; description=Sets the time name for analysis; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Snowflake; templateRelativePath=Snowflake.json; subtitle=; provider=Snowflake}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Snowflake",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "Snowflake_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "SnowflakeDataConnector",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Snowflake",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Snowflake/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>**1. Azure Function App: **</p>\n<p>The Snowflake Azure function solution provides the capability to ingest Snowflake <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/login_history.html\">login logs</a> and <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/query_history.html\">query logs</a> into Microsoft Sentinel using the Snowflake Python Connector. Refer to <a href=\"https://docs.snowflake.com/en/user-guide/python-connector.html\">Snowflake documentation</a> for more information.</p>\n<p><strong>2. Codeless Connector Framework:</strong></p>\n<p>The Snowflake CCF data connector provides the capability to ingest Snowflake <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/login_history\">Login History Logs</a>, <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/query_history\">Query History Logs</a>, <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/grants_to_users\">User-Grant Logs</a>, <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/grants_to_roles\">Role-Grant Logs</a>, <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/load_history\">Load History Logs</a>, <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/materialized_view_refresh_history\">Materialized View Refresh History Logs</a>, <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/roles\">Roles Logs</a>, <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/tables\">Tables Logs</a>, <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/table_storage_metrics\">Table Storage Metrics Logs</a>, <a href=\"https://docs.snowflake.com/en/sql-reference/account-usage/users\">Users Logs</a> into Microsoft Sentinel using the Snowflake SQL API. Refer to <a href=\"https://docs.snowflake.com/en/developer-guide/sql-api/reference\">Snowflake SQL API documentation</a> for more information.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><p><a href=\"https://aka.ms/Log-Ingestion-API\">Log Ingestion API in Azure Monitor</a></p>\n</li>\n<li><p><a href=\"https://aka.ms/Sentinel-CCP_Platform\">Microsoft Sentinel Codeless Connector Framework</a></p>\n</li>\n</ol>\n<p><span style='color:red; font-weight:bold;'>NOTE</span>: Microsoft recommends installation of \"SnowflakeLogsCCPDefinition\" (via Codeless Connector Framework). This connector is build on the Codeless Connector Framework (CCF), which uses the Log Ingestion API, which replaces ingestion via the <a href='https://aka.ms/Sentinel-Logs_migration' style='color:#1890F1;'>deprecated HTTP Data Collector API</a>. CCF-based data connectors also support <a href='https://aka.ms/Sentinel-DCR_Overview' style='color:#1890F1;'>Data Collection Rules</a> (DCRs) offering transformations and enrichment.</p>\n<p><span style='color:red; font-weight:bold;'>Important</span>: While the updated connector(s) can coexist with their legacy versions, running them together will result in duplicated data ingestion. You can disable the older versions of these connectors to avoid duplication of data..</p>\n<p><strong>Data Connectors:</strong> 2, <strong>Parsers:</strong> 1, <strong>Workbooks:</strong> 1, <strong>Analytic Rules:</strong> 10, <strong>Hunting Queries:</strong> 10</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\"width=\"75px\"height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Snowflake",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
              "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "version": "[variables('dataConnectorCCPVersion')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId2')]",
              "version": "[variables('dataConnectorVersion2')]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
              "version": "[variables('huntingQueryObject1').huntingQueryVersion1]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
              "version": "[variables('huntingQueryObject2').huntingQueryVersion2]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
              "version": "[variables('huntingQueryObject3').huntingQueryVersion3]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
              "version": "[variables('huntingQueryObject4').huntingQueryVersion4]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
              "version": "[variables('huntingQueryObject5').huntingQueryVersion5]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
              "version": "[variables('huntingQueryObject6').huntingQueryVersion6]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
              "version": "[variables('huntingQueryObject7').huntingQueryVersion7]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
              "version": "[variables('huntingQueryObject8').huntingQueryVersion8]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
              "version": "[variables('huntingQueryObject9').huntingQueryVersion9]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
              "version": "[variables('huntingQueryObject10').huntingQueryVersion10]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2021-10-23",
        "providers": [
          "Snowflake"
        ],
        "categories": {
          "domains": [
            "Application"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
