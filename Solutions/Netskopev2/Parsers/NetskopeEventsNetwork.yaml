id: e754a796-f684-43c0-847f-2435a9ffc13d
Function:
  Title: Parser for Netskope Events Network
  Version: "1.0.0"
  LastUpdated: "2025-08-06"
Category: Microsoft Sentinel Parser
FunctionName: NetskopeEventsNetwork
FunctionAlias: NetskopeEventsNetwork
FunctionQuery: |
  let dummy_table = datatable(TimeGenerated: datetime) [];
    let NetskopeEventsNetwork = view() {
    union isfuzzy=true dummy_table, NetskopeEventsNetwork_CL
    | extend 
        TimeGenerated = column_ifexists('TimeGenerated', ''),
        AccessMethod = column_ifexists('access_method', ''),
        Action = column_ifexists('action', ''),
        App = column_ifexists('app', ''),
        AppCategory = column_ifexists('appcategory', ''),
        Category = column_ifexists('category', ''),
        Cci = column_ifexists('cci', ''),
        Ccl = column_ifexists('ccl', ''),
        ClientBytes = column_ifexists('client_bytes', ''),
        ClientPackets = column_ifexists('client_packets', ''),
        CountI = column_ifexists('count_i', ''),
        Device = column_ifexists('device', ''),
        Domain = column_ifexists('domain', ''),
        DstCountry = column_ifexists('dst_country', ''),
        DstGeoipSrc = column_ifexists('dst_geoip_src', ''),
        DstLatitude = column_ifexists('dst_latitude', ''),
        DstLocation = column_ifexists('dst_location', ''),
        DstLongitude = column_ifexists('dst_longitude', ''),
        DstRegion = column_ifexists('dst_region', ''),
        DstZipCode = column_ifexists('dst_zipcode', ''),
        DstHost = column_ifexists('dsthost', ''),
        DstIp = column_ifexists('dstip', ''),
        DstPort = column_ifexists('dstport', ''),
        EndTime = column_ifexists('end_time', ''),
        FlowStatus = column_ifexists('flow_status', ''),
        HostName = column_ifexists('hostname', ''),
        IpProtocol = column_ifexists('ip_protocol', ''),
        NetskopePop = column_ifexists('netskope_pop', ''),
        NetworkSessionId = column_ifexists('network_session_id', ''),
        NumSessions = column_ifexists('num_sessions', ''),
        NumBytes = column_ifexists('numbytes', ''),
        OrganizationUnit = column_ifexists('organization_unit', ''),
        Os = column_ifexists('os', ''),
        OsVersion = column_ifexists('os_version', ''),
        Policy = column_ifexists('policy', ''),
        PopId = column_ifexists('pop_id', ''),
        Protocol = column_ifexists('protocol', ''),
        ProtocolPort = column_ifexists('protocol_port', ''),
        PublisherCn = column_ifexists('publisher_cn', ''),
        PublisherName = column_ifexists('publisher_name', ''),
        SAMAccountName = column_ifexists('sAMAccountName', ''),
        ServerBytes = column_ifexists('server_bytes', ''),
        ServerPackets = column_ifexists('server_packets', ''),
        SessionDuration = column_ifexists('session_duration', ''),
        Site = column_ifexists('site', ''),
        SrcCountry = column_ifexists('src_country', ''),
        SrcGeoipSrc = column_ifexists('src_geoip_src', ''),
        SrcLatitude = column_ifexists('src_latitude', ''),
        SrcLocation = column_ifexists('src_location', ''),
        SrcLongitude = column_ifexists('src_longitude', ''),
        SrcRegion = column_ifexists('src_region', ''),
        SrcZipcode = column_ifexists('src_zipcode', ''),
        SrcIp = column_ifexists('srcip', ''),
        SrcPort = column_ifexists('srcport', ''),
        StartTime = column_ifexists('start_time', ''),
        Timestamp = column_ifexists('timestamp', ''),
        TotalPackets = column_ifexists('total_packets', ''),
        TrafficType = column_ifexists('traffic_type', ''),
        TunnelId = column_ifexists('tunnel_id', ''),
        TunnelType = column_ifexists('tunnel_type', ''),
        TunnelUpTime = column_ifexists('tunnel_up_time', ''),
        PolicyType = column_ifexists('type_s', ''),
        UrNormalized = column_ifexists('ur_normalized', ''),
        User = column_ifexists('user', ''),
        UserIp = column_ifexists('userip', ''),
        UserKey = column_ifexists('userkey', ''),
        UserPrincipalName = column_ifexists('userPrincipalName', '')
    | project 
        TimeGenerated,
        AccessMethod,
        Action,
        App,
        AppCategory,
        Category,
        Cci,
        Ccl,
        ClientBytes,
        ClientPackets,
        CountI,
        Device,
        Domain,
        DstCountry,
        DstGeoipSrc,
        DstLatitude,
        DstLocation,
        DstLongitude,
        DstRegion,
        DstZipCode,
        DstHost,
        DstIp,
        DstPort,
        EndTime,
        FlowStatus,
        HostName,
        IpProtocol,
        NetskopePop,
        NetworkSessionId,
        NumSessions,
        NumBytes,
        OrganizationUnit,
        Os,
        OsVersion,
        Policy,
        PopId,
        Protocol,
        ProtocolPort,
        PublisherCn,
        PublisherName,
        SAMAccountName,
        ServerBytes,
        ServerPackets,
        SessionDuration,
        Site,
        SrcCountry,
        SrcGeoipSrc,
        SrcLatitude,
        SrcLocation,
        SrcLongitude,
        SrcRegion,
        SrcZipcode,
        SrcIp,
        SrcPort,
        StartTime,
        Timestamp,
        TotalPackets,
        TrafficType,
        TunnelId,
        TunnelType,
        TunnelUpTime,
        PolicyType,
        UrNormalized,
        User,
        UserIp,
        UserKey,
        UserPrincipalName
    };
    NetskopeEventsNetwork