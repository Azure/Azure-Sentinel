id: 46fcd585-a713-4efd-9bbb-4701a3de1da3
Function:
  Title: Parser for Netskope CCF WebTransactions data
  Version: "1.0.0"
  LastUpdated: "2025-10-15"
Category: Microsoft Sentinel Parser
FunctionName: NetskopeCCFWebTransactions
FunctionAlias: NetskopeCCFWebTransactions
FunctionQuery: |
  let dummy_table = datatable(TimeGenerated: datetime) [];
  let NetskopeWebtxDataTransactions_view = view() { 
      union isfuzzy=true dummy_table, NetskopeWebTransactions_CL
      | extend
          Computer = column_ifexists('Computer', ''),
          MG = column_ifexists('MG', ''),
          ManagementGroupName = column_ifexists('ManagementGroupName', ''),
          RawData = column_ifexists('RawData', ''),
          SourceSystem = column_ifexists('SourceSystem', ''),
          TenantId = column_ifexists('TenantId', ''),
          Type = column_ifexists('Type', ''),
          _ResourceId = column_ifexists('_ResourceId', ''),
          Date = column_ifexists('Date', ''),
          Time = column_ifexists('Time', ''),
          TimeTaken = column_ifexists('TimeTaken', ''),
          ClientBytes = column_ifexists('CsBytes', ''),
          ServerBytes = column_ifexists('ScBytes', ''),
          TotalBytes = column_ifexists('Bytes', ''),
          DeviceIp = column_ifexists('CIp', ''),
          ServerIp = column_ifexists('SIp', ''),
          ClientUsername = column_ifexists('CsUsername', ''),
          ClientMethod = column_ifexists('CsMethod', ''),
          ClientUriScheme = column_ifexists('CsUriScheme', ''),
          ClientUriQueryGUID = column_ifexists('CsUriQuery', ''),
          ClientUserAgent = column_ifexists('CsUserAgent', ''),
          ClientContentType = column_ifexists('CsContentType', ''),
          ServerStatusCode = column_ifexists('ScStatus', ''),
          ServerContentType = column_ifexists('ScContentType', ''),
          DestinationDomain = column_ifexists('CsDns', ''),
          ClientHost = column_ifexists('CsHost', ''),
          ClientUri = column_ifexists('CsUri', ''),
          ClientUriPort = column_ifexists('CsUriPort', ''),
          HTTPReferer = column_ifexists('CsReferer', ''),
          SessionId = column_ifexists('XCsSessionId', ''),
          AccessMethod = column_ifexists('XCsAccessMethod', ''),
          ClientCloudApp = column_ifexists('XCsApp', ''),
          DestinationCountry = column_ifexists('XSCountry', ''),
          DestinationLatitude = column_ifexists('XSLatitude', ''),
          ServerLongitude = column_ifexists('XSLongitude', ''),
          DestinationLocation = column_ifexists('XSLocation', ''),
          DestinationRegion = column_ifexists('XSRegion', ''),
          DestinationZipCode = column_ifexists('XSZipcode', ''),
          ClientCountry = column_ifexists('XCCountry', ''),
          ClientLatitude = column_ifexists('XCLatitude', ''),
          ClientLongitude = column_ifexists('XCLongitude', ''),
          ClientLocation = column_ifexists('XCLocation', ''),
          ClientRegion = column_ifexists('XCRegion', ''),
          ClientZipCode = column_ifexists('XCZipcode', ''),
          ClientOs = column_ifexists('XCOs', ''),
          ClientBrowser = column_ifexists('XCBrowser', ''),
          ClientBrowserVersion = column_ifexists('XCBrowserVersion', ''),
          ClientDeviceType = column_ifexists('XCDevice', ''),
          Site = column_ifexists('XCsSite', ''),
          ClientTimestamp = column_ifexists('XCsTimestamp', ''),
          ClientPageId = column_ifexists('XCsPageId', ''),
          SourceIp = column_ifexists('XCsUserIp', ''),
          ClientTrafficType = column_ifexists('XCsTrafficType', ''),
          ClientTunnelId = column_ifexists('XCsTunnelId', ''),
          CategoryName = column_ifexists('XCategory', ''),
          OtherCategory = column_ifexists('XOtherCategory', ''),
          LogMessageType = column_ifexists('XType', ''),
          ServerSSLError = column_ifexists('XServerSslErr', ''),
          ClientSSLError = column_ifexists('XClientSslErr', ''),
          TransactionId = column_ifexists('XTransactionId', ''),
          RequestId = column_ifexists('XRequestId', ''),
          ClientSNI = column_ifexists('XCsSni', ''),
          DomainFrontedSNI = column_ifexists('XCsDomainFrontedSni', ''),
          CategoryId = column_ifexists('XCategoryId', ''),
          OtherCategoryId = column_ifexists('XOtherCategoryId', ''),
          CustomHeadersName = column_ifexists('XSrHeadersName', ''),
          CustomHeadersValue = column_ifexists('XSrHeadersValue', ''),
          ClientSSLJa3GUID = column_ifexists('XCsSslJa3', ''),
          ServerFingerPrints = column_ifexists('XSrSslJa3S', ''),
          SSLBypass = column_ifexists('XSslBypass', ''),
          SSLBypassReason = column_ifexists('XSslBypassReason', ''),
          CertSubjectCN = column_ifexists('XRCertSubjectCn', ''),
          CertIssuerCN = column_ifexists('XRCertIssuerCn', ''),
          CertStartdate = column_ifexists('XRCertStartdate', ''),
          CertEnddate = column_ifexists('XRCertEnddate', ''),
          CertValid = column_ifexists('XRCertValid', ''),
          CertExpired = column_ifexists('XRCertExpired', ''),
          CertUntrustedRoot = column_ifexists('XRCertUntrustedRoot', ''),
          CertIncompleteChain = column_ifexists('XRCertIncompleteChain', ''),
          CertificateSelfSigned = column_ifexists('XRCertSelfSigned', ''),
          CertRevoked = column_ifexists('XRCertRevoked', ''),
          CertRevocationCheck = column_ifexists('XRCertRevocationCheck', ''),
          CertMisMatch = column_ifexists('XRCertMismatch', ''),
          ClientSSLFrontingError = column_ifexists('XCsSslFrontingError', ''),
          ClientSSLHandshakeError = column_ifexists('XCsSslHandshakeError', ''),
          ServerSSLHandShakeError = column_ifexists('XSrSslHandshakeError', ''),
          ServerSSLClientCertificateErr = column_ifexists('XSrSslClientCertificateError', ''),
          MalformedSSLFound = column_ifexists('XSrSslMalformedSsl', ''),
          CustomSigningCAError = column_ifexists('XSCustomSigningCaError', ''),
          ClientSSLEngineAction = column_ifexists('XCsSslEngineAction', ''),
          ClientSSLEngineActionReason = column_ifexists('XCsSslEngineActionReason', ''),
          ServerSSLEngineAction = column_ifexists('XSrSslEngineAction', ''),
          ServerSSLEngineActionReason = column_ifexists('XSrSslEngineActionReason', ''),
          SSLPolicySourceIp = column_ifexists('XSslPolicySrcIp', ''),
          SSLPolicyDestinationIp = column_ifexists('XSslPolicyDstIp', ''),
          SSLPolicyDestinationHostSource = column_ifexists('XSslPolicyDstHost', ''),
          SSLPolicyDestinationHost = column_ifexists('XSslPolicyDstHostSource', ''),
          SSLPolicyCategories = column_ifexists('XSslPolicyCategories', ''),
          SSLPolicyAction = column_ifexists('XSslPolicyAction', ''),
          SSLPolicyName = column_ifexists('XSslPolicyName', ''),
          ClientSSLVersion = column_ifexists('XCsSslVersion', ''),
          ClientSSLCipher = column_ifexists('XCsSslCipher', ''),
          ServerSSLVersion = column_ifexists('XSrSslVersion', ''),
          ServerSSLCipher = column_ifexists('XSrSslCipher', ''),
          ClientSourceIpEgress = column_ifexists('XCsSrcIpEgress', ''),
          RequestProcessingDataPlane = column_ifexists('XSDpName', ''),
          ClientSourceIp = column_ifexists('XCsSrcIp', ''),
          ClientSourcePort = column_ifexists('XCsSrcPort', ''),
          ClientDestinationIp = column_ifexists('XCsDstIp', ''),
          ClientDestinationPort = column_ifexists('XCsDstPort', ''),
          RemoteServerSourceIp = column_ifexists('XSrSrcIp', ''),
          RemoteServerSourcePort = column_ifexists('XSrSrcPort', ''),
          RemoteServerDestinationIp = column_ifexists('XSrDstIp', ''),
          RemoteServerDestinationPort = column_ifexists('XSrDstPort', ''),
          XFFConnectRequest = column_ifexists('XCsIpConnectXff', ''),
          XFFGetRequest = column_ifexists('XCsIpXff', ''),
          ClientConnectHost = column_ifexists('XCsConnectHost', ''),
          ClientConnectPort = column_ifexists('XCsConnectPort', ''),
          ClientConnectUserAgent = column_ifexists('XCsConnectUserAgent', ''),
          FullRequestURL = column_ifexists('XCsUrl', ''),
          ClientUriPath = column_ifexists('XCsUriPath', ''),
          ClientHTTPVersion = column_ifexists('XCsHttpVersion', ''),
          RemoteServerStatusCode = column_ifexists('RsStatus', ''),
          CloudAppCategory = column_ifexists('XCsAppCategory', ''),
          CCI = column_ifexists('XCsAppCci', ''),
          CCLevel = column_ifexists('XCsAppCcl', ''),
          CloudAppTags = column_ifexists('XCsAppTags', ''),
          CloudAppSuite = column_ifexists('XCsAppSuite', ''),
          CloudAppInstanceId = column_ifexists('XCsAppInstanceId', ''),
          CloudAppInstanceName = column_ifexists('XCsAppInstanceName', ''),
          CloudAppInstanceTag = column_ifexists('XCsAppInstanceTag', ''),
          CloudAppActivity = column_ifexists('XCsAppActivity', ''),
          CloudAppUserIdentity = column_ifexists('XCsAppFromUser', ''),
          CloudAppRecipientsList = column_ifexists('XCsAppToUser', ''),
          CloudAppSharedObjectType = column_ifexists('XCsAppObjectType', ''),
          CloudAppSharedObjectName = column_ifexists('XCsAppObjectName', ''),
          CloudAppSharedObjectId = column_ifexists('XCsAppObjectId', ''),
          RemoteServerFileType = column_ifexists('XRsFileType', ''),
          RemoteServerFileCategory = column_ifexists('XRsFileCategory', ''),
          RemoteServerFileLanguage = column_ifexists('XRsFileLanguage', ''),
          RemoteServerFileSize = column_ifexists('XRsFileSize', ''),
          RemoteServerFileMd5GUID = column_ifexists('XRsFileMd5', ''),
          RemoteServerFileSha256 = column_ifexists('XRsFileSha256', ''),
          TransactionError = column_ifexists('XError', ''),
          LocalTime = column_ifexists('XCLocalTime', ''),
          PolicyAction = column_ifexists('XPolicyAction', ''),
          PolicyName = column_ifexists('XPolicyName', ''),
          PolicySourceIp = column_ifexists('XPolicySrcIp', ''),
          PolicyDestinationIp = column_ifexists('XPolicyDstIp', ''),
          PolicyHostName = column_ifexists('XPolicyDstHo', ''),
          PolicyDestinationHostSource = column_ifexists('XPolicyDstHostSource', ''),
          PolicyJustificationType = column_ifexists('XPolicyJustificationType', ''),
          PolicyJustificationReason = column_ifexists('XPolicyJustificationReason', ''),
          Notification = column_ifexists('XScNotificationName', '') 
      | project 
          Computer,
          MG,
          ManagementGroupName,
          RawData,
          SourceSystem,
          TenantId,
          TimeGenerated,
          Type,
          _ResourceId,
          Date,
          Time,
          ClientZipCode,
          CustomSigningCAError,
          ClientTrafficType,
          RemoteServerFileSize,
          ClientCloudApp,
          RemoteServerFileCategory,
          ClientHost,
          Notification,
          SourceIp,
          SSLPolicyDestinationHost,
          LogMessageType,
          DestinationDomain,
          ClientSSLEngineAction,
          ClientSSLVersion,
          RequestId,
          XFFGetRequest,
          DestinationRegion,
          RemoteServerFileMd5GUID,
          CertRevocationCheck,
          ClientUriScheme,
          ClientConnectUserAgent,
          SSLPolicyAction,
          PolicyAction,
          ServerSSLError,
          CertRevoked,
          ServerLongitude,
          RequestProcessingDataPlane,
          OtherCategoryId,
          ServerContentType,
          PolicySourceIp,
          ClientCountry,
          ClientPageId,
          CertExpired,
          CloudAppSharedObjectId,
          CertEnddate,
          XFFConnectRequest,
          RemoteServerStatusCode,
          PolicyDestinationHostSource,
          DeviceIp,
          CloudAppSuite,
          ClientUri,
          ClientSourceIp,
          ClientBytes,
          CloudAppRecipientsList,
          ClientSSLFrontingError,
          CertStartdate,
          RemoteServerSourcePort,
          Site,
          TransactionError,
          AccessMethod,
          ClientTimestamp,
          ClientContentType,
          TimeTaken,
          ClientDeviceType,
          CertIncompleteChain,
          ClientMethod,
          CategoryName,
          ServerSSLEngineAction,
          RemoteServerFileType,
          SSLPolicySourceIp,
          ServerSSLVersion,
          ServerBytes,
          ClientHTTPVersion,
          SSLPolicyName,
          CertSubjectCN,
          ServerSSLClientCertificateErr,
          CloudAppSharedObjectName,
          RemoteServerSourceIp,
          ClientLongitude,
          ServerFingerPrints,
          ServerStatusCode,
          DestinationZipCode,
          MalformedSSLFound,
          FullRequestURL,
          CertMisMatch,
          ClientTunnelId,
          ClientSourceIpEgress,
          ClientBrowserVersion,
          CertificateSelfSigned,
          ServerIp,
          ServerSSLCipher,
          PolicyJustificationReason,
          ClientSourcePort,
          CloudAppInstanceId,
          TotalBytes,
          ClientSSLJa3GUID,
          CloudAppActivity,
          RemoteServerFileLanguage,
          CustomHeadersValue,
          CloudAppSharedObjectType,
          DestinationLocation,
          TransactionId,
          ClientSSLHandshakeError,
          SSLBypassReason,
          SSLPolicyDestinationIp,
          ClientConnectPort,
          ClientSNI,
          SSLBypass,
          PolicyJustificationType,
          DomainFrontedSNI,
          CustomHeadersName,
          ClientUriPort,
          ClientConnectHost,
          ClientBrowser,
          CloudAppInstanceTag,
          ServerSSLHandShakeError,
          CCI,
          RemoteServerFileSha256,
          PolicyDestinationIp,
          PolicyName,
          DestinationLatitude,
          CloudAppCategory,
          CloudAppUserIdentity,
          ClientUsername,
          OtherCategory,
          ClientSSLEngineActionReason,
          ClientOs,
          ClientUriQueryGUID,
          ClientUserAgent,
          HTTPReferer,
          SSLPolicyCategories,
          RemoteServerDestinationPort,
          CertIssuerCN,
          DestinationCountry,
          ClientLatitude,
          ClientLocation,
          PolicyHostName,
          CategoryId,
          ClientDestinationIp,
          RemoteServerDestinationIp,
          CertUntrustedRoot,
          ClientSSLError,
          CCLevel,
          LocalTime,
          ClientRegion,
          ClientDestinationPort,
          SSLPolicyDestinationHostSource,
          CloudAppInstanceName,
          ClientUriPath,
          ServerSSLEngineActionReason,
          SessionId,
          CloudAppTags,
          ClientSSLCipher,
          CertValid
  };
  NetskopeWebtxDataTransactions_view