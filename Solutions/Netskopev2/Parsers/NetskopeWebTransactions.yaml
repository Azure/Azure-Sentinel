id: 47794680-196f-4a19-a958-36f4f80794df
Function:
  Title: Parser for NetskopeWebTransactions
  Version: "1.0.0"
  LastUpdated: "2024-03-06"
Category: Microsoft Sentinel Parser
FunctionName: NetskopeWebTransactions
FunctionAlias: NetskopeWebTransactions
FunctionQuery: |
  let NetskopeWebTransactions_view = view() {
      NetskopeWebtxData_CL
      | extend
          Computer = column_ifexists('Computer', ''),
          MG = column_ifexists('MG', ''),
          ManagementGroupName = column_ifexists('ManagementGroupName', ''),
          RawData = column_ifexists('RawData', ''),
          SourceSystem = column_ifexists('SourceSystem', ''),
          TenantId = column_ifexists('TenantId', ''),
          TimeGenerated  = column_ifexists('TimeGenerated', ''),
          Type = column_ifexists('Type', ''),
          _ResourceId = column_ifexists('_ResourceId', ''),
          LogMessageType = column_ifexists('x_type_s', ''),
          TransactionId = column_ifexists('x_transaction_id_s', ''),
          SSLPolicySourceIp = column_ifexists('x_ssl_policy_src_ip_s', ''),
          SSLPolicyName = column_ifexists('x_ssl_policy_name_s', ''),
          SSLPolicyDestinationIp = column_ifexists('x_ssl_policy_dst_ip_s', ''),
          SSLPolicyDestinationHost = column_ifexists('x_ssl_policy_dst_host_source_s', ''),
          SSLPolicyDestinationHostSource = column_ifexists('x_ssl_policy_dst_host_s', ''),
          SSLPolicyCategories = column_ifexists('x_ssl_policy_categories_s', ''),
          SSLPolicyAction = column_ifexists('x_ssl_policy_action_s', ''),
          SSLBypass = column_ifexists('x_ssl_bypass_s', ''),
          SSLBypassReason = column_ifexists('x_ssl_bypass_reason_s', ''),
          ServerSSLVersion = column_ifexists('x_sr_ssl_version_s', ''),
          MalformedSSLFound = column_ifexists('x_sr_ssl_malformed_ssl_s', ''),
          ServerFingerPrints = column_ifexists('x_sr_ssl_ja3s_s', ''),
          ServerSSLHandShakeError = column_ifexists('x_sr_ssl_handshake_error_s', ''),
          ServerSSLEngineAction = column_ifexists('x_sr_ssl_engine_action_s', ''),
          ServerSSLEngineActionReason = column_ifexists('x_sr_ssl_engine_action_reason_s', ''),
          ServerSSLClientCertificateErr = column_ifexists('x_sr_ssl_client_certificate_error_s', ''),
          ServerSSLCipher = column_ifexists('x_sr_ssl_cipher_s', ''),
          RemoteServerSourcePort = column_ifexists('x_sr_src_port_s', ''),
          RemoteServerSourceIp = column_ifexists('x_sr_src_ip_s', ''),
          CustomHeadersValue = column_ifexists('x_sr_headers_value_s', ''),
          CustomHeadersName = column_ifexists('x_sr_headers_name_s', ''),
          RemoteServerDestinationPort = column_ifexists('x_sr_dst_port_s', ''),
          RemoteServerDestinationIp = column_ifexists('x_sr_dst_ip_s', ''),
          ServerSSLError = column_ifexists('x_server_ssl_err_s', ''),
          Notification = column_ifexists('x_sc_notification_name_s', ''),
          DestinationZipCode = column_ifexists('x_s_zipcode_s', ''),
          DestinationRegion = column_ifexists('x_s_region_s', ''),
          ServerLongitude = column_ifexists('x_s_longitude_s', ''),
          DestinationLocation = column_ifexists('x_s_location_s', ''),
          DestinationLatitude = column_ifexists('x_s_latitude_s', ''),
          RequestProcessingDataPlane = column_ifexists('x_s_dp_name_s', ''),
          CustomSigningCAError = column_ifexists('x_s_custom_signing_ca_error_s', ''),
          DestinationCountry = column_ifexists('x_s_country_s', ''),
          RemoteServerFileType = column_ifexists('x_rs_file_type_s', ''),
          RemoteServerFileSize = column_ifexists('x_rs_file_size_s', ''),
          RemoteServerFileSha256 = column_ifexists('x_rs_file_sha256_s', ''),
          RemoteServerFileMd5 = column_ifexists('x_rs_file_md5_s', ''),
          RemoteServerFileMd5GUID = column_ifexists('x_rs_file_md5_g', ''),
          RemoteServerFileLanguage = column_ifexists('x_rs_file_language_s', ''),
          RemoteServerFileCategory = column_ifexists('x_rs_file_category_s', ''),
          RequestId = column_ifexists('x_request_id_s', ''),
          CertValid = column_ifexists('x_r_cert_valid_s', ''),
          CertUntrustedRoot = column_ifexists('x_r_cert_untrusted_root_s', ''),
          CertSubjectCN = column_ifexists('x_r_cert_subject_cn_s', ''),
          CertStartdate = column_ifexists('x_r_cert_startdate_s', ''),
          CertificateSelfSigned = column_ifexists('x_r_cert_self_signed_s', ''),
          CertRevoked = column_ifexists('x_r_cert_revoked_s', ''),
          CertRevocationCheck = column_ifexists('x_r_cert_revocation_check_s', ''),
          CertMisMatch = column_ifexists('x_r_cert_mismatch_s', ''),
          CertIssuerCN = column_ifexists('x_r_cert_issuer_cn_s', ''),
          CertIncompleteChain = column_ifexists('x_r_cert_incomplete_chain_s', ''),
          CertExpired = column_ifexists('x_r_cert_expired_s', ''),
          CertEnddate = column_ifexists('x_r_cert_enddate_s', ''),
          PolicySourceIp = column_ifexists('x_policy_src_ip_s', ''),
          PolicyName = column_ifexists('x_policy_name_s', ''),
          PolicyJustificationType = column_ifexists('x_policy_justification_type_s', ''),
          PolicyJustificationReason = column_ifexists('x_policy_justification_reason_s', ''),
          PolicyDestinationIp = column_ifexists('x_policy_dst_ip_s', ''),
          PolicyDestinationHostSource = column_ifexists('x_policy_dst_host_source_s', ''),
          PolicyHostName = column_ifexists('x_policy_dst_host_s', ''),
          PolicyAction = column_ifexists('x_policy_action_s', ''),
          OtherCategory = column_ifexists('x_other_category_s', ''),
          OtherCategoryId = column_ifexists('x_other_category_id_s', ''),
          TransactionError = column_ifexists('x_error_s', ''),
          SourceIp = column_ifexists('x_cs_userip_s', ''),
          FullRequestURL = column_ifexists('x_cs_url_s', ''),
          ClientUriPath = column_ifexists('x_cs_uri_path_s', ''),
          ClientTunnelId = column_ifexists('x_cs_tunnel_id_s', ''),
          ClientTrafficType = column_ifexists('x_cs_traffic_type_s', ''),
          ClientTimestamp = column_ifexists('x_cs_timestamp_s', ''),
          ClientSSLVersion = column_ifexists('x_cs_ssl_version_s', ''),
          ClientSSLJa3 = column_ifexists('x_cs_ssl_ja3_s', ''),
          ClientSSLJa3GUID = column_ifexists('x_cs_ssl_ja3_g', ''),
          ClientSSLHandshakeError = column_ifexists('x_cs_ssl_handshake_error_s', ''),
          ClientSSLFrontingError = column_ifexists('x_cs_ssl_fronting_error_s', ''),
          ClientSSLEngineAction = column_ifexists('x_cs_ssl_engine_action_s', ''),
          ClientSSLEngineActionReason = column_ifexists('x_cs_ssl_engine_action_reason_s', ''),
          ClientSSLCipher = column_ifexists('x_cs_ssl_cipher_s', ''),
          ClientSourcePort= column_ifexists('x_cs_src_port_s', ''),
          ClientSourceIp = column_ifexists('x_cs_src_ip_s', ''),
          ClientSourceIpEgress = column_ifexists('x_cs_src_ip_egress_s', ''),
          ClientSNI = column_ifexists('x_cs_sni_s', ''),
          Site = column_ifexists('x_cs_site_s', ''),
          SessionId = column_ifexists('x_cs_session_id_s', ''),
          ClientPageId = column_ifexists('x_cs_page_id_s', ''),
          XFFGetRequest = column_ifexists('x_cs_ip_xff_s', ''),
          XFFConnectRequest = column_ifexists('x_cs_ip_connect_xff_s', ''),
          ClientHTTPVersion = column_ifexists('x_cs_http_version_s', ''),
          ClientDestinationPort = column_ifexists('x_cs_dst_port_s', ''),
          ClientDestinationIp = column_ifexists('x_cs_dst_ip_s', ''),
          DomainFrontedSNI= column_ifexists('x_cs_domain_fronted_sni_s', ''),
          ClientConnectUserAgent = column_ifexists('x_cs_connect_user_agent_s', ''),
          ClientConnectPort = column_ifexists('x_cs_connect_port_s', ''),
          ClientConnectHost = column_ifexists('x_cs_connect_host_s', ''),
          CloudAppRecipientsList = column_ifexists('x_cs_app_to_user_s', ''),
          CloudAppTags = column_ifexists('x_cs_app_tags_s', ''),
          CloudAppSuite = column_ifexists('x_cs_app_suite_s', ''),
          ClientCloudApp = column_ifexists('x_cs_app_s', ''),
          CloudAppSharedObjectType = column_ifexists('x_cs_app_object_type_s', ''),
          CloudAppSharedObjectName = column_ifexists('x_cs_app_object_name_s', ''),
          CloudAppSharedObjectId = column_ifexists('x_cs_app_object_id_s', ''),
          CloudAppInstanceTag = column_ifexists('x_cs_app_instance_tag_s', ''),
          CloudAppInstanceName = column_ifexists('x_cs_app_instance_name_s', ''),
          CloudAppInstanceId = column_ifexists('x_cs_app_instance_id_s', ''),
          CloudAppUserIdentity = column_ifexists('x_cs_app_from_user_s', ''),
          CCLevel = column_ifexists('x_cs_app_ccl_s', ''),
          CCI= column_ifexists('x_cs_app_cci_s', ''),
          CloudAppCategory = column_ifexists('x_cs_app_category_s', ''),
          CloudAppActivity = column_ifexists('x_cs_app_activity_s', ''),
          AccessMethod = column_ifexists('x_cs_access_method_s', ''),
          ClientSSLError = column_ifexists('x_client_ssl_err_s', ''),
          CategoryName = column_ifexists('x_category_s', ''),
          CategoryId = column_ifexists('x_category_id_s', ''),
          ClientZipCode = column_ifexists('x_c_zipcode_s', ''),
          ClientRegion = column_ifexists('x_c_region_s', ''),
          ClientOs = column_ifexists('x_c_os_s', ''),
          ClientLongitude = column_ifexists('x_c_longitude_s', ''),
          ClientLocation = column_ifexists('x_c_location_s', ''),
          LocalTime = column_ifexists('x_c_local_time_s', ''),
          ClientLatitude = column_ifexists('x_c_latitude_s', ''),
          ClientDeviceType = column_ifexists('x_c_device_s', ''),
          ClientCountry = column_ifexists('x_c_country_s', ''),
          ClientBrowserVersion = column_ifexists('x_c_browser_version_s', ''),
          ClientBrowser = column_ifexists('x_c_browser_s', ''),
          TimeTaken = column_ifexists('time_taken_s', ''),
          Time = column_ifexists('time_s', ''),
          ServerStatusCode = column_ifexists('sc_status_s', ''),
          ServerContentType = column_ifexists('sc_content_type_s', ''),
          ServerBytes = column_ifexists('sc_bytes_s', ''),
          ServerIp = column_ifexists('s_ip_s', ''),
          RemoteServerStatusCode = column_ifexists('rs_status_s', ''),
          NetskopeTenant= column_ifexists('netskope_api_host_name_s', ''),
          Date = column_ifexists('date_s', ''),
          ClientUsername = column_ifexists('cs_username_s', ''),
          ClientUserAgent = column_ifexists('cs_user_agent_s', ''),
          ClientUriScheme = column_ifexists('cs_uri_scheme_s', ''),
          ClientUri = column_ifexists('cs_uri_s', ''),
          ClientUriQuery = column_ifexists('cs_uri_query_s', ''),
          ClientUriQueryGUID = column_ifexists('cs_uri_query_g', ''),
          ClientUriPort = column_ifexists('cs_uri_port_s', ''),
          HTTPReferer = column_ifexists('cs_referer_s', ''),
          ClientMethod = column_ifexists('cs_method_s', ''),
          ClientHost = column_ifexists('cs_host_s', ''),
          DestinationDomain = column_ifexists('cs_dns_s', ''),
          ClientContentType = column_ifexists('cs_content_type_s', ''),
          ClientBytes = column_ifexists('cs_bytes_s', ''),
          DeviceIp = column_ifexists('c_ip_s', ''),
          TotalBytes = column_ifexists('bytes_s', '')
      | project 
          Computer,
          MG,
          ManagementGroupName,
          RawData,
          SourceSystem,
          TenantId,
          TimeGenerated,
          Type,
          _ResourceId,
          LogMessageType,
          TransactionId,
          SSLPolicySourceIp,
          SSLPolicyName,
          SSLPolicyDestinationIp,
          SSLPolicyDestinationHost,
          SSLPolicyDestinationHostSource,
          SSLPolicyCategories,
          SSLPolicyAction,
          SSLBypass,
          SSLBypassReason,
          ServerSSLVersion,
          MalformedSSLFound,
          ServerFingerPrints,
          ServerSSLHandShakeError,
          ServerSSLEngineAction,
          ServerSSLEngineActionReason,
          ServerSSLClientCertificateErr,
          ServerSSLCipher,
          RemoteServerSourcePort,
          RemoteServerSourceIp,
          CustomHeadersValue,
          CustomHeadersName,
          RemoteServerDestinationPort,
          RemoteServerDestinationIp,
          ServerSSLError,
          Notification,
          DestinationZipCode,
          DestinationRegion,
          ServerLongitude,
          DestinationLocation,
          DestinationLatitude,
          RequestProcessingDataPlane,
          CustomSigningCAError,
          DestinationCountry,
          RemoteServerFileType,
          RemoteServerFileSize,
          RemoteServerFileSha256,
          RemoteServerFileMd5,
          RemoteServerFileMd5GUID,
          RemoteServerFileLanguage,
          RemoteServerFileCategory,
          RequestId,
          CertValid,
          CertUntrustedRoot,
          CertSubjectCN,
          CertStartdate,
          CertificateSelfSigned,
          CertRevoked,
          CertRevocationCheck,
          CertMisMatch,
          CertIssuerCN,
          CertIncompleteChain,
          CertExpired,
          CertEnddate,
          PolicySourceIp,
          PolicyName,
          PolicyJustificationType,
          PolicyJustificationReason,
          PolicyDestinationIp,
          PolicyDestinationHostSource,
          PolicyHostName,
          PolicyAction,
          OtherCategory,
          OtherCategoryId,
          TransactionError,
          SourceIp,
          FullRequestURL,
          ClientUriPath,
          ClientTunnelId,
          ClientTrafficType,
          ClientTimestamp,
          ClientSSLVersion,
          ClientSSLJa3,
          ClientSSLJa3GUID,
          ClientSSLHandshakeError,
          ClientSSLFrontingError,
          ClientSSLEngineAction,
          ClientSSLEngineActionReason,
          ClientSSLCipher,
          ClientSourcePort,
          ClientSourceIp,
          ClientSourceIpEgress,
          ClientSNI,
          Site,
          SessionId,
          ClientPageId,
          XFFGetRequest,
          XFFConnectRequest,
          ClientHTTPVersion,
          ClientDestinationPort,
          ClientDestinationIp,
          DomainFrontedSNI,
          ClientConnectUserAgent,
          ClientConnectPort,
          ClientConnectHost,
          CloudAppRecipientsList,
          CloudAppTags,
          CloudAppSuite,
          ClientCloudApp,
          CloudAppSharedObjectType,
          CloudAppSharedObjectName,
          CloudAppSharedObjectId,
          CloudAppInstanceTag,
          CloudAppInstanceName,
          CloudAppInstanceId,
          CloudAppUserIdentity,
          CCLevel,
          CCI,
          CloudAppCategory,
          CloudAppActivity,
          AccessMethod,
          ClientSSLError,
          CategoryName,
          CategoryId,
          ClientZipCode,
          ClientRegion,
          ClientOs,
          ClientLongitude,
          ClientLocation,
          LocalTime,
          ClientLatitude,
          ClientDeviceType,
          ClientCountry,
          ClientBrowserVersion,
          ClientBrowser,
          TimeTaken,
          Time,
          ServerStatusCode,
          ServerContentType,
          ServerBytes,
          ServerIp,
          RemoteServerStatusCode,
          NetskopeTenant,
          Date,
          ClientUsername,
          ClientUserAgent,
          ClientUriScheme,
          ClientUri,
          ClientUriQuery,
          ClientUriQueryGUID,
          ClientUriPort,
          HTTPReferer,
          ClientMethod,
          ClientHost,
          DestinationDomain,
          ClientContentType,
          ClientBytes,
          DeviceIp,
          TotalBytes
  };
  NetskopeWebTransactions_view