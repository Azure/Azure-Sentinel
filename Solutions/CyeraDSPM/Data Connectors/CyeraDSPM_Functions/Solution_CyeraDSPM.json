{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": { "type": "string" },
        "workspace-location": { "type": "string" },
        "dataConnectorFunctionsVersion": { "type": "string" },
        "solutionId": { "type": "string" },
        "solutionName": { "type": "string" },
        "email": { "type": "string" },
        "cyeraLogoIcon": { "type": "string" },
        "dataConnectorContentIdConnectorDefinition2": { "type": "string" },
        "armTemplateAzureFunctionsUri": { "type": "string" },
        "armTemplateAzureFunctionsInstallGuide": { "type": "string" },
        "armTemplateAzureFunctionsScripts": { "type": "string" }
    },
    "variables": {
        "_solutionId": "[parameters('solutionId')]",
        "_solutionName": "[parameters('solutionName')]",
        "_email": "[parameters('email')]",
        "_cyeraLogoIcon": "[parameters('cyeraLogoIcon')]",
        "_dataConnectorFunctionsVersion": "[parameters('dataConnectorFunctionsVersion')]",
        "_dataConnectorContentIdConnectorDefinition2": "[parameters('dataConnectorContentIdConnectorDefinition2')]",
        "_armTemplateAzureFunctionsUri": "[parameters('armTemplateAzureFunctionsUri')]",
        "_armTemplateAzureFunctionsInstallGuide": "[parameters('armTemplateAzureFunctionsInstallGuide')]",
        "_armTemplateAzureFunctionsScripts": "[parameters('armTemplateAzureFunctionsScripts')]"
    },
    "resources": [
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition2'))]",
            "apiVersion": "2022-09-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
            "location": "[parameters('workspace-location')]",
            "kind": "GenericUI",
            "properties": {
                "connectorUiConfig": {
                    "id": "[variables('_dataConnectorContentIdConnectorDefinition2')]",
                    "title": "Cyera DSPM Sentinel Data Connector - Azure Functions",
                    "publisher": "Cyera Inc",
                    "logo": "[variables('_cyeraLogoIcon')]",
                    "descriptionMarkdown": "The **Cyera DSPM Azure Function Connector** enables seamless ingestion of Cyera’s **Data Security Posture Management (DSPM)** telemetry — *Assets*, *Identities*, *Issues*, and *Classifications* — into **Microsoft Sentinel**.\\n\\nThis connector uses an **Azure Function App** to call Cyera’s REST API on a schedule, fetch the latest DSPM telemetry, and send it to Sentinel through the **Azure Monitor Logs Ingestion API** via a **Data Collection Endpoint (DCE)** and **Data Collection Rule (DCR, kind: Direct)** — no agents required.\\n\\n**Tables created/used**\\n\\n| Entity | Table | Purpose |\\n|---|---|---|\\n| Assets | `CyeraAssets_CL` | Raw asset metadata and data-store context |\\n| Identities | `CyeraIdentities_CL` | Identity definitions and sensitivity context |\\n| Issues | `CyeraIssues_CL` | Findings and remediation details |\\n| Classifications | `CyeraClassifications_CL` | Data class & sensitivity definitions |\\n| MS View | `CyeraAssets_MS_CL` | Normalized asset view for dashboards |\\n\\n> **Note:** This connector should only be used if directed by your Cyera CSE and otherwise use CCF based connector **Cyera DSPM Azure Sentinel Data Connector** which aligns with Microsoft’s recommended Direct ingestion path for Sentinel.",
                    "additionalRequirementBanner": "This connector deploys KQL transforms in the DCR. No parser function is required.",
                    "graphQueries": [
                        { "metricName": "cyera_functions_classifications", "legend": "Total Cyera Classification Records", "baseQuery": "CyeraClassifications_CL" },
                        { "metricName": "cyera_functions_assets", "legend": "Total Cyera Assets Records", "baseQuery": "CyeraAssets_CL" },
                        { "metricName": "cyera_functions_assets_ms", "legend": "Total Cyera Asset MS Records", "baseQuery": "CyeraAssets_MS_CL" },
                        { "metricName": "cyera_functions_issues", "legend": "Total Cyera Issue Records", "baseQuery": "CyeraIssues_CL" },
                        { "metricName": "cyera_functions_identities", "legend": "Total Cyera Identities Records", "baseQuery": "CyeraIdentities_CL" }
                    ],
                    "sampleQueries": [
                        { "description": "Get Sample of Cyera DSPM Classification Definitions", "query": "CyeraClassifications_CL | take 10" },
                        { "description": "Get Sample of Cyera DSPM Datastore Assets", "query": "CyeraAssets_CL | take 10" },
                        { "description": "Get Sample of Cyera DSPM Table Assets", "query": "CyeraAssets_MS_CL | take 10" },
                        { "description": "Get Sample of Cyera DSPM Issues Identified", "query": "CyeraIssues_CL | take 10" },
                        { "description": "Get Sample of Cyera DSPM Identities", "query": "CyeraIdentities_CL | take 10" }
                    ],
                    "dataTypes": [
                        { "name": "CyeraClassifications_CL", "lastDataReceivedQuery": "CyeraClassifications_CL\n       | where TimeGenerated > ago(48h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)" },
                        { "name": "CyeraAssets_CL", "lastDataReceivedQuery": "CyeraAssets_CL\n       | where TimeGenerated > ago(48h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)" },
                        { "name": "CyeraAssets_MS_CL", "lastDataReceivedQuery": "CyeraAssets_MS_CL\n       | where TimeGenerated > ago(48h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)" },
                        { "name": "CyeraIssues_CL", "lastDataReceivedQuery": "CyeraIssues_CL\n       | where TimeGenerated > ago(48h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)" },
                        { "name": "CyeraIdentities_CL", "lastDataReceivedQuery": "CyeraIdentities_CL\n       | where TimeGenerated > ago(48h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)" }
                    ],
                    "ConnectivityCriteria": [
                        { "type": "IsConnectedQuery", "value": [ "CyeraClassifications_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)" ] },
                        { "type": "IsConnectedQuery", "value": [ "CyeraAssets_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)" ] },
                        { "type": "IsConnectedQuery", "value": [ "CyeraAssets_MS_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)" ] },
                        { "type": "IsConnectedQuery", "value": [ "CyeraIssues_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)" ] },
                        { "type": "IsConnectedQuery", "value": [ "CyeraIdentities_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)" ] }
                    ],
                    "availability": { "status": 1, "isPreview": false },
                    "permissions": {
                        "resourceProvider": [
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces",
                                "permissionsDisplayText": "Read and Write permissions are required.",
                                "providerDisplayName": "Workspace",
                                "scope": "Workspace",
                                "requiredPermissions": { "read": true, "write": true, "delete": true, "action": false }
                            }
                        ]
                    },
                    "instructionSteps": [
                        { "title": "Note", "description": ">**NOTE:** This connector uses an **Azure Function App** and the **Azure Monitor Logs Ingestion API** (DCE + DCR, kind: Direct). Function runtime and data egress may incur charges. See [Azure Functions pricing](https://azure.microsoft.com/pricing/details/functions/)." },
                        { "title": "Optional Step", "description": ">**(Optional)** Store Cyera API credentials in **Azure Key Vault** and reference them from the Function App. See [Key Vault references](https://learn.microsoft.com/azure/app-service/app-service-key-vault-references)." },
                        { "title": "STEP 1 — Prepare Cyera API Access", "description": "1) Generate a **Personal Access Token** [Generating Personal Access Token](https://support.cyera.io/hc/en-us/articles/19446274608919-Personal-and-API-Tokens) in your Cyera tenant.\\n2) Note **API Base URL**, **Client ID**, and **Client Secret**." },
                        {
                            "title": "STEP 2 — Choose ONE deployment option",
                            "description": "> Before deploying, have these values handy:",
                            "instructions": [
                                { "parameters": { "fillWith": [ "CyeraDSPMConnector" ], "label": "[variables('dataConnectorContentIdConnectorDefinition2')]" }, "type": "CopyableLabel" },
                                { "parameters": { "fillWith": [ "[parameters('workspace')]" ], "label": "Workspace Name" }, "type": "CopyableLabel" },
                                { "parameters": { "fillWith": [ "[parameters('workspace-location')]" ], "label": "Workspace Location" }, "type": "CopyableLabel" },
                                { "parameters": { "fillWith": [ "https://api.cyera.io" ], "label": "Cyera Base URL" }, "type": "CopyableLabel" },
                                { "parameters": { "fillWith": [ "CyeraClientID" ], "label": "Cyera Personal Access Token Client ID" }, "type": "CopyableLabel" },
                                { "parameters": { "fillWith": [ "CyeraSecret" ], "label": "Cyera Personal Access Token Secret" }, "type": "CopyableLabel" }
                            ]
                        },
                        { "title": "Option 1", "description": "[concat('**Option 1 - Azure Resource Manager (ARM) Template**\\n\\nUse this method for automated deployment of the Cyera DSPM Functions and all required resources to support the connector.\\n\\n1. Click the **Deploy to Azure** button below. \\n+\\n\t[![Deploy to Azure](https://aka.ms/deploytoazurebutton)](https://portal.azure.com/#create/Microsoft.Template/uri/', variables('_armTemplateAzureFunctionsUri'), ')\\n2. Select the preferred **FunctionName** and **Workspace Name**. \\n+3. Enter the **Workspace Location**, **Cyera API Base Url**, **Personal Access Token Client ID**, and **Personal Access Token Secret**. \\n+>Note: If using Azure Key Vault secrets for any of the values above, use the`@Microsoft.KeyVault(SecretUri={Security Identifier})`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details. \\n+4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \\n+5. Click **Purchase** to deploy.')]" },
                        { "title": "Option 2 — Manual Deployment", "description": "[concat('Follow the [install pack’s step-by-step guide](', variables('_armTemplateAzureFunctionsInstallGuide'), ').\\n\\n1) Create/update the 5 custom tables, data collection rule with format `sentinel-dce-<functuion_name>`, and data collection endpoint with format `sentinel-dcr-<functuion_name>` using the scripts in [install-pack/scripts](', variables('_armTemplateAzureFunctionsScripts'), ').\\n2) Deploy the Azure Function from the repo`s Function folder (Timer-trigger; schedule typically 5–15 minutes).\\n3) Configure Function App settings:\\n   - `CyeraBaseUrl` — Cyera API Base URL\\n   - `CyeraClientId` — Client ID (PAT)\\n   - `CyeraSecret` — Client Secret (PAT)\\n   - `DCR_IMMUTABLE_ID` — DCR immutable ID\\n   - `DCE_ENDPOINT` — Logs ingestion endpoint URL\\n   - `STREAM_ASSETS`=`Custom-CyeraAssets`, `STREAM_IDENTITIES`=`Custom-CyeraIdentities`, `STREAM_ISSUES`=`Custom-CyeraIssues`, `STREAM_CLASSIFICATIONS`=`Custom-CyeraClassifications`\\n4) Save and Start the Function App.')]" }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition2')))]",
            "apiVersion": "2022-01-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition2'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition2')]",
                "kind": "DataConnector",
                "version": "[variables('_dataConnectorFunctionsVersion')]",
                "source": { "sourceId": "[variables('_solutionId')]", "name": "[variables('_solutionName')]", "kind": "Solution" },
                "author": { "name": "Microsoft", "email": "[variables('_email')]" },
                "support": { "name": "Microsoft Corporation", "email": "support@microsoft.com", "tier": "Microsoft", "link": "https://support.microsoft.com" }
            }
        }
    ]
}


