{
            "id": "CyeraDSPMFunctions",
            "title": "Cyera DSPM Azure Functions Sentinel Data Connector",
            "publisher": "Cyera Inc",
            "descriptionMarkdown": "The [Cyera DSPM](https://api.cyera.io/) data connector allows you to connect to your Cyera's DSPM instance and ingesting Classifications, Assets, Issues, and Identity Definitions into Microsoft Sentinel. The data connector is built on Microsoft Sentinel's Codeless Connector Platform and uses the Cyera's API to fetch Cyera's [DSPM Telemetry](https://www.cyera.com/) once recieced can be correlated with security events creating custom columns so that queries don't need to parse it again, thus resulting in better performance.",
            "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution.",
            "graphQueries": [
                {
                    "metricName": "Total classification definitions received",
                    "legend": "Cyera DSPM Activities Logs",
                    "baseQuery": "CyeraClassifications_CL"
                },
                {
                    "metricName": "Total datastore assets received",
                    "legend": "Cyera DSPM Activities Logs",
                    "baseQuery": "CyeraAssets_CL"
                },
                {
                    "metricName": "Total datastore Table assets received",
                    "legend": "Cyera DSPM Activities Logs",
                    "baseQuery": "CyeraAssets_MS_CL"
                },
                {
                    "metricName": "Total Cyera identified issues received",
                    "legend": "Cyera DSPM Activities Logs",
                    "baseQuery": "CyeraIssues_CL"
                },
                {
                    "metricName": "Total identities received",
                    "legend": "Cyera DSPM Activities Logs",
                    "baseQuery": "CyeraIdentities_CL"
                },
                {
                    "metricName": "Total identities received",
                    "legend": "Cyera DSPM Activities Logs",
                    "baseQuery": "CyeraAssets_MS_CL"
                }
            ],
            "sampleQueries": [
                {
                    "description": "Get Sample of Cyera DSPM Classification Definitions",
                    "query": "CyeraClassifications_CL | take 10"
                },
                {
                    "description": "Get Sample of Cyera DSPM Datastore Assets",
                    "query": "CyeraAssets_CL | take 10"
                },
                {
                    "description": "Get Sample of Cyera DSPM Table Assets",
                    "query": "CyeraAssets_MS_CL | take 10"
                },
                {
                    "description": "Get Sample of Cyera DSPM Issues Identified",
                    "query": "CyeraIssues_CL | take 10"
                },
                {
                    "description": "Get Sample of Cyera DSPM Identities",
                    "query": "CyeraIdentities_CL | take 10"
                }
            ],
            "dataTypes": [
                {
                    "name": "CyeraClassifications_CL",
                    "lastDataReceivedQuery": "CyeraClassifications_CL\n       | where TimeGenerated > ago(48h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                },
                {
                    "name": "CyeraAssets_CL",
                    "lastDataReceivedQuery": "CyeraAssets_CL\n       | where TimeGenerated > ago(48h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                },
                {
                    "name": "CyeraAssets_MS_CL",
                    "lastDataReceivedQuery": "CyeraAssets_MS_CL\n       | where TimeGenerated > ago(48h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                },
                {
                    "name": "CyeraIssues_CL",
                    "lastDataReceivedQuery": "CyeraIssues_CL\n       | where TimeGenerated > ago(48h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                },
                {
                    "name": "CyeraIdentities_CL",
                    "lastDataReceivedQuery": "CyeraIdentities_CL\n       | where TimeGenerated > ago(48h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                }
            ],
            "connectivityCriteria": [
                {
                    "type": "HasDataConnectors"
                }
            ],
            "availability": {
                "isPreview": false
            },
            "permissions": {
                "tenant": null,
                "licenses": null,
                "resourceProvider": [
                    {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                            "read": true,
                            "write": true,
                            "delete": true,
                            "action": false
                        }
                    }
                ]
            },
            "instructionSteps": [
        {
            "title": "",
            "description": ">**NOTE:** This connector uses Azure Functions to connect to a 'Cyera DSPM' to pull its Resources into Azure Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
        },
        {
            "title": "",
            "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
        },
        {
            "title": "",
            "description": "**STEP 1 - Configuration steps for the 'Cyera DSPM' API**\n\nGenerate a Personal Access Token within your Cyera tenetant."
        },
        {
            "title": "",
            "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the 'Cyera DSPM' connector, have the Workspace ID, Data Collection Rule URI and Immutable ID, Log Analytic Workspace Resource ID, Cyera's base API URL, and Personal Access Tokens, readily available.",
            "instructions": [
                {
                    "parameters": {
                        "fillWith": [
                            "WorkspaceId"
                        ],
                        "label": "Workspace ID"
                    },
                    "type": "CopyableLabel"
                },
                {
                    "parameters": {
                        "fillWith": [
                            "DataCollectionRuleIngest"
                        ],
                        "label": "Data Collection Rule URI"
                    },
                    "type": "CopyableLabel"
                },
                {
                    "parameters": {
                        "fillWith": [
                            "DataCollectionRuleImmutableId"
                        ],
                        "label": "Data Collection Rule Immutable ID"
                    },
                    "type": "CopyableLabel"
                },
                {
                    "parameters": {
                        "fillWith": [
                            "RESOURCE_ID"
                        ],
                        "label": "Log Analytic Workspace Resource ID"
                    },
                    "type": "CopyableLabel"
                },
                {
                    "parameters": {
                        "fillWith": [
                            "CyeraBaseUrl"
                        ],
                        "label": "Cyera's API Base URL"
                    },
                    "type": "CopyableLabel"
                },
                {
                    "parameters": {
                        "fillWith": [
                            "CyeraClientId"
                        ],
                        "label": "Personal Access Token Client Id"
                    },
                    "type": "CopyableLabel"
                },
                {
                    "parameters": {
                        "fillWith": [
                            "CyeraSecret"
                        ],
                        "label": "Personal Access Token Secret"
                    },
                    "type": "CopyableLabel"
                }
            ]
        },
        {
            "title": "",
            "description": "**Option 1 - Azure Resource Manager (ARM) Template**\n\nUse this method for automated deployment of the 'Cyera DSPM' connector.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://github.com/joshua-acklin-cyera/Azure-Sentinel/blob/cyera-dspm/Solutions/CyeraDSPM/Data%20Connectors/CyeraDSPM_Functions/CyeraAzureFunction.zip)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Workspace ID**, **Cyera API Base Url**, **Personal Access Token Client ID**, **Personal Access Token Secret**, and **Data Collection Rule Information**. \n>Note: If using Azure Key Vault secrets for any of the values above, use the`@Microsoft.KeyVault(SecretUri={Security Identifier})`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy."
        },
        {
            "title": "",
            "description": "**Option 2 - Manual Deployment of Azure Functions**\n\n Use the following step-by-step instructions to deploy the 'Cyera DSPM' connector manually with Azure Functions."
        },
        {
            "title": "1. Create a Function App",
            "description": "1.  From the Azure Portal, navigate to [Function App](https://portal.azure.com/#blade/HubsExtension/BrowseResource/resourceType/Microsoft.Web%2Fsites/kind/functionapp).\n2. Click **+ Add** at the top.\n3. In the **Basics** tab, ensure Runtime stack is set to **'Add Required Language'**. \n4. In the **Hosting** tab, ensure **Plan type** is set to **'Add Plan Type'**.\n5. 'Add other required configurations'. \n5. 'Make other preferable configuration changes', if needed, then click **Create**."
        },
        {
            "title": "2. Import Function App Code",
            "description": "1. In the newly created Function App, select **Functions** from the navigation menu and click **+ Add**.\n2. Select **Timer Trigger**.\n3. Enter a unique Function **Name** in the New Function field and leave the default cron schedule of every 5 minutes, then click **Create Function**.\n4. Click on the function name and click **Code + Test** from the left pane.\n5. Copy the [Function App Code](<Add GitHub link to Function App code>) and paste into the Function App `run.ps1` editor.\n6. Click **Save**."
        },
        {
            "title": "3. Configure the Function App",
            "description": "1. In the Function App screen, click the Function App name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following 'x (number of)' application settings individually, under Name, with their respective string values (case-sensitive) under Value: \n\t\tapiUsername\n\t\tapipassword\n\t\tapiToken\n\t\tworkspaceID\n\t\tworkspaceKey\n\t\turi\n\t\tlogAnalyticsUri (optional)\n(add any other settings required by the Function App)\nSet the `uri` value to: `<add uri value>` \n>Note: If using Azure Key Vault secrets for any of the values above, use the`@Microsoft.KeyVault(SecretUri={Security Identifier})`schema in place of the string values. Refer to [Azure Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details.\n - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: https://<CustomerId>.ods.opinsights.azure.us. \n4. Once all application settings have been entered, click **Save**."
        }
    ]
    }