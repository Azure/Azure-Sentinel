{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": { "type": "string" },
        "workspace-location": { "type": "string" },
        "dataConnectorContentIdConnections1": { "type": "string" }
    },
    "variables": {
        "_dataConnectorContentIdConnections1": "[parameters('dataConnectorContentIdConnections1')]",
        "dce-name": "[concat('cyera-dce-',variables('_dataConnectorContentIdConnections1'))]",
        "dcr-name": "[concat('cyera-dcr-',variables('_dataConnectorContentIdConnections1'))]",
        "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
        "blanks": "[replace('b', 'b', '')]"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/dataCollectionEndpoints",
            "apiVersion": "2022-06-01",
            "name": "[variables('dce-name')]",
            "location": "[parameters('workspace-location')]",
            "properties": { "networkAcls": { "publicNetworkAccess": "Enabled" } }
        },
        {
            "name": "[variables('dcr-name')]",
            "apiVersion": "2022-06-01",
            "type": "Microsoft.Insights/dataCollectionRules",
            "location": "[parameters('workspace-location')]",
            "kind": "[variables('blanks')]",
            "properties": {
                "dataCollectionEndpointId": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', variables('dce-name'))]",
                "streamDeclarations": {
                    "Custom-CyeraAssets_SRC": {
                        "columns": [
                            { "name": "TimeGenerated", "type": "datetime" },
                            { "name": "uid", "type": "string" },
                            { "name": "name", "type": "string" },
                            { "name": "type", "type": "string" },
                            { "name": "provider", "type": "string" },
                            { "name": "infrastructure", "type": "string" },
                            { "name": "engine", "type": "string" },
                            { "name": "regions", "type": "dynamic" },
                            { "name": "account", "type": "dynamic" },
                            { "name": "classificationGroups", "type": "dynamic" },
                            { "name": "cloudProviderTags", "type": "dynamic" },
                            { "name": "owner", "type": "string" },
                            { "name": "dataType", "type": "string" },
                            { "name": "discoveredDate", "type": "datetime" },
                            { "name": "createdDate", "type": "datetime" },
                            { "name": "cloudProviderUrl", "type": "string" },
                            { "name": "scanningState", "type": "string" },
                            { "name": "ghost", "type": "boolean" },
                            { "name": "vpc", "type": "string" },
                            { "name": "sensitivity", "type": "string" },
                            { "name": "sensitivityDisplayName", "type": "string" },
                            { "name": "recordCountBySensitivity", "type": "dynamic" },
                            { "name": "issues", "type": "dynamic" },
                            { "name": "userTags", "type": "dynamic" },
                            { "name": "collections", "type": "dynamic" },
                            { "name": "customCollections", "type": "dynamic" },
                            { "name": "frameworks", "type": "dynamic" },
                            { "name": "learned", "type": "boolean" },
                            { "name": "classificationLevel", "type": "string" },
                            { "name": "encrypted", "type": "boolean" },
                            { "name": "sslEnforced", "type": "string" },
                            { "name": "logging", "type": "string" },
                            { "name": "publicAccessibilityState", "type": "string" },
                            { "name": "lastDataRefresh", "type": "datetime" },
                            { "name": "lastModifiedTime", "type": "datetime" },
                            { "name": "lastModifiedDate", "type": "datetime" },
                            { "name": "lastScannedDate", "type": "datetime" },
                            { "name": "driveId", "type": "string" },
                            { "name": "arn", "type": "string" },
                            { "name": "rdsEndpoint", "type": "string" },
                            { "name": "azureId", "type": "string" },
                            { "name": "datastoreSizeInGiB", "type": "real" },
                            { "name": "projectIds", "type": "dynamic" },
                            { "name": "datastoreOwners", "type": "dynamic" },
                            { "name": "autoScan", "type": "boolean" },
                            { "name": "siteName", "type": "string" },
                            { "name": "userId", "type": "string" },
                            { "name": "siteId", "type": "string" },
                            { "name": "resourceId", "type": "string" },
                            { "name": "region", "type": "string" },
                            { "name": "aadTenantId", "type": "string" }
                        ]
                    },
                    "Custom-CyeraIdentities_SRC": {
                        "columns": [
                            { "name": "TimeGenerated", "type": "datetime" },
                            { "name": "uid", "type": "string" },
                            { "name": "category", "type": "string" },
                            { "name": "displayName", "type": "string" },
                            { "name": "displayId", "type": "string" },
                            { "name": "scopeNamespace", "type": "string" },
                            { "name": "scopeDisplayName", "type": "string" },
                            { "name": "scopeId", "type": "string" },
                            { "name": "trustLevel", "type": "string" },
                            { "name": "isStale", "type": "boolean" },
                            { "name": "isEnabled", "type": "boolean" },
                            { "name": "multiFactorAuthenticationStatus", "type": "string" },
                            { "name": "membersCount", "type": "dynamic" },
                            { "name": "hasCopilot", "type": "boolean" },
                            { "name": "lastActiveTime", "type": "datetime" },
                            { "name": "creationTime", "type": "datetime" },
                            { "name": "description", "type": "string" },
                            { "name": "isAdmin", "type": "boolean" },
                            { "name": "classificationGroupsNames", "type": "dynamic" },
                            { "name": "sensitivity", "type": "string" },
                            { "name": "sensitiveRecords", "type": "real" },
                            { "name": "sensitivityBreakdown", "type": "dynamic" },
                            { "name": "lastPasswordUpdateTime", "type": "datetime" },
                            { "name": "jobTitle", "type": "string" },
                            { "name": "department", "type": "string" },
                            { "name": "officeLocation", "type": "string" },
                            { "name": "country", "type": "string" },
                            { "name": "hasMultipleParents", "type": "boolean" },
                            { "name": "domain", "type": "string" },
                            { "name": "businessFunction", "type": "string" },
                            { "name": "seniorityLevel", "type": "string" },
                            { "name": "issueCountBySeverity", "type": "dynamic" },
                            { "name": "reportsTo", "type": "string" },
                            { "name": "managerId", "type": "string" }
                        ]
                    },
                    "Custom-CyeraIssues_SRC": {
                        "columns": [
                            { "name": "TimeGenerated", "type": "datetime" },
                            { "name": "provider", "type": "string" },
                            { "name": "infrastructure", "type": "string" },
                            { "name": "engine", "type": "string" },
                            { "name": "regions", "type": "dynamic" },
                            { "name": "account", "type": "dynamic" },
                            { "name": "classificationGroups", "type": "dynamic" },
                            { "name": "cloudProviderTags", "type": "dynamic" },
                            { "name": "owner", "type": "string" },
                            { "name": "uid", "type": "string" },
                            { "name": "name", "type": "string" },
                            { "name": "severity", "type": "string" },
                            { "name": "createdDate", "type": "datetime" },
                            { "name": "updatedDate", "type": "datetime" },
                            { "name": "status", "type": "string" },
                            { "name": "riskStatus", "type": "string" },
                            { "name": "resolution", "type": "string" },
                            { "name": "resolutionNote", "type": "string" },
                            { "name": "datastoreName", "type": "string" },
                            { "name": "datastoreUid", "type": "string" },
                            { "name": "risk", "type": "dynamic" },
                            { "name": "data", "type": "dynamic" },
                            { "name": "datastoreCloudProviderTags", "type": "dynamic" },
                            { "name": "datastoreUserTags", "type": "dynamic" },
                            { "name": "datastoreOwners", "type": "dynamic" },
                            { "name": "remediationAdvice", "type": "string" },
                            { "name": "policyUid", "type": "string" },
                            { "name": "itsmTickets", "type": "dynamic" }
                        ]
                    },
                    "Custom-CyeraClassifications_SRC": {
                        "columns": [
                            { "name": "TimeGenerated", "type": "datetime" },
                            { "name": "uid", "type": "string" },
                            { "name": "dataClassName", "type": "string" },
                            { "name": "classificationName", "type": "string" },
                            { "name": "name", "type": "string" },
                            { "name": "sensitivity", "type": "string" },
                            { "name": "sensitivityDisplayName", "type": "string" },
                            { "name": "defaultSensitivity", "type": "string" },
                            { "name": "defaultSensitivityDisplayName", "type": "string" },
                            { "name": "dataCategory", "type": "string" },
                            { "name": "classificationGroup", "type": "string" },
                            { "name": "classificationLevel", "type": "string" },
                            { "name": "learned", "type": "boolean" },
                            { "name": "collections", "type": "dynamic" },
                            { "name": "customCollections", "type": "dynamic" },
                            { "name": "frameworks", "type": "dynamic" },
                            { "name": "context", "type": "dynamic" }
                        ]
                    }
                },
                "destinations": {
                    "logAnalytics": [ { "workspaceResourceId": "[variables('workspaceResourceId')]", "name": "cyeradspm" } ]
                },
                "dataFlows": [
                    { "streams": [ "Custom-CyeraAssets_SRC" ], "destinations": [ "cyeradspm" ], "outputStream": "Custom-CyeraAssets_CL", "transformKql": "source\n| extend TimeGenerated = todatetime(iif(isnull(TimeGenerated), now(), TimeGenerated))\n| extend type_s = ['type']\n| project TimeGenerated, uid, name, type_s, provider, infrastructure, engine, regions, account, classificationGroups, cloudProviderTags, owner, dataType, discoveredDate, createdDate, cloudProviderUrl, scanningState, ghost, vpc, sensitivity, sensitivityDisplayName, recordCountBySensitivity, issues, userTags, collections, customCollections, frameworks, learned, classificationLevel, encrypted, sslEnforced, logging, publicAccessibilityState, lastDataRefresh, lastModifiedTime, lastModifiedDate, lastScannedDate, driveId, arn, rdsEndpoint, azureId, datastoreSizeInGiB, projectIds, datastoreOwners, autoScan, siteName, userId, siteId, resourceId, region" },
                    { "streams": [ "Custom-CyeraIdentities_SRC" ], "destinations": [ "cyeradspm" ], "outputStream": "Custom-CyeraIdentities_CL", "transformKql": "source\n| extend TimeGenerated = todatetime(iif(isnull(TimeGenerated), now(), TimeGenerated))\n| project TimeGenerated, uid, category, displayName, displayId, scopeNamespace, scopeDisplayName, scopeId, trustLevel, isStale, isEnabled, multiFactorAuthenticationStatus, membersCount, hasCopilot, lastActiveTime, creationTime, description, isAdmin, classificationGroupsNames, sensitivity, sensitiveRecords, sensitivityBreakdown, lastPasswordUpdateTime, jobTitle, department, officeLocation, country, hasMultipleParents, domain, businessFunction, seniorityLevel, issueCountBySeverity, reportsTo, managerId" },
                    { "streams": [ "Custom-CyeraIssues_SRC" ], "destinations": [ "cyeradspm" ], "outputStream": "Custom-CyeraIssues_CL", "transformKql": "source\n| extend TimeGenerated = todatetime(iif(isnull(TimeGenerated), now(), TimeGenerated))\n| project TimeGenerated, provider, infrastructure, engine, regions, account, classificationGroups, cloudProviderTags, owner, uid, name, severity, createdDate, updatedDate, status, riskStatus, resolution, resolutionNote, datastoreName, datastoreUid, risk, data, datastoreCloudProviderTags, datastoreUserTags, datastoreOwners, remediationAdvice, policyUid, itsmTickets" },
                    { "streams": [ "Custom-CyeraClassifications_SRC" ], "destinations": [ "cyeradspm" ], "outputStream": "Custom-CyeraClassifications_CL", "transformKql": "source\n| extend TimeGenerated = todatetime(iif(isnull(TimeGenerated), now(), TimeGenerated))\n| project TimeGenerated, uid, dataClassName, classificationName, name, sensitivity, sensitivityDisplayName, defaultSensitivity, defaultSensitivityDisplayName, dataCategory, classificationGroup, classificationLevel, learned, collections, customCollections, frameworks, context" },
                    { "streams": [ "Custom-CyeraAssets_SRC" ], "destinations": [ "cyeradspm" ], "outputStream": "Custom-CyeraAssets_MS_CL", "transformKql": "source | extend _cand1=iif(isnotnull(lastScannedDate),lastScannedDate,TimeGenerated) | extend _cand2=iif(isnotnull(lastModifiedDate),lastModifiedDate,_cand1) | extend _cand3=iif(isnotnull(lastModifiedTime),lastModifiedTime,_cand2) | extend _cand4=iif(isnotnull(lastDataRefresh),lastDataRefresh,_cand3) | extend _cand5=iif(isnotnull(createdDate),createdDate,_cand4) | extend _cand6=iif(isnotnull(discoveredDate),discoveredDate,_cand5) | extend TimeGenerated=iif(isnull(_cand6) or _cand6 > now()+1d or _cand6 < datetime(2000-01-01), now(), todatetime(_cand6)) | extend AssetID=case(isnotempty(tostring(arn)), tostring(arn), tostring(uid)) | extend ownersArr=iif(isnull(datastoreOwners), parse_json(\"[]\"), todynamic(datastoreOwners)) | extend firstOwner=iif(array_length(ownersArr) > 0, ownersArr[0], parse_json(\"null\")) | extend owner_email=tostring(firstOwner.email), owner_upn=tostring(firstOwner.userPrincipalName), owner_name=tostring(firstOwner.name), owner_uid=tostring(firstOwner.datastoreOwnerUid) | extend AssetOwner=case(isnotempty(owner_email), owner_email, isnotempty(owner_upn), owner_upn, isnotempty(owner_name), owner_name, isnotempty(owner_uid), owner_uid, isnotempty(tostring(account.name)), tostring(account.name), \"\") | extend AssetName=tostring(name) | extend Workload=tostring(['type']) | extend SubWorkload=tostring(engine) | extend _regions=todynamic(regions) | extend Location=iif(isnull(_regions) or array_length(_regions)==0, tostring(region), tostring(_regions[0])) | extend _iss=todynamic(issues) | extend _openL=tolong(_iss.open) | extend _progL=tolong(_iss.inProgress) | extend _closedL=tolong(_iss.closed) | extend _flatL=tolong(issues) | extend RisksLong=iif(isnull(_openL) and isnull(_progL) and isnull(_closedL), iif(isnull(_flatL), tolong(0), _flatL), (iif(isnull(_openL), tolong(0), _openL) + iif(isnull(_progL), tolong(0), _progL) + iif(isnull(_closedL), tolong(0), _closedL))) | extend Risks=toint(RisksLong) | extend SensitivityLabel=tostring(sensitivity) | extend Provider=\"Cyera\" | extend AdditionalFields=pack(\"AccountIdentifier\", tostring(account.inPlatformIdentifier), \"PublicAccessibilityState\", tostring(publicAccessibilityState), \"CloudPlatform\", tostring(provider), \"Regions\", iif(isnull(_regions), parse_json(\"[]\"), _regions), \"CloudProviderUrl\", tostring(cloudProviderUrl), \"ClassificationGroups\", iif(isnull(classificationGroups), parse_json(\"[]\"), todynamic(classificationGroups)), \"CloudProviderTags\", iif(isnull(cloudProviderTags), parse_json(\"[]\"), todynamic(cloudProviderTags)), \"UserTags\", iif(isnull(userTags), parse_json(\"[]\"), todynamic(userTags)), \"OwnersRaw\", ownersArr) | extend _prov=tostring(provider) | extend AADTenantID=case(_prov==\"Azure\" and isnotempty(tostring(account.inPlatformIdentifier)), tostring(account.inPlatformIdentifier), \"\") | extend IsAssetRemoved=false | extend FeedType=\"Changefeed\" | project TimeGenerated, AssetID, AssetName, Workload, SubWorkload, Location, Risks, SensitivityLabel, AssetOwner, Provider, AdditionalFields, AADTenantID, IsAssetRemoved, FeedType" }
                ]
            },
            "dependsOn": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', variables('dce-name'))]"
        }
    ]
}


