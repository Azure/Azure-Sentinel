id: 0d298a1d-1a08-4f4b-8b28-687bfe0012e8
name: SCX Execute RunAs Providers
description: |
    'This query uses AUOMS security events to examine SCX Execute RunAs providers. These providers execute UNIX/Linux commands/scripts from /var/opt/microsoft/scx/tmp. SCXcore is used in various Microsoft products.'
description-detailed: |
  'This hunting query uses security events from the Microsoft Audit Collection Tool (AUOMS) collected via the Microsoft Sentinel Syslog data connector to explore the use of SCX Execute RunAs providers.
  Execute RunAs providers such as the ExecuteShellCommand and ExecuteScript can be used to execute any UNIX/Linux command and script respectively using the /bin/sh shell.
  Execution occurs from the /var/opt/microsoft/scx/tmp directory and depending on the execution RunAs provider, execution can be a command or a script.
  If the ExecuteScript RunAs provider is used, then the script file is created in the following directory /bin/sh /etc/opt/microsoft/scx/conf/tmpdir/ with the prefix scx (e.g. scxzOy96).
  SCXcore, started as the Microsoft Operations Manager UNIX/Linux Agent, is now used in a host of products including Microsoft Operations Manager. Microsoft Azure, and Microsoft Operations Management Suite. 
  '
severity: High
requiredDataConnectors:
  - connectorId: Syslog
    dataTypes: 
      - Syslog
  - connectorId: SyslogAma
    dataTypes: 
      - Syslog
queryFrequency: 1d
queryPeriod: 1d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - InitialAccess
  - Execution
relevantTechniques:
  - T1190
  - T1203
tags:
  - SimuLand
query: |
  let scx_execve=(){
  Syslog
  | where SyslogMessage has "AUOMS_EXECVE"
  | parse SyslogMessage with "type=" EventType " audit(" * "): " EventData
  | where EventType =~ "AUOMS_EXECVE" and EventData has '/var/opt/microsoft/scx/tmp'
  | project TimeGenerated, EventType, Computer, EventData
  | extend EventData = trim_end('containerid=',EventData)
  | parse kind=regex EventData with * "success=" success " exit=" * "ppid=" ppid "pid=" pid
  "audit_user=" * "user=" user " uid=" uid " group=" * "comm=\"" comm "\" exe=\"" exe "\" subj=" *
  "cwd=\"" cwd "\" name=\"" name "\" (inode|nametype)=" * "(proctitle|cmdline)=" cmdline
    | extend cmdline = trim_end('redactors=.*',cmdline)
    | where uid == '0'
    | where cwd == '/var/opt/microsoft/scx/tmp'
    | where success == 'yes'
  };
  scx_execve
  | where comm == 'sh' // ExecuteScript cmdline would trigger on /bin/sh /etc/opt/microsoft/scx/conf/tmpdir/scx_
  | join kind=leftouter ( scx_execve ) on $left.Computer == $right.Computer, $left.pid == $right.ppid
  | project-rename parentEventData=EventData,parentppid=ppid,parentpid=pid,parentcomm=comm,parentexe=exe,
    parentname=name,parentcmdline=cmdline,childEventData=EventData1,childppid=ppid1,childpid=pid1,childcomm=comm1,
    childexe=exe1,childname=name1,childcmdline=cmdline1
  | project TimeGenerated, Computer, user, parentEventData,parentppid,parentpid,parentcomm,parentexe,parentname,
    parentcmdline,childEventData,childppid,childpid,childcomm,childexe,childname,childcmdline
  | extend Timestamp = TimeGenerated, HostCustomEntity = Computer, AccountCustomEntity = user,
    ExecuteType = iff(parentcmdline contains '/etc/opt/microsoft/scx/conf/tmpdir/scx',"ExecuteScript","ExecuteShellCommand")
entityMappings: 
  - entityType: Host
    fieldMappings:
      - identifier: FullName
        columnName: HostCustomEntity
  - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
version: 1.0.2