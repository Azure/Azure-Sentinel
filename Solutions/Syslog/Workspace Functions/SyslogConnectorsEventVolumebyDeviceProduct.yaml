id: 0829eb1f-75c3-4736-bcc9-7402650b3983
Function:
  Title: Workspace Function for SyslogConnectors EventVolume by DeviceProduct
  Version: '1.0.0'
  LastUpdated: '2024-07-11'
Category: Microsoft Sentinel Parser
FunctionName: SyslogConnectorsEventVolumebyDeviceProduct
FunctionAlias: SyslogConnectorsEventVolumebyDeviceProduct
FunctionParams:
  - Name: start
    Type: datetime
    Default: datetime(null)
  - Name: end
    Type: datetime
    Default: datetime(null)
  - Name: DeviceName
    Type: string
    Default: '*'
FunctionQuery: |
  let startTime = start;
  let endTime = end;
  let DeviceProduct_Input = DeviceName;
  let empty_table_result = datatable (DeviceProduct:string, Count:long, TimeGenerated:datetime ) [];
  let empty_table_connector_Events = datatable (TimeGenerated:datetime) [];
  let BlackberryCylancePROTECT_Events = union isfuzzy=true empty_table_connector_Events, CylancePROTECT | extend DeviceProduct = "Blackberry CylancePROTECT" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let CiscoACI_Events = union isfuzzy=true empty_table_connector_Events, CiscoACIEvent | extend DeviceProduct = "Cisco Application Centric Infrastructure" |where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |  where TimeGenerated between (startTime .. endTime)  | summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now()) ;
  let CiscoISE_Events = union isfuzzy=true empty_table_connector_Events, CiscoISEEvent | extend DeviceProduct = "Cisco Identity Services Engine" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |where TimeGenerated between (startTime .. endTime)  | summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let Stealthwatch_Events = union isfuzzy=true empty_table_connector_Events, StealthwatchEvent | extend DeviceProduct = "Cisco Secure Cloud Analytics" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let CiscoUCS_Events = union isfuzzy=true empty_table_connector_Events, CiscoUCS | extend DeviceProduct = "Cisco UCS" |where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |  where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let CiscoWSA_Events = union isfuzzy=true empty_table_connector_Events, CiscoWSAEvent | extend DeviceProduct = "Cisco Web Security Appliance" |where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |  where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let CitrixADC_Events = union isfuzzy=true empty_table_connector_Events, CitrixADCEvent | extend DeviceProduct = "Citrix ADC (former NetScaler)" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let DigitalGuardianDLP_Events = union isfuzzy=true empty_table_connector_Events, DigitalGuardianDLPEvent | extend DeviceProduct = "Digital Guardian Data Loss Prevention" |where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |  where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let Exabeam_Events = union isfuzzy=true empty_table_connector_Events, ExabeamEvent | extend DeviceProduct = "Exabeam Advanced Analytics" |  where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let Forescout_Events = union isfuzzy=true empty_table_connector_Events, ForescoutEvent | extend DeviceProduct = "Forescout" |where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |  where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let GitLab_Events = union isfuzzy=true empty_table_connector_Events, GitLabApp, GitLabAudit, GitLabAccess  | extend DeviceProduct = "GitLab" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let InfobloxNIOS_Events = union isfuzzy=true empty_table_connector_Events, Infoblox | extend DeviceProduct = "Infoblox NIOS" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let ISCBind_Events = union isfuzzy=true empty_table_connector_Events, ISCBind | extend DeviceProduct = "ISC Bind" |  where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let IvantiUEM_Events = union isfuzzy=true empty_table_connector_Events, IvantiUEMEvent | extend DeviceProduct = "Ivanti Unified Endpoint Management" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let JuniperSRX_Events = union isfuzzy=true empty_table_connector_Events, JuniperSRX | extend DeviceProduct = "Juniper SRX" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let McAfeeePO_Events = union isfuzzy=true empty_table_connector_Events, McAfeeEPOEvent | extend DeviceProduct = "McAfee ePolicy Orchestrator (ePO)" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let McAfeeNSP_Events = union isfuzzy=true empty_table_connector_Events, McAfeeNSPEvent | extend DeviceProduct = "McAfee Network Security Platform" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let OpenVPN_Events = union isfuzzy=true empty_table_connector_Events, OpenVpnEvent | extend DeviceProduct = "OpenVPN Server" |where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |  where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let OracleDatabaseAudit_Events = union isfuzzy=true empty_table_connector_Events, OracleDatabaseAuditEvent | extend DeviceProduct = "Oracle Database Audit" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let PulseConnectSecure_Events = union isfuzzy=true empty_table_connector_Events, PulseConnectSecure  | extend DeviceProduct = "Pulse Connect Secure" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let RSASecurIDAM_Events = union isfuzzy=true empty_table_connector_Events, RSASecurIDAMEvent | extend DeviceProduct = "RSA SecurID (Authentication Manager)" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let SophosXGFirewall_Events = union isfuzzy=true empty_table_connector_Events, SophosXGFirewall | extend DeviceProduct = "Sophos XG Firewall" |where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |  where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let SymantecEndpointProtection_Events = union isfuzzy=true empty_table_connector_Events, SymantecEndpointProtection  | extend DeviceProduct = "Symantec Endpoint Protection" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let SymantecVIP_Events = union isfuzzy=true empty_table_connector_Events, SymantecVIP  | extend DeviceProduct = "Symantec VIP" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let MicrosoftSysmonForLinux_Events = union isfuzzy=true empty_table_connector_Events, Syslog | where ProcessName == 'sysmon' | extend DeviceProduct = "Microsoft Sysmon For Linux" |where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |  where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let VMwareESXi_Events = union isfuzzy=true empty_table_connector_Events, VMwareESXi  | extend DeviceProduct = "VMware ESXi" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let SymantecProxySG_Events = union isfuzzy=true empty_table_connector_Events, SymantecProxySG | extend DeviceProduct = "Symantec ProxySG" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let ESETPROTECT_Events = union isfuzzy=true empty_table_connector_Events, CylancePROTECT | extend DeviceProduct = "ESET PROTECT" |where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" |  where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let BarracudaCloudFirewall_Events = union isfuzzy=true empty_table_connector_Events, CGFWFirewallActivity | extend DeviceProduct = "Barracuda CloudGen Firewall" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let NasuniEdgeAppliance_Events = union isfuzzy=true empty_table_connector_Events, Syslog | extend DeviceProduct = "Nasuni Edge Appliance" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  let WatchguardFirebox_Events = union isfuzzy=true empty_table_connector_Events, WatchGuardFirebox | extend DeviceProduct = "WatchGuard Firebox" | where DeviceProduct_Input == DeviceProduct or DeviceProduct_Input == "*" | where TimeGenerated between (startTime .. endTime)  |summarize Count = count() by DeviceProduct, bin_at(TimeGenerated, 1d, now());
  union isfuzzy=true  empty_table_result, BlackberryCylancePROTECT_Events, CiscoACI_Events, CiscoISE_Events, Stealthwatch_Events, CiscoUCS_Events, CiscoWSA_Events, CitrixADC_Events, DigitalGuardianDLP_Events, Exabeam_Events, Forescout_Events, GitLab_Events, InfobloxNIOS_Events, ISCBind_Events, IvantiUEM_Events, JuniperSRX_Events, McAfeeePO_Events, OpenVPN_Events, OracleDatabaseAudit_Events,  PulseConnectSecure_Events, RSASecurIDAM_Events, SophosXGFirewall_Events, SymantecEndpointProtection_Events, SymantecVIP_Events, MicrosoftSysmonForLinux_Events, VMwareESXi_Events, SymantecProxySG_Events, ESETPROTECT_Events, BarracudaCloudFirewall_Events, NasuniEdgeAppliance_Events, WatchguardFirebox_Events