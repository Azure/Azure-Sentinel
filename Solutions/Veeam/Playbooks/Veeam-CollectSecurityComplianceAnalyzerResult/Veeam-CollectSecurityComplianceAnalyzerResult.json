{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "title": "Veeam-CollectSecurityComplianceAnalyzerResult",
    "description": "A Microsoft Sentinel playbook that automatically collects Veeam Security Compliance Analyzer results from Veeam Backup & Replication servers on schedule. The playbook gets Veeam Backup & Replication settings from watchlist and calls the GetSecurityComplianceAnalyzerResults function for each enabled server, ingesting the data into custom tables.",
    "prerequisites": [
      "1. Microsoft Sentinel workspace configured.",
      "2. Permissions to create Logic Apps and API Connections.",
      "3. Permissions to assign roles to the Resource Group.",
      "4. Veeam Azure Function App deployed and configured.",
      "5. VBR Settings watchlist configured in Microsoft Sentinel.",
      "6. Hybrid Connection and Key Vault secrets configured for each VBR Server."
    ],
    "entities": [],
    "tags": [ "Automation", "Veeam", "BestPractice", "Analysis", "Collection" ],
    "lastUpdateTime": "2025-08-25T00:00:00.000Z",
    "support": {
      "tier": "community"
    },
    "author": {
      "name": "Custom Template"
    },
    "parameterTemplateVersion": "1.0.0",
    "postDeployment": [
      "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace.",
      "2. Ensure the VBR Settings watchlist is properly configured with the 'Collect Security and Compliance Analyzer Results' flag set to true on servers from which you want to collect data."
    ]
  },
  "parameters": {
    "PlaybookName": {
      "defaultValue": "Veeam-CollectSecurityComplianceAnalyzerResult",
      "type": "string",
      "metadata": {
        "description": "Name of the playbook (Logic App) to be created"
      }
    },
    "functionAppName": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Function App for Veeam integration"
      }
    },
    "workspaceId": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
      }
    },
    "AzureSentinelConnectionName": {
      "defaultValue": "azuresentinel-connection",
      "type": "string",
      "metadata": {
        "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
      }
    },
    "resourceGroupName": {
      "defaultValue": "[resourceGroup().name]",
      "type": "string",
      "metadata": {
        "description": "Name of the resource group containing the Microsoft Sentinel workspace"
      }
    }
  },
  "variables": {
    "functionAppId": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('AzureSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[parameters('AzureSentinelConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
        },
        "parameterValueType": "Alternative"
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('PlaybookName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "hidden-SentinelTemplateName": "Veeam-CollectSecurityComplianceAnalyzerResult",
        "hidden-SentinelTemplateVersion": "1.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "functionAppName": {
              "defaultValue": "[parameters('functionAppName')]",
              "type": "String"
            },
            "workspaceId": {
              "defaultValue": "[parameters('workspaceId')]",
              "type": "String"
            },
            "resourceGroupName": {
              "defaultValue": "[parameters('resourceGroupName')]",
              "type": "String"
            },
            "subscriptionId": {
              "defaultValue": "[subscription().subscriptionId]",
              "type": "String"
            },
            "VbrHostName": {
              "defaultValue": "vbr1",
              "type": "String"
            }
          },
          "triggers": {
            "Every_24_hours": {
              "recurrence": {
                "interval": 24,
                "frequency": "Hour"
              },
              "evaluatedRecurrence": {
                "interval": 24,
                "frequency": "Hour"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Watchlists_-_Get_VBR_Settings": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vbr_settings')}/watchlistItems"
              }
            },
            "Parse_VBR_settings": {
              "runAfter": {
                "Watchlists_-_Get_VBR_Settings": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@body('Watchlists_-_Get_VBR_Settings')",
                "schema": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "type": "object",
                      "properties": {
                        "watchlistItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "properties.itemsKeyValue": {
                                "type": "object",
                                "properties": {
                                  "Veeam Server Name": {
                                    "type": "string"
                                  },
                                  "Base URL": {
                                    "type": "string"
                                  },
                                  "Collect Security and Compliance Analyzer Results": {
                                    "type": "string"
                                  },
                                  "Key Vault Password ID": {
                                    "type": "string"
                                  },
                                  "Key Vault Username ID": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "For_each_VBR": {
              "foreach": "@body('Parse_VBR_settings')?['properties']?['watchlistItems']",
              "actions": {
                "Parse_current_VBR": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('For_each_VBR')",
                    "schema": {
                      "type": "object",
                      "properties": {
                        "properties.itemsKeyValue": {
                          "type": "object",
                          "properties": {
                            "Veeam Server Name": {
                              "type": "string"
                            },
                            "Base URL": {
                              "type": "string"
                            },
                            "Collect Security and Compliance Analyzer Results": {
                              "type": "string"
                            },
                            "Key Vault Password ID": {
                              "type": "string"
                            },
                            "Key Vault Username ID": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "If_best_practice_analysis_collection_is_enabled": {
                  "actions": {
                    "Collect_Best_Practice_Analysis_into_VeeamBestPracticeAnalysisTable_CL": {
                      "type": "Function",
                      "inputs": {
                        "queries": {
                          "vbrHostName": "@body('Parse_current_VBR')?['properties.itemsKeyValue']?['Veeam Server Name']"
                        },
                        "function": {
                          "id": "[concat(variables('functionAppId'), '/functions/GetSecurityComplianceAnalyzerResultsAsync')]"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_current_VBR": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Print_baseUrl": {
                        "type": "Compose",
                        "inputs": "@body('Parse_current_VBR')?['properties.itemsKeyValue']?['Base URL']"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@body('Parse_current_VBR')?['properties.itemsKeyValue']?['Collect Security and Compliance Analyzer Results']",
                          "true"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "Parse_VBR_settings": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionName": "[parameters('AzureSentinelConnectionName')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                "id": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}
