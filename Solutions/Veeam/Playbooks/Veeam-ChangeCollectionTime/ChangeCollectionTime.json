{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "5498632779764501884"
    },
    "title": "Veeam-ChangeCollectionTime",
    "description": "This Microsoft Sentinel playbook adjusts the recurrence intervals for Veeam collection playbooks based on settings in the collection_schedule_settings watchlist.",
    "prerequisites": [
      "1. Microsoft Sentinel workspace configured.",
      "2. Permissions to create Logic Apps and API Connections.",
      "3. Permissions to assign roles to the Resource Group and Log Analytics workspace.",
      "4. Collection schedule settings watchlist configured in Microsoft Sentinel.",
      "5. Logic App Contributor permissions for managing other workflows."
    ],
    "entities": [],
    "tags": [
      "Automation",
      "Veeam",
      "Schedule",
      "Collection",
      "Configuration"
    ],
    "lastUpdateTime": "2025-08-20T00:00:01.000Z",
    "support": {
      "tier": "community"
    },
    "author": {
      "name": "Custom Template"
    },
    "parameterTemplateVersion": "1.0.0",
    "postDeployment": [
      "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace.",
      "2. Assign the Logic App Contributor role to the Logic App's managed identity on the Resource Group.",
      "3. Configure the collection_schedule_settings watchlist with required schedule data."
    ]
  },
  "parameters": {
    "PlaybookName": {
      "type": "string",
      "defaultValue": "Veeam-ChangeCollectionTime",
      "metadata": {
        "description": "Name of the playbook (Logic App) to be created"
      }
    },
    "workspaceId": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
      }
    },
    "AzureSentinelConnectionName": {
      "type": "string",
      "defaultValue": "azuresentinel-connection",
      "metadata": {
        "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
      }
    },
    "subscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "Azure subscription ID"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group containing the Logic Apps to be updated"
      }
    },
    "environmentResourceManagerUrl": {
      "type": "string",
      "defaultValue": "[environment().resourceManager]",
      "metadata": {
        "description": "Resource Manager URL for the Azure environment"
      }
    },
    "logicAppsApiVersion": {
      "type": "string",
      "defaultValue": "2019-05-01",
      "metadata": {
        "description": "API version to use for Logic Apps operations"
      }
    },
    "watchlistName": {
      "type": "string",
      "defaultValue": "collection_schedule_settings",
      "metadata": {
        "description": "Name of the watchlist containing collection schedule settings"
      }
    },
    "defaultRecurrenceInterval": {
      "type": "string",
      "defaultValue": "12",
      "metadata": {
        "description": "Default recurrence interval to use when not specified in watchlist"
      }
    },
    "defaultRecurrenceFrequency": {
      "type": "string",
      "defaultValue": "Hour",
      "metadata": {
        "description": "Default recurrence frequency to use when not specified in watchlist"
      }
    }  },  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('AzureSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[parameters('AzureSentinelConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
        },
        "parameterValueType": "Alternative"
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('PlaybookName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "hidden-SentinelTemplateName": "Veeam-ChangeCollectionTime",
        "hidden-SentinelTemplateVersion": "1.0"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "workspaceId": {
              "defaultValue": "[parameters('workspaceId')]",
              "type": "String"
            },
            "resourceGroupName": {
              "defaultValue": "[parameters('resourceGroupName')]",
              "type": "String"
            },
            "subscriptionId": {
              "defaultValue": "[subscription().subscriptionId]",
              "type": "String"
            },
            "watchlistName": {
              "defaultValue": "[parameters('watchlistName')]",
              "type": "String"
            },
            "environmentResourceManagerUrl": {
              "defaultValue": "[parameters('environmentResourceManagerUrl')]",
              "type": "String"
            },
            "logicAppsApiVersion": {
              "defaultValue": "[parameters('logicAppsApiVersion')]",
              "type": "String"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recurrenceInterval": {
                      "default": "[parameters('defaultRecurrenceInterval')]"
                    },
                    "recurrenceFrequency": {
                      "default": "[parameters('defaultRecurrenceFrequency')]"
                    }
                  }
                }
              }
            }
          },
          "actions": {            "Watchlists_-_Get_all_Collection_Times": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent(parameters('watchlistName'))}/watchlistItems"
              }
            },
            "Parse_settings": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('Watchlists_-_Get_all_Collection_Times')",
                "schema": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "type": "object",
                      "properties": {
                        "watchlistItems": {
                          "type": "array"
                        }
                      }
                    }
                  }
                }
              },
              "runAfter": {
                "Watchlists_-_Get_all_Collection_Times": [
                  "Succeeded"
                ]
              }
            },
            "For_each": {
              "type": "Foreach",
              "foreach": "@body('Parse_settings')?['properties']?['watchlistItems']",
              "actions": {
                "Parse_setting": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('For_each')",
                    "schema": {
                      "type": "object",
                      "properties": {
                        "properties.watchlistItemType": {
                          "type": "string"
                        },
                        "properties.watchlistItemId": {
                          "type": "string"
                        },
                        "properties.tenantId": {
                          "type": "string"
                        },
                        "properties.isDeleted": {
                          "type": "boolean"
                        },
                        "properties.created": {
                          "type": "string"
                        },
                        "properties.updated": {
                          "type": "string"
                        },
                        "properties.createdBy": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "objectId": {
                              "type": "string"
                            }
                          }
                        },
                        "properties.updatedBy": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "objectId": {
                              "type": "string"
                            }
                          }
                        },
                        "properties.itemsKeyValue": {
                          "type": "object",
                          "properties": {
                            "CollectionPlaybookName": {
                              "type": "string"
                            },
                            "RecurrenceInterval": {
                              "type": "string"
                            },
                            "TimeUnit": {
                              "type": "string"
                            }
                          }
                        },
                        "properties.entityMapping": {
                          "type": "object",
                          "properties": {}
                        },
                        "etag": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "systemData": {
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string"
                            },
                            "createdByType": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "lastModifiedBy": {
                              "type": "string"
                            },
                            "lastModifiedByType": {
                              "type": "string"
                            },
                            "lastModifiedAt": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },                "Get_Current_Workflow_Definition": {
                  "type": "Http",
                  "inputs": {
                    "uri": "@concat(parameters('environmentResourceManagerUrl'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Logic/workflows/', body('Parse_setting')?['properties.itemsKeyValue']?['CollectionPlaybookName'], '?api-version=', parameters('logicAppsApiVersion'))",
                    "method": "GET",
                    "authentication": {
                      "type": "ManagedServiceIdentity"
                    }
                  },
                  "runAfter": {
                    "Parse_setting": [
                      "Succeeded"
                    ]
                  }
                },
                "Parse_Workflow_Definition": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Get_Current_Workflow_Definition')",
                    "schema": {
                      "type": "object",
                      "properties": {
                        "properties": {
                          "type": "object",
                          "properties": {
                            "provisioningState": {
                              "type": "string"
                            },
                            "createdTime": {
                              "type": "string"
                            },
                            "changedTime": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            },
                            "accessEndpoint": {
                              "type": "string"
                            },
                            "definition": {
                              "type": "object",
                              "properties": {
                                "$schema": {
                                  "type": "string"
                                },
                                "contentVersion": {
                                  "type": "string"
                                },
                                "parameters": {
                                  "type": "object"
                                },
                                "triggers": {
                                  "type": "object"
                                },
                                "actions": {
                                  "type": "object"
                                },
                                "outputs": {
                                  "type": "object"
                                }
                              }
                            },
                            "parameters": {
                              "type": "object"
                            },
                            "endpointsConfiguration": {
                              "type": "object"
                            }
                          }
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        },
                        "tags": {
                          "type": "object"
                        },
                        "identity": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "tenantId": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Get_Current_Workflow_Definition": [
                      "Succeeded"
                    ]
                  }
                },
                "Compose_Updated_Definition": {
                  "type": "Compose",
                  "inputs": {
                    "location": "@body('Parse_Workflow_Definition')?['location']",
                    "identity": "@body('Parse_Workflow_Definition')?['identity']",
                    "properties": {
                      "state": "Enabled",
                      "definition": {
                        "$schema": "@body('Parse_Workflow_Definition')?['properties']?['definition']?['$schema']",
                        "contentVersion": "@body('Parse_Workflow_Definition')?['properties']?['definition']?['contentVersion']",
                        "parameters": "@body('Parse_Workflow_Definition')?['properties']?['definition']?['parameters']",
                        "triggers": {
                          "Every_@{int(coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['RecurrenceInterval'], '12'))}_@{coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['TimeUnit'], 'Hour')}": {
                            "recurrence": {
                              "interval": "@int(coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['RecurrenceInterval'], '12'))",
                              "frequency": "@coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['TimeUnit'], 'Hour')"
                            },
                            "evaluatedRecurrence": {
                              "interval": "@int(coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['RecurrenceInterval'], '12'))",
                              "frequency": "@coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['TimeUnit'], 'Hour')"
                            },
                            "type": "Recurrence"
                          }
                        },
                        "actions": "@body('Parse_Workflow_Definition')?['properties']?['definition']?['actions']",
                        "outputs": "@body('Parse_Workflow_Definition')?['properties']?['definition']?['outputs']"
                      },
                      "parameters": "@body('Parse_Workflow_Definition')?['properties']?['parameters']"
                    }
                  },
                  "runAfter": {
                    "Parse_Workflow_Definition": [
                      "Succeeded"
                    ]
                  }
                },                "Update_Events_Workflow": {
                  "type": "Http",
                  "inputs": {
                    "uri": "@concat(parameters('environmentResourceManagerUrl'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Logic/workflows/', body('Parse_setting')?['properties.itemsKeyValue']?['CollectionPlaybookName'], '?api-version=', parameters('logicAppsApiVersion'))",
                    "method": "PUT",
                    "headers": {
                      "Content-Type": "application/json"
                    },
                    "body": "@outputs('Compose_Updated_Definition')",
                    "authentication": {
                      "type": "ManagedServiceIdentity"
                    }
                  },
                  "runAfter": {
                    "Compose_Updated_Definition": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Parse_settings": [
                  "Succeeded"
                ]
              }
            },
            "Response_Success": {
              "type": "Response",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "message": "Successfully updated collection schedule",
                  "processedWorkflows": "@length(body('Parse_settings')?['properties']?['watchlistItems'])"
                }
              },
              "runAfter": {
                "For_each": [
                  "Succeeded"
                ]
              }
            },
            "Response_Error": {
              "type": "Response",
              "inputs": {
                "statusCode": 500,
                "body": {
                  "message": "Failed to update collection schedule",
                  "error": "@actions('For_each')?['error']"
                }
              },
              "runAfter": {
                "For_each": [
                  "Failed"
                ]
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionName": "[parameters('AzureSentinelConnectionName')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }        }      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
      ]
    }
  ]
}